# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8284	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $828c	;	($828c - $82bd)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82c0	;	($82c0 - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82f4
  60  82F4
  61  82F4 F5           	push af
  62  82F5 E5           	push hl
  63  82F6
  64  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82F6 21 33 8C     	ld hl,Ctrl_3
  66  82F9 CB 46        	bit 0,(hl)
  67  82FB 28 FE        	jr z,$
  68  82FD              ;! -------------------
  69  82FD
  70  82FD              ; Disparos.
  71  82FD
  72  82FD CD 01 A1     	call Pinta_disparos_Amadeus
  73  8300
  74  8300              ; Shield -----------------------
  75  8300
  76  8300              Temporizacion_shield
  77  8300
  78  8300 21 5D 8C     	ld hl,Shield
  79  8303 7E           	ld a,(hl)
  80  8304 A7           	and a
  81  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  82  8307
  83  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  84  8308
  85  8308 23           	inc hl
  86  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  87  830A
  88  830A 20 17        	jr nz,Incrementa_FRAMES
  89  830C
  90  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  91  830C
  92  830C              Cambio_de_estado
  93  830C
  94  830C              ;	Indica cambio de estado.
  95  830C
  96  830C 23           	inc hl						;	Sitúa en (Shield_3).
  97  830D
  98  830D CB 5E        	bit 3,(hl)
  99  830F 28 05        	jr z,2F
 100  8311
 101  8311 CD F5 90     	call Inicia_Shield
 102  8314
 103  8314 18 0D        	jr Incrementa_FRAMES
 104  8316
 105  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 106  8318
 107  8318              ;	Carga en (Shield_2) la siguiente temporización.
 108  8318
 109  8318 2A 5B 8C     	ld hl,(Puntero_datos_shield)
 110  831B 23           	inc hl
 111  831C 22 5B 8C     	ld (Puntero_datos_shield),hl
 112  831F 7E           	ld a,(hl)
 113  8320 32 5E 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 114  8323
 115  8323              Incrementa_FRAMES
 116  8323
 117  8323 2A 78 5C     	ld hl,(FRAMES)
 118  8326 23           	inc hl
 119  8327 22 78 5C     	ld (FRAMES),hl
 120  832A
 121  832A 7C           	ld a,h
 122  832B B5           	or l
 123  832C 20 04        	jr nz,1F
 124  832E
 125  832E 21 7A 5C     	ld hl,FRAMES_3
 126  8331 34           	inc (hl)
 127  8332
 128  8332 D5           1 push de
 129  8333 C5           	push bc
 130  8334
 131  8334 CD 05 91     	call Actualiza_pantalla
 132  8337
 133  8337 C1           	pop bc
 134  8338 D1           	pop de
 135  8339 E1           	pop hl
 136  833A F1           	pop af
 137  833B
 138  833B FB           	ei
 139  833C
 140  833C C9           	ret
 141  833D
 142  833D              ; --------------------------------------------------------------------------------
 143  833D
 144  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 145  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 146  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 147  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D AE 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BAC 01 01
  18+ 8BAE
  19+ 8BAE 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAF 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BB3 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB7 01 02
  22+ 8BB9 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BBD 01 02
  23+ 8BBF
# file closed: Niveles.asm
 148  8BBF
 149  8BBF              ; --------------------------------------------------------------------------------
 150  8BBF              ;
 151  8BBF              ; 12/05/24
 152  8BBF              ;
 153  8BBF              ; Parámetros DRAW.
 154  8BBF              ;
 155  8BBF
 156  8BBF              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 157  8BBF
 158  8BBF 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 159  8BC0              ;															- Patrón de movimiento.
 160  8BC0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 161  8BC1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 162  8BC2
 163  8BC2 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 164  8BC3              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 165  8BC3
 166  8BC3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 167  8BC3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 168  8BC3              ; Ejemplos.
 169  8BC3
 170  8BC3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 171  8BC3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 172  8BC3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 173  8BC3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 174  8BC3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 175  8BC3
 176  8BC3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 177  8BC4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 178  8BC4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 179  8BC4
 180  8BC4 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 181  8BC6              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 182  8BC6
 183  8BC6 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 184  8BC8
 185  8BC8              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 186  8BC8
 187  8BC8 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 188  8BCA              ;														; _palabras que componen el "movimiento_masticado".
 189  8BCA
 190  8BCA              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 191  8BCA
 192  8BCA 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 193  8BCB              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 194  8BCB              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 195  8BCB              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 196  8BCB              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 197  8BCB
 198  8BCB 00           Ctrl_2 db 0
 199  8BCC              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 200  8BCC              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 201  8BCC              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 202  8BCC              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 203  8BCC              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 204  8BCC              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 205  8BCC              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 206  8BCC              ;
 207  8BCC              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 208  8BCC              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 209  8BCC              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 210  8BCC              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 211  8BCC              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 212  8BCC              ;														BIT 4, ???
 213  8BCC              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 214  8BCC
 215  8BCC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 216  8BCD              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 217  8BCD              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 218  8BCD              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 219  8BCD              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 220  8BCD              ;
 221  8BCD              ; 														DESCRIPCIÖN:
 222  8BCD              ;
 223  8BCD              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 224  8BCD              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 225  8BCD              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 226  8BCD              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 227  8BCD              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 228  8BCD              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 229  8BCD              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 230  8BCD              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 231  8BCD              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 232  8BCD              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 233  8BCD              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 234  8BCD              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 235  8BCD              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 236  8BCD              ;
 237  8BCD              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 238  8BCD              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 239  8BCD              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 240  8BCD
 241  8BCD              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 242  8BCD
 243  8BCD 00           Filas db 0												; Filas. [DRAW]
 244  8BCE 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 245  8BCF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 246  8BD1 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 247  8BD3
 248  8BD3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 249  8BD3
 250  8BD3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 251  8BD4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 252  8BD4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 253  8BD4
 254  8BD4              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 255  8BD4
 256  8BD4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 257  8BD4              ;
 258  8BD4              ;	COLORES: 0 ..... NEGRO
 259  8BD4              ;    		 1 ..... AZUL
 260  8BD4              ; 			 2 ..... ROJO
 261  8BD4              ;			 3 ..... MAGENTA
 262  8BD4              ; 			 4 ..... VERDE
 263  8BD4              ; 			 5 ..... CIAN
 264  8BD4              ;			 6 ..... AMARILLO
 265  8BD4              ; 			 7 ..... BLANCO
 266  8BD4
 267  8BD4 00 00        Indice_Sprite_der defw 0
 268  8BD6 00 00        Indice_Sprite_izq defw 0
 269  8BD8 00 00        Puntero_DESPLZ_der defw 0
 270  8BDA 00 00        Puntero_DESPLZ_izq defw 0
 271  8BDC
 272  8BDC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 273  8BDE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 274  8BDF 00           Columnas db 0
 275  8BE0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 276  8BE2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 277  8BE2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BE3
 279  8BE3              ; variables de control general.
 280  8BE3
 281  8BE3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 282  8BE4
 283  8BE4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 284  8BE4
 285  8BE4              Perfiles_de_velocidad
 286  8BE4
 287  8BE4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 288  8BE5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 289  8BE6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 290  8BE7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 291  8BE8
 292  8BE8              ; Contadores de 16 bits.
 293  8BE8
 294  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 295  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 296  8BEC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 297  8BEE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 298  8BF0
 299  8BF0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 300  8BF0
 301  8BF0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 302  8BF2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 303  8BF4 00 00        Puntero_indice_mov_bucle defw 0							;
 304  8BF6              ;
 305  8BF6              ;
 306  8BF6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 307  8BF7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 308  8BF7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 309  8BF7 00           Incrementa_puntero_backup db 0
 310  8BF8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 311  8BF9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 312  8BF9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 313  8BFA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 314  8BFB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 315  8BFC              ;
 316  8BFC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 317  8BFC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 318  8BFC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 319  8BFC              ;
 320  8BFC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 321  8BFC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 322  8BFC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 323  8BFC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 324  8BFC              ;
 325  8BFC              ;														;	"$ff" ..... Bucle infinito de repetición.
 326  8BFC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 327  8BFC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 328  8BFC
 329  8BFC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 330  8BFD
 331  8BFD              ;														DESCRIPCIÓN:
 332  8BFD              ;
 333  8BFD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 334  8BFD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 335  8BFD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 336  8BFD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 337  8BFD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 338  8BFD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 339  8BFD
 340  8BFD              ;														BIT 3, Recarga de nueva oleada.
 341  8BFD              ;														BIT 4, Recarga de nueva oleada.
 342  8BFD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 343  8BFD              ;														BIT 6, **** Frame completo.
 344  8BFD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 345  8BFD
 346  8BFD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 347  8BFF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 348  8BFF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 349  8BFF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 350  8BFF
 351  8BFF              ; Gestión de ENTIDADES y CAJAS.
 352  8BFF
 353  8BFF 00 00        Puntero_store_caja defw 0
 354  8C01 00 00        Puntero_restore_caja defw 0
 355  8C03 00 00        Indice_restore_caja defw 0
 356  8C05 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 357  8C06 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 358  8C07 00           Entidades_en_curso db 0									; ..... ..... .....
 359  8C08
 360  8C08 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 361  8C0A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 362  8C0C              ;														; _ puntero (Indice_entidades).
 363  8C0C
 364  8C0C              ;---------------------------------------------------------------------------------------------------------------
 365  8C0C              ;
 366  8C0C              ;	13/10/24
 367  8C0C              ;
 368  8C0C              ;	Álbumes.
 369  8C0C
 370  8C0C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 371  8C0E              ;														; _variable para almacenar lo posición del puntero_
 372  8C0E              ; 														; _de pila, SP.
 373  8C0E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 374  8C10              ;														; La utiliza la rutina [Extrae_foto_registros].
 375  8C10
 376  8C10              ; Impresión. ----------------------------------------------------------------------------------------------------
 377  8C10
 378  8C10 00 00        Album_de_pintado defw 0
 379  8C12 00 00        Album_de_borrado defw 0
 380  8C14 00 00        Album_de_pintado_Amadeus defw 0
 381  8C16 00 00        Album_de_borrado_Amadeus defw 0
 382  8C18
 383  8C18 00 00        Album_de_pintado_disparos_Amadeus defw 0
 384  8C1A 00 00        Album_de_borrado_disparos_Amadeus defw 0
 385  8C1C
 386  8C1C 00 00        Album_de_pintado_disparos_Entidades defw 0
 387  8C1E 00 00        Album_de_borrado_disparos_Entidades defw 0
 388  8C20
 389  8C20
 390  8C20 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 391  8C22 00           Num_de_bytes_album_de_disparos db 0
 392  8C23
 393  8C23 07           Numero_de_disparos_de_entidades db 7
 394  8C24
 395  8C24 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 396  8C25 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 397  8C26
 398  8C26 00 00        Techo_Scanlines_album defw 0
 399  8C28 00 00        Techo_Scanlines_album_2 defw 0
 400  8C2A 00           Switch db 0
 401  8C2B 00 00        Techo defw 0
 402  8C2D 00 00        Scanlines_album_SP defw 0
 403  8C2F 00 89        India_SP defw Tabla_de_pintado
 404  8C31 03 89        India_2_SP defw Tabla_de_pintado+3
 405  8C33
 406  8C33 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 407  8C34              ;
 408  8C34              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 409  8C34              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 410  8C34              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 411  8C34              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 412  8C34              ;																Habilita el borrado/pintado de sprites.
 413  8C34              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 414  8C34              ;																_ a la baja.
 415  8C34              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 416  8C34              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 417  8C34              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 418  8C34              ; 																_ el último frame de la explosión de nuestra nave.
 419  8C34              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 420  8C34              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 421  8C34
 422  8C34 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 423  8C35              ;
 424  8C35              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 425  8C35              ;
 426  8C35              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 427  8C35              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 428  8C35              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 429  8C35              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 430  8C35              ;
 431  8C35              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 432  8C35              ;															_ masticados ya generados.
 433  8C35              ;
 434  8C35              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 435  8C35              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 436  8C35              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 437  8C35              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 438  8C35
 439  8C35 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 440  8C36              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 441  8C36              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 442  8C36
 443  8C36
 444  8C36
 445  8C36
 446  8C36
 447  8C36              ; Gestión de Disparos.
 448  8C36
 449  8C36 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 450  8C38 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 451  8C3A 00           Impacto2 db 0											; Byte de control de impactos.
 452  8C3B
 453  8C3B              ;
 454  8C3B              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 455  8C3B              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 456  8C3B              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 457  8C3B              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 458  8C3B
 459  8C3B
 460  8C3B
 461  8C3B
 462  8C3B
 463  8C3B
 464  8C3B
 465  8C3B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 466  8C3D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 467  8C3D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 468  8C3D
 469  8C3D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 470  8C3F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 471  8C3F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 472  8C42              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 473  8C42 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 474  8C45              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 475  8C45
 476  8C45              ;---------------------------------------------------------------------------------------------------------------
 477  8C45
 478  8C45              ; Relojes y temporizaciones.
 479  8C45
 480  8C45 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 481  8C46 05           Clock_explosion_Amadeus db 5
 482  8C47 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 483  8C48
 484  8C48 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 485  8C4A F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 486  8C4C 00           Numero_rnd_disparos db 0
 487  8C4D
 488  8C4D 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 489  8C4F 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 490  8C50              ;														; Repite la oleada de entidades.
 491  8C50 A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 492  8C51 A0           CLOCK_disparos_de_entidades db $a0
 493  8C52
 494  8C52              ;---------------------------------------------------------------------------------------------------------------
 495  8C52
 496  8C52              ; Gestión de NIVELES.
 497  8C52
 498  8C52 00           Nivel db 0												; Nivel actual del juego.
 499  8C53 00 00        Puntero_indice_NIVELES defw 0
 500  8C55 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 501  8C57              ; 														; _ que definen el NIVEL.
 502  8C57
 503  8C57              ; ---------------------------------------------------------------------------------------------------------------
 504  8C57
 505  8C57              ; Temporizaciones Shield.
 506  8C57
 507  8C57 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 508  8C5B 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 509  8C5D 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 510  8C5E 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 511  8C5F 00           Shield_3 db 0
 512  8C60
 513  8C60 06           Lives db 6
 514  8C61
 515  8C61              ; 	INICIO  *************************************************************************************************************************************************************************
 516  8C61              ;
 517  8C61              ;	5/1/24
 518  8C61
 519  8C61              START
 520  8C61
 521  8C61 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 522  8C64 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 523  8C66 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 524  8C68 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 525  8C6A F3           	DI
 526  8C6B
 527  8C6B              ; Limpiamos pantalla.
 528  8C6B
 529  8C6B 3E 07        	ld a,%00000111
 530  8C6D CD 92 94     	call Cls
 531  8C70 CD EA 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 532  8C73
 533  8C73              ; INICIALIZACIÓN.
 534  8C73
 535  8C73 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 536  8C75 CD 37 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 537  8C78
 538  8C78 CD 8E 8E     	call Extrae_numero_aleatorio_y_avanza
 539  8C7B
 540  8C7B 6F           	ld l,a
 541  8C7C 26 00        	ld h,0
 542  8C7E 22 4D 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 543  8C81
 544  8C81              ;	Inicializa 1er Nivel.
 545  8C81
 546  8C81 21 9B 8B     	ld hl,Indice_de_niveles
 547  8C84 22 53 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 548  8C87 CD 67 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 549  8C8A              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 550  8C8A              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 551  8C8A              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 552  8C8A
 553  8C8A              ;	Inicia los álbumes de líneas.
 554  8C8A
 555  8C8A CD 47 90     	call Inicia_albumes_de_lineas
 556  8C8D              ;
 557  8C8D CD 57 90     	call Inicia_albumes_de_lineas_Amadeus
 558  8C90 CD 64 90     	call Inicia_albumes_de_disparos
 559  8C93
 560  8C93 CD AC 92     4 call Inicia_Entidades
 561  8C96 CD 0F 93     	call Inicia_Amadeus
 562  8C99
 563  8C99              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 564  8C99              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 565  8C99              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 566  8C99
 567  8C99 11 74 89     	ld de,Amadeus_BOX
 568  8C9C CD 62 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 569  8C9F CD 52 93     	call Limpiamos_bandeja_DRAW
 570  8CA2
 571  8CA2              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 572  8CA2
 573  8CA2 06 3C        	ld b,60
 574  8CA4 CD 38 9D     2 call Amadeus_a_izquierda
 575  8CA7 10 FB        	djnz 2B
 576  8CA9
 577  8CA9 CD 25 90     	call Genera_datos_de_impresion_Amadeus
 578  8CAC
 579  8CAC              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 580  8CAC
 581  8CAC CD 71 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 582  8CAF              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 583  8CAF
 584  8CAF              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 585  8CAF              ; (Esto se dá cuando se inicia una nueva oleada).
 586  8CAF
 587  8CAF              ;	ld a,(Ctrl_1)
 588  8CAF              ;	bit 3,a
 589  8CAF              ;	jr nz,5F											 ; Loop
 590  8CAF
 591  8CAF              ;	ld de,Amadeus_db
 592  8CAF              ;	call Store_Amadeus
 593  8CAF
 594  8CAF              ; 	INICIA DISPAROS !!!!!
 595  8CAF
 596  8CAF              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 597  8CAF
 598  8CAF              ;5 call Inicia_punteros_de_cajas
 599  8CAF              ;	call Restore_entidad
 600  8CAF
 601  8CAF              ;	ld a,(Ctrl_1)
 602  8CAF              ;	bit 3,a
 603  8CAF              ;	jr z,6F
 604  8CAF
 605  8CAF              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 606  8CAF
 607  8CAF              ;	ld hl,Ctrl_1
 608  8CAF              ;	res 3,(hl)
 609  8CAF              ;	jr Main
 610  8CAF
 611  8CAF              ; Damos por concluida la construcción del FRAME.
 612  8CAF              ;
 613  8CAF
 614  8CAF CD F5 90     	call Inicia_Shield
 615  8CB2
 616  8CB2
 617  8CB2 2A 2D 8C     6 ld hl,(Scanlines_album_SP)
 618  8CB5 22 26 8C     	ld (Techo_Scanlines_album),hl
 619  8CB8
 620  8CB8 2A 12 8C     	ld hl,(Album_de_borrado)
 621  8CBB 22 2D 8C     	ld (Scanlines_album_SP),hl
 622  8CBE
 623  8CBE 21 00 89     	ld hl,Tabla_de_pintado
 624  8CC1 22 2F 8C     	ld (India_SP),hl
 625  8CC4
 626  8CC4 21 33 8C     	ld hl,Ctrl_3
 627  8CC7 CB C6        	set 0,(hl) 											; Indica Frame completo.
 628  8CC9 CB D6        	set 2,(hl)
 629  8CCB CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 630  8CCD
 631  8CCD FB           	ei 													; Ha de apuntar a $5c3a.
 632  8CCE
 633  8CCE 76           	halt
 634  8CCF
 635  8CCF              ; ------------------------------------
 636  8CCF
 637  8CCF              Main
 638  8CCF              ;
 639  8CCF              ; 20/09/24
 640  8CCF
 641  8CCF              ; Gestión de disparos.
 642  8CCF
 643  8CCF              ;	call Motor_de_disparos_entidades
 644  8CCF
 645  8CCF CD 7B 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 646  8CD2 CD B0 A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 647  8CD5
 648  8CD5
 649  8CD5
 650  8CD5
 651  8CD5
 652  8CD5              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 653  8CD5              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 654  8CD5              ; Este hecho lo indica el bit2 de (Impacto2).
 655  8CD5
 656  8CD5 CD 4F A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 657  8CD8
 658  8CD8              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 659  8CD8
 660  8CD8 21 51 8C     	ld hl,CLOCK_disparos_de_entidades
 661  8CDB 35           	dec (hl)
 662  8CDC CC C4 8D     	call z,Autoriza_disparo_de_entidades
 663  8CDF
 664  8CDF 2A 4D 8C     	ld hl,(Clock_next_entity)
 665  8CE2 ED 4B 78 5C  	ld bc,(FRAMES)
 666  8CE6 A7           	and a
 667  8CE7 ED 42        	sbc hl,bc
 668  8CE9 20 16        	jr nz,1F
 669  8CEB
 670  8CEB              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 671  8CEB              ; _ (Clock_next_entity) para la siguiente entidad.
 672  8CEB
 673  8CEB 3A 06 8C     	ld a,(Numero_parcial_de_entidades)
 674  8CEE 47           	ld b,a
 675  8CEF 3A 07 8C     	ld a,(Entidades_en_curso)
 676  8CF2 B8           	cp b
 677  8CF3 28 0C        	jr z,1F
 678  8CF5 30 0A        	jr nc,1F
 679  8CF7
 680  8CF7 3C           	inc a
 681  8CF8 32 07 8C     	ld (Entidades_en_curso),a
 682  8CFB
 683  8CFB              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 684  8CFB
 685  8CFB CD 8E 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 686  8CFE CD AA 8E     	call Define_Clock_next_entity
 687  8D01
 688  8D01 3A 07 8C     1 ld a,(Entidades_en_curso)
 689  8D04 A7           	and a
 690  8D05 CA 78 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 691  8D08 47           	ld b,a												; No hay entidades que gestionar.
 692  8D09
 693  8D09              ; ( Código que ejecutamos con cada entidad: ).
 694  8D09
 695  8D09              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 696  8D09              ;
 697  8D09              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 698  8D09
 699  8D09 21 00 89     	ld hl,Tabla_de_pintado
 700  8D0C 22 2F 8C     	ld (India_SP),hl
 701  8D0F
 702  8D0F 21 33 8C     	ld hl,Ctrl_3
 703  8D12 CB D6        	set 2,(hl)
 704  8D14 CD 50 8E     	call Change
 705  8D17
 706  8D17 C5           2 push bc 												; Nº de entidades en curso.
 707  8D18
 708  8D18 CD C2 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 709  8D1B ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
 710  8D1F
 711  8D1F              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 712  8D1F
 713  8D1F              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 714  8D1F              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 715  8D1F
 716  8D1F 3A 3A 8C     	ld a,(Impacto2)
 717  8D22 CB 5F        	bit 3,a
 718  8D24 C4 54 A0     	call nz,Compara_con_coordenadas_de_disparo
 719  8D27
 720  8D27 3A C3 8B     	ld a,(Impacto)
 721  8D2A CB 4F        	bit 1,a
 722  8D2C C4 D2 91     	call nz,Genera_explosion
 723  8D2F 20 2A        	jr nz,Gestiona_siguiente_entidad
 724  8D31
 725  8D31 3A C3 8B     	ld a,(Impacto)
 726  8D34 A7           	and a
 727  8D35 28 0C        	jr z,3F
 728  8D37
 729  8D37              ; IMPACTO en entidad por colisión con Amadeus.
 730  8D37
 731  8D37              ; 5/7/24
 732  8D37              ; Nota importante:
 733  8D37              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 734  8D37              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 735  8D37              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 736  8D37
 737  8D37 3A 78 89     	ld a,(Impacto_Amadeus)
 738  8D3A A7           	and a
 739  8D3B C4 D2 91     	call nz,Genera_explosion
 740  8D3E 20 1B        	jr nz,Gestiona_siguiente_entidad
 741  8D40
 742  8D40              ; Falsa colisión !!!
 743  8D40
 744  8D40 32 C3 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 745  8D43
 746  8D43              ; -------------------------------------------
 747  8D43
 748  8D43 CD EE 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 749  8D46 CD 30 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 750  8D49 CD DE 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 751  8D4C CD D2 94     	call Genera_datos_de_impresion
 752  8D4F CD 75 93     	call Decrementa_Contador_de_mov_masticados
 753  8D52
 754  8D52              ; -------------------------------------------
 755  8D52
 756  8D52              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 757  8D52
 758  8D52 2A C4 8B     	ld hl,(Puntero_de_impresion)
 759  8D55 CD A6 94     	call Genera_coordenadas
 760  8D58
 761  8D58              ; TODO: Generamos disparo ???
 762  8D58
 763  8D58              ;	ld a,(Permiso_de_disparo_Entidades)
 764  8D58              ;	and a
 765  8D58              ;	call nz,Entidad_genera_disparo_si_procede
 766  8D58
 767  8D58 CD CD A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 768  8D5B
 769  8D5B              Gestiona_siguiente_entidad
 770  8D5B
 771  8D5B CD 47 93      	call Store_Restore_cajas
 772  8D5E C1           	pop bc
 773  8D5F 10 B6        	djnz 2B
 774  8D61
 775  8D61              ; Hemos gestionado todas las entidades.
 776  8D61              ; ----- ----- -----
 777  8D61
 778  8D61 CD 02 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 779  8D64 CD 19 8F     	call Ordena_tabla_de_impresion
 780  8D67 CD 71 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 781  8D6A
 782  8D6A CD BF 8E     	call Borra_diferencia
 783  8D6D
 784  8D6D 3A 33 8C     	ld a,(Ctrl_3)
 785  8D70 CB 5F        	bit 3,a
 786  8D72 20 04        	jr nz,Gestion_de_Amadeus
 787  8D74
 788  8D74 EB           	ex de,hl
 789  8D75 71           	ld (hl),c
 790  8D76 2C           	inc l
 791  8D77 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 792  8D78
 793  8D78              ;! GESTIONA AMADEUS !!!!!!!!!!
 794  8D78
 795  8D78              Gestion_de_Amadeus
 796  8D78
 797  8D78 21 33 8C     	ld hl,Ctrl_3
 798  8D7B CB 76        	bit 6,(hl)
 799  8D7D 28 13        	jr z,Amadeus_vivo
 800  8D7F
 801  8D7F              ; Amadeus ha sido destruido.
 802  8D7F              ; Decrementa (Temp_new_live).
 803  8D7F
 804  8D7F 21 47 8C     	ld hl,Temp_new_live
 805  8D82 35           	dec (hl)
 806  8D83 20 26        	jr nz,End_frame
 807  8D85
 808  8D85              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 809  8D85
 810  8D85 21 60 8C     	ld hl,Lives
 811  8D88 35           	dec (hl)
 812  8D89
 813  8D89              ;! Fin del juego
 814  8D89
 815  8D89 F3           	di
 816  8D8A 28 FE        	jr z,$
 817  8D8C FB           	ei
 818  8D8D
 819  8D8D              ; Nueva nave.
 820  8D8D
 821  8D8D CD F6 8D     	call Reinicia_Amadeus
 822  8D90 18 19        	jr End_frame
 823  8D92
 824  8D92              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 825  8D92
 826  8D92              Amadeus_vivo
 827  8D92
 828  8D92 3A 78 89     	ld a,(Impacto_Amadeus)
 829  8D95 A7           	and a
 830  8D96 C4 02 92     	call nz, Genera_explosion_Amadeus
 831  8D99 20 10        	jr nz, End_frame
 832  8D9B
 833  8D9B CD AF 91     	call Teclado
 834  8D9E
 835  8D9E 21 33 8C     	ld hl,Ctrl_3
 836  8DA1 CB 6E        	bit 5,(hl)
 837  8DA3 28 06        	jr z,End_frame
 838  8DA5
 839  8DA5              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 840  8DA5
 841  8DA5 CD 6B 8E     	call Change_Amadeus
 842  8DA8 CD 25 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 843  8DAB
 844  8DAB              End_frame
 845  8DAB
 846  8DAB              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 847  8DAB              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 848  8DAB
 849  8DAB              ;	call Genera_datos_de_impresion_disparos_Entidades
 850  8DAB CD 33 A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 851  8DAE              ;	call Calcula_bytes_pintado_disparos
 852  8DAE              ;	call Limpia_Album_de_pintado_disparos_Amadeus
 853  8DAE
 854  8DAE              ; ------------ ------------- --------------
 855  8DAE
 856  8DAE              ;	xor a
 857  8DAE              ;	ld (Permiso_de_disparo_Entidades),a
 858  8DAE
 859  8DAE              ;	call Actuaiza_sp_de_disparos_de_entidades
 860  8DAE
 861  8DAE 2A 12 8C     	ld hl,(Album_de_borrado)
 862  8DB1 22 2D 8C     	ld (Scanlines_album_SP),hl
 863  8DB4
 864  8DB4 21 33 8C     	ld hl,Ctrl_3
 865  8DB7 CB C6        	set 0,(hl) 											; Indica Frame completo.
 866  8DB9 CB 9E        	res 3,(hl)
 867  8DBB CB A6        	res 4,(hl)
 868  8DBD
 869  8DBD AF           	xor a
 870  8DBE D3 FE        	out ($fe),a
 871  8DC0
 872  8DC0 76           	halt
 873  8DC1
 874  8DC1              ; ----------------------------------------
 875  8DC1
 876  8DC1              ;	ld a,(Ctrl_1) 										; Existe Loop?
 877  8DC1              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 878  8DC1 CA CF 8C     	jp z,Main
 879  8DC4
 880  8DC4              ;------------------------------------------
 881  8DC4              ;
 882  8DC4              ;	2/10/24
 883  8DC4
 884  8DC4              Autoriza_disparo_de_entidades
 885  8DC4
 886  8DC4 3E 01        	ld a,1
 887  8DC6 32 25 8C     	ld (Permiso_de_disparo_Entidades),a
 888  8DC9
 889  8DC9 3A 50 8C     	ld a,(Repone_CLOCK_disparos)
 890  8DCC FE 19        	cp 25
 891  8DCE 38 02        	jr c,1F
 892  8DD0
 893  8DD0 D6 05        	sub 5
 894  8DD2
 895  8DD2 32 50 8C     1 ld (Repone_CLOCK_disparos),a
 896  8DD5 32 51 8C     	ld (CLOCK_disparos_de_entidades),a
 897  8DD8
 898  8DD8 C9           	ret
 899  8DD9
 900  8DD9              ;------------------------------------------
 901  8DD9              ;
 902  8DD9              ;	14/09/24
 903  8DD9              ;
 904  8DD9              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 905  8DD9
 906  8DD9              Entidad_genera_disparo_si_procede
 907  8DD9
 908  8DD9 2A 4A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 909  8DDC CB 06        	rlc (hl)
 910  8DDE
 911  8DDE DC CF 9F     	call c,Genera_disparo_de_entidad_maldosa
 912  8DE1
 913  8DE1 C9           	ret
 914  8DE2
 915  8DE2              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 916  8DE2              ;
 917  8DE2              ;	30/09/24
 918  8DE2
 919  8DE2              Actuaiza_sp_de_disparos_de_entidades
 920  8DE2
 921  8DE2 2A 4A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 922  8DE5 23           	inc hl
 923  8DE6 22 4A 8C     	ld (Puntero_num_aleatorios_disparos),hl
 924  8DE9
 925  8DE9 11 FD 88     	ld de,Numeros_aleatorios+7
 926  8DEC 7B           	ld a,e
 927  8DED 95           	sub l
 928  8DEE C0           	ret nz
 929  8DEF
 930  8DEF 21 F6 88     1 ld hl,Numeros_aleatorios
 931  8DF2 22 4A 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 932  8DF5 C9           	ret
 933  8DF6
 934  8DF6              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 935  8DF6              ;
 936  8DF6              ;	24/07/24
 937  8DF6
 938  8DF6              Reinicia_Amadeus
 939  8DF6
 940  8DF6              ;	Reinicia posición y estado.
 941  8DF6
 942  8DF6 21 CF 50     	ld hl,$50cf
 943  8DF9 22 79 89     	ld (p.imp.amadeus),hl
 944  8DFC 21 F0 E0     	ld hl,$e0f0
 945  8DFF 22 7B 89     	ld (Pamm_Amadeus),hl
 946  8E02 21 3D 00     	ld hl,$003d
 947  8E05 22 7D 89     	ld (Comm_Amadeus),hl
 948  8E08
 949  8E08              ;	limpiamos el álbum de borrado.
 950  8E08
 951  8E08 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
 952  8E0B
 953  8E0B AF           	xor a
 954  8E0C 77           	ld (hl),a
 955  8E0D
 956  8E0D E5           	push hl
 957  8E0E D1           	pop de
 958  8E0F 13           	inc de
 959  8E10
 960  8E10 01 23 00     	ld bc,35
 961  8E13 ED B0        	ldir
 962  8E15
 963  8E15 CD 25 90     	call Genera_datos_de_impresion_Amadeus
 964  8E18
 965  8E18              ;	Reinicia temporizaciones.
 966  8E18
 967  8E18 CD F5 90     	call Inicia_Shield
 968  8E1B
 969  8E1B 3E 5A        	ld a,90
 970  8E1D 32 5D 8C     	ld (Shield),a
 971  8E20
 972  8E20 3E 64        	ld a,100
 973  8E22 32 47 8C     	ld (Temp_new_live),a
 974  8E25
 975  8E25              ; 	Restauramos el FLAG: Amadeus vivo.
 976  8E25
 977  8E25 21 33 8C     	ld hl,Ctrl_3
 978  8E28 CB B6        	res 6,(hl)
 979  8E2A
 980  8E2A              ;	Fuerza la impresión de la nave en el siguiente frame.
 981  8E2A
 982  8E2A 21 33 8C      	ld hl,Ctrl_3
 983  8E2D CB EE        	set 5,(hl)
 984  8E2F
 985  8E2F C9           	ret
 986  8E30
 987  8E30              ; --------------------------------------------------------------------------------------------------------------
 988  8E30              ;
 989  8E30              ;	12/05/24
 990  8E30
 991  8E30 3A CA 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 992  8E33 CB 27        	sla a
 993  8E35 32 CA 8B     	ld (Velocidad),a
 994  8E38 E6 10        	and $10
 995  8E3A C8           	ret z
 996  8E3B
 997  8E3B              ; Restaura (Velocidad) a razón del nº de vueltas.
 998  8E3B
 999  8E3B 3A C2 8B     	ld a,(Contador_de_vueltas)
1000  8E3E CB 2F        	sra a
1001  8E40 CB 2F        	sra a
1002  8E42 32 CA 8B     	ld (Velocidad),a
1003  8E45
1004  8E45 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1005  8E48 23           	inc hl
1006  8E49 23           	inc hl
1007  8E4A 23           	inc hl
1008  8E4B 23           	inc hl
1009  8E4C 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1010  8E4F
1011  8E4F C9           	ret
1012  8E50
1013  8E50              ; --------------------------------------------------------------------------------------------------------------
1014  8E50              ;
1015  8E50              ;	25/08/24
1016  8E50
1017  8E50              Change
1018  8E50
1019  8E50 3A 2A 8C     	ld a,(Switch)
1020  8E53 EE 01        	xor 1
1021  8E55 32 2A 8C     	ld (Switch),a
1022  8E58 2A 10 8C     	ld hl,(Album_de_pintado)
1023  8E5B ED 5B 12 8C  	ld de,(Album_de_borrado)
1024  8E5F EB           	ex de,hl
1025  8E60 22 10 8C     	ld (Album_de_pintado),hl
1026  8E63 22 2D 8C     	ld (Scanlines_album_SP),hl
1027  8E66 ED 53 12 8C  	ld (Album_de_borrado),de
1028  8E6A C9           	ret
1029  8E6B
1030  8E6B              Change_Amadeus
1031  8E6B
1032  8E6B 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1033  8E6E ED 5B 16 8C  	ld de,(Album_de_borrado_Amadeus)
1034  8E72 EB           	ex de,hl
1035  8E73 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1036  8E76 ED 53 16 8C  	ld (Album_de_borrado_Amadeus),de
1037  8E7A C9           	ret
1038  8E7B
1039  8E7B              Change_Disparos
1040  8E7B
1041  8E7B 2A 18 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1042  8E7E ED 5B 1A 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1043  8E82 EB           	ex de,hl
1044  8E83 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1045  8E86 ED 53 1A 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1046  8E8A              ;	ld (Nivel_scan_disparos_album_de_pintado),hl
1047  8E8A
1048  8E8A CD 8E A0     	call Limpia_album_de_pintado_disparos_Amadeus
1049  8E8D
1050  8E8D C9           	ret
1051  8E8E
1052  8E8E              ; ------------------------------------
1053  8E8E              ;
1054  8E8E              ; 1/05/24
1055  8E8E
1056  8E8E              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1057  8E8E              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1058  8E8E
1059  8E8E              ;	DESTRUYE: HL,DE,A
1060  8E8E              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1061  8E8E
1062  8E8E              ;	Variables implicadas: (RND_SP).
1063  8E8E
1064  8E8E              Extrae_numero_aleatorio_y_avanza
1065  8E8E
1066  8E8E 21 00 89     	ld hl,Tabla_de_pintado
1067  8E91 EB           	ex de,hl
1068  8E92 2A 48 8C     	ld hl,(RND_SP)
1069  8E95 EB           	ex de,hl
1070  8E96 A7           	and a
1071  8E97 ED 52        	sbc hl,de
1072  8E99
1073  8E99 2A 48 8C     	ld hl,(RND_SP)
1074  8E9C 20 06        	jr nz,1F
1075  8E9E
1076  8E9E              ; Sitúa HL al principio de la tabla de nº aleatorios.
1077  8E9E
1078  8E9E 21 F6 88     	ld hl,Numeros_aleatorios
1079  8EA1 22 48 8C     	ld (RND_SP),HL
1080  8EA4
1081  8EA4              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1082  8EA4
1083  8EA4 7E           1 ld a,(hl)
1084  8EA5 23           	inc hl
1085  8EA6 22 48 8C     	ld (RND_SP),hl
1086  8EA9 C9           	ret
1087  8EAA
1088  8EAA              ; ------------------------------------
1089  8EAA              ;
1090  8EAA              ; 1/05/24
1091  8EAA
1092  8EAA              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1093  8EAA              ; (1 a 4 segundos).
1094  8EAA              ; Actualizamos (Clock_next_entity) con A.
1095  8EAA
1096  8EAA              ;	DESTRUYE: A y B.
1097  8EAA              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1098  8EAA              ;			 Actualiza (Clock_next_entity) con A.
1099  8EAA
1100  8EAA              ;	Variables implicadas: (Clock_next_entity).
1101  8EAA
1102  8EAA              ; Notas:
1103  8EAA
1104  8EAA              ; 	$32 1 seg.
1105  8EAA              ; 	$64 2 seg.
1106  8EAA              ; 	$96 3 seg.
1107  8EAA              ; 	$c8 4 seg.
1108  8EAA              ; 	$fa 5 seg.
1109  8EAA
1110  8EAA              ; $ffff 1310,7 seg, 22 minutos.
1111  8EAA
1112  8EAA              ;	$0100  5 seg. aproximadamente.
1113  8EAA              ;	$0200 10 seg. aproximadamente.
1114  8EAA              ;	$0300 15 seg. aproximadamente.
1115  8EAA              ;	$0400 20 seg. aproximadamente.
1116  8EAA              ;	$0500 25 seg. aproximadamente.
1117  8EAA              ;	$0600 30 seg. aproximadamente.
1118  8EAA
1119  8EAA              Define_Clock_next_entity
1120  8EAA
1121  8EAA FE 34        	cp $34
1122  8EAC 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1123  8EAE
1124  8EAE              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1125  8EAE
1126  8EAE 4F           3 ld c,a
1127  8EAF 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1128  8EB1 2A 78 5C     	ld hl,(FRAMES)
1129  8EB4 A7           	and a
1130  8EB5 ED 4A        	adc hl,bc
1131  8EB7 22 4D 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1132  8EBA C9           	ret
1133  8EBB
1134  8EBB 3E 34        1 ld a,$34
1135  8EBD 18 EF        	jr 3B
1136  8EBF
1137  8EBF              ; ------------------------------------
1138  8EBF              ;
1139  8EBF              ; 18/03/24
1140  8EBF
1141  8EBF              Borra_diferencia
1142  8EBF
1143  8EBF ED 4B 2D 8C  	ld bc,(Scanlines_album_SP)
1144  8EC3
1145  8EC3 3A 2A 8C     	ld a,(Switch)
1146  8EC6 A7           	and a
1147  8EC7 28 08        	jr z,2F
1148  8EC9
1149  8EC9 2A 28 8C     	ld hl,(Techo_Scanlines_album_2)
1150  8ECC 11 28 8C     	ld de,Techo_Scanlines_album_2
1151  8ECF 18 06        	jr 3F
1152  8ED1
1153  8ED1 2A 26 8C     2 ld hl,(Techo_Scanlines_album)
1154  8ED4 11 26 8C     	ld de,Techo_Scanlines_album
1155  8ED7
1156  8ED7              ; Diferencia.
1157  8ED7
1158  8ED7 ED 42        3 sbc hl,bc
1159  8ED9
1160  8ED9 C8           	ret z
1161  8EDA D8           	ret c
1162  8EDB
1163  8EDB              ; Nuevo techo, (más bajo que el anterior).
1164  8EDB              ; Fijamos nuevo techo y borramos bytes sobrantes.
1165  8EDB
1166  8EDB EB           	ex de,hl
1167  8EDC
1168  8EDC 71           	ld (hl),c
1169  8EDD 2C           	inc l
1170  8EDE 70           	ld (hl),b
1171  8EDF
1172  8EDF AF           	xor a
1173  8EE0 43           	ld b,e
1174  8EE1
1175  8EE1 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1176  8EE4
1177  8EE4 77           1 ld (hl),a
1178  8EE5 23           	inc hl
1179  8EE6 10 FC        	djnz 1B
1180  8EE8
1181  8EE8              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1182  8EE8
1183  8EE8 21 33 8C     	ld hl,Ctrl_3
1184  8EEB CB DE        	set 3,(hl)
1185  8EED
1186  8EED C9           	ret
1187  8EEE
1188  8EEE              ; --------------------------------------------------------------------------------------------------------------
1189  8EEE              ;
1190  8EEE              ;	26/3/24
1191  8EEE
1192  8EEE              Recauda_informacion_de_entidad_en_curso
1193  8EEE
1194  8EEE              ; Almacena la Coordenada Y de la entidad en curso.
1195  8EEE
1196  8EEE              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1197  8EEE
1198  8EEE 3A C1 8B     	ld a,(Coordenada_y)
1199  8EF1 2A 2F 8C     	ld hl,(India_SP)
1200  8EF4 77           	ld (hl),a
1201  8EF5 2C           	inc l
1202  8EF6
1203  8EF6              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1204  8EF6
1205  8EF6 ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
1206  8EFA
1207  8EFA 73           	ld (hl),e
1208  8EFB 2C           	inc l
1209  8EFC 72           	ld (hl),d
1210  8EFD 2C           	inc l
1211  8EFE
1212  8EFE 22 2F 8C     	ld (India_SP),hl
1213  8F01
1214  8F01 C9           	ret
1215  8F02
1216  8F02              ; --------------------------------------------------------------------------------------------------------------
1217  8F02              ;
1218  8F02              ;	27/03/24
1219  8F02              ;
1220  8F02
1221  8F02              Inicializa_India_y_limpia_Tabla_de_impresion
1222  8F02
1223  8F02 2A 2F 8C     	ld hl,(India_SP)
1224  8F05 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1225  8F08
1226  8F08 79           	ld a,c
1227  8F09 95           	sub l
1228  8F0A 28 06        	jr z,2F
1229  8F0C 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1230  8F0D              ;														; _ y pasamos a inicializar (India_SP).
1231  8F0D AF           	xor a
1232  8F0E
1233  8F0E 77           1 ld (hl),a
1234  8F0F 2C           	inc l
1235  8F10 10 FC        	djnz 1B												; Limpia Tabla.
1236  8F12
1237  8F12 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1238  8F15 22 2F 8C     	ld (India_SP),hl
1239  8F18
1240  8F18 C9           	ret
1241  8F19
1242  8F19              ; --------------------------------------------------------------------------------------------------------------
1243  8F19              ;
1244  8F19              ;	31/3/24
1245  8F19
1246  8F19              Ordena_tabla_de_impresion
1247  8F19
1248  8F19              ; 5794 T/states.
1249  8F19              ; 6278 T/states.
1250  8F19              ; 5310 T/states.
1251  8F19
1252  8F19              ; Inicializamos punteros (India_SP) e (India_2_SP).
1253  8F19              ; Inicializamos contador de comparaciones, [C].
1254  8F19              ; Cargamos los registros A y B para efectuar comparación.
1255  8F19
1256  8F19 FD 2E 00     	ld iyl,0
1257  8F1C
1258  8F1C 3A 07 8C     	ld a,(Entidades_en_curso)
1259  8F1F FE 04        	cp 4 	;	4
1260  8F21 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1261  8F22
1262  8F22 3D           	dec a
1263  8F23 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1264  8F24 51           	ld d,c 										; Copia de respaldo.
1265  8F25
1266  8F25 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1267  8F26
1268  8F26 21 03 89     	ld hl,Tabla_de_pintado+3
1269  8F29 46           	ld b,(hl)
1270  8F2A 22 31 8C     	ld (India_2_SP),hl
1271  8F2D
1272  8F2D B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1273  8F2E DC 56 8F     	call c, Avanza_India_2_SP
1274  8F31 CC 56 8F     	call z, Avanza_India_2_SP
1275  8F34
1276  8F34 FD 2D        	dec iyl
1277  8F36 28 18        	jr z,2F
1278  8F38
1279  8F38
1280  8F38              ; --------------------------------------------------------------------------------------------------------------
1281  8F38              ;
1282  8F38              ;	7/4/24
1283  8F38
1284  8F38              Trueque
1285  8F38
1286  8F38              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1287  8F38              ;  			A contiene en nº de fila de (India_SP).
1288  8F38              ;			HL contiene (India_2_SP).
1289  8F38
1290  8F38 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1291  8F39 E5           	push hl										; Preservo (India_2_SP).
1292  8F3A
1293  8F3A ED 5B 2F 8C  	ld de,(India_SP)
1294  8F3E EB           	ex de,hl
1295  8F3F 70           	ld (hl),b
1296  8F40 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1297  8F41
1298  8F41 CD 82 8F     	call Intercambia_1_byte
1299  8F44 CD 82 8F     	call Intercambia_1_byte
1300  8F47
1301  8F47
1302  8F47              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1303  8F47              ; Recuperamos (India_2_SP) en HL.
1304  8F47
1305  8F47 2A 2F 8C     	ld hl,(India_SP)
1306  8F4A 7E           	ld a,(hl)
1307  8F4B
1308  8F4B E1           	pop hl
1309  8F4C D1           	pop de
1310  8F4D
1311  8F4D              ; --------------------------------------------------------------------------------------------------------------
1312  8F4D
1313  8F4D CD 56 8F     	call Avanza_India_2_SP
1314  8F50
1315  8F50 14           2 inc d
1316  8F51 15           	dec d
1317  8F52 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1318  8F53 18 D8        	jr 1B
1319  8F55
1320  8F55 C9           	ret
1321  8F56
1322  8F56              ; ----- ----- ----- ----- -----
1323  8F56
1324  8F56              Avanza_India_2_SP
1325  8F56
1326  8F56 0D           	dec c
1327  8F57 28 0A        	jr z,Avanza_punteros_indios
1328  8F59
1329  8F59 FD 2C        	inc iyl
1330  8F5B
1331  8F5B 2C           	inc l
1332  8F5C 2C           	inc l
1333  8F5D 2C           	inc l
1334  8F5E
1335  8F5E 46           	ld b,(hl)
1336  8F5F 22 31 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1337  8F62
1338  8F62 C9           	ret
1339  8F63
1340  8F63              ; ----- ----- ----- ----- -----
1341  8F63
1342  8F63              Avanza_punteros_indios
1343  8F63
1344  8F63 15           	dec d
1345  8F64 28 15        	jr z,Prepara_salida
1346  8F66
1347  8F66 4A           	ld c,d
1348  8F67
1349  8F67 2A 2F 8C     	ld hl,(India_SP)
1350  8F6A 2C           	inc l
1351  8F6B 2C           	inc l
1352  8F6C 2C           	inc l
1353  8F6D 7E           	ld a,(hl)
1354  8F6E 22 2F 8C     	ld (India_SP),hl
1355  8F71
1356  8F71 2C           	inc l
1357  8F72 2C           	inc l
1358  8F73 2C           	inc l
1359  8F74 46           	ld b,(hl)
1360  8F75 22 31 8C     	ld (India_2_SP),hl
1361  8F78
1362  8F78 FD 2C        	inc iyl
1363  8F7A
1364  8F7A C9           	ret
1365  8F7B
1366  8F7B              Prepara_salida
1367  8F7B
1368  8F7B 21 00 89     	ld hl,Tabla_de_pintado
1369  8F7E 22 2F 8C     	ld (India_SP),hl
1370  8F81 C9           	ret
1371  8F82
1372  8F82
1373  8F82 2C           Intercambia_1_byte inc l
1374  8F83 1C           	inc e
1375  8F84 46           	ld b,(hl)
1376  8F85 1A           	ld a,(de)
1377  8F86 EB           	ex de,hl
1378  8F87 70           	ld (hl),b
1379  8F88 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1380  8F89 C9           	ret
1381  8F8A
1382  8F8A              ; -----------------------------------------------------------------------------------
1383  8F8A              ;
1384  8F8A              ;	20/01/24
1385  8F8A              ;
1386  8F8A              ;
1387  8F8A
1388  8F8A              Construye_movimientos_masticados_entidad
1389  8F8A
1390  8F8A 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1391  8F8D E5           	push hl
1392  8F8E CD D1 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1393  8F91              ;															; _ el (Contador_de_mov_masticados).
1394  8F91 CD 8D 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1395  8F94              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1396  8F94 CD BE 99     	call Recompone_posicion_inicio
1397  8F97
1398  8F97 CD EE 96     1 call Draw
1399  8F9A CD B6 8F     	call Guarda_movimiento_masticado
1400  8F9D
1401  8F9D CD 6B 9D     	call Movimiento
1402  8FA0
1403  8FA0 3A 33 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1404  8FA3 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1405  8FA5 28 F0        	jr z,1B
1406  8FA7
1407  8FA7              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1408  8FA7              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1409  8FA7
1410  8FA7 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1411  8FA8 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1412  8FAB
1413  8FAB              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1414  8FAB
1415  8FAB CD CF 9E     	call Situa_en_contador_general_de_mov_masticados
1416  8FAE
1417  8FAE              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1418  8FAE              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1419  8FAE
1420  8FAE ED 4B C8 8B  	ld bc,(Contador_de_mov_masticados)
1421  8FB2
1422  8FB2 71           	ld (hl),c
1423  8FB3 23           	inc hl
1424  8FB4 70           	ld (hl),b
1425  8FB5
1426  8FB5 C9           	ret
1427  8FB6
1428  8FB6              ; -----------------------------------------------------------------------------------
1429  8FB6              ;
1430  8FB6              ;	28/12/23
1431  8FB6              ;
1432  8FB6              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1433  8FB6              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1434  8FB6
1435  8FB6              Guarda_movimiento_masticado
1436  8FB6
1437  8FB6 ED 73 0C 8C  	ld (Stack),sp
1438  8FBA ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1439  8FBE
1440  8FBE DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1441  8FC0 FD E5            push iy 												; Pushea Puntero_objeto.
1442  8FC2
1443  8FC2 ED 7B 0C 8C      ld sp,(Stack)
1444  8FC6
1445  8FC6 2A C8 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1446  8FC9 23           	inc hl
1447  8FCA 22 C8 8B     	ld (Contador_de_mov_masticados),hl
1448  8FCD
1449  8FCD CD D1 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1450  8FD0              ;															; _ el (Contador_de_mov_masticados).
1451  8FD0 C9               ret
1452  8FD1
1453  8FD1              ; --------------------------------------------------------------------------------------------------------------
1454  8FD1              ;
1455  8FD1              ;	12/1/24
1456  8FD1              ;
1457  8FD1              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1458  8FD1
1459  8FD1              Actualiza_Puntero_de_almacen_de_mov_masticados
1460  8FD1
1461  8FD1 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1462  8FD4 01 04 00     	ld bc,4
1463  8FD7 A7           	and a
1464  8FD8 ED 4A        	adc hl,bc
1465  8FDA 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1466  8FDD C9           	ret
1467  8FDE
1468  8FDE              ; --------------------------------------------------------------------------------------------------------------
1469  8FDE              ;
1470  8FDE              ;	24/03/24
1471  8FDE              ;
1472  8FDE              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1473  8FDE              ;
1474  8FDE              ;	IX contiene el puntero de impresión.
1475  8FDE              ;	DE contiene (Puntero_objeto).
1476  8FDE
1477  8FDE
1478  8FDE              Cargamos_registros_con_mov_masticado
1479  8FDE
1480  8FDE ED 73 0C 8C  	ld (Stack),sp
1481  8FE2 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1482  8FE6
1483  8FE6 D1           	pop de 															; DE contiene Puntero_objeto
1484  8FE7 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1485  8FE9
1486  8FE9 ED 73 C6 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1487  8FED ED 7B 0C 8C  	ld sp,(Stack)
1488  8FF1
1489  8FF1 7B           	ld a,e
1490  8FF2 82           	add d															; Comprueba si ya no hay datos en el almacén.
1491  8FF3
1492  8FF3 CC 7D 93     	call z,Reinicia_entidad_maliciosa
1493  8FF6
1494  8FF6 C9           	ret
1495  8FF7
1496  8FF7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1497  8FF7              ;
1498  8FF7              ;	22/7/24
1499  8FF7
1500  8FF7              Cargamos_registros_con_explosion
1501  8FF7
1502  8FF7
1503  8FF7 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1504  8FFA CD 87 90     	call Extrae_address
1505  8FFD
1506  8FFD 5D           	ld e,l
1507  8FFE 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1508  8FFF
1509  8FFF DD 2A C4 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1510  9003
1511  9003 C9           	ret
1512  9004
1513  9004
1514  9004              Cargamos_registros_con_explosion_Amadeus
1515  9004
1516  9004 2A 7B 89     	ld hl,(Pamm_Amadeus)
1517  9007 CD 87 90     	call Extrae_address
1518  900A
1519  900A 5D           	ld e,l
1520  900B 54           	ld d,h
1521  900C
1522  900C DD 2A 79 89  	ld ix,(p.imp.amadeus)
1523  9010
1524  9010 C9           	ret
1525  9011
1526  9011              ; --------------------------------------------------------------------------------------------------------------
1527  9011              ;
1528  9011              ;	17/06/24
1529  9011              ;
1530  9011              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1531  9011              ;
1532  9011              ;	IX contiene el puntero de impresión.
1533  9011              ;	DE contiene (Puntero_objeto).
1534  9011
1535  9011
1536  9011              Cargamos_registros_con_mov_masticado_Amadeus
1537  9011
1538  9011 ED 73 0C 8C  	ld (Stack),sp
1539  9015 ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1540  9019 D1           	pop de 															; DE contiene Puntero_objeto
1541  901A DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1542  901C DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1543  9020 ED 7B 0C 8C  	ld sp,(Stack)
1544  9024 C9           	ret
1545  9025
1546  9025              ; ---------------------------------------------------------------------------------------------------------------------
1547  9025              ;
1548  9025              ;	18/6/24
1549  9025              ;
1550  9025              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1551  9025
1552  9025              Genera_datos_de_impresion_Amadeus
1553  9025
1554  9025 3A 78 89     	ld a,(Impacto_Amadeus)
1555  9028 A7           	and a
1556  9029 20 03        	jr nz,1F
1557  902B
1558  902B              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1559  902B              ; _apuntando a la correspondiente explosión.
1560  902B
1561  902B CD 11 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1562  902E
1563  902E DD 7D        1 ld a,ixl
1564  9030 E6 1F        	and $1f
1565  9032 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1566  9035
1567  9035 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1568  9038 E5           	push hl
1569  9039
1570  9039 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1571  903C 22 2D 8C     	ld (Scanlines_album_SP),hl
1572  903F
1573  903F CD D2 94     	call Genera_datos_de_impresion
1574  9042
1575  9042 E1           	pop hl
1576  9043 22 2D 8C     	ld (Scanlines_album_SP),hl
1577  9046
1578  9046 C9           	ret
1579  9047
1580  9047              ; ---------------------------------------------------------------------------------------------------------------------
1581  9047              ;
1582  9047              ;	13/03/24
1583  9047              ;
1584  9047              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1585  9047
1586  9047              Inicia_albumes_de_lineas
1587  9047
1588  9047 21 00 80     	ld hl,Scanlines_album
1589  904A 22 10 8C     	ld (Album_de_pintado),hl
1590  904D 22 2D 8C     	ld (Scanlines_album_SP),hl
1591  9050
1592  9050 21 1A 81     	ld hl,Scanlines_album_2
1593  9053 22 12 8C     	ld (Album_de_borrado),hl
1594  9056
1595  9056 C9           	ret
1596  9057
1597  9057              Inicia_albumes_de_lineas_Amadeus
1598  9057
1599  9057 21 34 82     	ld hl,Amadeus_scanlines_album
1600  905A 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1601  905D 21 58 82     	ld hl,Amadeus_scanlines_album_2
1602  9060 22 16 8C     	ld (Album_de_borrado_Amadeus),hl
1603  9063
1604  9063 C9           	ret
1605  9064
1606  9064              Inicia_albumes_de_disparos
1607  9064
1608  9064 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1609  9067 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1610  906A 21 84 82     	ld hl,Amadeus_disparos_scanlines_album_2
1611  906D 22 1A 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1612  9070
1613  9070 C9           	ret
1614  9071
1615  9071              ; ---------------------------------------------------------------------------------------------------------------------
1616  9071              ;
1617  9071              ; 8/1/23
1618  9071              ;
1619  9071              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1620  9071              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1621  9071              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1622  9071
1623  9071              ; Destruye HL y DE !!!!!
1624  9071
1625  9071              Inicia_punteros_de_cajas
1626  9071
1627  9071 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1628  9074 CD 87 90         call Extrae_address
1629  9077 22 FF 8B         ld (Puntero_store_caja),hl
1630  907A 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1631  907D 22 03 8C     	ld (Indice_restore_caja),hl
1632  9080 CD 87 90     	call Extrae_address
1633  9083 22 01 8C     	ld (Puntero_restore_caja),hl
1634  9086 C9               ret
1635  9087
1636  9087              ; *************************************************************************************************************************************************************
1637  9087
1638  9087              ;
1639  9087              ; 20/10/22
1640  9087              ;
1641  9087              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1642  9087              ;
1643  9087              ; Destruye el puntero y DE !!!!!
1644  9087
1645  9087 5E           Extrae_address ld e,(hl)
1646  9088 23           	inc hl
1647  9089 56           	ld d,(hl)
1648  908A 2B           	dec hl
1649  908B EB           	ex de,hl
1650  908C C9           	ret
1651  908D
1652  908D              ; *************************************************************************************************************************************************************
1653  908D              ;
1654  908D              ;	20/1/24
1655  908D              ;
1656  908D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1657  908D              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1658  908D              ;
1659  908D              ;   Destruye HL y BC !!!!!,
1660  908D              ;
1661  908D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1662  908D              ;					"0" ..... Izquierda.
1663  908D
1664  908D              Inicia_Puntero_objeto
1665  908D
1666  908D 3A DE 8B     	ld a,(Cuad_objeto)
1667  9090 E6 01        	and 1
1668  9092 F5           	push af
1669  9093 CC AF 90     	call z,Inicia_puntero_objeto_izq
1670  9096 F1           	pop af
1671  9097 C8           	ret z
1672  9098 CD 9C 90     	call Inicia_puntero_objeto_der
1673  909B C9           	ret
1674  909C
1675  909C              ; Arrancamos desde la parte izquierda de la pantalla.
1676  909C              ; Iniciamos (Indice_Sprite_der).
1677  909C
1678  909C 2A D4 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1679  909F 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
1680  90A2 CD 87 90     	call Extrae_address
1681  90A5 22 D1 8B     	ld (Puntero_objeto),hl
1682  90A8
1683  90A8 2A D6 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1684  90AB 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1685  90AE C9           	ret
1686  90AF
1687  90AF              ; Arrancamos desde la parte derecha de la pantalla.
1688  90AF              ; Iniciamos (Indice_Sprite_izq).
1689  90AF
1690  90AF 2A D6 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1691  90B2 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1692  90B5 CD 87 90     	call Extrae_address
1693  90B8 22 D1 8B     	ld (Puntero_objeto),hl
1694  90BB
1695  90BB 2A D4 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1696  90BE 22 D8 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1697  90C1 C9           	ret
1698  90C2
1699  90C2              ; **************************************************************************************************
1700  90C2              ;
1701  90C2              ;	06/07/24
1702  90C2              ;
1703  90C2              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1704  90C2
1705  90C2              Restore_entidad
1706  90C2
1707  90C2 2A FF 8B     	ld hl,(Puntero_store_caja)
1708  90C5 7E           	ld a,(hl)
1709  90C6 A7           	and a
1710  90C7 CC D5 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1711  90CA 28 F6        	jr z,Restore_entidad
1712  90CC
1713  90CC 11 BF 8B     	ld de,Bandeja_DRAW
1714  90CF 01 0C 00     	ld bc,12
1715  90D2 ED B0        	ldir
1716  90D4 C9           	ret
1717  90D5
1718  90D5              ; **************************************************************************************************
1719  90D5              ;
1720  90D5              ;	08/05/23
1721  90D5              ;
1722  90D5              ;	Incrementamos los dos punteros de entidades. (+1).
1723  90D5
1724  90D5              Incrementa_punteros_de_cajas
1725  90D5
1726  90D5 2A 01 8C     	ld hl,(Puntero_restore_caja)
1727  90D8 22 FF 8B     	ld (Puntero_store_caja),hl
1728  90DB 2A 03 8C     	ld hl,(Indice_restore_caja)
1729  90DE 23           	inc hl
1730  90DF 23           	inc hl
1731  90E0 22 03 8C     	ld (Indice_restore_caja),hl
1732  90E3 CD 87 90         call Extrae_address
1733  90E6 22 01 8C         ld (Puntero_restore_caja),hl
1734  90E9 C9               ret
1735  90EA
1736  90EA              ; -----------------------------------------------------------
1737  90EA
1738  90EA              ; Teclado.
1739  90EA
1740  90EA 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1741  90EC DB FE        	in a,($fe)
1742  90EE E6 01        	and $01
1743  90F0 28 02        	jr z,1f
1744  90F2 18 F6        	jr Pulsa_ENTER
1745  90F4 C9           1 ret
1746  90F5
1747  90F5              ; **************************************************************************************************
1748  90F5              ;
1749  90F5              ; Temporización.
1750  90F5
1751  90F5              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1752  90F5              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1753  90F5              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1754  90F5              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1755  90F5
1756  90F5              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1757  90F5              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1758  90F5              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1759  90F5
1760  90F5              ; A partir de $4f61 no hace falta DELAY.
1761  90F5
1762  90F5              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1763  90F5
1764  90F5              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1765  90F5              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1766  90F5              ;	LD A,B
1767  90F5              ;	AND A
1768  90F5              ;	JR NZ,wait
1769  90F5              ;	RET
1770  90F5
1771  90F5              ; ---------------------------------------------------------------------------------------------------------------
1772  90F5              ;
1773  90F5              ;	13/07/24
1774  90F5              ;
1775  90F5
1776  90F5              Inicia_Shield
1777  90F5
1778  90F5 21 57 8C     	ld hl,Datos_Shield
1779  90F8 22 5B 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1780  90FB
1781  90FB 7E           	ld a,(hl)
1782  90FC 32 5E 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1783  90FF
1784  90FF 3E 01        	ld a,1
1785  9101 32 5F 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1786  9104
1787  9104 C9           	ret
1788  9105
1789  9105              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1790  9105              ;
1791  9105              ;	4/6/24
1792  9105              ;
1793  9105              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1794  9105              ;
1795  9105              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1796  9105              ;
1797  9105
1798  9105              Actualiza_pantalla
1799  9105
1800  9105 3E 02        	ld a,2
1801  9107 D3 FE        	out ($fe),a
1802  9109
1803  9109 3A 33 8C     	ld a,(Ctrl_3)
1804  910C CB 57        	bit 2,a
1805  910E 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1806  9110
1807  9110              Borrando_entidades
1808  9110
1809  9110 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1810  9113 CD 87 90     	call Extrae_address
1811  9116 24           	inc h
1812  9117 25           	dec h
1813  9118 28 05        	jr z,Pintando_entidades
1814  911A CD CB 95     	call Pinta_Sprites
1815  911D 18 F1        	jr Borrando_entidades
1816  911F
1817  911F              Pintando_entidades
1818  911F
1819  911F 2A 2F 8C     	ld hl,(India_SP)
1820  9122 2C           	inc l
1821  9123 CD 87 90     	call Extrae_address
1822  9126 24           	inc h
1823  9127 25           	dec h
1824  9128 28 0E        	jr z,Ejecuta_escudo
1825  912A 1C           	inc e
1826  912B 1C           	inc e
1827  912C ED 53 2F 8C  	ld (India_SP),de
1828  9130 CD 87 90     	call Extrae_address
1829  9133 CD CB 95     	call Pinta_Sprites
1830  9136 18 E7        	jr Pintando_entidades
1831  9138
1832  9138              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1833  9138
1834  9138              Ejecuta_escudo
1835  9138
1836  9138 3A 5D 8C     	ld a,(Shield)
1837  913B A7           	and a
1838  913C 20 2F        	jr nz,Aplica_Shield
1839  913E
1840  913E              Borrando_Amadeus
1841  913E
1842  913E 21 33 8C     	ld hl,Ctrl_3
1843  9141 CB 6E        	bit 5,(hl)
1844  9143 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1845  9145
1846  9145 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1847  9148 CD 87 90     	call Extrae_address
1848  914B 24           	inc h
1849  914C 25           	dec h
1850  914D 28 03        	jr z,Pintando_Amadeus
1851  914F CD CB 95     	call Pinta_Sprites
1852  9152
1853  9152              Pintando_Amadeus
1854  9152
1855  9152 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1856  9155 CD 87 90     	call Extrae_address
1857  9158 24           	inc h
1858  9159 25           	dec h
1859  915A 28 03        	jr z,1F
1860  915C CD CB 95     	call Pinta_Sprites
1861  915F
1862  915F              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1863  915F
1864  915F 21 33 8C     1 ld hl,Ctrl_3
1865  9162 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1866  9164 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1867  9166 CB AE        	res 5,(hl)
1868  9168
1869  9168 3E 01        	ld a,1												; Borde azul.
1870  916A D3 FE        	out ($fe),a
1871  916C
1872  916C C9           	ret
1873  916D
1874  916D              Aplica_Shield
1875  916D
1876  916D              ;	Bit 1 "1" (Shield_3) Sólo borra.
1877  916D              ;		  "0"     ""     Borra/Pinta.
1878  916D              ;	Bit 2    ""  RET.	 No borra, no pinta.
1879  916D
1880  916D 21 5F 8C     	ld hl,Shield_3
1881  9170
1882  9170 CB 5E        	bit 3,(hl)
1883  9172 20 DE        	jr nz,Pintando_Amadeus
1884  9174
1885  9174 CB 56        	bit 2,(hl)
1886  9176 20 E7        	jr nz,1B
1887  9178
1888  9178 CB 4E        	bit 1,(hl)
1889  917A C4 81 91     	call nz,Borra_Amadeus_shield
1890  917D
1891  917D 28 BF        	jr z,Borrando_Amadeus
1892  917F 18 DE        	jr 1B
1893  9181
1894  9181              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1895  9181
1896  9181              Borra_Amadeus_shield
1897  9181
1898  9181 3A 33 8C     	ld a,(Ctrl_3)
1899  9184 CB 6F        	bit 5,a
1900  9186 28 08        	jr z,1F
1901  9188
1902  9188 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1903  918B CD 87 90     	call Extrae_address
1904  918E 18 06        	jr 2F
1905  9190
1906  9190 2A 14 8C     1 ld hl,(Album_de_pintado_Amadeus)
1907  9193 CD 87 90     	call Extrae_address
1908  9196
1909  9196 CD CB 95     2 call Pinta_Sprites
1910  9199
1911  9199 AF           	xor a
1912  919A 3C           	inc a											; Asegura NZ en la salida de la rutina.
1913  919B
1914  919B C9           	ret
1915  919C
1916  919C              Pinta_Amadeus_shield
1917  919C
1918  919C 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1919  919F CD 87 90     	call Extrae_address
1920  91A2 CD CB 95     	call Pinta_Sprites
1921  91A5
1922  91A5 AF           	xor a
1923  91A6 3C           	inc a											; Asegura NZ en la salida de la rutina.
1924  91A7
1925  91A7 C9           	ret
1926  91A8
1927  91A8              Borra_Pinta_Amadeus_shield
1928  91A8
1929  91A8 CD 81 91     	call Borra_Amadeus_shield
1930  91AB CD 9C 91     	call Pinta_Amadeus_shield
1931  91AE C9           	ret
1932  91AF
1933  91AF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1934  91AF              ;
1935  91AF              ;	19/6/24
1936  91AF              ;
1937  91AF
1938  91AF              Teclado
1939  91AF
1940  91AF              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1941  91AF
1942  91AF 3E F7        	ld a,$f7												; "5" para disparar.
1943  91B1 DB FE        	in a,($fe)
1944  91B3 E6 10        	and $10
1945  91B5
1946  91B5 CC 52 A1     	call z,Genera_disparo_Amadeus
1947  91B8
1948  91B8 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1949  91BA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1950  91BC E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1951  91BE CC 38 9D         call z,Amadeus_a_izquierda
1952  91C1
1953  91C1 3E F7        	ld a,$f7
1954  91C3 DB FE        	in a,($fe)
1955  91C5 E6 01        	and $01
1956  91C7 C8           	ret z
1957  91C8
1958  91C8 3E F7        	ld a,$f7
1959  91CA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1960  91CC E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1961  91CE CC 50 9D     	call z,Amadeus_a_derecha
1962  91D1
1963  91D1 C9           	ret
1964  91D2
1965  91D2              ; ------------------------------------------------------------------------------------------------------------------------
1966  91D2              ;
1967  91D2              ;	06/07/24
1968  91D2              ;
1969  91D2
1970  91D2              Genera_explosion
1971  91D2
1972  91D2 21 45 8C     	ld hl,Clock_explosion
1973  91D5 35           	dec (hl)
1974  91D6 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1975  91D8
1976  91D8              Borra_entidad_colisionada
1977  91D8
1978  91D8 CD EE 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1979  91DB CD F7 8F     	call Cargamos_registros_con_explosion
1980  91DE CD D2 94     	call Genera_datos_de_impresion
1981  91E1
1982  91E1 AF           	xor a
1983  91E2 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1984  91E3
1985  91E3 C9           	ret
1986  91E4
1987  91E4              Siguiente_frame_explosion
1988  91E4
1989  91E4 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1990  91E6
1991  91E6              ; Avanza Frame de explosión.
1992  91E6
1993  91E6 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1994  91E9 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1995  91EC
1996  91EC 79           	ld a,c
1997  91ED 95           	sub l
1998  91EE 20 0B        	jr nz,1F
1999  91F0
2000  91F0              ; Fín de la entidad !!!!!!!!!!!!!
2001  91F0
2002  91F0 21 06 8C     	ld hl,Numero_parcial_de_entidades
2003  91F3 35           	dec (hl)
2004  91F4 23           	inc hl
2005  91F5 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2006  91F6
2007  91F6 CD 52 93     	call Limpiamos_bandeja_DRAW
2008  91F9 18 DD        	jr Borra_entidad_colisionada
2009  91FB
2010  91FB 23           1 inc hl
2011  91FC 23           	inc hl
2012  91FD 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2013  9200 18 D6        	jr Borra_entidad_colisionada
2014  9202
2015  9202              ; ----- ----- ----- ----- -----
2016  9202
2017  9202              Genera_explosion_Amadeus
2018  9202
2019  9202 21 46 8C     	ld hl,Clock_explosion_Amadeus
2020  9205 35           	dec (hl)
2021  9206 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2022  9208
2023  9208              Borra_Amadeus_impactado
2024  9208
2025  9208 CD 6B 8E     	call Change_Amadeus
2026  920B CD 04 90     	call Cargamos_registros_con_explosion_Amadeus
2027  920E CD 25 90     	call Genera_datos_de_impresion_Amadeus
2028  9211
2029  9211 21 33 8C     	ld hl,Ctrl_3
2030  9214 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2031  9216
2032  9216 AF           	xor a
2033  9217 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2034  9218
2035  9218 C9           	ret
2036  9219
2037  9219              Siguiente_frame_explosion_Amadeus
2038  9219
2039  9219 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2040  921B
2041  921B              ; Avanza Frame de explosión.
2042  921B
2043  921B 2A 7B 89     	ld hl,(Pamm_Amadeus)
2044  921E 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2045  9221
2046  9221 79           	ld a,c
2047  9222 95           	sub l
2048  9223 20 0B        	jr nz,1F
2049  9225
2050  9225              ; Fín de Amadeus !!!!!!!!!!!!!
2051  9225              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2052  9225
2053  9225 AF           	xor a
2054  9226 32 78 89     	ld (Impacto_Amadeus),a
2055  9229 21 33 8C     	ld hl,Ctrl_3
2056  922C CB F6        	set 6,(hl)
2057  922E
2058  922E 18 D8        	jr Borra_Amadeus_impactado
2059  9230
2060  9230 23           1 inc hl
2061  9231 23           	inc hl
2062  9232 22 7B 89     	ld (Pamm_Amadeus),hl
2063  9235 18 D1        	jr Borra_Amadeus_impactado
2064  9237
2065  9237              ; ---------------------------------------------------------------
2066  9237
2067  9237              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9237              ; ******************************************************************************************************************************************************************************************
   2+ 9237              ;
   3+ 9237              ;   21/04/24
   4+ 9237              ;
   5+ 9237              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9237              ;   (XOR) bit a bit.
   7+ 9237              ;
   8+ 9237              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9237
  10+ 9237              Derivando_RND
  11+ 9237
  12+ 9237 21 F6 88         ld hl,Numeros_aleatorios
  13+ 923A
  14+ 923A ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 923C C5               push bc
  16+ 923D              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 923D 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9240              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9240
  20+ 9240 A7           6 and a                                 ; Carry a "0".
  21+ 9241 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9243 30 02            jr nc,1F
  23+ 9245
  24+ 9245 CB C1            set 0,c
  25+ 9247
  26+ 9247 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9248 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 924A 5F               ld e,a
  29+ 924B
  30+ 924B 7A               ld a,d
  31+ 924C E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 924E 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9250
  34+ 9250 CB 3F            srl a
  35+ 9252
  36+ 9252 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9253
  38+ 9253 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9254 28 04            jr z,4F
  40+ 9256
  41+ 9256 CB FF            set 7,a
  42+ 9258 18 02            jr 5F
  43+ 925A
  44+ 925A CB BF        4 res 7,a
  45+ 925C
  46+ 925C CB 21        5 sla c
  47+ 925E 10 E0            djnz 6B
  48+ 9260
  49+ 9260 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9261
  51+ 9261 77               ld (hl),a
  52+ 9262 23               inc hl
  53+ 9263 C1               pop bc
  54+ 9264 10 D4            djnz 3B
  55+ 9266
  56+ 9266 C9               ret
  57+ 9267
  58+ 9267
  59+ 9267
# file closed: RND_Derivando.asm
2068  9267              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9267              ;---------------------------------------------------------------------------------------------------------------
   2+ 9267              ;
   3+ 9267              ;   8/3/24
   4+ 9267              ;
   5+ 9267              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9267              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9267              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9267              ;	_ de la 1ª entidad del Nivel.
   9+ 9267              ;
  10+ 9267              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9267
  12+ 9267              ;	MODIFICA: HL,DE y A.
  13+ 9267              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9267
  15+ 9267              Inicializa_Nivel
  16+ 9267
  17+ 9267 2A 53 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 926A CD 87 90     	call Extrae_address
  19+ 926D 7E           	ld a,(hl)
  20+ 926E 32 05 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9271 23           	inc hl
  22+ 9272 CD 7F 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9275 22 55 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9278 CD 88 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 927B
  26+ 927B CD 99 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 927E C9           	ret
  28+ 927F
  29+ 927F              ; ----------------------
  30+ 927F
  31+ 927F 11 E4 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9282 01 04 00     	ld bc,4
  33+ 9285 ED B0        	ldir
  34+ 9287 C9           	ret
  35+ 9288
  36+ 9288 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9289 CD 23 94         call Calcula_salto_en_BC
  38+ 928C 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 928F A7               and a
  40+ 9290 ED 4A            adc hl,bc
  41+ 9292 CD 87 90         call Extrae_address
  42+ 9295 22 F0 8B         ld (Puntero_indice_mov),hl
  43+ 9298 C9               ret
  44+ 9299
  45+ 9299 3A BF 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 929C CD 23 94     	call Calcula_salto_en_BC
  47+ 929F 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92A2 A7               and a
  49+ 92A3 ED 4A            adc hl,bc
  50+ 92A5 CD 87 90         call Extrae_address
  51+ 92A8 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92AB C9           	ret
  53+ 92AC
  54+ 92AC              ;---------------------------------------------------------------------------------------------------------------
  55+ 92AC              ;
  56+ 92AC              ;   5/1/24
  57+ 92AC              ;
  58+ 92AC              ;	Destruye A,BC,HL,DE
  59+ 92AC
  60+ 92AC              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92AC              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92AC
  63+ 92AC              Inicia_Entidades
  64+ 92AC
  65+ 92AC              ; Preparamos los punteros de las cajas de entidades:
  66+ 92AC
  67+ 92AC CD 71 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92AF              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92AF CD 6B 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92B2
  71+ 92B2 2A 55 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92B5
  73+ 92B5 22 55 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92B8
  75+ 92B8 CD D1 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92BB
  77+ 92BB 2A 55 8C     	ld hl,(Datos_de_nivel)
  78+ 92BE
  79+ 92BE              ; En este punto:
  80+ 92BE              ;
  81+ 92BE              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92BE              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92BE
  84+ 92BE C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92BF
  86+ 92BF 7E           	ld a,(hl)
  87+ 92C0 CD 3D 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92C3
  89+ 92C3 CD 35 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92C6
  91+ 92C6              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92C6
  93+ 92C6 CD F3 93     	call Busca_mov_masticados_segun_tipo
  94+ 92C9
  95+ 92C9 A7           	and a
  96+ 92CA 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92CC
  98+ 92CC              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92CC
 100+ 92CC              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92CC              ;	_ de este tipo de entidad.
 102+ 92CC
 103+ 92CC CD CF 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92CF CD DC 9E     	call Transfiere_datos_de_contadores
 105+ 92D2
 106+ 92D2 18 06        	jr 4F
 107+ 92D4
 108+ 92D4 CD 8A 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92D7
 110+ 92D7              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92D7              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92D7              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92D7              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92D7              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92D7
 116+ 92D7 CD B1 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92DA              ;																; _ Mov_masticados ya generados.
 118+ 92DA
 119+ 92DA CD DE 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92DD
 121+ 92DD DD E5        	push ix
 122+ 92DF E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92E0
 124+ 92E0 D5           	push de
 125+ 92E1 CD A6 94     	call Genera_coordenadas
 126+ 92E4
 127+ 92E4 ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
 128+ 92E8 CD EE 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92EB D1           	pop de
 130+ 92EC
 131+ 92EC CD D2 94     	call Genera_datos_de_impresion
 132+ 92EF              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92EF              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92EF              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92EF              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92EF
 137+ 92EF CD 75 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92F2
 139+ 92F2              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92F2
 141+ 92F2 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 142+ 92F6 CD 62 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92F9
 144+ 92F9 CD 52 93     	call Limpiamos_bandeja_DRAW
 145+ 92FC CD D5 90     	call Incrementa_punteros_de_cajas
 146+ 92FF
 147+ 92FF              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92FF              ; _ entidad del Nivel.
 149+ 92FF
 150+ 92FF 3A 34 8C     	ld a,(Ctrl_4)
 151+ 9302 E6 F0        	and $f0
 152+ 9304 32 34 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9307
 154+ 9307              ; Siguiente entidad del Nivel.
 155+ 9307
 156+ 9307 2A 55 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 930A 23           	inc hl 														; _ entidad del Nivel.
 158+ 930B
 159+ 930B C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 930C
 161+ 930C 10 A7        	djnz 2B
 162+ 930E
 163+ 930E C9           	ret
 164+ 930F
 165+ 930F              ; -------------------------------------------------------------------------------------------------------------------
 166+ 930F              ;
 167+ 930F              ;	27/5/24
 168+ 930F              ;
 169+ 930F              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 930F              ;
 171+ 930F
 172+ 930F              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 930F              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 930F
 175+ 930F 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9312 CD 35 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9315
 178+ 9315
 179+ 9315              Construye_movimientos_masticados_Amadeus
 180+ 9315
 181+ 9315 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9318 CD D1 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 931B              ;															; _ el (Contador_de_mov_masticados).
 184+ 931B CD 8D 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 931E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 931E
 187+ 931E              ; Generamos movimientos masticados de Amadeus.
 188+ 931E
 189+ 931E 06 79        	ld b,121												; $0079, 121d.
 190+ 9320
 191+ 9320 C5           1 push bc
 192+ 9321 CD EE 96     	call Draw
 193+ 9324 CD B6 8F     	call Guarda_movimiento_masticado
 194+ 9327
 195+ 9327 CD 62 9A     	call Mov_right
 196+ 932A CD 62 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 932D
 198+ 932D C1           	pop bc
 199+ 932E 10 F0        	djnz 1B
 200+ 9330
 201+ 9330              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9330
 203+ 9330              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9330              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9330
 206+ 9330 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9333 01 08 00     	ld bc,8
 208+ 9336 A7           	and a
 209+ 9337 ED 42        	sbc hl,bc
 210+ 9339 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 933C
 212+ 933C C9           	ret
 213+ 933D
 214+ 933D              ; ---------------------------------------------------------------------
 215+ 933D              ;
 216+ 933D              ;	10/02/24
 217+ 933D              ;
 218+ 933D              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 933D              ;
 220+ 933D              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 933D
 222+ 933D              Definicion_segun_tipo
 223+ 933D
 224+ 933D CD 23 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9340 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9343 CD 2B 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9346 C9           	ret
 228+ 9347
 229+ 9347              ; ---------------------------------------------------------------------
 230+ 9347              ;
 231+ 9347              ;	6/7/24
 232+ 9347
 233+ 9347
 234+ 9347              Store_Restore_cajas
 235+ 9347
 236+ 9347 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 237+ 934B CD 62 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 934E CD D5 90     	call Incrementa_punteros_de_cajas
 239+ 9351 C9           	ret
 240+ 9352
 241+ 9352              ; ---------------------------------------------------------------------
 242+ 9352              ;
 243+ 9352              ;	23/6/24
 244+ 9352              ;
 245+ 9352              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9352              ;
 247+ 9352              ;	MODIFY: HL
 248+ 9352
 249+ 9352              Limpiamos_bandeja_DRAW
 250+ 9352
 251+ 9352 ED 73 0C 8C  	ld (Stack),sp
 252+ 9356 31 E4 8B     	ld sp,Vel_left
 253+ 9359
 254+ 9359 AF           	xor a
 255+ 935A 67           	ld h,a
 256+ 935B 6F           	ld l,a
 257+ 935C
 258+ 935C E5           	push hl
 259+ 935D E5           	push hl
 260+ 935E E5           	push hl
 261+ 935F E5           	push hl
 262+ 9360 E5           	push hl
 263+ 9361 E5           	push hl
 264+ 9362 E5           	push hl
 265+ 9363 E5           	push hl
 266+ 9364 E5           	push hl
 267+ 9365 E5           	push hl
 268+ 9366 E5           	push hl
 269+ 9367 E5           	push hl
 270+ 9368 E5           	push hl
 271+ 9369 E5           	push hl
 272+ 936A E5           	push hl
 273+ 936B E5           	push hl
 274+ 936C E5           	push hl
 275+ 936D E5           	push hl
 276+ 936E
 277+ 936E 33           	inc sp
 278+ 936F
 279+ 936F E5           	push hl
 280+ 9370 ED 7B 0C 8C  	ld sp,(Stack)
 281+ 9374
 282+ 9374 C9           	ret
 283+ 9375
 284+ 9375              ; ---------------------------------------------------------------------
 285+ 9375              ;
 286+ 9375              ;	24/03/24
 287+ 9375
 288+ 9375 2A C8 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9378 2B           	dec hl
 290+ 9379 22 C8 8B     	ld (Contador_de_mov_masticados),hl
 291+ 937C C9           	ret
 292+ 937D
 293+ 937D              ; ---------------------------------------------------------------------
 294+ 937D              ;
 295+ 937D              ;	8/5/24
 296+ 937D
 297+ 937D              Reinicia_entidad_maliciosa
 298+ 937D
 299+ 937D              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 937D
 301+ 937D CD CF 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9380 CD DC 9E     	call Transfiere_datos_de_contadores
 303+ 9383
 304+ 9383              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9383
 306+ 9383 3A BF 8B     	ld a,(Tipo)
 307+ 9386 CD 3D 93     	call Definicion_segun_tipo
 308+ 9389
 309+ 9389 E5           	push hl
 310+ 938A DD E1        	pop ix
 311+ 938C
 312+ 938C DD 6E 0B     	ld l,(ix+11)
 313+ 938F DD 66 0C     	ld h,(ix+12)
 314+ 9392
 315+ 9392 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9395
 317+ 9395 CD DE 8F     	call Cargamos_registros_con_mov_masticado
 318+ 9398
 319+ 9398              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 9398              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 9398              ; Ejemplos.
 322+ 9398
 323+ 9398              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 9398              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 9398              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 9398              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 9398              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 9398
 329+ 9398 21 C2 8B     	ld hl,Contador_de_vueltas
 330+ 939B CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 939D
 332+ 939D 7E           	ld a,(hl)
 333+ 939E CB 2F        	sra a
 334+ 93A0 CB 2F        	sra a
 335+ 93A2
 336+ 93A2 32 CA 8B     	ld (Velocidad),a
 337+ 93A5
 338+ 93A5 3E 40        	ld a,$40
 339+ 93A7 BE           	cp (hl)
 340+ 93A8 C0           	ret nz
 341+ 93A9
 342+ 93A9              ; Límitador.
 343+ 93A9
 344+ 93A9              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93A9
 346+ 93A9 CB 2E        	sra (hl)
 347+ 93AB 21 CA 8B     	ld hl,Velocidad
 348+ 93AE CB 2E        	sra (hl)
 349+ 93B0
 350+ 93B0 C9           	ret
 351+ 93B1
 352+ 93B1              ; ---------------------------------------------------------------------
 353+ 93B1              ;
 354+ 93B1              ;	22/01/24
 355+ 93B1
 356+ 93B1 21 34 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93B4 CB 46        	bit 0,(hl)
 358+ 93B6 20 0D        	jr nz,1F
 359+ 93B8 CB 4E        	bit 1,(hl)
 360+ 93BA 20 0C        	jr nz,2F
 361+ 93BC CB 56        	bit 2,(hl)
 362+ 93BE 20 0B        	jr nz,3F
 363+ 93C0 CB 5E        	bit 3,(hl)
 364+ 93C2 20 0A        	jr nz,4F
 365+ 93C4 C9           	ret
 366+ 93C5
 367+ 93C5 CB E6        1 set 4,(hl)
 368+ 93C7 C9           	ret
 369+ 93C8 CB EE        2 set 5,(hl)
 370+ 93CA C9           	ret
 371+ 93CB CB F6        3 set 6,(hl)
 372+ 93CD C9           	ret
 373+ 93CE CB FE        4 set 7,(hl)
 374+ 93D0 C9           	ret
 375+ 93D1
 376+ 93D1              ; ---------------------------------------------------------------------
 377+ 93D1              ;
 378+ 93D1              ;	23/01/24
 379+ 93D1              ;
 380+ 93D1              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93D1              ;
 382+ 93D1              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93D1              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93D1              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93D1              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93D1
 387+ 93D1              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93D1
 389+ 93D1 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93D2 3D           	dec a
 391+ 93D3 20 06        	jr nz,1F
 392+ 93D5
 393+ 93D5              ; --- Tipo_1
 394+ 93D5
 395+ 93D5 21 34 8C     	ld hl,Ctrl_4
 396+ 93D8 CB C6        	set 0,(hl)
 397+ 93DA C9           	ret
 398+ 93DB
 399+ 93DB 3D           1 dec a
 400+ 93DC 20 06        	jr nz,2F
 401+ 93DE
 402+ 93DE              ; --- Tipo_2
 403+ 93DE
 404+ 93DE 21 34 8C     	ld hl,Ctrl_4
 405+ 93E1 CB CE        	set 1,(hl)
 406+ 93E3 C9           	ret
 407+ 93E4
 408+ 93E4 3D           2 dec a
 409+ 93E5 20 06        	jr nz,3F
 410+ 93E7
 411+ 93E7              ; --- Tipo_3
 412+ 93E7
 413+ 93E7 21 34 8C     	ld hl,Ctrl_4
 414+ 93EA CB D6        	set 2,(hl)
 415+ 93EC C9           	ret
 416+ 93ED
 417+ 93ED              ; --- Tipo_3
 418+ 93ED
 419+ 93ED 21 34 8C     3 ld hl,Ctrl_4
 420+ 93F0 CB D6        	set 2,(hl)
 421+ 93F2 C9           	ret
 422+ 93F3
 423+ 93F3              ; ---------------------------------------------------------------------
 424+ 93F3              ;
 425+ 93F3              ;	22/01/24
 426+ 93F3
 427+ 93F3 21 34 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93F6 CB 46        	bit 0,(hl)
 429+ 93F8 20 0E        	jr nz,1F
 430+ 93FA
 431+ 93FA CB 4E        	bit 1,(hl)
 432+ 93FC 20 10        	jr nz,2F
 433+ 93FE
 434+ 93FE CB 56        	bit 2,(hl)
 435+ 9400 20 12        	jr nz,3F
 436+ 9402
 437+ 9402 CB 5E        	bit 3,(hl)
 438+ 9404 20 14        	jr nz,4F
 439+ 9406 18 19        	jr 6F
 440+ 9408
 441+ 9408              ; Entidad_de_Tipo_1.
 442+ 9408
 443+ 9408 CB 66        1 bit 4,(hl)
 444+ 940A 28 15        	jr z,6F
 445+ 940C 18 10        	jr 5F
 446+ 940E
 447+ 940E              ; Entidad_de_Tipo_2.
 448+ 940E
 449+ 940E CB 6E        2 bit 5,(hl)
 450+ 9410 28 0F        	jr z,6F
 451+ 9412 18 0A        	jr 5F
 452+ 9414
 453+ 9414              ; Entidad_de_Tipo_3.
 454+ 9414
 455+ 9414 CB 76        3 bit 6,(hl)
 456+ 9416 28 09        	jr z,6F
 457+ 9418 18 04        	jr 5F
 458+ 941A
 459+ 941A              ; Entidad_de_Tipo_4.
 460+ 941A
 461+ 941A CB 7E        4 bit 7,(hl)
 462+ 941C 28 03        	jr z,6F
 463+ 941E
 464+ 941E              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 941E
 466+ 941E AF           5 xor a
 467+ 941F 3C           	inc a
 468+ 9420 C9           	ret
 469+ 9421
 470+ 9421              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9421
 472+ 9421 AF           6 xor a
 473+ 9422 C9           	ret
 474+ 9423
 475+ 9423              ;	------------------------------------------------------------------------------------
 476+ 9423              ;
 477+ 9423              ;	12/01/24
 478+ 9423              ;
 479+ 9423              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9423              ;
 481+ 9423              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9423              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9423
 484+ 9423 CB 27        Calcula_salto_en_BC sla a
 485+ 9425 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9427 4F           	ld c,a
 487+ 9428 06 00        	ld b,0
 488+ 942A C9           	ret
 489+ 942B
 490+ 942B              ; ------------------------------------------------------------------
 491+ 942B              ;
 492+ 942B              ;	19/1/24
 493+ 942B              ;
 494+ 942B              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 942B              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 942B
 497+ 942B A7           Situa_en_datos_de_definicion and a
 498+ 942C ED 4A        	adc hl,bc
 499+ 942E CD 87 90     	call Extrae_address
 500+ 9431 22 0A 8C         ld (Datos_de_entidad),hl
 501+ 9434 C9           	ret
 502+ 9435
 503+ 9435              ; ------------------------------------------------------------------
 504+ 9435
 505+ 9435              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9435              ; 	inc de
 507+ 9435              ; 	inc de
 508+ 9435              ; 	ex de,hl
 509+ 9435              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9435              ; 	ret
 511+ 9435
 512+ 9435              ; ----------------------------------------------------------------------------------------------------------
 513+ 9435              ;
 514+ 9435              ;	24/6/24
 515+ 9435              ;
 516+ 9435              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9435              ;	_ de entidad.
 518+ 9435              ;
 519+ 9435              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9435              ;
 521+ 9435              ;
 522+ 9435              ;	MODIFICA: HL,DE y BC
 523+ 9435
 524+ 9435
 525+ 9435              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9435
 527+ 9435 11 BF 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9438 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9439 12           	ld (de),a
 530+ 943A 23           	inc hl
 531+ 943B              ;
 532+ 943B 11 CD 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 943E 01 02 00     	ld bc,2
 534+ 9441 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9443              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9443 11 C2 8B     	ld de,Contador_de_vueltas
 537+ 9446 7E           	ld a,(hl)
 538+ 9447 12           	ld (de),a
 539+ 9448 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9449
 541+ 9449 11 D4 8B     	ld de,Indice_Sprite_der
 542+ 944C 01 04 00     	ld bc,4
 543+ 944F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9451
 545+ 9451 11 DC 8B     	ld de,Posicion_inicio
 546+ 9454 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9457 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9459
 549+ 9459 11 C6 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 945C 01 02 00     	ld bc,2
 551+ 945F ED B0        	ldir
 552+ 9461
 553+ 9461 C9           	ret
 554+ 9462
 555+ 9462              ; ----------------------------------------------------------------------------------------------------------
 556+ 9462              ;
 557+ 9462              ;	1/8/24
 558+ 9462              ;
 559+ 9462
 560+ 9462              Parametros_de_bandeja_DRAW_a_caja
 561+ 9462
 562+ 9462 21 BF 8B     	ld hl,Bandeja_DRAW
 563+ 9465 01 0C 00     	ld bc,12
 564+ 9468 ED B0        	ldir
 565+ 946A C9           	ret
 566+ 946B
 567+ 946B              ;---------------------------------------------------------------------------------------------------------------
 568+ 946B              ;
 569+ 946B              ;	5/1/24
 570+ 946B              ;
 571+ 946B              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 946B              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 946B              ;
 574+ 946B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 946B              ;
 576+ 946B              ;	(Numero_parcial_de_entidades)="7".
 577+ 946B              ;
 578+ 946B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 946B              ;
 580+ 946B              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 946B              ;
 582+ 946B              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 946B              ;	MODIFICA: A y B.
 584+ 946B              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 946B
 586+ 946B              Inicializa_Numero_parcial_de_entidades
 587+ 946B
 588+ 946B              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 946B
 590+ 946B 3A 05 8C     	ld a,(Numero_de_entidades)
 591+ 946E A7           	and a
 592+ 946F
 593+ 946F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 946F              ;	jr z,$
 595+ 946F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 946F
 597+ 946F 20 03        	jr nz,3F
 598+ 9471
 599+ 9471              ; ---------- ---------- ----------
 600+ 9471
 601+ 9471              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9471              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9471
 604+ 9471 CD 67 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9474
 606+ 9474              ; ---------- ---------- ----------
 607+ 9474
 608+ 9474 3A 05 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9477 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9479 38 08        	jr c,1F
 611+ 947B
 612+ 947B              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 947B              ; Actualizamos variables.
 614+ 947B
 615+ 947B 3E 07        	ld a,7
 616+ 947D 32 06 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9480 47           	ld b,a
 618+ 9481 18 04        	jr 2F
 619+ 9483
 620+ 9483              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9483              ; (Numero_de_entidades)="0".
 622+ 9483
 623+ 9483 32 06 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9486 47           	ld b,a
 625+ 9487 C9           2 ret
 626+ 9488
# file closed: Rutinas_de_inicio_y_niveles.asm
2069  9488              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9488              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9488              ;
   3+ 9488              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9488              ;
   5+ 9488              ; *****************************************************************************************************************************************************************************************
   6+ 9488              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9488
   8+ 9488 7C           calcula_tercio ld a,h
   9+ 9489 E6 18        	and $18
  10+ 948B CB 2F        	sra a
  11+ 948D CB 2F        	sra a
  12+ 948F CB 2F        	sra a
  13+ 9491 C9           	ret
  14+ 9492
# file closed: calcula_tercio.asm
2070  9492              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9492              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9492              ;
   3+ 9492              ;
   4+ 9492              ;	CLS.
   5+ 9492              ;
   6+ 9492              ;	Limpia la pantalla y define sus atributos.
   7+ 9492              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9492              ;
   9+ 9492              ;	COLORES: 0 ..... NEGRO
  10+ 9492              ;    		 1 ..... AZUL
  11+ 9492              ; 			 2 ..... ROJO
  12+ 9492              ;			 3 ..... MAGENTA
  13+ 9492              ; 			 4 ..... VERDE
  14+ 9492              ; 			 5 ..... CIAN
  15+ 9492              ;			 6 ..... AMARILLO
  16+ 9492              ; 			 7 ..... BLANCO
  17+ 9492              ;
  18+ 9492              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9492              ;
  20+ 9492              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9492
  22+ 9492
  23+ 9492 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9495 11 01 40     	LD DE,$4001
  25+ 9498 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 949B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 949D ED B0        	LDIR
  28+ 949F 01 FF 02     	LD BC,767
  29+ 94A2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94A3 ED B0        	LDIR
  31+ 94A5 C9           	ret
  32+ 94A6
# file closed: Cls.asm
2071  94A6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94A6              ; ------------------------------------------------------------------------
   2+ 94A6              ;
   3+ 94A6              ;	30/1/24
   4+ 94A6              ;
   5+ 94A6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94A6              ;	Fila superior "0", Columna izquierda "0".
   7+ 94A6              ;
   8+ 94A6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94A6              ;
  10+ 94A6              ;	Modifica: A,BC y DE.
  11+ 94A6
  12+ 94A6 7D           Genera_coordenadas ld a,l
  13+ 94A7 E6 1F        	and $1f
  14+ 94A9 32 C0 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94AC
  16+ 94AC 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94AD FE 40        	cp $40
  18+ 94AF 38 1C        	jr c,4F
  19+ 94B1
  20+ 94B1 CD 88 94     	call calcula_tercio
  21+ 94B4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94B5
  23+ 94B5 1E 00        	ld e,0
  24+ 94B7 7D           	ld a,l
  25+ 94B8 E6 E0        	and $e0
  26+ 94BA 28 01        	jr z,1F
  27+ 94BC 04           	inc b
  28+ 94BD
  29+ 94BD 04           1 inc b
  30+ 94BE 05           	dec b
  31+ 94BF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94C1              ;														; _ , salimos.
  33+ 94C1 1C           3 inc e
  34+ 94C2 D6 20        	sub 32
  35+ 94C4 20 FB        	jr nz,3B
  36+ 94C6 10 F5        	djnz 1B
  37+ 94C8
  38+ 94C8 7B           2 ld a,e
  39+ 94C9 32 C1 8B     	ld (Coordenada_y),a
  40+ 94CC C9           	ret
  41+ 94CD
  42+ 94CD AF           4 xor a
  43+ 94CE 32 C1 8B     	ld (Coordenada_y),a
  44+ 94D1 C9           	ret
  45+ 94D2
# file closed: Genera_coordenadas.asm
2072  94D2              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94D2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94D2              ;
   3+ 94D2              ;	20/09/24
   4+ 94D2              ;
   5+ 94D2              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94D2              ;   DE contiene Puntero_objeto.
   7+ 94D2              ;   IX contiene el Puntero de impresión.
   8+ 94D2
   9+ 94D2              Genera_datos_de_impresion
  10+ 94D2
  11+ 94D2 ED 73 0C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94D6
  13+ 94D6 31 C6 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94D9 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94DB
  16+ 94DB 2A 2D 8C         ld hl,(Scanlines_album_SP)
  17+ 94DE
  18+ 94DE 3E 05            ld a,5
  19+ 94E0 85               add l
  20+ 94E1 6F               ld l,a
  21+ 94E2
  22+ 94E2 F9               ld sp,hl
  23+ 94E3 22 2D 8C         ld (Scanlines_album_SP),hl
  24+ 94E6
  25+ 94E6 21 00 00         ld hl,0
  26+ 94E9
  27+ 94E9 DD E5            push ix
  28+ 94EB 3B               dec sp
  29+ 94EC ED 7A            adc hl,sp
  30+ 94EE D5               push de
  31+ 94EF
  32+ 94EF              ; Recuperamos SP.
  33+ 94EF
  34+ 94EF ED 7B 0C 8C      ld sp,(Stack)
  35+ 94F3
  36+ 94F3 E5               push hl
  37+ 94F4 F1               pop af
  38+ 94F5 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94F6
  40+ 94F6              ; Tenemos el encabezado listo.
  41+ 94F6              ; Preparamos registros para generar los scanlines.
  42+ 94F6
  43+ 94F6 DD E5            push ix
  44+ 94F8 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94F9
  46+ 94F9 ED 5B 2D 8C      ld de,(Scanlines_album_SP)
  47+ 94FD
  48+ 94FD              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94FD              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94FD
  51+ 94FD 7C               ld a,h
  52+ 94FE FE 50            cp $50
  53+ 9500 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9502
  55+ 9502 20 05            jr nz,2F
  56+ 9504
  57+ 9504 7D               ld a,l
  58+ 9505 FE E0            cp $e0
  59+ 9507 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9509
  61+ 9509 7D           2 ld a,l
  62+ 950A FE C0            cp $c0
  63+ 950C D2 A2 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 950F
  65+ 950F              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 950F
  67+ 950F CD A0 99         call NextScan
  68+ 9512 EB               ex de,hl
  69+ 9513
  70+ 9513 73               ld (hl),e
  71+ 9514 23               inc hl
  72+ 9515 72               ld (hl),d
  73+ 9516 23               inc hl
  74+ 9517
  75+ 9517 EB               ex de,hl
  76+ 9518
  77+ 9518 CD A0 99         call NextScan
  78+ 951B EB               ex de,hl
  79+ 951C
  80+ 951C 73               ld (hl),e
  81+ 951D 23               inc hl
  82+ 951E 72               ld (hl),d
  83+ 951F 23               inc hl
  84+ 9520
  85+ 9520 EB               ex de,hl
  86+ 9521
  87+ 9521 CD A0 99         call NextScan
  88+ 9524 EB               ex de,hl
  89+ 9525
  90+ 9525 73               ld (hl),e
  91+ 9526 23               inc hl
  92+ 9527 72               ld (hl),d
  93+ 9528 23               inc hl
  94+ 9529
  95+ 9529 EB               ex de,hl
  96+ 952A
  97+ 952A CD A0 99         call NextScan
  98+ 952D EB               ex de,hl
  99+ 952E
 100+ 952E 73               ld (hl),e
 101+ 952F 23               inc hl
 102+ 9530 72               ld (hl),d
 103+ 9531 23               inc hl
 104+ 9532
 105+ 9532 EB               ex de,hl
 106+ 9533
 107+ 9533 CD A0 99         call NextScan
 108+ 9536 EB               ex de,hl
 109+ 9537
 110+ 9537 73               ld (hl),e
 111+ 9538 23               inc hl
 112+ 9539 72               ld (hl),d
 113+ 953A 23               inc hl
 114+ 953B
 115+ 953B EB               ex de,hl
 116+ 953C
 117+ 953C CD A0 99         call NextScan
 118+ 953F EB               ex de,hl
 119+ 9540
 120+ 9540 73               ld (hl),e
 121+ 9541 23               inc hl
 122+ 9542 72               ld (hl),d
 123+ 9543 23               inc hl
 124+ 9544
 125+ 9544 EB               ex de,hl
 126+ 9545
 127+ 9545 CD A0 99         call NextScan
 128+ 9548 EB               ex de,hl
 129+ 9549
 130+ 9549 73               ld (hl),e
 131+ 954A 23               inc hl
 132+ 954B 72               ld (hl),d
 133+ 954C 23               inc hl
 134+ 954D
 135+ 954D EB               ex de,hl
 136+ 954E
 137+ 954E CD A0 99         call NextScan
 138+ 9551 EB               ex de,hl
 139+ 9552
 140+ 9552 73               ld (hl),e
 141+ 9553 23               inc hl
 142+ 9554 72               ld (hl),d
 143+ 9555 23               inc hl
 144+ 9556
 145+ 9556 EB               ex de,hl
 146+ 9557
 147+ 9557 CD A0 99         call NextScan
 148+ 955A EB               ex de,hl
 149+ 955B
 150+ 955B 73               ld (hl),e
 151+ 955C 23               inc hl
 152+ 955D 72               ld (hl),d
 153+ 955E 23               inc hl
 154+ 955F
 155+ 955F EB               ex de,hl
 156+ 9560
 157+ 9560 CD A0 99         call NextScan
 158+ 9563 EB               ex de,hl
 159+ 9564
 160+ 9564 73               ld (hl),e
 161+ 9565 23               inc hl
 162+ 9566 72               ld (hl),d
 163+ 9567 23               inc hl
 164+ 9568
 165+ 9568 EB               ex de,hl
 166+ 9569
 167+ 9569 CD A0 99         call NextScan
 168+ 956C EB               ex de,hl
 169+ 956D
 170+ 956D 73               ld (hl),e
 171+ 956E 23               inc hl
 172+ 956F 72               ld (hl),d
 173+ 9570 23               inc hl
 174+ 9571
 175+ 9571 EB               ex de,hl
 176+ 9572
 177+ 9572 CD A0 99         call NextScan
 178+ 9575 EB               ex de,hl
 179+ 9576
 180+ 9576 73               ld (hl),e
 181+ 9577 23               inc hl
 182+ 9578 72               ld (hl),d
 183+ 9579 23               inc hl
 184+ 957A
 185+ 957A EB               ex de,hl
 186+ 957B
 187+ 957B CD A0 99         call NextScan
 188+ 957E EB               ex de,hl
 189+ 957F
 190+ 957F 73               ld (hl),e
 191+ 9580 23               inc hl
 192+ 9581 72               ld (hl),d
 193+ 9582 23               inc hl
 194+ 9583
 195+ 9583 EB               ex de,hl
 196+ 9584
 197+ 9584 CD A0 99         call NextScan
 198+ 9587 EB               ex de,hl
 199+ 9588
 200+ 9588 73               ld (hl),e
 201+ 9589 23               inc hl
 202+ 958A 72               ld (hl),d
 203+ 958B 23               inc hl
 204+ 958C
 205+ 958C EB               ex de,hl
 206+ 958D
 207+ 958D CD A0 99         call NextScan
 208+ 9590 EB               ex de,hl
 209+ 9591
 210+ 9591              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 9591              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 9591              ;   _ generar sus scanlines.
 213+ 9591
 214+ 9591              ;    ld (Puntero_de_impresion_disparo),de
 215+ 9591
 216+ 9591 73               ld (hl),e
 217+ 9592 23               inc hl
 218+ 9593 72               ld (hl),d
 219+ 9594 23               inc hl
 220+ 9595
 221+ 9595              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 9595
 223+ 9595 22 2D 8C         ld (Scanlines_album_SP),hl
 224+ 9598
 225+ 9598 EB               ex de,hl
 226+ 9599
 227+ 9599              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 9599
 229+ 9599              ;    call NextScan
 230+ 9599              ;    call NextScan
 231+ 9599
 232+ 9599 22 38 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 959C
 234+ 959C              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 959C
 236+ 959C 08               ex af,af
 237+ 959D
 238+ 959D F5               push af
 239+ 959E E1               pop hl
 240+ 959F
 241+ 959F 36 10            ld (hl),16
 242+ 95A1
 243+ 95A1 C9               ret
 244+ 95A2
 245+ 95A2              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95A2
 247+ 95A2              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95A2
 249+ 95A2 3E 57            ld a,$57
 250+ 95A4 94               sub h
 251+ 95A5 47               ld b,a
 252+ 95A6
 253+ 95A6 3E DF            ld a,$df
 254+ 95A8 BD               cp l
 255+ 95A9 38 04            jr c,1F
 256+ 95AB
 257+ 95AB 3E 08            ld a,8
 258+ 95AD 80               add b
 259+ 95AE 47               ld b,a
 260+ 95AF
 261+ 95AF              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95AF              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95AF
 264+ 95AF 48           1 ld c,b
 265+ 95B0 0C               inc c
 266+ 95B1
 267+ 95B1 04               inc b
 268+ 95B2 05               dec b
 269+ 95B3 20 02            jr nz,3F
 270+ 95B5
 271+ 95B5 18 0B            jr 6F
 272+ 95B7
 273+ 95B7 CD A0 99     3 call NextScan
 274+ 95BA EB               ex de,hl
 275+ 95BB
 276+ 95BB 73               ld (hl),e
 277+ 95BC 23               inc hl
 278+ 95BD 72               ld (hl),d
 279+ 95BE 23               inc hl
 280+ 95BF
 281+ 95BF EB               ex de,hl
 282+ 95C0 10 F5            djnz 3B
 283+ 95C2
 284+ 95C2 ED 53 2D 8C  6 ld (Scanlines_album_SP),de
 285+ 95C6
 286+ 95C6 08           5 ex af,af
 287+ 95C7 F5               push af
 288+ 95C8 E1               pop hl
 289+ 95C9
 290+ 95C9 71               ld (hl),c
 291+ 95CA
 292+ 95CA C9               ret
 293+ 95CB
# file closed: Genera_datos_de_impresion.asm
2073  95CB              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95CB              ; -----------------------------------------------------------------------------
   2+ 95CB              ;
   3+ 95CB              ;   11/03/24
   4+ 95CB              ;
   5+ 95CB
   6+ 95CB              Pinta_Sprites
   7+ 95CB
   8+ 95CB              ;    ld hl,(Scanlines_album_SP)
   9+ 95CB              ;    call Extrae_address
  10+ 95CB
  11+ 95CB              ;    inc h
  12+ 95CB              ;    dec h
  13+ 95CB              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95CB
  15+ 95CB ED 73 0C 8C      ld (Stack),sp
  16+ 95CF
  17+ 95CF EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95D0              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95D0 2C               inc l
  20+ 95D1 2C               inc l
  21+ 95D2
  22+ 95D2 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95D3
  24+ 95D3 2C               inc l
  25+ 95D4 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95D5
  27+ 95D5              ;   Seleccionamos rutina de impresión:
  28+ 95D5
  29+ 95D5 3E 10            ld a,16
  30+ 95D7 B8               cp b
  31+ 95D8 C2 D4 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95DB
  33+ 95DB              ;   Rutinas:
  34+ 95DB
  35+ 95DB              Pinta_rapido    ;   1520 t/states.
  36+ 95DB
  37+ 95DB E1               pop hl
  38+ 95DC
  39+ 95DC 1A               ld a,(de)
  40+ 95DD AE               xor (hl)
  41+ 95DE 77               ld (hl),a
  42+ 95DF 2C               inc l
  43+ 95E0 1C               inc e
  44+ 95E1 1A               ld a,(de)
  45+ 95E2 AE               xor (hl)
  46+ 95E3 77               ld (hl),a
  47+ 95E4 2C               inc l
  48+ 95E5 1C               inc e
  49+ 95E6 1A               ld a,(de)
  50+ 95E7 AE               xor (hl)
  51+ 95E8 77               ld (hl),a
  52+ 95E9 13               inc de
  53+ 95EA
  54+ 95EA E1               pop hl
  55+ 95EB
  56+ 95EB 1A               ld a,(de)
  57+ 95EC AE               xor (hl)
  58+ 95ED 77               ld (hl),a
  59+ 95EE 2C               inc l
  60+ 95EF 1C               inc e
  61+ 95F0 1A               ld a,(de)
  62+ 95F1 AE               xor (hl)
  63+ 95F2 77               ld (hl),a
  64+ 95F3 2C               inc l
  65+ 95F4 1C               inc e
  66+ 95F5 1A               ld a,(de)
  67+ 95F6 AE               xor (hl)
  68+ 95F7 77               ld (hl),a
  69+ 95F8 13               inc de
  70+ 95F9
  71+ 95F9 E1               pop hl
  72+ 95FA
  73+ 95FA 1A               ld a,(de)
  74+ 95FB AE               xor (hl)
  75+ 95FC 77               ld (hl),a
  76+ 95FD 2C               inc l
  77+ 95FE 1C               inc e
  78+ 95FF 1A               ld a,(de)
  79+ 9600 AE               xor (hl)
  80+ 9601 77               ld (hl),a
  81+ 9602 2C               inc l
  82+ 9603 1C               inc e
  83+ 9604 1A               ld a,(de)
  84+ 9605 AE               xor (hl)
  85+ 9606 77               ld (hl),a
  86+ 9607 13               inc de
  87+ 9608
  88+ 9608 E1               pop hl
  89+ 9609
  90+ 9609 1A               ld a,(de)
  91+ 960A AE               xor (hl)
  92+ 960B 77               ld (hl),a
  93+ 960C 2C               inc l
  94+ 960D 1C               inc e
  95+ 960E 1A               ld a,(de)
  96+ 960F AE               xor (hl)
  97+ 9610 77               ld (hl),a
  98+ 9611 2C               inc l
  99+ 9612 1C               inc e
 100+ 9613 1A               ld a,(de)
 101+ 9614 AE               xor (hl)
 102+ 9615 77               ld (hl),a
 103+ 9616 13               inc de
 104+ 9617
 105+ 9617 E1               pop hl
 106+ 9618
 107+ 9618 1A               ld a,(de)
 108+ 9619 AE               xor (hl)
 109+ 961A 77               ld (hl),a
 110+ 961B 2C               inc l
 111+ 961C 1C               inc e
 112+ 961D 1A               ld a,(de)
 113+ 961E AE               xor (hl)
 114+ 961F 77               ld (hl),a
 115+ 9620 2C               inc l
 116+ 9621 1C               inc e
 117+ 9622 1A               ld a,(de)
 118+ 9623 AE               xor (hl)
 119+ 9624 77               ld (hl),a
 120+ 9625 13               inc de
 121+ 9626
 122+ 9626 E1               pop hl
 123+ 9627
 124+ 9627 1A               ld a,(de)
 125+ 9628 AE               xor (hl)
 126+ 9629 77               ld (hl),a
 127+ 962A 2C               inc l
 128+ 962B 1C               inc e
 129+ 962C 1A               ld a,(de)
 130+ 962D AE               xor (hl)
 131+ 962E 77               ld (hl),a
 132+ 962F 2C               inc l
 133+ 9630 1C               inc e
 134+ 9631 1A               ld a,(de)
 135+ 9632 AE               xor (hl)
 136+ 9633 77               ld (hl),a
 137+ 9634 13               inc de
 138+ 9635
 139+ 9635 E1               pop hl
 140+ 9636
 141+ 9636 1A               ld a,(de)
 142+ 9637 AE               xor (hl)
 143+ 9638 77               ld (hl),a
 144+ 9639 2C               inc l
 145+ 963A 1C               inc e
 146+ 963B 1A               ld a,(de)
 147+ 963C AE               xor (hl)
 148+ 963D 77               ld (hl),a
 149+ 963E 2C               inc l
 150+ 963F 1C               inc e
 151+ 9640 1A               ld a,(de)
 152+ 9641 AE               xor (hl)
 153+ 9642 77               ld (hl),a
 154+ 9643 13               inc de
 155+ 9644
 156+ 9644 E1               pop hl
 157+ 9645
 158+ 9645 1A               ld a,(de)
 159+ 9646 AE               xor (hl)
 160+ 9647 77               ld (hl),a
 161+ 9648 2C               inc l
 162+ 9649 1C               inc e
 163+ 964A 1A               ld a,(de)
 164+ 964B AE               xor (hl)
 165+ 964C 77               ld (hl),a
 166+ 964D 2C               inc l
 167+ 964E 1C               inc e
 168+ 964F 1A               ld a,(de)
 169+ 9650 AE               xor (hl)
 170+ 9651 77               ld (hl),a
 171+ 9652 13               inc de
 172+ 9653
 173+ 9653 E1               pop hl
 174+ 9654
 175+ 9654 1A               ld a,(de)
 176+ 9655 AE               xor (hl)
 177+ 9656 77               ld (hl),a
 178+ 9657 2C               inc l
 179+ 9658 1C               inc e
 180+ 9659 1A               ld a,(de)
 181+ 965A AE               xor (hl)
 182+ 965B 77               ld (hl),a
 183+ 965C 2C               inc l
 184+ 965D 1C               inc e
 185+ 965E 1A               ld a,(de)
 186+ 965F AE               xor (hl)
 187+ 9660 77               ld (hl),a
 188+ 9661 13               inc de
 189+ 9662
 190+ 9662 E1               pop hl
 191+ 9663
 192+ 9663 1A               ld a,(de)
 193+ 9664 AE               xor (hl)
 194+ 9665 77               ld (hl),a
 195+ 9666 2C               inc l
 196+ 9667 1C               inc e
 197+ 9668 1A               ld a,(de)
 198+ 9669 AE               xor (hl)
 199+ 966A 77               ld (hl),a
 200+ 966B 2C               inc l
 201+ 966C 1C               inc e
 202+ 966D 1A               ld a,(de)
 203+ 966E AE               xor (hl)
 204+ 966F 77               ld (hl),a
 205+ 9670 13               inc de
 206+ 9671
 207+ 9671 E1               pop hl
 208+ 9672
 209+ 9672 1A               ld a,(de)
 210+ 9673 AE               xor (hl)
 211+ 9674 77               ld (hl),a
 212+ 9675 2C               inc l
 213+ 9676 1C               inc e
 214+ 9677 1A               ld a,(de)
 215+ 9678 AE               xor (hl)
 216+ 9679 77               ld (hl),a
 217+ 967A 2C               inc l
 218+ 967B 1C               inc e
 219+ 967C 1A               ld a,(de)
 220+ 967D AE               xor (hl)
 221+ 967E 77               ld (hl),a
 222+ 967F 13               inc de
 223+ 9680
 224+ 9680 E1               pop hl
 225+ 9681
 226+ 9681 1A               ld a,(de)
 227+ 9682 AE               xor (hl)
 228+ 9683 77               ld (hl),a
 229+ 9684 2C               inc l
 230+ 9685 1C               inc e
 231+ 9686 1A               ld a,(de)
 232+ 9687 AE               xor (hl)
 233+ 9688 77               ld (hl),a
 234+ 9689 2C               inc l
 235+ 968A 1C               inc e
 236+ 968B 1A               ld a,(de)
 237+ 968C AE               xor (hl)
 238+ 968D 77               ld (hl),a
 239+ 968E 13               inc de
 240+ 968F
 241+ 968F E1               pop hl
 242+ 9690
 243+ 9690 1A               ld a,(de)
 244+ 9691 AE               xor (hl)
 245+ 9692 77               ld (hl),a
 246+ 9693 2C               inc l
 247+ 9694 1C               inc e
 248+ 9695 1A               ld a,(de)
 249+ 9696 AE               xor (hl)
 250+ 9697 77               ld (hl),a
 251+ 9698 2C               inc l
 252+ 9699 1C               inc e
 253+ 969A 1A               ld a,(de)
 254+ 969B AE               xor (hl)
 255+ 969C 77               ld (hl),a
 256+ 969D 13               inc de
 257+ 969E
 258+ 969E E1               pop hl
 259+ 969F
 260+ 969F 1A               ld a,(de)
 261+ 96A0 AE               xor (hl)
 262+ 96A1 77               ld (hl),a
 263+ 96A2 2C               inc l
 264+ 96A3 1C               inc e
 265+ 96A4 1A               ld a,(de)
 266+ 96A5 AE               xor (hl)
 267+ 96A6 77               ld (hl),a
 268+ 96A7 2C               inc l
 269+ 96A8 1C               inc e
 270+ 96A9 1A               ld a,(de)
 271+ 96AA AE               xor (hl)
 272+ 96AB 77               ld (hl),a
 273+ 96AC 13               inc de
 274+ 96AD
 275+ 96AD E1               pop hl
 276+ 96AE
 277+ 96AE 1A               ld a,(de)
 278+ 96AF AE               xor (hl)
 279+ 96B0 77               ld (hl),a
 280+ 96B1 2C               inc l
 281+ 96B2 1C               inc e
 282+ 96B3 1A               ld a,(de)
 283+ 96B4 AE               xor (hl)
 284+ 96B5 77               ld (hl),a
 285+ 96B6 2C               inc l
 286+ 96B7 1C               inc e
 287+ 96B8 1A               ld a,(de)
 288+ 96B9 AE               xor (hl)
 289+ 96BA 77               ld (hl),a
 290+ 96BB 13               inc de
 291+ 96BC
 292+ 96BC E1               pop hl
 293+ 96BD
 294+ 96BD 1A               ld a,(de)
 295+ 96BE AE               xor (hl)
 296+ 96BF 77               ld (hl),a
 297+ 96C0 2C               inc l
 298+ 96C1 1C               inc e
 299+ 96C2 1A               ld a,(de)
 300+ 96C3 AE               xor (hl)
 301+ 96C4 77               ld (hl),a
 302+ 96C5 2C               inc l
 303+ 96C6 1C               inc e
 304+ 96C7 1A               ld a,(de)
 305+ 96C8 AE               xor (hl)
 306+ 96C9 77               ld (hl),a
 307+ 96CA 13               inc de
 308+ 96CB
 309+ 96CB ED 73 2D 8C      ld (Scanlines_album_SP),sp
 310+ 96CF ED 7B 0C 8C      ld sp,(Stack)
 311+ 96D3 C9               ret
 312+ 96D4
 313+ 96D4              Pinta_lento
 314+ 96D4
 315+ 96D4 E1           1 pop hl
 316+ 96D5
 317+ 96D5 1A               ld a,(de)
 318+ 96D6 AE               xor (hl)
 319+ 96D7 77               ld (hl),a
 320+ 96D8 2C               inc l
 321+ 96D9 1C               inc e
 322+ 96DA 1A               ld a,(de)
 323+ 96DB AE               xor (hl)
 324+ 96DC 77               ld (hl),a
 325+ 96DD 2C               inc l
 326+ 96DE 1C               inc e
 327+ 96DF 1A               ld a,(de)
 328+ 96E0 AE               xor (hl)
 329+ 96E1 77               ld (hl),a
 330+ 96E2 13               inc de
 331+ 96E3
 332+ 96E3 10 EF            djnz 1B
 333+ 96E5
 334+ 96E5 ED 73 2D 8C      ld (Scanlines_album_SP),sp
 335+ 96E9 ED 7B 0C 8C      ld sp,(Stack)
 336+ 96ED C9               ret
# file closed: Pinta_Sprites.asm
2074  96EE              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96EE              ; ******************************************************************************************************************************************************************************************
   2+ 96EE              ;
   3+ 96EE              ; 26/06/23
   4+ 96EE              ;
   5+ 96EE              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96EE
   7+ 96EE              Draw
   8+ 96EE
   9+ 96EE CD 94 99     	call Prepara_draw
  10+ 96F1 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96F2 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96F3 28 05        	jr z,2F
  13+ 96F5
  14+ 96F5 3A DE 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96F8 18 0C        	jr 1F
  16+ 96FA
  17+ 96FA 2A DC 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96FD 22 CF 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9700 CD 8C 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9703              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9703
  22+ 9703 CD 33 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9706
  24+ 9706 3A CC 8B     1 ld a,(Ctrl_0)
  25+ 9709 CB 6F        	bit 5,a
  26+ 970B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 970D
  28+ 970D CD 22 97     	call Comprueba_limite_horizontal
  29+ 9710 CD B2 97     	call Comprueba_limite_vertical
  30+ 9713
  31+ 9713              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9713              ; -----------------------
  33+ 9713              ; -----------------------
  34+ 9713              ; -----------------------
  35+ 9713
  36+ 9713 CD 08 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9716 CD 3F 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9719
  39+ 9719 3A CC 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 971C CB AF        	res 5,a											; _a ser de utilidad.
  41+ 971E 32 CC 8B     	ld (Ctrl_0),a
  42+ 9721
  43+ 9721 C9           	ret
  44+ 9722
  45+ 9722              ; *******************************************************************************************************************************************************************************************
  46+ 9722              ;	21/01/23
  47+ 9722              ;
  48+ 9722              ; 	Comprueba_limite_horizontal.
  49+ 9722              ;
  50+ 9722              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9722              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9722              ;
  53+ 9722              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9722              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9722              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9722              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9722
  58+ 9722
  59+ 9722
  60+ 9722 3A CC 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9725 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9727 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9729 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 972B 32 CC 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 972E 18 09            jr 6F
  66+ 9730 CB 5F        1 bit 3,a
  67+ 9732 28 0A            jr z,2F
  68+ 9734 E6 F7            and $f7
  69+ 9736 32 CC 8B         ld (Ctrl_0),a
  70+ 9739 CD 8C 98     6 call Inicializacion
  71+ 973C 18 5B            jr 5F
  72+ 973E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 973F
  74+ 973F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 973F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 973F
  77+ 973F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9740 2A E0 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9743 CD 88 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9746 67           	ld h,a
  81+ 9747 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9748 CD 88 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 974B 67           	ld h,a
  84+ 974C A7           	and a
  85+ 974D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 974F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9750 3A DE 8B     	ld a,(Cuad_objeto)
  88+ 9753 FE 02        	cp 2
  89+ 9755 38 1E        	jr c,3F
  90+ 9757 28 1C        	jr z,3F
  91+ 9759 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 975A 28 23            jr z,7F
  93+ 975C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 975E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9760 E1           	pop hl
  96+ 9761
  97+ 9761              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9761              ; _para indicar con E="2" en caso necesario.
  99+ 9761
 100+ 9761 E5               push hl
 101+ 9762 C5               push bc
 102+ 9763 CD 88 94     	call calcula_tercio
 103+ 9766 FE 01        	cp 1
 104+ 9768 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 976A CD 9A 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 976D 28 26            jr z,9F
 107+ 976F 38 24            jr c,9F
 108+ 9771 1E 00        11 ld e,0
 109+ 9773 18 22            jr 8F
 110+ 9775 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9776 28 07        	jr z, 7F
 112+ 9778 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 977A 1E 00         	ld e,0
 114+ 977C E1           	pop hl
 115+ 977D 18 04        	jr 4F
 116+ 977F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9781 18 15            jr 10F
 118+ 9783
 119+ 9783              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9783              ; _para indicar con E="2" en caso necesario.
 121+ 9783
 122+ 9783 E5           4 push hl
 123+ 9784 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9785 CD 88 94     	call calcula_tercio
 125+ 9788 FE 01        	cp 1
 126+ 978A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 978C CD 9A 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 978F 28 04            jr z,9F
 129+ 9791 30 02            jr nc,9F
 130+ 9793 18 02        	jr 8F
 131+ 9795 1E 02        9 ld e,2
 132+ 9797 C1           8 pop bc
 133+ 9798 E1           10 pop hl
 134+ 9799 C9           5 ret
 135+ 979A
 136+ 979A              ; --------------------
 137+ 979A              ;
 138+ 979A              ; 25/08/22
 139+ 979A
 140+ 979A CD 88 94     Comprueba_centro call calcula_tercio
 141+ 979D 67               ld h,a
 142+ 979E 08           	ex af,af
 143+ 979F FE 02        	cp 2
 144+ 97A1 38 07        	jr c,1F
 145+ 97A3 28 05        	jr z,1F
 146+ 97A5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97A8 18 03        	jr 2F
 148+ 97AA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97AD 08           2 ex af,af
 150+ 97AE A7               and a
 151+ 97AF ED 42            sbc hl,bc
 152+ 97B1 C9               ret
 153+ 97B2
 154+ 97B2              ; *********************************************************************************************************************************************************************************************
 155+ 97B2              ;
 156+ 97B2              ;   16/8/22
 157+ 97B2              ;
 158+ 97B2              ;	Comprueba_limite_vertical
 159+ 97B2              ;
 160+ 97B2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97B2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97B2              ;
 163+ 97B2
 164+ 97B2 2A CF 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97B5 7D           	ld a,l
 166+ 97B6 E6 1F        	and $1F
 167+ 97B8 57           	ld d,a
 168+ 97B9 3A E2 8B     	ld a,(Limite_vertical)
 169+ 97BC BA           	cp d 											; Límite - Posición.
 170+ 97BD 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97BE 3A DE 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97C1 CB 47        	bit 0,a
 173+ 97C3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97C5
 175+ 97C5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97C5
 177+ 97C5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97C6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97C8
 180+ 97C8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97C8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97C8
 183+ 97C8 3A C0 8B         ld a,(Coordenada_X)
 184+ 97CB 16 0F            ld d,Centro_izquierda
 185+ 97CD A7               and a
 186+ 97CE 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97CF 28 1E            jr z,3F
 188+ 97D1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97D3              ;                                                    ; _salimos sin modificar nada.
 190+ 97D3 18 0E            jr 2F
 191+ 97D5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97D6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97D8
 194+ 97D8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97D8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97D8
 197+ 97D8 3A C0 8B         ld a,(Coordenada_X)
 198+ 97DB 16 10            ld d,Centro_derecha
 199+ 97DD A7               and a
 200+ 97DE 92               sub d
 201+ 97DF 28 0E            jr z,3F
 202+ 97E1 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97E3              ;                                                    ; _salimos sin modificar nada.
 204+ 97E3 CB 43        2 bit 0,e
 205+ 97E5 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97E7 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97E8 CD 7C 98         call Modificaccionne
 208+ 97EB C1           	pop bc
 209+ 97EC CD 8C 98         call Inicializacion
 210+ 97EF C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97F0
 212+ 97F0              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97F0
 214+ 97F0 C5           4 push bc
 215+ 97F1 01 CE 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97F4 0A           	ld a,(bc)
 217+ 97F5 3D           	dec a
 218+ 97F6 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97F7 7D           	ld a,l
 220+ 97F8 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97F9 CB 47        	bit 0,a
 222+ 97FB 28 03        	jr z,5F
 223+ 97FD 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97FE 18 2E        	jr 7F
 225+ 9800
 226+ 9800              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9800
 228+ 9800 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9801 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9802 3A CC 8B     	ld a,(Ctrl_0)
 231+ 9805 CB 4F        	bit 1,a
 232+ 9807 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9809 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 980A
 235+ 980A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 980A
 237+ 980A 1C               inc e
 238+ 980B 1D               dec e
 239+ 980C 20 07            jr nz,12F
 240+ 980E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 980F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9810 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9813 18 44        13 jr 9F
 244+ 9815 CB 43        12 bit 0,e
 245+ 9817 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9819              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9819 C1           	pop bc
 248+ 981A 18 D3        	jr 3B
 249+ 981C 80           14 add b
 250+ 981D 6F               ld l,a
 251+ 981E 22 CF 8B     	ld (Posicion_actual),hl
 252+ 9821 CD 7C 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9824 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9826 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9828 32 CC 8B         ld (Ctrl_0),a
 256+ 982B F1           	pop af
 257+ 982C 18 2B        	jr 9F
 258+ 982E
 259+ 982E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 982E
 261+ 982E F5           7 push af
 262+ 982F 3A CC 8B     	ld a,(Ctrl_0)
 263+ 9832 CB 47        	bit 0,a
 264+ 9834 20 1D        	jr nz,8F
 265+ 9836 F1           	pop af
 266+ 9837
 267+ 9837              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9837
 269+ 9837 1C           	inc e
 270+ 9838 1D               dec e
 271+ 9839 20 07            jr nz,10F
 272+ 983B 90           	sub b
 273+ 983C 6F               ld l,a
 274+ 983D 22 CF 8B     	ld (Posicion_actual),hl
 275+ 9840 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9842              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9842 CB 43        10 bit 0,e
 278+ 9844 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9846              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9846 C1           	pop bc
 281+ 9847 18 A6        	jr 3B
 282+ 9849 90           16 sub b
 283+ 984A 6F               ld l,a
 284+ 984B 22 CF 8B     	ld (Posicion_actual),hl
 285+ 984E CD 7C 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9851 18 06            jr 9F
 287+ 9853 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9855 32 CC 8B         ld (Ctrl_0),a
 289+ 9858 F1           	pop af
 290+ 9859 C1           9 pop bc
 291+ 985A 1E 00        	ld e,0
 292+ 985C CD 8C 98         call Inicializacion
 293+ 985F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9860 08           	ex af,af
 295+ 9861 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9862 18 8B            jr 3B
 297+ 9864
 298+ 9864              ; --------------------
 299+ 9864
 300+ 9864 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9866 CD AF 99     1 call PreviousScan
 302+ 9869 10 FB            djnz 1B
 303+ 986B 22 CF 8B     	ld (Posicion_actual),hl
 304+ 986E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 986F C9           	ret
 306+ 9870
 307+ 9870              ; --------------------
 308+ 9870
 309+ 9870 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9872 CD A0 99     1 call NextScan
 311+ 9875 10 FB            djnz 1B
 312+ 9877 22 CF 8B     	ld (Posicion_actual),hl
 313+ 987A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 987B C9           	ret
 315+ 987C
 316+ 987C              ; --------------------
 317+ 987C              ;
 318+ 987C              ;	22/01/23
 319+ 987C              ;
 320+ 987C              ;	E="1". Hemos cambiado de cuadrante.
 321+ 987C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 987C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 987C
 324+ 987C
 325+ 987C              Modificaccionne
 326+ 987C
 327+ 987C 3A DE 8B     	ld a,(Cuad_objeto)
 328+ 987F FE 02        	cp 2
 329+ 9881 CC 64 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9884 DC 64 98         call c,Modifica_Pos_actual
 331+ 9887 C8           	ret z
 332+ 9888 CD 70 98         call Modifica_Pos_actual2
 333+ 988B C9               ret
 334+ 988C
 335+ 988C              ; *************************************************************************************************************************************************************************************************
 336+ 988C              ;
 337+ 988C              ;	13/8/22
 338+ 988C              ;
 339+ 988C              ;	Inicializacion
 340+ 988C              ;
 341+ 988C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 988C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 988C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 988C              ;
 345+ 988C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 988C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 988C              ;	_ desaparece/aparece.
 348+ 988C
 349+ 988C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 988C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 988C              ;
 352+ 988C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 988C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 988C              ; 		   [E] ="0"
 355+ 988C
 356+ 988C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 988C
 358+ 988C CD 88 94     Inicializacion call calcula_tercio
 359+ 988F 28 36        	jr z,primit
 360+ 9891 E6 02        	and 2
 361+ 9893 20 07        	jr nz,segmit
 362+ 9895 7D           	ld a,l
 363+ 9896 FE 7F        	cp $7f
 364+ 9898 38 2D        	jr c,primit
 365+ 989A 28 2B        	jr z,primit
 366+ 989C CD 02 99     segmit call column
 367+ 989F 38 13        	jr c,tercuad
 368+ 98A1 3E 04        cuarcuad ld a,4
 369+ 98A3 32 DE 8B     	ld (Cuad_objeto),a
 370+ 98A6 21 20 48     	ld hl,$4820
 371+ 98A9 22 E0 8B     	ld (Limite_horizontal),hl
 372+ 98AC 21 E2 8B     	ld hl,Limite_vertical
 373+ 98AF 36 0D        	ld (hl),$0d
 374+ 98B1 08           	ex af,af
 375+ 98B2 18 3C        	jr 1F
 376+ 98B4              tercuad
 377+ 98B4 3E 03        	ld a,3
 378+ 98B6 32 DE 8B     	ld (Cuad_objeto),a
 379+ 98B9 21 20 48     	ld hl,$4820
 380+ 98BC 22 E0 8B     	ld (Limite_horizontal),hl
 381+ 98BF 21 E2 8B     	ld hl,Limite_vertical
 382+ 98C2 36 12        	ld (hl),$12
 383+ 98C4 08           	ex af,af
 384+ 98C5 18 29        	jr 1F
 385+ 98C7 CD 02 99     primit call column
 386+ 98CA 38 13        	jr c, primcuad
 387+ 98CC              segcuad
 388+ 98CC 3E 02        	ld a,2
 389+ 98CE 32 DE 8B     	ld (Cuad_objeto),a
 390+ 98D1 21 C0 4F     	ld hl,$4fc0
 391+ 98D4 22 E0 8B     	ld (Limite_horizontal),hl
 392+ 98D7 21 E2 8B     	ld hl,Limite_vertical
 393+ 98DA 36 0D        	ld (hl),$0d
 394+ 98DC 08           	ex af,af
 395+ 98DD 18 11        	jr 1F
 396+ 98DF              primcuad
 397+ 98DF 3E 01        	ld a,1
 398+ 98E1 32 DE 8B     	ld (Cuad_objeto),a
 399+ 98E4 21 C0 4F     	ld hl,$4fc0
 400+ 98E7 22 E0 8B     	ld (Limite_horizontal),hl
 401+ 98EA 21 E2 8B     	ld hl,Limite_vertical
 402+ 98ED 36 12        	ld (hl),$12
 403+ 98EF 08           	ex af,af
 404+ 98F0
 405+ 98F0 C5           1 push bc
 406+ 98F1 E5           	push hl
 407+ 98F2 D5           	push de
 408+ 98F3
 409+ 98F3 2A CF 8B     	ld hl,(Posicion_actual)
 410+ 98F6 CD A6 94     	call Genera_coordenadas
 411+ 98F9
 412+ 98F9 D1           	pop de
 413+ 98FA E1           	pop hl
 414+ 98FB C1           	pop bc
 415+ 98FC
 416+ 98FC 21 CC 8B     	ld hl,Ctrl_0
 417+ 98FF CB EE        	set 5,(hl)
 418+ 9901 C9           	ret
 419+ 9902
 420+ 9902              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9902
 422+ 9902              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9902              ;
 424+ 9902              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9902
 426+ 9902 7D           column ld a,l
 427+ 9903 E6 1F        	and $1f
 428+ 9905 FE 10         	cp $10
 429+ 9907 C9            	ret
 430+ 9908
 431+ 9908              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9908              ;
 433+ 9908              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9908              ;
 435+ 9908              ; 14/12/22
 436+ 9908              ;
 437+ 9908              ;	Modifica: A y BC.
 438+ 9908
 439+ 9908 3A DE 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 990B E6 01        	and 1
 441+ 990D 28 17        	jr z,1F
 442+ 990F
 443+ 990F              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 990F
 445+ 990F 3A C0 8B     	ld a,(Coordenada_X)
 446+ 9912 47           	ld b,a
 447+ 9913 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9914 79           	ld a,c
 449+ 9915 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9916 38 08        	jr c,2F
 451+ 9918 47           	ld b,a
 452+ 9919 79           	ld a,c
 453+ 991A 90           	sub b
 454+ 991B 32 DF 8B     	ld (Columnas),a
 455+ 991E 18 1B        	jr 4F
 456+ 9920 79           2 ld a,c
 457+ 9921 32 DF 8B     	ld (Columnas),a
 458+ 9924 18 15        	jr 4F
 459+ 9926
 460+ 9926              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9926
 462+ 9926 3A C0 8B     1 ld a,(Coordenada_X)
 463+ 9929 81           	add c
 464+ 992A 3D           	dec a
 465+ 992B D6 1F        	sub $1f
 466+ 992D 38 08        	jr c,3F
 467+ 992F 47           	ld b,a
 468+ 9930 79           	ld a,c
 469+ 9931 90           	sub b
 470+ 9932 32 DF 8B     	ld (Columnas),a
 471+ 9935 18 04        	jr 4F
 472+ 9937 79           3 ld a,c
 473+ 9938 32 DF 8B     	ld (Columnas),a
 474+ 993B D9           4 exx
 475+ 993C 4F           	ld c,a
 476+ 993D D9           	exx
 477+ 993E C9            ret
 478+ 993F
 479+ 993F              ; --------------------------------------------------------------------------------------------------------------------
 480+ 993F              ;
 481+ 993F              ;   19/7/23
 482+ 993F              ;
 483+ 993F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 993F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 993F              ;
 486+ 993F              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 993F              ;			HL e IY Contienen (Puntero_objeto).
 488+ 993F              ;
 489+ 993F              ;	DESTRUYE: HL,B Y A.
 490+ 993F
 491+ 993F 3A DE 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9942 FE 02        	cp 2
 493+ 9944 38 18        	jr c,1F
 494+ 9946 28 16        	jr z,1F
 495+ 9948 E6 01        	and 1
 496+ 994A 28 0D        	jr z,3F
 497+ 994C
 498+ 994C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 994C
 500+ 994C CD 88 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 994F
 502+ 994F 7D           9 ld a,l
 503+ 9950 E6 1F        	and $1f
 504+ 9952 28 2A        	jr z,7F
 505+ 9954 2B           	dec hl
 506+ 9955 10 F8        	djnz 9B
 507+ 9957 18 25        	jr 7F
 508+ 9959
 509+ 9959              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9959
 511+ 9959 2A CF 8B     3 ld hl,(Posicion_actual)
 512+ 995C 18 20        	jr 7F
 513+ 995E
 514+ 995E 28 14        1 jr z,2F
 515+ 9960
 516+ 9960              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9960
 518+ 9960 CD 88 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9963
 520+ 9963 7D           4 ld a,l
 521+ 9964 E6 1F        	and $1f
 522+ 9966 28 03        	jr z,6F
 523+ 9968 2B           	dec hl
 524+ 9969 10 F8        	djnz 4B
 525+ 996B 06 0F        6 ld b,15
 526+ 996D CD AF 99     5 call PreviousScan
 527+ 9970 10 FB        	djnz 5B
 528+ 9972 18 0A        	jr 7F
 529+ 9974
 530+ 9974              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9974
 532+ 9974 CD 88 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9977 06 0F        	ld b,15
 534+ 9979 CD AF 99     8 call PreviousScan
 535+ 997C 10 FB        	djnz 8B
 536+ 997E
 537+ 997E E5           7 push hl
 538+ 997F DD E1        	pop ix
 539+ 9981
 540+ 9981 2A D1 8B     	ld hl,(Puntero_objeto)
 541+ 9984 E5           	push hl
 542+ 9985 FD E1        	pop iy
 543+ 9987
 544+ 9987 C9           	ret
 545+ 9988
 546+ 9988              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9988              ;
 548+ 9988              ;	2/1/23
 549+ 9988              ;
 550+ 9988              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9988              ;
 552+ 9988              ;	Tras esta rutina tenemos:
 553+ 9988              ;
 554+ 9988              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9988              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9988              ;
 557+ 9988              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9988
 559+ 9988 2A CF 8B     Operandos ld hl,(Posicion_actual)
 560+ 998B 3A DF 8B     	ld a,(Columnas)
 561+ 998E 3D           	dec a
 562+ 998F 20 01        	jr nz,1F
 563+ 9991 3C           	inc a
 564+ 9992 47           1 ld b,a
 565+ 9993 C9           	ret
 566+ 9994
 567+ 9994              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9994              ;
 569+ 9994              ;	Prepara_draw
 570+ 9994              ;
 571+ 9994              ;	Es una rutina de carga.
 572+ 9994              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9994              ;
 574+ 9994              ;	FUNCIONAMIENTO:
 575+ 9994              ;
 576+ 9994              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9994              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9994              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9994              ;
 580+ 9994              ;	DESTRUYE:
 581+ 9994              ;
 582+ 9994              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9994
 584+ 9994 21 CD 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9997 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9998 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9999 4E           	ld c,(hl)
 588+ 999A 2A CF 8B     	ld hl,(Posicion_actual)
 589+ 999D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 999F C9           	ret
 591+ 99A0
 592+ 99A0              ;----------------------------------------------------------------------------------------------------------------
 593+ 99A0              ;
 594+ 99A0              ;	5/08/22
 595+ 99A0              ;
 596+ 99A0              ;   NextScan.
 597+ 99A0              ;
 598+ 99A0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99A0              ;
 600+ 99A0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99A0              ;
 602+ 99A0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99A0              ;
 604+ 99A0              ;       DESTRUIDOS: AF y HL !!!
 605+ 99A0              ;
 606+ 99A0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99A0              ;
 608+ 99A0
 609+ 99A0 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99A1 7C               ld a,h
 611+ 99A2 E6 07            and 7
 612+ 99A4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99A5
 614+ 99A5 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99A6 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99A8 6F               ld l,a
 617+ 99A9 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99AA
 619+ 99AA 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99AB D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99AD 67               ld h,a
 622+ 99AE C9               ret
 623+ 99AF
 624+ 99AF              ;----------------------------------------------------------------------------------------------------------------
 625+ 99AF              ;
 626+ 99AF              ;	5/08/22
 627+ 99AF              ;
 628+ 99AF              ;   PreviousScan.
 629+ 99AF              ;
 630+ 99AF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99AF              ;
 632+ 99AF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99AF              ;
 634+ 99AF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99AF              ;
 636+ 99AF              ;       DESTRUIDOS: AF y HL !!!
 637+ 99AF              ;
 638+ 99AF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99AF              ;
 640+ 99AF
 641+ 99AF 7C           PreviousScan ld a,h
 642+ 99B0 25               dec h               ; Dec H.
 643+ 99B1 E6 07            and 7
 644+ 99B3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99B4
 646+ 99B4 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99B5 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99B7 6F               ld l,a
 649+ 99B8 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99B9
 651+ 99B9 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99BA C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99BC 67               ld h,a
 654+ 99BD C9               ret
 655+ 99BE
 656+ 99BE
 657+ 99BE
 658+ 99BE
 659+ 99BE
 660+ 99BE
 661+ 99BE
 662+ 99BE
 663+ 99BE
 664+ 99BE
 665+ 99BE
 666+ 99BE
# file closed: Draw_XOR.asm
2075  99BE              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99BE
   2+ 99BE              ; ******************************************************************************************************************************************************************************************
   3+ 99BE              ;
   4+ 99BE              ;   20/05/23
   5+ 99BE              ;
   6+ 99BE              ;	Recompone_posicion_inicio
   7+ 99BE              ;
   8+ 99BE              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99BE              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99BE              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99BE              ;	_ a una u otra rutina.
  12+ 99BE
  13+ 99BE              Recompone_posicion_inicio
  14+ 99BE
  15+ 99BE 2A DC 8B     	ld hl,(Posicion_inicio)
  16+ 99C1 7D           	ld a,l
  17+ 99C2 E6 1F        	and $1f
  18+ 99C4 28 16        	jr z,1F
  19+ 99C6
  20+ 99C6 FE 1F        	cp $1f
  21+ 99C8 28 0D        	jr z,3F
  22+ 99CA
  23+ 99CA 21 CB 8B     	ld hl,Ctrl_2
  24+ 99CD CB C6        	set 0,(hl)
  25+ 99CF 2A D1 8B     	ld hl,(Puntero_objeto)
  26+ 99D2 22 FD 8B     	ld (Repone_puntero_objeto),hl
  27+ 99D5 18 08        	jr 2F
  28+ 99D7
  29+ 99D7 CD 85 9B     3 call Mov_left
  30+ 99DA 18 03        	jr 2F
  31+ 99DC
  32+ 99DC CD 62 9A     1 call Mov_right
  33+ 99DF 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99E2 22 D1 8B     	ld (Puntero_objeto),hl
  35+ 99E5 C9           	ret
  36+ 99E6
  37+ 99E6              ; ******************************************************************************************************************************************************************************************
  38+ 99E6              ;
  39+ 99E6              ;   27/05/23
  40+ 99E6              ;
  41+ 99E6              ;	Mov_down
  42+ 99E6              ;
  43+ 99E6              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99E6              ;
  45+ 99E6              ;
  46+ 99E6              Mov_down
  47+ 99E6
  48+ 99E6 CD 50 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99E9              ;																	; _ repone (Puntero_objeto).
  50+ 99E9 21 CC 8B     	ld hl,Ctrl_0
  51+ 99EC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99EE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99EE              ; 																	; _ en el caso de que no lo haya.
  54+ 99EE 3A E7 8B     	ld a,(Vel_down)
  55+ 99F1 47           	ld b,a
  56+ 99F2 2A CF 8B         ld hl,(Posicion_actual)
  57+ 99F5 CD 88 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99F8 E6 02        	and 2
  59+ 99FA 28 17        	jr z,1F
  60+ 99FC
  61+ 99FC              ; Nos encontramos en el último tercio de pantalla.
  62+ 99FC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99FC
  64+ 99FC 7C           	ld a,h
  65+ 99FD FE 57        	cp $57
  66+ 99FF 20 12        	jr nz,1F
  67+ 9A01
  68+ 9A01 7D           	ld a,l
  69+ 9A02 C6 20        	add $20
  70+ 9A04 30 0D        	jr nc,1F
  71+ 9A06
  72+ 9A06              ; ------------------------------
  73+ 9A06              ;
  74+ 9A06              ;	12/01/24
  75+ 9A06
  76+ 9A06              ;	call Reaparece_arriba
  77+ 9A06 CD 12 9D     	call Reinicio
  78+ 9A09
  79+ 9A09              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A09
  81+ 9A09 3A 33 8C     	ld a,(Ctrl_3)
  82+ 9A0C CB CF        	set 1,a
  83+ 9A0E 32 33 8C     	ld (Ctrl_3),a
  84+ 9A11
  85+ 9A11 18 08        	jr 3F
  86+ 9A13              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A13              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A13              ; ------------------------------
  89+ 9A13
  90+ 9A13 CD A0 99     1 call NextScan
  91+ 9A16 22 CF 8B     	ld (Posicion_actual),hl
  92+ 9A19 10 DA            djnz 2B
  93+ 9A1B CD A6 94     3 call Genera_coordenadas
  94+ 9A1E C9           	ret
  95+ 9A1F
  96+ 9A1F              ; ******************************************************************************************************************************************************************************************
  97+ 9A1F              ;
  98+ 9A1F              ;   27/05/23
  99+ 9A1F              ;
 100+ 9A1F              ;	Mov_up
 101+ 9A1F              ;
 102+ 9A1F              ; 	Mueve el Sprite hacia arriba.
 103+ 9A1F              ;
 104+ 9A1F              ;
 105+ 9A1F              Mov_up
 106+ 9A1F
 107+ 9A1F CD 50 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A22              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A22 21 CC 8B     	ld hl,Ctrl_0
 110+ 9A25 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A27              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A27              ; 																		; _ en el caso de que no lo haya.
 113+ 9A27 3A E6 8B     	ld a,(Vel_up)
 114+ 9A2A 47           	ld b,a
 115+ 9A2B 2A CF 8B     	ld hl,(Posicion_actual)
 116+ 9A2E CD 88 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A31 A7           	and a
 118+ 9A32 20 10        	jr nz,1F
 119+ 9A34
 120+ 9A34              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A34              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A34
 123+ 9A34 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A35 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A37 20 0B            jr nz,1F
 126+ 9A39 7D               ld a,l
 127+ 9A3A D6 20            sub $20
 128+ 9A3C 30 06            jr nc,1F
 129+ 9A3E 25               dec h
 130+ 9A3F
 131+ 9A3F              ; -----------------------------
 132+ 9A3F CD F3 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A42              ;	call Reinicio
 134+ 9A42              ; -----------------------------
 135+ 9A42
 136+ 9A42 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A44 CD AF 99     1 call PreviousScan
 138+ 9A47 22 CF 8B     	ld (Posicion_actual),hl
 139+ 9A4A 10 E2            djnz 3B
 140+ 9A4C CD A6 94     2 call Genera_coordenadas
 141+ 9A4F C9           	ret
 142+ 9A50
 143+ 9A50              ; -----------------------------
 144+ 9A50              ;
 145+ 9A50              ;	27/5/23
 146+ 9A50              ;
 147+ 9A50              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A50              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A50              ;
 150+ 9A50              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A50              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A50              ;
 153+ 9A50              ;	Modifica: A y (Puntero_objeto).
 154+ 9A50
 155+ 9A50 3A CB 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A53 CB 47        	bit 0,a
 157+ 9A55 C8           	ret z
 158+ 9A56 CB 87        	res 0,a
 159+ 9A58 32 CB 8B     	ld (Ctrl_2),a
 160+ 9A5B 2A FD 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A5E 22 D1 8B     	ld (Puntero_objeto),hl
 162+ 9A61 C9           	ret
 163+ 9A62
 164+ 9A62              ; ******************************************************************************************************************************************************************************************
 165+ 9A62              ;
 166+ 9A62              ;	19/10/22
 167+ 9A62              ;
 168+ 9A62              ;	Mov_right.
 169+ 9A62              ;
 170+ 9A62              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A62              ;
 172+ 9A62
 173+ 9A62 3A CC 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A65 CB 77        	bit 6,a
 175+ 9A67 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A69
 177+ 9A69 CD A1 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A6C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A6D
 180+ 9A6D 21 CC 8B     	ld hl,Ctrl_0
 181+ 9A70 CB E6        	set 4,(hl)
 182+ 9A72 18 52        	jr 8F
 183+ 9A74
 184+ 9A74 21 CC 8B     10 ld hl,Ctrl_0
 185+ 9A77 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A79              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A79              ; 																	; _ en el caso de que no lo haya.
 188+ 9A79 3A C0 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A7C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A7E 20 46        	jr nz,8F
 191+ 9A80
 192+ 9A80 3A D3 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A83 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A84 28 40        	jr z,8F
 195+ 9A86
 196+ 9A86              ; ---------- ---------- ----------
 197+ 9A86              ;
 198+ 9A86              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A86
 200+ 9A86 3A E5 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A89 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A8B 28 11        	jr z,1F
 203+ 9A8D 38 06        	jr c,6F
 204+ 9A8F FE 04        	cp 4
 205+ 9A91 28 14        	jr z,7F
 206+ 9A93 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A95
 208+ 9A95              ; ---------- ---------- ----------
 209+ 9A95              ;
 210+ 9A95              ; Perfiles de velocidad
 211+ 9A95              ;
 212+ 9A95
 213+ 9A95 3A D3 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A98 FE FE        	cp $fe
 215+ 9A9A 20 2A        	jr nz,8F
 216+ 9A9C 18 10        	jr 3F
 217+ 9A9E 3A D3 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AA1 FE FD        	cp $fd
 219+ 9AA3 20 21        	jr nz,8F
 220+ 9AA5 18 07        	jr 3F
 221+ 9AA7 3A D3 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AAA FE FB        	cp $fb
 223+ 9AAC 20 18        	jr nz,8F
 224+ 9AAE
 225+ 9AAE              ; ---------- ---------- ----------
 226+ 9AAE
 227+ 9AAE              3
 228+ 9AAE CD E1 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AB1              ;	call Reinicio
 230+ 9AB1
 231+ 9AB1              ; ---------- ---------- ----------
 232+ 9AB1              ;
 233+ 9AB1              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AB1
 235+ 9AB1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AB3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AB4 CD CD 9A     	call DESPLZ_DER
 238+ 9AB7 C1           	pop bc
 239+ 9AB8 10 F9        	djnz 5B
 240+ 9ABA 2A CF 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9ABD 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9ABE 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9AC1 CD A6 94     	call Genera_coordenadas
 244+ 9AC4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AC6
 246+ 9AC6              ; ---------- ---------- ----------
 247+ 9AC6
 248+ 9AC6 2A CF 8B     8 ld hl,(Posicion_actual)
 249+ 9AC9 CD CD 9A     	call DESPLZ_DER
 250+ 9ACC C9           2 ret
 251+ 9ACD
 252+ 9ACD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9ACD              ;
 254+ 9ACD              ;	22/9/22
 255+ 9ACD              ;
 256+ 9ACD
 257+ 9ACD CD DC 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AD0 CD 28 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AD3 CD 51 9B         call Ciclo_completo
 260+ 9AD6 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AD9 CB FE        	set 7,(hl)
 262+ 9ADB C9           	ret
 263+ 9ADC
 264+ 9ADC              ; ******************************************************************************************************************************************************************************************
 265+ 9ADC              ;	15/02/23
 266+ 9ADC              ;
 267+ 9ADC
 268+ 9ADC 3A E5 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9ADF 47           	ld b,a
 270+ 9AE0 2A D8 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AE3 23           1 inc hl
 272+ 9AE4 23           	inc hl
 273+ 9AE5 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AE7 22 D8 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AEA CD 87 90     	call Extrae_address
 276+ 9AED 22 D1 8B     	ld (Puntero_objeto),hl
 277+ 9AF0
 278+ 9AF0              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AF0
 280+ 9AF0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AF0              ; Cuántos movimientos hemos hecho ??
 282+ 9AF0              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AF0
 284+ 9AF0 2A D4 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AF3 EB           	ex de,hl
 286+ 9AF4 A7           	and a
 287+ 9AF5 ED 52        	sbc hl,de
 288+ 9AF7 CB 3D        	srl l
 289+ 9AF9 3E 08        6 ld a,8
 290+ 9AFB 95           	sub l
 291+ 9AFC 30 1E        	jr nc,3F
 292+ 9AFE
 293+ 9AFE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AFE              ; B="0".
 295+ 9AFE
 296+ 9AFE 04           4 inc b
 297+ 9AFF 3C           	inc a
 298+ 9B00 20 FC        	jr nz,4B
 299+ 9B02 78           	ld a,b
 300+ 9B03 08           	ex af,af
 301+ 9B04 2A D4 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B07 23           5 inc hl
 303+ 9B08 23           	inc hl
 304+ 9B09 10 FC        	djnz 5B
 305+ 9B0B 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B0E CD 87 90     	call Extrae_address
 307+ 9B11 22 D1 8B     	ld (Puntero_objeto),hl
 308+ 9B14
 309+ 9B14              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B14              ; _(Posicion_actual).
 311+ 9B14
 312+ 9B14 21 CF 8B     	ld hl,Posicion_actual
 313+ 9B17 34           	inc (hl)
 314+ 9B18 08               ex af,af
 315+ 9B19 6F           	ld l,a
 316+ 9B1A 18 DD        	jr 6B
 317+ 9B1C
 318+ 9B1C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B1C
 320+ 9B1C 47           3 ld b,a
 321+ 9B1D 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B20 23           2 inc hl
 323+ 9B21 23           	inc hl
 324+ 9B22 10 FC        	djnz 2B
 325+ 9B24 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B27 C9           8 ret
 327+ 9B28
 328+ 9B28              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B28              ;
 330+ 9B28              ;	24/7/22
 331+ 9B28              ;
 332+ 9B28              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B28              ;
 334+ 9B28              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B28              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B28              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B28
 338+ 9B28 3A D3 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B2B A7           	and a
 340+ 9B2C 20 1F        	jr nz,1F
 341+ 9B2E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B30 32 D3 8B         ld (CTRL_DESPLZ),a
 343+ 9B33
 344+ 9B33 21 CE 8B     	ld hl,Columns
 345+ 9B36 34           	inc (hl)
 346+ 9B37 3A DE 8B     	ld a,(Cuad_objeto)
 347+ 9B3A E6 01        	and 1
 348+ 9B3C 28 0F        	jr z,1F
 349+ 9B3E 2A CF 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B41 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B42 22 CF 8B     	ld (Posicion_actual),hl
 352+ 9B45 CD A6 94     	call Genera_coordenadas
 353+ 9B48 CD AD 9C     	call Inc_CTRL_DESPLZ
 354+ 9B4B 18 03        	jr 2F
 355+ 9B4D CD AD 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B50 C9           2 ret
 357+ 9B51
 358+ 9B51              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B51              ;
 360+ 9B51              ;	24/7/22
 361+ 9B51              ;
 362+ 9B51              ;	Ciclo_completo.
 363+ 9B51              ;
 364+ 9B51              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B51              ;
 366+ 9B51              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B51              ; 	Decrementamos (Columns).
 368+ 9B51              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B51              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B51
 371+ 9B51
 372+ 9B51 3A D3 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B54 FE FF        	cp $ff
 374+ 9B56 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B58 E6 F0        	and $f0
 376+ 9B5A 20 28        	jr nz,3F
 377+ 9B5C
 378+ 9B5C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B5C
 380+ 9B5C 3A D3 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B5F 47           	ld b,a
 382+ 9B60 3E F8        	ld a,$f8
 383+ 9B62 80           	add b
 384+ 9B63 32 D3 8B     	ld (CTRL_DESPLZ),a
 385+ 9B66 18 1C        	jr 3F
 386+ 9B68 21 CE 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B6B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B6C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B6D 32 D3 8B     	ld (CTRL_DESPLZ),a
 390+ 9B70 3A DE 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B73 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B75 20 0A        	jr nz,2F
 393+ 9B77 2A CF 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B7A 23           	inc hl
 395+ 9B7B 22 CF 8B     	ld (Posicion_actual),hl
 396+ 9B7E CD A6 94     	call Genera_coordenadas
 397+ 9B81
 398+ 9B81              ; Inicia el puntero de Sprite.
 399+ 9B81
 400+ 9B81 CD 9C 90     2 call Inicia_puntero_objeto_der
 401+ 9B84 C9           3 ret
 402+ 9B85
 403+ 9B85              ; ******************************************************************************************************************************************************************************************
 404+ 9B85              ;
 405+ 9B85              ;	15/02/23
 406+ 9B85              ;
 407+ 9B85              ;	Mov_left.
 408+ 9B85              ;
 409+ 9B85              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B85              ;
 411+ 9B85              Mov_left
 412+ 9B85
 413+ 9B85 21 CC 8B     	ld hl,Ctrl_0
 414+ 9B88 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B8A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B8A              ; 																	; _ en el caso de que no lo haya.
 417+ 9B8A 3A CC 8B     	ld a,(Ctrl_0)
 418+ 9B8D CB 77        	bit 6,a
 419+ 9B8F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B91
 421+ 9B91 CD A7 9C     	call Stop_Amadeus_left
 422+ 9B94 C8           	ret z
 423+ 9B95 20 4A        	jr nz,8F
 424+ 9B97
 425+ 9B97 3A C0 8B     11 ld a,(Coordenada_X)
 426+ 9B9A A7           	and a
 427+ 9B9B 20 44        	jr nz,8F
 428+ 9B9D
 429+ 9B9D 3A D3 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BA0 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BA1 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BA3
 433+ 9BA3              ; ---------- ---------- ----------
 434+ 9BA3
 435+ 9BA3 3A E4 8B     	ld a,(Vel_left)
 436+ 9BA6 FE 02        	cp 2
 437+ 9BA8 28 0F        	jr z,1F
 438+ 9BAA 38 04        	jr c,6F
 439+ 9BAC FE 04        	cp 4
 440+ 9BAE 28 12        	jr z,7F
 441+ 9BB0
 442+ 9BB0              ; ---------- ---------- ----------
 443+ 9BB0
 444+ 9BB0 3A D3 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BB3 FE F8        	cp $f8
 446+ 9BB5 20 2A        	jr nz,8F
 447+ 9BB7 18 10        	jr 4F
 448+ 9BB9 3A D3 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BBC FE F9        	cp $f9
 450+ 9BBE 20 21        	jr nz,8F
 451+ 9BC0 18 07        	jr 4F
 452+ 9BC2 3A D3 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BC5 FE FB        	cp $fb
 454+ 9BC7 20 18        	jr nz,8F
 455+ 9BC9
 456+ 9BC9              ; ---------- ---------- ----------
 457+ 9BC9
 458+ 9BC9              4
 459+ 9BC9 CD CF 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BCC              ;	call Reinicio
 461+ 9BCC
 462+ 9BCC              ; ---------- ---------- ----------
 463+ 9BCC
 464+ 9BCC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BCE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BCF
 467+ 9BCF              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BCF              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BCF
 470+ 9BCF CD E8 9B     	call DESPLZ_IZQ
 471+ 9BD2 C1           	pop bc
 472+ 9BD3 10 F9        	djnz 5B
 473+ 9BD5 2A CF 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BD8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BD9 22 CF 8B     	ld (Posicion_actual),hl
 476+ 9BDC CD A6 94     	call Genera_coordenadas
 477+ 9BDF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BE1
 479+ 9BE1              ; ---------- ---------- ----------
 480+ 9BE1
 481+ 9BE1              ; Movemos, no hay recolocación.
 482+ 9BE1
 483+ 9BE1 2A CF 8B     8 ld hl,(Posicion_actual)
 484+ 9BE4 CD E8 9B     	call DESPLZ_IZQ
 485+ 9BE7 C9           2 ret
 486+ 9BE8
 487+ 9BE8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BE8              ;
 489+ 9BE8              ;	22/9/22
 490+ 9BE8
 491+ 9BE8              DESPLZ_IZQ
 492+ 9BE8
 493+ 9BE8 CD F7 9B     	call Desplaza_izquierda
 494+ 9BEB CD 43 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BEE CD 6B 9C     	call Ciclo_completo_2
 496+ 9BF1 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BF4 CB BE        	res 7,(hl)
 498+ 9BF6 C9           	ret
 499+ 9BF7
 500+ 9BF7              Desplaza_izquierda
 501+ 9BF7
 502+ 9BF7 3A E4 8B     	ld a,(Vel_left)
 503+ 9BFA 47           	ld b,a
 504+ 9BFB 2A DA 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BFE 23           1 inc hl
 506+ 9BFF 23           	inc hl
 507+ 9C00 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C02 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C05 CD 87 90     	call Extrae_address
 510+ 9C08 22 D1 8B     	ld (Puntero_objeto),hl
 511+ 9C0B
 512+ 9C0B              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C0B
 514+ 9C0B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C0B              ; Cuántos movimientos hemos hecho ??
 516+ 9C0B              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C0B
 518+ 9C0B 2A D6 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C0E EB           	ex de,hl
 520+ 9C0F A7           	and a
 521+ 9C10 ED 52        	sbc hl,de
 522+ 9C12 CB 3D        	srl l
 523+ 9C14 3E 08        6 ld a,8
 524+ 9C16 95           	sub l
 525+ 9C17 30 1E        	jr nc,3F
 526+ 9C19
 527+ 9C19              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C19              ; B="0".
 529+ 9C19
 530+ 9C19 04           4 inc b
 531+ 9C1A 3C           	inc a
 532+ 9C1B 20 FC        	jr nz,4B
 533+ 9C1D 78           	ld a,b
 534+ 9C1E 08           	ex af,af
 535+ 9C1F 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C22 23           5 inc hl
 537+ 9C23 23           	inc hl
 538+ 9C24 10 FC        	djnz 5B
 539+ 9C26 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C29 CD 87 90     	call Extrae_address
 541+ 9C2C 22 D1 8B     	ld (Puntero_objeto),hl
 542+ 9C2F
 543+ 9C2F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C2F              ; _(Posicion_actual).
 545+ 9C2F
 546+ 9C2F 21 CF 8B     	ld hl,Posicion_actual
 547+ 9C32 35           	dec (hl)
 548+ 9C33 08           	ex af,af
 549+ 9C34 6F           	ld l,a
 550+ 9C35 18 DD        	jr 6B
 551+ 9C37
 552+ 9C37              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C37
 554+ 9C37 47           3 ld b,a
 555+ 9C38 2A D4 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C3B 23           2 inc hl
 557+ 9C3C 23           	inc hl
 558+ 9C3D 10 FC        	djnz 2B
 559+ 9C3F 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C42 C9           8 ret
 561+ 9C43
 562+ 9C43              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C43              ;
 564+ 9C43              ;	modifica_parametros_1er_DESPLZ
 565+ 9C43              ;
 566+ 9C43              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C43              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C43              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C43
 570+ 9C43 3A D3 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C46 A7           	and a
 572+ 9C47 20 1E        	jr nz,1F
 573+ 9C49 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C4A 32 D3 8B         ld (CTRL_DESPLZ),a
 575+ 9C4D 21 CE 8B     	ld hl,Columns
 576+ 9C50 34           	inc (hl)
 577+ 9C51 3A DE 8B     	ld a,(Cuad_objeto)
 578+ 9C54 E6 01        	and 1
 579+ 9C56 20 0F        	jr nz,1F
 580+ 9C58 2A CF 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C5B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C5C 22 CF 8B     	ld (Posicion_actual),hl
 583+ 9C5F CD A6 94     	call Genera_coordenadas
 584+ 9C62 CD BE 9C     	call Dec_CTRL_DESPLZ
 585+ 9C65 18 03        	jr 2F
 586+ 9C67 CD BE 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C6A C9           2 ret
 588+ 9C6B
 589+ 9C6B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C6B
 591+ 9C6B 3A D3 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C6E FE F7        	cp $f7
 593+ 9C70 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C72 30 2C        	jr nc,3F
 595+ 9C74
 596+ 9C74              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C74
 598+ 9C74 06 00        	ld b,0
 599+ 9C76 04           4 inc b
 600+ 9C77 3C           	inc a
 601+ 9C78 FE F7        	cp $f7
 602+ 9C7A 20 FA        	jr nz,4B
 603+ 9C7C 3E FF        	ld a,$ff
 604+ 9C7E 90           	sub b
 605+ 9C7F 32 D3 8B     	ld (CTRL_DESPLZ),a
 606+ 9C82 18 1C        	jr 3F
 607+ 9C84
 608+ 9C84              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C84
 610+ 9C84 21 CE 8B     1 ld hl,Columns
 611+ 9C87 35           	dec (hl)
 612+ 9C88 AF           	xor a
 613+ 9C89 32 D3 8B     	ld (CTRL_DESPLZ),a
 614+ 9C8C 3A DE 8B     	ld a,(Cuad_objeto)
 615+ 9C8F E6 01        	and 1
 616+ 9C91 28 0A        	jr z,2F
 617+ 9C93 2A CF 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C96 2B           	dec hl
 619+ 9C97 22 CF 8B     	ld (Posicion_actual),hl
 620+ 9C9A CD A6 94     	call Genera_coordenadas
 621+ 9C9D
 622+ 9C9D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C9D
 624+ 9C9D CD AF 90     2 call Inicia_puntero_objeto_izq
 625+ 9CA0 C9           3 ret
 626+ 9CA1
 627+ 9CA1              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CA1              ;
 629+ 9CA1              ;	19/10/22
 630+ 9CA1              ;
 631+ 9CA1              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CA1              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CA1
 634+ 9CA1 3A C0 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CA4 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CA6 C9           	ret
 637+ 9CA7
 638+ 9CA7              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CA7              ;
 640+ 9CA7              ;	19/10/22
 641+ 9CA7              ;
 642+ 9CA7              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CA7              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CA7
 645+ 9CA7 3A C0 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CAA FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CAC C9           	ret
 648+ 9CAD
 649+ 9CAD              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CAD              ;
 651+ 9CAD              ;	24/7/22
 652+ 9CAD              ;
 653+ 9CAD              ;	Inc_CTRL_DESPLZ
 654+ 9CAD              ;
 655+ 9CAD              ;
 656+ 9CAD              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CAD
 658+ 9CAD 21 D3 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CB0 3A E5 8B     	ld a,(Vel_right)
 660+ 9CB3 A7           	and a
 661+ 9CB4 28 06        	jr z,1F
 662+ 9CB6 47           	ld b,a
 663+ 9CB7 34           3 inc (hl)
 664+ 9CB8 10 FD        	djnz 3B
 665+ 9CBA 18 01        	jr 2F
 666+ 9CBC 34           1 inc (hl)
 667+ 9CBD C9           2 ret
 668+ 9CBE
 669+ 9CBE              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CBE              ;
 671+ 9CBE              ;	5/2/23
 672+ 9CBE              ;
 673+ 9CBE              ;	Dec_CTRL_DESPLZ
 674+ 9CBE              ;
 675+ 9CBE              ;
 676+ 9CBE              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CBE
 678+ 9CBE 21 D3 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CC1 3A E4 8B     	ld a,(Vel_left)
 680+ 9CC4 A7           	and a
 681+ 9CC5 28 06        	jr z,1F
 682+ 9CC7 47           	ld b,a
 683+ 9CC8 35           3 dec (hl)
 684+ 9CC9 10 FD        	djnz 3B
 685+ 9CCB 18 01        	jr 2F
 686+ 9CCD 35           1 dec (hl)
 687+ 9CCE C9           2 ret
 688+ 9CCF
 689+ 9CCF              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CCF
 691+ 9CCF 2A CF 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CD2 01 1F 00     	ld bc,31
 693+ 9CD5 A7           	and a
 694+ 9CD6 ED 4A        	adc hl,bc
 695+ 9CD8 22 CF 8B     	ld (Posicion_actual),hl
 696+ 9CDB 21 CC 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CDE CB C6        	set 0,(hl)
 698+ 9CE0 C9           	ret
 699+ 9CE1
 700+ 9CE1              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CE1
 702+ 9CE1 2A CF 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CE4 01 1F 00     	ld bc,31
 704+ 9CE7 A7           	and a
 705+ 9CE8 ED 42        	sbc hl,bc
 706+ 9CEA 22 CF 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CED 21 CC 8B     	ld hl,Ctrl_0
 708+ 9CF0 CB CE        	set 1,(hl)
 709+ 9CF2 C9           	ret
 710+ 9CF3
 711+ 9CF3              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CF3
 713+ 9CF3 24           Reaparece_abajo inc h
 714+ 9CF4 01 E0 17     	ld bc,$17e0
 715+ 9CF7 A7           	and a
 716+ 9CF8 ED 4A        	adc hl,bc
 717+ 9CFA 22 CF 8B     	ld (Posicion_actual),hl
 718+ 9CFD 21 CC 8B     	ld hl,Ctrl_0
 719+ 9D00 CB D6        	set 2,(hl)
 720+ 9D02 C9           	ret
 721+ 9D03
 722+ 9D03              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D03
 724+ 9D03 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D06 A7           	and a
 726+ 9D07 ED 42        	sbc hl,bc
 727+ 9D09 22 CF 8B     	ld (Posicion_actual),hl
 728+ 9D0C 21 CC 8B     	ld hl,Ctrl_0
 729+ 9D0F CB DE        	set 3,(hl)
 730+ 9D11 C9           	ret
 731+ 9D12
 732+ 9D12              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D12              ;
 734+ 9D12              ;	15/07/23
 735+ 9D12
 736+ 9D12              Reinicio
 737+ 9D12
 738+ 9D12              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D12
 740+ 9D12 AF           	xor a
 741+ 9D13 21 F4 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D16 CD 34 9D     	call Limpia_contenido_hl
 743+ 9D19
 744+ 9D19 21 CF 8B     	ld hl,Posicion_actual
 745+ 9D1C CD 34 9D     	call Limpia_contenido_hl
 746+ 9D1F
 747+ 9D1F CD 88 92     	call Inicializa_Puntero_indice_mov
 748+ 9D22 CD 33 9E     	call Inicia_Puntero_mov
 749+ 9D25
 750+ 9D25 21 F6 8B     	ld hl,Incrementa_puntero
 751+ 9D28 06 05        	ld b,5
 752+ 9D2A 77           1 ld (hl),a
 753+ 9D2B 23           	inc hl
 754+ 9D2C 10 FC        	djnz 1B
 755+ 9D2E
 756+ 9D2E 21 CB 8B     	ld hl,Ctrl_2
 757+ 9D31 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D33
 759+ 9D33 C9           	ret
 760+ 9D34
 761+ 9D34 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D35 23           	inc hl
 763+ 9D36 77           	ld (hl),a
 764+ 9D37 C9           	ret
 765+ 9D38
 766+ 9D38              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D38              ;
 768+ 9D38              ;	18/6/24
 769+ 9D38              ;
 770+ 9D38
 771+ 9D38              Amadeus_a_izquierda
 772+ 9D38
 773+ 9D38              ;	Actualiza contador de movimientos.
 774+ 9D38
 775+ 9D38 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D3B 35           	dec (hl)
 777+ 9D3C 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D3E
 779+ 9D3E 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D41 2B           	dec hl
 781+ 9D42 2B           	dec hl
 782+ 9D43 2B           	dec hl
 783+ 9D44 2B           	dec hl
 784+ 9D45 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D48
 786+ 9D48 21 33 8C     	ld hl,Ctrl_3
 787+ 9D4B CB EE        	set 5,(hl)
 788+ 9D4D
 789+ 9D4D C9           	ret
 790+ 9D4E
 791+ 9D4E 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D4F C9           	ret
 793+ 9D50
 794+ 9D50
 795+ 9D50              Amadeus_a_derecha
 796+ 9D50
 797+ 9D50              ;	Actualiza contador de movimientos.
 798+ 9D50
 799+ 9D50 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D53 34           	inc (hl)
 801+ 9D54 3E 7A        	ld a,$7a
 802+ 9D56 BE           	cp (hl)
 803+ 9D57 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D59
 805+ 9D59 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D5C 23           	inc hl
 807+ 9D5D 23           	inc hl
 808+ 9D5E 23           	inc hl
 809+ 9D5F 23           	inc hl
 810+ 9D60 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D63
 812+ 9D63 21 33 8C     	ld hl,Ctrl_3
 813+ 9D66 CB EE        	set 5,(hl)
 814+ 9D68 C9           	ret
 815+ 9D69
 816+ 9D69 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D6A C9           	ret
# file closed: Direcciones.asm
2076  9D6B              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D6B              ; ----- ----- ----- ----- -----
   2+ 9D6B              ;
   3+ 9D6B              ;   28/12/23
   4+ 9D6B
   5+ 9D6B              Movimiento
   6+ 9D6B
   7+ 9D6B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D6B
   9+ 9D6B 3A CB 8B         ld a,(Ctrl_2)
  10+ 9D6E CB 57            bit 2,a
  11+ 9D70 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D72
  13+ 9D72 2A F2 8B         ld hl,(Puntero_mov)
  14+ 9D75 7E               ld a,(hl)
  15+ 9D76
  16+ 9D76              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D76
  18+ 9D76              Inicia_desplazamiento.
  19+ 9D76
  20+ 9D76              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D76
  22+ 9D76 CD 69 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D79
  24+ 9D79              ; Iniciamos (Repetimos_mov).
  25+ 9D79
  26+ 9D79 7E               ld a,(hl)
  27+ 9D7A E6 0F            and $0f
  28+ 9D7C 32 F8 8B         ld (Repetimos_desplazamiento),a
  29+ 9D7F 32 F9 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D82
  31+ 9D82              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D82
  33+ 9D82 23               inc hl
  34+ 9D83 7E               ld a,(hl)
  35+ 9D84 32 FB 8B         ld (Cola_de_desplazamiento),a
  36+ 9D87 2B               dec hl
  37+ 9D88
  38+ 9D88 21 CB 8B         ld hl,Ctrl_2
  39+ 9D8B CB D6            set 2,(hl)
  40+ 9D8D
  41+ 9D8D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D8D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D8D
  44+ 9D8D              Desplazamiento_iniciado
  45+ 9D8D
  46+ 9D8D CD 3D 9E         call Aplica_desplazamiento
  47+ 9D90
  48+ 9D90              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D90
  50+ 9D90 3A 33 8C         ld a,(Ctrl_3)
  51+ 9D93 CB 4F            bit 1,a
  52+ 9D95 C0               ret nz
  53+ 9D96
  54+ 9D96 21 F8 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D99 35               dec (hl)
  56+ 9D9A C0               ret nz
  57+ 9D9B
  58+ 9D9B              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D9B              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D9B              ; Analiza (Cola_de_desplazamiento).
  61+ 9D9B
  62+ 9D9B 3A FB 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D9E A7               and a
  64+ 9D9F CC 92 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DA2 28 30            jr z,Reinicia_el_movimiento
  66+ 9DA4
  67+ 9DA4 FE FF            cp $ff
  68+ 9DA6 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DA8
  70+ 9DA8 FE FE            cp $fe
  71+ 9DAA CC 17 9E         call z,Fijamos_bucle
  72+ 9DAD 28 25            jr z,Reinicia_el_movimiento
  73+ 9DAF
  74+ 9DAF FE FD            cp $fd
  75+ 9DB1 20 11            jr nz,1F
  76+ 9DB3
  77+ 9DB3              ; ---
  78+ 9DB3              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DB3
  80+ 9DB3 3A CB 8B         ld a,(Ctrl_2)
  81+ 9DB6 CB 5F            bit 3,a
  82+ 9DB8 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DBA
  84+ 9DBA              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DBA
  86+ 9DBA 21 CB 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DBD CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DBF
  89+ 9DBF CD 28 9E         call Inicia_Repetimos_movimiento
  90+ 9DC2 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DC4              ; ---
  92+ 9DC4
  93+ 9DC4 FE 01        1 cp 1
  94+ 9DC6 CA 01 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DC9
  96+ 9DC9 3D               dec a
  97+ 9DCA 32 FB 8B         ld (Cola_de_desplazamiento),a
  98+ 9DCD
  99+ 9DCD 3A F9 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DD0 32 F8 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DD3              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DD3 C9               ret
 103+ 9DD4
 104+ 9DD4              Reinicia_el_movimiento
 105+ 9DD4
 106+ 9DD4 3A CB 8B         ld a,(Ctrl_2)
 107+ 9DD7 CB 5F            bit 3,a
 108+ 9DD9 28 1B            jr z,2F
 109+ 9DDB
 110+ 9DDB              ; (Cola_de_desplazamiento)="254".
 111+ 9DDB
 112+ 9DDB 21 FA 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DDE 35               dec (hl)
 114+ 9DDF 20 15            jr nz,2F
 115+ 9DE1
 116+ 9DE1              ; Fin de las repeticiones del último movimiento.
 117+ 9DE1
 118+ 9DE1 21 CB 8B         ld hl,Ctrl_2
 119+ 9DE4 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DE6
 121+ 9DE6 2A F2 8B         ld hl,(Puntero_mov)
 122+ 9DE9 23               inc hl
 123+ 9DEA 23               inc hl
 124+ 9DEB 23               inc hl
 125+ 9DEC 22 F2 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DEF              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DEF 7E               ld a,(hl)
 128+ 9DF0 32 FB 8B         ld (Cola_de_desplazamiento),a
 129+ 9DF3
 130+ 9DF3 C3 9B 9D         jp Cola
 131+ 9DF6
 132+ 9DF6 CD 33 9E     2 call Inicia_Puntero_mov
 133+ 9DF9
 134+ 9DF9 21 CB 8B         ld hl,Ctrl_2
 135+ 9DFC CB 96            res 2,(hl)
 136+ 9DFE
 137+ 9DFE C3 6B 9D         jp Movimiento
 138+ 9E01
 139+ 9E01              Siguiente_desplazamiento
 140+ 9E01
 141+ 9E01              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E01              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E01
 144+ 9E01 21 CB 8B         ld hl,Ctrl_2
 145+ 9E04 CB 96            res 2,(hl)
 146+ 9E06
 147+ 9E06 2A F2 8B         ld hl,(Puntero_mov)
 148+ 9E09 23               inc hl
 149+ 9E0A 23               inc hl
 150+ 9E0B 22 F2 8B         ld (Puntero_mov),hl
 151+ 9E0E
 152+ 9E0E 7E               ld a,(hl)
 153+ 9E0F A7               and a
 154+ 9E10 CC 92 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E13 CA D4 9D         jp z,Reinicia_el_movimiento
 156+ 9E16
 157+ 9E16 C9               ret
 158+ 9E17
 159+ 9E17              ; Subrutinas -----------------------------------------
 160+ 9E17              ; ---------- --------- --------- ---------- ----------
 161+ 9E17              ;
 162+ 9E17              ;   24/07/23
 163+ 9E17              ;
 164+ 9E17              ;   Fijamos_bucle
 165+ 9E17              ;
 166+ 9E17              ;
 167+ 9E17
 168+ 9E17              Fijamos_bucle
 169+ 9E17
 170+ 9E17 3A F6 8B         ld a,(Incrementa_puntero)
 171+ 9E1A 3C               inc a
 172+ 9E1B 32 F7 8B         ld (Incrementa_puntero_backup),a
 173+ 9E1E
 174+ 9E1E CD 92 9E         call Incrementa_Puntero_indice_mov
 175+ 9E21 2A F0 8B         ld hl,(Puntero_indice_mov)
 176+ 9E24 22 F4 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E27 C9               ret
 178+ 9E28
 179+ 9E28              ; ---------- --------- --------- ---------- ----------
 180+ 9E28              ;
 181+ 9E28              ;   07/7/23
 182+ 9E28              ;
 183+ 9E28              ;   Inicia_Repetimos_movimiento
 184+ 9E28              ;
 185+ 9E28              ;
 186+ 9E28
 187+ 9E28              Inicia_Repetimos_movimiento
 188+ 9E28
 189+ 9E28              ; Iniciamos (Repetimos_movimiento).
 190+ 9E28
 191+ 9E28 DD 2A F2 8B      ld ix,(Puntero_mov)
 192+ 9E2C DD 7E 02         ld a,(ix+2)
 193+ 9E2F 32 FA 8B         ld (Repetimos_movimiento),a
 194+ 9E32
 195+ 9E32 C9               ret
 196+ 9E33
 197+ 9E33              ; ---------- --------- --------- ---------- ----------
 198+ 9E33              ;
 199+ 9E33              ;   26/6/23
 200+ 9E33              ;
 201+ 9E33              ;   Inicia_Puntero_mov
 202+ 9E33              ;
 203+ 9E33              ;
 204+ 9E33
 205+ 9E33 2A F0 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E36 CD 87 90         call Extrae_address
 207+ 9E39 22 F2 8B         ld (Puntero_mov),hl
 208+ 9E3C C9               ret
 209+ 9E3D
 210+ 9E3D              ; ---------- --------- --------- ---------- ----------
 211+ 9E3D              ;
 212+ 9E3D              ;   27/06/23
 213+ 9E3D              ;
 214+ 9E3D              ;   Aplica_movimiento.
 215+ 9E3D
 216+ 9E3D              Aplica_desplazamiento
 217+ 9E3D
 218+ 9E3D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E3D
 220+ 9E3D 2A F2 8B         ld hl, (Puntero_mov)
 221+ 9E40
 222+ 9E40 7E               ld a,(hl)
 223+ 9E41 E6 F0            and $f0
 224+ 9E43 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E44
 226+ 9E44 CB 7E            bit 7,(hl)
 227+ 9E46 28 03            jr z,1F
 228+ 9E48 CD 1F 9A         call Mov_up
 229+ 9E4B 2A F2 8B     1 ld hl, (Puntero_mov)
 230+ 9E4E CB 76            bit 6,(hl)
 231+ 9E50 28 03            jr z,2F
 232+ 9E52 CD E6 99         call Mov_down
 233+ 9E55
 234+ 9E55              ; Se ha aplicado reinicio ???
 235+ 9E55              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E55
 237+ 9E55              ;    ld a,(Ctrl_3)
 238+ 9E55              ;    bit 1,a
 239+ 9E55              ;    ret nz
 240+ 9E55
 241+ 9E55 2A F2 8B     2 ld hl, (Puntero_mov)
 242+ 9E58 CB 6E            bit 5,(hl)
 243+ 9E5A 28 03            jr z,3F
 244+ 9E5C CD 85 9B         call Mov_left
 245+ 9E5F 2A F2 8B     3 ld hl, (Puntero_mov)
 246+ 9E62 CB 66            bit 4,(hl)
 247+ 9E64 C8               ret z
 248+ 9E65 CD 62 9A         call Mov_right
 249+ 9E68 C9               ret
 250+ 9E69
 251+ 9E69              ; ---------- --------- --------- ---------- ----------
 252+ 9E69              ;
 253+ 9E69              ;   26/06/23
 254+ 9E69              ;
 255+ 9E69              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E69
 257+ 9E69              Ajusta_velocidad_desplazamiento
 258+ 9E69
 259+ 9E69              ; 1er byte de la cadena de movimiento.
 260+ 9E69              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E69
 262+ 9E69 CD 87 9E         call Extrae_nibble_alto
 263+ 9E6C
 264+ 9E6C 32 E6 8B         ld (Vel_up),a
 265+ 9E6F 79               ld a,c
 266+ 9E70 E6 0F            and $0f
 267+ 9E72 32 E7 8B         ld (Vel_down),a
 268+ 9E75
 269+ 9E75              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E75              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E75
 272+ 9E75 23               inc hl
 273+ 9E76 CD 87 9E         call Extrae_nibble_alto
 274+ 9E79
 275+ 9E79 32 E4 8B         ld (Vel_left),a
 276+ 9E7C 79               ld a,c
 277+ 9E7D E6 0F            and $0f
 278+ 9E7F 32 E5 8B         ld (Vel_right),a
 279+ 9E82
 280+ 9E82              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E82
 282+ 9E82 23               inc hl
 283+ 9E83 22 F2 8B         ld (Puntero_mov),hl
 284+ 9E86 C9               ret
 285+ 9E87
 286+ 9E87 06 04        Extrae_nibble_alto ld b,4
 287+ 9E89 7E               ld a,(hl)
 288+ 9E8A 4F               ld c,a
 289+ 9E8B E6 F0            and $f0
 290+ 9E8D CB 3F        1 srl a
 291+ 9E8F 10 FC            djnz 1B
 292+ 9E91 C9               ret
 293+ 9E92
 294+ 9E92              ; ---------- --------- --------- ---------- ----------
 295+ 9E92              ;
 296+ 9E92              ;   5/7/23
 297+ 9E92              ;
 298+ 9E92              ;   Incrementa_Puntero_indice_mov
 299+ 9E92
 300+ 9E92              Incrementa_Puntero_indice_mov
 301+ 9E92
 302+ 9E92 21 F6 8B         ld hl,Incrementa_puntero
 303+ 9E95 34               inc (hl)
 304+ 9E96
 305+ 9E96 2A F0 8B         ld hl,(Puntero_indice_mov)
 306+ 9E99 01 02 00         ld bc,2
 307+ 9E9C A7               and a
 308+ 9E9D 09               add hl,bc
 309+ 9E9E 22 F0 8B         ld (Puntero_indice_mov),hl
 310+ 9EA1
 311+ 9EA1 7E               ld a,(hl)
 312+ 9EA2 A7               and a
 313+ 9EA3
 314+ 9EA3              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EA3
 316+ 9EA3              ;    jr z,$
 317+ 9EA3
 318+ 9EA3              ;! Reinicia el Patrón de movimiento.
 319+ 9EA3
 320+ 9EA3 CC A8 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EA6
 322+ 9EA6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EA7
 324+ 9EA7 C9               ret
 325+ 9EA8
 326+ 9EA8              ; ---------- --------- --------- ---------- ----------
 327+ 9EA8              ;
 328+ 9EA8              ;   15/01/24
 329+ 9EA8              ;
 330+ 9EA8              ;   Inicializa_Puntero_indice_mov
 331+ 9EA8
 332+ 9EA8              Inicializa_Puntero_indice_mov_2
 333+ 9EA8
 334+ 9EA8              ; Existe etiqueta de bucle principal???
 335+ 9EA8
 336+ 9EA8 2A F4 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EAB 24               inc h
 338+ 9EAC 25               dec h
 339+ 9EAD 28 05            jr z,2F
 340+ 9EAF
 341+ 9EAF 22 F0 8B         ld (Puntero_indice_mov),hl
 342+ 9EB2 18 14            jr 3F
 343+ 9EB4
 344+ 9EB4              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EB4
 346+ 9EB4 3A F6 8B     2 ld a,(Incrementa_puntero)
 347+ 9EB7 47               ld b,a
 348+ 9EB8
 349+ 9EB8 2A F0 8B         ld hl,(Puntero_indice_mov)
 350+ 9EBB 2B           1 dec hl
 351+ 9EBC 2B               dec hl
 352+ 9EBD 10 FC            djnz 1B
 353+ 9EBF 22 F0 8B         ld (Puntero_indice_mov),hl
 354+ 9EC2
 355+ 9EC2 AF               xor a
 356+ 9EC3 32 F6 8B         ld (Incrementa_puntero),a
 357+ 9EC6 18 06            jr 4F
 358+ 9EC8
 359+ 9EC8 3A F7 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9ECB 32 F6 8B         ld (Incrementa_puntero),a
 361+ 9ECE C9           4 ret
 362+ 9ECF
 363+ 9ECF              ; ----------------------------------------------------------------------
 364+ 9ECF              ;
 365+ 9ECF              ;   30/01/24
 366+ 9ECF              ;
 367+ 9ECF              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9ECF
 369+ 9ECF 3A BF 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9ED2 CD 23 94         call Calcula_salto_en_BC
 371+ 9ED5 21 E8 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9ED8 A7               and a
 373+ 9ED9 ED 4A            adc hl,bc
 374+ 9EDB C9               ret
 375+ 9EDC
 376+ 9EDC              ; ----------------------------------------------------------------------
 377+ 9EDC              ;
 378+ 9EDC              ;   30/01/24
 379+ 9EDC              ;
 380+ 9EDC              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EDC              ;
 382+ 9EDC              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EDC
 384+ 9EDC 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EDD 23               inc hl
 386+ 9EDE 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EDF 69               ld l,c
 388+ 9EE0 60               ld h,b
 389+ 9EE1 22 C8 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EE4 C9               ret
 391+ 9EE5
# file closed: Movimiento.asm
2077  9EE5              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EE5              Motor_de_disparos_entidades
   2+ 9EE5
   3+ 9EE5 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9EE8 FE 07            cp 7
   5+ 9EEA C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9EEB
   7+ 9EEB 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9EED 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9EF0
  10+ 9EF0 CD 87 90     1 call Extrae_address
  11+ 9EF3 1C               inc e
  12+ 9EF4 1C               inc e
  13+ 9EF5 ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9EF9
  15+ 9EF9               ; Caja vacía ???
  16+ 9EF9
  17+ 9EF9 2C               inc l
  18+ 9EFA
  19+ 9EFA 7E               ld a,(hl)
  20+ 9EFB A7               and a
  21+ 9EFC 28 19            jr z,3F                                                              ; Caja vacía.
  22+ 9EFE
  23+ 9EFE              ; --- Trabajamos con caja:
  24+ 9EFE
  25+ 9EFE              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
  26+ 9EFE
  27+ 9EFE CD 2D 9F         call Rota_disparo_si_procede
  28+ 9F01
  29+ 9F01              ; ------------------------------------------------------------
  30+ 9F01
  31+ 9F01 2D               dec l
  32+ 9F02 2D               dec l
  33+ 9F03 2D               dec l
  34+ 9F04
  35+ 9F04 CD 87 90         call Extrae_address
  36+ 9F07              ;   (Puntero_de_impresion) del disparo en HL.
  37+ 9F07
  38+ 9F07              ;! Velocidad del disparo de entidades.
  39+ 9F07
  40+ 9F07 CD A0 99         call NextScan
  41+ 9F0A
  42+ 9F0A              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  43+ 9F0A
  44+ 9F0A CD 1B 9F         call Fin_de_disparo_de_entidad
  45+ 9F0D
  46+ 9F0D EB               ex de,hl
  47+ 9F0E
  48+ 9F0E 73               ld (hl),e
  49+ 9F0F 23               inc hl
  50+ 9F10 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  51+ 9F11
  52+ 9F11 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  53+ 9F14 18 02            jr 2F
  54+ 9F16
  55+ 9F16 C9               ret
  56+ 9F17
  57+ 9F17 EB           3 ex de,hl
  58+ 9F18 10 D6        2 djnz 1B
  59+ 9F1A
  60+ 9F1A C9               ret
  61+ 9F1B
  62+ 9F1B              ; ------------- ------------- ------------
  63+ 9F1B              ;
  64+ 9F1B              ;   25/9/24
  65+ 9F1B
  66+ 9F1B              Fin_de_disparo_de_entidad
  67+ 9F1B
  68+ 9F1B 7C               ld a,h
  69+ 9F1C FE 54            cp $54
  70+ 9F1E D8               ret c
  71+ 9F1F
  72+ 9F1F D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  73+ 9F20
  74+ 9F20 5D               ld e,l
  75+ 9F21 54               ld d,h
  76+ 9F22
  77+ 9F22 21 E0 57         ld hl,$57e0
  78+ 9F25 ED 52            sbc hl,de
  79+ 9F27
  80+ 9F27 38 39            jr c,Elimina_disparo_entidad
  81+ 9F29
  82+ 9F29 6B               ld l,e
  83+ 9F2A 62               ld h,d
  84+ 9F2B
  85+ 9F2B D1               pop de
  86+ 9F2C
  87+ 9F2C C9               ret
  88+ 9F2D
  89+ 9F2D              ; ----------------------------------------------------------
  90+ 9F2D              ;
  91+ 9F2D              ;   08/10/24
  92+ 9F2D
  93+ 9F2D              Rota_disparo_si_procede
  94+ 9F2D
  95+ 9F2D              ;   Nos situamos en el byte alto de (Control).
  96+ 9F2D
  97+ 9F2D CB 76            bit 6,(hl)
  98+ 9F2F 20 03            jr nz,Decrementa_contador_de_control_de_disparo
  99+ 9F31 CB 7E            bit 7,(hl)
 100+ 9F33 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 101+ 9F34
 102+ 9F34              Decrementa_contador_de_control_de_disparo
 103+ 9F34
 104+ 9F34 35               dec (hl)
 105+ 9F35 7E               ld a,(hl)
 106+ 9F36 E6 07            and 7
 107+ 9F38 C0               ret nz
 108+ 9F39
 109+ 9F39              Rotamos_disparo_segun_proceda
 110+ 9F39
 111+ 9F39              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 112+ 9F39
 113+ 9F39 3E 07            ld a,7
 114+ 9F3B 86               add (hl)
 115+ 9F3C 77               ld (hl),a                                                           ; Contador reinicializado.
 116+ 9F3D
 117+ 9F3D CD 56 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 118+ 9F40
 119+ 9F40 CB 76            bit 6,(hl)
 120+ 9F42 20 05            jr nz,Rota_a_derecha
 121+ 9F44
 122+ 9F44
 123+ 9F44              Rota_a_izq
 124+ 9F44
 125+ 9F44 F3               di
 126+ 9F45 18 FE            jr $
 127+ 9F47 FB               ei
 128+ 9F48
 129+ 9F48 C9               ret
 130+ 9F49
 131+ 9F49              Rota_a_derecha
 132+ 9F49
 133+ 9F49 FD CB 00 3E      srl (iy+0)
 134+ 9F4D FD CB 01 3E      srl (iy+1)
 135+ 9F51 FD CB 02 3E      srl (iy+2)
 136+ 9F55
 137+ 9F55              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 138+ 9F55
 139+ 9F55 C9               ret
 140+ 9F56
 141+ 9F56              ; ------------ ----------- ------------
 142+ 9F56              ;
 143+ 9F56              ;   11/10/24
 144+ 9F56
 145+ 9F56              Puntero_objeto_en_IY
 146+ 9F56
 147+ 9F56 E5               push hl
 148+ 9F57
 149+ 9F57 2D               dec l
 150+ 9F58 2D               dec l
 151+ 9F59 2D               dec l
 152+ 9F5A 2D               dec l
 153+ 9F5B 2D               dec l
 154+ 9F5C 2D               dec l
 155+ 9F5D
 156+ 9F5D E5               push hl
 157+ 9F5E FD E1            pop iy
 158+ 9F60
 159+ 9F60 E1               pop hl
 160+ 9F61
 161+ 9F61 C9               ret
 162+ 9F62
 163+ 9F62              ; ------------ ----------- ------------
 164+ 9F62              ;
 165+ 9F62              ;   25/9/24
 166+ 9F62
 167+ 9F62              Elimina_disparo_entidad
 168+ 9F62
 169+ 9F62 21 23 8C         ld hl,Numero_de_disparos_de_entidades
 170+ 9F65 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 171+ 9F66
 172+ 9F66 E1               pop hl
 173+ 9F67 E5               push hl
 174+ 9F68
 175+ 9F68 2B               dec hl
 176+ 9F69 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
 177+ 9F6A
 178+ 9F6A 16 06            ld d,6                                                              ; Contador
 179+ 9F6C AF               xor a                                                               ; Borrador
 180+ 9F6D
 181+ 9F6D 77           1 ld (hl),a
 182+ 9F6E 15               dec d
 183+ 9F6F 23               inc hl
 184+ 9F70 20 FB            jr nz,1B
 185+ 9F72
 186+ 9F72 D1               pop de
 187+ 9F73
 188+ 9F73 21 00 00         ld hl,0
 189+ 9F76
 190+ 9F76 C9               ret
 191+ 9F77              ; --------------------------------------------------------------------------------------
 192+ 9F77              ;
 193+ 9F77              ;   12/10/24
 194+ 9F77              ;
 195+ 9F77
 196+ 9F77              Genera_datos_de_impresion_disparos_Entidades
 197+ 9F77
 198+ 9F77 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
 199+ 9F7A 47               ld b,a
 200+ 9F7B 3E 07            ld a,7
 201+ 9F7D 90               sub b
 202+ 9F7E C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 203+ 9F7F
 204+ 9F7F 08               ex af,af
 205+ 9F80
 206+ 9F80              ; ---------------
 207+ 9F80
 208+ 9F80              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 209+ 9F80
 210+ 9F80 21 23 89         ld hl,Indice_de_disparos_entidades
 211+ 9F83
 212+ 9F83 CD 87 90     1 call Extrae_address
 213+ 9F86
 214+ 9F86 13               inc de
 215+ 9F87 13               inc de
 216+ 9F88
 217+ 9F88 ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 218+ 9F8C
 219+ 9F8C 2C               inc l
 220+ 9F8D
 221+ 9F8D 7E               ld a,(hl)
 222+ 9F8E A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 223+ 9F8F 28 39            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 224+ 9F91
 225+ 9F91              ; ----- ----- ----- -----
 226+ 9F91
 227+ 9F91 2D               dec l
 228+ 9F92 2D               dec l
 229+ 9F93 2D               dec l
 230+ 9F94
 231+ 9F94 CD 87 90         call Extrae_address
 232+ 9F97 E5               push hl
 233+ 9F98
 234+ 9F98 1D               dec e
 235+ 9F99
 236+ 9F99 EB               ex de,hl
 237+ 9F9A
 238+ 9F9A 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 239+ 9F9B 2D               dec l
 240+ 9F9C 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 241+ 9F9D 2D               dec l
 242+ 9F9E 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 243+ 9F9F
 244+ 9F9F E1               pop hl                                                    ;? Puntero de impresión en HL.
 245+ 9FA0
 246+ 9FA0              Genera_scanlines_de_los_disparos_de_entidades.
 247+ 9FA0
 248+ 9FA0 FD 2A 20 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 249+ 9FA4 FD 73 00         ld (iy+0),e
 250+ 9FA7 FD 70 01         ld (iy+1),b
 251+ 9FAA FD 71 02         ld (iy+2),c
 252+ 9FAD
 253+ 9FAD FD 75 03         ld (iy+3),l
 254+ 9FB0 FD 74 04         ld (iy+4),h
 255+ 9FB3
 256+ 9FB3 CD A0 99         call NextScan
 257+ 9FB6
 258+ 9FB6 FD 75 05         ld (iy+5),l
 259+ 9FB9 FD 74 06         ld (iy+6),h
 260+ 9FBC
 261+ 9FBC FD E5            push iy
 262+ 9FBE E1               pop hl
 263+ 9FBF
 264+ 9FBF 3E 07            ld a,7
 265+ 9FC1 85               add l
 266+ 9FC2 6F               ld l,a
 267+ 9FC3
 268+ 9FC3 22 20 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 269+ 9FC6
 270+ 9FC6              ; ----- ----- ----- -----
 271+ 9FC6
 272+ 9FC6 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 273+ 9FC7 3D               dec a
 274+ 9FC8 C8               ret z
 275+ 9FC9 08               ex af,af
 276+ 9FCA
 277+ 9FCA              Situa_en_siguiente_caja
 278+ 9FCA
 279+ 9FCA 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 280+ 9FCD 18 B4            jr 1B
 281+ 9FCF
 282+ 9FCF              ; --------------------------------------------------------------------------------------
 283+ 9FCF              ;
 284+ 9FCF              ;   12/10/24
 285+ 9FCF              ;
 286+ 9FCF
 287+ 9FCF              Genera_disparo_de_entidad_maldosa
 288+ 9FCF
 289+ 9FCF              ;   Estructura de un disparo de entidades.
 290+ 9FCF
 291+ 9FCF              ;   Disparo_1 defw 0								; Puntero objeto.
 292+ 9FCF              ; 	defw 0											; Puntero de impresión.
 293+ 9FCF              ;	defw 0											; Control.
 294+ 9FCF
 295+ 9FCF              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 296+ 9FCF              ;   _de la entidad en el momento de disparar.
 297+ 9FCF
 298+ 9FCF              ;   El byte alto muestra la siguiente información:
 299+ 9FCF              ;
 300+ 9FCF              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 301+ 9FCF              ;                        _antes de desplazarse a derecha/izquierda.
 302+ 9FCF              ;
 303+ 9FCF              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 304+ 9FCF              ;
 305+ 9FCF              ;                        10xx ..... Izquierda.
 306+ 9FCF              ;                        01xx ..... Derecha.
 307+ 9FCF              ;                        00xx ..... Recto.
 308+ 9FCF
 309+ 9FCF              ;*  Exclusiones.
 310+ 9FCF
 311+ 9FCF              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 312+ 9FCF              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 313+ 9FCF
 314+ 9FCF              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 315+ 9FCF
 316+ 9FCF 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
 317+ 9FD2 A7               and a
 318+ 9FD3 C8               ret z
 319+ 9FD4
 320+ 9FD4 3A C1 8B         ld a,(Coordenada_y)
 321+ 9FD7 A7               and a
 322+ 9FD8 C8               ret z
 323+ 9FD9
 324+ 9FD9 3D               dec a
 325+ 9FDA C8               ret z
 326+ 9FDB
 327+ 9FDB FE 10            cp 16
 328+ 9FDD D0               ret nc
 329+ 9FDE
 330+ 9FDE              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 331+ 9FDE              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 332+ 9FDE              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 333+ 9FDE
 334+ 9FDE 21 25 8C         ld hl,Permiso_de_disparo_Entidades
 335+ 9FE1 35               dec (hl)                                            ; No más disparos en este FRAME.
 336+ 9FE2
 337+ 9FE2              ;   Decrementa el numero de disparos de entidades.
 338+ 9FE2
 339+ 9FE2 21 23 8C         ld hl,Numero_de_disparos_de_entidades
 340+ 9FE5 35               dec (hl)
 341+ 9FE6
 342+ 9FE6 21 23 89         ld hl,Indice_de_disparos_entidades
 343+ 9FE9
 344+ 9FE9 CD 87 90     1 call Extrae_address
 345+ 9FEC
 346+ 9FEC 13               inc de
 347+ 9FED 13               inc de
 348+ 9FEE
 349+ 9FEE ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 350+ 9FF2
 351+ 9FF2              ;   Comprobamos si la caja está vacía.
 352+ 9FF2
 353+ 9FF2 2C               inc l
 354+ 9FF3
 355+ 9FF3 7E               ld a,(hl)
 356+ 9FF4 A7               and a
 357+ 9FF5 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 358+ 9FF7
 359+ 9FF7              ;   Caja vacía, vamos a generar un disparo.
 360+ 9FF7              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 361+ 9FF7
 362+ 9FF7 CD 1D A0         call Genera_byte_inclinacion
 363+ 9FFA
 364+ 9FFA 7E               ld a,(hl)
 365+ 9FFB 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 366+ 9FFC
 367+ 9FFC 2D               dec l
 368+ 9FFD
 369+ 9FFD              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 370+ 9FFD
 371+ 9FFD 3A CA 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 372+ A000 77               ld (hl),a
 373+ A001
 374+ A001 2D               dec l
 375+ A002
 376+ A002 CD 3B A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 377+ A005
 378+ A005 70               ld (hl),b
 379+ A006 2D               dec l
 380+ A007 71               ld (hl),c
 381+ A008
 382+ A008 2D               dec l
 383+ A009
 384+ A009              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 385+ A009
 386+ A009 FD 7E 02         ld a,(iy+02)
 387+ A00C 77               ld (hl),a
 388+ A00D 2D               dec l
 389+ A00E
 390+ A00E FD 7E 01         ld a,(iy+01)
 391+ A011 77               ld (hl),a
 392+ A012 2D               dec l
 393+ A013
 394+ A013 FD 7E 00         ld a,(iy+00)
 395+ A016 77               ld (hl),a
 396+ A017
 397+ A017 C9               ret
 398+ A018
 399+ A018              ;   --- --- ---
 400+ A018
 401+ A018              Situa_en_siguiente_disparo
 402+ A018
 403+ A018 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 404+ A01B 18 CC            jr 1B
 405+ A01D
 406+ A01D              ; --------------------------------------------------------------------------------------
 407+ A01D              ;
 408+ A01D              ;   09/10/24
 409+ A01D              ;
 410+ A01D
 411+ A01D              Genera_byte_inclinacion
 412+ A01D
 413+ A01D 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 414+ A01F
 415+ A01F              ; Determina tendencia del disparo.
 416+ A01F
 417+ A01F 3A 75 89         ld a,(CX_Amadeus)
 418+ A022 47               ld b,a
 419+ A023 3A C0 8B         ld a,(Coordenada_X)
 420+ A026 90               sub b
 421+ A027 38 07            jr c,Disparo_a_derecha
 422+ A029
 423+ A029 FE 04        Disparo_a_izquierda cp 4
 424+ A02B
 425+ A02B D8               ret c
 426+ A02C C8               ret z
 427+ A02D
 428+ A02D CB FE            set 7,(hl)
 429+ A02F C9               ret
 430+ A030
 431+ A030 47           Disparo_a_derecha ld b,a
 432+ A031 3E FF            ld a,$ff
 433+ A033 90               sub b
 434+ A034
 435+ A034 FE 04            cp 4
 436+ A036
 437+ A036 D8               ret c
 438+ A037 C8               ret z
 439+ A038
 440+ A038 CB F6            set 6,(hl)
 441+ A03A C9               ret
 442+ A03B
 443+ A03B              ; --------------------------------------------------------------------------------------
 444+ A03B              ;
 445+ A03B              ;   09/10/24
 446+ A03B              ;
 447+ A03B
 448+ A03B              Modifica_puntero_de_impresion
 449+ A03B
 450+ A03B              ;   Puntero de impresión del disparo en BC.
 451+ A03B
 452+ A03B ED 4B 38 8C      ld bc,(Puntero_de_impresion_disparo_de_entidad)
 453+ A03F
 454+ A03F 08               ex af,af
 455+ A040 CB 77            bit 6,a
 456+ A042 28 06            jr z,1F
 457+ A044
 458+ A044 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 459+ A048 0C               inc c
 460+ A049 C9               ret
 461+ A04A
 462+ A04A CB 7F        1 bit 7,a
 463+ A04C 28 F6            jr z,2B
 464+ A04E
 465+ A04E FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 466+ A052 0D               dec c
 467+ A053
 468+ A053 C9               ret
 469+ A054
 470+ A054              ; --------------------------------------------------------------------------------------
 471+ A054              ;
 472+ A054              ;   31/08/24
 473+ A054              ;
 474+ A054
 475+ A054              Compara_con_coordenadas_de_disparo
 476+ A054
 477+ A054 3A C1 8B         ld a,(Coordenada_y)
 478+ A057 47               ld b,a
 479+ A058 3A 3D 8C         ld a,(Coordenadas_disparo_certero)
 480+ A05B 90               sub b
 481+ A05C
 482+ A05C              ; A = "0" ok
 483+ A05C              ; A = "1" ok
 484+ A05C
 485+ A05C 28 08            jr z,Comprueba_coordenada_X
 486+ A05E 3D               dec a
 487+ A05F 28 05            jr z,Comprueba_coordenada_X
 488+ A061
 489+ A061              ; A = "$ff" ok
 490+ A061
 491+ A061 FE FE            cp $fe
 492+ A063 28 01            jr z,Comprueba_coordenada_X
 493+ A065
 494+ A065 C9               ret
 495+ A066
 496+ A066              Comprueba_coordenada_X
 497+ A066
 498+ A066 3A C0 8B         ld a,(Coordenada_X)
 499+ A069 47               ld b,a
 500+ A06A 21 3E 8C         ld hl,Coordenadas_disparo_certero+1
 501+ A06D 7E               ld a,(hl)
 502+ A06E 90               sub b
 503+ A06F
 504+ A06F              ; A = "0" ok
 505+ A06F              ; A = "1" ok
 506+ A06F
 507+ A06F 28 09            jr z,Activa_Impacto_en_entidad
 508+ A071 3D               dec a
 509+ A072 28 06            jr z,Activa_Impacto_en_entidad
 510+ A074
 511+ A074              ; A = "2" ok
 512+ A074
 513+ A074 3D               dec a
 514+ A075 28 03            jr z,Activa_Impacto_en_entidad
 515+ A077
 516+ A077              ; A = "$ff"
 517+ A077
 518+ A077 FE FD            cp $fd
 519+ A079 C0               ret nz
 520+ A07A
 521+ A07A              Activa_Impacto_en_entidad
 522+ A07A
 523+ A07A              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 524+ A07A
 525+ A07A 3E 02            ld a,2
 526+ A07C 32 C3 8B         ld (Impacto),a
 527+ A07F
 528+ A07F              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 529+ A07F
 530+ A07F 11 C0 87         ld de,Indice_Explosion_entidades
 531+ A082 21 C6 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 532+ A085
 533+ A085 73               ld (hl),e
 534+ A086 23               inc hl
 535+ A087 72               ld (hl),d
 536+ A088
 537+ A088              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 538+ A088
 539+ A088 21 3A 8C         ld hl,Impacto2
 540+ A08B CB 9E            res 3,(hl)
 541+ A08D
 542+ A08D C9               ret
 543+ A08E
 544+ A08E              ; --------------------------------------------------------------------------------------
 545+ A08E              ;
 546+ A08E              ;   13/10/24
 547+ A08E              ;
 548+ A08E
 549+ A08E              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 550+ A08E
 551+ A08E              Limpia_album_de_pintado_disparos_Amadeus
 552+ A08E
 553+ A08E 06 06            ld b,6
 554+ A090 AF               xor a
 555+ A091 77           1 ld (hl),a
 556+ A092 2C               inc l
 557+ A093 10 FC            djnz 1B
 558+ A095
 559+ A095 C9               ret
 560+ A096
 561+ A096              ; --------------------------------------------------------------------------------------
 562+ A096              ;
 563+ A096              ;   11/09/24
 564+ A096              ;
 565+ A096
 566+ A096              Limpia_album_de_borrado_disparos
 567+ A096
 568+ A096              ;    ld hl,Ctrl_5
 569+ A096              ;    bit 2,(hl)
 570+ A096              ;    ret z
 571+ A096
 572+ A096              ;    jr z,1F
 573+ A096
 574+ A096              ;    res 2,(hl)
 575+ A096
 576+ A096              ;    jr Limpiando
 577+ A096
 578+ A096              ;1 bit 0,(hl)
 579+ A096              ;    ret z
 580+ A096              ;    res 0,(hl)
 581+ A096
 582+ A096              Limpiando
 583+ A096
 584+ A096              ;    xor a
 585+ A096              ;    ld hl,(Album_de_pintado_disparos)
 586+ A096              ;    ld (hl),a
 587+ A096              ;    ld e,l
 588+ A096              ;    ld d,h
 589+ A096              ;    inc e                                           ; DE = HL+1
 590+ A096              ;    ld bc,$003a
 591+ A096              ;    ldir
 592+ A096
 593+ A096 C9               ret
 594+ A097
 595+ A097
 596+ A097              ; --------------------------------------------------------------------------------------
 597+ A097              ;
 598+ A097              ;   29/09/24
 599+ A097              ;
 600+ A097
 601+ A097              Calcula_bytes_pintado_disparos
 602+ A097
 603+ A097              ;    ld hl,(Album_de_pintado_disparos)
 604+ A097              ;    ld b,l
 605+ A097              ;    ld hl,(Nivel_scan_disparos_album_de_pintado)
 606+ A097              ;    ld a,l
 607+ A097
 608+ A097              ;    sub b
 609+ A097              ;    ld (Num_de_bytes_album_de_disparos),a
 610+ A097
 611+ A097 C9               ret
 612+ A098
 613+ A098              ; --------------------------------------------------------------------------------------
 614+ A098              ;
 615+ A098              ;   29/09/24
 616+ A098              ;
 617+ A098              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 618+ A098              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 619+ A098              ;   _disparos que el álbum del FRAME actual).
 620+ A098
 621+ A098              Limpia_album_de_pintado_disparos
 622+ A098
 623+ A098 3A 22 8C         ld a,(Num_de_bytes_album_de_disparos)
 624+ A09B A7               and a
 625+ A09C 28 0E            jr z,Clean_only_one
 626+ A09E
 627+ A09E 47               ld b,a
 628+ A09F 3E 3B            ld a,$3b
 629+ A0A1 90               sub b
 630+ A0A2 47               ld b,a
 631+ A0A3 AF           2 xor a
 632+ A0A4
 633+ A0A4 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 634+ A0A7 77           1 ld (hl),a
 635+ A0A8 23               inc hl
 636+ A0A9 10 FC            djnz 1B
 637+ A0AB C9               ret
 638+ A0AC
 639+ A0AC              Clean_only_one
 640+ A0AC
 641+ A0AC 06 06            ld b,6
 642+ A0AE 18 F3            jr 2B
 643+ A0B0
 644+ A0B0              ; --------------------------------------------------------------------------------------
 645+ A0B0              ;
 646+ A0B0              ;   29/09/24
 647+ A0B0              ;
 648+ A0B0
 649+ A0B0              Motor_Disparos_Amadeus
 650+ A0B0
 651+ A0B0 21 20 89         ld hl,Disparo_Amad+1
 652+ A0B3
 653+ A0B3 34               inc (hl)
 654+ A0B4 35               dec (hl)
 655+ A0B5
 656+ A0B5 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 657+ A0B6
 658+ A0B6              ;   Esta caja contiene un disparo.
 659+ A0B6
 660+ A0B6 CD BD A0         call Consulta_Impacto
 661+ A0B9 CC D6 A0         call z,Mueve_disparo_Amadeus
 662+ A0BC
 663+ A0BC C9               ret
 664+ A0BD
 665+ A0BD              ; ----------------------
 666+ A0BD              ;
 667+ A0BD              ;
 668+ A0BD              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 669+ A0BD              ;
 670+ A0BD              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 671+ A0BD
 672+ A0BD
 673+ A0BD              Consulta_Impacto
 674+ A0BD
 675+ A0BD              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 676+ A0BD              ;   _sea lo más coherente posible.
 677+ A0BD
 678+ A0BD E5               push hl
 679+ A0BE 2B               dec hl
 680+ A0BF CD B4 A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 681+ A0C2 E1               pop hl
 682+ A0C3 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 683+ A0C4
 684+ A0C4 C8               ret z
 685+ A0C5
 686+ A0C5 3A 3A 8C         ld a,(Impacto2)
 687+ A0C8 CB DF            set 3,a
 688+ A0CA 32 3A 8C         ld (Impacto2),a
 689+ A0CD
 690+ A0CD E5               push hl
 691+ A0CE CD A1 A1         call Genera_coordenadas_de_disparo_Amadeus
 692+ A0D1 E1               pop hl
 693+ A0D2 CD EF A0         call Elimina_disparo_Amadeus
 694+ A0D5
 695+ A0D5 C9               ret
 696+ A0D6
 697+ A0D6              ; ----------------------
 698+ A0D6              ;
 699+ A0D6              ;
 700+ A0D6              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 701+ A0D6
 702+ A0D6              Mueve_disparo_Amadeus
 703+ A0D6
 704+ A0D6 CD 87 90         call Extrae_address
 705+ A0D9
 706+ A0D9 CD AF 99         call PreviousScan
 707+ A0DC CD AF 99         call PreviousScan
 708+ A0DF CD AF 99         call PreviousScan
 709+ A0E2 CD AF 99         call PreviousScan
 710+ A0E5
 711+ A0E5              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 712+ A0E5
 713+ A0E5 7C               ld a,h
 714+ A0E6 D6 40            sub $40
 715+ A0E8 EB               ex de,hl
 716+ A0E9 38 04            jr c,Elimina_disparo_Amadeus
 717+ A0EB
 718+ A0EB               ; Introduce nuevo puntero_de_impresión en la caja.
 719+ A0EB
 720+ A0EB 73               ld (hl),e
 721+ A0EC 23               inc hl
 722+ A0ED 72               ld (hl),d
 723+ A0EE
 724+ A0EE C9               ret
 725+ A0EF
 726+ A0EF              ; ----------------------
 727+ A0EF              ;
 728+ A0EF              ;   29/9/24
 729+ A0EF
 730+ A0EF              Elimina_disparo_Amadeus
 731+ A0EF
 732+ A0EF              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 733+ A0EF              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 734+ A0EF
 735+ A0EF              ;   Disparo_1A defw 0									; Puntero objeto.
 736+ A0EF              ;   	defw 0											; Puntero de impresión.
 737+ A0EF
 738+ A0EF 2B               dec hl
 739+ A0F0 2B               dec hl
 740+ A0F1
 741+ A0F1 AF               xor a
 742+ A0F2 77               ld (hl),a
 743+ A0F3 23               inc hl
 744+ A0F4 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 745+ A0F5
 746+ A0F5 23               inc hl
 747+ A0F6 77               ld (hl),a
 748+ A0F7 23               inc hl
 749+ A0F8 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 750+ A0F9
 751+ A0F9 3E 01            ld a,1
 752+ A0FB 32 24 8C         ld (Permiso_de_disparo_Amadeus),a
 753+ A0FE
 754+ A0FE AF               xor a
 755+ A0FF 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 756+ A100
 757+ A100 C9               ret
 758+ A101
 759+ A101              ; --------------------------------------------------------------------------------------
 760+ A101              ;
 761+ A101              ;   13/10/24
 762+ A101              ;
 763+ A101
 764+ A101              Pinta_disparos_Amadeus
 765+ A101
 766+ A101 06 02            ld b,2
 767+ A103 ED 73 0C 8C      ld (Stack),sp
 768+ A107 ED 7B 1A 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 769+ A10B D1           3 pop de
 770+ A10C 14               inc d
 771+ A10D 15               dec d
 772+ A10E 28 1C            jr z,1F
 773+ A110 E1               pop hl
 774+ A111
 775+ A111              Imprime_scanlines_en_pantalla
 776+ A111
 777+ A111              ; 1er scanline
 778+ A111
 779+ A111 1A               ld a,(de)
 780+ A112 AE               xor (hl)
 781+ A113 77               ld (hl),a
 782+ A114
 783+ A114 1C               inc e
 784+ A115 2C               inc l
 785+ A116
 786+ A116 1A               ld a,(de)
 787+ A117 AE               xor (hl)
 788+ A118 77               ld (hl),a
 789+ A119
 790+ A119 1D               dec e
 791+ A11A E1               pop hl
 792+ A11B
 793+ A11B              ; 2º scanline
 794+ A11B
 795+ A11B 1A               ld a,(de)
 796+ A11C AE               xor (hl)
 797+ A11D 77               ld (hl),a
 798+ A11E
 799+ A11E 1C               inc e
 800+ A11F 2C               inc l
 801+ A120
 802+ A120 1A               ld a,(de)
 803+ A121 AE               xor (hl)
 804+ A122 77               ld (hl),a
 805+ A123
 806+ A123 1D               dec e
 807+ A124
 808+ A124 18 06            jr 1F
 809+ A126
 810+ A126 ED 7B 18 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 811+ A12A 18 DF            jr 3B
 812+ A12C 10 F8        1 djnz 2B
 813+ A12E ED 7B 0C 8C      ld sp,(Stack)
 814+ A132 C9               ret
 815+ A133
 816+ A133              ; --------------------------------------------------------------------------------------
 817+ A133              ;
 818+ A133              ;   13/10/24
 819+ A133              ;
 820+ A133              ;   Modifica: HL,BC y DE.
 821+ A133
 822+ A133
 823+ A133              Genera_datos_de_impresion_disparos_Amadeus
 824+ A133
 825+ A133 ED 73 0C 8C      ld (Stack),sp
 826+ A137 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 827+ A13A D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 828+ A13B
 829+ A13B 14               inc d                                                     ;? Salimos si no hay disparo.
 830+ A13C 15               dec d
 831+ A13D
 832+ A13D 28 0E            jr z,Salida
 833+ A13F
 834+ A13F              Genera_scanlines_de_disparo_Amadeus
 835+ A13F
 836+ A13F E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 837+ A140              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 838+ A140 ED 7B 18 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 839+ A144
 840+ A144 C1               pop bc
 841+ A145 C1               pop bc
 842+ A146 C1               pop bc
 843+ A147
 844+ A147 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 845+ A148 CD AF 99         call PreviousScan
 846+ A14B E5               push hl                                                   ;? Sube 1er scanline al álbum.
 847+ A14C D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 848+ A14D
 849+ A14D              Salida
 850+ A14D
 851+ A14D ED 7B 0C 8C      ld sp,(Stack)
 852+ A151
 853+ A151 C9               ret
 854+ A152
 855+ A152              ; --------------------------------------------------------------------------------------
 856+ A152              ;
 857+ A152              ;   12/09/24
 858+ A152              ;
 859+ A152
 860+ A152              Genera_disparo_Amadeus
 861+ A152
 862+ A152              ;*  Exclusiones.
 863+ A152
 864+ A152 3A 24 8C         ld a,(Permiso_de_disparo_Amadeus)
 865+ A155 A7               and a
 866+ A156 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 867+ A157
 868+ A157 3D               dec a
 869+ A158 32 24 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 870+ A15B
 871+ A15B              Define_puntero_objeto_disparo
 872+ A15B
 873+ A15B
 874+ A15B 21 35 8C         ld hl,Ctrl_5
 875+ A15E CB D6            set 2,(hl)
 876+ A160
 877+ A160              ;   Inicializamos contador.
 878+ A160
 879+ A160 06 00            ld b,0
 880+ A162
 881+ A162 2A 79 89         ld hl,(p.imp.amadeus)
 882+ A165 2C               inc l
 883+ A166
 884+ A166 3E 80            ld a,$80
 885+ A168 BE               cp (hl)
 886+ A169 28 0D            jr z,1F
 887+ A16B
 888+ A16B 04               inc b
 889+ A16C
 890+ A16C 3E 60            ld a,$60
 891+ A16E BE               cp (hl)
 892+ A16F 28 07            jr z,1F
 893+ A171
 894+ A171
 895+ A171 04               inc b
 896+ A172
 897+ A172 3E 18            ld a,$18
 898+ A174 BE               cp (hl)
 899+ A175 28 01            jr z,1F
 900+ A177
 901+ A177 04               inc b
 902+ A178
 903+ A178              ;   Calcula el Puntero_de_impresión del disparo.
 904+ A178
 905+ A178              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 906+ A178
 907+ A178 CD AF 99     1 call PreviousScan
 908+ A17B
 909+ A17B 78               ld a,b
 910+ A17C CB 3F            srl a
 911+ A17E 28 03            jr z,4F
 912+ A180
 913+ A180              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 914+ A180 E5               push hl
 915+ A181 18 02            jr 5F
 916+ A183 2D           4 dec l
 917+ A184 E5               push hl
 918+ A185              ; ---
 919+ A185
 920+ A185              ;   Calcula el Puntero_objeto del disparo.
 921+ A185
 922+ A185 21 76 83     5 ld hl,Indice_disparo_Amadeus
 923+ A188 04               inc b
 924+ A189 05               dec b
 925+ A18A 28 04            jr z,2F
 926+ A18C
 927+ A18C              ;   Nos desplazamos por el índice de disparos.
 928+ A18C
 929+ A18C 2C           3 inc l
 930+ A18D 2C               inc l
 931+ A18E 10 FC            djnz 3B
 932+ A190
 933+ A190              ; --- Guarda el Puntero_objeto del disparo en la pila.
 934+ A190 CD 87 90     2 call Extrae_address
 935+ A193 E5               push hl
 936+ A194              ; ---
 937+ A194
 938+ A194              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 939+ A194              ; HL en el 1er .db de la caja.
 940+ A194
 941+ A194 21 1F 89         ld hl,Disparo_Amad
 942+ A197
 943+ A197 06 02            ld b,2
 944+ A199
 945+ A199 D1           6 pop de
 946+ A19A 73               ld (hl),e
 947+ A19B 23               inc hl
 948+ A19C 72               ld (hl),d
 949+ A19D 23               inc hl
 950+ A19E
 951+ A19E 10 F9            djnz 6B
 952+ A1A0
 953+ A1A0 C9               ret
 954+ A1A1
 955+ A1A1              Genera_coordenadas_de_disparo_Amadeus
 956+ A1A1
 957+ A1A1              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 958+ A1A1              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 959+ A1A1              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 960+ A1A1
 961+ A1A1 CD 87 90         call Extrae_address
 962+ A1A4 CD A6 94         call Genera_coordenadas
 963+ A1A7
 964+ A1A7 3D               dec a
 965+ A1A8
 966+ A1A8 21 3D 8C         ld hl,Coordenadas_disparo_certero
 967+ A1AB 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 968+ A1AC 23               inc hl
 969+ A1AD 3A C0 8B         ld a,(Coordenada_X)
 970+ A1B0 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 971+ A1B1
 972+ A1B1 AF               xor a
 973+ A1B2 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 974+ A1B3
 975+ A1B3 C9               ret
 976+ A1B4
 977+ A1B4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 978+ A1B4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 979+ A1B4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 980+ A1B4
 981+ A1B4              ; ----------------------------------------------
 982+ A1B4              ;
 983+ A1B4              ;   27/08/24
 984+ A1B4              ;
 985+ A1B4              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 986+ A1B4              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 987+ A1B4
 988+ A1B4              Detecta_impacto_en_disparo_de_Amadeus
 989+ A1B4
 990+ A1B4              Extraccion_de_datos
 991+ A1B4
 992+ A1B4 13               inc de
 993+ A1B5 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
 994+ A1B6
 995+ A1B6 5E               ld e,(hl)
 996+ A1B7 23               inc hl
 997+ A1B8 56               ld d,(hl)
 998+ A1B9
 999+ A1B9 23               inc hl
1000+ A1BA
1001+ A1BA 4E               ld c,(hl)
1002+ A1BB 23               inc hl
1003+ A1BC 46               ld b,(hl)
1004+ A1BD
1005+ A1BD C5               push bc
1006+ A1BE E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1007+ A1BF
1008+ A1BF              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1009+ A1BF
1010+ A1BF CD AF 99         call PreviousScan
1011+ A1C2 CD AF 99         call PreviousScan
1012+ A1C5
1013+ A1C5              Detecta_impacto_
1014+ A1C5
1015+ A1C5 1A               ld a,(de)
1016+ A1C6 A6               and (hl)
1017+ A1C7 C0               ret nz
1018+ A1C8
1019+ A1C8 13               inc de
1020+ A1C9 23               inc hl
1021+ A1CA
1022+ A1CA 1A               ld a,(de)
1023+ A1CB A6               and (hl)
1024+ A1CC C9               ret
1025+ A1CD
1026+ A1CD              ; -------------------------------------------------------------------------------------------------------------
1027+ A1CD              ;
1028+ A1CD              ;   8/8/24
1029+ A1CD              ;
1030+ A1CD              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1031+ A1CD              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1032+ A1CD              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1033+ A1CD              ;
1034+ A1CD              ;   MODIFICA: HL,DE,BC y A.
1035+ A1CD              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1036+ A1CD              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1037+ A1CD
1038+ A1CD              Colision_Entidad_Amadeus
1039+ A1CD
1040+ A1CD              ; Posible contacto de entidad con Amadeus. ?????
1041+ A1CD
1042+ A1CD              ; Exclusiones:
1043+ A1CD
1044+ A1CD 3A 5D 8C         ld a,(Shield)
1045+ A1D0 A7               and a
1046+ A1D1 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1047+ A1D2
1048+ A1D2 21 33 8C         ld hl,Ctrl_3
1049+ A1D5 CB 76            bit 6,(hl)
1050+ A1D7 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1051+ A1D8
1052+ A1D8 21 3A 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1053+ A1DB CB 56            bit 2,(hl)
1054+ A1DD C0               ret nz
1055+ A1DE
1056+ A1DE 3A C1 8B     	ld a,(Coordenada_y)
1057+ A1E1 FE 14        	cp $14
1058+ A1E3 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1059+ A1E4
1060+ A1E4 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1061+ A1E7 A7               and a
1062+ A1E8 C0               ret nz
1063+ A1E9
1064+ A1E9              Genera_coordenadas_X
1065+ A1E9
1066+ A1E9              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1067+ A1E9              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1068+ A1E9
1069+ A1E9              ;   Limpiamos almacenes.
1070+ A1E9
1071+ A1E9              ;    call Limpia_Coordenadas_X
1072+ A1E9
1073+ A1E9              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1074+ A1E9
1075+ A1E9 21 3F 8C         ld hl,Coordenadas_X_Entidad
1076+ A1EC 3A C0 8B         ld a,(Coordenada_X)
1077+ A1EF CD 11 A2         call Guarda_coordenadas_X
1078+ A1F2
1079+ A1F2              ;   Almacenamos las coordenadas X de Amadeus.
1080+ A1F2
1081+ A1F2 3A 75 89         ld a,(CX_Amadeus)
1082+ A1F5 CD 11 A2         call Guarda_coordenadas_X
1083+ A1F8 CD 25 A2         call Compara_coordenadas_X
1084+ A1FB C0               ret nz
1085+ A1FC
1086+ A1FC 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1087+ A1FE 32 C3 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1088+ A201
1089+ A201 2A FF 8B         ld hl,(Puntero_store_caja)
1090+ A204 2C               inc l
1091+ A205 2C               inc l
1092+ A206 2C               inc l
1093+ A207 2C               inc l
1094+ A208 22 3B 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1095+ A20B
1096+ A20B 21 3A 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1097+ A20E CB D6            set 2,(hl)
1098+ A210
1099+ A210 C9               ret
1100+ A211
1101+ A211               ; ----- ----- ----- ----- -----
1102+ A211
1103+ A211 77           Guarda_coordenadas_X ld (hl),a
1104+ A212 3C               inc a
1105+ A213 2C               inc l
1106+ A214 77               ld (hl),a
1107+ A215 3C               inc a
1108+ A216 2C               inc l
1109+ A217 77               ld (hl),a
1110+ A218 2C               inc l
1111+ A219 C9               ret
1112+ A21A
1113+ A21A AF           Limpia_Coordenadas_X xor a
1114+ A21B 06 06            ld b,6
1115+ A21D 21 42 8C         ld hl,Coordenadas_X_Amadeus
1116+ A220 77           1 ld (hl),a
1117+ A221 23               inc hl
1118+ A222 10 FC            djnz 1B
1119+ A224 C9               ret
1120+ A225
1121+ A225              ; ----- ----- ----- ----- -----
1122+ A225
1123+ A225              Compara_coordenadas_X
1124+ A225
1125+ A225 DD 21 3F 8C      ld ix,Coordenadas_X_Entidad
1126+ A229 DD 7E 00         ld a,(ix+0)
1127+ A22C CD 3A A2         call Comparando
1128+ A22F C8               ret z
1129+ A230
1130+ A230 3C               inc a
1131+ A231 CD 49 A2         call Comparando_1
1132+ A234 C8               ret z
1133+ A235
1134+ A235 3C               inc a
1135+ A236 CD 49 A2         call Comparando_1
1136+ A239 C9               ret
1137+ A23A
1138+ A23A              ; ----- ----- ----- ----- -----
1139+ A23A              ;
1140+ A23A              ;   4/12/23
1141+ A23A              ;
1142+ A23A              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1143+ A23A
1144+ A23A              Comparando
1145+ A23A
1146+ A23A DD 2C            inc ixl
1147+ A23C DD 2C            inc ixl
1148+ A23E DD 2C            inc ixl
1149+ A240
1150+ A240 DD 46 00         ld b,(ix+0)
1151+ A243 DD 4E 01         ld c,(ix+1)
1152+ A246 DD 56 02         ld d,(ix+2)
1153+ A249
1154+ A249 B8           Comparando_1 cp b
1155+ A24A C8               ret z
1156+ A24B B9               cp c
1157+ A24C C8               ret z
1158+ A24D BA               cp d
1159+ A24E C9               ret
1160+ A24F
1161+ A24F              ; -----------------------------------------------------------------------
1162+ A24F              ;
1163+ A24F              ;   04/7/24
1164+ A24F              ;
1165+ A24F
1166+ A24F              Detecta_colision_nave_entidad
1167+ A24F
1168+ A24F              ; Exclusiones:
1169+ A24F
1170+ A24F              ; Salimos de la rutina si no hay advertencia de posible colisión.
1171+ A24F
1172+ A24F 21 3A 8C     	ld hl,Impacto2
1173+ A252 CB 56        	bit 2,(hl)
1174+ A254 C8           	ret z
1175+ A255
1176+ A255              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1177+ A255
1178+ A255 2A 7B 89         ld hl,(Pamm_Amadeus)
1179+ A258 CD 87 90         call Extrae_address
1180+ A25B 54               ld d,h
1181+ A25C 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1182+ A25D
1183+ A25D 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1184+ A260 06 10            ld b,16                                        ; Contador de scanlines en B.
1185+ A262 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1186+ A265
1187+ A265 C5           1 push bc
1188+ A266 06 03            ld b,3
1189+ A268 E5               push hl
1190+ A269
1191+ A269              ; .db
1192+ A269
1193+ A269 1A           3 ld a,(de)
1194+ A26A A7               and a
1195+ A26B 20 03            jr nz,4F
1196+ A26D
1197+ A26D 2C               inc l
1198+ A26E 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1199+ A270
1200+ A270 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1201+ A272 28 04            jr z,2F
1202+ A274
1203+ A274              ; Impacto.
1204+ A274 FD 2D            dec iyl
1205+ A276 28 22            jr z,5F
1206+ A278
1207+ A278 1C           2 inc e
1208+ A279 10 EE            djnz 3B
1209+ A27B
1210+ A27B E1               pop hl
1211+ A27C
1212+ A27C              ; Hay salto de línea en el puntero de impresión ???
1213+ A27C
1214+ A27C 7C               ld a,h
1215+ A27D D6 57            sub $57
1216+ A27F 20 0A            jr nz,6F
1217+ A281
1218+ A281              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1219+ A281
1220+ A281 2A 79 89         ld hl,(p.imp.amadeus)
1221+ A284 3E 20            ld a,$20
1222+ A286 A7               and a
1223+ A287 85               add l
1224+ A288 6F               ld l,a
1225+ A289 18 01            jr 7F
1226+ A28B
1227+ A28B 24           6 inc h
1228+ A28C
1229+ A28C C1           7 pop bc
1230+ A28D 10 D6            djnz 1B
1231+ A28F
1232+ A28F              ;   Fin de la comparativa.
1233+ A28F
1234+ A28F              ;   NO HAY COLISIÓN !!!!!.
1235+ A28F              ;
1236+ A28F              ;   .db (Impacto) de Amadeus a "0".
1237+ A28F              ;   RES el bit2 de (Impacto2).
1238+ A28F              ;
1239+ A28F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1240+ A28F              ;   Lo colocamos a "0".
1241+ A28F
1242+ A28F 21 3A 8C         ld hl,Impacto2
1243+ A292 CB 96            res 2,(hl)
1244+ A294 2A 3B 8C         ld hl,(Entidad_sospechosa_de_colision)
1245+ A297 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1246+ A299 C9               ret
1247+ A29A
1248+ A29A              ;   COLISIÓN !!!!!.
1249+ A29A              ;
1250+ A29A              ;   .db (Impacto) de Amadeus a "1".
1251+ A29A              ;   SET el bit3 de (Impacto2).
1252+ A29A              ;
1253+ A29A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1254+ A29A
1255+ A29A E1           5 pop hl
1256+ A29B C1               pop bc
1257+ A29C
1258+ A29C 21 78 89         ld hl,Impacto_Amadeus
1259+ A29F 36 01            ld (hl),1
1260+ A2A1 21 3A 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1261+ A2A4 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1262+ A2A6
1263+ A2A6 11 C0 87         ld de,Indice_Explosion_entidades
1264+ A2A9 2A 3B 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1265+ A2AC
1266+ A2AC 23               inc hl
1267+ A2AD 23               inc hl
1268+ A2AE 23               inc hl
1269+ A2AF
1270+ A2AF 73               ld (hl),e
1271+ A2B0 23               inc hl
1272+ A2B1 72               ld (hl),d
1273+ A2B2
1274+ A2B2              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1275+ A2B2
1276+ A2B2 11 60 88         ld de,Indice_Explosion_Amadeus
1277+ A2B5 21 7B 89         ld hl,Pamm_Amadeus
1278+ A2B8
1279+ A2B8 73               ld (hl),e
1280+ A2B9 23               inc hl
1281+ A2BA 72               ld (hl),d
1282+ A2BB
1283+ A2BB C9               ret
1284+ A2BC
1285+ A2BC
1286+ A2BC
# file closed: Disparo.asm
2078  A2BC
2079  A2BC              	SAVESNA "Pruebas.sna", START
2080  A2BC
2081  A2BC
2082  A2BC
2083  A2BC
# file closed: Banco_de_pruebas.asm
