# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD A2 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 B3 84        	defw Entidad_1
  98+ 846A F0 84        	defw Entidad_2
  99+ 846C 2D 85        	defw Entidad_3
 100+ 846E 6A 85        	defw Entidad_4
 101+ 8470 A7 85        	defw Entidad_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480
 119+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 120+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B
 127+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 128+ 848F
 129+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 130+ 8490
 131+ 8490 00 00        	db 0,0											; Variables_de_borrado
 132+ 8492 00 00        	defw 0											;	" " " " " " "
 133+ 8494 00 00        	defw 0											;	" " " " " " "
 134+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 135+ 849A
 136+ 849A 00 00        	db 0,0											; Variables_de_pintado
 137+ 849C 00 00        	defw 0											;	" " " " " " "
 138+ 849E 00 00        	defw 0											;	" " " " " " "
 139+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 140+ 84A4
 141+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 142+ 84A7
 143+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 144+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 145+ 84AE
 146+ 84AE 00           	db 0 											; (Columnas).
 147+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 148+ 84B1 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 149+ 84B3
 150+ 84B3              ; ---------- ---------- ---------- ---------- ----------
 151+ 84B3
 152+ 84B3 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 153+ 84B5 00 00        	defw 0											; (Posicion_actual).
 154+ 84B7 00 00        	defw 0 											; (Puntero_objeto).
 155+ 84B9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 84BC
 157+ 84BC 00           	db %00000000 									; (Attr).
 158+ 84BD
 159+ 84BD 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 84BF 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 84C3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 84C5
 164+ 84C5 00 00        	defw 0											; (Posicion_inicio).
 165+ 84C7 00           	db 0											; (Cuad_objeto).
 166+ 84C8
 167+ 84C8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 84CC
 169+ 84CC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 84CD
 171+ 84CD 00 00        	db 0,0										    ; Variables_de_borrado
 172+ 84CF 00 00        	defw 0											;	" " " " " " "
 173+ 84D1 00 00        	defw 0											;	" " " " " " "
 174+ 84D3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 84D7
 176+ 84D7 00 00        	db 0,0											; Variables_de_pintado
 177+ 84D9 00 00        	defw 0											;	" " " " " " "
 178+ 84DB 00 00        	defw 0											;	" " " " " " "
 179+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 84E1
 181+ 84E1 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 182+ 84E4
 183+ 84E4 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 184+ 84E8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 185+ 84EB
 186+ 84EB 00           	db 0 											; (Columnas).
 187+ 84EC 00 00        	defw 0											; (Limite_horizontal).
 188+ 84EE 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 189+ 84F0
 190+ 84F0              ; ---------- ---------- ---------- ---------- ----------
 191+ 84F0
 192+ 84F0 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 193+ 84F2 00 00        	defw 0                                          ; (Posicion_actual).
 194+ 84F4 00 00        	defw 0											; (Puntero_objeto).
 195+ 84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 196+ 84F9
 197+ 84F9 02           	db %00000010									; (Attr).
 198+ 84FA
 199+ 84FA 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 200+ 84FC 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 201+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 202+ 8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 203+ 8502
 204+ 8502 5E 48        	defw $485e                                      ; (Posicion_inicio).
 205+ 8504 02           	db 2											; (Cuad_objeto).
 206+ 8505
 207+ 8505 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 208+ 8509
 209+ 8509 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 210+ 850A
 211+ 850A 00 00        	db 0,0											; Variables_de_borrado
 212+ 850C 00 00        	defw 0										 	;	" " " " " " "
 213+ 850E 00 00        	defw 0											;	" " " " " " "
 214+ 8510 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 215+ 8514
 216+ 8514 00 00        	db 0,0											; Variables_de_pintado
 217+ 8516 00 00        	defw 0											;	" " " " " " "
 218+ 8518 00 00        	defw 0											;	" " " " " " "
 219+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 851E
 221+ 851E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 222+ 8521
 223+ 8521 7E 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0	; (Puntero_indice_mov) / (Puntero_mov).
 224+ 8525 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 225+ 8528
 226+ 8528 00           	db 0 											; (Columnas).
 227+ 8529 00 00        	defw 0											; (Limite_horizontal).
 228+ 852B 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 229+ 852D
 230+ 852D              ; ---------- ---------- ---------- ---------- ----------
 231+ 852D
 232+ 852D 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 233+ 852F 00 00        	defw 0                                          ; (Posicion_actual).
 234+ 8531 00 00        	defw 0											; (Puntero_objeto).
 235+ 8533 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8536
 237+ 8536 04           	db %00000100									; (Attr).
 238+ 8537
 239+ 8537 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 240+ 8539 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 241+ 853B
 242+ 853B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 243+ 853D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 244+ 853F
 245+ 853F A1 47        	defw $47a1                                      ; (Posicion_inicio).
 246+ 8541 01           	db 1											; (Cuad_objeto).
 247+ 8542
 248+ 8542 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 249+ 8546
 250+ 8546 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 251+ 8547
 252+ 8547 00 00        	db 0,0											; Variables_de_borrado
 253+ 8549 00 00        	defw 0										 	;	" " " " " " "
 254+ 854B 00 00        	defw 0											;	" " " " " " "
 255+ 854D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 256+ 8551
 257+ 8551 00 00        	db 0,0											; Variables_de_pintado
 258+ 8553 00 00        	defw 0											;	" " " " " " "
 259+ 8555 00 00        	defw 0											;	" " " " " " "
 260+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 261+ 855B
 262+ 855B 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 263+ 855E
 264+ 855E 72 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 265+ 8562 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 266+ 8565
 267+ 8565 00           	db 0 											; (Columnas).
 268+ 8566 00 00        	defw 0											; (Limite_horizontal).
 269+ 8568 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 270+ 856A
 271+ 856A              ; ---------- ---------- ---------- ---------- ----------
 272+ 856A
 273+ 856A 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 274+ 856C 00 00        	defw 0                                          ; (Posicion_actual).
 275+ 856E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 8570 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 8573
 278+ 8573 01           	db %00000001									; (Attr).
 279+ 8574
 280+ 8574 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 281+ 8576 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 282+ 8578
 283+ 8578 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 857A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 857C
 286+ 857C BE 47        	defw $47be                                      ; (Posicion_inicio).
 287+ 857E 00           	db 0											; (Cuad_objeto).
 288+ 857F
 289+ 857F 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 8583
 291+ 8583 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 8584
 293+ 8584 00 00        	db 0,0											; Variables_de_borrado
 294+ 8586 00 00        	defw 0										 	;	" " " " " " "
 295+ 8588 00 00        	defw 0											;	" " " " " " "
 296+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 858E
 298+ 858E 00 00        	db 0,0											; Variables_de_pintado
 299+ 8590 00 00        	defw 0											;	" " " " " " "
 300+ 8592 00 00        	defw 0											;	" " " " " " "
 301+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 8598
 303+ 8598 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 859B
 305+ 859B 7E 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
 306+ 859F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 85A2
 308+ 85A2 00           	db 0 											; (Columnas).
 309+ 85A3 00 00        	defw 0											; (Limite_horizontal).
 310+ 85A5 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 311+ 85A7
 312+ 85A7              ; ---------- ---------- ---------- ---------- ----------
 313+ 85A7
 314+ 85A7 02 02        Entidad_5 db 2,2                                  	; (Filas) / (Columns).
 315+ 85A9 00 00        	defw 0                                          ; (Posicion_actual).
 316+ 85AB 00 00        	defw 0 											; (Puntero_objeto).
 317+ 85AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 85B0
 319+ 85B0 01           	db %00000001									; (Attr).
 320+ 85B1
 321+ 85B1 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 322+ 85B3 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 323+ 85B5
 324+ 85B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 325+ 85B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 326+ 85B9
 327+ 85B9 0A 40        	defw $400a                                      ; (Posicion_inicio).
 328+ 85BB 01           	db 1											; (Cuad_objeto).
 329+ 85BC
 330+ 85BC 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 331+ 85C0
 332+ 85C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 333+ 85C1
 334+ 85C1 00 00        	db 0,0											; Variables_de_borrado
 335+ 85C3 00 00        	defw 0										 	;	" " " " " " "
 336+ 85C5 00 00        	defw 0											;	" " " " " " "
 337+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 338+ 85CB
 339+ 85CB 00 00        	db 0,0											; Variables_de_pintado
 340+ 85CD 00 00        	defw 0											;	" " " " " " "
 341+ 85CF 00 00        	defw 0											;	" " " " " " "
 342+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 343+ 85D5
 344+ 85D5 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 345+ 85D8
 346+ 85D8 74 97 00 00  	defw Indice_mov_Abajo,0   		                ; (Puntero_indice_mov) / (Puntero_mov).
 347+ 85DC 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 348+ 85DF
 349+ 85DF 00           	db 0 											; (Columnas).
 350+ 85E0 00 00        	defw 0											; (Limite_horizontal).
 351+ 85E2 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 352+ 85E4
# file closed: Entidades_y_disparos.asm
  21  85E4
  22  85E4              ; ******************************************************************************************************************************************************************************************
  23  85E4              ; Constantes.
  24  85E4              ; ******************************************************************************************************************************************************************************************
  25  85E4              ;
  26  85E4              ; 8/11/22
  27  85E4              ;
  28  85E4              ; Constantes generales.
  29  85E4              ;
  30  85E4
  31  85E4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  85E4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  85E4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  85E4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  85E4
  36  85E4              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  85E4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  85E4              ;                               				        ; De momento situamos este almacén en $7000.
  39  85E4              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  85E4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  85E4              ;                               				        ; De momento situamos este almacén en $7060.
  42  85E4
  43  85E4              ; ******************************************************************************************************************************************************************************************
  44  85E4              ; Variables.
  45  85E4              ; ******************************************************************************************************************************************************************************************
  46  85E4              ;
  47  85E4              ; 10/11/22
  48  85E4              ;
  49  85E4              ; Variables de DRAW. (Motor principal).
  50  85E4              ;
  51  85E4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  85E4
  53  85E4 02           Filas db 2												; Filas. [DRAW]
  54  85E5 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  85E6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  85E8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85EA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85EB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85EC
  60  85EC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85EC
  62  85EC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85ED              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85ED              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85ED 04           Attr db %00000100										; Atributos de la entidad:
  66  85EE
  67  85EE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85EE              ;
  69  85EE              ;	COLORES: 0 ..... NEGRO
  70  85EE              ;    		 1 ..... AZUL
  71  85EE              ; 			 2 ..... ROJO
  72  85EE              ;			 3 ..... MAGENTA
  73  85EE              ; 			 4 ..... VERDE
  74  85EE              ; 			 5 ..... CIAN
  75  85EE              ;			 6 ..... AMARILLO
  76  85EE              ; 			 7 ..... BLANCO
  77  85EE
  78  85EE 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85F0 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85F2 00 00        Puntero_DESPLZ_der defw 0
  81  85F4 00 00        Puntero_DESPLZ_izq defw 0
  82  85F6
  83  85F6 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85F8 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85F9
  86  85F9              ; Variables de objeto. (Características).
  87  85F9
  88  85F9 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85FA 02           Vel_right db 2 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85FB 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85FC 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85FD
  93  85FD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85FE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85FE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85FE 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  8600 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  8602 00 00        	defw 0
  99  8604 00 00 00 00  	db 0,0,0,0
 100  8608
 101  8608 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  860A 00 00        	defw 0
 103  860C 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  860E 00 00 00 00  	db 0,0,0,0
 105  8612
 106  8612              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  8612
 108  8612 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  8613              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  8613              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  8613              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  8613              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  8613              ;
 114  8613              ; 														DESCRIPCIÖN:
 115  8613              ;
 116  8613              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  8613              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  8613              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  8613              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  8613              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  8613              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  8613              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  8613              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  8613              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  8613              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  8613              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  8613              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  8613              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  8613              ;
 130  8613              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  8613              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  8613              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  8613
 134  8613 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  8614
 136  8614              ; Movimiento.
 137  8614
 138  8614 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 139  8615 80 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 140  8617 00 00        Puntero_mov defw 0
 141  8619 00           Contador_db_mov db 0
 142  861A 00           Incrementa_puntero db 0
 143  861B 00           Repetimos_db db 0
 144  861C
 145  861C              ; Variables de funcionamiento. [DRAW].
 146  861C
 147  861C 00           Columnas db 0
 148  861D 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 149  861F              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  861F 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 151  8620
 152  8620              ; variables de control general.
 153  8620
 154  8620 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 155  8621
 156  8621              ; 61 Bytes por entidad.
 157  8621              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 158  8621              ;					         		---------;      ;---------
 159  8621
 160  8621
 161  8621              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 162  8621
 163  8621 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 164  8622
 165  8622              ;														DESCRIPCIÓN:
 166  8622              ;
 167  8622              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 168  8622              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 169  8622              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 170  8622              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 171  8622              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 172  8622              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 173  8622
 174  8622              ; Gestión de ENTIDADES.
 175  8622
 176  8622 02           Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 177  8623 00 00        Puntero_store_entidades defw 0
 178  8625 00 00        Puntero_restore_entidades defw 0
 179  8627 00 00        Indice_restore defw 0
 180  8629 01           Numero_de_entidades db 1								; Nº de entidades en pantalla, (contando con Amadeus).
 181  862A 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 182  862B              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 183  862B              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 184  862B              ;														; _ (Numero_de_malotes)="0".
 185  862B 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 186  862D              ;														; _variable para almacenar lo posición del puntero_
 187  862D              ; 														; _de pila, SP.
 188  862D 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 189  862F              ;														; La utiliza la rutina [Extrae_foto_registros].
 190  862F 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 191  8631              ;														; _el snapshot de los registros de la siguiente entidad.
 192  8631              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 193  8631 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 194  8633              ;														; _el snapshot de los registros del siguiente disparo.
 195  8633              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 196  8633
 197  8633              ;---------------------------------------------------------------------------------------------------------------
 198  8633
 199  8633              ; Gestión de Disparos.
 200  8633
 201  8633 00           Numero_de_disparotes db 0
 202  8634 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 203  8636 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 204  8638 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 205  8639              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 206  8639              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 207  8639 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 208  863B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 209  863B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 210  863B              ;														; _produzca colisión.
 211  863B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 212  863D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 213  863D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 214  8640              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 215  8640 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 216  8643              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 217  8643
 218  8643              ;---------------------------------------------------------------------------------------------------------------
 219  8643
 220  8643              ; Relojes y temporizaciones.
 221  8643
 222  8643 01           Habilita_disparo_Amadeus db 1
 223  8644 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 224  8645 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 225  8646
 226  8646 01           Habilita_disparo_entidad db 1
 227  8647 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 228  8648 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 229  8649
 230  8649              ;---------------------------------------------------------------------------------------------------------------
 231  8649
 232  8649              ; Gestión de FRAMES.
 233  8649
 234  8649 00           Switch db 0
 235  864A
 236  864A              ; Variables de Raster y localización en pantalla.
 237  864A
 238  864A 00 FF        Temp_Raster defw $ff00
 239  864C
 240  864C              ; Rutina principal *************************************************************************************************************************************************************************
 241  864C              ;
 242  864C              ;	14/11/22
 243  864C
 244  864C              START
 245  864C
 246  864C 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 247  864F 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 248  8651 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 249  8653 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 250  8655 F3           	DI
 251  8656
 252  8656 3E 07        	ld a,%00000111
 253  8658 CD 94 93     	call Cls
 254  865B
 255  865B              ;	call Pinta_FILAS
 256  865B
 257  865B CD 42 89     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 258  865E
 259  865E 21 29 86     	ld hl,Numero_de_entidades
 260  8661 46           	ld b,(hl)
 261  8662 04           	inc b
 262  8663 05           	dec b
 263  8664 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 264  8666
 265  8666 CD 10 88     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 266  8669              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 267  8669
 268  8669              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 269  8669              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 270  8669              ;	Pintamos el resto de entidades:
 271  8669
 272  8669              ;	INICIA ENTIDADES !!!!!
 273  8669
 274  8669 C5           1 push bc  												; Guardo el contador de entidades.
 275  866A CD 6A 88      	call Inicia_Puntero_objeto
 276  866D CD E4 8D     	call Draw
 277  8670 CD A0 7F     	call Guarda_foto_registros
 278  8673 CD B2 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 279  8676 C1           	pop bc
 280  8677 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 281  8679
 282  8679              ; 	INICIA AMADEUS !!!!!
 283  8679
 284  8679 CD 19 89     3 call Restore_Amadeus
 285  867C CD 6A 88     	call Inicia_Puntero_objeto
 286  867F CD E4 8D     	call Draw
 287  8682 CD A0 7F     	call Guarda_foto_registros
 288  8685
 289  8685 11 76 84     	ld de,Amadeus_db
 290  8688 CD 2B 89     	call Store_Amadeus
 291  868B
 292  868B              ; 	INICIA DISPAROS !!!!!
 293  868B
 294  868B CD 26 88     	call Inicia_Puntero_Disparo_Entidades
 295  868E CD 2D 88     	call Inicia_Puntero_Disparo_Amadeus
 296  8691
 297  8691              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 298  8691
 299  8691 CD 10 88     	call Inicia_punteros_de_entidades
 300  8694 CD F2 88     	call Restore_entidad
 301  8697
 302  8697 3A 29 86     	ld a,(Numero_de_entidades)
 303  869A 3C           	inc a
 304  869B 32 2A 86     	ld (Numero_de_malotes),a
 305  869E
 306  869E FB           2 ei
 307  869F 18 FD        	jr 2B
 308  86A1
 309  86A1 C9           	ret
 310  86A2              ; -----------------------------------------------------------------------------------
 311  86A2
 312  86A2              Frame
 313  86A2
 314  86A2
 315  86A2
 316  86A2
 317  86A2              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 318  86A2              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 319  86A2
 320  86A2              ; PINTAMOS.
 321  86A2
 322  86A2 3E 02            ld a,2
 323  86A4 D3 FE            out ($fe),a
 324  86A6 CD E8 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 325  86A9 CD 21 91     	call Extrae_foto_disparos
 326  86AC 3E 01            ld a,1
 327  86AE D3 FE            out ($fe),a
 328  86B0
 329  86B0              ; ----------------------------------------------------------------------
 330  86B0
 331  86B0              ; RELOJES.
 332  86B0
 333  86B0 21 43 86     	ld hl,Habilita_disparo_Amadeus
 334  86B3 11 45 86     	ld de,Temporiza_disparo_Amadeus
 335  86B6 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 336  86B9
 337  86B9 21 46 86     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 338  86BC 11 48 86     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 339  86BF CD D5 7F     	call Habilita_disparos
 340  86C2
 341  86C2              ; COLISIONES.
 342  86C2
 343  86C2 CD 86 8D     	call Selector_de_impactos
 344  86C5
 345  86C5              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 346  86C5              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 347  86C5              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 348  86C5
 349  86C5 AF           	xor a
 350  86C6 32 38 86     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 351  86C9
 352  86C9 CD 10 88     	call Inicia_punteros_de_entidades
 353  86CC CD F2 88     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_entidades),_
 354  86CF              ; 														; _ en DRAW.
 355  86CF 3A E4 85     	ld a,(Filas)
 356  86D2 A7           	and a
 357  86D3 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 358  86D5 CD 04 89     	call Incrementa_punteros_entidades
 359  86D8 18 F2        	jr 12B
 360  86DA
 361  86DA              ; ---------------------------------------------------------------------------------------
 362  86DA
 363  86DA CD 04 8C     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 364  86DD 21 00 70     	ld hl,Album_de_fotos
 365  86E0 22 2F 86         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 366  86E3              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 367  86E3 3A 29 86     	ld a,(Numero_de_entidades)
 368  86E6 47               ld b,a
 369  86E7 A7           	and a
 370  86E8 28 5B        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 371  86EA
 372  86EA              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 373  86EA
 374  86EA              ; Código que ejecutamos con cada entidad:
 375  86EA
 376  86EA              ; Impacto ???
 377  86EA
 378  86EA C5           2 push bc 												; Nº de entidades.
 379  86EB
 380  86EB 3A FD 85     	ld a,(Impacto)
 381  86EE A7           	and a
 382  86EF 28 0C        	jr z,8F
 383  86F1
 384  86F1              ; Hay Impacto en esta entidad.
 385  86F1
 386  86F1 CD C7 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 387  86F4 CD 34 89     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 388  86F7 21 29 86     	ld hl,Numero_de_entidades							; Una alimaña menos.
 389  86FA 35           	dec (hl)
 390  86FB
 391  86FB 18 42        	jr 6F
 392  86FD
 393  86FD              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 394  86FD              ; _con las coordenadas de la entidad almacenada en DRAW.
 395  86FD
 396  86FD 3A 21 86     8 ld a,(Ctrl_1)
 397  8700 CB 57        	bit 2,a
 398  8702 28 22        	jr z,7F
 399  8704
 400  8704 2A 3B 86     	ld hl,(Coordenadas_disparo_certero)
 401  8707 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 402  8708              ;														; E contiene la coordenada_X del disparo.
 403  8708 2A EA 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 404  870B              ;														; H Coordenado_y de la entidad.
 405  870B A7           	and a
 406  870C ED 52        	sbc hl,de
 407  870E
 408  870E CD BD 8D     	call Determina_resultado_comparativa
 409  8711 04           	inc b
 410  8712 05           	dec b
 411  8713
 412  8713 28 FE        	jr z,$
 413  8715
 414  8715 28 0F        	jr z,7F
 415  8717
 416  8717              ; ----- ----- -----
 417  8717
 418  8717 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 419  8719 32 FD 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 420  871C 21 21 86     	ld hl,Ctrl_1
 421  871F CB 96        	res 2,(hl)
 422  8721 21 3B 86     	ld hl,Coordenadas_disparo_certero
 423  8724 36 00        	ld (hl),0
 424  8726
 425  8726
 426  8726 CD 78 87     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 427  8729
 428  8729 3A 12 86     	ld a,(Ctrl_0)
 429  872C CB 67        	bit 4,a
 430  872E 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 431  8730
 432  8730              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 433  8730              ; [[[
 434  8730 CD 8D 89     	call Detecta_disparo_entidad
 435  8733              ; ]]]
 436  8733 CD D7 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 437  8736
 438  8736 21 12 86     	ld hl,Ctrl_0
 439  8739 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 440  873B AF           	xor a
 441  873C 32 13 86     	ld (Obj_dibujado),a
 442  873F
 443  873F CD B2 88     6 call Store_Restore_entidades
 444  8742
 445  8742 C1           	pop bc
 446  8743 10 A5        	djnz 2B
 447  8745
 448  8745              ; Tras la gestión de las entidades, ... AMADEUS.
 449  8745
 450  8745 CD 19 89     4 call Restore_Amadeus
 451  8748
 452  8748 3A FD 85     	ld a,(Impacto)
 453  874B A7           	and a
 454  874C 20 FE        	jr nz,$
 455  874E
 456  874E              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 457  874E
 458  874E CD A8 87     	call Mov_Amadeus
 459  8751
 460  8751 3A 12 86     	ld a,(Ctrl_0)
 461  8754 CB 67        	bit 4,a
 462  8756 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 463  8758
 464  8758 CD D7 87     	call Guarda_foto_entidad_a_pintar
 465  875B
 466  875B 21 12 86     3 ld hl,Ctrl_0
 467  875E CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 468  8760 AF           	xor a
 469  8761 32 13 86     	ld (Obj_dibujado),a
 470  8764
 471  8764 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 472  8767 CD 2B 89     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 473  876A
 474  876A CD 22 8C     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 475  876D
 476  876D              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 477  876D
 478  876D CD 4C 88     	call Calcula_numero_de_disparotes
 479  8770 CD 34 88     9 call Calcula_numero_de_malotes
 480  8773
 481  8773 3E 04        	ld a,4
 482  8775 D3 FE        	out ($fe),a
 483  8777
 484  8777 C9           	ret
 485  8778
 486  8778              ; --------------------------------------------------------------------------------------------------------------
 487  8778              ;
 488  8778              ;	27/03/23
 489  8778
 490  8778              Mov_obj
 491  8778
 492  8778              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 493  8778
 494  8778 AF           	xor a
 495  8779 32 13 86     	ld (Obj_dibujado),a
 496  877C 32 12 86     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 497  877F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 498  877F              ; 														; _de la entidad.
 499  877F CD E1 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 500  8782              ;														; Obj_dibujado="0".
 501  8782              ; Movemos Entidades malignas.
 502  8782
 503  8782 21 15 86     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 504  8785 34           	inc (hl)
 505  8786 35           	dec (hl)                                            ; Salimos de la rutina.
 506  8787 C8           	ret z
 507  8788
 508  8788 CD 82 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 509  878B
 510  878B 3A 12 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 511  878E CB 67        	bit 4,a
 512  8790 C8           	ret z
 513  8791
 514  8791              ; Ha habido desplazamiento de la entidad maligna.
 515  8791              ; Ha llegado a zona de AMADEUS ???
 516  8791
 517  8791 3A EB 85     	ld a,(Coordenada_y)
 518  8794 FE 14        	cp $14
 519  8796 D4 53 8B     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 520  8799              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 521  8799              ; ---------
 522  8799
 523  8799 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 524  879B 32 13 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 525  879E CD E1 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 526  87A1 CD F8 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 527  87A4 CD C7 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 528  87A7 C9           	ret													; _de la misma.
 529  87A8
 530  87A8              ; --------------------------------------------------------------------------------------------------------------
 531  87A8              ;
 532  87A8              ;	29/1/23
 533  87A8
 534  87A8              Mov_Amadeus
 535  87A8
 536  87A8 AF           	xor a
 537  87A9 32 13 86     	ld (Obj_dibujado),a
 538  87AC CD E1 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 539  87AF              ;														; Obj_dibujado="0".
 540  87AF              ; Movemos Amadeus.
 541  87AF
 542  87AF CD 56 89     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 543  87B2 3A 12 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 544  87B5 CB 67        	bit 4,a
 545  87B7 C8           	ret z
 546  87B8
 547  87B8              ; ---------
 548  87B8
 549  87B8 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 550  87BA 32 13 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 551  87BD CD E1 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 552  87C0 CD F8 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 553  87C3 CD C7 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 554  87C6 C9           	ret													; _de la nave.
 555  87C7
 556  87C7              ; --------------------------------------------------------------------------------------------------------------
 557  87C7              ;
 558  87C7              ;	31/01/23
 559  87C7              ;
 560  87C7              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 561  87C7
 562  87C7              Guarda_foto_entidad_a_borrar
 563  87C7
 564  87C7 CD BE 90     	call Prepara_draw
 565  87CA CD F8 8F     	call calcula_CColumnass
 566  87CD CD 2F 90     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 567  87D0 CD 84 90     	call Define_rutina_de_impresion
 568  87D3 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 569  87D6 C9           	ret
 570  87D7
 571  87D7              ; --------------------------------------------------------------------------------------------------------------
 572  87D7              ;
 573  87D7              ;	31/01/23
 574  87D7              ;
 575  87D7              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 576  87D7              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 577  87D7
 578  87D7              Guarda_foto_entidad_a_pintar
 579  87D7
 580  87D7 CD 04 88     	call Repone_pintar
 581  87DA CD E4 8D     	call Draw
 582  87DD CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 583  87E0 C9           	ret
 584  87E1
 585  87E1              ; --------------------------------------------------------------------------------------------------------------
 586  87E1              ;
 587  87E1              ;
 588  87E1
 589  87E1 21 E4 85     Prepara_var_pintado_borrado	ld hl,Filas
 590  87E4 3A 13 86     	ld a,(Obj_dibujado)
 591  87E7 A7           	and a
 592  87E8 28 05        	jr z,1F
 593  87EA 11 08 86     	ld de,Variables_de_pintado
 594  87ED 18 03        	jr 2F
 595  87EF 11 FE 85     1 ld de,Variables_de_borrado
 596  87F2 01 08 00     2 ld bc,8
 597  87F5 ED B0        	ldir
 598  87F7 C9           	ret
 599  87F8
 600  87F8              ; --------------------------------------------------------------------------------------------------------------
 601  87F8
 602  87F8 21 FE 85     Repone_borrar ld hl,Variables_de_borrado
 603  87FB 11 E4 85     	ld de,Filas
 604  87FE 01 08 00     	ld bc,8
 605  8801 ED B0        	ldir
 606  8803 C9           	ret
 607  8804
 608  8804 21 08 86     Repone_pintar ld hl,Variables_de_pintado
 609  8807 11 E4 85     	ld de,Filas
 610  880A 01 08 00     	ld bc,8
 611  880D ED B0        	ldir
 612  880F C9           	ret
 613  8810
 614  8810              ; *************************************************************************************************************************************************************
 615  8810              ;
 616  8810              ; 8/1/23
 617  8810              ;
 618  8810              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 619  8810              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 620  8810              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 621  8810
 622  8810              ; Destruye HL y DE !!!!!
 623  8810
 624  8810              Inicia_punteros_de_entidades
 625  8810
 626  8810 21 68 84     	ld hl,Indice_de_entidades
 627  8813 CD 64 88         call Extrae_address
 628  8816 22 23 86         ld (Puntero_store_entidades),hl
 629  8819 21 6A 84     	ld hl,Indice_de_entidades+2
 630  881C 22 27 86     	ld (Indice_restore),hl
 631  881F CD 64 88     	call Extrae_address
 632  8822 22 25 86     	ld (Puntero_restore_entidades),hl
 633  8825 C9               ret
 634  8826
 635  8826              ; *************************************************************************************************************************************************************
 636  8826              ;
 637  8826              ; 8/1/23
 638  8826              ;
 639  8826              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 640  8826
 641  8826 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 642  8829 22 34 86     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 643  882C C9           	ret
 644  882D 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 645  8830 22 36 86     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 646  8833 C9           	ret
 647  8834
 648  8834              ; -------------------------------------------------------------------------------------------------------------
 649  8834              ;
 650  8834              ; 28/2/23
 651  8834              ;
 652  8834
 653  8834              Calcula_numero_de_malotes
 654  8834
 655  8834 21 00 70     	ld hl,Album_de_fotos
 656  8837 EB           	ex de,hl
 657  8838 2A 2F 86     	ld hl,(Stack_snapshot)
 658  883B
 659  883B 06 00        	ld b,0
 660  883D 7D           	ld a,l
 661  883E 93           	sub e
 662  883F 28 07        	jr z,1F
 663  8841
 664  8841              ; Nº de malotes no es "0".
 665  8841
 666  8841 D6 06        2 sub 6
 667  8843 04           	inc b
 668  8844 A7           	and a
 669  8845 20 FA        	jr nz,2B
 670  8847 78           	ld a,b
 671  8848
 672  8848 32 2A 86     1 ld (Numero_de_malotes),a
 673  884B C9           	ret
 674  884C
 675  884C              ; -------------------------------------------------------------------------------------------------------------
 676  884C              ;
 677  884C              ; 28/2/23
 678  884C              ;
 679  884C
 680  884C              Calcula_numero_de_disparotes
 681  884C
 682  884C 21 60 70     	ld hl,Album_de_fotos_disparos
 683  884F EB           	ex de,hl
 684  8850 2A 31 86     	ld hl,(Stack_snapshot_disparos)
 685  8853
 686  8853 06 00        	ld b,0
 687  8855 7D           	ld a,l
 688  8856 93           	sub e
 689  8857 28 07        	jr z,1F
 690  8859
 691  8859              ; Nº de malotes no es "0".
 692  8859
 693  8859 D6 06        2 sub 6
 694  885B 04           	inc b
 695  885C A7           	and a
 696  885D 20 FA        	jr nz,2B
 697  885F 78           	ld a,b
 698  8860
 699  8860 32 33 86     1 ld (Numero_de_disparotes),a
 700  8863 C9           	ret
 701  8864              ; *************************************************************************************************************************************************************
 702  8864              ;
 703  8864              ; 20/10/22
 704  8864              ;
 705  8864              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 706  8864              ;
 707  8864              ; Destruye el puntero y DE !!!!!
 708  8864
 709  8864 5E           Extrae_address ld e,(hl)
 710  8865 23           	inc hl
 711  8866 56           	ld d,(hl)
 712  8867 2B           	dec hl
 713  8868 EB           	ex de,hl
 714  8869 C9           	ret
 715  886A
 716  886A              ; *************************************************************************************************************************************************************
 717  886A              ;
 718  886A              ;	7/2/23
 719  886A              ;
 720  886A              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 721  886A              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 722  886A              ;
 723  886A              ;   Destruye HL y BC !!!!!,
 724  886A              ;
 725  886A              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 726  886A              ;					"0" ..... Izquierda.
 727  886A
 728  886A              Inicia_Puntero_objeto
 729  886A
 730  886A 3A F8 85     	ld a,(Cuad_objeto)
 731  886D E6 01        	and 1
 732  886F F5           	push af
 733  8870 CC 8E 88     	call z,Inicia_puntero_objeto_izq
 734  8873 F1           	pop af
 735  8874 28 2B        	jr z,1F
 736  8876 CD 7B 88     	call Inicia_puntero_objeto_der
 737  8879 18 26        	jr 1F
 738  887B
 739  887B              ; Arrancamos desde la parte izquierda de la pantalla.
 740  887B              ; Iniciamos (Indice_Sprite_der).
 741  887B
 742  887B 2A EE 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 743  887E 22 F2 85     	ld (Puntero_DESPLZ_der),hl
 744  8881 CD 64 88     	call Extrae_address
 745  8884 22 E8 85     	ld (Puntero_objeto),hl
 746  8887
 747  8887 2A F0 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 748  888A 22 F4 85     	ld (Puntero_DESPLZ_izq),hl
 749  888D C9           	ret
 750  888E
 751  888E              ; Arrancamos desde la parte derecha de la pantalla.
 752  888E              ; Iniciamos (Indice_Sprite_izq).
 753  888E
 754  888E 2A F0 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 755  8891 22 F4 85     	ld (Puntero_DESPLZ_izq),hl
 756  8894 CD 64 88     	call Extrae_address
 757  8897 22 E8 85     	ld (Puntero_objeto),hl
 758  889A
 759  889A 2A EE 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 760  889D 22 F2 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 761  88A0 C9           	ret
 762  88A1
 763  88A1              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 764  88A1
 765  88A1 21 38 83     1 ld hl,Amadeus
 766  88A4 ED 4B E8 85  	ld bc,(Puntero_objeto)
 767  88A8 B7 ED 42     	sub hl,bc
 768  88AB C0           	ret nz
 769  88AC 21 12 86     	ld hl,Ctrl_0
 770  88AF CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 771  88B1 C9           	ret 												; _de nuestra nave en los extremos.
 772  88B2
 773  88B2              ; *************************************************************************************************************************************************************
 774  88B2              ;
 775  88B2              ;	8/1/23
 776  88B2              ;
 777  88B2              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 778  88B2              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 779  88B2
 780  88B2              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 781  88B2              ;	_de la 2ª y 3ª entidad respectivamente.
 782  88B2
 783  88B2              Store_Restore_entidades
 784  88B2
 785  88B2 3A 29 86     	ld a,(Numero_de_entidades)
 786  88B5 A7           	and a
 787  88B6 C8           	ret z												 ; Salimos de la rutina si no quedan entidades vivitas y coleando.
 788  88B7
 789  88B7 E5           	push hl
 790  88B8 D5           	push de
 791  88B9 C5            	push bc
 792  88BA
 793  88BA              ;	STORE !!!!!
 794  88BA              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 795  88BA
 796  88BA 21 E4 85     	ld hl,Filas
 797  88BD ED 5B 23 86  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 798  88C1 01 3D 00     	ld bc,61
 799  88C4 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 800  88C6
 801  88C6              ; 	Entidad_sospechosa. 20/4/23
 802  88C6
 803  88C6 3A FD 85     	ld a,(Impacto)
 804  88C9 A7           	and a
 805  88CA 28 0C        	jr z,1F
 806  88CC
 807  88CC 2A 23 86     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 808  88CF 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 809  88D2 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 810  88D3 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 811  88D5 22 39 86     	ld (Entidad_sospechosa_de_colision),hl
 812  88D8
 813  88D8              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 814  88D8
 815  88D8 2A 25 86     1 ld hl,(Puntero_restore_entidades)
 816  88DB 7E           	ld a,(hl)
 817  88DC A7           	and a
 818  88DD F5           	push af
 819  88DE 28 08        	jr z,2F
 820  88E0
 821  88E0 11 E4 85     	ld de,Filas
 822  88E3 01 3D 00     	ld bc,61
 823  88E6 ED B0        	ldir
 824  88E8
 825  88E8 CD 04 89     2 call Incrementa_punteros_entidades
 826  88EB F1           	pop af
 827  88EC 28 EA        	jr z,1B
 828  88EE
 829  88EE C1           	pop bc
 830  88EF D1           	pop de
 831  88F0 E1           	pop hl
 832  88F1
 833  88F1 C9           	ret
 834  88F2
 835  88F2              ; **************************************************************************************************
 836  88F2              ;
 837  88F2              ;	29/10/22
 838  88F2              ;
 839  88F2              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 840  88F2
 841  88F2 E5           Restore_entidad push hl
 842  88F3 D5           	push de
 843  88F4 C5            	push bc
 844  88F5
 845  88F5 2A 23 86     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 846  88F8 11 E4 85     	ld de,Filas
 847  88FB 01 3D 00     	ld bc,61
 848  88FE ED B0        	ldir
 849  8900
 850  8900 C1           	pop bc
 851  8901 D1           	pop de
 852  8902 E1           	pop hl
 853  8903 C9           	ret
 854  8904
 855  8904
 856  8904              ; **************************************************************************************************
 857  8904              ;
 858  8904              ;	08/05/23
 859  8904              ;
 860  8904              ;	Incrementamos los dos punteros de entidades. (+1).
 861  8904
 862  8904 2A 25 86     Incrementa_punteros_entidades ld hl,(Puntero_restore_entidades)
 863  8907 22 23 86     	ld (Puntero_store_entidades),hl
 864  890A 2A 27 86     	ld hl,(Indice_restore)
 865  890D 23           	inc hl
 866  890E 23           	inc hl
 867  890F 22 27 86     	ld (Indice_restore),hl
 868  8912 CD 64 88         call Extrae_address
 869  8915 22 25 86         ld (Puntero_restore_entidades),hl
 870  8918 C9               ret
 871  8919
 872  8919              ; **************************************************************************************************
 873  8919              ;
 874  8919              ;	25/01/23
 875  8919              ;
 876  8919              ;	Restore_Amadeus
 877  8919              ;
 878  8919              ;	Cargamos en DRAW los parámetros de Amadeus.
 879  8919              ;
 880  8919
 881  8919 E5           Restore_Amadeus	push hl
 882  891A D5           	push de
 883  891B C5            	push bc
 884  891C 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 885  891F 11 E4 85     	ld de,Filas
 886  8922 01 3D 00     	ld bc,61
 887  8925 ED B0        	ldir
 888  8927 C1           	pop bc
 889  8928 D1           	pop de
 890  8929 E1           	pop hl
 891  892A C9           	ret
 892  892B
 893  892B              ; *************************************************************************************************************************************************************
 894  892B              ;
 895  892B              ;	29/04/23
 896  892B              ;
 897  892B              ;	Store_Amadeus
 898  892B              ;
 899  892B              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 900  892B              ;
 901  892B              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 902  892B              ;
 903  892B              ;	DESTRUYE: HL y BC y DE.
 904  892B
 905  892B 21 E4 85     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 906  892E 01 3D 00     	ld bc,61
 907  8931 ED B0        	ldir
 908  8933 C9           	ret
 909  8934
 910  8934              ; -----------------------------------------------------------
 911  8934              ;
 912  8934              ;	27/04/23
 913  8934              ;
 914  8934              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 915  8934              ;
 916  8934              ;	Destruye: HL,BC,DE,A
 917  8934
 918  8934 21 E4 85     Borra_datos_entidad ld hl,Filas
 919  8937 01 3C 00     	ld bc,60
 920  893A AF           	xor a
 921  893B 77           	ld (hl),a
 922  893C 11 E5 85     	ld de,Filas+1
 923  893F ED B0        	ldir
 924  8941 C9           	ret
 925  8942
 926  8942              ; -----------------------------------------------------------
 927  8942
 928  8942              ; Teclado.
 929  8942
 930  8942 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 931  8944 DB FE        	in a,($fe)
 932  8946 E6 01        	and $01
 933  8948 28 02        	jr z,1f
 934  894A 18 F6        	jr Pulsa_ENTER
 935  894C C9           1 ret
 936  894D
 937  894D              ; **************************************************************************************************
 938  894D              ;
 939  894D              ; Temporización.
 940  894D
 941  894D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 942  894D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 943  894D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 944  894D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 945  894D
 946  894D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 947  894D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 948  894D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 949  894D
 950  894D              ; A partir de $4f61 no hace falta DELAY.
 951  894D
 952  894D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 953  894D
 954  894D 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 955  8950 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 956  8951 78           	LD A,B
 957  8952 A7           	AND A
 958  8953 20 FB        	JR NZ,wait
 959  8955 C9           	RET
 960  8956
 961  8956              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 962  8956              ;
 963  8956              ;	5/3/23
 964  8956              ;
 965  8956              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 966  8956
 967  8956              Movimiento_Amadeus
 968  8956
 969  8956              ; Disparo.
 970  8956
 971  8956 3A 43 86     	ld a,(Habilita_disparo_Amadeus)
 972  8959 A7           	and a
 973  895A 20 02        	jr nz,1F
 974  895C 18 15        	jr 2F
 975  895E
 976  895E 3E F7        1 ld a,$f7													; "5" para disparar.
 977  8960 DB FE        	in a,($fe)
 978  8962 E6 10        	and $10
 979  8964
 980  8964 F5           	push af
 981  8965 CC CF 89     	call z,Genera_disparo
 982  8968 F1           	pop af
 983  8969 20 08        	jr nz,2F
 984  896B
 985  896B 3A 43 86     	ld a,(Habilita_disparo_Amadeus)
 986  896E EE 01        	xor 1
 987  8970 32 43 86     	ld (Habilita_disparo_Amadeus),a
 988  8973
 989  8973 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 990  8975 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 991  8977 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 992  8979 CC 22 95         call z,Mov_left											;			"			"			"			"			"			"			"			"
 993  897C 3E F7        	ld a,$f7
 994  897E DB FE        	in a,($fe)
 995  8980 E6 01        	and $01
 996  8982 C8           	ret z
 997  8983
 998  8983 3E F7        	ld a,$f7
 999  8985 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1000  8987 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1001  8989 CC 04 94     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1002  898C C9           	ret
1003  898D
1004  898D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1005  898D              ;
1006  898D              ;	Rutina provisional para que los malotes cagen balas.
1007  898D
1008  898D              Detecta_disparo_entidad
1009  898D
1010  898D 3A 46 86     	ld a,(Habilita_disparo_entidad)
1011  8990 A7           	and a
1012  8991 C8           	ret z
1013  8992 3E 7F        	ld a,$7f
1014  8994 DB FE        	in a,($fe)
1015  8996 E6 01        	and 1
1016  8998 C0           	ret nz
1017  8999 CD CF 89     	call Genera_disparo
1018  899C C9           	ret
1019  899D
1020  899D              ; Pinta indicadores de FILAS. ------------------------------------------------------
1021  899D
1022  899D 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1023  89A0
1024  89A0              ; ----------
1025  89A0 06 20        	ld b,32
1026  89A2 E5           2 push hl
1027  89A3 C5           	push bc
1028  89A4              ; ----------
1029  89A4
1030  89A4 06 BF        	ld b,$bf
1031  89A6 36 80        1 ld (hl),%10000000
1032  89A8 CD CA 90     	call NextScan
1033  89AB 10 F9        	djnz 1B
1034  89AD
1035  89AD              ; ----------
1036  89AD C1           	pop bc
1037  89AE E1           	pop hl
1038  89AF 2C           	inc l
1039  89B0 10 F0        	djnz 2B
1040  89B2              ; ----------
1041  89B2
1042  89B2 06 03        	ld b,3
1043  89B4 21 00 47         ld hl,$4700
1044  89B7 CD BD 89     3 call Bucle_1
1045  89BA 10 FB            djnz 3B
1046  89BC C9               ret
1047  89BD
1048  89BD C5           Bucle_1 push bc
1049  89BE E5                   push hl
1050  89BF D1                   pop de
1051  89C0 13                   inc de
1052  89C1 01 FF 00             ld bc,255
1053  89C4 36 FF                ld (hl),255
1054  89C6 ED B0                ldir
1055  89C8 23                   inc hl
1056  89C9 3E 07                ld a,7
1057  89CB 84                   add a,h
1058  89CC 67                   ld h,a
1059  89CD C1                   pop bc
1060  89CE C9                   ret
1061  89CF
1062  89CF              ; ---------------------------------------------------------------
1063  89CF
1064  89CF              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 89CF              ; ******************************************************************************************************************************************************************************************
   2+ 89CF              ;
   3+ 89CF              ;   17/04/23
   4+ 89CF              ;
   5+ 89CF              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 89CF              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 89CF              ;
   8+ 89CF              ;
   9+ 89CF              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 89CF              ;
  11+ 89CF              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 89CF              ;               _ hacen las entidades hacia abajo.
  13+ 89CF              ;
  14+ 89CF              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 89CF              ;
  16+ 89CF              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 89CF              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 89CF              ;
  19+ 89CF              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 89CF              ;           _ la bala.
  21+ 89CF              ;
  22+ 89CF              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 89CF              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 89CF              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 89CF              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 89CF              ;           _ en el momento de generarse la bala)).
  27+ 89CF
  28+ 89CF              Genera_disparo
  29+ 89CF
  30+ 89CF              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 89CF              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 89CF              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 89CF              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 89CF              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 89CF              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 89CF              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 89CF
  38+ 89CF              ; Exclusiones:
  39+ 89CF
  40+ 89CF 3A 1C 86         ld a,(Columnas)
  41+ 89D2 47               ld b,a
  42+ 89D3 3A E5 85         ld a,(Columns)
  43+ 89D6 B8               cp b
  44+ 89D7 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 89D8
  46+ 89D8              ; ----- ----- -----
  47+ 89D8
  48+ 89D8 3A 12 86         ld a,(Ctrl_0)
  49+ 89DB CB 77            bit 6,a
  50+ 89DD 20 06            jr nz,14F
  51+ 89DF
  52+ 89DF 3A EB 85         ld a,(Coordenada_y)
  53+ 89E2 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 89E4 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 89E5
  56+ 89E5 21 00 80     14 ld hl,Indice_disparo
  57+ 89E8 3A EC 85         ld a,(CTRL_DESPLZ)
  58+ 89EB 4F               ld c,a
  59+ 89EC 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 89EE              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 89EE              ;                                            ""        ""       "f9", B="1"
  62+ 89EE              ;                                            ""        ""       "fb", B="2"
  63+ 89EE              ;                                            ""        ""       "fb", B="3"
  64+ 89EE A7               and a
  65+ 89EF 28 10            jr z,1F
  66+ 89F1 E6 01            and 1
  67+ 89F3 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 89F4
  69+ 89F4 79               ld a,c
  70+ 89F5 16 F9            ld d,$f9
  71+ 89F7 23           2 inc hl
  72+ 89F8 23               inc hl
  73+ 89F9 04               inc b
  74+ 89FA BA               cp d
  75+ 89FB 28 04            jr z,1F
  76+ 89FD 14               inc d
  77+ 89FE 14               inc d
  78+ 89FF 18 F6            jr 2B
  79+ 8A01
  80+ 8A01 CD 64 88     1 call Extrae_address
  81+ 8A04 E5               push hl
  82+ 8A05 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8A07 DD 21 5D 93  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8A0B
  85+ 8A0B              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8A0B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8A0B
  88+ 8A0B 3A 12 86         ld a,(Ctrl_0)
  89+ 8A0E CB 77            bit 6,a
  90+ 8A10 20 04            jr nz,19F
  91+ 8A12
  92+ 8A12 AF               xor a
  93+ 8A13 32 46 86         ld (Habilita_disparo_entidad),a
  94+ 8A16
  95+ 8A16 3A F8 85     19 ld a,(Cuad_objeto)
  96+ 8A19 FE 02            cp 2
  97+ 8A1B 38 66            jr c,3F
  98+ 8A1D 28 64            jr z,3F
  99+ 8A1F
 100+ 8A1F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8A1F
 102+ 8A1F E6 01            and 1
 103+ 8A21 28 30            jr z,4F
 104+ 8A23
 105+ 8A23              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8A23              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8A23              ;
 108+ 8A23              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8A23              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8A23              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8A23
 112+ 8A23 2A E6 85     	ld hl,(Posicion_actual)
 113+ 8A26
 114+ 8A26              ;   Amadeus o entidad ???.
 115+ 8A26
 116+ 8A26 3A 12 86         ld a,(Ctrl_0)
 117+ 8A29 CB 77            bit 6,a
 118+ 8A2B 28 0A            jr z,8F
 119+ 8A2D
 120+ 8A2D              ; 	Dispara Amadeus.
 121+ 8A2D
 122+ 8A2D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8A2F CD D9 90         call PreviousScan
 124+ 8A32 CD D9 90         call PreviousScan
 125+ 8A35
 126+ 8A35              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8A35              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8A35              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8A35              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8A35
 131+ 8A35 18 11            jr 10F
 132+ 8A37
 133+ 8A37              ; 	Dispara Entidad.
 134+ 8A37
 135+ 8A37 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8A3A              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8A3A
 138+ 8A3A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8A3A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8A3A
 141+ 8A3A C5               push bc
 142+ 8A3B 06 10            ld b,16
 143+ 8A3D CD CA 90     9 call NextScan
 144+ 8A40 10 FB            djnz 9B
 145+ 8A42 C1               pop bc
 146+ 8A43 CD AD 8A         call Ajusta_disparo_parte_izquierda
 147+ 8A46 18 06            jr 17F
 148+ 8A48
 149+ 8A48              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8A48              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8A48              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8A48              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8A48
 154+ 8A48 CD AD 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 8A4B CD 22 8B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8A4E              ;                                                      ; _al generar el disparo.
 157+ 8A4E
 158+ 8A4E              ; 	LLegados a este punto tendremos:
 159+ 8A4E              ;
 160+ 8A4E              ;       Puntero_objeto_disparo en IY.
 161+ 8A4E              ;       Rutinas_de_impresion en IX.
 162+ 8A4E              ;       Puntero_de_impresion en HL.
 163+ 8A4E              ;       Impacto/Dirección en BC.
 164+ 8A4E
 165+ 8A4E CD B5 8A     17 call Almacena_disparo
 166+ 8A51 18 52            jr 6F                                             ; RET.
 167+ 8A53
 168+ 8A53              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8A53              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8A53              ;
 171+ 8A53              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8A53              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8A53              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8A53
 175+ 8A53 2A E6 85     4 ld hl,(Posicion_actual)
 176+ 8A56
 177+ 8A56              ;   Amadeus o entidad ???.
 178+ 8A56
 179+ 8A56 3A 12 86         ld a,(Ctrl_0)
 180+ 8A59 CB 77            bit 6,a
 181+ 8A5B 28 0A            jr z,11F
 182+ 8A5D
 183+ 8A5D              ; 	Dispara Amadeus.
 184+ 8A5D
 185+ 8A5D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A5F CD D9 90         call PreviousScan
 187+ 8A62 CD D9 90         call PreviousScan
 188+ 8A65
 189+ 8A65              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A65              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A65              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A65              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A65
 194+ 8A65 18 11            jr 13F
 195+ 8A67
 196+ 8A67              ; 	Dispara Entidad.
 197+ 8A67
 198+ 8A67 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A6A              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A6A
 201+ 8A6A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A6A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A6A
 204+ 8A6A C5               push bc
 205+ 8A6B 06 10            ld b,16
 206+ 8A6D CD CA 90     12 call NextScan
 207+ 8A70 10 FB            djnz 12B
 208+ 8A72 C1               pop bc
 209+ 8A73
 210+ 8A73 CD A6 8A         call Ajusta_disparo_parte_derecha
 211+ 8A76 18 06            jr 18F
 212+ 8A78
 213+ 8A78              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A78              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A78              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A78              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A78
 218+ 8A78 CD A6 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A7B CD 22 8B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A7E              ;                                                       ; _al generar el disparo.
 221+ 8A7E
 222+ 8A7E              ; LLegados a este punto tendremos:
 223+ 8A7E              ;
 224+ 8A7E              ;       Puntero_objeto_disparo en IY.
 225+ 8A7E              ;       Rutinas_de_impresion en IX.
 226+ 8A7E              ;       Puntero_de_impresion en HL.
 227+ 8A7E              ;       Impacto/Dirección en BC.
 228+ 8A7E
 229+ 8A7E CD B5 8A     18 call Almacena_disparo
 230+ 8A81 18 22            jr 6F                                               ; RET.
 231+ 8A83
 232+ 8A83              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A83
 234+ 8A83 28 11        3 jr z,5F
 235+ 8A85
 236+ 8A85              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A85              ;
 238+ 8A85              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A85              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A85              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A85              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A85
 243+ 8A85              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A85              ;	   ""        ""       "f9", B="1"
 245+ 8A85              ;	   ""        ""       "fb", B="2"
 246+ 8A85              ; 	   ""        ""       "fb", B="3"
 247+ 8A85
 248+ 8A85 2A E6 85     	ld hl,(Posicion_actual)
 249+ 8A88 CD CA 90     	call NextScan
 250+ 8A8B
 251+ 8A8B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A8B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A8B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A8B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A8B
 256+ 8A8B CD AD 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A8E
 258+ 8A8E              ; 	No se produce impacto. B="$80"
 259+ 8A8E              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A8E
 261+ 8A8E 01 80 80         ld bc,$8080
 262+ 8A91
 263+ 8A91              ; 	LLegados a este punto tendremos:
 264+ 8A91              ;
 265+ 8A91              ;       Puntero_objeto_disparo en IY.
 266+ 8A91              ;       Rutinas_de_impresion en IX.
 267+ 8A91              ;       Puntero_de_impresion en HL.
 268+ 8A91              ;       Impacto/Dirección en BC.
 269+ 8A91
 270+ 8A91 CD B5 8A         call Almacena_disparo
 271+ 8A94 18 0F            jr 6F                                           ; RET.
 272+ 8A96
 273+ 8A96              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A96              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A96              ;
 276+ 8A96              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A96              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A96              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A96              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A96
 281+ 8A96 2A E6 85     5 ld hl,(Posicion_actual)
 282+ 8A99 CD CA 90     	call NextScan
 283+ 8A9C
 284+ 8A9C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A9C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A9C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A9C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A9C
 289+ 8A9C CD A6 8A         call Ajusta_disparo_parte_derecha
 290+ 8A9F
 291+ 8A9F              ; 	No se produce impacto. B="$80"
 292+ 8A9F              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A9F
 294+ 8A9F 01 80 80     15 ld bc,$8080
 295+ 8AA2
 296+ 8AA2              ; 	LLegados a este punto tendremos:
 297+ 8AA2              ;
 298+ 8AA2              ;       Puntero_objeto_disparo en IY.
 299+ 8AA2              ;       Rutinas_de_impresion en IX.
 300+ 8AA2              ;       Puntero_de_impresion en HL.
 301+ 8AA2              ;       Impacto/Dirección en BC.
 302+ 8AA2
 303+ 8AA2 CD B5 8A         call Almacena_disparo
 304+ 8AA5
 305+ 8AA5 C9           6 ret
 306+ 8AA6
 307+ 8AA6              ; ----------------------------------------------------------------
 308+ 8AA6              ;
 309+ 8AA6              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8AA6              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8AA6              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8AA6
 313+ 8AA6 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8AA7 FE 02            cp 2
 315+ 8AA9 38 01            jr c,1F
 316+ 8AAB 23               inc hl
 317+ 8AAC C9           1 ret
 318+ 8AAD
 319+ 8AAD 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8AAE FE 01        	cp 1
 321+ 8AB0 20 01        	jr nz,1F
 322+ 8AB2 2B           	dec hl
 323+ 8AB3 2B           1 dec hl
 324+ 8AB4 C9               ret
 325+ 8AB5
 326+ 8AB5              ; ----------------------------------------------------------------
 327+ 8AB5              ;
 328+ 8AB5              ;   25/02/23
 329+ 8AB5              ;
 330+ 8AB5              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8AB5              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8AB5              ;
 333+ 8AB5              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8AB5              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8AB5
 336+ 8AB5              Almacena_disparo
 337+ 8AB5
 338+ 8AB5 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8AB6 F1               pop af
 340+ 8AB7 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8AB8
 342+ 8AB8 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8AB9 E6 01            and 1
 344+ 8ABB 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8ABD              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8ABD              ; 	Dispara AMADEUS.
 347+ 8ABD
 348+ 8ABD              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8ABD              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8ABD              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8ABD              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8ABD
 353+ 8ABD C5               push bc
 354+ 8ABE 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8AC1 2A 36 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8AC4 A7               and a
 357+ 8AC5 ED 42            sbc hl,bc
 358+ 8AC7 CC 2D 88         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8ACA C1               pop bc
 360+ 8ACB 28 54            jr z,4F
 361+ 8ACD
 362+ 8ACD 2A 36 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8AD0 23               inc hl
 364+ 8AD1 23               inc hl
 365+ 8AD2 22 36 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8AD5              ;                                                   ; _ Disparo_(+1).
 367+ 8AD5 18 18            jr 2F
 368+ 8AD7
 369+ 8AD7              ; Dispara una entidad.
 370+ 8AD7
 371+ 8AD7 C5           1 push bc
 372+ 8AD8 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8ADB 2A 34 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8ADE A7               and a
 375+ 8ADF ED 42            sbc hl,bc
 376+ 8AE1 CC 26 88         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8AE4 C1               pop bc
 378+ 8AE5 28 3A            jr z,4F
 379+ 8AE7
 380+ 8AE7 2A 34 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8AEA 23               inc hl
 382+ 8AEB 23               inc hl
 383+ 8AEC 22 34 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8AEF              ;                                                   ; _ Disparo_(+1).
 385+ 8AEF CD 64 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8AF2              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8AF2              ;
 388+ 8AF2              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8AF2              ;                                                     Rutinas_de_impresion en IX.
 390+ 8AF2              ;                                                     Puntero_de_impresion en HL.
 391+ 8AF2              ;                                                     Impacto/Dirección en BC.
 392+ 8AF2
 393+ 8AF2 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8AF3 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8AF4 23               inc hl                                          ; _ al siguiente.
 396+ 8AF5 A7               and a
 397+ 8AF6 20 C0            jr nz,3B
 398+ 8AF8
 399+ 8AF8 08               ex af,af
 400+ 8AF9 ED 73 2B 86      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8AFD F9               ld sp,hl
 402+ 8AFE
 403+ 8AFE DD E5            push ix                                         ; Rutina de impresión.
 404+ 8B00 F5               push af                                         ; Puntero de impresión.
 405+ 8B01 FD E5            push iy                                         ; Puntero objeto.
 406+ 8B03 C5               push bc                                         ; Control.
 407+ 8B04
 408+ 8B04 ED 7B 2B 86      ld sp,(Stack)
 409+ 8B08
 410+ 8B08              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8B08
 412+ 8B08 21 21 86     	ld hl,Ctrl_1
 413+ 8B0B CB C6        	set 0,(hl)
 414+ 8B0D
 415+ 8B0D DD E5        	push ix
 416+ 8B0F E1               pop hl
 417+ 8B10 F5               push af
 418+ 8B11 DD E1            pop ix
 419+ 8B13
 420+ 8B13 CD A0 7F     	call Guarda_foto_registros
 421+ 8B16
 422+ 8B16 21 21 86     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8B19 CB 86        	res 0,(hl)
 424+ 8B1B
 425+ 8B1B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8B1B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8B1B
 428+ 8B1B CD 2D 88         call Inicia_Puntero_Disparo_Amadeus
 429+ 8B1E CD 26 88         call Inicia_Puntero_Disparo_Entidades
 430+ 8B21
 431+ 8B21 C9           4 ret
 432+ 8B22
 433+ 8B22              ; ----------------------------------------------------------------
 434+ 8B22              ;
 435+ 8B22              ;   4/3/23
 436+ 8B22              ;
 437+ 8B22              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8B22              ;   _ al generarse el disparo.
 439+ 8B22              ;
 440+ 8B22              ;       "$80" ..... No se produce colisión.
 441+ 8B22              ;       "$81" ..... Se produce colisión.
 442+ 8B22
 443+ 8B22              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8B22              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8B22
 446+ 8B22
 447+ 8B22 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8B24 E5               push hl                                        ; Puntero de impresión.
 449+ 8B25
 450+ 8B25 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8B27 CD 43 8B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8B2A
 453+ 8B2A 7B               ld a,e
 454+ 8B2B E6 01            and 1
 455+ 8B2D 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8B2F
 457+ 8B2F E1               pop hl
 458+ 8B30 E5               push hl
 459+ 8B31 CD CA 90         call NextScan
 460+ 8B34
 461+ 8B34 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8B35 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8B37 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8B39              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8B39 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8B3B CD 43 8B         call Bucle_2
 467+ 8B3E
 468+ 8B3E 43           2 ld b,e
 469+ 8B3F E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8B40 FD E1            pop iy
 471+ 8B42 C9               ret
 472+ 8B43
 473+ 8B43               ; ---------- ----------
 474+ 8B43
 475+ 8B43 06 02        Bucle_2 ld b,2
 476+ 8B45 FD 7E 00     2 ld a,(iy)
 477+ 8B48 A6               and (hl)
 478+ 8B49 28 02            jr z,1F
 479+ 8B4B 1E 81            ld e,$81
 480+ 8B4D 23           1 inc hl
 481+ 8B4E FD 23            inc iy
 482+ 8B50 10 F3            djnz 2B
 483+ 8B52 C9               ret
 484+ 8B53
 485+ 8B53              ; -------------------------------------------------------------------------------------------------------------
 486+ 8B53              ;
 487+ 8B53              ;   11/04/23
 488+ 8B53              ;
 489+ 8B53              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8B53              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8B53              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8B53              ;
 493+ 8B53              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8B53
 495+ 8B53              Compara_coordenadas_X
 496+ 8B53
 497+ 8B53              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8B53              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8B53
 500+ 8B53              ; Preparamos registros:
 501+ 8B53
 502+ 8B53 21 EA 85         ld hl,Filas+6
 503+ 8B56 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8B57 23               inc hl
 505+ 8B58 23               inc hl
 506+ 8B59 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8B5A 43               ld b,e
 508+ 8B5B 21 F8 85         ld hl,Filas+20
 509+ 8B5E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8B5F 21 40 86         ld hl,Coordenadas_X_Entidad
 511+ 8B62 CD 73 8D         call Guarda_coordenadas_X
 512+ 8B65
 513+ 8B65              ; Preparamos registros:
 514+ 8B65
 515+ 8B65 21 7C 84         ld hl,Amadeus_db+6
 516+ 8B68 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8B69 23               inc hl
 518+ 8B6A 23               inc hl
 519+ 8B6B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8B6C 7B               ld a,e
 521+ 8B6D 08               ex af,af'
 522+ 8B6E 21 8A 84         ld hl,Amadeus_db+20
 523+ 8B71 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8B72 21 3D 86         ld hl,Coordenadas_X_Amadeus
 525+ 8B75 CD 73 8D         call Guarda_coordenadas_X
 526+ 8B78
 527+ 8B78              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8B78              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8B78
 530+ 8B78 04               inc b
 531+ 8B79 05               dec b
 532+ 8B7A 28 04            jr z,1F
 533+ 8B7C 06 03            ld b,3
 534+ 8B7E 18 02            jr 2F
 535+ 8B80 06 02        1 ld b,2
 536+ 8B82 08           2 ex af,af'
 537+ 8B83 3C               inc a
 538+ 8B84 3D               dec a
 539+ 8B85 28 04            jr z,5F
 540+ 8B87 0E 03            ld c,3
 541+ 8B89 18 02            jr 6F
 542+ 8B8B 0E 02        5 ld c,2
 543+ 8B8D 79           6 ld a,c
 544+ 8B8E 08               ex af,af'
 545+ 8B8F 11 40 86         ld de,Coordenadas_X_Entidad
 546+ 8B92 1A           4 ld a,(de)
 547+ 8B93 21 3D 86         ld hl,Coordenadas_X_Amadeus
 548+ 8B96 BE           3 cp (hl)
 549+ 8B97 28 0E            jr z,7F
 550+ 8B99 23               inc hl
 551+ 8B9A 0D               dec c
 552+ 8B9B 20 F9            jr nz,3B
 553+ 8B9D 13               inc de
 554+ 8B9E 08               ex af,af'
 555+ 8B9F 4F               ld c,a
 556+ 8BA0 08               ex af,af'
 557+ 8BA1 10 EF            djnz 4B
 558+ 8BA3
 559+ 8BA3              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8BA3
 561+ 8BA3 CD B2 8D     8 call Limpia_Coordenadas_X
 562+ 8BA6 C9               ret
 563+ 8BA7
 564+ 8BA7              7
 565+ 8BA7 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8BA9 32 FD 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8BAC 21 38 86         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8BAF CB D6            set 2,(hl)
 569+ 8BB1 18 F0            jr 8B
 570+ 8BB3
 571+ 8BB3              ; -----------------------------------------------------------------------
 572+ 8BB3              ;
 573+ 8BB3              ;   17/04/23
 574+ 8BB3              ;
 575+ 8BB3
 576+ 8BB3              Detecta_colision_nave_entidad
 577+ 8BB3
 578+ 8BB3              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8BB3
 580+ 8BB3 2A E6 85         ld hl,(Posicion_actual)
 581+ 8BB6 CD 2F 90         call Calcula_puntero_de_impresion
 582+ 8BB9
 583+ 8BB9              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8BB9              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8BB9
 586+ 8BB9 DD E5            push ix
 587+ 8BBB E1               pop hl
 588+ 8BBC E5               push hl
 589+ 8BBD
 590+ 8BBD              ; ----- ----- -----
 591+ 8BBD 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8BBF 06 0A            ld b,10
 593+ 8BC1 CD F1 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8BC4 7B               ld a,e
 595+ 8BC5 FE 05            cp 5
 596+ 8BC7 38 0E            jr c,3F
 597+ 8BC9
 598+ 8BC9              ; LLegados a este punto:
 599+ 8BC9              ;
 600+ 8BC9              ;   HAY COLISIÓN !!!!!.
 601+ 8BC9              ;
 602+ 8BC9              ;   .db (Impacto) de Amadeus a "1".
 603+ 8BC9              ;   SET el bit3 de (Impacto2).
 604+ 8BC9              ;
 605+ 8BC9              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8BC9
 607+ 8BC9 21 8F 84         ld hl,Amadeus_db+25
 608+ 8BCC 36 01            ld (hl),1
 609+ 8BCE 21 38 86         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8BD1 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8BD3 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8BD5 18 18            jr 1F
 613+ 8BD7
 614+ 8BD7              ; -----
 615+ 8BD7
 616+ 8BD7 E1           3 pop hl
 617+ 8BD8 CD CA 90         call NextScan
 618+ 8BDB E5               push hl
 619+ 8BDC 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8BDD FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8BDF 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8BE1 30 0C            jr nc,1F
 623+ 8BE3              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8BE3 10 DC            djnz 2B
 625+ 8BE5
 626+ 8BE5              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8BE5
 628+ 8BE5              ; LLegados a este punto:
 629+ 8BE5              ;
 630+ 8BE5              ;   NO HAY COLISIÓN !!!!!.
 631+ 8BE5              ;
 632+ 8BE5              ;   .db (Impacto) de Amadeus a "0".
 633+ 8BE5              ;   RES el bit2 de (Impacto2).
 634+ 8BE5              ;
 635+ 8BE5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8BE5              ;   Lo colocamos a "0".
 637+ 8BE5
 638+ 8BE5 21 38 86         ld hl,Impacto2
 639+ 8BE8 CB 96            res 2,(hl)
 640+ 8BEA 2A 39 86         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8BED 36 00            ld (hl),0
 642+ 8BEF
 643+ 8BEF E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8BF0 C9               ret
 645+ 8BF1
 646+ 8BF1               ; ---------- ----------
 647+ 8BF1
 648+ 8BF1 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8BF2 3A E5 85         ld a,(Columns)
 650+ 8BF5 47               ld b,a
 651+ 8BF6 FD 7E 00     2 ld a,(iy)
 652+ 8BF9 BE               cp (hl)
 653+ 8BFA 28 01            jr z,1F
 654+ 8BFC
 655+ 8BFC 1C               inc e
 656+ 8BFD
 657+ 8BFD 23           1 inc hl
 658+ 8BFE FD 23            inc iy
 659+ 8C00 10 F4            djnz 2B
 660+ 8C02 C1               pop bc
 661+ 8C03 C9               ret
 662+ 8C04
 663+ 8C04              ; -------------------------------------------------------------------------------------------------------------
 664+ 8C04              ;
 665+ 8C04              ;   13/03/23
 666+ 8C04              ;
 667+ 8C04              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8C04              ;
 669+ 8C04              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8C04
 671+ 8C04 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8C07 7E               ld a,(hl)
 673+ 8C08 A7               and a
 674+ 8C09 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8C0A
 676+ 8C0A 44               ld b,h
 677+ 8C0B 4D               ld c,l
 678+ 8C0C 2A 31 86         ld hl,(Stack_snapshot_disparos)
 679+ 8C0F E5               push hl
 680+ 8C10 A7               and a
 681+ 8C11 ED 42            sbc hl,bc
 682+ 8C13 E5               push hl
 683+ 8C14 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8C15
 685+ 8C15 E1               pop hl
 686+ 8C16 54               ld d,h
 687+ 8C17 5D               ld e,l
 688+ 8C18 1B               dec de
 689+ 8C19 ED B8            lddr                                                ; Limpiamos.
 690+ 8C1B
 691+ 8C1B 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8C1E 22 31 86         ld (Stack_snapshot_disparos),hl
 693+ 8C21
 694+ 8C21 C9               ret
 695+ 8C22
 696+ 8C22              ; -------------------------------------------------------------------------------------------------------------
 697+ 8C22              ;
 698+ 8C22              ;   28/03/23
 699+ 8C22              ;
 700+ 8C22
 701+ 8C22 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8C25 2A 36 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8C28
 704+ 8C28 CD 64 88     2 call Extrae_address
 705+ 8C2B 7E               ld a,(hl)
 706+ 8C2C A7               and a
 707+ 8C2D 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8C2F
 709+ 8C2F              ; ----- ----- ----- ----- ----- -----
 710+ 8C2F
 711+ 8C2F C5               push bc
 712+ 8C30 CD EC 8C         call foto_disparo_a_borrar
 713+ 8C33
 714+ 8C33              ; Existe colisión con este disparo???
 715+ 8C33
 716+ 8C33 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8C34 7E               ld a,(hl)
 718+ 8C35 2B               dec hl
 719+ 8C36 E6 01            and 1
 720+ 8C38 28 1D            jr z,9F
 721+ 8C3A
 722+ 8C3A              ;   En este punto:
 723+ 8C3A              ;
 724+ 8C3A              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8C3A              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8C3A              ;   _con la entidad).
 727+ 8C3A              ;
 728+ 8C3A              ;   Disparo_2A defw 0                                ; Control.
 729+ 8C3A              ;    defw 0                                          ; Puntero objeto.
 730+ 8C3A              ;    defw 0                                          ; Puntero de impresión.
 731+ 8C3A              ;    defw 0                                          ; Rutina de impresión.
 732+ 8C3A
 733+ 8C3A E5               push hl
 734+ 8C3B
 735+ 8C3B 06 04            ld b,4
 736+ 8C3D 23           19 inc hl
 737+ 8C3E 10 FD            djnz 19B
 738+ 8C40
 739+ 8C40 CD 64 88         call Extrae_address
 740+ 8C43 CD E1 96         call Genera_coordenadas_disparo
 741+ 8C46
 742+ 8C46              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8C46
 744+ 8C46 21 3B 86         ld hl,Coordenadas_disparo_certero
 745+ 8C49 72               ld (hl),d
 746+ 8C4A 23               inc hl
 747+ 8C4B 73               ld (hl),e
 748+ 8C4C
 749+ 8C4C              ; Elimino el disparo de la base de datos.
 750+ 8C4C
 751+ 8C4C E1               pop hl
 752+ 8C4D CD 68 8D         call Elimina_disparo_de_base_de_datos
 753+ 8C50 21 38 86         ld hl,Impacto2
 754+ 8C53 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8C55
 756+ 8C55 18 06            jr 11F
 757+ 8C57
 758+ 8C57 CD 15 8D     9 call Mueve_disparo
 759+ 8C5A CD EC 8C         call foto_disparo_a_borrar
 760+ 8C5D
 761+ 8C5D C1           11 pop bc
 762+ 8C5E 18 04            jr 7F
 763+ 8C60
 764+ 8C60              ; ----- ----- ----- ----- ----- -----
 765+ 8C60
 766+ 8C60 ED 42        1 sbc hl,bc
 767+ 8C62 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8C64 2A 36 86     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C67 23               inc hl
 770+ 8C68 23               inc hl
 771+ 8C69 22 36 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C6C 18 BA            jr 2B
 773+ 8C6E CD 2D 88     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8C71
 775+ 8C71 01 66 84         ld bc,Disparo_11
 776+ 8C74 2A 34 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C77
 778+ 8C77 CD 64 88     5 call Extrae_address
 779+ 8C7A 7E               ld a,(hl)
 780+ 8C7B A7               and a
 781+ 8C7C 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8C7E
 783+ 8C7E              ; ----- ----- ----- ----- ----- -----
 784+ 8C7E
 785+ 8C7E C5               push bc
 786+ 8C7F CD EC 8C         call foto_disparo_a_borrar
 787+ 8C82
 788+ 8C82              ; Existe colisión con este disparo???
 789+ 8C82
 790+ 8C82 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8C83 7E               ld a,(hl)
 792+ 8C84 2B               dec hl
 793+ 8C85 E6 01            and 1
 794+ 8C87 28 48            jr z,10F
 795+ 8C89
 796+ 8C89              ; La colisión se produce con Amadeus???
 797+ 8C89              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8C89
 799+ 8C89 E5               push hl
 800+ 8C8A
 801+ 8C8A 06 04            ld b,4
 802+ 8C8C 23           16 inc hl
 803+ 8C8D 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8C8F CD 64 88         call Extrae_address
 805+ 8C92 CD E1 96         call Genera_coordenadas_disparo
 806+ 8C95
 807+ 8C95 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8C96 FE 16            cp $16
 809+ 8C98 38 22            jr c,15F
 810+ 8C9A
 811+ 8C9A              ; (Colisiones en filas 16 y 17).
 812+ 8C9A
 813+ 8C9A D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8C9B
 815+ 8C9B              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8C9B
 817+ 8C9B 21 7C 84         ld hl,Amadeus_db+6
 818+ 8C9E 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8C9F 23               inc hl
 820+ 8CA0 23               inc hl
 821+ 8CA1 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8CA2 21 8A 84         ld hl,Amadeus_db+20
 823+ 8CA5 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8CA6 21 3D 86         ld hl,Coordenadas_X_Amadeus
 825+ 8CA9 CD 73 8D         call Guarda_coordenadas_X
 826+ 8CAC
 827+ 8CAC D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8CAD
 829+ 8CAD              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8CAD
 831+ 8CAD 06 03            ld b,3
 832+ 8CAF 21 3D 86         ld hl,Coordenadas_X_Amadeus
 833+ 8CB2 7E           18 ld a,(hl)
 834+ 8CB3 BA               cp d
 835+ 8CB4 20 03            jr nz,17F
 836+ 8CB6
 837+ 8CB6              ; Colisión Amadeus !!!!!!!!!!
 838+ 8CB6
 839+ 8CB6 E1               pop hl
 840+ 8CB7 18 09            jr 14F
 841+ 8CB9
 842+ 8CB9 23           17 inc hl
 843+ 8CBA 10 F6            djnz 18B
 844+ 8CBC
 845+ 8CBC              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8CBC              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8CBC
 848+ 8CBC E1           15 pop hl
 849+ 8CBD 23               inc hl
 850+ 8CBE 35               dec (hl)
 851+ 8CBF 2B               dec hl
 852+ 8CC0 18 0F            jr 10F
 853+ 8CC2
 854+ 8CC2              ; -----------------------debug
 855+ 8CC2
 856+ 8CC2              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8CC2              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8CC2
 859+ 8CC2 E5           14 push hl
 860+ 8CC3 CD 68 8D         call Elimina_disparo_de_base_de_datos
 861+ 8CC6 21 38 86         ld hl,Impacto2
 862+ 8CC9 CB CE            set 1,(hl)
 863+ 8CCB CD B2 8D         call Limpia_Coordenadas_X
 864+ 8CCE
 865+ 8CCE E1               pop hl
 866+ 8CCF 18 06            jr 12F
 867+ 8CD1
 868+ 8CD1 CD 15 8D     10 call Mueve_disparo
 869+ 8CD4 CD EC 8C         call foto_disparo_a_borrar
 870+ 8CD7 C1           12 pop bc
 871+ 8CD8
 872+ 8CD8 18 04            jr 8F
 873+ 8CDA
 874+ 8CDA              ; ----- ----- ----- ----- ----- -----
 875+ 8CDA
 876+ 8CDA ED 42        4 sbc hl,bc
 877+ 8CDC 28 0A            jr z,6F
 878+ 8CDE
 879+ 8CDE 2A 34 86     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8CE1 23               inc hl
 881+ 8CE2 23               inc hl
 882+ 8CE3 22 34 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8CE6 18 8F            jr 5B
 884+ 8CE8
 885+ 8CE8 CD 26 88     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8CEB C9               ret
 887+ 8CEC
 888+ 8CEC              ; ------------------------------------------------------------------
 889+ 8CEC
 890+ 8CEC              foto_disparo_a_borrar
 891+ 8CEC
 892+ 8CEC 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8CED A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8CEE C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8CEF
 896+ 8CEF E5               push hl
 897+ 8CF0 23               inc hl
 898+ 8CF1 23               inc hl
 899+ 8CF2 ED 73 2B 86      ld (Stack),sp
 900+ 8CF6 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8CF7 FD E1            pop iy
 902+ 8CF9 DD E1            pop ix
 903+ 8CFB E1               pop hl
 904+ 8CFC ED 7B 2B 86      ld sp,(Stack)
 905+ 8D00 3A 21 86         ld a,(Ctrl_1)
 906+ 8D03 CB C7            set 0,a
 907+ 8D05 32 21 86         ld (Ctrl_1),a
 908+ 8D08 CD A0 7F         call Guarda_foto_registros
 909+ 8D0B 3A 21 86         ld a,(Ctrl_1)
 910+ 8D0E CB 87            res 0,a
 911+ 8D10 32 21 86         ld (Ctrl_1),a
 912+ 8D13 E1               pop hl
 913+ 8D14 C9               ret
 914+ 8D15
 915+ 8D15 E5           Mueve_disparo push hl
 916+ 8D16 7E               ld a,(hl)
 917+ 8D17 06 04            ld b,4
 918+ 8D19 23           1 inc hl
 919+ 8D1A 10 FD            djnz 1B
 920+ 8D1C
 921+ 8D1C              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8D1C
 923+ 8D1C CD 64 88         call Extrae_address
 924+ 8D1F
 925+ 8D1F E6 01            and 1
 926+ 8D21 28 2B            jr z,2F
 927+ 8D23
 928+ 8D23              ; Disparo hacia arriba, (Amadeus).
 929+ 8D23
 930+ 8D23              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8D23              ; _ de la dificultad.
 932+ 8D23
 933+ 8D23 CD D9 90         call PreviousScan
 934+ 8D26 CD D9 90         call PreviousScan
 935+ 8D29 CD D9 90         call PreviousScan
 936+ 8D2C
 937+ 8D2C              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8D2C
 939+ 8D2C 7C               ld a,h
 940+ 8D2D FE 40            cp $40
 941+ 8D2F 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8D31
 943+ 8D31              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8D31
 945+ 8D31 EB               ex de,hl
 946+ 8D32 06 04            ld b,4
 947+ 8D34 2B           6 dec hl
 948+ 8D35 10 FD            djnz 6B
 949+ 8D37
 950+ 8D37 CD 68 8D         call Elimina_disparo_de_base_de_datos
 951+ 8D3A E1               pop hl
 952+ 8D3B 18 10            jr 7F
 953+ 8D3D
 954+ 8D3D              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8D3D
 956+ 8D3D D5           3 push de
 957+ 8D3E C5               push bc
 958+ 8D3F
 959+ 8D3F CD 22 8B         call Comprueba_Colision
 960+ 8D42
 961+ 8D42              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 8D42
 963+ 8D42 78               ld a,b
 964+ 8D43
 965+ 8D43 C1               pop bc
 966+ 8D44 D1               pop de
 967+ 8D45
 968+ 8D45 EB               ex de,hl
 969+ 8D46
 970+ 8D46 73               ld (hl),e
 971+ 8D47 23               inc hl
 972+ 8D48 72               ld (hl),d
 973+ 8D49
 974+ 8D49 E1           4 pop hl
 975+ 8D4A 23               inc hl
 976+ 8D4B 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 8D4C 2B               dec hl
 978+ 8D4D C9           7 ret
 979+ 8D4E
 980+ 8D4E              ; Disparo hacia abajo, (Entidad).
 981+ 8D4E
 982+ 8D4E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 8D4E              ; _ de la dificultad.
 984+ 8D4E
 985+ 8D4E CD CA 90     2 call NextScan
 986+ 8D51 CD CA 90         call NextScan
 987+ 8D54 CD CA 90         call NextScan
 988+ 8D57
 989+ 8D57              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 8D57
 991+ 8D57 7C               ld a,h
 992+ 8D58 FE 58            cp $58
 993+ 8D5A 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 8D5C
 995+ 8D5C EB               ex de,hl
 996+ 8D5D 06 04            ld b,4
 997+ 8D5F 2B           5 dec hl
 998+ 8D60 10 FD            djnz 5B
 999+ 8D62
1000+ 8D62 CD 68 8D         call Elimina_disparo_de_base_de_datos
1001+ 8D65 E1               pop hl
1002+ 8D66 18 E5            jr 7B
1003+ 8D68
1004+ 8D68              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 8D68
1006+ 8D68 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 8D6B AF               xor a
1008+ 8D6C 77               ld (hl),a
1009+ 8D6D 54               ld d,h
1010+ 8D6E 5D               ld e,l
1011+ 8D6F 13               inc de
1012+ 8D70 ED B0            ldir
1013+ 8D72 C9               ret
1014+ 8D73
1015+ 8D73              ; -----------------------------------------------------------------
1016+ 8D73              ;
1017+ 8D73              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 8D73              ;
1019+ 8D73              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 8D73              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 8D73              ;
1022+ 8D73              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 8D73              ;
1024+ 8D73              ;   INPUTS:
1025+ 8D73              ;
1026+ 8D73              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 8D73              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 8D73              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 8D73
1030+ 8D73              ;   MODIFICA: A, HL, DE y C
1031+ 8D73
1032+ 8D73 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 8D74 79               ld a,c
1034+ 8D75 E6 01            and 1
1035+ 8D77 20 03            jr nz,1F
1036+ 8D79 14               inc d
1037+ 8D7A 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 8D7C
1039+ 8D7C              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 8D7C              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 8D7C
1042+ 8D7C 15           1 dec d
1043+ 8D7D 23           2 inc hl
1044+ 8D7E 72               ld (hl),d
1045+ 8D7F
1046+ 8D7F 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 8D80 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 8D81 C8               ret z
1049+ 8D82
1050+ 8D82 AF               xor a
1051+ 8D83 5F               ld e,a
1052+ 8D84 18 ED            jr Guarda_coordenadas_X
1053+ 8D86
1054+ 8D86              ; -----------------------------------------------------------------
1055+ 8D86              ;
1056+ 8D86              ;   12/04/23
1057+ 8D86              ;
1058+ 8D86
1059+ 8D86 3A 38 86     Selector_de_impactos ld a,(Impacto2)
1060+ 8D89 A7               and a
1061+ 8D8A C8               ret z
1062+ 8D8B
1063+ 8D8B FE 04            cp 4
1064+ 8D8D 20 09            jr nz,1F
1065+ 8D8F
1066+ 8D8F
1067+ 8D8F              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 8D8F
1069+ 8D8F CD B3 8B         call Detecta_colision_nave_entidad
1070+ 8D92
1071+ 8D92 21 38 86         ld hl,Impacto2
1072+ 8D95 CB 5E            bit 3,(hl)
1073+ 8D97 C0               ret nz                                               ; Existe colisión, RET.
1074+ 8D98
1075+ 8D98              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 8D98              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 8D98
1078+ 8D98 21 38 86     1 ld hl,Impacto2
1079+ 8D9B CB 4E            bit 1,(hl)
1080+ 8D9D 28 07            jr z,2F
1081+ 8D9F
1082+ 8D9F 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 8DA2 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 8DA4 18 0B            jr 3F
1085+ 8DA6
1086+ 8DA6 21 38 86     2 ld hl,Impacto2
1087+ 8DA9 CB 46            bit 0,(hl)
1088+ 8DAB C8               ret z
1089+ 8DAC
1090+ 8DAC              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 8DAC
1092+ 8DAC 21 21 86         ld hl,Ctrl_1
1093+ 8DAF CB D6            set 2,(hl)
1094+ 8DB1
1095+ 8DB1 C9           3 ret
1096+ 8DB2
1097+ 8DB2              ; -----------------------------------------------------------------
1098+ 8DB2              ;
1099+ 8DB2              ;   16/04/23
1100+ 8DB2              ;
1101+ 8DB2
1102+ 8DB2 AF           Limpia_Coordenadas_X xor a
1103+ 8DB3 06 06            ld b,6
1104+ 8DB5 21 3D 86         ld hl,Coordenadas_X_Amadeus
1105+ 8DB8 77           1 ld (hl),a
1106+ 8DB9 23               inc hl
1107+ 8DBA 10 FC            djnz 1B
1108+ 8DBC C9               ret
1109+ 8DBD
1110+ 8DBD              ; -----------------------------------------------------------------
1111+ 8DBD              ;
1112+ 8DBD              ;   25/04/23
1113+ 8DBD              ;
1114+ 8DBD
1115+ 8DBD              Determina_resultado_comparativa
1116+ 8DBD
1117+ 8DBD              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 8DBD              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 8DBD              ;
1120+ 8DBD              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 8DBD              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 8DBD              ;
1123+ 8DBD              ;   SBC HL,DE
1124+ 8DBD
1125+ 8DBD 7C               ld a,h
1126+ 8DBE 06 00            ld b,0
1127+ 8DC0
1128+ 8DC0 CD D4 8D         call Compara_cositas
1129+ 8DC3
1130+ 8DC3 04               inc b
1131+ 8DC4 05               dec b
1132+ 8DC5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 8DC6
1134+ 8DC6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 8DC7 06 00            ld b,0
1136+ 8DC9 FE 02            cp $02
1137+ 8DCB 28 05            jr z,1F
1138+ 8DCD
1139+ 8DCD CD D4 8D         call Compara_cositas
1140+ 8DD0 18 01            jr 2F
1141+ 8DD2
1142+ 8DD2 04           1 inc b
1143+ 8DD3 C9           2 ret
1144+ 8DD4
1145+ 8DD4 A7           Compara_cositas and a
1146+ 8DD5 28 0B            jr z,1F
1147+ 8DD7
1148+ 8DD7 FE FE            cp $fe
1149+ 8DD9 28 07            jr z,1F
1150+ 8DDB FE FF            cp $ff
1151+ 8DDD 28 03            jr z,1F
1152+ 8DDF FE 01            cp $01
1153+ 8DE1 C0               ret nz
1154+ 8DE2
1155+ 8DE2 04           1 inc b
1156+ 8DE3 C9               ret
1157+ 8DE4
# file closed: Disparo.asm
1065  8DE4              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8DE4              ; ******************************************************************************************************************************************************************************************
   2+ 8DE4              ;
   3+ 8DE4              ; 01/23
   4+ 8DE4              ;
   5+ 8DE4              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8DE4
   7+ 8DE4 CD BE 90     Draw call Prepara_draw
   8+ 8DE7 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8DE8 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8DE9 28 05        	jr z,2F
  11+ 8DEB
  12+ 8DEB 3A F8 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8DEE 18 0C        	jr 1F
  14+ 8DF0 2A F6 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8DF3 22 E6 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8DF6 CD 85 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8DF9              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8DF9 CD 04 98     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8DFC 3A 12 86     1 ld a,(Ctrl_0)
  20+ 8DFF CB 6F        	bit 5,a
  21+ 8E01 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8E03
  23+ 8E03 CD 1B 8E     	call Comprueba_limite_horizontal
  24+ 8E06 CD AB 8E     	call Comprueba_limite_vertical
  25+ 8E09
  26+ 8E09              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8E09
  28+ 8E09 CD F8 8F     3 call calcula_CColumnass
  29+ 8E0C CD 2F 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8E0F CD 84 90     	call Define_rutina_de_impresion
  31+ 8E12
  32+ 8E12 3A 12 86     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8E15 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8E17 32 12 86     	ld (Ctrl_0),a
  35+ 8E1A
  36+ 8E1A C9           	ret
  37+ 8E1B
  38+ 8E1B              ; *******************************************************************************************************************************************************************************************
  39+ 8E1B              ;	21/01/23
  40+ 8E1B              ;
  41+ 8E1B              ; 	Comprueba_limite_horizontal.
  42+ 8E1B              ;
  43+ 8E1B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8E1B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8E1B              ;
  46+ 8E1B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8E1B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8E1B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8E1B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8E1B
  51+ 8E1B
  52+ 8E1B
  53+ 8E1B 3A 12 86     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8E1E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8E20 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8E22 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8E24 32 12 86     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8E27 18 09            jr 6F
  59+ 8E29 CB 5F        1 bit 3,a
  60+ 8E2B 28 0A            jr z,2F
  61+ 8E2D E6 F7            and $f7
  62+ 8E2F 32 12 86         ld (Ctrl_0),a
  63+ 8E32 CD 85 8F     6 call Inicializacion
  64+ 8E35 18 5B            jr 5F
  65+ 8E37 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8E38
  67+ 8E38              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8E38              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8E38
  70+ 8E38 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8E39 2A 1D 86     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8E3C CD 8A 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8E3F 67           	ld h,a
  74+ 8E40 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8E41 CD 8A 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8E44 67           	ld h,a
  77+ 8E45 A7           	and a
  78+ 8E46 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8E48 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8E49 3A F8 85     	ld a,(Cuad_objeto)
  81+ 8E4C FE 02        	cp 2
  82+ 8E4E 38 1E        	jr c,3F
  83+ 8E50 28 1C        	jr z,3F
  84+ 8E52 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8E53 28 23            jr z,7F
  86+ 8E55 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8E57 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8E59 E1           	pop hl
  89+ 8E5A
  90+ 8E5A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8E5A              ; _para indicar con E="2" en caso necesario.
  92+ 8E5A
  93+ 8E5A E5               push hl
  94+ 8E5B C5               push bc
  95+ 8E5C CD 8A 93     	call calcula_tercio
  96+ 8E5F FE 01        	cp 1
  97+ 8E61 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E63 CD 93 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E66 28 26            jr z,9F
 100+ 8E68 38 24            jr c,9F
 101+ 8E6A 1E 00        11 ld e,0
 102+ 8E6C 18 22            jr 8F
 103+ 8E6E 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E6F 28 07        	jr z, 7F
 105+ 8E71 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E73 1E 00         	ld e,0
 107+ 8E75 E1           	pop hl
 108+ 8E76 18 04        	jr 4F
 109+ 8E78 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E7A 18 15            jr 10F
 111+ 8E7C
 112+ 8E7C              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E7C              ; _para indicar con E="2" en caso necesario.
 114+ 8E7C
 115+ 8E7C E5           4 push hl
 116+ 8E7D C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E7E CD 8A 93     	call calcula_tercio
 118+ 8E81 FE 01        	cp 1
 119+ 8E83 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E85 CD 93 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E88 28 04            jr z,9F
 122+ 8E8A 30 02            jr nc,9F
 123+ 8E8C 18 02        	jr 8F
 124+ 8E8E 1E 02        9 ld e,2
 125+ 8E90 C1           8 pop bc
 126+ 8E91 E1           10 pop hl
 127+ 8E92 C9           5 ret
 128+ 8E93
 129+ 8E93              ; --------------------
 130+ 8E93              ;
 131+ 8E93              ; 25/08/22
 132+ 8E93
 133+ 8E93 CD 8A 93     Comprueba_centro call calcula_tercio
 134+ 8E96 67               ld h,a
 135+ 8E97 08           	ex af,af
 136+ 8E98 FE 02        	cp 2
 137+ 8E9A 38 07        	jr c,1F
 138+ 8E9C 28 05        	jr z,1F
 139+ 8E9E 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8EA1 18 03        	jr 2F
 141+ 8EA3 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8EA6 08           2 ex af,af
 143+ 8EA7 A7               and a
 144+ 8EA8 ED 42            sbc hl,bc
 145+ 8EAA C9               ret
 146+ 8EAB
 147+ 8EAB              ; *********************************************************************************************************************************************************************************************
 148+ 8EAB              ;
 149+ 8EAB              ;   16/8/22
 150+ 8EAB              ;
 151+ 8EAB              ;	Comprueba_limite_vertical
 152+ 8EAB              ;
 153+ 8EAB              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8EAB              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8EAB              ;
 156+ 8EAB
 157+ 8EAB 2A E6 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8EAE 7D           	ld a,l
 159+ 8EAF E6 1F        	and $1F
 160+ 8EB1 57           	ld d,a
 161+ 8EB2 3A 1F 86     	ld a,(Limite_vertical)
 162+ 8EB5 BA           	cp d 											; Límite - Posición.
 163+ 8EB6 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8EB7 3A F8 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8EBA CB 47        	bit 0,a
 166+ 8EBC 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8EBE
 168+ 8EBE              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8EBE
 170+ 8EBE 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8EBF 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8EC1
 173+ 8EC1              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8EC1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8EC1
 176+ 8EC1 3A EA 85         ld a,(Coordenada_X)
 177+ 8EC4 16 0F            ld d,Centro_izquierda
 178+ 8EC6 A7               and a
 179+ 8EC7 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8EC8 28 1E            jr z,3F
 181+ 8ECA 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8ECC              ;                                                    ; _salimos sin modificar nada.
 183+ 8ECC 18 0E            jr 2F
 184+ 8ECE 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8ECF 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8ED1
 187+ 8ED1              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8ED1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8ED1
 190+ 8ED1 3A EA 85         ld a,(Coordenada_X)
 191+ 8ED4 16 10            ld d,Centro_derecha
 192+ 8ED6 A7               and a
 193+ 8ED7 92               sub d
 194+ 8ED8 28 0E            jr z,3F
 195+ 8EDA 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8EDC              ;                                                    ; _salimos sin modificar nada.
 197+ 8EDC CB 43        2 bit 0,e
 198+ 8EDE 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8EE0 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8EE1 CD 75 8F         call Modificaccionne
 201+ 8EE4 C1           	pop bc
 202+ 8EE5 CD 85 8F         call Inicializacion
 203+ 8EE8 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8EE9
 205+ 8EE9              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8EE9
 207+ 8EE9 C5           4 push bc
 208+ 8EEA 01 E5 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8EED 0A           	ld a,(bc)
 210+ 8EEE 3D           	dec a
 211+ 8EEF 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8EF0 7D           	ld a,l
 213+ 8EF1 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8EF2 CB 47        	bit 0,a
 215+ 8EF4 28 03        	jr z,5F
 216+ 8EF6 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8EF7 18 2E        	jr 7F
 218+ 8EF9
 219+ 8EF9              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8EF9
 221+ 8EF9 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8EFA F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8EFB 3A 12 86     	ld a,(Ctrl_0)
 224+ 8EFE CB 4F        	bit 1,a
 225+ 8F00 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8F02 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8F03
 228+ 8F03              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8F03
 230+ 8F03 1C               inc e
 231+ 8F04 1D               dec e
 232+ 8F05 20 07            jr nz,12F
 233+ 8F07 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8F08 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8F09 22 E6 85     	ld (Posicion_actual),hl
 236+ 8F0C 18 44        13 jr 9F
 237+ 8F0E CB 43        12 bit 0,e
 238+ 8F10 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8F12              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8F12 C1           	pop bc
 241+ 8F13 18 D3        	jr 3B
 242+ 8F15 80           14 add b
 243+ 8F16 6F               ld l,a
 244+ 8F17 22 E6 85     	ld (Posicion_actual),hl
 245+ 8F1A CD 75 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8F1D 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8F1F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8F21 32 12 86         ld (Ctrl_0),a
 249+ 8F24 F1           	pop af
 250+ 8F25 18 2B        	jr 9F
 251+ 8F27
 252+ 8F27              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8F27
 254+ 8F27 F5           7 push af
 255+ 8F28 3A 12 86     	ld a,(Ctrl_0)
 256+ 8F2B CB 47        	bit 0,a
 257+ 8F2D 20 1D        	jr nz,8F
 258+ 8F2F F1           	pop af
 259+ 8F30
 260+ 8F30              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8F30
 262+ 8F30 1C           	inc e
 263+ 8F31 1D               dec e
 264+ 8F32 20 07            jr nz,10F
 265+ 8F34 90           	sub b
 266+ 8F35 6F               ld l,a
 267+ 8F36 22 E6 85     	ld (Posicion_actual),hl
 268+ 8F39 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8F3B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8F3B CB 43        10 bit 0,e
 271+ 8F3D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8F3F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8F3F C1           	pop bc
 274+ 8F40 18 A6        	jr 3B
 275+ 8F42 90           16 sub b
 276+ 8F43 6F               ld l,a
 277+ 8F44 22 E6 85     	ld (Posicion_actual),hl
 278+ 8F47 CD 75 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8F4A 18 06            jr 9F
 280+ 8F4C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8F4E 32 12 86         ld (Ctrl_0),a
 282+ 8F51 F1           	pop af
 283+ 8F52 C1           9 pop bc
 284+ 8F53 1E 00        	ld e,0
 285+ 8F55 CD 85 8F         call Inicializacion
 286+ 8F58 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8F59 08           	ex af,af
 288+ 8F5A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8F5B 18 8B            jr 3B
 290+ 8F5D
 291+ 8F5D              ; --------------------
 292+ 8F5D
 293+ 8F5D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F5F CD D9 90     1 call PreviousScan
 295+ 8F62 10 FB            djnz 1B
 296+ 8F64 22 E6 85     	ld (Posicion_actual),hl
 297+ 8F67 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F68 C9           	ret
 299+ 8F69
 300+ 8F69              ; --------------------
 301+ 8F69
 302+ 8F69 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F6B CD CA 90     1 call NextScan
 304+ 8F6E 10 FB            djnz 1B
 305+ 8F70 22 E6 85     	ld (Posicion_actual),hl
 306+ 8F73 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F74 C9           	ret
 308+ 8F75
 309+ 8F75              ; --------------------
 310+ 8F75              ;
 311+ 8F75              ;	22/01/23
 312+ 8F75              ;
 313+ 8F75              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F75              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F75              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F75
 317+ 8F75
 318+ 8F75              Modificaccionne
 319+ 8F75
 320+ 8F75 3A F8 85     	ld a,(Cuad_objeto)
 321+ 8F78 FE 02        	cp 2
 322+ 8F7A CC 5D 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F7D DC 5D 8F         call c,Modifica_Pos_actual
 324+ 8F80 C8           	ret z
 325+ 8F81 CD 69 8F         call Modifica_Pos_actual2
 326+ 8F84 C9               ret
 327+ 8F85
 328+ 8F85              ; *************************************************************************************************************************************************************************************************
 329+ 8F85              ;
 330+ 8F85              ;	13/8/22
 331+ 8F85              ;
 332+ 8F85              ;	Inicializacion
 333+ 8F85              ;
 334+ 8F85              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F85              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F85              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F85              ;
 338+ 8F85              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F85              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F85              ;	_ desaparece/aparece.
 341+ 8F85
 342+ 8F85              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F85              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F85              ;
 345+ 8F85              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F85              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F85              ; 		   [E] ="0"
 348+ 8F85
 349+ 8F85              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F85
 351+ 8F85 CD 8A 93     Inicializacion call calcula_tercio
 352+ 8F88 28 36        	jr z,primit
 353+ 8F8A E6 02        	and 2
 354+ 8F8C 20 07        	jr nz,segmit
 355+ 8F8E 7D           	ld a,l
 356+ 8F8F FE 7F        	cp $7f
 357+ 8F91 38 2D        	jr c,primit
 358+ 8F93 28 2B        	jr z,primit
 359+ 8F95 CD F2 8F     segmit call column
 360+ 8F98 38 13        	jr c,tercuad
 361+ 8F9A 3E 04        cuarcuad ld a,4
 362+ 8F9C 32 F8 85     	ld (Cuad_objeto),a
 363+ 8F9F 21 20 48     	ld hl,$4820
 364+ 8FA2 22 1D 86     	ld (Limite_horizontal),hl
 365+ 8FA5 21 1F 86     	ld hl,Limite_vertical
 366+ 8FA8 36 0D        	ld (hl),$0d
 367+ 8FAA 08           	ex af,af
 368+ 8FAB 18 3C        	jr 1F
 369+ 8FAD              tercuad
 370+ 8FAD 3E 03        	ld a,3
 371+ 8FAF 32 F8 85     	ld (Cuad_objeto),a
 372+ 8FB2 21 20 48     	ld hl,$4820
 373+ 8FB5 22 1D 86     	ld (Limite_horizontal),hl
 374+ 8FB8 21 1F 86     	ld hl,Limite_vertical
 375+ 8FBB 36 12        	ld (hl),$12
 376+ 8FBD 08           	ex af,af
 377+ 8FBE 18 29        	jr 1F
 378+ 8FC0 CD F2 8F     primit call column
 379+ 8FC3 38 13        	jr c, primcuad
 380+ 8FC5              segcuad
 381+ 8FC5 3E 02        	ld a,2
 382+ 8FC7 32 F8 85     	ld (Cuad_objeto),a
 383+ 8FCA 21 C0 4F     	ld hl,$4fc0
 384+ 8FCD 22 1D 86     	ld (Limite_horizontal),hl
 385+ 8FD0 21 1F 86     	ld hl,Limite_vertical
 386+ 8FD3 36 0D        	ld (hl),$0d
 387+ 8FD5 08           	ex af,af
 388+ 8FD6 18 11        	jr 1F
 389+ 8FD8              primcuad
 390+ 8FD8 3E 01        	ld a,1
 391+ 8FDA 32 F8 85     	ld (Cuad_objeto),a
 392+ 8FDD 21 C0 4F     	ld hl,$4fc0
 393+ 8FE0 22 1D 86     	ld (Limite_horizontal),hl
 394+ 8FE3 21 1F 86     	ld hl,Limite_vertical
 395+ 8FE6 36 12        	ld (hl),$12
 396+ 8FE8 08           	ex af,af
 397+ 8FE9 CD B6 96     1 call Genera_coordenadas
 398+ 8FEC 21 12 86     	ld hl,Ctrl_0
 399+ 8FEF CB EE        	set 5,(hl)
 400+ 8FF1 C9           	ret
 401+ 8FF2
 402+ 8FF2              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8FF2
 404+ 8FF2              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8FF2              ;
 406+ 8FF2              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8FF2
 408+ 8FF2 7D           column ld a,l
 409+ 8FF3 E6 1F        	and $1f
 410+ 8FF5 FE 10         	cp $10
 411+ 8FF7 C9            	ret
 412+ 8FF8
 413+ 8FF8              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8FF8              ;
 415+ 8FF8              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8FF8              ;
 417+ 8FF8              ; 14/12/22
 418+ 8FF8              ;
 419+ 8FF8              ;	Modifica: A y BC.
 420+ 8FF8
 421+ 8FF8 3A F8 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8FFB E6 01        	and 1
 423+ 8FFD 28 17        	jr z,1F
 424+ 8FFF
 425+ 8FFF              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8FFF
 427+ 8FFF 3A EA 85     	ld a,(Coordenada_X)
 428+ 9002 47           	ld b,a
 429+ 9003 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9004 79           	ld a,c
 431+ 9005 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9006 38 08        	jr c,2F
 433+ 9008 47           	ld b,a
 434+ 9009 79           	ld a,c
 435+ 900A 90           	sub b
 436+ 900B 32 1C 86     	ld (Columnas),a
 437+ 900E 18 1B        	jr 4F
 438+ 9010 79           2 ld a,c
 439+ 9011 32 1C 86     	ld (Columnas),a
 440+ 9014 18 15        	jr 4F
 441+ 9016
 442+ 9016              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9016
 444+ 9016 3A EA 85     1 ld a,(Coordenada_X)
 445+ 9019 81           	add c
 446+ 901A 3D           	dec a
 447+ 901B D6 1F        	sub $1f
 448+ 901D 38 08        	jr c,3F
 449+ 901F 47           	ld b,a
 450+ 9020 79           	ld a,c
 451+ 9021 90           	sub b
 452+ 9022 32 1C 86     	ld (Columnas),a
 453+ 9025 18 04        	jr 4F
 454+ 9027 79           3 ld a,c
 455+ 9028 32 1C 86     	ld (Columnas),a
 456+ 902B D9           4 exx
 457+ 902C 4F           	ld c,a
 458+ 902D D9           	exx
 459+ 902E C9            ret
 460+ 902F
 461+ 902F              ; --------------------------------------------------------------------------------------------------------------------
 462+ 902F              ;
 463+ 902F              ; 7/1/23
 464+ 902F              ;
 465+ 902F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 902F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 902F              ;
 468+ 902F              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 902F              ;	DESTRUYE: HL,B Y A.
 470+ 902F
 471+ 902F 3A F8 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9032 FE 02        	cp 2
 473+ 9034 38 18        	jr c,1F
 474+ 9036 28 16        	jr z,1F
 475+ 9038 E6 01        	and 1
 476+ 903A 28 0D        	jr z,3F
 477+ 903C
 478+ 903C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 903C
 480+ 903C CD 78 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 903F
 482+ 903F 7D           9 ld a,l
 483+ 9040 E6 1F        	and $1f
 484+ 9042 28 2A        	jr z,7F
 485+ 9044 2B           	dec hl
 486+ 9045 10 F8        	djnz 9B
 487+ 9047 18 25        	jr 7F
 488+ 9049
 489+ 9049              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9049
 491+ 9049 2A E6 85     3 ld hl,(Posicion_actual)
 492+ 904C 18 20        	jr 7F
 493+ 904E
 494+ 904E 28 14        1 jr z,2F
 495+ 9050
 496+ 9050              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9050
 498+ 9050 CD 78 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9053 7D           4 ld a,l
 500+ 9054 E6 1F        	and $1f
 501+ 9056 28 03        	jr z,6F
 502+ 9058 2B           	dec hl
 503+ 9059 10 F8        	djnz 4B
 504+ 905B 06 0F        6 ld b,15
 505+ 905D CD D9 90     5 call PreviousScan
 506+ 9060 10 FB        	djnz 5B
 507+ 9062 18 0A        	jr 7F
 508+ 9064
 509+ 9064              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9064
 511+ 9064 CD 78 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9067 06 0F        	ld b,15
 513+ 9069 CD D9 90     8 call PreviousScan
 514+ 906C 10 FB        	djnz 8B
 515+ 906E
 516+ 906E E5           7 push hl
 517+ 906F DD E1        	pop ix
 518+ 9071
 519+ 9071 2A E8 85     	ld hl,(Puntero_objeto)
 520+ 9074 E5           	push hl
 521+ 9075 FD E1        	pop iy
 522+ 9077
 523+ 9077 C9           	ret
 524+ 9078
 525+ 9078              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9078              ;
 527+ 9078              ;	2/1/23
 528+ 9078              ;
 529+ 9078              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9078              ;
 531+ 9078              ;	Tras esta rutina tenemos:
 532+ 9078              ;
 533+ 9078              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9078              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9078              ;
 536+ 9078              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9078
 538+ 9078 2A E6 85     Operandos ld hl,(Posicion_actual)
 539+ 907B 3A 1C 86     	ld a,(Columnas)
 540+ 907E 3D           	dec a
 541+ 907F 20 01        	jr nz,1F
 542+ 9081 3C           	inc a
 543+ 9082 47           1 ld b,a
 544+ 9083 C9           	ret
 545+ 9084
 546+ 9084              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9084              ;
 548+ 9084              ;	3/1/23
 549+ 9084              ;
 550+ 9084              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9084              ;
 552+ 9084              ;	Destruye: A,B,HL y DE.
 553+ 9084
 554+ 9084              Define_rutina_de_impresion
 555+ 9084
 556+ 9084 3A E5 85     	ld a,(Columns)
 557+ 9087 47           	ld b,a
 558+ 9088 3A 1C 86     	ld a,(Columnas)
 559+ 908B B8           	cp b
 560+ 908C 20 0D        	jr nz,2f
 561+ 908E
 562+ 908E              ;	La entidad se imprime entera.
 563+ 908E
 564+ 908E 21 5A 91     	ld hl, Indice_entidades_completas
 565+ 9091 E6 01        	and 1
 566+ 9093 28 02        	jr z,1F
 567+ 9095
 568+ 9095 23           	inc hl
 569+ 9096 23           	inc hl
 570+ 9097
 571+ 9097 CD 64 88     1 call Extrae_address
 572+ 909A C9           	ret		;	ret
 573+ 909B
 574+ 909B              ;	La entidad no se imprime entera en pantalla.
 575+ 909B
 576+ 909B 3A F8 85     2 ld a,(Cuad_objeto)
 577+ 909E E6 01        	and 1
 578+ 90A0 28 17        	jr z,3F
 579+ 90A2
 580+ 90A2              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 90A2
 582+ 90A2 21 5E 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 90A5 3A E5 85     4 ld a,(Columns)
 584+ 90A8 E6 01        	and 1
 585+ 90AA 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 90AC
 587+ 90AC 23           	inc hl
 588+ 90AD 23           	inc hl
 589+ 90AE
 590+ 90AE 3A 1C 86     	ld a,(Columnas)
 591+ 90B1 E6 01        	and 1
 592+ 90B3 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 90B5
 594+ 90B5 23           	inc hl
 595+ 90B6 23           	inc hl
 596+ 90B7
 597+ 90B7 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 90B9
 599+ 90B9 21 64 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 90BC 18 E7        	jr 4B
 601+ 90BE
 602+ 90BE              ; --------------------------------------------------------------------------------------------------------------------
 603+ 90BE              ;
 604+ 90BE              ;	Prepara_draw
 605+ 90BE              ;
 606+ 90BE              ;	Es una rutina de carga.
 607+ 90BE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 90BE              ;
 609+ 90BE              ;	FUNCIONAMIENTO:
 610+ 90BE              ;
 611+ 90BE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 90BE              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 90BE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 90BE              ;
 615+ 90BE              ;	DESTRUYE:
 616+ 90BE              ;
 617+ 90BE              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 90BE
 619+ 90BE 21 E4 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 90C1 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 90C2 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 90C3 4E           	ld c,(hl)
 623+ 90C4 2A E6 85     	ld hl,(Posicion_actual)
 624+ 90C7 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 90C9 C9           	ret
 626+ 90CA
 627+ 90CA              ;----------------------------------------------------------------------------------------------------------------
 628+ 90CA              ;
 629+ 90CA              ;	5/08/22
 630+ 90CA              ;
 631+ 90CA              ;   NextScan.
 632+ 90CA              ;
 633+ 90CA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 90CA              ;
 635+ 90CA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 90CA              ;
 637+ 90CA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 90CA              ;
 639+ 90CA              ;       DESTRUIDOS: AF y HL !!!
 640+ 90CA              ;
 641+ 90CA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 90CA              ;
 643+ 90CA
 644+ 90CA 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 90CB 7C               ld a,h
 646+ 90CC E6 07            and 7
 647+ 90CE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 90CF
 649+ 90CF 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 90D0 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 90D2 6F               ld l,a
 652+ 90D3 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 90D4
 654+ 90D4 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 90D5 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 90D7 67               ld h,a
 657+ 90D8 C9               ret
 658+ 90D9
 659+ 90D9              ;----------------------------------------------------------------------------------------------------------------
 660+ 90D9              ;
 661+ 90D9              ;	5/08/22
 662+ 90D9              ;
 663+ 90D9              ;   PreviousScan.
 664+ 90D9              ;
 665+ 90D9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 90D9              ;
 667+ 90D9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 90D9              ;
 669+ 90D9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 90D9              ;
 671+ 90D9              ;       DESTRUIDOS: AF y HL !!!
 672+ 90D9              ;
 673+ 90D9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 90D9              ;
 675+ 90D9
 676+ 90D9 7C           PreviousScan ld a,h
 677+ 90DA 25               dec h               ; Dec H.
 678+ 90DB E6 07            and 7
 679+ 90DD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 90DE
 681+ 90DE 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 90DF D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 90E1 6F               ld l,a
 684+ 90E2 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 90E3
 686+ 90E3 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 90E4 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 90E6 67               ld h,a
 689+ 90E7 C9               ret
 690+ 90E8
 691+ 90E8              ; -----------------------------------------------------------------------------------
 692+ 90E8              ;
 693+ 90E8              ;	28/2/23
 694+ 90E8              ;
 695+ 90E8              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 90E8              ;	Extrae fotos de Album_de_fotos.
 697+ 90E8
 698+ 90E8              Extrae_foto_entidades
 699+ 90E8
 700+ 90E8 3A 2A 86     	ld a,(Numero_de_malotes)
 701+ 90EB A7           	and a
 702+ 90EC C8           	ret z
 703+ 90ED ED 73 2B 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 90F1 31 00 70     	ld sp,Album_de_fotos
 705+ 90F4
 706+ 90F4 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 90F6 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 90F7 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 90F8
 710+ 90F8 ED 73 2D 86  	ld (Stack_2),sp
 711+ 90FC ED 7B 2B 86  	ld sp,(Stack)
 712+ 9100
 713+ 9100              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 9100
 715+ 9100 3E CD        	ld a,$cd
 716+ 9102 32 0A 91     	ld (Imprime),a
 717+ 9105 EB           	ex de,hl
 718+ 9106 22 0B 91     	ld (Imprime+1),hl
 719+ 9109 EB           	ex de,hl
 720+ 910A
 721+ 910A              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 910A
 723+ 910A 00 00 00     Imprime db 0,0,0
 724+ 910D
 725+ 910D 3A 2A 86     	ld a,(Numero_de_malotes)
 726+ 9110 3D           	dec a
 727+ 9111 28 09        	jr z,1F
 728+ 9113 32 2A 86      	ld (Numero_de_malotes),a
 729+ 9116
 730+ 9116 ED 7B 2D 86   	ld sp,(Stack_2)
 731+ 911A 18 D8        	jr 2B
 732+ 911C
 733+ 911C AF           1 xor a
 734+ 911D 32 2D 86     	ld (Stack_2),a
 735+ 9120 C9           	ret
 736+ 9121
 737+ 9121              ; -----------------------------------------------------------------------------------
 738+ 9121              ;
 739+ 9121              ;	28/2/23
 740+ 9121              ;
 741+ 9121              ;	Pinta los disparos generados.
 742+ 9121
 743+ 9121              Extrae_foto_disparos
 744+ 9121
 745+ 9121 3A 33 86     	ld a,(Numero_de_disparotes)
 746+ 9124 A7           	and a
 747+ 9125 C8           	ret z
 748+ 9126 ED 73 2B 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 912A 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 912D
 751+ 912D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 912F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 9130 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 9131
 755+ 9131 ED 73 2D 86  	ld (Stack_2),sp
 756+ 9135 ED 7B 2B 86  	ld sp,(Stack)
 757+ 9139
 758+ 9139              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 9139
 760+ 9139 3E CD        	ld a,$cd
 761+ 913B 32 43 91     	ld (Imprime2),a
 762+ 913E EB           	ex de,hl
 763+ 913F 22 44 91     	ld (Imprime2+1),hl
 764+ 9142 EB           	ex de,hl
 765+ 9143
 766+ 9143              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9143
 768+ 9143 00 00 00     Imprime2 db 0,0,0
 769+ 9146
 770+ 9146 3A 33 86     	ld a,(Numero_de_disparotes)
 771+ 9149 3D           	dec a
 772+ 914A 28 09        	jr z,1F
 773+ 914C 32 33 86      	ld (Numero_de_disparotes),a
 774+ 914F
 775+ 914F ED 7B 2D 86  	ld sp,(Stack_2)
 776+ 9153 18 D8        	jr 2B
 777+ 9155
 778+ 9155 AF           1 xor a
 779+ 9156 32 2D 86     	ld (Stack_2),a
 780+ 9159 C9           	ret
 781+ 915A
# file closed: Draw_XOR.asm
1066  915A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 915A              ;   índices de Rutinas de impresión.
   2+ 915A
   3+ 915A 6A 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 915C 97 91            defw Pinta_Amadeus_3x2
   5+ 915E
   6+ 915E ED 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9160 8D 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9162 41 92            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9164
  10+ 9164 17 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9166 1B 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9168 CF 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 916A
  14+ 916A
  15+ 916A              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 916A              ;
  17+ 916A              ;   12/12/22
  18+ 916A              ;
  19+ 916A              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 916A              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 916A              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 916A              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 916A              ;
  24+ 916A              ;   Modifica: DE y HL.
  25+ 916A
  26+ 916A ED 73 2B 86  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 916E FD F9        	ld sp,iy
  28+ 9170 06 10            ld b,16
  29+ 9172 D1           1 pop de
  30+ 9173 7B               ld a,e
  31+ 9174 AE               xor (hl)
  32+ 9175 77           	ld (hl),a
  33+ 9176 23           	inc hl
  34+ 9177 7A               ld a,d
  35+ 9178 AE               xor (hl)
  36+ 9179 77           	ld (hl),a
  37+ 917A 2B           	dec hl
  38+ 917B 24           	inc h
  39+ 917C 7C               ld a,h
  40+ 917D E6 07            and 7
  41+ 917F 20 0A            jr nz,2F
  42+ 9181 7D               ld a,l
  43+ 9182 C6 20            add a,$20
  44+ 9184 6F               ld l,a
  45+ 9185 38 04            jr c,2F
  46+ 9187 7C               ld a,h
  47+ 9188 D6 08            sub 8
  48+ 918A 67               ld h,a
  49+ 918B 7C           2 ld a,h
  50+ 918C FE 58            cp $58
  51+ 918E 28 02            jr z,3F
  52+ 9190 10 E0            djnz 1B
  53+ 9192 ED 7B 2B 86  3 ld sp,(Stack)
  54+ 9196 C9           	ret
  55+ 9197
  56+ 9197 ED 73 2B 86  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 919B FD F9        	ld sp,iy
  58+ 919D 06 08            ld b,8
  59+ 919F D1           1 pop de
  60+ 91A0 7B               ld a,e
  61+ 91A1 AE               xor (hl)
  62+ 91A2 77           	ld (hl),a
  63+ 91A3 23           	inc hl
  64+ 91A4 7A               ld a,d
  65+ 91A5 AE               xor (hl)
  66+ 91A6 77           	ld (hl),a
  67+ 91A7 23           	inc hl
  68+ 91A8 D1           	pop de
  69+ 91A9 7B               ld a,e
  70+ 91AA AE               xor (hl)
  71+ 91AB 77           	ld (hl),a
  72+ 91AC 2B           	dec hl
  73+ 91AD 2B           	dec hl
  74+ 91AE 24           	inc h
  75+ 91AF 7C               ld a,h
  76+ 91B0 E6 07            and 7
  77+ 91B2 20 0A            jr nz,2F
  78+ 91B4 7D               ld a,l
  79+ 91B5 C6 20            add a,$20
  80+ 91B7 6F               ld l,a
  81+ 91B8 38 04            jr c,2F
  82+ 91BA 7C               ld a,h
  83+ 91BB D6 08            sub 8
  84+ 91BD 67               ld h,a
  85+ 91BE 7C           2 ld a,h
  86+ 91BF FE 58            cp $58
  87+ 91C1 28 25            jr z,4F
  88+ 91C3 7A               ld a,d
  89+ 91C4 AE               xor (hl)
  90+ 91C5 77               ld (hl),a
  91+ 91C6 D1           	pop de
  92+ 91C7 23           	inc hl
  93+ 91C8 7B               ld a,e
  94+ 91C9 AE               xor (hl)
  95+ 91CA 77           	ld (hl),a
  96+ 91CB 23           	inc hl
  97+ 91CC 7A               ld a,d
  98+ 91CD AE               xor (hl)
  99+ 91CE 77           	ld (hl),a
 100+ 91CF 2B           	dec hl
 101+ 91D0 2B           	dec hl
 102+ 91D1 24           	inc h
 103+ 91D2 7C               ld a,h
 104+ 91D3 E6 07            and 7
 105+ 91D5 20 0A            jr nz,3F
 106+ 91D7 7D               ld a,l
 107+ 91D8 C6 20            add a,$20
 108+ 91DA 6F               ld l,a
 109+ 91DB 38 04            jr c,3F
 110+ 91DD 7C               ld a,h
 111+ 91DE D6 08            sub 8
 112+ 91E0 67               ld h,a
 113+ 91E1 7C           3 ld a,h
 114+ 91E2 FE 58            cp $58
 115+ 91E4 28 02            jr z,4F
 116+ 91E6 10 B7            djnz 1B
 117+ 91E8 ED 7B 2B 86  4 ld sp,(Stack)
 118+ 91EC C9           	ret
 119+ 91ED
 120+ 91ED              ; ---------------------------------------------------
 121+ 91ED
 122+ 91ED ED 73 2B 86  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 91F1 FD F9        	ld sp,iy
 124+ 91F3
 125+ 91F3              ; >>>
 126+ 91F3
 127+ 91F3 06 10            ld b,16
 128+ 91F5 D1           1 pop de
 129+ 91F6 7A           	ld a,d
 130+ 91F7 AE           	xor (hl)
 131+ 91F8 77           	ld (hl),a
 132+ 91F9 24           	inc h
 133+ 91FA 7C               ld a,h
 134+ 91FB E6 07            and 7
 135+ 91FD 20 0C            jr nz,2F
 136+ 91FF 7D               ld a,l
 137+ 9200 C6 20            add a,$20
 138+ 9202 6F               ld l,a
 139+ 9203 38 06            jr c,2F
 140+ 9205 7C               ld a,h
 141+ 9206 D6 08            sub 8
 142+ 9208 67               ld h,a
 143+ 9209 18 00            jr 2F
 144+ 920B 7C           2 ld a,h
 145+ 920C FE 58            cp $58
 146+ 920E 28 02            jr z,3F
 147+ 9210 10 E3            djnz 1B
 148+ 9212 ED 7B 2B 86  3 ld sp,(Stack)
 149+ 9216 C9           	ret
 150+ 9217
 151+ 9217 ED 73 2B 86  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 921B FD F9        	ld sp,iy
 153+ 921D
 154+ 921D              ; >>>
 155+ 921D
 156+ 921D 06 10            ld b,16
 157+ 921F D1           1 pop de
 158+ 9220 7B           	ld a,e
 159+ 9221 AE           	xor (hl)
 160+ 9222 77           	ld (hl),a
 161+ 9223 24           	inc h
 162+ 9224 7C               ld a,h
 163+ 9225 E6 07            and 7
 164+ 9227 20 0C            jr nz,2F
 165+ 9229 7D               ld a,l
 166+ 922A C6 20            add a,$20
 167+ 922C 6F               ld l,a
 168+ 922D 38 06            jr c,2F
 169+ 922F 7C               ld a,h
 170+ 9230 D6 08            sub 8
 171+ 9232 67               ld h,a
 172+ 9233 18 00            jr 2F
 173+ 9235 7C           2 ld a,h
 174+ 9236 FE 58            cp $58
 175+ 9238 28 02            jr z,3F
 176+ 923A 10 E3            djnz 1B
 177+ 923C ED 7B 2B 86  3 ld sp,(Stack)
 178+ 9240 C9           	ret
 179+ 9241
 180+ 9241              ; ---------------------------------------------------
 181+ 9241
 182+ 9241 ED 73 2B 86  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9245 FD F9        	ld sp,iy
 184+ 9247 06 08            ld b,8
 185+ 9249 D1           1 pop de
 186+ 924A 7A           	ld a,d
 187+ 924B AE           	xor (hl)
 188+ 924C 77           	ld (hl),a
 189+ 924D 23           	inc hl
 190+ 924E D1           	pop de
 191+ 924F 7B           	ld a,e
 192+ 9250 AE           	xor (hl)
 193+ 9251 77           	ld (hl),a
 194+ 9252 2B           	dec hl
 195+ 9253 24            	inc h
 196+ 9254 7C               ld a,h
 197+ 9255 E6 07            and 7
 198+ 9257 20 0A            jr nz,2F
 199+ 9259 7D               ld a,l
 200+ 925A C6 20            add a,$20
 201+ 925C 6F               ld l,a
 202+ 925D 38 04            jr c,2F
 203+ 925F 7C               ld a,h
 204+ 9260 D6 08            sub 8
 205+ 9262 67               ld h,a
 206+ 9263 7C           2 ld a,h
 207+ 9264 FE 58            cp $58
 208+ 9266 28 20            jr z,4F
 209+ 9268 D1               pop de
 210+ 9269 7B           	ld a,e
 211+ 926A AE           	xor (hl)
 212+ 926B 77           	ld (hl),a
 213+ 926C 23           	inc hl
 214+ 926D 7A           	ld a,d
 215+ 926E AE           	xor (hl)
 216+ 926F 77           	ld (hl),a
 217+ 9270 2B           	dec hl
 218+ 9271 24           	inc h
 219+ 9272 7C               ld a,h
 220+ 9273 E6 07            and 7
 221+ 9275 20 0A            jr nz,3F
 222+ 9277 7D               ld a,l
 223+ 9278 C6 20            add a,$20
 224+ 927A 6F               ld l,a
 225+ 927B 38 04            jr c,3F
 226+ 927D 7C               ld a,h
 227+ 927E D6 08            sub 8
 228+ 9280 67               ld h,a
 229+ 9281 7C           3 ld a,h
 230+ 9282 FE 58            cp $58
 231+ 9284 28 02            jr z,4F
 232+ 9286 10 C1            djnz 1B
 233+ 9288 ED 7B 2B 86  4 ld sp,(Stack)
 234+ 928C C9           	ret
 235+ 928D
 236+ 928D ED 73 2B 86  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9291 FD F9        	ld sp,iy
 238+ 9293 06 08            ld b,8
 239+ 9295 D1           1 pop de
 240+ 9296 D1           	pop de
 241+ 9297 7B           	ld a,e
 242+ 9298 AE           	xor (hl)
 243+ 9299 77           	ld (hl),a
 244+ 929A 24            	inc h
 245+ 929B 7C               ld a,h
 246+ 929C E6 07            and 7
 247+ 929E 20 0A            jr nz,2F
 248+ 92A0 7D               ld a,l
 249+ 92A1 C6 20            add a,$20
 250+ 92A3 6F               ld l,a
 251+ 92A4 38 04            jr c,2F
 252+ 92A6 7C               ld a,h
 253+ 92A7 D6 08            sub 8
 254+ 92A9 67               ld h,a
 255+ 92AA 7C           2 ld a,h
 256+ 92AB FE 58            cp $58
 257+ 92AD 28 1B            jr z,4F
 258+ 92AF D1               pop de
 259+ 92B0 7A           	ld a,d
 260+ 92B1 AE           	xor (hl)
 261+ 92B2 77           	ld (hl),a
 262+ 92B3 24           	inc h
 263+ 92B4 7C               ld a,h
 264+ 92B5 E6 07            and 7
 265+ 92B7 20 0A            jr nz,3F
 266+ 92B9 7D               ld a,l
 267+ 92BA C6 20            add a,$20
 268+ 92BC 6F               ld l,a
 269+ 92BD 38 04            jr c,3F
 270+ 92BF 7C               ld a,h
 271+ 92C0 D6 08            sub 8
 272+ 92C2 67               ld h,a
 273+ 92C3 7C           3 ld a,h
 274+ 92C4 FE 58            cp $58
 275+ 92C6 28 02            jr z,4F
 276+ 92C8 10 CB            djnz 1B
 277+ 92CA ED 7B 2B 86  4 ld sp,(Stack)
 278+ 92CE C9           	ret
 279+ 92CF
 280+ 92CF ED 73 2B 86  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 92D3 FD F9        	ld sp,iy
 282+ 92D5 06 08            ld b,8
 283+ 92D7 D1           1 pop de
 284+ 92D8 7B           	ld a,e
 285+ 92D9 AE           	xor (hl)
 286+ 92DA 77           	ld (hl),a
 287+ 92DB 23           	inc hl
 288+ 92DC 7A           	ld a,d
 289+ 92DD AE           	xor (hl)
 290+ 92DE 77           	ld (hl),a
 291+ 92DF 2B           	dec hl
 292+ 92E0 24             	inc h
 293+ 92E1 7C               ld a,h
 294+ 92E2 E6 07            and 7
 295+ 92E4 20 0A            jr nz,2F
 296+ 92E6 7D               ld a,l
 297+ 92E7 C6 20            add a,$20
 298+ 92E9 6F               ld l,a
 299+ 92EA 38 04            jr c,2F
 300+ 92EC 7C               ld a,h
 301+ 92ED D6 08            sub 8
 302+ 92EF 67               ld h,a
 303+ 92F0 7C           2 ld a,h
 304+ 92F1 FE 58            cp $58
 305+ 92F3 28 21            jr z,4F
 306+ 92F5 D1               pop de
 307+ 92F6 7A           	ld a,d
 308+ 92F7 AE           	xor (hl)
 309+ 92F8 77           	ld (hl),a
 310+ 92F9 23           	inc hl
 311+ 92FA D1               pop de
 312+ 92FB 7B           	ld a,e
 313+ 92FC AE           	xor (hl)
 314+ 92FD 77           	ld (hl),a
 315+ 92FE 2B           	dec hl
 316+ 92FF 24           	inc h
 317+ 9300 7C               ld a,h
 318+ 9301 E6 07            and 7
 319+ 9303 20 0A            jr nz,3F
 320+ 9305 7D               ld a,l
 321+ 9306 C6 20            add a,$20
 322+ 9308 6F               ld l,a
 323+ 9309 38 04            jr c,3F
 324+ 930B 7C               ld a,h
 325+ 930C D6 08            sub 8
 326+ 930E 67               ld h,a
 327+ 930F 7C           3 ld a,h
 328+ 9310 FE 58            cp $58
 329+ 9312 28 02            jr z,4F
 330+ 9314 10 C1            djnz 1B
 331+ 9316 ED 7B 2B 86  4 ld sp,(Stack)
 332+ 931A C9           	ret
 333+ 931B
 334+ 931B ED 73 2B 86  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 931F FD F9        	ld sp,iy
 336+ 9321 06 08            ld b,8
 337+ 9323 D1           1 pop de
 338+ 9324 7B           	ld a,e
 339+ 9325 AE           	xor (hl)
 340+ 9326 77           	ld (hl),a
 341+ 9327 24            	inc h
 342+ 9328 7C               ld a,h
 343+ 9329 E6 07            and 7
 344+ 932B 20 0A            jr nz,2F
 345+ 932D 7D               ld a,l
 346+ 932E C6 20            add a,$20
 347+ 9330 6F               ld l,a
 348+ 9331 38 04            jr c,2F
 349+ 9333 7C               ld a,h
 350+ 9334 D6 08            sub 8
 351+ 9336 67               ld h,a
 352+ 9337 7C           2 ld a,h
 353+ 9338 FE 58            cp $58
 354+ 933A 28 1C            jr z,4F
 355+ 933C D1               pop de
 356+ 933D 7A           	ld a,d
 357+ 933E AE           	xor (hl)
 358+ 933F 77           	ld (hl),a
 359+ 9340 24           	inc h
 360+ 9341 7C               ld a,h
 361+ 9342 E6 07            and 7
 362+ 9344 20 0A            jr nz,3F
 363+ 9346 7D               ld a,l
 364+ 9347 C6 20            add a,$20
 365+ 9349 6F               ld l,a
 366+ 934A 38 04            jr c,3F
 367+ 934C 7C               ld a,h
 368+ 934D D6 08            sub 8
 369+ 934F 67               ld h,a
 370+ 9350 7C           3 ld a,h
 371+ 9351 FE 58            cp $58
 372+ 9353 28 03            jr z,4F
 373+ 9355 D1               pop de
 374+ 9356 10 CB            djnz 1B
 375+ 9358 ED 7B 2B 86  4 ld sp,(Stack)
 376+ 935C C9           	ret
 377+ 935D
 378+ 935D              ; ---------------------------------------------------
 379+ 935D              ;
 380+ 935D              ;   27/02/23
 381+ 935D              ;
 382+ 935D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 935D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 935D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 935D
 386+ 935D ED 73 2B 86  Pinta_Disparo ld (Stack),sp
 387+ 9361 FD F9            ld sp,iy
 388+ 9363 06 02            ld b,2
 389+ 9365 D1           1 pop de
 390+ 9366 7B               ld a,e
 391+ 9367 AE               xor (hl)
 392+ 9368 77               ld (hl),a
 393+ 9369 23               inc hl
 394+ 936A 7A               ld a,d
 395+ 936B AE               xor (hl)
 396+ 936C 77               ld (hl),a
 397+ 936D 2B               dec hl
 398+ 936E
 399+ 936E 24               inc h
 400+ 936F 7C               ld a,h
 401+ 9370 E6 07            and 7
 402+ 9372 20 0A            jr nz,2F
 403+ 9374 7D               ld a,l
 404+ 9375 C6 20            add a,$20
 405+ 9377 6F               ld l,a
 406+ 9378 38 04            jr c,2F
 407+ 937A 7C               ld a,h
 408+ 937B D6 08            sub 8
 409+ 937D 67               ld h,a
 410+ 937E 7C           2 ld a,h
 411+ 937F FE 58            cp $58
 412+ 9381 28 02            jr z,3F
 413+ 9383
 414+ 9383 10 E0            djnz 1B
 415+ 9385 ED 7B 2B 86  3 ld sp,(Stack)
 416+ 9389 C9               ret
 417+ 938A
# file closed: Rutinas_de_impresion_sprites.asm
1067  938A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 938A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 938A              ;
   3+ 938A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 938A              ;
   5+ 938A              ; *****************************************************************************************************************************************************************************************
   6+ 938A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 938A
   8+ 938A 7C           calcula_tercio ld a,h
   9+ 938B E6 18        	and $18
  10+ 938D CB 2F        	sra a
  11+ 938F CB 2F        	sra a
  12+ 9391 CB 2F        	sra a
  13+ 9393 C9           	ret
  14+ 9394
# file closed: calcula_tercio.asm
1068  9394              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9394              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9394              ;
   3+ 9394              ;
   4+ 9394              ;	CLS.
   5+ 9394              ;
   6+ 9394              ;	Limpia la pantalla y define sus atributos.
   7+ 9394              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9394              ;
   9+ 9394              ;	COLORES: 0 ..... NEGRO
  10+ 9394              ;    		 1 ..... AZUL
  11+ 9394              ; 			 2 ..... ROJO
  12+ 9394              ;			 3 ..... MAGENTA
  13+ 9394              ; 			 4 ..... VERDE
  14+ 9394              ; 			 5 ..... CIAN
  15+ 9394              ;			 6 ..... AMARILLO
  16+ 9394              ; 			 7 ..... BLANCO
  17+ 9394              ;
  18+ 9394              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9394              ;
  20+ 9394              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9394
  22+ 9394
  23+ 9394 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9397 11 01 40     	LD DE,$4001
  25+ 939A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 939D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 939F ED B0        	LDIR
  28+ 93A1 01 FF 02     	LD BC,767
  29+ 93A4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 93A5 ED B0        	LDIR
  31+ 93A7 C9           	ret
  32+ 93A8
# file closed: Cls.asm
1069  93A8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 93A8              ; ******************************************************************************************************************************************************************************************
   2+ 93A8              ;
   3+ 93A8              ;   22/01/23
   4+ 93A8              ;
   5+ 93A8              ;	Mov_down
   6+ 93A8              ;
   7+ 93A8              ; 	Mueve el Sprite X px hacia abajo.
   8+ 93A8              ;
   9+ 93A8              ;
  10+ 93A8 21 12 86     Mov_down ld hl,Ctrl_0
  11+ 93AB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 93AD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 93AD              ; 																	; _ en el caso de que no lo haya.
  14+ 93AD 3A FC 85     	ld a,(Vel_down)
  15+ 93B0 47           	ld b,a
  16+ 93B1 2A E6 85         ld hl,(Posicion_actual)
  17+ 93B4 CD 8A 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 93B7 E6 02        	and 2
  19+ 93B9 28 0F        	jr z,1F
  20+ 93BB
  21+ 93BB              ; Nos encontramos en el último tercio de pantalla.
  22+ 93BB              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 93BB
  24+ 93BB 7C           	ld a,h
  25+ 93BC FE 57        	cp $57
  26+ 93BE 20 0A        	jr nz,1F
  27+ 93C0 7D           	ld a,l
  28+ 93C1 C6 20        	add $20
  29+ 93C3 30 05        	jr nc,1F
  30+ 93C5
  31+ 93C5              ; ------------------------------
  32+ 93C5 CD A0 96     	call Reaparece_arriba
  33+ 93C8              ;	call Reinicio
  34+ 93C8              ; ------------------------------
  35+ 93C8
  36+ 93C8 18 08        	jr 3F
  37+ 93CA CD CA 90     1 call NextScan
  38+ 93CD 22 E6 85     	ld (Posicion_actual),hl
  39+ 93D0 10 E2            djnz 2B
  40+ 93D2 CD B6 96     3 call Genera_coordenadas
  41+ 93D5 C9           	ret
  42+ 93D6
  43+ 93D6              ; ******************************************************************************************************************************************************************************************
  44+ 93D6              ;
  45+ 93D6              ;   22/01/23
  46+ 93D6              ;
  47+ 93D6              ;	Mov_up
  48+ 93D6              ;
  49+ 93D6              ; 	Mueve el Sprite hacia arriba.
  50+ 93D6              ;
  51+ 93D6              ;
  52+ 93D6 21 12 86     Mov_up ld hl,Ctrl_0
  53+ 93D9 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 93DB              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 93DB              ; 																		; _ en el caso de que no lo haya.
  56+ 93DB 3A FB 85     	ld a,(Vel_up)
  57+ 93DE 47           	ld b,a
  58+ 93DF 2A E6 85     	ld hl,(Posicion_actual)
  59+ 93E2 CD 8A 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 93E5 A7           	and a
  61+ 93E6 20 10        	jr nz,1F
  62+ 93E8
  63+ 93E8              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 93E8              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 93E8
  66+ 93E8 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 93E9 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 93EB 20 0B            jr nz,1F
  69+ 93ED 7D               ld a,l
  70+ 93EE D6 20            sub $20
  71+ 93F0 30 06            jr nc,1F
  72+ 93F2 25               dec h
  73+ 93F3
  74+ 93F3              ; -----------------------------
  75+ 93F3 CD 90 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 93F6              ;	call Reinicio
  77+ 93F6              ; -----------------------------
  78+ 93F6
  79+ 93F6 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 93F8 CD D9 90     1 call PreviousScan
  81+ 93FB 22 E6 85     	ld (Posicion_actual),hl
  82+ 93FE 10 E2            djnz 3B
  83+ 9400 CD B6 96     2 call Genera_coordenadas
  84+ 9403 C9           	ret
  85+ 9404
  86+ 9404              ; ******************************************************************************************************************************************************************************************
  87+ 9404              ;
  88+ 9404              ;	19/10/22
  89+ 9404              ;
  90+ 9404              ;	Mov_right.
  91+ 9404              ;
  92+ 9404              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 9404              ;
  94+ 9404
  95+ 9404 21 12 86     Mov_right ld hl,Ctrl_0
  96+ 9407 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9409              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9409              ; 																	; _ en el caso de que no lo haya.
  99+ 9409 3A 12 86     	ld a,(Ctrl_0)
 100+ 940C CB 77        	bit 6,a
 101+ 940E 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9410
 103+ 9410 CD 3E 96     	call Stop_Amadeus_right
 104+ 9413 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9414 18 4D        	jr 8F
 106+ 9416
 107+ 9416 3A EA 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 9419 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 941B 20 46        	jr nz,8F
 110+ 941D
 111+ 941D 3A EC 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9420 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9421 28 40        	jr z,8F
 114+ 9423
 115+ 9423              ; ---------- ---------- ----------
 116+ 9423              ;
 117+ 9423              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9423
 119+ 9423 3A FA 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 9426 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 9428 28 11        	jr z,1F
 122+ 942A 38 06        	jr c,6F
 123+ 942C FE 04        	cp 4
 124+ 942E 28 14        	jr z,7F
 125+ 9430 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9432
 127+ 9432              ; ---------- ---------- ----------
 128+ 9432              ;
 129+ 9432              ; Perfiles de velocidad
 130+ 9432              ;
 131+ 9432
 132+ 9432 3A EC 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 9435 FE FE        	cp $fe
 134+ 9437 20 2A        	jr nz,8F
 135+ 9439 18 10        	jr 3F
 136+ 943B 3A EC 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 943E FE FD        	cp $fd
 138+ 9440 20 21        	jr nz,8F
 139+ 9442 18 07        	jr 3F
 140+ 9444 3A EC 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 9447 FE FB        	cp $fb
 142+ 9449 20 18        	jr nz,8F
 143+ 944B
 144+ 944B              ; ---------- ---------- ----------
 145+ 944B
 146+ 944B              3
 147+ 944B CD 7E 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 944E              ;	call Reinicio
 149+ 944E
 150+ 944E              ; ---------- ---------- ----------
 151+ 944E              ;
 152+ 944E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 944E
 154+ 944E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 9450 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 9451 CD 6A 94     	call DESPLZ_DER
 157+ 9454 C1           	pop bc
 158+ 9455 10 F9        	djnz 5B
 159+ 9457 2A E6 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 945A 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 945B 22 E6 85     	ld (Posicion_actual),hl
 162+ 945E CD B6 96     	call Genera_coordenadas
 163+ 9461 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9463
 165+ 9463              ; ---------- ---------- ----------
 166+ 9463
 167+ 9463 2A E6 85     8 ld hl,(Posicion_actual)
 168+ 9466 CD 6A 94     	call DESPLZ_DER
 169+ 9469 C9           2 ret
 170+ 946A
 171+ 946A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 946A              ;
 173+ 946A              ;	22/9/22
 174+ 946A              ;
 175+ 946A
 176+ 946A CD 79 94     DESPLZ_DER call Desplaza_derecha
 177+ 946D CD C5 94         call modifica_parametros_1er_DESPLZ_2
 178+ 9470 CD EE 94         call Ciclo_completo
 179+ 9473 21 12 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9476 CB FE        	set 7,(hl)
 181+ 9478 C9           	ret
 182+ 9479
 183+ 9479              ; ******************************************************************************************************************************************************************************************
 184+ 9479              ;	15/02/23
 185+ 9479              ;
 186+ 9479
 187+ 9479 3A FA 85     Desplaza_derecha ld a,(Vel_right)
 188+ 947C 47           	ld b,a
 189+ 947D 2A F2 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9480 23           1 inc hl
 191+ 9481 23           	inc hl
 192+ 9482 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9484 22 F2 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9487 CD 64 88     	call Extrae_address
 195+ 948A 22 E8 85     	ld (Puntero_objeto),hl
 196+ 948D
 197+ 948D              ; Modifica (Puntero_DESPLZ_izq).
 198+ 948D
 199+ 948D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 948D              ; Cuántos movimientos hemos hecho ??
 201+ 948D              ; DE contiene (Puntero_DESPLZ_der).
 202+ 948D
 203+ 948D 2A EE 85     7 ld hl,(Indice_Sprite_der)
 204+ 9490 EB           	ex de,hl
 205+ 9491 A7           	and a
 206+ 9492 ED 52        	sbc hl,de
 207+ 9494 CB 3D        	srl l
 208+ 9496 3E 08        6 ld a,8
 209+ 9498 95           	sub l
 210+ 9499 30 1E        	jr nc,3F
 211+ 949B
 212+ 949B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 949B              ; B="0".
 214+ 949B
 215+ 949B 04           4 inc b
 216+ 949C 3C           	inc a
 217+ 949D 20 FC        	jr nz,4B
 218+ 949F 78           	ld a,b
 219+ 94A0 08           	ex af,af
 220+ 94A1 2A EE 85     	ld hl,(Indice_Sprite_der)
 221+ 94A4 23           5 inc hl
 222+ 94A5 23           	inc hl
 223+ 94A6 10 FC        	djnz 5B
 224+ 94A8 22 F2 85     	ld (Puntero_DESPLZ_der),hl
 225+ 94AB CD 64 88     	call Extrae_address
 226+ 94AE 22 E8 85     	ld (Puntero_objeto),hl
 227+ 94B1
 228+ 94B1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 94B1              ; _(Posicion_actual).
 230+ 94B1
 231+ 94B1 21 E6 85     	ld hl,Posicion_actual
 232+ 94B4 34           	inc (hl)
 233+ 94B5 08               ex af,af
 234+ 94B6 6F           	ld l,a
 235+ 94B7 18 DD        	jr 6B
 236+ 94B9
 237+ 94B9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 94B9
 239+ 94B9 47           3 ld b,a
 240+ 94BA 2A F0 85     	ld hl,(Indice_Sprite_izq)
 241+ 94BD 23           2 inc hl
 242+ 94BE 23           	inc hl
 243+ 94BF 10 FC        	djnz 2B
 244+ 94C1 22 F4 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 94C4 C9           8 ret
 246+ 94C5
 247+ 94C5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 94C5              ;
 249+ 94C5              ;	24/7/22
 250+ 94C5              ;
 251+ 94C5              ;	modifica_parametros_1er_DESPLZ_2
 252+ 94C5              ;
 253+ 94C5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 94C5              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 94C5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 94C5
 257+ 94C5 3A EC 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 94C8 A7           	and a
 259+ 94C9 20 1F        	jr nz,1F
 260+ 94CB D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 94CD 32 EC 85         ld (CTRL_DESPLZ),a
 262+ 94D0
 263+ 94D0 21 E5 85     	ld hl,Columns
 264+ 94D3 34           	inc (hl)
 265+ 94D4 3A F8 85     	ld a,(Cuad_objeto)
 266+ 94D7 E6 01        	and 1
 267+ 94D9 28 0F        	jr z,1F
 268+ 94DB 2A E6 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 94DE 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 94DF 22 E6 85     	ld (Posicion_actual),hl
 271+ 94E2 CD B6 96     	call Genera_coordenadas
 272+ 94E5 CD 4A 96     	call Inc_CTRL_DESPLZ
 273+ 94E8 18 03        	jr 2F
 274+ 94EA CD 4A 96     1 call Inc_CTRL_DESPLZ
 275+ 94ED C9           2 ret
 276+ 94EE
 277+ 94EE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 94EE              ;
 279+ 94EE              ;	24/7/22
 280+ 94EE              ;
 281+ 94EE              ;	Ciclo_completo.
 282+ 94EE              ;
 283+ 94EE              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 94EE              ;
 285+ 94EE              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 94EE              ; 	Decrementamos (Columns).
 287+ 94EE              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 94EE              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 94EE
 290+ 94EE
 291+ 94EE 3A EC 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 94F1 FE FF        	cp $ff
 293+ 94F3 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 94F5 E6 F0        	and $f0
 295+ 94F7 20 28        	jr nz,3F
 296+ 94F9
 297+ 94F9              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 94F9
 299+ 94F9 3A EC 85     	ld a,(CTRL_DESPLZ)
 300+ 94FC 47           	ld b,a
 301+ 94FD 3E F8        	ld a,$f8
 302+ 94FF 80           	add b
 303+ 9500 32 EC 85     	ld (CTRL_DESPLZ),a
 304+ 9503 18 1C        	jr 3F
 305+ 9505 21 E5 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 9508 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9509 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 950A 32 EC 85     	ld (CTRL_DESPLZ),a
 309+ 950D 3A F8 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9510 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9512 20 0A        	jr nz,2F
 312+ 9514 2A E6 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 9517 23           	inc hl
 314+ 9518 22 E6 85     	ld (Posicion_actual),hl
 315+ 951B CD B6 96     	call Genera_coordenadas
 316+ 951E
 317+ 951E              ; Inicia el puntero de Sprite.
 318+ 951E
 319+ 951E CD 7B 88     2 call Inicia_puntero_objeto_der
 320+ 9521 C9           3 ret
 321+ 9522
 322+ 9522              ; ******************************************************************************************************************************************************************************************
 323+ 9522              ;
 324+ 9522              ;	15/02/23
 325+ 9522              ;
 326+ 9522              ;	Mov_left.
 327+ 9522              ;
 328+ 9522              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9522              ;
 330+ 9522              Mov_left
 331+ 9522
 332+ 9522 21 12 86     	ld hl,Ctrl_0
 333+ 9525 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 9527              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 9527              ; 																	; _ en el caso de que no lo haya.
 336+ 9527 3A 12 86     	ld a,(Ctrl_0)
 337+ 952A CB 77        	bit 6,a
 338+ 952C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 952E
 340+ 952E CD 44 96     	call Stop_Amadeus_left
 341+ 9531 C8           	ret z
 342+ 9532 20 4A        	jr nz,8F
 343+ 9534
 344+ 9534 3A EA 85     11 ld a,(Coordenada_X)
 345+ 9537 A7           	and a
 346+ 9538 20 44        	jr nz,8F
 347+ 953A
 348+ 953A 3A EC 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 953D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 953E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 9540
 352+ 9540              ; ---------- ---------- ----------
 353+ 9540
 354+ 9540 3A F9 85     	ld a,(Vel_left)
 355+ 9543 FE 02        	cp 2
 356+ 9545 28 0F        	jr z,1F
 357+ 9547 38 04        	jr c,6F
 358+ 9549 FE 04        	cp 4
 359+ 954B 28 12        	jr z,7F
 360+ 954D
 361+ 954D              ; ---------- ---------- ----------
 362+ 954D
 363+ 954D 3A EC 85     6 ld a,(CTRL_DESPLZ)
 364+ 9550 FE F8        	cp $f8
 365+ 9552 20 2A        	jr nz,8F
 366+ 9554 18 10        	jr 4F
 367+ 9556 3A EC 85     1 ld a,(CTRL_DESPLZ)
 368+ 9559 FE F9        	cp $f9
 369+ 955B 20 21        	jr nz,8F
 370+ 955D 18 07        	jr 4F
 371+ 955F 3A EC 85     7 ld a,(CTRL_DESPLZ)
 372+ 9562 FE FB        	cp $fb
 373+ 9564 20 18        	jr nz,8F
 374+ 9566
 375+ 9566              ; ---------- ---------- ----------
 376+ 9566
 377+ 9566              4
 378+ 9566 CD 6C 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9569              ;	call Reinicio
 380+ 9569
 381+ 9569              ; ---------- ---------- ----------
 382+ 9569
 383+ 9569 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 956B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 956C
 386+ 956C              ;	ld hl,(Indice_Sprite_izq)
 387+ 956C              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 956C
 389+ 956C CD 85 95     	call DESPLZ_IZQ
 390+ 956F C1           	pop bc
 391+ 9570 10 F9        	djnz 5B
 392+ 9572 2A E6 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9575 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9576 22 E6 85     	ld (Posicion_actual),hl
 395+ 9579 CD B6 96     	call Genera_coordenadas
 396+ 957C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 957E
 398+ 957E              ; ---------- ---------- ----------
 399+ 957E
 400+ 957E              ; Movemos, no hay recolocación.
 401+ 957E
 402+ 957E 2A E6 85     8 ld hl,(Posicion_actual)
 403+ 9581 CD 85 95     	call DESPLZ_IZQ
 404+ 9584 C9           2 ret
 405+ 9585
 406+ 9585              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9585              ;
 408+ 9585              ;	22/9/22
 409+ 9585
 410+ 9585              DESPLZ_IZQ
 411+ 9585
 412+ 9585 CD 94 95     	call Desplaza_izquierda
 413+ 9588 CD E0 95         call modifica_parametros_1er_DESPLZ
 414+ 958B CD 08 96     	call Ciclo_completo_2
 415+ 958E 21 12 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9591 CB BE        	res 7,(hl)
 417+ 9593 C9           	ret
 418+ 9594
 419+ 9594              Desplaza_izquierda
 420+ 9594
 421+ 9594 3A F9 85     	ld a,(Vel_left)
 422+ 9597 47           	ld b,a
 423+ 9598 2A F4 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 959B 23           1 inc hl
 425+ 959C 23           	inc hl
 426+ 959D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 959F 22 F4 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 95A2 CD 64 88     	call Extrae_address
 429+ 95A5 22 E8 85     	ld (Puntero_objeto),hl
 430+ 95A8
 431+ 95A8              ; Modifica (Puntero_DESPLZ_der).
 432+ 95A8
 433+ 95A8              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 95A8              ; Cuántos movimientos hemos hecho ??
 435+ 95A8              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 95A8
 437+ 95A8 2A F0 85     7 ld hl,(Indice_Sprite_izq)
 438+ 95AB EB           	ex de,hl
 439+ 95AC A7           	and a
 440+ 95AD ED 52        	sbc hl,de
 441+ 95AF CB 3D        	srl l
 442+ 95B1 3E 08        6 ld a,8
 443+ 95B3 95           	sub l
 444+ 95B4 30 1E        	jr nc,3F
 445+ 95B6
 446+ 95B6              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 95B6              ; B="0".
 448+ 95B6
 449+ 95B6 04           4 inc b
 450+ 95B7 3C           	inc a
 451+ 95B8 20 FC        	jr nz,4B
 452+ 95BA 78           	ld a,b
 453+ 95BB 08           	ex af,af
 454+ 95BC 2A F0 85     	ld hl,(Indice_Sprite_izq)
 455+ 95BF 23           5 inc hl
 456+ 95C0 23           	inc hl
 457+ 95C1 10 FC        	djnz 5B
 458+ 95C3 22 F4 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 95C6 CD 64 88     	call Extrae_address
 460+ 95C9 22 E8 85     	ld (Puntero_objeto),hl
 461+ 95CC
 462+ 95CC              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 95CC              ; _(Posicion_actual).
 464+ 95CC
 465+ 95CC 21 E6 85     	ld hl,Posicion_actual
 466+ 95CF 35           	dec (hl)
 467+ 95D0 08           	ex af,af
 468+ 95D1 6F           	ld l,a
 469+ 95D2 18 DD        	jr 6B
 470+ 95D4
 471+ 95D4              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 95D4
 473+ 95D4 47           3 ld b,a
 474+ 95D5 2A EE 85     	ld hl,(Indice_Sprite_der)
 475+ 95D8 23           2 inc hl
 476+ 95D9 23           	inc hl
 477+ 95DA 10 FC        	djnz 2B
 478+ 95DC 22 F2 85     	ld (Puntero_DESPLZ_der),hl
 479+ 95DF C9           8 ret
 480+ 95E0
 481+ 95E0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 95E0              ;
 483+ 95E0              ;	modifica_parametros_1er_DESPLZ
 484+ 95E0              ;
 485+ 95E0              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 95E0              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 95E0              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 95E0
 489+ 95E0 3A EC 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 95E3 A7           	and a
 491+ 95E4 20 1E        	jr nz,1F
 492+ 95E6 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 95E7 32 EC 85         ld (CTRL_DESPLZ),a
 494+ 95EA 21 E5 85     	ld hl,Columns
 495+ 95ED 34           	inc (hl)
 496+ 95EE 3A F8 85     	ld a,(Cuad_objeto)
 497+ 95F1 E6 01        	and 1
 498+ 95F3 20 0F        	jr nz,1F
 499+ 95F5 2A E6 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 95F8 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 95F9 22 E6 85     	ld (Posicion_actual),hl
 502+ 95FC CD B6 96     	call Genera_coordenadas
 503+ 95FF CD 5B 96     	call Dec_CTRL_DESPLZ
 504+ 9602 18 03        	jr 2F
 505+ 9604 CD 5B 96     1 call Dec_CTRL_DESPLZ
 506+ 9607 C9           2 ret
 507+ 9608
 508+ 9608              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9608
 510+ 9608 3A EC 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 960B FE F7        	cp $f7
 512+ 960D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 960F 30 2C        	jr nc,3F
 514+ 9611
 515+ 9611              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9611
 517+ 9611 06 00        	ld b,0
 518+ 9613 04           4 inc b
 519+ 9614 3C           	inc a
 520+ 9615 FE F7        	cp $f7
 521+ 9617 20 FA        	jr nz,4B
 522+ 9619 3E FF        	ld a,$ff
 523+ 961B 90           	sub b
 524+ 961C 32 EC 85     	ld (CTRL_DESPLZ),a
 525+ 961F 18 1C        	jr 3F
 526+ 9621
 527+ 9621              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9621
 529+ 9621 21 E5 85     1 ld hl,Columns
 530+ 9624 35           	dec (hl)
 531+ 9625 AF           	xor a
 532+ 9626 32 EC 85     	ld (CTRL_DESPLZ),a
 533+ 9629 3A F8 85     	ld a,(Cuad_objeto)
 534+ 962C E6 01        	and 1
 535+ 962E 28 0A        	jr z,2F
 536+ 9630 2A E6 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9633 2B           	dec hl
 538+ 9634 22 E6 85     	ld (Posicion_actual),hl
 539+ 9637 CD B6 96     	call Genera_coordenadas
 540+ 963A
 541+ 963A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 963A
 543+ 963A CD 8E 88     2 call Inicia_puntero_objeto_izq
 544+ 963D C9           3 ret
 545+ 963E
 546+ 963E              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 963E              ;
 548+ 963E              ;	19/10/22
 549+ 963E              ;
 550+ 963E              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 963E              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 963E
 553+ 963E 3A EA 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 9641 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9643 C9           	ret
 556+ 9644
 557+ 9644              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 9644              ;
 559+ 9644              ;	19/10/22
 560+ 9644              ;
 561+ 9644              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 9644              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 9644
 564+ 9644 3A EA 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 9647 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 9649 C9           	ret
 567+ 964A
 568+ 964A              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 964A              ;
 570+ 964A              ;	24/7/22
 571+ 964A              ;
 572+ 964A              ;	Inc_CTRL_DESPLZ
 573+ 964A              ;
 574+ 964A              ;
 575+ 964A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 964A
 577+ 964A 21 EC 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 964D 3A FA 85     	ld a,(Vel_right)
 579+ 9650 A7           	and a
 580+ 9651 28 06        	jr z,1F
 581+ 9653 47           	ld b,a
 582+ 9654 34           3 inc (hl)
 583+ 9655 10 FD        	djnz 3B
 584+ 9657 18 01        	jr 2F
 585+ 9659 34           1 inc (hl)
 586+ 965A C9           2 ret
 587+ 965B
 588+ 965B              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 965B              ;
 590+ 965B              ;	5/2/23
 591+ 965B              ;
 592+ 965B              ;	Dec_CTRL_DESPLZ
 593+ 965B              ;
 594+ 965B              ;
 595+ 965B              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 965B
 597+ 965B 21 EC 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 965E 3A F9 85     	ld a,(Vel_left)
 599+ 9661 A7           	and a
 600+ 9662 28 06        	jr z,1F
 601+ 9664 47           	ld b,a
 602+ 9665 35           3 dec (hl)
 603+ 9666 10 FD        	djnz 3B
 604+ 9668 18 01        	jr 2F
 605+ 966A 35           1 dec (hl)
 606+ 966B C9           2 ret
 607+ 966C
 608+ 966C              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 966C
 610+ 966C 2A E6 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 966F 01 1F 00     	ld bc,31
 612+ 9672 A7           	and a
 613+ 9673 ED 4A        	adc hl,bc
 614+ 9675 22 E6 85     	ld (Posicion_actual),hl
 615+ 9678 21 12 86     	ld hl,Ctrl_0														; $xxx1
 616+ 967B CB C6        	set 0,(hl)
 617+ 967D C9           	ret
 618+ 967E
 619+ 967E              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 967E
 621+ 967E 2A E6 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9681 01 1F 00     	ld bc,31
 623+ 9684 A7           	and a
 624+ 9685 ED 42        	sbc hl,bc
 625+ 9687 22 E6 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 968A 21 12 86     	ld hl,Ctrl_0
 627+ 968D CB CE        	set 1,(hl)
 628+ 968F C9           	ret
 629+ 9690
 630+ 9690              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9690
 632+ 9690 24           Reaparece_abajo inc h
 633+ 9691 01 E0 17     	ld bc,$17e0
 634+ 9694 A7           	and a
 635+ 9695 ED 4A        	adc hl,bc
 636+ 9697 22 E6 85     	ld (Posicion_actual),hl
 637+ 969A 21 12 86     	ld hl,Ctrl_0
 638+ 969D CB D6        	set 2,(hl)
 639+ 969F C9           	ret
 640+ 96A0
 641+ 96A0              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 96A0
 643+ 96A0 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 96A3 A7           	and a
 645+ 96A4 ED 42        	sbc hl,bc
 646+ 96A6 22 E6 85     	ld (Posicion_actual),hl
 647+ 96A9 21 12 86     	ld hl,Ctrl_0
 648+ 96AC CB DE        	set 3,(hl)
 649+ 96AE C9           	ret
 650+ 96AF
 651+ 96AF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 96AF
 653+ 96AF 2A F6 85     Reinicio ld hl,(Posicion_inicio)
 654+ 96B2 22 E6 85     	ld (Posicion_actual),hl
 655+ 96B5 C9           	ret
# file closed: Direcciones.asm
1070  96B6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 96B6              ; ------------------------------------------------------------------------
   2+ 96B6              ;
   3+ 96B6              ;	02/04/23
   4+ 96B6              ;
   5+ 96B6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 96B6              ;	Fila superior "0", Columna izquierda "0".
   7+ 96B6              ;
   8+ 96B6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 96B6              ;
  10+ 96B6              ;	Modifica: A,BC y DE.
  11+ 96B6
  12+ 96B6 C5           Genera_coordenadas push bc
  13+ 96B7 E5           	push hl
  14+ 96B8 D5           	push de
  15+ 96B9
  16+ 96B9 2A E6 85     	ld hl,(Posicion_actual)
  17+ 96BC
  18+ 96BC 7D           	ld a,l
  19+ 96BD E6 1F        	and $1f
  20+ 96BF 32 EA 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 96C2
  22+ 96C2 CD 8A 93     	call calcula_tercio
  23+ 96C5 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 96C6
  25+ 96C6 1E 00        	ld e,0
  26+ 96C8 7D           	ld a,l
  27+ 96C9 E6 E0        	and $e0
  28+ 96CB 28 01        	jr z,1F
  29+ 96CD 04           	inc b
  30+ 96CE
  31+ 96CE 04           1 inc b
  32+ 96CF 05           	dec b
  33+ 96D0 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 96D2              ;														; _ , salimos.
  35+ 96D2 1C           3 inc e
  36+ 96D3 D6 20        	sub 32
  37+ 96D5 20 FB        	jr nz,3B
  38+ 96D7 10 F5        	djnz 1B
  39+ 96D9
  40+ 96D9 7B           2 ld a,e
  41+ 96DA 32 EB 85     	ld (Coordenada_y),a
  42+ 96DD
  43+ 96DD D1           	pop de
  44+ 96DE E1           	pop hl
  45+ 96DF C1           	pop bc
  46+ 96E0
  47+ 96E0 C9           	ret
  48+ 96E1
  49+ 96E1              ; ------------------------------------------------------------------------
  50+ 96E1              ;	28/03/23
  51+ 96E1              ;
  52+ 96E1              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 96E1              ;	Fila superior "0", Columna izquierda "0".
  54+ 96E1              ;
  55+ 96E1              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 96E1              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 96E1              ;
  58+ 96E1              ;		DE="$120d"
  59+ 96E1              ;
  60+ 96E1              ;		D, (Coordenada_X), Columnas, $12
  61+ 96E1              ;		E, (Coordenada_y), Filas, $0d
  62+ 96E1              ;
  63+ 96E1              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 96E1
  65+ 96E1              ;	Modifica: A,BC y DE.
  66+ 96E1
  67+ 96E1
  68+ 96E1              Genera_coordenadas_disparo
  69+ 96E1
  70+ 96E1              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 96E1
  72+ 96E1 7D           	ld a,l
  73+ 96E2 E6 1F        	and $1f
  74+ 96E4 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 96E5 CD 8A 93     	call calcula_tercio
  76+ 96E8 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 96E9 1E 00        	ld e,0
  78+ 96EB 7D           	ld a,l
  79+ 96EC E6 E0        	and $e0
  80+ 96EE 28 01        	jr z,1F
  81+ 96F0 04           	inc b
  82+ 96F1 1C           1 inc e
  83+ 96F2 D6 20        	sub 32
  84+ 96F4 20 FB        	jr nz,1B
  85+ 96F6 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 96F8 C9           	ret
  87+ 96F9
# file closed: Genera_coordenadas.asm
1071  96F9              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 96F9
   2+ 96F9
   3+ 96F9              ;   11/8/22
   4+ 96F9              ;
   5+ 96F9              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 96F9              ;
   7+ 96F9              ;   Mov_obj.asm
   8+ 96F9              ;
   9+ 96F9              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 96F9              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 96F9              ;
  12+ 96F9              ;   Codificación:
  13+ 96F9              ;
  14+ 96F9              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 96F9
  16+ 96F9              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 96F9
  18+ 96F9 02 40 00     Arriba db 2,%01000000,0
  19+ 96FC 02 80 00     Abajo db 2,%10000000,0
  20+ 96FF 02 20 00     Derecha db 2,%00100000,0
  21+ 9702 02 10 00     Izquierda db 2,%00010000,0
  22+ 9705 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9709 60 42 60 40
  22+ 970D 63
  23+ 970E 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9712 22 A3 80 A0
  24+ 9716 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 971A 84 A0 83 A0
  25+ 971E 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9722 80 A3 22 A0
  26+ 9726 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 972A 40 60 42 60
  27+ 972E 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9732
  29+ 9732 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9736 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 973A 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 973E 84 00
  32+ 9740 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9744 84 00
  33+ 9746 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 974A 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 974E 1F 1F 1F 1F
  35+ 9752 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9756 1F 1F 1F 1F
  35+ 975A 1F
  36+ 975B 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 975F 2F 2F 2F 2F
  36+ 9763 2F 2F
  37+ 9765 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9769 2F 2F 00
  38+ 976C
  39+ 976C              ; ----- ----- ----- ----- -----
  40+ 976C
  41+ 976C 4A 97        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 976E 46 97        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9770 02 97        Indice_mov_Izquierda defw Izquierda
  44+ 9772 FF 96        Indice_mov_Derecha defw Derecha
  45+ 9774 FC 96        Indice_mov_Abajo defw Abajo
  46+ 9776 F9 96        Indice_mov_Arriba defw Arriba
  47+ 9778 36 97        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 977A 3A 97        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 977C 32 97        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 977E 40 97        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9780 05 97        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9782              ; ----- ----- ----- ----- -----
  53+ 9782
  54+ 9782 3A 19 86     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9785 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9786 28 02            jr z,1F
  57+ 9788 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 978A 3A 1A 86     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 978D C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 978F 32 1A 86         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9792              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9792 2A 17 86         ld hl,(Puntero_mov)
  63+ 9795 7E               ld a,(hl)
  64+ 9796 32 19 86         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9799 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 979A 22 17 86         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 979D
  68+ 979D 3A 1B 86     Decoder ld a,(Repetimos_db)
  69+ 97A0 A7               and a
  70+ 97A1 20 0C            jr nz,12F
  71+ 97A3 2A 17 86         ld hl,(Puntero_mov)
  72+ 97A6 7E               ld a,(hl)
  73+ 97A7 A7               and a
  74+ 97A8 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 97AA E6 0F            and $0f
  76+ 97AC 32 1B 86         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 97AF              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 97AF 2A 17 86     12 ld hl,(Puntero_mov)
  79+ 97B2 CB 7E            bit 7,(hl)
  80+ 97B4 28 03            jr z,2F
  81+ 97B6 CD A8 93         call Mov_down
  82+ 97B9 2A 17 86     2 ld hl, (Puntero_mov)
  83+ 97BC CB 76            bit 6,(hl)
  84+ 97BE 28 03            jr z,3F
  85+ 97C0 CD D6 93         call Mov_up
  86+ 97C3 2A 17 86     3 ld hl, (Puntero_mov)
  87+ 97C6 CB 6E            bit 5,(hl)
  88+ 97C8 28 03            jr z,4F
  89+ 97CA CD 04 94         call Mov_right
  90+ 97CD 2A 17 86     4 ld hl, (Puntero_mov)
  91+ 97D0 CB 66            bit 4,(hl)
  92+ 97D2 28 03            jr z,5F
  93+ 97D4 CD 22 95         call Mov_left
  94+ 97D7
  95+ 97D7              ; ---------- --------- --------- ---------- ----------
  96+ 97D7
  97+ 97D7 3A 1B 86     5 ld a,(Repetimos_db)
  98+ 97DA A7               and a
  99+ 97DB 28 07            jr z,6F
 100+ 97DD 3D               dec a
 101+ 97DE 32 1B 86         ld (Repetimos_db),a
 102+ 97E1 28 01            jr z,6f
 103+ 97E3 C9           11 ret
 104+ 97E4 21 19 86     6 ld hl,Contador_db_mov
 105+ 97E7 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 97E8 2A 17 86         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 97EB 23               inc hl
 108+ 97EC 22 17 86         ld (Puntero_mov),hl
 109+ 97EF 18 F2            jr 11B
 110+ 97F1 2A 15 86     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 97F4 3A 1A 86         ld a,(Incrementa_puntero)
 112+ 97F7 47               ld b,a
 113+ 97F8 23           8 inc hl
 114+ 97F9 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 97FB 5E               ld e,(hl)
 116+ 97FC 23               inc hl
 117+ 97FD 56               ld d,(hl)
 118+ 97FE EB               ex de,hl
 119+ 97FF 22 17 86         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9802 18 DF            jr 11B
 121+ 9804
 122+ 9804              ; ---------- --------- --------- ---------- ----------
 123+ 9804              ;
 124+ 9804              ;   11/8/22
 125+ 9804              ;
 126+ 9804              ;   Prepara_Puntero_mov
 127+ 9804
 128+ 9804 E5           Prepara_Puntero_mov push hl
 129+ 9805 D5               push de
 130+ 9806 2A 15 86         ld hl,(Puntero_indice_mov)
 131+ 9809 5E               ld e,(hl)
 132+ 980A 23               inc hl
 133+ 980B 56               ld d,(hl)
 134+ 980C EB               ex de,hl
 135+ 980D 22 17 86         ld (Puntero_mov),hl
 136+ 9810 D1               pop de
 137+ 9811 E1               pop hl
 138+ 9812 C9               ret
 139+ 9813
 140+ 9813              ; ---------- --------- --------- ---------- ----------
 141+ 9813              ;
 142+ 9813              ;   11/8/22
 143+ 9813              ;
 144+ 9813              ;   Reinicia_el_movimiento
 145+ 9813
 146+ 9813 CD 04 98     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9816 AF               xor a
 148+ 9817 32 19 86         ld (Contador_db_mov),a
 149+ 981A 32 1A 86         ld (Incrementa_puntero),a
 150+ 981D C3 82 97         jp Movimiento
 151+ 9820 C9               ret
 152+ 9821              ; ---------- --------- --------- ---------- ----------
 153+ 9821
 154+ 9821
 155+ 9821
 156+ 9821
 157+ 9821
 158+ 9821
 159+ 9821
 160+ 9821
 161+ 9821
 162+ 9821
 163+ 9821
 164+ 9821
 165+ 9821
 166+ 9821
 167+ 9821
 168+ 9821
 169+ 9821
 170+ 9821
# file closed: Patrones_de_mov.asm
1072  9821              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9821              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9821              ;
   3+ 9821              ;	3/1/23
   4+ 9821              ;
   5+ 9821              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9821
   7+ 9821              ;	ADC HL,SP	LD (addr),SP
   8+ 9821              ;	ADD HL,SP	LD SP,(addr)
   9+ 9821              ;	ADD IX,SP	LD SP,nn
  10+ 9821              ; 	ADD IY,SP	LD SP,HL
  11+ 9821              ;				LD SP,IX
  12+ 9821              ;	DEC SP		LD SP,IY
  13+ 9821
  14+ 9821              ;	EX (SP),HL
  15+ 9821              ;	EX (SP),IX
  16+ 9821              ;	EX (SP),IY
  17+ 9821
  18+ 9821              ;	INC SP
  19+ 9821
  20+ 9821
  21+ 9821                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 2B 86      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 21 86         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 31 86         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 2F 86     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 31 86         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 2F 86     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 2B 86  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1073  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1074  7FE6
1075  7FE6              	SAVESNA "Pruebas.sna", START
1076  7FE6
1077  7FE6
1078  7FE6
# file closed: Banco_de_pruebas.asm
