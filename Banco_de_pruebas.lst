# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 95 8A     	call Frame
  15  A104
  16  A104 3A C8 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
 205+ 83E8
 206+ 83E8 EE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83EA 1E 84        	defw Explosion_2x3_2
 208+ 83EC 4E 84        	defw Explosion_2x3_3
 209+ 83EE
 210+ 83EE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83F2 10 00 04 38
 211+ 83F6 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 83FA 02 E6 80 01
 212+ 83FE B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8402 00 03 DD 80
 213+ 8406 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 840A 3B 80 01 9D
 214+ 840E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8412 02 FD 80 03
 215+ 8416 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 841A 00 08 00 00
 216+ 841E
 217+ 841E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8422 38 10 03 BC
 218+ 8426 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 842A 04 06 C0 00
 219+ 842E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8432 00 03 DD 80
 220+ 8436 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 843A 3A 70 01 9C
 221+ 843E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8442 04 F8 80 06
 222+ 8446 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 844A 00 00 00 00
 223+ 844E
 224+ 844E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8452 00 20 08 00
 225+ 8456 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 845A 00 06 00 00
 226+ 845E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8462 00 00 14 30
 227+ 8466 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 846A 38 00 01 08
 228+ 846E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8472 00 80 00 04
 229+ 8476 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 847A 10 08 00 20
 230+ 847E
 231+ 847E              ; ------------------------------------------
 232+ 847E
 233+ 847E 84 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8480 A4 84        	defw Explosion_2x2_2
 235+ 8482 C4 84        	defw Explosion_2x2_3
 236+ 8484
 237+ 8484 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8488 43 84 37 D8
 238+ 848C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8490 17 F0 3D D8
 239+ 8494 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 8498 19 D0 1F 60
 240+ 849C 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A0 40 00 80 00
 241+ 84A4
 242+ 84A4
 243+ 84A4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84A8 3B C2 60 0C
 244+ 84AC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B0 07 F0 3D D8
 245+ 84B4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84B8 19 C6 1F 64
 246+ 84BC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C0 80 00 00 00
 247+ 84C4
 248+ 84C4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84C8 88 04 10 0C
 249+ 84CC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D0 81 E0 01 43
 250+ 84D4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84D8 10 80 18 00
 251+ 84DC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E0 60 01 80 02
 252+ 84E4
# file closed: Sprites_e_indices.asm
  23  84E4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84E4
   2+ 84E4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84E4
   4+ 84E4              ; 13/05/23
   5+ 84E4
   6+ 84E4              ; Control. %00000001 00000001
   7+ 84E4              ;
   8+ 84E4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84E4              ;                    _ hacen las entidades hacia abajo.
  10+ 84E4              ;
  11+ 84E4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84E4
  13+ 84E4 EA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84E6 F2 84        	defw Disparo_2A
  15+ 84E8 FA 84        	defw Disparo_3A
  16+ 84EA
  17+ 84EA 00 00        Disparo_1A defw 0									; Control.
  18+ 84EC 00 00        	defw 0											; Puntero objeto.
  19+ 84EE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F0 00 00        	defw 0											; Rutina de impresión.
  21+ 84F2
  22+ 84F2 00 00        Disparo_2A defw 0									; Control.
  23+ 84F4 00 00        	defw 0											; Puntero objeto.
  24+ 84F6 00 00        	defw 0											; Puntero de impresión.
  25+ 84F8 00 00        	defw 0											; Rutina de impresión.
  26+ 84FA
  27+ 84FA 00 00        Disparo_3A defw 0
  28+ 84FC
  29+ 84FC 12 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 84FE 1A 85        	defw Disparo_2
  31+ 8500 22 85        	defw Disparo_3
  32+ 8502 2A 85        	defw Disparo_4
  33+ 8504 32 85        	defw Disparo_5
  34+ 8506 3A 85        	defw Disparo_6
  35+ 8508 42 85        	defw Disparo_7
  36+ 850A 4A 85        	defw Disparo_8
  37+ 850C 52 85        	defw Disparo_9
  38+ 850E 5A 85        	defw Disparo_10
  39+ 8510 62 85        	defw Disparo_11
  40+ 8512
  41+ 8512 00 00        Disparo_1 defw 0									; Control.
  42+ 8514 00 00        	defw 0											; Puntero objeto.
  43+ 8516 00 00        	defw 0											; Puntero de impresión.
  44+ 8518 00 00        	defw 0											; Rutina de impresión.
  45+ 851A
  46+ 851A 00 00        Disparo_2 defw 0									; Control.
  47+ 851C 00 00        	defw 0											; Puntero objeto.
  48+ 851E 00 00        	defw 0											; Puntero de impresión.
  49+ 8520 00 00        	defw 0											; Rutina de impresión.
  50+ 8522
  51+ 8522 00 00        Disparo_3 defw 0									; Control.
  52+ 8524 00 00        	defw 0											; Puntero objeto.
  53+ 8526 00 00        	defw 0											; Puntero de impresión.
  54+ 8528 00 00        	defw 0											; Rutina de impresión.
  55+ 852A
  56+ 852A 00 00        Disparo_4 defw 0									; Control.
  57+ 852C 00 00        	defw 0											; Puntero objeto.
  58+ 852E 00 00        	defw 0											; Puntero de impresión.
  59+ 8530 00 00        	defw 0											; Rutina de impresión.
  60+ 8532
  61+ 8532 00 00        Disparo_5 defw 0									; Control.
  62+ 8534 00 00        	defw 0											; Puntero objeto.
  63+ 8536 00 00        	defw 0											; Puntero de impresión.
  64+ 8538 00 00        	defw 0											; Rutina de impresión.
  65+ 853A
  66+ 853A 00 00        Disparo_6 defw 0									; Control.
  67+ 853C 00 00        	defw 0											; Puntero objeto.
  68+ 853E 00 00        	defw 0											; Puntero de impresión.
  69+ 8540 00 00        	defw 0											; Rutina de impresión.
  70+ 8542
  71+ 8542 00 00        Disparo_7 defw 0									; Control.
  72+ 8544 00 00        	defw 0											; Puntero objeto.
  73+ 8546 00 00        	defw 0											; Puntero de impresión.
  74+ 8548 00 00        	defw 0											; Rutina de impresión.
  75+ 854A
  76+ 854A 00 00        Disparo_8 defw 0									; Control.
  77+ 854C 00 00        	defw 0											; Puntero objeto.
  78+ 854E 00 00        	defw 0											; Puntero de impresión.
  79+ 8550 00 00        	defw 0											; Rutina de impresión.
  80+ 8552
  81+ 8552 00 00        Disparo_9 defw 0									; Control.
  82+ 8554 00 00        	defw 0											; Puntero objeto.
  83+ 8556 00 00        	defw 0											; Puntero de impresión.
  84+ 8558 00 00        	defw 0											; Rutina de impresión.
  85+ 855A
  86+ 855A 00 00        Disparo_10 defw 0									; Control.
  87+ 855C 00 00        	defw 0											; Puntero objeto.
  88+ 855E 00 00        	defw 0											; Puntero de impresión.
  89+ 8560 00 00        	defw 0											; Rutina de impresión.
  90+ 8562
  91+ 8562 00 00        Disparo_11 defw 0
  92+ 8564
  93+ 8564              ; -------------------------------------------------------------------------------------
  94+ 8564
  95+ 8564              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8564
  97+ 8564 BA 85        	defw Caja_1
  98+ 8566 F8 85        	defw Caja_2
  99+ 8568 36 86        	defw Caja_3
 100+ 856A 74 86        	defw Caja_4
 101+ 856C B2 86        	defw Caja_5
 102+ 856E F0 86        	defw Caja_6
 103+ 8570 2E 87        	defw Caja_7
 104+ 8572 6C 87        	defw Caja_8
 105+ 8574 AA 87        	defw Caja_9
 106+ 8576 E8 87        	defw Caja_10
 107+ 8578              ;	...
 108+ 8578              ;	...
 109+ 8578              ;	+ entidades ...
 110+ 8578 00 00        	defw 0
 111+ 857A 00 00        	defw 0
 112+ 857C
 113+ 857C              ; ---------- ---------- ---------- ---------- ----------
 114+ 857C
 115+ 857C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 857E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8580 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8582 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8585
 120+ 8585 05           	db %00000101									; (Attr).
 121+ 8586 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8588 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 858A
 124+ 858A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 858C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 858E
 127+ 858E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8590 04           	db 4 											; (Cuad_objeto).
 129+ 8591 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8595
 131+ 8595 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 8596
 133+ 8596 00 00        	db 0,0											; Variables_de_borrado
 134+ 8598 00 00        	defw 0											;	" " " " " " "
 135+ 859A 00 00        	defw 0											;	" " " " " " "
 136+ 859C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A0
 138+ 85A0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00        	defw 0											;	" " " " " " "
 141+ 85A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85AA
 143+ 85AA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85AD
 145+ 85AD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85B4
 148+ 85B4 00           	db 0 											; (Columnas).
 149+ 85B5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85BA
 152+ 85BA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85BA
 154+ 85BA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85BC 00 00        	defw 0											; (Posicion_actual).
 156+ 85BE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85C3
 159+ 85C3 00           	db %00000000 									; (Attr).
 160+ 85C4
 161+ 85C4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85C6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85CC
 166+ 85CC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85CE 00           	db 0											; (Cuad_objeto).
 168+ 85CF
 169+ 85CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85D3
 171+ 85D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85D4
 173+ 85D4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85D6 00 00        	defw 0											;	" " " " " " "
 175+ 85D8 00 00        	defw 0											;	" " " " " " "
 176+ 85DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85DE
 178+ 85DE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85E0 00 00        	defw 0											;	" " " " " " "
 180+ 85E2 00 00        	defw 0											;	" " " " " " "
 181+ 85E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85E8
 183+ 85E8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85EB
 185+ 85EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 85F2
 188+ 85F2 00           	db 0 											; (Columnas).
 189+ 85F3 00 00        	defw 0											; (Limite_horizontal).
 190+ 85F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 191+ 85F8
 192+ 85F8              ; ---------- ---------- ---------- ---------- ----------
 193+ 85F8
 194+ 85F8 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 85FA 00 00        	defw 0											; (Posicion_actual).
 196+ 85FC 00 00        	defw 0 											; (Puntero_objeto).
 197+ 85FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8601
 199+ 8601 00           	db %00000000 									; (Attr).
 200+ 8602
 201+ 8602 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8604 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8606 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 8608 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Posicion_inicio).
 207+ 860C 00           	db 0											; (Cuad_objeto).
 208+ 860D
 209+ 860D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8611
 211+ 8611 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8612
 213+ 8612 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8614 00 00        	defw 0											;	" " " " " " "
 215+ 8616 00 00        	defw 0											;	" " " " " " "
 216+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 861C
 218+ 861C 00 00        	db 0,0											; Variables_de_pintado
 219+ 861E 00 00        	defw 0											;	" " " " " " "
 220+ 8620 00 00        	defw 0											;	" " " " " " "
 221+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8626
 223+ 8626 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 8629
 225+ 8629 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 862D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8630
 228+ 8630 00           	db 0 											; (Columnas).
 229+ 8631 00 00        	defw 0											; (Limite_horizontal).
 230+ 8633 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 8636
 232+ 8636              ; ---------- ---------- ---------- ---------- ----------
 233+ 8636
 234+ 8636 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8638 00 00        	defw 0											; (Posicion_actual).
 236+ 863A 00 00        	defw 0 											; (Puntero_objeto).
 237+ 863C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 863F
 239+ 863F 00           	db %00000000 									; (Attr).
 240+ 8640
 241+ 8640 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8642 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8644 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8646 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8648
 246+ 8648 00 00        	defw 0											; (Posicion_inicio).
 247+ 864A 00           	db 0											; (Cuad_objeto).
 248+ 864B
 249+ 864B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 864F
 251+ 864F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8650
 253+ 8650 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8652 00 00        	defw 0											;	" " " " " " "
 255+ 8654 00 00        	defw 0											;	" " " " " " "
 256+ 8656 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 865A
 258+ 865A 00 00        	db 0,0											; Variables_de_pintado
 259+ 865C 00 00        	defw 0											;	" " " " " " "
 260+ 865E 00 00        	defw 0											;	" " " " " " "
 261+ 8660 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8664
 263+ 8664 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8667
 265+ 8667 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 866B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 866E
 268+ 866E 00           	db 0 											; (Columnas).
 269+ 866F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8671 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 271+ 8674
 272+ 8674              ; ---------- ---------- ---------- ---------- ----------
 273+ 8674
 274+ 8674 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8676 00 00        	defw 0											; (Posicion_actual).
 276+ 8678 00 00        	defw 0 											; (Puntero_objeto).
 277+ 867A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 867D
 279+ 867D 00           	db %00000000 									; (Attr).
 280+ 867E
 281+ 867E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8680 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8682 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8684 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8686
 286+ 8686 00 00        	defw 0											; (Posicion_inicio).
 287+ 8688 00           	db 0											; (Cuad_objeto).
 288+ 8689
 289+ 8689 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 868D
 291+ 868D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 868E
 293+ 868E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8690 00 00        	defw 0											;	" " " " " " "
 295+ 8692 00 00        	defw 0											;	" " " " " " "
 296+ 8694 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8698
 298+ 8698 00 00        	db 0,0											; Variables_de_pintado
 299+ 869A 00 00        	defw 0											;	" " " " " " "
 300+ 869C 00 00        	defw 0											;	" " " " " " "
 301+ 869E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 86A2
 303+ 86A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 86A5
 305+ 86A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 86A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 86AC
 308+ 86AC 00           	db 0 											; (Columnas).
 309+ 86AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 86AF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86B2
 312+ 86B2              ; ---------- ---------- ---------- ---------- ----------
 313+ 86B2
 314+ 86B2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86B4 00 00        	defw 0											; (Posicion_actual).
 316+ 86B6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86BB
 319+ 86BB 00           	db %00000000 									; (Attr).
 320+ 86BC
 321+ 86BC 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86BE 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86C4
 326+ 86C4 00 00        	defw 0											; (Posicion_inicio).
 327+ 86C6 00           	db 0											; (Cuad_objeto).
 328+ 86C7
 329+ 86C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86CB
 331+ 86CB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86CC
 333+ 86CC 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 86CE 00 00        	defw 0											;	" " " " " " "
 335+ 86D0 00 00        	defw 0											;	" " " " " " "
 336+ 86D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 86D6
 338+ 86D6 00 00        	db 0,0											; Variables_de_pintado
 339+ 86D8 00 00        	defw 0											;	" " " " " " "
 340+ 86DA 00 00        	defw 0											;	" " " " " " "
 341+ 86DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 86E0
 343+ 86E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 86E3
 345+ 86E3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86EA
 348+ 86EA 00           	db 0 											; (Columnas).
 349+ 86EB 00 00        	defw 0											; (Limite_horizontal).
 350+ 86ED 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 351+ 86F0
 352+ 86F0              ; ---------- ---------- ---------- ---------- ----------
 353+ 86F0
 354+ 86F0 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 86F2 00 00        	defw 0											; (Posicion_actual).
 356+ 86F4 00 00        	defw 0 											; (Puntero_objeto).
 357+ 86F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 86F9
 359+ 86F9 00           	db %00000000 									; (Attr).
 360+ 86FA
 361+ 86FA 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 86FC 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 86FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 8700 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8702
 366+ 8702 00 00        	defw 0											; (Posicion_inicio).
 367+ 8704 00           	db 0											; (Cuad_objeto).
 368+ 8705
 369+ 8705 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8709
 371+ 8709 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 870A
 373+ 870A 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 870C 00 00        	defw 0											;	" " " " " " "
 375+ 870E 00 00        	defw 0											;	" " " " " " "
 376+ 8710 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8714
 378+ 8714 00 00        	db 0,0											; Variables_de_pintado
 379+ 8716 00 00        	defw 0											;	" " " " " " "
 380+ 8718 00 00        	defw 0											;	" " " " " " "
 381+ 871A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 871E
 383+ 871E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 8721
 385+ 8721 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8725 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8728
 388+ 8728 00           	db 0 											; (Columnas).
 389+ 8729 00 00        	defw 0											; (Limite_horizontal).
 390+ 872B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 391+ 872E
 392+ 872E              ; ---------- ---------- ---------- ---------- ----------
 393+ 872E
 394+ 872E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 8730 00 00        	defw 0											; (Posicion_actual).
 396+ 8732 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8734 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8737
 399+ 8737 00           	db %00000000 									; (Attr).
 400+ 8738
 401+ 8738 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 873A 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 873C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 8740
 406+ 8740 00 00        	defw 0											; (Posicion_inicio).
 407+ 8742 00           	db 0											; (Cuad_objeto).
 408+ 8743
 409+ 8743 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8747
 411+ 8747 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8748
 413+ 8748 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 874A 00 00        	defw 0											;	" " " " " " "
 415+ 874C 00 00        	defw 0											;	" " " " " " "
 416+ 874E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8752
 418+ 8752 00 00        	db 0,0											; Variables_de_pintado
 419+ 8754 00 00        	defw 0											;	" " " " " " "
 420+ 8756 00 00        	defw 0											;	" " " " " " "
 421+ 8758 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 875C
 423+ 875C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 875F
 425+ 875F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8763 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8766
 428+ 8766 00           	db 0 											; (Columnas).
 429+ 8767 00 00        	defw 0											; (Limite_horizontal).
 430+ 8769 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 431+ 876C
 432+ 876C              ; ---------- ---------- ---------- ---------- ----------
 433+ 876C
 434+ 876C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 876E 00 00        	defw 0											; (Posicion_actual).
 436+ 8770 00 00        	defw 0 											; (Puntero_objeto).
 437+ 8772 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8775
 439+ 8775 00           	db %00000000 									; (Attr).
 440+ 8776
 441+ 8776 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8778 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 877A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 877C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 877E
 446+ 877E 00 00        	defw 0											; (Posicion_inicio).
 447+ 8780 00           	db 0											; (Cuad_objeto).
 448+ 8781
 449+ 8781 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8785
 451+ 8785 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8786
 453+ 8786 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8788 00 00        	defw 0											;	" " " " " " "
 455+ 878A 00 00        	defw 0											;	" " " " " " "
 456+ 878C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 8790
 458+ 8790 00 00        	db 0,0											; Variables_de_pintado
 459+ 8792 00 00        	defw 0											;	" " " " " " "
 460+ 8794 00 00        	defw 0											;	" " " " " " "
 461+ 8796 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 879A
 463+ 879A 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 879D
 465+ 879D 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 87A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 87A4
 468+ 87A4 00           	db 0 											; (Columnas).
 469+ 87A5 00 00        	defw 0											; (Limite_horizontal).
 470+ 87A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 471+ 87AA
 472+ 87AA              ; ---------- ---------- ---------- ---------- ----------
 473+ 87AA
 474+ 87AA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 87AC 00 00        	defw 0											; (Posicion_actual).
 476+ 87AE 00 00        	defw 0 											; (Puntero_objeto).
 477+ 87B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 87B3
 479+ 87B3 00           	db %00000000 									; (Attr).
 480+ 87B4
 481+ 87B4 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 87B6 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 87B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 87BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 87BC
 486+ 87BC 00 00        	defw 0											; (Posicion_inicio).
 487+ 87BE 00           	db 0											; (Cuad_objeto).
 488+ 87BF
 489+ 87BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 87C3
 491+ 87C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 87C4
 493+ 87C4 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 87C6 00 00        	defw 0											;	" " " " " " "
 495+ 87C8 00 00        	defw 0											;	" " " " " " "
 496+ 87CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 87CE
 498+ 87CE 00 00        	db 0,0											; Variables_de_pintado
 499+ 87D0 00 00        	defw 0											;	" " " " " " "
 500+ 87D2 00 00        	defw 0											;	" " " " " " "
 501+ 87D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 87D8
 503+ 87D8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 87DB
 505+ 87DB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 87DF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 87E2
 508+ 87E2 00           	db 0 											; (Columnas).
 509+ 87E3 00 00        	defw 0											; (Limite_horizontal).
 510+ 87E5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 511+ 87E8
 512+ 87E8              ; ---------- ---------- ---------- ---------- ----------
 513+ 87E8
 514+ 87E8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87EA 00 00        	defw 0											; (Posicion_actual).
 516+ 87EC 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 87F1
 519+ 87F1 00           	db %00000000 									; (Attr).
 520+ 87F2
 521+ 87F2 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 87F4 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 87F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 87F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 87FA
 526+ 87FA 00 00        	defw 0											; (Posicion_inicio).
 527+ 87FC 00           	db 0											; (Cuad_objeto).
 528+ 87FD
 529+ 87FD 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 8801
 531+ 8801 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 8802
 533+ 8802 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 8804 00 00        	defw 0											;	" " " " " " "
 535+ 8806 00 00        	defw 0											;	" " " " " " "
 536+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 880C
 538+ 880C 00 00        	db 0,0											; Variables_de_pintado
 539+ 880E 00 00        	defw 0											;	" " " " " " "
 540+ 8810 00 00        	defw 0											;	" " " " " " "
 541+ 8812 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8816
 543+ 8816 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8819
 545+ 8819 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 881D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 8820
 548+ 8820 00           	db 0 											; (Columnas).
 549+ 8821 00 00        	defw 0											; (Limite_horizontal).
 550+ 8823 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8826
 552+ 8826              ; -------------------------------------------------------------------------------------
 553+ 8826              ;
 554+ 8826              ;	20/05/23
 555+ 8826              ;
 556+ 8826              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 8826              ;
 558+ 8826              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 8826              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 8826              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 8826              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 8826
 563+ 8826              Indice_de_entidades
 564+ 8826
 565+ 8826 30 88        	defw Entidad_1
 566+ 8828 40 88        	defw Entidad_2
 567+ 882A 50 88        	defw Entidad_3
 568+ 882C 60 88        	defw Entidad_4
 569+ 882E 70 88        	defw Entidad_5
 570+ 8830
 571+ 8830              ;	BADSAT, (Satélite malvado).
 572+ 8830
 573+ 8830 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 8832 04           	db %00000100									; (Attr).
 575+ 8833 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 8835 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 8837 3F 50        	defw $503f	                             	    ; (Posicion_inicio).
 578+ 8839 01           	db 1											; (Cuad_objeto).
 579+ 883A 02 02 01 02  	db 2,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 883E D5 9C        	defw Indice_mov_Escaloncitos_izquierda_arriba   ; (Puntero_indice_mov)
 581+ 8840
 582+ 8840 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 8842 02           	db %00000010									; (Attr).
 584+ 8843 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 8845 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8847 40 50        	defw $5040                                      ; (Posicion_inicio).
 587+ 8849 01           	db 1											; (Cuad_objeto).
 588+ 884A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 884E D9 9C        	defw Indice_mov_Onda_senoidal				    ; (Puntero_indice_mov)
 590+ 8850
 591+ 8850 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 8852 04           	db %00000100									; (Attr).
 593+ 8853 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 8855 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8857 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8859 01           	db 1											; (Cuad_objeto).
 597+ 885A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 885E D9 9C        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 599+ 8860
 600+ 8860 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 8862 01           	db %00000001									; (Attr).
 602+ 8863 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 8865 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8867 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8869 01           	db 1											; (Cuad_objeto).
 606+ 886A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 886E D7 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 8870
 609+ 8870 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 8872 01           	db %00000001									; (Attr).
 611+ 8873 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 8875 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8877 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8879 01           	db 1											; (Cuad_objeto).
 615+ 887A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 887E D3 9C        	defw Indice_mov_Escaloncitos_derecha_abajo							; (Puntero_indice_mov)
 617+ 8880
# file closed: Cajas_y_disparos.asm
  24  8880              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8880              ; 13/05/23
   2+ 8880
   3+ 8880              Indice_de_niveles
   4+ 8880
   5+ 8880 8E 88        	defw Nivel_1
   6+ 8882 90 88        	defw Nivel_2
   7+ 8884 9D 88        	defw Nivel_3
   8+ 8886 AD 88        	defw Nivel_4
   9+ 8888 BF 88        	defw Nivel_5
  10+ 888A
  11+ 888A              ;	...
  12+ 888A              ;	...
  13+ 888A              ;	+ Niveles ...
  14+ 888A
  15+ 888A 00 00        	defw 0
  16+ 888C 00 00        	defw 0
  17+ 888E
  18+ 888E 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 888F 05           	db 5
  20+ 8890 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 8891 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 8895 01 02
  22+ 8897 02 01 01 01  	db 2,1,1,1,1,2
  22+ 889B 01 02
  23+ 889D 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 889E 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88A2 01
  25+ 88A3 03 01 01 01  	db 3,1,1,1,1
  25+ 88A7 01
  26+ 88A8 03 01 01 01  	db 3,1,1,1,1
  26+ 88AC 01
  27+ 88AD 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88AE 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88B2 01
  29+ 88B3 04 01 01 01  	db 4,1,1,1,1
  29+ 88B7 01
  30+ 88B8 04 01 01 01  	db 4,1,1,1,1
  30+ 88BC 01
  31+ 88BD 02 03        	db 2,3
  32+ 88BF 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88C0 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88C4 01
  34+ 88C5 05 01 01 01  	db 5,1,1,1,1
  34+ 88C9 01
  35+ 88CA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88CE 01
  36+ 88CF 05 01 01 01  	db 5,1,1,1,1
  36+ 88D3 01
  37+ 88D4
  38+ 88D4              ;---------------------------------------------------------------------------------------------------------------
  39+ 88D4              ;
  40+ 88D4              ;   21/5/23
  41+ 88D4              ;
  42+ 88D4              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88D4              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88D4              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88D4              ;	_en la caja DRAW correspondiente.
  46+ 88D4              ;
  47+ 88D4              ;	MODIFICA: HL,DE y A.
  48+ 88D4              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88D4
  50+ 88D4              Inicializa_Punteros_de_nivel
  51+ 88D4
  52+ 88D4 21 80 88     	ld hl,Indice_de_niveles
  53+ 88D7 22 FC 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 88DA CD F8 8C     	call Extrae_address
  55+ 88DD 7E           	ld a,(hl)
  56+ 88DE 32 D1 89     	ld (Numero_de_entidades),a
  57+ 88E1 23           	inc hl
  58+ 88E2 22 FE 89     	ld (Datos_de_nivel),hl
  59+ 88E5 C9           	ret
  60+ 88E6
  61+ 88E6              ;---------------------------------------------------------------------------------------------------------------
  62+ 88E6              ;
  63+ 88E6              ;   13/5/23
  64+ 88E6              ;
  65+ 88E6              ;	Destruye A,BC,HL,DE
  66+ 88E6
  67+ 88E6              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 88E6              ;	_del juego.
  69+ 88E6
  70+ 88E6              Prepara_cajas
  71+ 88E6
  72+ 88E6              ; Preparamos los punteros de las cajas.
  73+ 88E6
  74+ 88E6 21 64 85     	ld hl,Indice_de_cajas
  75+ 88E9 CD F8 8C     	call Extrae_address
  76+ 88EC CD 29 89     	call Avanza_caja
  77+ 88EF
  78+ 88EF CD 6D 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 88F2
  80+ 88F2 2A FE 89     	ld hl,(Datos_de_nivel)
  81+ 88F5
  82+ 88F5              ; HL está en los datos del nivel correspondiente.
  83+ 88F5              ; B actuará como contador de cajas.
  84+ 88F5
  85+ 88F5 C5           1 push bc
  86+ 88F6
  87+ 88F6 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 88F7 CD 1A 89     	call PreparaBC
  89+ 88FA
  90+ 88FA 21 26 88     	ld hl,Indice_de_entidades
  91+ 88FD CD 22 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8900 22 D7 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8903
  94+ 8903 CD 33 89     	call Datos_de_entidad_a_caja
  95+ 8906
  96+ 8906 2A CF 89     	ld hl,(Indice_restore_caja)
  97+ 8909 CD F8 8C     	call Extrae_address
  98+ 890C CD 29 89     	call Avanza_caja
  99+ 890F
 100+ 890F 2A FE 89     	ld hl,(Datos_de_nivel)
 101+ 8912 23           	inc hl
 102+ 8913 22 FE 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8916
 104+ 8916 C1           	pop bc
 105+ 8917 10 DC        	djnz 1B
 106+ 8919 C9           	ret
 107+ 891A
 108+ 891A CB 27        PreparaBC sla a
 109+ 891C D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 891E 4F           	ld c,a
 111+ 891F 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8921 C9           	ret
 113+ 8922
 114+ 8922 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8923 ED 4A        	adc hl,bc
 116+ 8925 CD F8 8C     	call Extrae_address
 117+ 8928 C9           	ret
 118+ 8929
 119+ 8929 22 CB 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 892C 13           	inc de
 121+ 892D 13           	inc de
 122+ 892E EB           	ex de,hl
 123+ 892F 22 CF 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8932 C9           	ret
 125+ 8933
 126+ 8933              Datos_de_entidad_a_caja
 127+ 8933
 128+ 8933              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8933
 130+ 8933
 131+ 8933 ED 5B CB 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8937
 133+ 8937 01 02 00     	ld bc,2
 134+ 893A ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 893C
 136+ 893C 01 07 00     	ld bc,7
 137+ 893F CD 67 89     	call Situa_DE
 138+ 8942
 139+ 8942 01 05 00     	ld bc,5
 140+ 8945 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8947
 142+ 8947 01 04 00     	ld bc,4
 143+ 894A CD 67 89     	call Situa_DE
 144+ 894D
 145+ 894D 01 07 00     	ld bc,7
 146+ 8950 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8952
 148+ 8952 01 18 00     	ld bc,24
 149+ 8955 CD 67 89     	call Situa_DE
 150+ 8958
 151+ 8958 01 02 00     	ld bc,2
 152+ 895B ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 895D
 154+ 895D 01 0A 00     	ld bc,10
 155+ 8960 CD 67 89     	call Situa_DE
 156+ 8963
 157+ 8963 3E 03        	ld a,3
 158+ 8965 12           	ld (de),a 									; Vuelco (Frames_explosion).
 159+ 8966
 160+ 8966 C9           	ret
 161+ 8967
 162+ 8967 EB           Situa_DE ex de,hl
 163+ 8968 A7           	and a
 164+ 8969 ED 4A        	adc hl,bc
 165+ 896B EB           	ex de,hl
 166+ 896C C9           	ret
 167+ 896D
 168+ 896D              ;---------------------------------------------------------------------------------------------------------------
 169+ 896D              ;
 170+ 896D              ;	21/5/23
 171+ 896D              ;
 172+ 896D              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 173+ 896D              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 174+ 896D              ;
 175+ 896D              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 176+ 896D              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 177+ 896D              ;	_ total de entidades que contiene (Numero_de_entidades).
 178+ 896D              ;
 179+ 896D              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 180+ 896D              ;	MODIFICA: A y B.
 181+ 896D              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 182+ 896D
 183+ 896D              Admin_num_entidades
 184+ 896D
 185+ 896D              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 186+ 896D
 187+ 896D 3A D1 89     	ld a,(Numero_de_entidades)
 188+ 8970 A7           	and a
 189+ 8971              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 190+ 8971              ;	jr z,$
 191+ 8971              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 8971
 193+ 8971 20 03        	jr nz,3F
 194+ 8973
 195+ 8973              ;! RESET para pruebas. Omitir esta línea en modo normal.
 196+ 8973
 197+ 8973 CD D4 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 198+ 8976
 199+ 8976
 200+ 8976 3A D1 89     3 ld a,(Numero_de_entidades)
 201+ 8979 FE 0A        	cp 10
 202+ 897B 38 08        	jr c,1F
 203+ 897D
 204+ 897D              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 205+ 897D              ; Actualizamos variables.
 206+ 897D
 207+ 897D 3E 0A        	ld a,10
 208+ 897F 32 D2 89     	ld (Numero_parcial_de_entidades),a
 209+ 8982 47           	ld b,a
 210+ 8983 18 04        	jr 2F
 211+ 8985
 212+ 8985              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 213+ 8985              ; (Numero_de_entidades)="0".
 214+ 8985
 215+ 8985 32 D2 89     1 ld (Numero_parcial_de_entidades),a
 216+ 8988 47           	ld b,a
 217+ 8989 C9           2 ret
# file closed: Niveles.asm
  25  898A
  26  898A              ; ******************************************************************************************************************************************************************************************
  27  898A              ; Constantes.
  28  898A              ; ******************************************************************************************************************************************************************************************
  29  898A              ;
  30  898A              ; 25/05/23
  31  898A              ;
  32  898A              ; Constantes generales.
  33  898A              ;
  34  898A
  35  898A              Sprite_vacio equ $f000
  36  898A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  898A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  898A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  898A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  898A
  41  898A              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  898A              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  898A              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  898A              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  898A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  898A              ;                               				        ; De momento situamos este almacén en $7060.
  47  898A
  48  898A              ; ******************************************************************************************************************************************************************************************
  49  898A              ; Variables.
  50  898A              ; ******************************************************************************************************************************************************************************************
  51  898A              ;
  52  898A              ; 30/05/23
  53  898A              ;
  54  898A              ; Variables de DRAW. (Motor principal).
  55  898A              ;
  56  898A              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  898A
  58  898A 00           Filas db 0												; Filas. [DRAW]
  59  898B 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  898C 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  898E 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  8990 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  8991 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  8992
  65  8992              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  8992
  67  8992 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  8993              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  8993              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  8993 00           Attr db 0												; Atributos de la entidad:
  71  8994
  72  8994              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  8994              ;
  74  8994              ;	COLORES: 0 ..... NEGRO
  75  8994              ;    		 1 ..... AZUL
  76  8994              ; 			 2 ..... ROJO
  77  8994              ;			 3 ..... MAGENTA
  78  8994              ; 			 4 ..... VERDE
  79  8994              ; 			 5 ..... CIAN
  80  8994              ;			 6 ..... AMARILLO
  81  8994              ; 			 7 ..... BLANCO
  82  8994
  83  8994 00 00        Indice_Sprite_der defw 0
  84  8996 00 00        Indice_Sprite_izq defw 0
  85  8998 00 00        Puntero_DESPLZ_der defw 0
  86  899A 00 00        Puntero_DESPLZ_izq defw 0
  87  899C
  88  899C 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  899E 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  899F
  91  899F              ; Variables de objeto. (Características).
  92  899F
  93  899F 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89A0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89A1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89A2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89A3
  98  89A3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89A4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89A4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89A4
 102  89A4 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89A6 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89A8 00 00        	defw 0
 105  89AA 00 00 00 00  	db 0,0,0,0
 106  89AE
 107  89AE 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89B0 00 00        	defw 0
 109  89B2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89B4 00 00 00 00  	db 0,0,0,0
 111  89B8
 112  89B8              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89B8
 114  89B8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89B9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89B9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89B9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89B9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89B9              ;
 120  89B9              ; 														DESCRIPCIÖN:
 121  89B9              ;
 122  89B9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89B9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89B9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89B9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89B9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89B9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89B9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89B9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89B9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89B9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89B9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89B9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89B9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89B9              ;
 136  89B9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89B9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89B9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89B9
 140  89B9 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89BA
 142  89BA              ; Movimiento.
 143  89BA
 144  89BA 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89BB 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89BD 00 00        Puntero_mov defw 0
 147  89BF 00           Contador_db_mov db 0
 148  89C0 00           Incrementa_puntero db 0
 149  89C1 00           Repetimos_db db 0
 150  89C2
 151  89C2              ; Variables de funcionamiento. [DRAW].
 152  89C2
 153  89C2 00           Columnas db 0
 154  89C3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89C5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89C5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89C6
 158  89C6              ; variables de control general.
 159  89C6
 160  89C6 00           Ctrl_2 db 0
 161  89C7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89C7              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89C7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89C7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89C7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89C7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89C7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89C7              ;
 169  89C7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89C7
 171  89C7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89C8
 173  89C8              ; 62 Bytes por entidad.
 174  89C8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89C8              ;					         		---------;      ;---------
 176  89C8
 177  89C8
 178  89C8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89C8
 180  89C8 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89C9
 182  89C9              ;														DESCRIPCIÓN:
 183  89C9              ;
 184  89C9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89C9              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89C9              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89C9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89C9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89C9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89C9              ;														BIT 3, Recarga de nueva oleada.
 191  89C9              ;														BIT 4, Recarga de nueva oleada.
 192  89C9
 193  89C9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89CB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89CB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89CB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89CB
 198  89CB
 199  89CB
 200  89CB              ; Gestión de ENTIDADES y CAJAS.
 201  89CB
 202  89CB              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89CB 00 00        Puntero_store_caja defw 0
 204  89CD 00 00        Puntero_restore_caja defw 0
 205  89CF 00 00        Indice_restore_caja defw 0
 206  89D1 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  89D2 00           Numero_parcial_de_entidades db 0
 208  89D3 00           Entidades_en_curso db 0									; ..... ..... .....
 209  89D4 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  89D5              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  89D5              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  89D5              ;														; _ (Numero_de_malotes)="0".
 213  89D5 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  89D7 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  89D9              ;														; _ puntero (Indice_entidades).
 216  89D9
 217  89D9
 218  89D9              ;---------------------------------------------------------------------------------------------------------------
 219  89D9              ;
 220  89D9              ; Sirven para PINTAR.
 221  89D9
 222  89D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  89DB              ;														; _variable para almacenar lo posición del puntero_
 224  89DB              ; 														; _de pila, SP.
 225  89DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  89DD              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  89DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  89DF              ;														; _el snapshot de los registros de la siguiente entidad.
 229  89DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  89DF 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  89E1              ;														; _el snapshot de los registros del siguiente disparo.
 232  89E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  89E1
 234  89E1              ;---------------------------------------------------------------------------------------------------------------
 235  89E1
 236  89E1              ; Gestión de Disparos.
 237  89E1
 238  89E1 00           Numero_de_disparotes db 0
 239  89E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  89E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  89E6 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  89E7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  89E7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  89E7 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  89E9              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  89E9              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  89E9              ;														; _produzca colisión.
 248  89E9 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  89EB              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  89EB 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  89EE              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  89EE 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  89F1              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  89F1              ;---------------------------------------------------------------------------------------------------------------
 255  89F1
 256  89F1              ; Relojes y temporizaciones.
 257  89F1
 258  89F1 00           Contador_de_frames db 0
 259  89F2 00           Secundero db 0
 260  89F3 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 261  89F4              ;														; Repite la oleada de entidades.
 262  89F4 01           Habilita_disparo_Amadeus db 1
 263  89F5 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 264  89F6 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 265  89F7
 266  89F7 01           Habilita_disparo_entidad db 1
 267  89F8 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 268  89F9 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 269  89FA
 270  89FA              ;---------------------------------------------------------------------------------------------------------------
 271  89FA
 272  89FA              ; Gestión de FRAMES.
 273  89FA
 274  89FA 00           Switch db 0
 275  89FB
 276  89FB              ; Variables de Raster y localización en pantalla.
 277  89FB
 278  89FB              ;Temp_Raster defw $ff00
 279  89FB
 280  89FB              ;---------------------------------------------------------------------------------------------------------------
 281  89FB
 282  89FB              ; Gestión de NIVELES.
 283  89FB
 284  89FB 00           Nivel db 0												 ; Nivel actual del juego.
 285  89FC 00 00        Puntero_indice_NIVELES defw 0
 286  89FE 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 287  8A00              ; 														 ; _ que definen el NIVEL.
 288  8A00
 289  8A00
 290  8A00              ; Y todo comienza aquí .....
 291  8A00              ;
 292  8A00              ; Rutina principal *************************************************************************************************************************************************************************
 293  8A00              ;
 294  8A00              ;	14/11/22
 295  8A00
 296  8A00              START
 297  8A00
 298  8A00 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 299  8A03 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 300  8A05 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 301  8A07 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 302  8A09 F3           	DI
 303  8A0A
 304  8A0A 3E 07        	ld a,%00000111
 305  8A0C CD AD 98     	call Cls
 306  8A0F
 307  8A0F              ;	call Pinta_marco
 308  8A0F
 309  8A0F CD D4 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 310  8A12
 311  8A12              ;!! Aqui llamaremos a la rutina que hace copia de seguridad de las variables generales.
 312  8A12
 313  8A12 CD D1 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 314  8A15
 315  8A15 CD E6 88     4 call Prepara_cajas
 316  8A18
 317  8A18 CD A4 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 318  8A1B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 319  8A1B CD 81 8D     	call Restore_entidad
 320  8A1E
 321  8A1E 21 D2 89     	ld hl,Numero_parcial_de_entidades
 322  8A21 46           	ld b,(hl)
 323  8A22 04           	inc b
 324  8A23 05           	dec b
 325  8A24 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 326  8A26
 327  8A26              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 328  8A26              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 329  8A26              ;	Pintamos el resto de entidades:
 330  8A26
 331  8A26              ;	INICIA ENTIDADES !!!!!
 332  8A26
 333  8A26 C5           1 push bc  												; Guardo el contador de entidades.
 334  8A27 CD FE 8C     	call Inicia_Puntero_objeto
 335  8A2A CD C1 98     	call Recompone_posicion_inicio
 336  8A2D CD FD 92     	call Draw
 337  8A30 CD A0 7F     	call Guarda_foto_registros
 338  8A33 CD 46 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 339  8A36 C1           	pop bc
 340  8A37 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 341  8A39
 342  8A39              ;	call Pinta_marco
 343  8A39
 344  8A39              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 345  8A39
 346  8A39 3A C8 89     	ld a,(Ctrl_1)
 347  8A3C CB 5F        	bit 3,a
 348  8A3E 20 18        	jr nz,5F											; Loop
 349  8A40
 350  8A40              ; 	INICIA AMADEUS !!!!!
 351  8A40
 352  8A40 CD A8 8D     3 call Restore_Amadeus
 353  8A43 CD FE 8C     	call Inicia_Puntero_objeto
 354  8A46 CD FD 92     	call Draw
 355  8A49 CD A0 7F     	call Guarda_foto_registros
 356  8A4C 11 7C 85     	ld de,Amadeus_db
 357  8A4F CD BA 8D     	call Store_Amadeus
 358  8A52
 359  8A52              ; 	INICIA DISPAROS !!!!!
 360  8A52
 361  8A52 CD BA 8C     	call Inicia_Puntero_Disparo_Entidades
 362  8A55 CD C1 8C     	call Inicia_Puntero_Disparo_Amadeus
 363  8A58
 364  8A58              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 365  8A58
 366  8A58 CD A4 8C     5 call Inicia_punteros_de_cajas
 367  8A5B CD 81 8D     	call Restore_entidad
 368  8A5E
 369  8A5E 3A C8 89     	ld a,(Ctrl_1)
 370  8A61 CB 5F        	bit 3,a
 371  8A63 28 0A        	jr z,6F
 372  8A65
 373  8A65              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 374  8A65
 375  8A65 21 C8 89     	ld hl,Ctrl_1
 376  8A68 CB 9E        	res 3,(hl)
 377  8A6A CD C8 8C     	call Calcula_numero_de_malotes
 378  8A6D 18 07        	jr 7F
 379  8A6F
 380  8A6F              ; ----------
 381  8A6F
 382  8A6F 3A D2 89     6 ld a,(Numero_parcial_de_entidades)
 383  8A72 3C           	inc a
 384  8A73 32 D4 89     	ld (Numero_de_malotes),a
 385  8A76
 386  8A76 AF           7 xor a
 387  8A77 FB           2 ei
 388  8A78 28 FD        	jr z,2B
 389  8A7A
 390  8A7A 3A F2 89     	ld a,(Secundero)
 391  8A7D 47           	ld b,a
 392  8A7E 3A F3 89     	ld a,(Activa_recarga_cajas)
 393  8A81 B8           	cp b
 394  8A82 28 08        	jr z,8F
 395  8A84
 396  8A84 21 C8 89     	ld hl,Ctrl_1
 397  8A87 CB E6        	set 4,(hl)
 398  8A89 AF           	xor a
 399  8A8A 18 EB        	jr 2B
 400  8A8C
 401  8A8C 21 C8 89     8 ld hl,Ctrl_1
 402  8A8F CB A6        	res 4,(hl)
 403  8A91 F3           	di
 404  8A92
 405  8A92 C3 15 8A     	jp 4B
 406  8A95
 407  8A95              ; -----------------------------------------------------------------------------------
 408  8A95
 409  8A95              Frame
 410  8A95
 411  8A95              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 412  8A95              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 413  8A95
 414  8A95              ; PINTAMOS.
 415  8A95
 416  8A95 3E 02            ld a,2
 417  8A97 D3 FE            out ($fe),a
 418  8A99 CD 01 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 419  8A9C CD 3A 96     	call Extrae_foto_disparos
 420  8A9F 3E 01            ld a,1
 421  8AA1 D3 FE            out ($fe),a
 422  8AA3
 423  8AA3
 424  8AA3              ;    jr $
 425  8AA3
 426  8AA3              ; ----------------------------------------------------------------------
 427  8AA3
 428  8AA3              ; RELOJES.
 429  8AA3
 430  8AA3 21 F1 89     	ld hl,Contador_de_frames
 431  8AA6 34           	inc (hl)											; 0 - 255
 432  8AA7
 433  8AA7 3E 3C        	ld a,60
 434  8AA9 BE           	cp (hl)
 435  8AAA 20 22        	jr nz,13F
 436  8AAC
 437  8AAC 36 00        	ld (hl),0
 438  8AAE
 439  8AAE 21 F2 89     	ld hl,Secundero
 440  8AB1 34           	inc (hl)
 441  8AB2
 442  8AB2 7E           	ld a,(hl)
 443  8AB3 E6 01        	and %00000001
 444  8AB5 20 10        	jr nz,20F
 445  8AB7
 446  8AB7 3A D2 89     	ld a,(Numero_parcial_de_entidades)
 447  8ABA 47           	ld b,a
 448  8ABB 3A D3 89     	ld a,(Entidades_en_curso)
 449  8ABE B8           	cp b
 450  8ABF 28 06        	jr z,20F
 451  8AC1 30 04        	jr nc,20F
 452  8AC3
 453  8AC3 3C           	inc a
 454  8AC4 32 D3 89     	ld (Entidades_en_curso),a
 455  8AC7
 456  8AC7 3E 3C        20 ld a,60
 457  8AC9 BE           	cp (hl)
 458  8ACA 20 02        	jr nz,13F
 459  8ACC
 460  8ACC 36 00        	ld (hl),0
 461  8ACE
 462  8ACE 21 F4 89     13 ld hl,Habilita_disparo_Amadeus
 463  8AD1 11 F6 89     	ld de,Temporiza_disparo_Amadeus
 464  8AD4 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 465  8AD7
 466  8AD7 21 F7 89     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 467  8ADA 11 F9 89     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 468  8ADD CD D5 7F     	call Habilita_disparos
 469  8AE0
 470  8AE0              ; COLISIONES.
 471  8AE0
 472  8AE0 CD E3 91     	call Selector_de_impactos
 473  8AE3
 474  8AE3              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 475  8AE3              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 476  8AE3              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 477  8AE3
 478  8AE3 AF           	xor a
 479  8AE4 32 E6 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 480  8AE7
 481  8AE7 CD A4 8C     	call Inicia_punteros_de_cajas
 482  8AEA CD 81 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 483  8AED              ; 														; _ en DRAW.
 484  8AED 3A 8A 89     	ld a,(Filas)
 485  8AF0 A7           	and a
 486  8AF1 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 487  8AF3 CD 93 8D     	call Incrementa_punteros_de_cajas
 488  8AF6 18 F2        	jr 12B
 489  8AF8
 490  8AF8              ; ---------------------------------------------------------------------------------------
 491  8AF8
 492  8AF8 CD 61 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 493  8AFB 21 00 70     	ld hl,Album_de_fotos
 494  8AFE 22 DD 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 495  8B01              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 496  8B01 3A D2 89     	ld a,(Numero_parcial_de_entidades)
 497  8B04 47               ld b,a
 498  8B05 A7           	and a
 499  8B06 20 17        	jr nz,2F
 500  8B08
 501  8B08 21 C8 89     	ld hl,Ctrl_1
 502  8B0B CB 66        	bit 4,(hl)
 503  8B0D C2 9C 8B     	jp nz,4F
 504  8B10
 505  8B10 21 C8 89     	ld hl,Ctrl_1
 506  8B13 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 507  8B15 3A F2 89     	ld a,(Secundero)
 508  8B18 3C           	inc a
 509  8B19 32 F3 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 510  8B1C
 511  8B1C C3 9C 8B     	jp 4F
 512  8B1F
 513  8B1F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 514  8B1F
 515  8B1F 3A D3 89     2 ld a,(Entidades_en_curso)
 516  8B22 A7           	and a
 517  8B23 28 77        	jr z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 518  8B25 47           	ld b,a												; Entidades en curso en B.
 519  8B26
 520  8B26              ; Código que ejecutamos con cada entidad:
 521  8B26              ; Impacto ???
 522  8B26
 523  8B26 C5           15 push bc 												; Nº de entidades en curso.
 524  8B27
 525  8B27 3A A3 89     	ld a,(Impacto)
 526  8B2A A7           	and a
 527  8B2B 28 2B        	jr z,8F
 528  8B2D
 529  8B2D              ; Hay Impacto en esta entidad.
 530  8B2D
 531  8B2D 3A FA 89     	ld a,(Switch)										; Vamos a animar las explosiones a 25fps. Si el divisor (Switch)_
 532  8B30 A7           	and a 												; _ es <> "0", omitimos animar la explosion , (Mov_obj), y pasamos_
 533  8B31 20 63        	jr nz,6F											; _ a gestionar la siguiente entidad, JR 6F.
 534  8B33
 535  8B33 CD 5B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 536  8B36
 537  8B36              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 538  8B36
 539  8B36 3A C6 89     	ld a,(Ctrl_2)
 540  8B39 CB 4F        	bit 1,a
 541  8B3B 20 40        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 542  8B3D
 543  8B3D 3A 92 89     	ld a,(CTRL_DESPLZ)
 544  8B40 A7           	and a
 545  8B41 20 08        	jr nz,21F
 546  8B43
 547  8B43 21 7C 84     	ld hl,Indice_Explosion_2x2-2
 548  8B46 22 98 89     	ld (Puntero_DESPLZ_der),hl
 549  8B49 18 06        	jr 22F
 550  8B4B
 551  8B4B 21 E6 83     21 ld hl,Indice_Explosion_2x3-2
 552  8B4E 22 98 89     	ld (Puntero_DESPLZ_der),hl
 553  8B51
 554  8B51 21 C6 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 555  8B54 CB CE        	set 1,(hl)
 556  8B56 18 25        	jr 7F
 557  8B58
 558  8B58              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 559  8B58              ; _con las coordenadas de la entidad almacenada en DRAW.
 560  8B58
 561  8B58 3A C8 89     8 ld a,(Ctrl_1)
 562  8B5B CB 57        	bit 2,a
 563  8B5D 28 1E        	jr z,7F
 564  8B5F
 565  8B5F 2A E9 89     	ld hl,(Coordenadas_disparo_certero)
 566  8B62 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 567  8B63              ;														; E contiene la coordenada_X del disparo.
 568  8B63 2A 90 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 569  8B66              ;														; H FILA, (Coordenada_y de la entidad).
 570  8B66 A7           	and a
 571  8B67 ED 52        	sbc hl,de
 572  8B69
 573  8B69 CD 1A 92     	call Determina_resultado_comparativa
 574  8B6C
 575  8B6C              ;! Debug colisiones
 576  8B6C              ;	ld a,b
 577  8B6C              ;	and a
 578  8B6C 3A 9E 89     	ld a,(Cuad_objeto)
 579  8B6F 04           	inc b
 580  8B70 05           	dec b
 581  8B71              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 582  8B71 28 FE        	jr z,$
 583  8B73
 584  8B73              ;! Debug colisiones
 585  8B73
 586  8B73              ; ----- ----- -----
 587  8B73
 588  8B73 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 589  8B75 32 A3 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 590  8B78
 591  8B78 21 C8 89     	ld hl,Ctrl_1
 592  8B7B CB 96        	res 2,(hl)
 593  8B7D
 594  8B7D              ; Limpiamos las coordenadas del disparo asesino. Ya tenemos víctima.
 595  8B7D
 596  8B7D              ;	ld hl,Coordenadas_disparo_certero
 597  8B7D              ;	ld (hl),0
 598  8B7D              ;	inc hl
 599  8B7D              ;	ld (hl),0
 600  8B7D
 601  8B7D CD D7 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 602  8B80
 603  8B80 3A B8 89     	ld a,(Ctrl_0)
 604  8B83 CB 67        	bit 4,a
 605  8B85 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 606  8B87
 607  8B87              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 608  8B87              ; [[[
 609  8B87 CD 1C 8E     	call Detecta_disparo_entidad
 610  8B8A              ; ]]]
 611  8B8A CD 6B 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 612  8B8D
 613  8B8D 21 B8 89     	ld hl,Ctrl_0
 614  8B90 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 615  8B92 AF           	xor a
 616  8B93 32 B9 89     	ld (Obj_dibujado),a
 617  8B96
 618  8B96 CD 46 8D     6 call Store_Restore_cajas
 619  8B99
 620  8B99 C1           	pop bc
 621  8B9A 10 8A        	djnz 15B
 622  8B9C
 623  8B9C              ; ------------------------------------
 624  8B9C
 625  8B9C              ; Hemos gestionado todas las unidades.
 626  8B9C              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 627  8B9C
 628  8B9C              ;	ld hl,Ctrl_1
 629  8B9C              ;	res 2,(hl)
 630  8B9C
 631  8B9C              ; Limpiamos las coordenadas del disparo asesino.
 632  8B9C
 633  8B9C              ;	ld hl,Coordenadas_disparo_certero
 634  8B9C              ;	ld (hl),0
 635  8B9C              ;	inc hl
 636  8B9C              ;	ld (hl),0
 637  8B9C
 638  8B9C              ; ------------------------------------
 639  8B9C
 640  8B9C              ; Tras la gestión de las entidades, ... AMADEUS.
 641  8B9C
 642  8B9C CD A8 8D     4 call Restore_Amadeus
 643  8B9F
 644  8B9F 3A A3 89     	ld a,(Impacto)
 645  8BA2 A7           	and a
 646  8BA3 20 FE        	jr nz,$
 647  8BA5
 648  8BA5 CD 3C 8C     	call Mov_Amadeus
 649  8BA8
 650  8BA8 3A B8 89     	ld a,(Ctrl_0)
 651  8BAB CB 67        	bit 4,a
 652  8BAD 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 653  8BAF
 654  8BAF CD 6B 8C     	call Guarda_foto_entidad_a_pintar
 655  8BB2
 656  8BB2 21 B8 89     3 ld hl,Ctrl_0
 657  8BB5 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 658  8BB7 AF           	xor a
 659  8BB8 32 B9 89     	ld (Obj_dibujado),a
 660  8BBB
 661  8BBB 11 7C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 662  8BBE CD BA 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 663  8BC1
 664  8BC1 CD 7F 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 665  8BC4
 666  8BC4              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 667  8BC4
 668  8BC4 CD E0 8C     	call Calcula_numero_de_disparotes
 669  8BC7 CD C8 8C     9 call Calcula_numero_de_malotes
 670  8BCA
 671  8BCA 3A FA 89     	ld a,(Switch)
 672  8BCD EE 01        	xor 1
 673  8BCF 32 FA 89     	ld (Switch),a                                       ; Pulso. (25fps). Lo voy a utilizar para ralentizar la animación de la_
 674  8BD2              ;														; _ explosión.
 675  8BD2 3E 04        	ld a,4
 676  8BD4 D3 FE        	out ($fe),a
 677  8BD6
 678  8BD6 C9           	ret
 679  8BD7
 680  8BD7              ; --------------------------------------------------------------------------------------------------------------
 681  8BD7              ;
 682  8BD7              ;	27/05/23
 683  8BD7
 684  8BD7              Mov_obj
 685  8BD7
 686  8BD7              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 687  8BD7
 688  8BD7 3A C6 89     	ld a,(Ctrl_2)
 689  8BDA CB 4F        	bit 1,a
 690  8BDC 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 691  8BDE
 692  8BDE              ; Explosión:
 693  8BDE
 694  8BDE 3A C7 89     	ld a,(Frames_explosion)
 695  8BE1 A7           	and a
 696  8BE2 20 11        	jr nz,4F
 697  8BE4
 698  8BE4              ; Una alimaña menos!!!!!!!!!1
 699  8BE4
 700  8BE4 CD C3 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 701  8BE7 21 D2 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 702  8BEA 35           	dec (hl)
 703  8BEB 21 D3 89     	ld hl,Entidades_en_curso
 704  8BEE 35           	dec (hl)
 705  8BEF 21 D1 89     	ld hl,Numero_de_entidades
 706  8BF2 35           	dec (hl)
 707  8BF3 18 46        	jr 3F
 708  8BF5
 709  8BF5              ; -----
 710  8BF5
 711  8BF5              ;	`Movemos´ la explosión.
 712  8BF5
 713  8BF5 2A 98 89     4 ld hl,(Puntero_DESPLZ_der)
 714  8BF8 23           	inc hl
 715  8BF9 23           	inc hl
 716  8BFA 22 98 89     	ld (Puntero_DESPLZ_der),hl
 717  8BFD CD F8 8C     	call Extrae_address
 718  8C00 22 8E 89     	ld (Puntero_objeto),hl
 719  8C03
 720  8C03 21 C7 89     	ld hl,Frames_explosion
 721  8C06 35           	dec (hl)
 722  8C07
 723  8C07 CD 5B 8C     	call Guarda_foto_entidad_a_borrar
 724  8C0A 18 2F        	jr 3F
 725  8C0C
 726  8C0C AF           2 xor a
 727  8C0D 32 B9 89     	ld (Obj_dibujado),a
 728  8C10 32 B8 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 729  8C13              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 730  8C13              ; 														; _de la entidad.
 731  8C13 CD 75 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 732  8C16              ;														; Obj_dibujado="0".
 733  8C16              ; Movemos Entidades malignas.
 734  8C16
 735  8C16 21 BB 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 736  8C19 34           	inc (hl)
 737  8C1A 35           	dec (hl)                                            ; Salimos de la rutina.
 738  8C1B C8           	ret z
 739  8C1C
 740  8C1C CD DB 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 741  8C1F
 742  8C1F 3A B8 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 743  8C22 CB 67        	bit 4,a
 744  8C24 C8           	ret z
 745  8C25
 746  8C25              ; Ha habido desplazamiento de la entidad maligna.
 747  8C25              ; Ha llegado a zona de AMADEUS ???
 748  8C25
 749  8C25 3A 91 89     	ld a,(Coordenada_y)
 750  8C28 FE 14        	cp $14
 751  8C2A D4 B0 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 752  8C2D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 753  8C2D              ; ---------
 754  8C2D
 755  8C2D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 756  8C2F 32 B9 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 757  8C32 CD 75 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 758  8C35 CD 8C 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 759  8C38 CD 5B 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 760  8C3B C9           3 ret													; _de la misma.
 761  8C3C
 762  8C3C              ; --------------------------------------------------------------------------------------------------------------
 763  8C3C              ;
 764  8C3C              ;	29/1/23
 765  8C3C
 766  8C3C              Mov_Amadeus
 767  8C3C
 768  8C3C AF           	xor a
 769  8C3D 32 B9 89     	ld (Obj_dibujado),a
 770  8C40 CD 75 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 771  8C43              ;														; Obj_dibujado="0".
 772  8C43              ; Movemos Amadeus.
 773  8C43
 774  8C43 CD E5 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 775  8C46 3A B8 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 776  8C49 CB 67        	bit 4,a
 777  8C4B C8           	ret z
 778  8C4C
 779  8C4C              ; ---------
 780  8C4C
 781  8C4C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 782  8C4E 32 B9 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 783  8C51 CD 75 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 784  8C54 CD 8C 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 785  8C57 CD 5B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 786  8C5A C9           	ret													; _de la nave.
 787  8C5B
 788  8C5B              ; --------------------------------------------------------------------------------------------------------------
 789  8C5B              ;
 790  8C5B              ;	31/01/23
 791  8C5B              ;
 792  8C5B              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 793  8C5B
 794  8C5B              Guarda_foto_entidad_a_borrar
 795  8C5B
 796  8C5B CD D7 95     	call Prepara_draw
 797  8C5E CD 11 95     	call calcula_CColumnass
 798  8C61 CD 48 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 799  8C64 CD 9D 95     	call Define_rutina_de_impresion
 800  8C67 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 801  8C6A C9           	ret
 802  8C6B
 803  8C6B              ; --------------------------------------------------------------------------------------------------------------
 804  8C6B              ;
 805  8C6B              ;	31/01/23
 806  8C6B              ;
 807  8C6B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 808  8C6B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 809  8C6B
 810  8C6B              Guarda_foto_entidad_a_pintar
 811  8C6B
 812  8C6B CD 98 8C     	call Repone_pintar
 813  8C6E CD FD 92     	call Draw
 814  8C71 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 815  8C74 C9           	ret
 816  8C75
 817  8C75              ; --------------------------------------------------------------------------------------------------------------
 818  8C75              ;
 819  8C75              ;
 820  8C75
 821  8C75 21 8A 89     Prepara_var_pintado_borrado	ld hl,Filas
 822  8C78 3A B9 89     	ld a,(Obj_dibujado)
 823  8C7B A7           	and a
 824  8C7C 28 05        	jr z,1F
 825  8C7E 11 AE 89     	ld de,Variables_de_pintado
 826  8C81 18 03        	jr 2F
 827  8C83 11 A4 89     1 ld de,Variables_de_borrado
 828  8C86 01 08 00     2 ld bc,8
 829  8C89 ED B0        	ldir
 830  8C8B C9           	ret
 831  8C8C
 832  8C8C              ; --------------------------------------------------------------------------------------------------------------
 833  8C8C
 834  8C8C 21 A4 89     Repone_borrar ld hl,Variables_de_borrado
 835  8C8F 11 8A 89     	ld de,Filas
 836  8C92 01 08 00     	ld bc,8
 837  8C95 ED B0        	ldir
 838  8C97 C9           	ret
 839  8C98
 840  8C98 21 AE 89     Repone_pintar ld hl,Variables_de_pintado
 841  8C9B 11 8A 89     	ld de,Filas
 842  8C9E 01 08 00     	ld bc,8
 843  8CA1 ED B0        	ldir
 844  8CA3 C9           	ret
 845  8CA4
 846  8CA4              ; *************************************************************************************************************************************************************
 847  8CA4              ;
 848  8CA4              ; 8/1/23
 849  8CA4              ;
 850  8CA4              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 851  8CA4              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 852  8CA4              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 853  8CA4
 854  8CA4              ; Destruye HL y DE !!!!!
 855  8CA4
 856  8CA4              Inicia_punteros_de_cajas
 857  8CA4
 858  8CA4 21 64 85     	ld hl,Indice_de_cajas
 859  8CA7 CD F8 8C         call Extrae_address
 860  8CAA 22 CB 89         ld (Puntero_store_caja),hl
 861  8CAD 21 66 85     	ld hl,Indice_de_cajas+2
 862  8CB0 22 CF 89     	ld (Indice_restore_caja),hl
 863  8CB3 CD F8 8C     	call Extrae_address
 864  8CB6 22 CD 89     	ld (Puntero_restore_caja),hl
 865  8CB9 C9               ret
 866  8CBA
 867  8CBA              ; *************************************************************************************************************************************************************
 868  8CBA              ;
 869  8CBA              ; 8/1/23
 870  8CBA              ;
 871  8CBA              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 872  8CBA
 873  8CBA 21 FC 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 874  8CBD 22 E2 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 875  8CC0 C9           	ret
 876  8CC1 21 E4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 877  8CC4 22 E4 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 878  8CC7 C9           	ret
 879  8CC8
 880  8CC8              ; -------------------------------------------------------------------------------------------------------------
 881  8CC8              ;
 882  8CC8              ; 28/2/23
 883  8CC8              ;
 884  8CC8
 885  8CC8              Calcula_numero_de_malotes
 886  8CC8
 887  8CC8 21 00 70     	ld hl,Album_de_fotos
 888  8CCB EB           	ex de,hl
 889  8CCC 2A DD 89     	ld hl,(Stack_snapshot)
 890  8CCF
 891  8CCF 06 00        	ld b,0
 892  8CD1 7D           	ld a,l
 893  8CD2 93           	sub e
 894  8CD3 28 07        	jr z,1F
 895  8CD5
 896  8CD5              ; Nº de malotes no es "0".
 897  8CD5
 898  8CD5 D6 06        2 sub 6
 899  8CD7 04           	inc b
 900  8CD8 A7           	and a
 901  8CD9 20 FA        	jr nz,2B
 902  8CDB 78           	ld a,b
 903  8CDC
 904  8CDC 32 D4 89     1 ld (Numero_de_malotes),a
 905  8CDF C9           	ret
 906  8CE0
 907  8CE0              ; -------------------------------------------------------------------------------------------------------------
 908  8CE0              ;
 909  8CE0              ; 28/2/23
 910  8CE0              ;
 911  8CE0
 912  8CE0              Calcula_numero_de_disparotes
 913  8CE0
 914  8CE0 21 85 70     	ld hl,Album_de_fotos_disparos
 915  8CE3 EB           	ex de,hl
 916  8CE4 2A DF 89     	ld hl,(Stack_snapshot_disparos)
 917  8CE7
 918  8CE7 06 00        	ld b,0
 919  8CE9 7D           	ld a,l
 920  8CEA 93           	sub e
 921  8CEB 28 07        	jr z,1F
 922  8CED
 923  8CED              ; Nº de malotes no es "0".
 924  8CED
 925  8CED D6 06        2 sub 6
 926  8CEF 04           	inc b
 927  8CF0 A7           	and a
 928  8CF1 20 FA        	jr nz,2B
 929  8CF3 78           	ld a,b
 930  8CF4
 931  8CF4 32 E1 89     1 ld (Numero_de_disparotes),a
 932  8CF7 C9           	ret
 933  8CF8              ; *************************************************************************************************************************************************************
 934  8CF8              ;
 935  8CF8              ; 20/10/22
 936  8CF8              ;
 937  8CF8              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 938  8CF8              ;
 939  8CF8              ; Destruye el puntero y DE !!!!!
 940  8CF8
 941  8CF8 5E           Extrae_address ld e,(hl)
 942  8CF9 23           	inc hl
 943  8CFA 56           	ld d,(hl)
 944  8CFB 2B           	dec hl
 945  8CFC EB           	ex de,hl
 946  8CFD C9           	ret
 947  8CFE
 948  8CFE              ; *************************************************************************************************************************************************************
 949  8CFE              ;
 950  8CFE              ;	7/2/23
 951  8CFE              ;
 952  8CFE              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 953  8CFE              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 954  8CFE              ;
 955  8CFE              ;   Destruye HL y BC !!!!!,
 956  8CFE              ;
 957  8CFE              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 958  8CFE              ;					"0" ..... Izquierda.
 959  8CFE
 960  8CFE              Inicia_Puntero_objeto
 961  8CFE
 962  8CFE 3A 9E 89     	ld a,(Cuad_objeto)
 963  8D01 E6 01        	and 1
 964  8D03 F5           	push af
 965  8D04 CC 22 8D     	call z,Inicia_puntero_objeto_izq
 966  8D07 F1           	pop af
 967  8D08 28 2B        	jr z,1F
 968  8D0A CD 0F 8D     	call Inicia_puntero_objeto_der
 969  8D0D 18 26        	jr 1F
 970  8D0F
 971  8D0F              ; Arrancamos desde la parte izquierda de la pantalla.
 972  8D0F              ; Iniciamos (Indice_Sprite_der).
 973  8D0F
 974  8D0F 2A 94 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 975  8D12 22 98 89     	ld (Puntero_DESPLZ_der),hl
 976  8D15 CD F8 8C     	call Extrae_address
 977  8D18 22 8E 89     	ld (Puntero_objeto),hl
 978  8D1B
 979  8D1B 2A 96 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 980  8D1E 22 9A 89     	ld (Puntero_DESPLZ_izq),hl
 981  8D21 C9           	ret
 982  8D22
 983  8D22              ; Arrancamos desde la parte derecha de la pantalla.
 984  8D22              ; Iniciamos (Indice_Sprite_izq).
 985  8D22
 986  8D22 2A 96 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 987  8D25 22 9A 89     	ld (Puntero_DESPLZ_izq),hl
 988  8D28 CD F8 8C     	call Extrae_address
 989  8D2B 22 8E 89     	ld (Puntero_objeto),hl
 990  8D2E
 991  8D2E 2A 94 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 992  8D31 22 98 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 993  8D34 C9           	ret
 994  8D35
 995  8D35              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 996  8D35
 997  8D35 21 38 83     1 ld hl,Amadeus
 998  8D38 ED 4B 8E 89  	ld bc,(Puntero_objeto)
 999  8D3C B7 ED 42     	sub hl,bc
1000  8D3F C0           	ret nz
1001  8D40 21 B8 89     	ld hl,Ctrl_0
1002  8D43 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1003  8D45 C9           	ret 												; _de nuestra nave en los extremos.
1004  8D46
1005  8D46              ; *************************************************************************************************************************************************************
1006  8D46              ;
1007  8D46              ;	14/5/23
1008  8D46              ;
1009  8D46              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1010  8D46              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1011  8D46
1012  8D46              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1013  8D46              ;	_de la 2ª y 3ª entidad respectivamente.
1014  8D46
1015  8D46              Store_Restore_cajas
1016  8D46
1017  8D46 E5           	push hl
1018  8D47 D5           	push de
1019  8D48 C5            	push bc
1020  8D49
1021  8D49              ;	STORE !!!!!
1022  8D49              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1023  8D49
1024  8D49 21 8A 89     	ld hl,Filas
1025  8D4C ED 5B CB 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1026  8D50 01 3E 00     	ld bc,62
1027  8D53 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1028  8D55
1029  8D55              ; 	Entidad_sospechosa. 20/4/23
1030  8D55
1031  8D55 3A A3 89     	ld a,(Impacto)
1032  8D58 A7           	and a
1033  8D59 28 0C        	jr z,1F
1034  8D5B
1035  8D5B 2A CB 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1036  8D5E 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1037  8D61 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1038  8D62 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1039  8D64 22 E7 89     	ld (Entidad_sospechosa_de_colision),hl
1040  8D67
1041  8D67              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1042  8D67
1043  8D67 2A CD 89     1 ld hl,(Puntero_restore_caja)
1044  8D6A 7E           	ld a,(hl)
1045  8D6B A7           	and a
1046  8D6C F5           	push af
1047  8D6D 28 08        	jr z,2F
1048  8D6F
1049  8D6F 11 8A 89     	ld de,Filas
1050  8D72 01 3E 00     	ld bc,62
1051  8D75 ED B0        	ldir
1052  8D77
1053  8D77 CD 93 8D     2 call Incrementa_punteros_de_cajas
1054  8D7A F1           	pop af
1055  8D7B 28 EA        	jr z,1B
1056  8D7D
1057  8D7D C1           	pop bc
1058  8D7E D1           	pop de
1059  8D7F E1           	pop hl
1060  8D80
1061  8D80 C9           	ret
1062  8D81
1063  8D81              ; **************************************************************************************************
1064  8D81              ;
1065  8D81              ;	12/05/23
1066  8D81              ;
1067  8D81              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1068  8D81
1069  8D81 E5           Restore_entidad push hl
1070  8D82 D5           	push de
1071  8D83 C5            	push bc
1072  8D84
1073  8D84 2A CB 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1074  8D87 11 8A 89     	ld de,Filas
1075  8D8A 01 3E 00     	ld bc,62
1076  8D8D ED B0        	ldir
1077  8D8F
1078  8D8F C1           	pop bc
1079  8D90 D1           	pop de
1080  8D91 E1           	pop hl
1081  8D92 C9           	ret
1082  8D93
1083  8D93
1084  8D93              ; **************************************************************************************************
1085  8D93              ;
1086  8D93              ;	08/05/23
1087  8D93              ;
1088  8D93              ;	Incrementamos los dos punteros de entidades. (+1).
1089  8D93
1090  8D93 2A CD 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1091  8D96 22 CB 89     	ld (Puntero_store_caja),hl
1092  8D99 2A CF 89     	ld hl,(Indice_restore_caja)
1093  8D9C 23           	inc hl
1094  8D9D 23           	inc hl
1095  8D9E 22 CF 89     	ld (Indice_restore_caja),hl
1096  8DA1 CD F8 8C         call Extrae_address
1097  8DA4 22 CD 89         ld (Puntero_restore_caja),hl
1098  8DA7 C9               ret
1099  8DA8
1100  8DA8              ; **************************************************************************************************
1101  8DA8              ;
1102  8DA8              ;	25/01/23
1103  8DA8              ;
1104  8DA8              ;	Restore_Amadeus
1105  8DA8              ;
1106  8DA8              ;	Cargamos en DRAW los parámetros de Amadeus.
1107  8DA8              ;
1108  8DA8
1109  8DA8 E5           Restore_Amadeus	push hl
1110  8DA9 D5           	push de
1111  8DAA C5            	push bc
1112  8DAB 21 7C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1113  8DAE 11 8A 89     	ld de,Filas
1114  8DB1 01 3E 00     	ld bc,62
1115  8DB4 ED B0        	ldir
1116  8DB6 C1           	pop bc
1117  8DB7 D1           	pop de
1118  8DB8 E1           	pop hl
1119  8DB9 C9           	ret
1120  8DBA
1121  8DBA              ; *************************************************************************************************************************************************************
1122  8DBA              ;
1123  8DBA              ;	29/04/23
1124  8DBA              ;
1125  8DBA              ;	Store_Amadeus
1126  8DBA              ;
1127  8DBA              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1128  8DBA              ;
1129  8DBA              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1130  8DBA              ;
1131  8DBA              ;	DESTRUYE: HL y BC y DE.
1132  8DBA
1133  8DBA 21 8A 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1134  8DBD 01 3E 00     	ld bc,62
1135  8DC0 ED B0        	ldir
1136  8DC2 C9           	ret
1137  8DC3
1138  8DC3              ; -----------------------------------------------------------
1139  8DC3              ;
1140  8DC3              ;	27/04/23
1141  8DC3              ;
1142  8DC3              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1143  8DC3              ;
1144  8DC3              ;	Destruye: HL,BC,DE,A
1145  8DC3
1146  8DC3 21 8A 89     Borra_datos_entidad ld hl,Filas
1147  8DC6 01 3D 00     	ld bc,61
1148  8DC9 AF           	xor a
1149  8DCA 77           	ld (hl),a
1150  8DCB 11 8B 89     	ld de,Filas+1
1151  8DCE ED B0        	ldir
1152  8DD0 C9           	ret
1153  8DD1
1154  8DD1              ; -----------------------------------------------------------
1155  8DD1
1156  8DD1              ; Teclado.
1157  8DD1
1158  8DD1 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1159  8DD3 DB FE        	in a,($fe)
1160  8DD5 E6 01        	and $01
1161  8DD7 28 02        	jr z,1f
1162  8DD9 18 F6        	jr Pulsa_ENTER
1163  8DDB C9           1 ret
1164  8DDC
1165  8DDC              ; **************************************************************************************************
1166  8DDC              ;
1167  8DDC              ; Temporización.
1168  8DDC
1169  8DDC              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1170  8DDC              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1171  8DDC              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1172  8DDC              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1173  8DDC
1174  8DDC              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1175  8DDC              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1176  8DDC              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1177  8DDC
1178  8DDC              ; A partir de $4f61 no hace falta DELAY.
1179  8DDC
1180  8DDC              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1181  8DDC
1182  8DDC 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1183  8DDF 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1184  8DE0 78           	LD A,B
1185  8DE1 A7           	AND A
1186  8DE2 20 FB        	JR NZ,wait
1187  8DE4 C9           	RET
1188  8DE5
1189  8DE5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1190  8DE5              ;
1191  8DE5              ;	5/3/23
1192  8DE5              ;
1193  8DE5              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1194  8DE5
1195  8DE5              Movimiento_Amadeus
1196  8DE5
1197  8DE5              ; Disparo.
1198  8DE5
1199  8DE5 3A F4 89     	ld a,(Habilita_disparo_Amadeus)
1200  8DE8 A7           	and a
1201  8DE9 20 02        	jr nz,1F
1202  8DEB 18 15        	jr 2F
1203  8DED
1204  8DED 3E F7        1 ld a,$f7													; "5" para disparar.
1205  8DEF DB FE        	in a,($fe)
1206  8DF1 E6 10        	and $10
1207  8DF3
1208  8DF3 F5           	push af
1209  8DF4 CC 2C 8E     	call z,Genera_disparo
1210  8DF7 F1           	pop af
1211  8DF8 20 08        	jr nz,2F
1212  8DFA
1213  8DFA 3A F4 89     	ld a,(Habilita_disparo_Amadeus)
1214  8DFD EE 01        	xor 1
1215  8DFF 32 F4 89     	ld (Habilita_disparo_Amadeus),a
1216  8E02
1217  8E02 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1218  8E04 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1219  8E06 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1220  8E08 CC 7B 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1221  8E0B 3E F7        	ld a,$f7
1222  8E0D DB FE        	in a,($fe)
1223  8E0F E6 01        	and $01
1224  8E11 C8           	ret z
1225  8E12
1226  8E12 3E F7        	ld a,$f7
1227  8E14 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1228  8E16 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1229  8E18 CC 5D 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1230  8E1B C9           	ret
1231  8E1C
1232  8E1C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1233  8E1C              ;
1234  8E1C              ;	Rutina provisional para que los malotes cagen balas.
1235  8E1C
1236  8E1C              Detecta_disparo_entidad
1237  8E1C
1238  8E1C 3A F7 89     	ld a,(Habilita_disparo_entidad)
1239  8E1F A7           	and a
1240  8E20 C8           	ret z
1241  8E21 3E 7F        	ld a,$7f
1242  8E23 DB FE        	in a,($fe)
1243  8E25 E6 01        	and 1
1244  8E27 C0           	ret nz
1245  8E28 CD 2C 8E     	call Genera_disparo
1246  8E2B C9           	ret
1247  8E2C
1248  8E2C              ; ---------------------------------------------------------------
1249  8E2C
1250  8E2C              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E2C              ; ******************************************************************************************************************************************************************************************
   2+ 8E2C              ;
   3+ 8E2C              ;   17/04/23
   4+ 8E2C              ;
   5+ 8E2C              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E2C              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E2C              ;
   8+ 8E2C              ;
   9+ 8E2C              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E2C              ;
  11+ 8E2C              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E2C              ;               _ hacen las entidades hacia abajo.
  13+ 8E2C              ;
  14+ 8E2C              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E2C              ;
  16+ 8E2C              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E2C              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E2C              ;
  19+ 8E2C              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E2C              ;           _ la bala.
  21+ 8E2C              ;
  22+ 8E2C              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E2C              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E2C              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E2C              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E2C              ;           _ en el momento de generarse la bala)).
  27+ 8E2C
  28+ 8E2C              Genera_disparo
  29+ 8E2C
  30+ 8E2C              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E2C              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E2C              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E2C              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E2C              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E2C              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E2C              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E2C
  38+ 8E2C              ; Exclusiones:
  39+ 8E2C
  40+ 8E2C 3A C2 89         ld a,(Columnas)
  41+ 8E2F 47               ld b,a
  42+ 8E30 3A 8B 89         ld a,(Columns)
  43+ 8E33 B8               cp b
  44+ 8E34 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E35
  46+ 8E35              ; ----- ----- -----
  47+ 8E35
  48+ 8E35 3A B8 89         ld a,(Ctrl_0)
  49+ 8E38 CB 77            bit 6,a
  50+ 8E3A 20 06            jr nz,14F
  51+ 8E3C
  52+ 8E3C 3A 91 89         ld a,(Coordenada_y)
  53+ 8E3F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E41 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E42
  56+ 8E42 21 00 80     14 ld hl,Indice_disparo
  57+ 8E45 3A 92 89         ld a,(CTRL_DESPLZ)
  58+ 8E48 4F               ld c,a
  59+ 8E49 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E4B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E4B              ;                                            ""        ""       "f9", B="1"
  62+ 8E4B              ;                                            ""        ""       "fb", B="2"
  63+ 8E4B              ;                                            ""        ""       "fb", B="3"
  64+ 8E4B A7               and a
  65+ 8E4C 28 10            jr z,1F
  66+ 8E4E E6 01            and 1
  67+ 8E50 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E51
  69+ 8E51 79               ld a,c
  70+ 8E52 16 F9            ld d,$f9
  71+ 8E54 23           2 inc hl
  72+ 8E55 23               inc hl
  73+ 8E56 04               inc b
  74+ 8E57 BA               cp d
  75+ 8E58 28 04            jr z,1F
  76+ 8E5A 14               inc d
  77+ 8E5B 14               inc d
  78+ 8E5C 18 F6            jr 2B
  79+ 8E5E
  80+ 8E5E CD F8 8C     1 call Extrae_address
  81+ 8E61 E5               push hl
  82+ 8E62 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E64 DD 21 76 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E68
  85+ 8E68              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E68              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E68
  88+ 8E68 3A B8 89         ld a,(Ctrl_0)
  89+ 8E6B CB 77            bit 6,a
  90+ 8E6D 20 04            jr nz,19F
  91+ 8E6F
  92+ 8E6F AF               xor a
  93+ 8E70 32 F7 89         ld (Habilita_disparo_entidad),a
  94+ 8E73
  95+ 8E73 3A 9E 89     19 ld a,(Cuad_objeto)
  96+ 8E76 FE 02            cp 2
  97+ 8E78 38 66            jr c,3F
  98+ 8E7A 28 64            jr z,3F
  99+ 8E7C
 100+ 8E7C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E7C
 102+ 8E7C E6 01            and 1
 103+ 8E7E 28 30            jr z,4F
 104+ 8E80
 105+ 8E80              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E80              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E80              ;
 108+ 8E80              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E80              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E80              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E80
 112+ 8E80 2A 8C 89     	ld hl,(Posicion_actual)
 113+ 8E83
 114+ 8E83              ;   Amadeus o entidad ???.
 115+ 8E83
 116+ 8E83 3A B8 89         ld a,(Ctrl_0)
 117+ 8E86 CB 77            bit 6,a
 118+ 8E88 28 0A            jr z,8F
 119+ 8E8A
 120+ 8E8A              ; 	Dispara Amadeus.
 121+ 8E8A
 122+ 8E8A 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E8C CD F2 95         call PreviousScan
 124+ 8E8F CD F2 95         call PreviousScan
 125+ 8E92
 126+ 8E92              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E92              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E92              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E92              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E92
 131+ 8E92 18 11            jr 10F
 132+ 8E94
 133+ 8E94              ; 	Dispara Entidad.
 134+ 8E94
 135+ 8E94 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8E97              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8E97
 138+ 8E97              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8E97              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8E97
 141+ 8E97 C5               push bc
 142+ 8E98 06 10            ld b,16
 143+ 8E9A CD E3 95     9 call NextScan
 144+ 8E9D 10 FB            djnz 9B
 145+ 8E9F C1               pop bc
 146+ 8EA0 CD 0A 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EA3 18 06            jr 17F
 148+ 8EA5
 149+ 8EA5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EA5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EA5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EA5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EA5
 154+ 8EA5 CD 0A 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EA8 CD 7F 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EAB              ;                                                      ; _al generar el disparo.
 157+ 8EAB
 158+ 8EAB              ; 	LLegados a este punto tendremos:
 159+ 8EAB              ;
 160+ 8EAB              ;       Puntero_objeto_disparo en IY.
 161+ 8EAB              ;       Rutinas_de_impresion en IX.
 162+ 8EAB              ;       Puntero_de_impresion en HL.
 163+ 8EAB              ;       Impacto/Dirección en BC.
 164+ 8EAB
 165+ 8EAB CD 12 8F     17 call Almacena_disparo
 166+ 8EAE 18 52            jr 6F                                             ; RET.
 167+ 8EB0
 168+ 8EB0              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EB0              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EB0              ;
 171+ 8EB0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EB0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EB0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EB0
 175+ 8EB0 2A 8C 89     4 ld hl,(Posicion_actual)
 176+ 8EB3
 177+ 8EB3              ;   Amadeus o entidad ???.
 178+ 8EB3
 179+ 8EB3 3A B8 89         ld a,(Ctrl_0)
 180+ 8EB6 CB 77            bit 6,a
 181+ 8EB8 28 0A            jr z,11F
 182+ 8EBA
 183+ 8EBA              ; 	Dispara Amadeus.
 184+ 8EBA
 185+ 8EBA 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EBC CD F2 95         call PreviousScan
 187+ 8EBF CD F2 95         call PreviousScan
 188+ 8EC2
 189+ 8EC2              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EC2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EC2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EC2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EC2
 194+ 8EC2 18 11            jr 13F
 195+ 8EC4
 196+ 8EC4              ; 	Dispara Entidad.
 197+ 8EC4
 198+ 8EC4 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EC7              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EC7
 201+ 8EC7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EC7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EC7
 204+ 8EC7 C5               push bc
 205+ 8EC8 06 10            ld b,16
 206+ 8ECA CD E3 95     12 call NextScan
 207+ 8ECD 10 FB            djnz 12B
 208+ 8ECF C1               pop bc
 209+ 8ED0
 210+ 8ED0 CD 03 8F         call Ajusta_disparo_parte_derecha
 211+ 8ED3 18 06            jr 18F
 212+ 8ED5
 213+ 8ED5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8ED5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8ED5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8ED5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8ED5
 218+ 8ED5 CD 03 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8ED8 CD 7F 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8EDB              ;                                                       ; _al generar el disparo.
 221+ 8EDB
 222+ 8EDB              ; LLegados a este punto tendremos:
 223+ 8EDB              ;
 224+ 8EDB              ;       Puntero_objeto_disparo en IY.
 225+ 8EDB              ;       Rutinas_de_impresion en IX.
 226+ 8EDB              ;       Puntero_de_impresion en HL.
 227+ 8EDB              ;       Impacto/Dirección en BC.
 228+ 8EDB
 229+ 8EDB CD 12 8F     18 call Almacena_disparo
 230+ 8EDE 18 22            jr 6F                                               ; RET.
 231+ 8EE0
 232+ 8EE0              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8EE0
 234+ 8EE0 28 11        3 jr z,5F
 235+ 8EE2
 236+ 8EE2              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8EE2              ;
 238+ 8EE2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8EE2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8EE2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8EE2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8EE2
 243+ 8EE2              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8EE2              ;	   ""        ""       "f9", B="1"
 245+ 8EE2              ;	   ""        ""       "fb", B="2"
 246+ 8EE2              ; 	   ""        ""       "fb", B="3"
 247+ 8EE2
 248+ 8EE2 2A 8C 89     	ld hl,(Posicion_actual)
 249+ 8EE5 CD E3 95     	call NextScan
 250+ 8EE8
 251+ 8EE8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8EE8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8EE8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8EE8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8EE8
 256+ 8EE8 CD 0A 8F         call Ajusta_disparo_parte_izquierda
 257+ 8EEB
 258+ 8EEB              ; 	No se produce impacto. B="$80"
 259+ 8EEB              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8EEB
 261+ 8EEB 01 80 80         ld bc,$8080
 262+ 8EEE
 263+ 8EEE              ; 	LLegados a este punto tendremos:
 264+ 8EEE              ;
 265+ 8EEE              ;       Puntero_objeto_disparo en IY.
 266+ 8EEE              ;       Rutinas_de_impresion en IX.
 267+ 8EEE              ;       Puntero_de_impresion en HL.
 268+ 8EEE              ;       Impacto/Dirección en BC.
 269+ 8EEE
 270+ 8EEE CD 12 8F         call Almacena_disparo
 271+ 8EF1 18 0F            jr 6F                                           ; RET.
 272+ 8EF3
 273+ 8EF3              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EF3              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EF3              ;
 276+ 8EF3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EF3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EF3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EF3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EF3
 281+ 8EF3 2A 8C 89     5 ld hl,(Posicion_actual)
 282+ 8EF6 CD E3 95     	call NextScan
 283+ 8EF9
 284+ 8EF9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8EF9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8EF9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8EF9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8EF9
 289+ 8EF9 CD 03 8F         call Ajusta_disparo_parte_derecha
 290+ 8EFC
 291+ 8EFC              ; 	No se produce impacto. B="$80"
 292+ 8EFC              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8EFC
 294+ 8EFC 01 80 80     15 ld bc,$8080
 295+ 8EFF
 296+ 8EFF              ; 	LLegados a este punto tendremos:
 297+ 8EFF              ;
 298+ 8EFF              ;       Puntero_objeto_disparo en IY.
 299+ 8EFF              ;       Rutinas_de_impresion en IX.
 300+ 8EFF              ;       Puntero_de_impresion en HL.
 301+ 8EFF              ;       Impacto/Dirección en BC.
 302+ 8EFF
 303+ 8EFF CD 12 8F         call Almacena_disparo
 304+ 8F02
 305+ 8F02 C9           6 ret
 306+ 8F03
 307+ 8F03              ; ----------------------------------------------------------------
 308+ 8F03              ;
 309+ 8F03              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F03              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F03              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F03
 313+ 8F03 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F04 FE 02            cp 2
 315+ 8F06 38 01            jr c,1F
 316+ 8F08 23               inc hl
 317+ 8F09 C9           1 ret
 318+ 8F0A
 319+ 8F0A 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F0B FE 01        	cp 1
 321+ 8F0D 20 01        	jr nz,1F
 322+ 8F0F 2B           	dec hl
 323+ 8F10 2B           1 dec hl
 324+ 8F11 C9               ret
 325+ 8F12
 326+ 8F12              ; ----------------------------------------------------------------
 327+ 8F12              ;
 328+ 8F12              ;   25/02/23
 329+ 8F12              ;
 330+ 8F12              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F12              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F12              ;
 333+ 8F12              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F12              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F12
 336+ 8F12              Almacena_disparo
 337+ 8F12
 338+ 8F12 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F13 F1               pop af
 340+ 8F14 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F15
 342+ 8F15 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F16 E6 01            and 1
 344+ 8F18 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F1A              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F1A              ; 	Dispara AMADEUS.
 347+ 8F1A
 348+ 8F1A              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F1A              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F1A              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F1A              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F1A
 353+ 8F1A C5               push bc
 354+ 8F1B 01 E8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F1E 2A E4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F21 A7               and a
 357+ 8F22 ED 42            sbc hl,bc
 358+ 8F24 CC C1 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F27 C1               pop bc
 360+ 8F28 28 54            jr z,4F
 361+ 8F2A
 362+ 8F2A 2A E4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F2D 23               inc hl
 364+ 8F2E 23               inc hl
 365+ 8F2F 22 E4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F32              ;                                                   ; _ Disparo_(+1).
 367+ 8F32 18 18            jr 2F
 368+ 8F34
 369+ 8F34              ; Dispara una entidad.
 370+ 8F34
 371+ 8F34 C5           1 push bc
 372+ 8F35 01 10 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F38 2A E2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F3B A7               and a
 375+ 8F3C ED 42            sbc hl,bc
 376+ 8F3E CC BA 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F41 C1               pop bc
 378+ 8F42 28 3A            jr z,4F
 379+ 8F44
 380+ 8F44 2A E2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F47 23               inc hl
 382+ 8F48 23               inc hl
 383+ 8F49 22 E2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F4C              ;                                                   ; _ Disparo_(+1).
 385+ 8F4C CD F8 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F4F              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F4F              ;
 388+ 8F4F              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F4F              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F4F              ;                                                     Puntero_de_impresion en HL.
 391+ 8F4F              ;                                                     Impacto/Dirección en BC.
 392+ 8F4F
 393+ 8F4F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F50 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F51 23               inc hl                                          ; _ al siguiente.
 396+ 8F52 A7               and a
 397+ 8F53 20 C0            jr nz,3B
 398+ 8F55
 399+ 8F55 08               ex af,af
 400+ 8F56 ED 73 D9 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F5A F9               ld sp,hl
 402+ 8F5B
 403+ 8F5B DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F5D F5               push af                                         ; Puntero de impresión.
 405+ 8F5E FD E5            push iy                                         ; Puntero objeto.
 406+ 8F60 C5               push bc                                         ; Control.
 407+ 8F61
 408+ 8F61 ED 7B D9 89      ld sp,(Stack)
 409+ 8F65
 410+ 8F65              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F65
 412+ 8F65 21 C8 89     	ld hl,Ctrl_1
 413+ 8F68 CB C6        	set 0,(hl)
 414+ 8F6A
 415+ 8F6A DD E5        	push ix
 416+ 8F6C E1               pop hl
 417+ 8F6D F5               push af
 418+ 8F6E DD E1            pop ix
 419+ 8F70
 420+ 8F70 CD A0 7F     	call Guarda_foto_registros
 421+ 8F73
 422+ 8F73 21 C8 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F76 CB 86        	res 0,(hl)
 424+ 8F78
 425+ 8F78              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F78              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F78
 428+ 8F78 CD C1 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F7B CD BA 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F7E
 431+ 8F7E C9           4 ret
 432+ 8F7F
 433+ 8F7F              ; ----------------------------------------------------------------
 434+ 8F7F              ;
 435+ 8F7F              ;   4/3/23
 436+ 8F7F              ;
 437+ 8F7F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F7F              ;   _ al generarse el disparo.
 439+ 8F7F              ;
 440+ 8F7F              ;       "$80" ..... No se produce colisión.
 441+ 8F7F              ;       "$81" ..... Se produce colisión.
 442+ 8F7F
 443+ 8F7F              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F7F              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F7F
 446+ 8F7F
 447+ 8F7F FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F81 E5               push hl                                        ; Puntero de impresión.
 449+ 8F82
 450+ 8F82 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F84 CD A0 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F87
 453+ 8F87 7B               ld a,e
 454+ 8F88 E6 01            and 1
 455+ 8F8A 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F8C
 457+ 8F8C E1               pop hl
 458+ 8F8D E5               push hl
 459+ 8F8E CD E3 95         call NextScan
 460+ 8F91
 461+ 8F91 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F92 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F94 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F96              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F96 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8F98 CD A0 8F         call Bucle_2
 467+ 8F9B
 468+ 8F9B 43           2 ld b,e
 469+ 8F9C E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8F9D FD E1            pop iy
 471+ 8F9F C9               ret
 472+ 8FA0
 473+ 8FA0               ; ---------- ----------
 474+ 8FA0
 475+ 8FA0 06 02        Bucle_2 ld b,2
 476+ 8FA2 FD 7E 00     2 ld a,(iy)
 477+ 8FA5 A6               and (hl)
 478+ 8FA6 28 02            jr z,1F
 479+ 8FA8 1E 81            ld e,$81
 480+ 8FAA 23           1 inc hl
 481+ 8FAB FD 23            inc iy
 482+ 8FAD 10 F3            djnz 2B
 483+ 8FAF C9               ret
 484+ 8FB0
 485+ 8FB0              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FB0              ;
 487+ 8FB0              ;   11/04/23
 488+ 8FB0              ;
 489+ 8FB0              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FB0              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FB0              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FB0              ;
 493+ 8FB0              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FB0
 495+ 8FB0              Compara_coordenadas_X
 496+ 8FB0
 497+ 8FB0              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FB0              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FB0
 500+ 8FB0              ; Preparamos registros:
 501+ 8FB0
 502+ 8FB0 21 90 89         ld hl,Filas+6
 503+ 8FB3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FB4 23               inc hl
 505+ 8FB5 23               inc hl
 506+ 8FB6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FB7 43               ld b,e
 508+ 8FB8 21 9E 89         ld hl,Filas+20
 509+ 8FBB 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FBC 21 EE 89         ld hl,Coordenadas_X_Entidad
 511+ 8FBF CD D0 91         call Guarda_coordenadas_X
 512+ 8FC2
 513+ 8FC2              ; Preparamos registros:
 514+ 8FC2
 515+ 8FC2 21 82 85         ld hl,Amadeus_db+6
 516+ 8FC5 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FC6 23               inc hl
 518+ 8FC7 23               inc hl
 519+ 8FC8 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FC9 7B               ld a,e
 521+ 8FCA 08               ex af,af'
 522+ 8FCB 21 90 85         ld hl,Amadeus_db+20
 523+ 8FCE 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FCF 21 EB 89         ld hl,Coordenadas_X_Amadeus
 525+ 8FD2 CD D0 91         call Guarda_coordenadas_X
 526+ 8FD5
 527+ 8FD5              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FD5              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FD5
 530+ 8FD5 04               inc b
 531+ 8FD6 05               dec b
 532+ 8FD7 28 04            jr z,1F
 533+ 8FD9 06 03            ld b,3
 534+ 8FDB 18 02            jr 2F
 535+ 8FDD 06 02        1 ld b,2
 536+ 8FDF 08           2 ex af,af'
 537+ 8FE0 3C               inc a
 538+ 8FE1 3D               dec a
 539+ 8FE2 28 04            jr z,5F
 540+ 8FE4 0E 03            ld c,3
 541+ 8FE6 18 02            jr 6F
 542+ 8FE8 0E 02        5 ld c,2
 543+ 8FEA 79           6 ld a,c
 544+ 8FEB 08               ex af,af'
 545+ 8FEC 11 EE 89         ld de,Coordenadas_X_Entidad
 546+ 8FEF 1A           4 ld a,(de)
 547+ 8FF0 21 EB 89         ld hl,Coordenadas_X_Amadeus
 548+ 8FF3 BE           3 cp (hl)
 549+ 8FF4 28 0E            jr z,7F
 550+ 8FF6 23               inc hl
 551+ 8FF7 0D               dec c
 552+ 8FF8 20 F9            jr nz,3B
 553+ 8FFA 13               inc de
 554+ 8FFB 08               ex af,af'
 555+ 8FFC 4F               ld c,a
 556+ 8FFD 08               ex af,af'
 557+ 8FFE 10 EF            djnz 4B
 558+ 9000
 559+ 9000              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 9000
 561+ 9000 CD 0F 92     8 call Limpia_Coordenadas_X
 562+ 9003 C9               ret
 563+ 9004
 564+ 9004              7
 565+ 9004 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9006 32 A3 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9009 21 E6 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 900C CB D6            set 2,(hl)
 569+ 900E 18 F0            jr 8B
 570+ 9010
 571+ 9010              ; -----------------------------------------------------------------------
 572+ 9010              ;
 573+ 9010              ;   17/04/23
 574+ 9010              ;
 575+ 9010
 576+ 9010              Detecta_colision_nave_entidad
 577+ 9010
 578+ 9010              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 9010
 580+ 9010 2A 8C 89         ld hl,(Posicion_actual)
 581+ 9013 CD 48 95         call Calcula_puntero_de_impresion
 582+ 9016
 583+ 9016              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9016              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9016
 586+ 9016 DD E5            push ix
 587+ 9018 E1               pop hl
 588+ 9019 E5               push hl
 589+ 901A
 590+ 901A              ; ----- ----- -----
 591+ 901A 1E 00            ld e,0                                         ; Indica impacto.
 592+ 901C 06 0A            ld b,10
 593+ 901E CD 4E 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9021 7B               ld a,e
 595+ 9022 FE 05            cp 5
 596+ 9024 38 0E            jr c,3F
 597+ 9026
 598+ 9026              ; LLegados a este punto:
 599+ 9026              ;
 600+ 9026              ;   HAY COLISIÓN !!!!!.
 601+ 9026              ;
 602+ 9026              ;   .db (Impacto) de Amadeus a "1".
 603+ 9026              ;   SET el bit3 de (Impacto2).
 604+ 9026              ;
 605+ 9026              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9026
 607+ 9026 21 95 85         ld hl,Amadeus_db+25
 608+ 9029 36 01            ld (hl),1
 609+ 902B 21 E6 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 902E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 9030 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9032 18 18            jr 1F
 613+ 9034
 614+ 9034              ; -----
 615+ 9034
 616+ 9034 E1           3 pop hl
 617+ 9035 CD E3 95         call NextScan
 618+ 9038 E5               push hl
 619+ 9039 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 903A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 903C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 903E 30 0C            jr nc,1F
 623+ 9040              ;                                                  ; _ 2º scanline si esto es así.
 624+ 9040 10 DC            djnz 2B
 625+ 9042
 626+ 9042              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9042
 628+ 9042              ; LLegados a este punto:
 629+ 9042              ;
 630+ 9042              ;   NO HAY COLISIÓN !!!!!.
 631+ 9042              ;
 632+ 9042              ;   .db (Impacto) de Amadeus a "0".
 633+ 9042              ;   RES el bit2 de (Impacto2).
 634+ 9042              ;
 635+ 9042              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9042              ;   Lo colocamos a "0".
 637+ 9042
 638+ 9042 21 E6 89         ld hl,Impacto2
 639+ 9045 CB 96            res 2,(hl)
 640+ 9047 2A E7 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 904A 36 00            ld (hl),0
 642+ 904C
 643+ 904C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 904D C9               ret
 645+ 904E
 646+ 904E               ; ---------- ----------
 647+ 904E
 648+ 904E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 904F 3A 8B 89         ld a,(Columns)
 650+ 9052 47               ld b,a
 651+ 9053 FD 7E 00     2 ld a,(iy)
 652+ 9056 BE               cp (hl)
 653+ 9057 28 01            jr z,1F
 654+ 9059
 655+ 9059 1C               inc e
 656+ 905A
 657+ 905A 23           1 inc hl
 658+ 905B FD 23            inc iy
 659+ 905D 10 F4            djnz 2B
 660+ 905F C1               pop bc
 661+ 9060 C9               ret
 662+ 9061
 663+ 9061              ; -------------------------------------------------------------------------------------------------------------
 664+ 9061              ;
 665+ 9061              ;   13/03/23
 666+ 9061              ;
 667+ 9061              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9061              ;
 669+ 9061              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9061
 671+ 9061 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9064 7E               ld a,(hl)
 673+ 9065 A7               and a
 674+ 9066 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9067
 676+ 9067 44               ld b,h
 677+ 9068 4D               ld c,l
 678+ 9069 2A DF 89         ld hl,(Stack_snapshot_disparos)
 679+ 906C E5               push hl
 680+ 906D A7               and a
 681+ 906E ED 42            sbc hl,bc
 682+ 9070 E5               push hl
 683+ 9071 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 9072
 685+ 9072 E1               pop hl
 686+ 9073 54               ld d,h
 687+ 9074 5D               ld e,l
 688+ 9075 1B               dec de
 689+ 9076 ED B8            lddr                                                ; Limpiamos.
 690+ 9078
 691+ 9078 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 907B 22 DF 89         ld (Stack_snapshot_disparos),hl
 693+ 907E
 694+ 907E C9               ret
 695+ 907F
 696+ 907F              ; -------------------------------------------------------------------------------------------------------------
 697+ 907F              ;
 698+ 907F              ;   28/03/23
 699+ 907F              ;
 700+ 907F
 701+ 907F 01 FA 84     Motor_de_disparos ld bc,Disparo_3A
 702+ 9082 2A E4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 9085
 704+ 9085 CD F8 8C     2 call Extrae_address
 705+ 9088 7E               ld a,(hl)
 706+ 9089 A7               and a
 707+ 908A 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 908C
 709+ 908C              ; ----- ----- ----- ----- ----- -----
 710+ 908C
 711+ 908C C5               push bc
 712+ 908D CD 49 91         call foto_disparo_a_borrar
 713+ 9090
 714+ 9090              ; Existe colisión con este disparo???
 715+ 9090
 716+ 9090 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 9091 7E               ld a,(hl)
 718+ 9092 2B               dec hl
 719+ 9093 E6 01            and 1
 720+ 9095 28 1D            jr z,9F
 721+ 9097
 722+ 9097              ;   En este punto:
 723+ 9097              ;
 724+ 9097              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 9097              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 9097              ;   _con la entidad).
 727+ 9097              ;
 728+ 9097              ;   Disparo_2A defw 0                                ; Control.
 729+ 9097              ;    defw 0                                          ; Puntero objeto.
 730+ 9097              ;    defw 0                                          ; Puntero de impresión.
 731+ 9097              ;    defw 0                                          ; Rutina de impresión.
 732+ 9097
 733+ 9097 E5               push hl
 734+ 9098
 735+ 9098 06 04            ld b,4
 736+ 909A 23           19 inc hl
 737+ 909B 10 FD            djnz 19B
 738+ 909D
 739+ 909D CD F8 8C         call Extrae_address
 740+ 90A0 CD 3A 9C         call Genera_coordenadas_disparo
 741+ 90A3
 742+ 90A3              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90A3
 744+ 90A3 21 E9 89         ld hl,Coordenadas_disparo_certero
 745+ 90A6 72               ld (hl),d
 746+ 90A7 23               inc hl
 747+ 90A8 73               ld (hl),e
 748+ 90A9
 749+ 90A9              ; Elimino el disparo de la base de datos.
 750+ 90A9
 751+ 90A9 E1               pop hl
 752+ 90AA CD C5 91         call Elimina_disparo_de_base_de_datos
 753+ 90AD 21 E6 89         ld hl,Impacto2
 754+ 90B0 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90B2
 756+ 90B2 18 06            jr 11F
 757+ 90B4
 758+ 90B4 CD 72 91     9 call Mueve_disparo
 759+ 90B7 CD 49 91         call foto_disparo_a_borrar
 760+ 90BA
 761+ 90BA C1           11 pop bc
 762+ 90BB 18 04            jr 7F
 763+ 90BD
 764+ 90BD              ; ----- ----- ----- ----- ----- -----
 765+ 90BD
 766+ 90BD ED 42        1 sbc hl,bc
 767+ 90BF 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90C1 2A E4 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90C4 23               inc hl
 770+ 90C5 23               inc hl
 771+ 90C6 22 E4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90C9 18 BA            jr 2B
 773+ 90CB CD C1 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90CE
 775+ 90CE 01 62 85         ld bc,Disparo_11
 776+ 90D1 2A E2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90D4
 778+ 90D4 CD F8 8C     5 call Extrae_address
 779+ 90D7 7E               ld a,(hl)
 780+ 90D8 A7               and a
 781+ 90D9 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90DB
 783+ 90DB              ; ----- ----- ----- ----- ----- -----
 784+ 90DB
 785+ 90DB C5               push bc
 786+ 90DC CD 49 91         call foto_disparo_a_borrar
 787+ 90DF
 788+ 90DF              ; Existe colisión con este disparo???
 789+ 90DF
 790+ 90DF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90E0 7E               ld a,(hl)
 792+ 90E1 2B               dec hl
 793+ 90E2 E6 01            and 1
 794+ 90E4 28 48            jr z,10F
 795+ 90E6
 796+ 90E6              ; La colisión se produce con Amadeus???
 797+ 90E6              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90E6
 799+ 90E6 E5               push hl
 800+ 90E7
 801+ 90E7 06 04            ld b,4
 802+ 90E9 23           16 inc hl
 803+ 90EA 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90EC CD F8 8C         call Extrae_address
 805+ 90EF CD 3A 9C         call Genera_coordenadas_disparo
 806+ 90F2
 807+ 90F2 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90F3 FE 16            cp $16
 809+ 90F5 38 22            jr c,15F
 810+ 90F7
 811+ 90F7              ; (Colisiones en filas 16 y 17).
 812+ 90F7
 813+ 90F7 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 90F8
 815+ 90F8              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 90F8
 817+ 90F8 21 82 85         ld hl,Amadeus_db+6
 818+ 90FB 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 90FC 23               inc hl
 820+ 90FD 23               inc hl
 821+ 90FE 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 90FF 21 90 85         ld hl,Amadeus_db+20
 823+ 9102 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9103 21 EB 89         ld hl,Coordenadas_X_Amadeus
 825+ 9106 CD D0 91         call Guarda_coordenadas_X
 826+ 9109
 827+ 9109 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 910A
 829+ 910A              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 910A
 831+ 910A 06 03            ld b,3
 832+ 910C 21 EB 89         ld hl,Coordenadas_X_Amadeus
 833+ 910F 7E           18 ld a,(hl)
 834+ 9110 BA               cp d
 835+ 9111 20 03            jr nz,17F
 836+ 9113
 837+ 9113              ; Colisión Amadeus !!!!!!!!!!
 838+ 9113
 839+ 9113 E1               pop hl
 840+ 9114 18 09            jr 14F
 841+ 9116
 842+ 9116 23           17 inc hl
 843+ 9117 10 F6            djnz 18B
 844+ 9119
 845+ 9119              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9119              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9119
 848+ 9119 E1           15 pop hl
 849+ 911A 23               inc hl
 850+ 911B 35               dec (hl)
 851+ 911C 2B               dec hl
 852+ 911D 18 0F            jr 10F
 853+ 911F
 854+ 911F              ; -----------------------debug
 855+ 911F
 856+ 911F              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 911F              ; _ almacén de coordenadas_X de Amadeus.
 858+ 911F
 859+ 911F E5           14 push hl
 860+ 9120 CD C5 91         call Elimina_disparo_de_base_de_datos
 861+ 9123 21 E6 89         ld hl,Impacto2
 862+ 9126 CB CE            set 1,(hl)
 863+ 9128 CD 0F 92         call Limpia_Coordenadas_X
 864+ 912B
 865+ 912B E1               pop hl
 866+ 912C 18 06            jr 12F
 867+ 912E
 868+ 912E CD 72 91     10 call Mueve_disparo
 869+ 9131 CD 49 91         call foto_disparo_a_borrar
 870+ 9134 C1           12 pop bc
 871+ 9135
 872+ 9135 18 04            jr 8F
 873+ 9137
 874+ 9137              ; ----- ----- ----- ----- ----- -----
 875+ 9137
 876+ 9137 ED 42        4 sbc hl,bc
 877+ 9139 28 0A            jr z,6F
 878+ 913B
 879+ 913B 2A E2 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 913E 23               inc hl
 881+ 913F 23               inc hl
 882+ 9140 22 E2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9143 18 8F            jr 5B
 884+ 9145
 885+ 9145 CD BA 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9148 C9               ret
 887+ 9149
 888+ 9149              ; ------------------------------------------------------------------
 889+ 9149
 890+ 9149              foto_disparo_a_borrar
 891+ 9149
 892+ 9149 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 914A A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 914B C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 914C
 896+ 914C E5               push hl
 897+ 914D 23               inc hl
 898+ 914E 23               inc hl
 899+ 914F ED 73 D9 89      ld (Stack),sp
 900+ 9153 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9154 FD E1            pop iy
 902+ 9156 DD E1            pop ix
 903+ 9158 E1               pop hl
 904+ 9159 ED 7B D9 89      ld sp,(Stack)
 905+ 915D 3A C8 89         ld a,(Ctrl_1)
 906+ 9160 CB C7            set 0,a
 907+ 9162 32 C8 89         ld (Ctrl_1),a
 908+ 9165 CD A0 7F         call Guarda_foto_registros
 909+ 9168 3A C8 89         ld a,(Ctrl_1)
 910+ 916B CB 87            res 0,a
 911+ 916D 32 C8 89         ld (Ctrl_1),a
 912+ 9170 E1               pop hl
 913+ 9171 C9               ret
 914+ 9172
 915+ 9172 E5           Mueve_disparo push hl
 916+ 9173 7E               ld a,(hl)
 917+ 9174 06 04            ld b,4
 918+ 9176 23           1 inc hl
 919+ 9177 10 FD            djnz 1B
 920+ 9179
 921+ 9179              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9179
 923+ 9179 CD F8 8C         call Extrae_address
 924+ 917C
 925+ 917C E6 01            and 1
 926+ 917E 28 2B            jr z,2F
 927+ 9180
 928+ 9180              ; Disparo hacia arriba, (Amadeus).
 929+ 9180
 930+ 9180              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 9180              ; _ de la dificultad.
 932+ 9180
 933+ 9180 CD F2 95         call PreviousScan
 934+ 9183 CD F2 95         call PreviousScan
 935+ 9186 CD F2 95         call PreviousScan
 936+ 9189
 937+ 9189              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 9189
 939+ 9189 7C               ld a,h
 940+ 918A FE 40            cp $40
 941+ 918C 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 918E
 943+ 918E              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 918E
 945+ 918E EB               ex de,hl
 946+ 918F 06 04            ld b,4
 947+ 9191 2B           6 dec hl
 948+ 9192 10 FD            djnz 6B
 949+ 9194
 950+ 9194 CD C5 91         call Elimina_disparo_de_base_de_datos
 951+ 9197 E1               pop hl
 952+ 9198 18 10            jr 7F
 953+ 919A
 954+ 919A              ; Se ha desplazado la bala, compruebo colisión.
 955+ 919A
 956+ 919A D5           3 push de
 957+ 919B C5               push bc
 958+ 919C
 959+ 919C CD 7F 8F         call Comprueba_Colision
 960+ 919F
 961+ 919F              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 919F
 963+ 919F 78               ld a,b
 964+ 91A0
 965+ 91A0 C1               pop bc
 966+ 91A1 D1               pop de
 967+ 91A2
 968+ 91A2 EB               ex de,hl
 969+ 91A3
 970+ 91A3 73               ld (hl),e
 971+ 91A4 23               inc hl
 972+ 91A5 72               ld (hl),d
 973+ 91A6
 974+ 91A6 E1           4 pop hl
 975+ 91A7 23               inc hl
 976+ 91A8 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 91A9 2B               dec hl
 978+ 91AA C9           7 ret
 979+ 91AB
 980+ 91AB              ; Disparo hacia abajo, (Entidad).
 981+ 91AB
 982+ 91AB              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 91AB              ; _ de la dificultad.
 984+ 91AB
 985+ 91AB CD E3 95     2 call NextScan
 986+ 91AE CD E3 95         call NextScan
 987+ 91B1 CD E3 95         call NextScan
 988+ 91B4
 989+ 91B4              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 91B4
 991+ 91B4 7C               ld a,h
 992+ 91B5 FE 58            cp $58
 993+ 91B7 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 91B9
 995+ 91B9 EB               ex de,hl
 996+ 91BA 06 04            ld b,4
 997+ 91BC 2B           5 dec hl
 998+ 91BD 10 FD            djnz 5B
 999+ 91BF
1000+ 91BF CD C5 91         call Elimina_disparo_de_base_de_datos
1001+ 91C2 E1               pop hl
1002+ 91C3 18 E5            jr 7B
1003+ 91C5
1004+ 91C5              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 91C5
1006+ 91C5 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 91C8 AF               xor a
1008+ 91C9 77               ld (hl),a
1009+ 91CA 54               ld d,h
1010+ 91CB 5D               ld e,l
1011+ 91CC 13               inc de
1012+ 91CD ED B0            ldir
1013+ 91CF C9               ret
1014+ 91D0
1015+ 91D0              ; -----------------------------------------------------------------
1016+ 91D0              ;
1017+ 91D0              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 91D0              ;
1019+ 91D0              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 91D0              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 91D0              ;
1022+ 91D0              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 91D0              ;
1024+ 91D0              ;   INPUTS:
1025+ 91D0              ;
1026+ 91D0              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 91D0              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 91D0              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 91D0
1030+ 91D0              ;   MODIFICA: A, HL, DE y C
1031+ 91D0
1032+ 91D0 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 91D1 79               ld a,c
1034+ 91D2 E6 01            and 1
1035+ 91D4 20 03            jr nz,1F
1036+ 91D6 14               inc d
1037+ 91D7 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 91D9
1039+ 91D9              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 91D9              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 91D9
1042+ 91D9 15           1 dec d
1043+ 91DA 23           2 inc hl
1044+ 91DB 72               ld (hl),d
1045+ 91DC
1046+ 91DC 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 91DD A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 91DE C8               ret z
1049+ 91DF
1050+ 91DF AF               xor a
1051+ 91E0 5F               ld e,a
1052+ 91E1 18 ED            jr Guarda_coordenadas_X
1053+ 91E3
1054+ 91E3              ; -----------------------------------------------------------------
1055+ 91E3              ;
1056+ 91E3              ;   12/04/23
1057+ 91E3              ;
1058+ 91E3
1059+ 91E3 3A E6 89     Selector_de_impactos ld a,(Impacto2)
1060+ 91E6 A7               and a
1061+ 91E7 C8               ret z
1062+ 91E8
1063+ 91E8 FE 04            cp 4
1064+ 91EA 20 09            jr nz,1F
1065+ 91EC
1066+ 91EC
1067+ 91EC              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 91EC
1069+ 91EC CD 10 90         call Detecta_colision_nave_entidad
1070+ 91EF
1071+ 91EF 21 E6 89         ld hl,Impacto2
1072+ 91F2 CB 5E            bit 3,(hl)
1073+ 91F4 C0               ret nz                                               ; Existe colisión, RET.
1074+ 91F5
1075+ 91F5              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 91F5              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 91F5
1078+ 91F5 21 E6 89     1 ld hl,Impacto2
1079+ 91F8 CB 4E            bit 1,(hl)
1080+ 91FA 28 07            jr z,2F
1081+ 91FC
1082+ 91FC 21 95 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 91FF 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 9201 18 0B            jr 3F
1085+ 9203
1086+ 9203 21 E6 89     2 ld hl,Impacto2
1087+ 9206 CB 46            bit 0,(hl)
1088+ 9208 C8               ret z
1089+ 9209
1090+ 9209              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 9209
1092+ 9209 21 C8 89         ld hl,Ctrl_1
1093+ 920C CB D6            set 2,(hl)
1094+ 920E
1095+ 920E C9           3 ret
1096+ 920F
1097+ 920F              ; -----------------------------------------------------------------
1098+ 920F              ;
1099+ 920F              ;   16/04/23
1100+ 920F              ;
1101+ 920F
1102+ 920F AF           Limpia_Coordenadas_X xor a
1103+ 9210 06 06            ld b,6
1104+ 9212 21 EB 89         ld hl,Coordenadas_X_Amadeus
1105+ 9215 77           1 ld (hl),a
1106+ 9216 23               inc hl
1107+ 9217 10 FC            djnz 1B
1108+ 9219 C9               ret
1109+ 921A
1110+ 921A              ; -----------------------------------------------------------------
1111+ 921A              ;
1112+ 921A              ;   25/04/23
1113+ 921A              ;
1114+ 921A
1115+ 921A              Determina_resultado_comparativa
1116+ 921A
1117+ 921A              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 921A              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 921A              ;
1120+ 921A              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 921A              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 921A              ;
1123+ 921A              ;   SBC HL,DE
1124+ 921A
1125+ 921A              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1126+ 921A              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1127+ 921A
1128+ 921A              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1129+ 921A              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1130+ 921A
1131+ 921A
1132+ 921A 3A 9E 89         ld a,(Cuad_objeto)
1133+ 921D FE 02            cp 2
1134+ 921F 28 26            jr z,2F
1135+ 9221 38 24            jr c,2F
1136+ 9223
1137+ 9223              ; Cuadrantes 3º y 4º
1138+ 9223
1139+ 9223 E6 01            and 1
1140+ 9225 28 10            jr z,4F
1141+ 9227
1142+ 9227              ; Cuadrante 3º
1143+ 9227
1144+ 9227 7C               ld a,h
1145+ 9228 06 00            ld b,0
1146+ 922A
1147+ 922A CD B5 92         call Compara_cositas_H3
1148+ 922D
1149+ 922D 04               inc b
1150+ 922E 05               dec b
1151+ 922F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1152+ 9230
1153+ 9230 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1154+ 9231 06 00            ld b,0
1155+ 9233
1156+ 9233 CD C7 92         call Compara_cositas_L3
1157+ 9236 C9               ret
1158+ 9237
1159+ 9237              ; Cuadrante 4º
1160+ 9237
1161+ 9237 7C           4 ld a,h
1162+ 9238 06 00            ld b,0
1163+ 923A
1164+ 923A CD D9 92         call Compara_cositas_H4
1165+ 923D
1166+ 923D 04               inc b
1167+ 923E 05               dec b
1168+ 923F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1169+ 9240
1170+ 9240 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1171+ 9241 06 00            ld b,0
1172+ 9243
1173+ 9243 CD EB 92         call Compara_cositas_L4
1174+ 9246 C9               ret
1175+ 9247
1176+ 9247              ; Cuadrantes 1º y 2º.
1177+ 9247
1178+ 9247 28 10        2 jr z,3F
1179+ 9249
1180+ 9249              ; 1er Cuadrante
1181+ 9249
1182+ 9249 7C               ld a,h
1183+ 924A 06 00            ld b,0
1184+ 924C
1185+ 924C CD 8D 92         call Compara_cositas_H1
1186+ 924F
1187+ 924F 04               inc b
1188+ 9250 05               dec b
1189+ 9251 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1190+ 9252
1191+ 9252 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1192+ 9253 06 00            ld b,0
1193+ 9255
1194+ 9255 CD A3 92         call Compara_cositas_L1
1195+ 9258 C9               ret
1196+ 9259
1197+ 9259
1198+ 9259              ; 2º Cuadrante
1199+ 9259
1200+ 9259 7C           3 ld a,h
1201+ 925A 06 00            ld b,0
1202+ 925C
1203+ 925C CD 69 92         call Compara_cositas_H2
1204+ 925F
1205+ 925F 04               inc b
1206+ 9260 05               dec b
1207+ 9261 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1208+ 9262
1209+ 9262 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1210+ 9263 06 00            ld b,0
1211+ 9265
1212+ 9265 CD 7B 92         call Compara_cositas_L2
1213+ 9268 C9               ret
1214+ 9269
1215+ 9269 A7           Compara_cositas_H2 and a
1216+ 926A 28 0D            jr z,1F
1217+ 926C              ;    cp $fd
1218+ 926C              ;    jr z,1F
1219+ 926C              ;    cp $fe
1220+ 926C              ;    jr z,1F
1221+ 926C FE FF            cp $ff
1222+ 926E 28 09            jr z,1F
1223+ 9270 FE 01            cp $01
1224+ 9272 28 05            jr z,1F
1225+ 9274 FE 02            cp $02
1226+ 9276 28 01            jr z,1F
1227+ 9278 C0               ret nz
1228+ 9279 04           1 inc b
1229+ 927A C9               ret
1230+ 927B
1231+ 927B A7           Compara_cositas_L2 and a
1232+ 927C 28 0D            jr z,1F
1233+ 927E              ;    cp $fd
1234+ 927E              ;    jr z,1F
1235+ 927E FE FE            cp $fe
1236+ 9280 28 09            jr z,1F
1237+ 9282 FE FF            cp $ff
1238+ 9284 28 05            jr z,1F
1239+ 9286 FE 01            cp $01
1240+ 9288 28 01            jr z,1F
1241+ 928A              ;    cp $02
1242+ 928A              ;    jr z,1F
1243+ 928A C0               ret nz
1244+ 928B 04           1 inc b
1245+ 928C C9               ret
1246+ 928D
1247+ 928D A7           Compara_cositas_H1 and a
1248+ 928E 28 11            jr z,1F
1249+ 9290              ;    cp $fd
1250+ 9290              ;    jr z,1F
1251+ 9290              ;    cp $fe
1252+ 9290              ;    jr z,1F
1253+ 9290 FE FF            cp $ff
1254+ 9292 28 0D            jr z,1F
1255+ 9294 FE 01            cp $01
1256+ 9296 28 09            jr z,1F
1257+ 9298 FE 02            cp $02
1258+ 929A 28 05            jr z,1F
1259+ 929C FE 03            cp $03
1260+ 929E 28 01            jr z,1F
1261+ 92A0 C0               ret nz
1262+ 92A1 04           1 inc b
1263+ 92A2 C9               ret
1264+ 92A3
1265+ 92A3 A7           Compara_cositas_L1 and a
1266+ 92A4 28 0D            jr z,1F
1267+ 92A6              ;    cp $fd
1268+ 92A6              ;    jr z,1F
1269+ 92A6              ;    cp $fe
1270+ 92A6              ;    jr z,1F
1271+ 92A6              ;    cp $ff
1272+ 92A6              ;    jr z,1F
1273+ 92A6 FE 01            cp $01
1274+ 92A8 28 09            jr z,1F
1275+ 92AA FE 02            cp $02
1276+ 92AC 28 05            jr z,1F
1277+ 92AE FE 03            cp $03
1278+ 92B0 28 01            jr z,1F
1279+ 92B2 C0               ret nz
1280+ 92B3 04           1 inc b
1281+ 92B4 C9               ret
1282+ 92B5
1283+ 92B5 A7           Compara_cositas_H3 and a
1284+ 92B6 28 0D            jr z,1F
1285+ 92B8              ;    cp $fd
1286+ 92B8              ;    jr z,1F
1287+ 92B8 FE FE            cp $fe
1288+ 92BA 28 09            jr z,1F
1289+ 92BC FE FF            cp $ff
1290+ 92BE 28 05            jr z,1F
1291+ 92C0 FE 01            cp $01
1292+ 92C2 28 01            jr z,1F
1293+ 92C4              ;    cp $02
1294+ 92C4              ;    jr z,1F
1295+ 92C4              ;    cp $03
1296+ 92C4              ;    jr z,1F
1297+ 92C4 C0               ret nz
1298+ 92C5 04           1 inc b
1299+ 92C6 C9               ret
1300+ 92C7
1301+ 92C7 A7           Compara_cositas_L3 and a
1302+ 92C8 28 0D            jr z,1F
1303+ 92CA              ;    cp $fd
1304+ 92CA              ;    jr z,1F
1305+ 92CA              ;    cp $fe
1306+ 92CA              ;    jr z,1F
1307+ 92CA              ;    cp $ff
1308+ 92CA              ;    jr z,1F
1309+ 92CA FE 01            cp $01
1310+ 92CC 28 09            jr z,1F
1311+ 92CE FE 02            cp $02
1312+ 92D0 28 05            jr z,1F
1313+ 92D2 FE 03            cp $03
1314+ 92D4 28 01            jr z,1F
1315+ 92D6 C0               ret nz
1316+ 92D7 04           1 inc b
1317+ 92D8 C9               ret
1318+ 92D9
1319+ 92D9 A7           Compara_cositas_H4 and a
1320+ 92DA 28 0D            jr z,1F
1321+ 92DC FE FD            cp $fd
1322+ 92DE 28 09            jr z,1F
1323+ 92E0 FE FE            cp $fe
1324+ 92E2 28 05            jr z,1F
1325+ 92E4 FE FF            cp $ff
1326+ 92E6 28 01            jr z,1F
1327+ 92E8              ;    cp $01
1328+ 92E8              ;    jr z,1F
1329+ 92E8              ;    cp $02
1330+ 92E8              ;    jr z,1F
1331+ 92E8              ;    cp $03
1332+ 92E8              ;    jr z,1F
1333+ 92E8 C0               ret nz
1334+ 92E9 04           1 inc b
1335+ 92EA C9               ret
1336+ 92EB
1337+ 92EB A7           Compara_cositas_L4 and a
1338+ 92EC 28 0D            jr z,1F
1339+ 92EE              ;    cp $fd
1340+ 92EE              ;    jr z,1F
1341+ 92EE FE FE            cp $fe
1342+ 92F0 28 09            jr z,1F
1343+ 92F2 FE FF            cp $ff
1344+ 92F4 28 05            jr z,1F
1345+ 92F6 FE 01            cp $01
1346+ 92F8 28 01            jr z,1F
1347+ 92FA              ;    cp $02
1348+ 92FA              ;    jr z,1F
1349+ 92FA              ;    cp $03
1350+ 92FA              ;    jr z,1F
1351+ 92FA C0               ret nz
1352+ 92FB 04           1 inc b
1353+ 92FC C9               ret
# file closed: Disparo.asm
1251  92FD              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92FD              ; ******************************************************************************************************************************************************************************************
   2+ 92FD              ;
   3+ 92FD              ; 01/23
   4+ 92FD              ;
   5+ 92FD              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92FD
   7+ 92FD CD D7 95     Draw call Prepara_draw
   8+ 9300 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9301 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9302 28 05        	jr z,2F
  11+ 9304
  12+ 9304 3A 9E 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9307 18 0C        	jr 1F
  14+ 9309 2A 9C 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 930C 22 8C 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 930F CD 9E 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9312              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9312 CD 5D 9D     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9315 3A B8 89     1 ld a,(Ctrl_0)
  20+ 9318 CB 6F        	bit 5,a
  21+ 931A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 931C
  23+ 931C CD 34 93     	call Comprueba_limite_horizontal
  24+ 931F CD C4 93     	call Comprueba_limite_vertical
  25+ 9322
  26+ 9322              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9322
  28+ 9322 CD 11 95     3 call calcula_CColumnass
  29+ 9325 CD 48 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9328 CD 9D 95     	call Define_rutina_de_impresion
  31+ 932B
  32+ 932B 3A B8 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 932E CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9330 32 B8 89     	ld (Ctrl_0),a
  35+ 9333
  36+ 9333 C9           	ret
  37+ 9334
  38+ 9334              ; *******************************************************************************************************************************************************************************************
  39+ 9334              ;	21/01/23
  40+ 9334              ;
  41+ 9334              ; 	Comprueba_limite_horizontal.
  42+ 9334              ;
  43+ 9334              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9334              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9334              ;
  46+ 9334              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9334              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9334              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9334              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9334
  51+ 9334
  52+ 9334
  53+ 9334 3A B8 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9337 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9339 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 933B E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 933D 32 B8 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9340 18 09            jr 6F
  59+ 9342 CB 5F        1 bit 3,a
  60+ 9344 28 0A            jr z,2F
  61+ 9346 E6 F7            and $f7
  62+ 9348 32 B8 89         ld (Ctrl_0),a
  63+ 934B CD 9E 94     6 call Inicializacion
  64+ 934E 18 5B            jr 5F
  65+ 9350 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9351
  67+ 9351              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9351              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9351
  70+ 9351 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9352 2A C3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9355 CD A3 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9358 67           	ld h,a
  74+ 9359 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 935A CD A3 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 935D 67           	ld h,a
  77+ 935E A7           	and a
  78+ 935F ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9361 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9362 3A 9E 89     	ld a,(Cuad_objeto)
  81+ 9365 FE 02        	cp 2
  82+ 9367 38 1E        	jr c,3F
  83+ 9369 28 1C        	jr z,3F
  84+ 936B 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 936C 28 23            jr z,7F
  86+ 936E 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 9370 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 9372 E1           	pop hl
  89+ 9373
  90+ 9373              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 9373              ; _para indicar con E="2" en caso necesario.
  92+ 9373
  93+ 9373 E5               push hl
  94+ 9374 C5               push bc
  95+ 9375 CD A3 98     	call calcula_tercio
  96+ 9378 FE 01        	cp 1
  97+ 937A 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 937C CD AC 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 937F 28 26            jr z,9F
 100+ 9381 38 24            jr c,9F
 101+ 9383 1E 00        11 ld e,0
 102+ 9385 18 22            jr 8F
 103+ 9387 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 9388 28 07        	jr z, 7F
 105+ 938A 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 938C 1E 00         	ld e,0
 107+ 938E E1           	pop hl
 108+ 938F 18 04        	jr 4F
 109+ 9391 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9393 18 15            jr 10F
 111+ 9395
 112+ 9395              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 9395              ; _para indicar con E="2" en caso necesario.
 114+ 9395
 115+ 9395 E5           4 push hl
 116+ 9396 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 9397 CD A3 98     	call calcula_tercio
 118+ 939A FE 01        	cp 1
 119+ 939C 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 939E CD AC 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93A1 28 04            jr z,9F
 122+ 93A3 30 02            jr nc,9F
 123+ 93A5 18 02        	jr 8F
 124+ 93A7 1E 02        9 ld e,2
 125+ 93A9 C1           8 pop bc
 126+ 93AA E1           10 pop hl
 127+ 93AB C9           5 ret
 128+ 93AC
 129+ 93AC              ; --------------------
 130+ 93AC              ;
 131+ 93AC              ; 25/08/22
 132+ 93AC
 133+ 93AC CD A3 98     Comprueba_centro call calcula_tercio
 134+ 93AF 67               ld h,a
 135+ 93B0 08           	ex af,af
 136+ 93B1 FE 02        	cp 2
 137+ 93B3 38 07        	jr c,1F
 138+ 93B5 28 05        	jr z,1F
 139+ 93B7 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93BA 18 03        	jr 2F
 141+ 93BC 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93BF 08           2 ex af,af
 143+ 93C0 A7               and a
 144+ 93C1 ED 42            sbc hl,bc
 145+ 93C3 C9               ret
 146+ 93C4
 147+ 93C4              ; *********************************************************************************************************************************************************************************************
 148+ 93C4              ;
 149+ 93C4              ;   16/8/22
 150+ 93C4              ;
 151+ 93C4              ;	Comprueba_limite_vertical
 152+ 93C4              ;
 153+ 93C4              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93C4              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93C4              ;
 156+ 93C4
 157+ 93C4 2A 8C 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93C7 7D           	ld a,l
 159+ 93C8 E6 1F        	and $1F
 160+ 93CA 57           	ld d,a
 161+ 93CB 3A C5 89     	ld a,(Limite_vertical)
 162+ 93CE BA           	cp d 											; Límite - Posición.
 163+ 93CF 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 93D0 3A 9E 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 93D3 CB 47        	bit 0,a
 166+ 93D5 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 93D7
 168+ 93D7              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 93D7
 170+ 93D7 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 93D8 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 93DA
 173+ 93DA              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 93DA              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 93DA
 176+ 93DA 3A 90 89         ld a,(Coordenada_X)
 177+ 93DD 16 0F            ld d,Centro_izquierda
 178+ 93DF A7               and a
 179+ 93E0 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 93E1 28 1E            jr z,3F
 181+ 93E3 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 93E5              ;                                                    ; _salimos sin modificar nada.
 183+ 93E5 18 0E            jr 2F
 184+ 93E7 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 93E8 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 93EA
 187+ 93EA              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 93EA              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 93EA
 190+ 93EA 3A 90 89         ld a,(Coordenada_X)
 191+ 93ED 16 10            ld d,Centro_derecha
 192+ 93EF A7               and a
 193+ 93F0 92               sub d
 194+ 93F1 28 0E            jr z,3F
 195+ 93F3 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 93F5              ;                                                    ; _salimos sin modificar nada.
 197+ 93F5 CB 43        2 bit 0,e
 198+ 93F7 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 93F9 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 93FA CD 8E 94         call Modificaccionne
 201+ 93FD C1           	pop bc
 202+ 93FE CD 9E 94         call Inicializacion
 203+ 9401 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9402
 205+ 9402              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9402
 207+ 9402 C5           4 push bc
 208+ 9403 01 8B 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9406 0A           	ld a,(bc)
 210+ 9407 3D           	dec a
 211+ 9408 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9409 7D           	ld a,l
 213+ 940A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 940B CB 47        	bit 0,a
 215+ 940D 28 03        	jr z,5F
 216+ 940F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9410 18 2E        	jr 7F
 218+ 9412
 219+ 9412              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9412
 221+ 9412 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9413 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9414 3A B8 89     	ld a,(Ctrl_0)
 224+ 9417 CB 4F        	bit 1,a
 225+ 9419 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 941B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 941C
 228+ 941C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 941C
 230+ 941C 1C               inc e
 231+ 941D 1D               dec e
 232+ 941E 20 07            jr nz,12F
 233+ 9420 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9421 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9422 22 8C 89     	ld (Posicion_actual),hl
 236+ 9425 18 44        13 jr 9F
 237+ 9427 CB 43        12 bit 0,e
 238+ 9429 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 942B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 942B C1           	pop bc
 241+ 942C 18 D3        	jr 3B
 242+ 942E 80           14 add b
 243+ 942F 6F               ld l,a
 244+ 9430 22 8C 89     	ld (Posicion_actual),hl
 245+ 9433 CD 8E 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9436 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9438 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 943A 32 B8 89         ld (Ctrl_0),a
 249+ 943D F1           	pop af
 250+ 943E 18 2B        	jr 9F
 251+ 9440
 252+ 9440              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9440
 254+ 9440 F5           7 push af
 255+ 9441 3A B8 89     	ld a,(Ctrl_0)
 256+ 9444 CB 47        	bit 0,a
 257+ 9446 20 1D        	jr nz,8F
 258+ 9448 F1           	pop af
 259+ 9449
 260+ 9449              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9449
 262+ 9449 1C           	inc e
 263+ 944A 1D               dec e
 264+ 944B 20 07            jr nz,10F
 265+ 944D 90           	sub b
 266+ 944E 6F               ld l,a
 267+ 944F 22 8C 89     	ld (Posicion_actual),hl
 268+ 9452 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9454              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9454 CB 43        10 bit 0,e
 271+ 9456 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9458              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9458 C1           	pop bc
 274+ 9459 18 A6        	jr 3B
 275+ 945B 90           16 sub b
 276+ 945C 6F               ld l,a
 277+ 945D 22 8C 89     	ld (Posicion_actual),hl
 278+ 9460 CD 8E 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9463 18 06            jr 9F
 280+ 9465 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9467 32 B8 89         ld (Ctrl_0),a
 282+ 946A F1           	pop af
 283+ 946B C1           9 pop bc
 284+ 946C 1E 00        	ld e,0
 285+ 946E CD 9E 94         call Inicializacion
 286+ 9471 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 9472 08           	ex af,af
 288+ 9473 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 9474 18 8B            jr 3B
 290+ 9476
 291+ 9476              ; --------------------
 292+ 9476
 293+ 9476 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9478 CD F2 95     1 call PreviousScan
 295+ 947B 10 FB            djnz 1B
 296+ 947D 22 8C 89     	ld (Posicion_actual),hl
 297+ 9480 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 9481 C9           	ret
 299+ 9482
 300+ 9482              ; --------------------
 301+ 9482
 302+ 9482 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 9484 CD E3 95     1 call NextScan
 304+ 9487 10 FB            djnz 1B
 305+ 9489 22 8C 89     	ld (Posicion_actual),hl
 306+ 948C AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 948D C9           	ret
 308+ 948E
 309+ 948E              ; --------------------
 310+ 948E              ;
 311+ 948E              ;	22/01/23
 312+ 948E              ;
 313+ 948E              ;	E="1". Hemos cambiado de cuadrante.
 314+ 948E              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 948E              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 948E
 317+ 948E
 318+ 948E              Modificaccionne
 319+ 948E
 320+ 948E 3A 9E 89     	ld a,(Cuad_objeto)
 321+ 9491 FE 02        	cp 2
 322+ 9493 CC 76 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 9496 DC 76 94         call c,Modifica_Pos_actual
 324+ 9499 C8           	ret z
 325+ 949A CD 82 94         call Modifica_Pos_actual2
 326+ 949D C9               ret
 327+ 949E
 328+ 949E              ; *************************************************************************************************************************************************************************************************
 329+ 949E              ;
 330+ 949E              ;	13/8/22
 331+ 949E              ;
 332+ 949E              ;	Inicializacion
 333+ 949E              ;
 334+ 949E              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 949E              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 949E              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 949E              ;
 338+ 949E              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 949E              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 949E              ;	_ desaparece/aparece.
 341+ 949E
 342+ 949E              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 949E              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 949E              ;
 345+ 949E              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 949E              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 949E              ; 		   [E] ="0"
 348+ 949E
 349+ 949E              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 949E
 351+ 949E CD A3 98     Inicializacion call calcula_tercio
 352+ 94A1 28 36        	jr z,primit
 353+ 94A3 E6 02        	and 2
 354+ 94A5 20 07        	jr nz,segmit
 355+ 94A7 7D           	ld a,l
 356+ 94A8 FE 7F        	cp $7f
 357+ 94AA 38 2D        	jr c,primit
 358+ 94AC 28 2B        	jr z,primit
 359+ 94AE CD 0B 95     segmit call column
 360+ 94B1 38 13        	jr c,tercuad
 361+ 94B3 3E 04        cuarcuad ld a,4
 362+ 94B5 32 9E 89     	ld (Cuad_objeto),a
 363+ 94B8 21 20 48     	ld hl,$4820
 364+ 94BB 22 C3 89     	ld (Limite_horizontal),hl
 365+ 94BE 21 C5 89     	ld hl,Limite_vertical
 366+ 94C1 36 0D        	ld (hl),$0d
 367+ 94C3 08           	ex af,af
 368+ 94C4 18 3C        	jr 1F
 369+ 94C6              tercuad
 370+ 94C6 3E 03        	ld a,3
 371+ 94C8 32 9E 89     	ld (Cuad_objeto),a
 372+ 94CB 21 20 48     	ld hl,$4820
 373+ 94CE 22 C3 89     	ld (Limite_horizontal),hl
 374+ 94D1 21 C5 89     	ld hl,Limite_vertical
 375+ 94D4 36 12        	ld (hl),$12
 376+ 94D6 08           	ex af,af
 377+ 94D7 18 29        	jr 1F
 378+ 94D9 CD 0B 95     primit call column
 379+ 94DC 38 13        	jr c, primcuad
 380+ 94DE              segcuad
 381+ 94DE 3E 02        	ld a,2
 382+ 94E0 32 9E 89     	ld (Cuad_objeto),a
 383+ 94E3 21 C0 4F     	ld hl,$4fc0
 384+ 94E6 22 C3 89     	ld (Limite_horizontal),hl
 385+ 94E9 21 C5 89     	ld hl,Limite_vertical
 386+ 94EC 36 0D        	ld (hl),$0d
 387+ 94EE 08           	ex af,af
 388+ 94EF 18 11        	jr 1F
 389+ 94F1              primcuad
 390+ 94F1 3E 01        	ld a,1
 391+ 94F3 32 9E 89     	ld (Cuad_objeto),a
 392+ 94F6 21 C0 4F     	ld hl,$4fc0
 393+ 94F9 22 C3 89     	ld (Limite_horizontal),hl
 394+ 94FC 21 C5 89     	ld hl,Limite_vertical
 395+ 94FF 36 12        	ld (hl),$12
 396+ 9501 08           	ex af,af
 397+ 9502 CD 0F 9C     1 call Genera_coordenadas
 398+ 9505 21 B8 89     	ld hl,Ctrl_0
 399+ 9508 CB EE        	set 5,(hl)
 400+ 950A C9           	ret
 401+ 950B
 402+ 950B              ; ------------------------------------------------------------------------------------------------------------------
 403+ 950B
 404+ 950B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 950B              ;
 406+ 950B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 950B
 408+ 950B 7D           column ld a,l
 409+ 950C E6 1F        	and $1f
 410+ 950E FE 10         	cp $10
 411+ 9510 C9            	ret
 412+ 9511
 413+ 9511              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9511              ;
 415+ 9511              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9511              ;
 417+ 9511              ; 14/12/22
 418+ 9511              ;
 419+ 9511              ;	Modifica: A y BC.
 420+ 9511
 421+ 9511 3A 9E 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9514 E6 01        	and 1
 423+ 9516 28 17        	jr z,1F
 424+ 9518
 425+ 9518              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9518
 427+ 9518 3A 90 89     	ld a,(Coordenada_X)
 428+ 951B 47           	ld b,a
 429+ 951C 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 951D 79           	ld a,c
 431+ 951E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 951F 38 08        	jr c,2F
 433+ 9521 47           	ld b,a
 434+ 9522 79           	ld a,c
 435+ 9523 90           	sub b
 436+ 9524 32 C2 89     	ld (Columnas),a
 437+ 9527 18 1B        	jr 4F
 438+ 9529 79           2 ld a,c
 439+ 952A 32 C2 89     	ld (Columnas),a
 440+ 952D 18 15        	jr 4F
 441+ 952F
 442+ 952F              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 952F
 444+ 952F 3A 90 89     1 ld a,(Coordenada_X)
 445+ 9532 81           	add c
 446+ 9533 3D           	dec a
 447+ 9534 D6 1F        	sub $1f
 448+ 9536 38 08        	jr c,3F
 449+ 9538 47           	ld b,a
 450+ 9539 79           	ld a,c
 451+ 953A 90           	sub b
 452+ 953B 32 C2 89     	ld (Columnas),a
 453+ 953E 18 04        	jr 4F
 454+ 9540 79           3 ld a,c
 455+ 9541 32 C2 89     	ld (Columnas),a
 456+ 9544 D9           4 exx
 457+ 9545 4F           	ld c,a
 458+ 9546 D9           	exx
 459+ 9547 C9            ret
 460+ 9548
 461+ 9548              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9548              ;
 463+ 9548              ; 7/1/23
 464+ 9548              ;
 465+ 9548              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9548              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9548              ;
 468+ 9548              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9548              ;	DESTRUYE: HL,B Y A.
 470+ 9548
 471+ 9548 3A 9E 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 954B FE 02        	cp 2
 473+ 954D 38 18        	jr c,1F
 474+ 954F 28 16        	jr z,1F
 475+ 9551 E6 01        	and 1
 476+ 9553 28 0D        	jr z,3F
 477+ 9555
 478+ 9555              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9555
 480+ 9555 CD 91 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9558
 482+ 9558 7D           9 ld a,l
 483+ 9559 E6 1F        	and $1f
 484+ 955B 28 2A        	jr z,7F
 485+ 955D 2B           	dec hl
 486+ 955E 10 F8        	djnz 9B
 487+ 9560 18 25        	jr 7F
 488+ 9562
 489+ 9562              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9562
 491+ 9562 2A 8C 89     3 ld hl,(Posicion_actual)
 492+ 9565 18 20        	jr 7F
 493+ 9567
 494+ 9567 28 14        1 jr z,2F
 495+ 9569
 496+ 9569              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9569
 498+ 9569 CD 91 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 956C
 500+ 956C 7D           4 ld a,l
 501+ 956D E6 1F        	and $1f
 502+ 956F 28 03        	jr z,6F
 503+ 9571 2B           	dec hl
 504+ 9572 10 F8        	djnz 4B
 505+ 9574 06 0F        6 ld b,15
 506+ 9576 CD F2 95     5 call PreviousScan
 507+ 9579 10 FB        	djnz 5B
 508+ 957B 18 0A        	jr 7F
 509+ 957D
 510+ 957D              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 957D
 512+ 957D CD 91 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 9580 06 0F        	ld b,15
 514+ 9582 CD F2 95     8 call PreviousScan
 515+ 9585 10 FB        	djnz 8B
 516+ 9587
 517+ 9587 E5           7 push hl
 518+ 9588 DD E1        	pop ix
 519+ 958A
 520+ 958A 2A 8E 89     	ld hl,(Puntero_objeto)
 521+ 958D E5           	push hl
 522+ 958E FD E1        	pop iy
 523+ 9590
 524+ 9590 C9           	ret
 525+ 9591
 526+ 9591              ; --------------------------------------------------------------------------------------------------------------------
 527+ 9591              ;
 528+ 9591              ;	2/1/23
 529+ 9591              ;
 530+ 9591              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 9591              ;
 532+ 9591              ;	Tras esta rutina tenemos:
 533+ 9591              ;
 534+ 9591              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 9591              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 9591              ;
 537+ 9591              ;	DESTRUYE!!!!! HL,B y A.
 538+ 9591
 539+ 9591 2A 8C 89     Operandos ld hl,(Posicion_actual)
 540+ 9594 3A C2 89     	ld a,(Columnas)
 541+ 9597 3D           	dec a
 542+ 9598 20 01        	jr nz,1F
 543+ 959A 3C           	inc a
 544+ 959B 47           1 ld b,a
 545+ 959C C9           	ret
 546+ 959D
 547+ 959D              ; --------------------------------------------------------------------------------------------------------------------
 548+ 959D              ;
 549+ 959D              ;	3/1/23
 550+ 959D              ;
 551+ 959D              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 959D              ;
 553+ 959D              ;	Destruye: A,B,HL y DE.
 554+ 959D
 555+ 959D              Define_rutina_de_impresion
 556+ 959D
 557+ 959D 3A 8B 89     	ld a,(Columns)
 558+ 95A0 47           	ld b,a
 559+ 95A1 3A C2 89     	ld a,(Columnas)
 560+ 95A4 B8           	cp b
 561+ 95A5 20 0D        	jr nz,2f
 562+ 95A7
 563+ 95A7              ;	La entidad se imprime entera.
 564+ 95A7
 565+ 95A7 21 73 96     	ld hl, Indice_entidades_completas
 566+ 95AA E6 01        	and 1
 567+ 95AC 28 02        	jr z,1F
 568+ 95AE
 569+ 95AE 23           	inc hl
 570+ 95AF 23           	inc hl
 571+ 95B0
 572+ 95B0 CD F8 8C     1 call Extrae_address
 573+ 95B3 C9           	ret		;	ret
 574+ 95B4
 575+ 95B4              ;	La entidad no se imprime entera en pantalla.
 576+ 95B4
 577+ 95B4 3A 9E 89     2 ld a,(Cuad_objeto)
 578+ 95B7 E6 01        	and 1
 579+ 95B9 28 17        	jr z,3F
 580+ 95BB
 581+ 95BB              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95BB
 583+ 95BB 21 77 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95BE 3A 8B 89     4 ld a,(Columns)
 585+ 95C1 E6 01        	and 1
 586+ 95C3 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95C5
 588+ 95C5 23           	inc hl
 589+ 95C6 23           	inc hl
 590+ 95C7
 591+ 95C7 3A C2 89     	ld a,(Columnas)
 592+ 95CA E6 01        	and 1
 593+ 95CC 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 95CE
 595+ 95CE 23           	inc hl
 596+ 95CF 23           	inc hl
 597+ 95D0
 598+ 95D0 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 95D2
 600+ 95D2 21 7D 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 95D5 18 E7        	jr 4B
 602+ 95D7
 603+ 95D7              ; --------------------------------------------------------------------------------------------------------------------
 604+ 95D7              ;
 605+ 95D7              ;	Prepara_draw
 606+ 95D7              ;
 607+ 95D7              ;	Es una rutina de carga.
 608+ 95D7              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 95D7              ;
 610+ 95D7              ;	FUNCIONAMIENTO:
 611+ 95D7              ;
 612+ 95D7              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 95D7              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 95D7              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 95D7              ;
 616+ 95D7              ;	DESTRUYE:
 617+ 95D7              ;
 618+ 95D7              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 95D7
 620+ 95D7 21 8A 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 95DA 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 95DB 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 95DC 4E           	ld c,(hl)
 624+ 95DD 2A 8C 89     	ld hl,(Posicion_actual)
 625+ 95E0 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 95E2 C9           	ret
 627+ 95E3
 628+ 95E3              ;----------------------------------------------------------------------------------------------------------------
 629+ 95E3              ;
 630+ 95E3              ;	5/08/22
 631+ 95E3              ;
 632+ 95E3              ;   NextScan.
 633+ 95E3              ;
 634+ 95E3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 95E3              ;
 636+ 95E3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 95E3              ;
 638+ 95E3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 95E3              ;
 640+ 95E3              ;       DESTRUIDOS: AF y HL !!!
 641+ 95E3              ;
 642+ 95E3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 95E3              ;
 644+ 95E3
 645+ 95E3 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 95E4 7C               ld a,h
 647+ 95E5 E6 07            and 7
 648+ 95E7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 95E8
 650+ 95E8 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 95E9 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 95EB 6F               ld l,a
 653+ 95EC D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 95ED
 655+ 95ED 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 95EE D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 95F0 67               ld h,a
 658+ 95F1 C9               ret
 659+ 95F2
 660+ 95F2              ;----------------------------------------------------------------------------------------------------------------
 661+ 95F2              ;
 662+ 95F2              ;	5/08/22
 663+ 95F2              ;
 664+ 95F2              ;   PreviousScan.
 665+ 95F2              ;
 666+ 95F2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 95F2              ;
 668+ 95F2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 95F2              ;
 670+ 95F2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 95F2              ;
 672+ 95F2              ;       DESTRUIDOS: AF y HL !!!
 673+ 95F2              ;
 674+ 95F2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 95F2              ;
 676+ 95F2
 677+ 95F2 7C           PreviousScan ld a,h
 678+ 95F3 25               dec h               ; Dec H.
 679+ 95F4 E6 07            and 7
 680+ 95F6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 95F7
 682+ 95F7 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 95F8 D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 95FA 6F               ld l,a
 685+ 95FB D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 95FC
 687+ 95FC 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 95FD C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 95FF 67               ld h,a
 690+ 9600 C9               ret
 691+ 9601
 692+ 9601              ; -----------------------------------------------------------------------------------
 693+ 9601              ;
 694+ 9601              ;	28/2/23
 695+ 9601              ;
 696+ 9601              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9601              ;	Extrae fotos de Album_de_fotos.
 698+ 9601
 699+ 9601 3A D4 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 9604 A7           	and a
 701+ 9605 C8           	ret z
 702+ 9606 ED 73 D9 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 960A 31 00 70     	ld sp,Album_de_fotos
 704+ 960D
 705+ 960D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 960F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9610 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9611
 709+ 9611 ED 73 DB 89  	ld (Stack_2),sp
 710+ 9615 ED 7B D9 89  	ld sp,(Stack)
 711+ 9619
 712+ 9619              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9619
 714+ 9619 3E CD        	ld a,$cd
 715+ 961B 32 23 96     	ld (Imprime),a
 716+ 961E EB           	ex de,hl
 717+ 961F 22 24 96     	ld (Imprime+1),hl
 718+ 9622 EB           	ex de,hl
 719+ 9623
 720+ 9623              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9623
 722+ 9623 00 00 00     Imprime db 0,0,0
 723+ 9626
 724+ 9626 3A D4 89     	ld a,(Numero_de_malotes)
 725+ 9629 3D           	dec a
 726+ 962A 28 09        	jr z,1F
 727+ 962C 32 D4 89      	ld (Numero_de_malotes),a
 728+ 962F
 729+ 962F ED 7B DB 89   	ld sp,(Stack_2)
 730+ 9633 18 D8        	jr 2B
 731+ 9635
 732+ 9635 AF           1 xor a
 733+ 9636 32 DB 89     	ld (Stack_2),a
 734+ 9639 C9           	ret
 735+ 963A
 736+ 963A              ; -----------------------------------------------------------------------------------
 737+ 963A              ;
 738+ 963A              ;	28/2/23
 739+ 963A              ;
 740+ 963A              ;	Pinta los disparos generados.
 741+ 963A
 742+ 963A              Extrae_foto_disparos
 743+ 963A
 744+ 963A 3A E1 89     	ld a,(Numero_de_disparotes)
 745+ 963D A7           	and a
 746+ 963E C8           	ret z
 747+ 963F ED 73 D9 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9643 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 9646
 750+ 9646 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 9648 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9649 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 964A
 754+ 964A ED 73 DB 89  	ld (Stack_2),sp
 755+ 964E ED 7B D9 89  	ld sp,(Stack)
 756+ 9652
 757+ 9652              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 9652
 759+ 9652 3E CD        	ld a,$cd
 760+ 9654 32 5C 96     	ld (Imprime2),a
 761+ 9657 EB           	ex de,hl
 762+ 9658 22 5D 96     	ld (Imprime2+1),hl
 763+ 965B EB           	ex de,hl
 764+ 965C
 765+ 965C              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 965C
 767+ 965C 00 00 00     Imprime2 db 0,0,0
 768+ 965F
 769+ 965F 3A E1 89     	ld a,(Numero_de_disparotes)
 770+ 9662 3D           	dec a
 771+ 9663 28 09        	jr z,1F
 772+ 9665 32 E1 89      	ld (Numero_de_disparotes),a
 773+ 9668
 774+ 9668 ED 7B DB 89  	ld sp,(Stack_2)
 775+ 966C 18 D8        	jr 2B
 776+ 966E
 777+ 966E AF           1 xor a
 778+ 966F 32 DB 89     	ld (Stack_2),a
 779+ 9672 C9           	ret
 780+ 9673
# file closed: Draw_XOR.asm
1252  9673              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9673              ;   índices de Rutinas de impresión.
   2+ 9673
   3+ 9673 83 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9675 B0 96            defw Pinta_Amadeus_3x2
   5+ 9677
   6+ 9677 06 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9679 A6 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 967B 5A 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 967D
  10+ 967D 30 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 967F 34 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9681 E8 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9683
  14+ 9683
  15+ 9683              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9683              ;
  17+ 9683              ;   12/12/22
  18+ 9683              ;
  19+ 9683              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9683              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9683              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9683              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9683              ;
  24+ 9683              ;   Modifica: DE y HL.
  25+ 9683
  26+ 9683 ED 73 D9 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9687 FD F9        	ld sp,iy
  28+ 9689 06 10            ld b,16
  29+ 968B D1           1 pop de
  30+ 968C 7B               ld a,e
  31+ 968D AE               xor (hl)
  32+ 968E 77           	ld (hl),a
  33+ 968F 23           	inc hl
  34+ 9690 7A               ld a,d
  35+ 9691 AE               xor (hl)
  36+ 9692 77           	ld (hl),a
  37+ 9693 2B           	dec hl
  38+ 9694 24           	inc h
  39+ 9695 7C               ld a,h
  40+ 9696 E6 07            and 7
  41+ 9698 20 0A            jr nz,2F
  42+ 969A 7D               ld a,l
  43+ 969B C6 20            add a,$20
  44+ 969D 6F               ld l,a
  45+ 969E 38 04            jr c,2F
  46+ 96A0 7C               ld a,h
  47+ 96A1 D6 08            sub 8
  48+ 96A3 67               ld h,a
  49+ 96A4 7C           2 ld a,h
  50+ 96A5 FE 58            cp $58
  51+ 96A7 28 02            jr z,3F
  52+ 96A9 10 E0            djnz 1B
  53+ 96AB ED 7B D9 89  3 ld sp,(Stack)
  54+ 96AF C9           	ret
  55+ 96B0
  56+ 96B0 ED 73 D9 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96B4 FD F9        	ld sp,iy
  58+ 96B6 06 08            ld b,8
  59+ 96B8 D1           1 pop de
  60+ 96B9 7B               ld a,e
  61+ 96BA AE               xor (hl)
  62+ 96BB 77           	ld (hl),a
  63+ 96BC 23           	inc hl
  64+ 96BD 7A               ld a,d
  65+ 96BE AE               xor (hl)
  66+ 96BF 77           	ld (hl),a
  67+ 96C0 23           	inc hl
  68+ 96C1 D1           	pop de
  69+ 96C2 7B               ld a,e
  70+ 96C3 AE               xor (hl)
  71+ 96C4 77           	ld (hl),a
  72+ 96C5 2B           	dec hl
  73+ 96C6 2B           	dec hl
  74+ 96C7 24           	inc h
  75+ 96C8 7C               ld a,h
  76+ 96C9 E6 07            and 7
  77+ 96CB 20 0A            jr nz,2F
  78+ 96CD 7D               ld a,l
  79+ 96CE C6 20            add a,$20
  80+ 96D0 6F               ld l,a
  81+ 96D1 38 04            jr c,2F
  82+ 96D3 7C               ld a,h
  83+ 96D4 D6 08            sub 8
  84+ 96D6 67               ld h,a
  85+ 96D7 7C           2 ld a,h
  86+ 96D8 FE 58            cp $58
  87+ 96DA 28 25            jr z,4F
  88+ 96DC 7A               ld a,d
  89+ 96DD AE               xor (hl)
  90+ 96DE 77               ld (hl),a
  91+ 96DF D1           	pop de
  92+ 96E0 23           	inc hl
  93+ 96E1 7B               ld a,e
  94+ 96E2 AE               xor (hl)
  95+ 96E3 77           	ld (hl),a
  96+ 96E4 23           	inc hl
  97+ 96E5 7A               ld a,d
  98+ 96E6 AE               xor (hl)
  99+ 96E7 77           	ld (hl),a
 100+ 96E8 2B           	dec hl
 101+ 96E9 2B           	dec hl
 102+ 96EA 24           	inc h
 103+ 96EB 7C               ld a,h
 104+ 96EC E6 07            and 7
 105+ 96EE 20 0A            jr nz,3F
 106+ 96F0 7D               ld a,l
 107+ 96F1 C6 20            add a,$20
 108+ 96F3 6F               ld l,a
 109+ 96F4 38 04            jr c,3F
 110+ 96F6 7C               ld a,h
 111+ 96F7 D6 08            sub 8
 112+ 96F9 67               ld h,a
 113+ 96FA 7C           3 ld a,h
 114+ 96FB FE 58            cp $58
 115+ 96FD 28 02            jr z,4F
 116+ 96FF 10 B7            djnz 1B
 117+ 9701 ED 7B D9 89  4 ld sp,(Stack)
 118+ 9705 C9           	ret
 119+ 9706
 120+ 9706              ; ---------------------------------------------------
 121+ 9706
 122+ 9706 ED 73 D9 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 970A FD F9        	ld sp,iy
 124+ 970C
 125+ 970C              ; >>>
 126+ 970C
 127+ 970C 06 10            ld b,16
 128+ 970E D1           1 pop de
 129+ 970F 7A           	ld a,d
 130+ 9710 AE           	xor (hl)
 131+ 9711 77           	ld (hl),a
 132+ 9712 24           	inc h
 133+ 9713 7C               ld a,h
 134+ 9714 E6 07            and 7
 135+ 9716 20 0C            jr nz,2F
 136+ 9718 7D               ld a,l
 137+ 9719 C6 20            add a,$20
 138+ 971B 6F               ld l,a
 139+ 971C 38 06            jr c,2F
 140+ 971E 7C               ld a,h
 141+ 971F D6 08            sub 8
 142+ 9721 67               ld h,a
 143+ 9722 18 00            jr 2F
 144+ 9724 7C           2 ld a,h
 145+ 9725 FE 58            cp $58
 146+ 9727 28 02            jr z,3F
 147+ 9729 10 E3            djnz 1B
 148+ 972B ED 7B D9 89  3 ld sp,(Stack)
 149+ 972F C9           	ret
 150+ 9730
 151+ 9730 ED 73 D9 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9734 FD F9        	ld sp,iy
 153+ 9736
 154+ 9736              ; >>>
 155+ 9736
 156+ 9736 06 10            ld b,16
 157+ 9738 D1           1 pop de
 158+ 9739 7B           	ld a,e
 159+ 973A AE           	xor (hl)
 160+ 973B 77           	ld (hl),a
 161+ 973C 24           	inc h
 162+ 973D 7C               ld a,h
 163+ 973E E6 07            and 7
 164+ 9740 20 0C            jr nz,2F
 165+ 9742 7D               ld a,l
 166+ 9743 C6 20            add a,$20
 167+ 9745 6F               ld l,a
 168+ 9746 38 06            jr c,2F
 169+ 9748 7C               ld a,h
 170+ 9749 D6 08            sub 8
 171+ 974B 67               ld h,a
 172+ 974C 18 00            jr 2F
 173+ 974E 7C           2 ld a,h
 174+ 974F FE 58            cp $58
 175+ 9751 28 02            jr z,3F
 176+ 9753 10 E3            djnz 1B
 177+ 9755 ED 7B D9 89  3 ld sp,(Stack)
 178+ 9759 C9           	ret
 179+ 975A
 180+ 975A              ; ---------------------------------------------------
 181+ 975A
 182+ 975A ED 73 D9 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 975E FD F9        	ld sp,iy
 184+ 9760 06 08            ld b,8
 185+ 9762 D1           1 pop de
 186+ 9763 7A           	ld a,d
 187+ 9764 AE           	xor (hl)
 188+ 9765 77           	ld (hl),a
 189+ 9766 23           	inc hl
 190+ 9767 D1           	pop de
 191+ 9768 7B           	ld a,e
 192+ 9769 AE           	xor (hl)
 193+ 976A 77           	ld (hl),a
 194+ 976B 2B           	dec hl
 195+ 976C 24            	inc h
 196+ 976D 7C               ld a,h
 197+ 976E E6 07            and 7
 198+ 9770 20 0A            jr nz,2F
 199+ 9772 7D               ld a,l
 200+ 9773 C6 20            add a,$20
 201+ 9775 6F               ld l,a
 202+ 9776 38 04            jr c,2F
 203+ 9778 7C               ld a,h
 204+ 9779 D6 08            sub 8
 205+ 977B 67               ld h,a
 206+ 977C 7C           2 ld a,h
 207+ 977D FE 58            cp $58
 208+ 977F 28 20            jr z,4F
 209+ 9781 D1               pop de
 210+ 9782 7B           	ld a,e
 211+ 9783 AE           	xor (hl)
 212+ 9784 77           	ld (hl),a
 213+ 9785 23           	inc hl
 214+ 9786 7A           	ld a,d
 215+ 9787 AE           	xor (hl)
 216+ 9788 77           	ld (hl),a
 217+ 9789 2B           	dec hl
 218+ 978A 24           	inc h
 219+ 978B 7C               ld a,h
 220+ 978C E6 07            and 7
 221+ 978E 20 0A            jr nz,3F
 222+ 9790 7D               ld a,l
 223+ 9791 C6 20            add a,$20
 224+ 9793 6F               ld l,a
 225+ 9794 38 04            jr c,3F
 226+ 9796 7C               ld a,h
 227+ 9797 D6 08            sub 8
 228+ 9799 67               ld h,a
 229+ 979A 7C           3 ld a,h
 230+ 979B FE 58            cp $58
 231+ 979D 28 02            jr z,4F
 232+ 979F 10 C1            djnz 1B
 233+ 97A1 ED 7B D9 89  4 ld sp,(Stack)
 234+ 97A5 C9           	ret
 235+ 97A6
 236+ 97A6 ED 73 D9 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97AA FD F9        	ld sp,iy
 238+ 97AC 06 08            ld b,8
 239+ 97AE D1           1 pop de
 240+ 97AF D1           	pop de
 241+ 97B0 7B           	ld a,e
 242+ 97B1 AE           	xor (hl)
 243+ 97B2 77           	ld (hl),a
 244+ 97B3 24            	inc h
 245+ 97B4 7C               ld a,h
 246+ 97B5 E6 07            and 7
 247+ 97B7 20 0A            jr nz,2F
 248+ 97B9 7D               ld a,l
 249+ 97BA C6 20            add a,$20
 250+ 97BC 6F               ld l,a
 251+ 97BD 38 04            jr c,2F
 252+ 97BF 7C               ld a,h
 253+ 97C0 D6 08            sub 8
 254+ 97C2 67               ld h,a
 255+ 97C3 7C           2 ld a,h
 256+ 97C4 FE 58            cp $58
 257+ 97C6 28 1B            jr z,4F
 258+ 97C8 D1               pop de
 259+ 97C9 7A           	ld a,d
 260+ 97CA AE           	xor (hl)
 261+ 97CB 77           	ld (hl),a
 262+ 97CC 24           	inc h
 263+ 97CD 7C               ld a,h
 264+ 97CE E6 07            and 7
 265+ 97D0 20 0A            jr nz,3F
 266+ 97D2 7D               ld a,l
 267+ 97D3 C6 20            add a,$20
 268+ 97D5 6F               ld l,a
 269+ 97D6 38 04            jr c,3F
 270+ 97D8 7C               ld a,h
 271+ 97D9 D6 08            sub 8
 272+ 97DB 67               ld h,a
 273+ 97DC 7C           3 ld a,h
 274+ 97DD FE 58            cp $58
 275+ 97DF 28 02            jr z,4F
 276+ 97E1 10 CB            djnz 1B
 277+ 97E3 ED 7B D9 89  4 ld sp,(Stack)
 278+ 97E7 C9           	ret
 279+ 97E8
 280+ 97E8 ED 73 D9 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97EC FD F9        	ld sp,iy
 282+ 97EE 06 08            ld b,8
 283+ 97F0 D1           1 pop de
 284+ 97F1 7B           	ld a,e
 285+ 97F2 AE           	xor (hl)
 286+ 97F3 77           	ld (hl),a
 287+ 97F4 23           	inc hl
 288+ 97F5 7A           	ld a,d
 289+ 97F6 AE           	xor (hl)
 290+ 97F7 77           	ld (hl),a
 291+ 97F8 2B           	dec hl
 292+ 97F9 24             	inc h
 293+ 97FA 7C               ld a,h
 294+ 97FB E6 07            and 7
 295+ 97FD 20 0A            jr nz,2F
 296+ 97FF 7D               ld a,l
 297+ 9800 C6 20            add a,$20
 298+ 9802 6F               ld l,a
 299+ 9803 38 04            jr c,2F
 300+ 9805 7C               ld a,h
 301+ 9806 D6 08            sub 8
 302+ 9808 67               ld h,a
 303+ 9809 7C           2 ld a,h
 304+ 980A FE 58            cp $58
 305+ 980C 28 21            jr z,4F
 306+ 980E D1               pop de
 307+ 980F 7A           	ld a,d
 308+ 9810 AE           	xor (hl)
 309+ 9811 77           	ld (hl),a
 310+ 9812 23           	inc hl
 311+ 9813 D1               pop de
 312+ 9814 7B           	ld a,e
 313+ 9815 AE           	xor (hl)
 314+ 9816 77           	ld (hl),a
 315+ 9817 2B           	dec hl
 316+ 9818 24           	inc h
 317+ 9819 7C               ld a,h
 318+ 981A E6 07            and 7
 319+ 981C 20 0A            jr nz,3F
 320+ 981E 7D               ld a,l
 321+ 981F C6 20            add a,$20
 322+ 9821 6F               ld l,a
 323+ 9822 38 04            jr c,3F
 324+ 9824 7C               ld a,h
 325+ 9825 D6 08            sub 8
 326+ 9827 67               ld h,a
 327+ 9828 7C           3 ld a,h
 328+ 9829 FE 58            cp $58
 329+ 982B 28 02            jr z,4F
 330+ 982D 10 C1            djnz 1B
 331+ 982F ED 7B D9 89  4 ld sp,(Stack)
 332+ 9833 C9           	ret
 333+ 9834
 334+ 9834 ED 73 D9 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9838 FD F9        	ld sp,iy
 336+ 983A 06 08            ld b,8
 337+ 983C D1           1 pop de
 338+ 983D 7B           	ld a,e
 339+ 983E AE           	xor (hl)
 340+ 983F 77           	ld (hl),a
 341+ 9840 24            	inc h
 342+ 9841 7C               ld a,h
 343+ 9842 E6 07            and 7
 344+ 9844 20 0A            jr nz,2F
 345+ 9846 7D               ld a,l
 346+ 9847 C6 20            add a,$20
 347+ 9849 6F               ld l,a
 348+ 984A 38 04            jr c,2F
 349+ 984C 7C               ld a,h
 350+ 984D D6 08            sub 8
 351+ 984F 67               ld h,a
 352+ 9850 7C           2 ld a,h
 353+ 9851 FE 58            cp $58
 354+ 9853 28 1C            jr z,4F
 355+ 9855 D1               pop de
 356+ 9856 7A           	ld a,d
 357+ 9857 AE           	xor (hl)
 358+ 9858 77           	ld (hl),a
 359+ 9859 24           	inc h
 360+ 985A 7C               ld a,h
 361+ 985B E6 07            and 7
 362+ 985D 20 0A            jr nz,3F
 363+ 985F 7D               ld a,l
 364+ 9860 C6 20            add a,$20
 365+ 9862 6F               ld l,a
 366+ 9863 38 04            jr c,3F
 367+ 9865 7C               ld a,h
 368+ 9866 D6 08            sub 8
 369+ 9868 67               ld h,a
 370+ 9869 7C           3 ld a,h
 371+ 986A FE 58            cp $58
 372+ 986C 28 03            jr z,4F
 373+ 986E D1               pop de
 374+ 986F 10 CB            djnz 1B
 375+ 9871 ED 7B D9 89  4 ld sp,(Stack)
 376+ 9875 C9           	ret
 377+ 9876
 378+ 9876              ; ---------------------------------------------------
 379+ 9876              ;
 380+ 9876              ;   27/02/23
 381+ 9876              ;
 382+ 9876              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9876              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9876              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9876
 386+ 9876 ED 73 D9 89  Pinta_Disparo ld (Stack),sp
 387+ 987A FD F9            ld sp,iy
 388+ 987C 06 02            ld b,2
 389+ 987E D1           1 pop de
 390+ 987F 7B               ld a,e
 391+ 9880 AE               xor (hl)
 392+ 9881 77               ld (hl),a
 393+ 9882 23               inc hl
 394+ 9883 7A               ld a,d
 395+ 9884 AE               xor (hl)
 396+ 9885 77               ld (hl),a
 397+ 9886 2B               dec hl
 398+ 9887
 399+ 9887 24               inc h
 400+ 9888 7C               ld a,h
 401+ 9889 E6 07            and 7
 402+ 988B 20 0A            jr nz,2F
 403+ 988D 7D               ld a,l
 404+ 988E C6 20            add a,$20
 405+ 9890 6F               ld l,a
 406+ 9891 38 04            jr c,2F
 407+ 9893 7C               ld a,h
 408+ 9894 D6 08            sub 8
 409+ 9896 67               ld h,a
 410+ 9897 7C           2 ld a,h
 411+ 9898 FE 58            cp $58
 412+ 989A 28 02            jr z,3F
 413+ 989C
 414+ 989C 10 E0            djnz 1B
 415+ 989E ED 7B D9 89  3 ld sp,(Stack)
 416+ 98A2 C9               ret
 417+ 98A3
# file closed: Rutinas_de_impresion_sprites.asm
1253  98A3              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98A3              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98A3              ;
   3+ 98A3              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98A3              ;
   5+ 98A3              ; *****************************************************************************************************************************************************************************************
   6+ 98A3              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98A3
   8+ 98A3 7C           calcula_tercio ld a,h
   9+ 98A4 E6 18        	and $18
  10+ 98A6 CB 2F        	sra a
  11+ 98A8 CB 2F        	sra a
  12+ 98AA CB 2F        	sra a
  13+ 98AC C9           	ret
  14+ 98AD
# file closed: calcula_tercio.asm
1254  98AD              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98AD              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98AD              ;
   3+ 98AD              ;
   4+ 98AD              ;	CLS.
   5+ 98AD              ;
   6+ 98AD              ;	Limpia la pantalla y define sus atributos.
   7+ 98AD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98AD              ;
   9+ 98AD              ;	COLORES: 0 ..... NEGRO
  10+ 98AD              ;    		 1 ..... AZUL
  11+ 98AD              ; 			 2 ..... ROJO
  12+ 98AD              ;			 3 ..... MAGENTA
  13+ 98AD              ; 			 4 ..... VERDE
  14+ 98AD              ; 			 5 ..... CIAN
  15+ 98AD              ;			 6 ..... AMARILLO
  16+ 98AD              ; 			 7 ..... BLANCO
  17+ 98AD              ;
  18+ 98AD              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98AD              ;
  20+ 98AD              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98AD
  22+ 98AD
  23+ 98AD 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98B0 11 01 40     	LD DE,$4001
  25+ 98B3 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98B6 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98B8 ED B0        	LDIR
  28+ 98BA 01 FF 02     	LD BC,767
  29+ 98BD 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98BE ED B0        	LDIR
  31+ 98C0 C9           	ret
  32+ 98C1
# file closed: Cls.asm
1255  98C1              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98C1              ; ******************************************************************************************************************************************************************************************
   2+ 98C1              ;
   3+ 98C1              ;   20/05/23
   4+ 98C1              ;
   5+ 98C1              ;	Recompone_posicion_inicio
   6+ 98C1              ;
   7+ 98C1              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98C1              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98C1              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98C1              ;	_ a una u otra rutina.
  11+ 98C1
  12+ 98C1              Recompone_posicion_inicio
  13+ 98C1
  14+ 98C1 2A 9C 89     	ld hl,(Posicion_inicio)
  15+ 98C4 7D           	ld a,l
  16+ 98C5 E6 1F        	and $1f
  17+ 98C7 28 16        	jr z,1F
  18+ 98C9
  19+ 98C9 FE 1F        	cp $1f
  20+ 98CB 28 0D        	jr z,3F
  21+ 98CD
  22+ 98CD 21 C6 89     	ld hl,Ctrl_2
  23+ 98D0 CB C6        	set 0,(hl)
  24+ 98D2 2A 8E 89     	ld hl,(Puntero_objeto)
  25+ 98D5 22 C9 89     	ld (Repone_puntero_objeto),hl
  26+ 98D8 18 08        	jr 2F
  27+ 98DA
  28+ 98DA CD 7B 9A     3 call Mov_left
  29+ 98DD 18 03        	jr 2F
  30+ 98DF
  31+ 98DF CD 5D 99     1 call Mov_right
  32+ 98E2 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98E5 22 8E 89     	ld (Puntero_objeto),hl
  34+ 98E8 C9           	ret
  35+ 98E9
  36+ 98E9              ; ******************************************************************************************************************************************************************************************
  37+ 98E9              ;
  38+ 98E9              ;   27/05/23
  39+ 98E9              ;
  40+ 98E9              ;	Mov_down
  41+ 98E9              ;
  42+ 98E9              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98E9              ;
  44+ 98E9              ;
  45+ 98E9              Mov_down
  46+ 98E9
  47+ 98E9 CD 4B 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98EC              ;																	; _ repone (Puntero_objeto).
  49+ 98EC 21 B8 89     	ld hl,Ctrl_0
  50+ 98EF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98F1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98F1              ; 																	; _ en el caso de que no lo haya.
  53+ 98F1 3A A2 89     	ld a,(Vel_down)
  54+ 98F4 47           	ld b,a
  55+ 98F5 2A 8C 89         ld hl,(Posicion_actual)
  56+ 98F8 CD A3 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98FB E6 02        	and 2
  58+ 98FD 28 0F        	jr z,1F
  59+ 98FF
  60+ 98FF              ; Nos encontramos en el último tercio de pantalla.
  61+ 98FF              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98FF
  63+ 98FF 7C           	ld a,h
  64+ 9900 FE 57        	cp $57
  65+ 9902 20 0A        	jr nz,1F
  66+ 9904 7D           	ld a,l
  67+ 9905 C6 20        	add $20
  68+ 9907 30 05        	jr nc,1F
  69+ 9909
  70+ 9909              ; ------------------------------
  71+ 9909 CD F9 9B     	call Reaparece_arriba
  72+ 990C              ;	call Reinicio
  73+ 990C              ; ------------------------------
  74+ 990C
  75+ 990C 18 08        	jr 3F
  76+ 990E CD E3 95     1 call NextScan
  77+ 9911 22 8C 89     	ld (Posicion_actual),hl
  78+ 9914 10 E2            djnz 2B
  79+ 9916 CD 0F 9C     3 call Genera_coordenadas
  80+ 9919 C9           	ret
  81+ 991A
  82+ 991A              ; ******************************************************************************************************************************************************************************************
  83+ 991A              ;
  84+ 991A              ;   27/05/23
  85+ 991A              ;
  86+ 991A              ;	Mov_up
  87+ 991A              ;
  88+ 991A              ; 	Mueve el Sprite hacia arriba.
  89+ 991A              ;
  90+ 991A              ;
  91+ 991A              Mov_up
  92+ 991A
  93+ 991A CD 4B 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 991D              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 991D 21 B8 89     	ld hl,Ctrl_0
  96+ 9920 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9922              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9922              ; 																		; _ en el caso de que no lo haya.
  99+ 9922 3A A1 89     	ld a,(Vel_up)
 100+ 9925 47           	ld b,a
 101+ 9926 2A 8C 89     	ld hl,(Posicion_actual)
 102+ 9929 CD A3 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 992C A7           	and a
 104+ 992D 20 10        	jr nz,1F
 105+ 992F
 106+ 992F              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 992F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 992F
 109+ 992F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9930 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9932 20 0B            jr nz,1F
 112+ 9934 7D               ld a,l
 113+ 9935 D6 20            sub $20
 114+ 9937 30 06            jr nc,1F
 115+ 9939 25               dec h
 116+ 993A
 117+ 993A              ; -----------------------------
 118+ 993A CD E9 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 993D              ;	call Reinicio
 120+ 993D              ; -----------------------------
 121+ 993D
 122+ 993D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 993F CD F2 95     1 call PreviousScan
 124+ 9942 22 8C 89     	ld (Posicion_actual),hl
 125+ 9945 10 E2            djnz 3B
 126+ 9947 CD 0F 9C     2 call Genera_coordenadas
 127+ 994A C9           	ret
 128+ 994B
 129+ 994B              ; -----------------------------
 130+ 994B              ;
 131+ 994B              ;	27/5/23
 132+ 994B              ;
 133+ 994B              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 994B              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 994B              ;
 136+ 994B              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 994B              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 994B              ;
 139+ 994B              ;	Modifica: A y (Puntero_objeto).
 140+ 994B
 141+ 994B 3A C6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 994E CB 47        	bit 0,a
 143+ 9950 C8           	ret z
 144+ 9951 CB 87        	res 0,a
 145+ 9953 32 C6 89     	ld (Ctrl_2),a
 146+ 9956 2A C9 89     	ld hl,(Repone_puntero_objeto)
 147+ 9959 22 8E 89     	ld (Puntero_objeto),hl
 148+ 995C C9           	ret
 149+ 995D
 150+ 995D              ; ******************************************************************************************************************************************************************************************
 151+ 995D              ;
 152+ 995D              ;	19/10/22
 153+ 995D              ;
 154+ 995D              ;	Mov_right.
 155+ 995D              ;
 156+ 995D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 995D              ;
 158+ 995D
 159+ 995D 21 B8 89     Mov_right ld hl,Ctrl_0
 160+ 9960 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9962              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9962              ; 																	; _ en el caso de que no lo haya.
 163+ 9962 3A B8 89     	ld a,(Ctrl_0)
 164+ 9965 CB 77        	bit 6,a
 165+ 9967 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 9969
 167+ 9969 CD 97 9B     	call Stop_Amadeus_right
 168+ 996C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 996D 18 4D        	jr 8F
 170+ 996F
 171+ 996F 3A 90 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 9972 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 9974 20 46        	jr nz,8F
 174+ 9976
 175+ 9976 3A 92 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 9979 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 997A 28 40        	jr z,8F
 178+ 997C
 179+ 997C              ; ---------- ---------- ----------
 180+ 997C              ;
 181+ 997C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 997C
 183+ 997C 3A A0 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 997F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 9981 28 11        	jr z,1F
 186+ 9983 38 06        	jr c,6F
 187+ 9985 FE 04        	cp 4
 188+ 9987 28 14        	jr z,7F
 189+ 9989 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 998B
 191+ 998B              ; ---------- ---------- ----------
 192+ 998B              ;
 193+ 998B              ; Perfiles de velocidad
 194+ 998B              ;
 195+ 998B
 196+ 998B 3A 92 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 998E FE FE        	cp $fe
 198+ 9990 20 2A        	jr nz,8F
 199+ 9992 18 10        	jr 3F
 200+ 9994 3A 92 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 9997 FE FD        	cp $fd
 202+ 9999 20 21        	jr nz,8F
 203+ 999B 18 07        	jr 3F
 204+ 999D 3A 92 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99A0 FE FB        	cp $fb
 206+ 99A2 20 18        	jr nz,8F
 207+ 99A4
 208+ 99A4              ; ---------- ---------- ----------
 209+ 99A4
 210+ 99A4              3
 211+ 99A4 CD D7 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99A7              ;	call Reinicio
 213+ 99A7
 214+ 99A7              ; ---------- ---------- ----------
 215+ 99A7              ;
 216+ 99A7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99A7
 218+ 99A7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99A9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99AA CD C3 99     	call DESPLZ_DER
 221+ 99AD C1           	pop bc
 222+ 99AE 10 F9        	djnz 5B
 223+ 99B0 2A 8C 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99B3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99B4 22 8C 89     	ld (Posicion_actual),hl
 226+ 99B7 CD 0F 9C     	call Genera_coordenadas
 227+ 99BA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99BC
 229+ 99BC              ; ---------- ---------- ----------
 230+ 99BC
 231+ 99BC 2A 8C 89     8 ld hl,(Posicion_actual)
 232+ 99BF CD C3 99     	call DESPLZ_DER
 233+ 99C2 C9           2 ret
 234+ 99C3
 235+ 99C3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99C3              ;
 237+ 99C3              ;	22/9/22
 238+ 99C3              ;
 239+ 99C3
 240+ 99C3 CD D2 99     DESPLZ_DER call Desplaza_derecha
 241+ 99C6 CD 1E 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99C9 CD 47 9A         call Ciclo_completo
 243+ 99CC 21 B8 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 99CF CB FE        	set 7,(hl)
 245+ 99D1 C9           	ret
 246+ 99D2
 247+ 99D2              ; ******************************************************************************************************************************************************************************************
 248+ 99D2              ;	15/02/23
 249+ 99D2              ;
 250+ 99D2
 251+ 99D2 3A A0 89     Desplaza_derecha ld a,(Vel_right)
 252+ 99D5 47           	ld b,a
 253+ 99D6 2A 98 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 99D9 23           1 inc hl
 255+ 99DA 23           	inc hl
 256+ 99DB 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 99DD 22 98 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 99E0 CD F8 8C     	call Extrae_address
 259+ 99E3 22 8E 89     	ld (Puntero_objeto),hl
 260+ 99E6
 261+ 99E6              ; Modifica (Puntero_DESPLZ_izq).
 262+ 99E6
 263+ 99E6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 99E6              ; Cuántos movimientos hemos hecho ??
 265+ 99E6              ; DE contiene (Puntero_DESPLZ_der).
 266+ 99E6
 267+ 99E6 2A 94 89     7 ld hl,(Indice_Sprite_der)
 268+ 99E9 EB           	ex de,hl
 269+ 99EA A7           	and a
 270+ 99EB ED 52        	sbc hl,de
 271+ 99ED CB 3D        	srl l
 272+ 99EF 3E 08        6 ld a,8
 273+ 99F1 95           	sub l
 274+ 99F2 30 1E        	jr nc,3F
 275+ 99F4
 276+ 99F4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 99F4              ; B="0".
 278+ 99F4
 279+ 99F4 04           4 inc b
 280+ 99F5 3C           	inc a
 281+ 99F6 20 FC        	jr nz,4B
 282+ 99F8 78           	ld a,b
 283+ 99F9 08           	ex af,af
 284+ 99FA 2A 94 89     	ld hl,(Indice_Sprite_der)
 285+ 99FD 23           5 inc hl
 286+ 99FE 23           	inc hl
 287+ 99FF 10 FC        	djnz 5B
 288+ 9A01 22 98 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A04 CD F8 8C     	call Extrae_address
 290+ 9A07 22 8E 89     	ld (Puntero_objeto),hl
 291+ 9A0A
 292+ 9A0A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A0A              ; _(Posicion_actual).
 294+ 9A0A
 295+ 9A0A 21 8C 89     	ld hl,Posicion_actual
 296+ 9A0D 34           	inc (hl)
 297+ 9A0E 08               ex af,af
 298+ 9A0F 6F           	ld l,a
 299+ 9A10 18 DD        	jr 6B
 300+ 9A12
 301+ 9A12              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A12
 303+ 9A12 47           3 ld b,a
 304+ 9A13 2A 96 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A16 23           2 inc hl
 306+ 9A17 23           	inc hl
 307+ 9A18 10 FC        	djnz 2B
 308+ 9A1A 22 9A 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A1D C9           8 ret
 310+ 9A1E
 311+ 9A1E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A1E              ;
 313+ 9A1E              ;	24/7/22
 314+ 9A1E              ;
 315+ 9A1E              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A1E              ;
 317+ 9A1E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A1E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A1E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A1E
 321+ 9A1E 3A 92 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A21 A7           	and a
 323+ 9A22 20 1F        	jr nz,1F
 324+ 9A24 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A26 32 92 89         ld (CTRL_DESPLZ),a
 326+ 9A29
 327+ 9A29 21 8B 89     	ld hl,Columns
 328+ 9A2C 34           	inc (hl)
 329+ 9A2D 3A 9E 89     	ld a,(Cuad_objeto)
 330+ 9A30 E6 01        	and 1
 331+ 9A32 28 0F        	jr z,1F
 332+ 9A34 2A 8C 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A37 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A38 22 8C 89     	ld (Posicion_actual),hl
 335+ 9A3B CD 0F 9C     	call Genera_coordenadas
 336+ 9A3E CD A3 9B     	call Inc_CTRL_DESPLZ
 337+ 9A41 18 03        	jr 2F
 338+ 9A43 CD A3 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A46 C9           2 ret
 340+ 9A47
 341+ 9A47              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A47              ;
 343+ 9A47              ;	24/7/22
 344+ 9A47              ;
 345+ 9A47              ;	Ciclo_completo.
 346+ 9A47              ;
 347+ 9A47              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A47              ;
 349+ 9A47              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A47              ; 	Decrementamos (Columns).
 351+ 9A47              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A47              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A47
 354+ 9A47
 355+ 9A47 3A 92 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A4A FE FF        	cp $ff
 357+ 9A4C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A4E E6 F0        	and $f0
 359+ 9A50 20 28        	jr nz,3F
 360+ 9A52
 361+ 9A52              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A52
 363+ 9A52 3A 92 89     	ld a,(CTRL_DESPLZ)
 364+ 9A55 47           	ld b,a
 365+ 9A56 3E F8        	ld a,$f8
 366+ 9A58 80           	add b
 367+ 9A59 32 92 89     	ld (CTRL_DESPLZ),a
 368+ 9A5C 18 1C        	jr 3F
 369+ 9A5E 21 8B 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A61 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A62 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A63 32 92 89     	ld (CTRL_DESPLZ),a
 373+ 9A66 3A 9E 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A69 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9A6B 20 0A        	jr nz,2F
 376+ 9A6D 2A 8C 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9A70 23           	inc hl
 378+ 9A71 22 8C 89     	ld (Posicion_actual),hl
 379+ 9A74 CD 0F 9C     	call Genera_coordenadas
 380+ 9A77
 381+ 9A77              ; Inicia el puntero de Sprite.
 382+ 9A77
 383+ 9A77 CD 0F 8D     2 call Inicia_puntero_objeto_der
 384+ 9A7A C9           3 ret
 385+ 9A7B
 386+ 9A7B              ; ******************************************************************************************************************************************************************************************
 387+ 9A7B              ;
 388+ 9A7B              ;	15/02/23
 389+ 9A7B              ;
 390+ 9A7B              ;	Mov_left.
 391+ 9A7B              ;
 392+ 9A7B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9A7B              ;
 394+ 9A7B 21 B8 89     Mov_left ld hl,Ctrl_0
 395+ 9A7E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9A80              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9A80              ; 																	; _ en el caso de que no lo haya.
 398+ 9A80 3A B8 89     	ld a,(Ctrl_0)
 399+ 9A83 CB 77        	bit 6,a
 400+ 9A85 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9A87
 402+ 9A87 CD 9D 9B     	call Stop_Amadeus_left
 403+ 9A8A C8           	ret z
 404+ 9A8B 20 4A        	jr nz,8F
 405+ 9A8D
 406+ 9A8D 3A 90 89     11 ld a,(Coordenada_X)
 407+ 9A90 A7           	and a
 408+ 9A91 20 44        	jr nz,8F
 409+ 9A93
 410+ 9A93 3A 92 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9A96 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9A97 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9A99
 414+ 9A99              ; ---------- ---------- ----------
 415+ 9A99
 416+ 9A99 3A 9F 89     	ld a,(Vel_left)
 417+ 9A9C FE 02        	cp 2
 418+ 9A9E 28 0F        	jr z,1F
 419+ 9AA0 38 04        	jr c,6F
 420+ 9AA2 FE 04        	cp 4
 421+ 9AA4 28 12        	jr z,7F
 422+ 9AA6
 423+ 9AA6              ; ---------- ---------- ----------
 424+ 9AA6
 425+ 9AA6 3A 92 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AA9 FE F8        	cp $f8
 427+ 9AAB 20 2A        	jr nz,8F
 428+ 9AAD 18 10        	jr 4F
 429+ 9AAF 3A 92 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AB2 FE F9        	cp $f9
 431+ 9AB4 20 21        	jr nz,8F
 432+ 9AB6 18 07        	jr 4F
 433+ 9AB8 3A 92 89     7 ld a,(CTRL_DESPLZ)
 434+ 9ABB FE FB        	cp $fb
 435+ 9ABD 20 18        	jr nz,8F
 436+ 9ABF
 437+ 9ABF              ; ---------- ---------- ----------
 438+ 9ABF
 439+ 9ABF              4
 440+ 9ABF CD C5 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AC2              ;	call Reinicio
 442+ 9AC2
 443+ 9AC2              ; ---------- ---------- ----------
 444+ 9AC2
 445+ 9AC2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9AC4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9AC5
 448+ 9AC5              ;	ld hl,(Indice_Sprite_izq)
 449+ 9AC5              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9AC5
 451+ 9AC5 CD DE 9A     	call DESPLZ_IZQ
 452+ 9AC8 C1           	pop bc
 453+ 9AC9 10 F9        	djnz 5B
 454+ 9ACB 2A 8C 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9ACE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9ACF 22 8C 89     	ld (Posicion_actual),hl
 457+ 9AD2 CD 0F 9C     	call Genera_coordenadas
 458+ 9AD5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9AD7
 460+ 9AD7              ; ---------- ---------- ----------
 461+ 9AD7
 462+ 9AD7              ; Movemos, no hay recolocación.
 463+ 9AD7
 464+ 9AD7 2A 8C 89     8 ld hl,(Posicion_actual)
 465+ 9ADA CD DE 9A     	call DESPLZ_IZQ
 466+ 9ADD C9           2 ret
 467+ 9ADE
 468+ 9ADE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9ADE              ;
 470+ 9ADE              ;	22/9/22
 471+ 9ADE
 472+ 9ADE              DESPLZ_IZQ
 473+ 9ADE
 474+ 9ADE CD ED 9A     	call Desplaza_izquierda
 475+ 9AE1 CD 39 9B         call modifica_parametros_1er_DESPLZ
 476+ 9AE4 CD 61 9B     	call Ciclo_completo_2
 477+ 9AE7 21 B8 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9AEA CB BE        	res 7,(hl)
 479+ 9AEC C9           	ret
 480+ 9AED
 481+ 9AED              Desplaza_izquierda
 482+ 9AED
 483+ 9AED 3A 9F 89     	ld a,(Vel_left)
 484+ 9AF0 47           	ld b,a
 485+ 9AF1 2A 9A 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9AF4 23           1 inc hl
 487+ 9AF5 23           	inc hl
 488+ 9AF6 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9AF8 22 9A 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9AFB CD F8 8C     	call Extrae_address
 491+ 9AFE 22 8E 89     	ld (Puntero_objeto),hl
 492+ 9B01
 493+ 9B01              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B01
 495+ 9B01              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B01              ; Cuántos movimientos hemos hecho ??
 497+ 9B01              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B01
 499+ 9B01 2A 96 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B04 EB           	ex de,hl
 501+ 9B05 A7           	and a
 502+ 9B06 ED 52        	sbc hl,de
 503+ 9B08 CB 3D        	srl l
 504+ 9B0A 3E 08        6 ld a,8
 505+ 9B0C 95           	sub l
 506+ 9B0D 30 1E        	jr nc,3F
 507+ 9B0F
 508+ 9B0F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B0F              ; B="0".
 510+ 9B0F
 511+ 9B0F 04           4 inc b
 512+ 9B10 3C           	inc a
 513+ 9B11 20 FC        	jr nz,4B
 514+ 9B13 78           	ld a,b
 515+ 9B14 08           	ex af,af
 516+ 9B15 2A 96 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B18 23           5 inc hl
 518+ 9B19 23           	inc hl
 519+ 9B1A 10 FC        	djnz 5B
 520+ 9B1C 22 9A 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B1F CD F8 8C     	call Extrae_address
 522+ 9B22 22 8E 89     	ld (Puntero_objeto),hl
 523+ 9B25
 524+ 9B25              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B25              ; _(Posicion_actual).
 526+ 9B25
 527+ 9B25 21 8C 89     	ld hl,Posicion_actual
 528+ 9B28 35           	dec (hl)
 529+ 9B29 08           	ex af,af
 530+ 9B2A 6F           	ld l,a
 531+ 9B2B 18 DD        	jr 6B
 532+ 9B2D
 533+ 9B2D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B2D
 535+ 9B2D 47           3 ld b,a
 536+ 9B2E 2A 94 89     	ld hl,(Indice_Sprite_der)
 537+ 9B31 23           2 inc hl
 538+ 9B32 23           	inc hl
 539+ 9B33 10 FC        	djnz 2B
 540+ 9B35 22 98 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B38 C9           8 ret
 542+ 9B39
 543+ 9B39              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B39              ;
 545+ 9B39              ;	modifica_parametros_1er_DESPLZ
 546+ 9B39              ;
 547+ 9B39              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B39              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B39              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B39
 551+ 9B39 3A 92 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B3C A7           	and a
 553+ 9B3D 20 1E        	jr nz,1F
 554+ 9B3F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B40 32 92 89         ld (CTRL_DESPLZ),a
 556+ 9B43 21 8B 89     	ld hl,Columns
 557+ 9B46 34           	inc (hl)
 558+ 9B47 3A 9E 89     	ld a,(Cuad_objeto)
 559+ 9B4A E6 01        	and 1
 560+ 9B4C 20 0F        	jr nz,1F
 561+ 9B4E 2A 8C 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B51 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B52 22 8C 89     	ld (Posicion_actual),hl
 564+ 9B55 CD 0F 9C     	call Genera_coordenadas
 565+ 9B58 CD B4 9B     	call Dec_CTRL_DESPLZ
 566+ 9B5B 18 03        	jr 2F
 567+ 9B5D CD B4 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B60 C9           2 ret
 569+ 9B61
 570+ 9B61              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B61
 572+ 9B61 3A 92 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B64 FE F7        	cp $f7
 574+ 9B66 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B68 30 2C        	jr nc,3F
 576+ 9B6A
 577+ 9B6A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9B6A
 579+ 9B6A 06 00        	ld b,0
 580+ 9B6C 04           4 inc b
 581+ 9B6D 3C           	inc a
 582+ 9B6E FE F7        	cp $f7
 583+ 9B70 20 FA        	jr nz,4B
 584+ 9B72 3E FF        	ld a,$ff
 585+ 9B74 90           	sub b
 586+ 9B75 32 92 89     	ld (CTRL_DESPLZ),a
 587+ 9B78 18 1C        	jr 3F
 588+ 9B7A
 589+ 9B7A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9B7A
 591+ 9B7A 21 8B 89     1 ld hl,Columns
 592+ 9B7D 35           	dec (hl)
 593+ 9B7E AF           	xor a
 594+ 9B7F 32 92 89     	ld (CTRL_DESPLZ),a
 595+ 9B82 3A 9E 89     	ld a,(Cuad_objeto)
 596+ 9B85 E6 01        	and 1
 597+ 9B87 28 0A        	jr z,2F
 598+ 9B89 2A 8C 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9B8C 2B           	dec hl
 600+ 9B8D 22 8C 89     	ld (Posicion_actual),hl
 601+ 9B90 CD 0F 9C     	call Genera_coordenadas
 602+ 9B93
 603+ 9B93              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9B93
 605+ 9B93 CD 22 8D     2 call Inicia_puntero_objeto_izq
 606+ 9B96 C9           3 ret
 607+ 9B97
 608+ 9B97              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9B97              ;
 610+ 9B97              ;	19/10/22
 611+ 9B97              ;
 612+ 9B97              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9B97              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9B97
 615+ 9B97 3A 90 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9B9A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9B9C C9           	ret
 618+ 9B9D
 619+ 9B9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9B9D              ;
 621+ 9B9D              ;	19/10/22
 622+ 9B9D              ;
 623+ 9B9D              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9B9D              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9B9D
 626+ 9B9D 3A 90 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BA0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BA2 C9           	ret
 629+ 9BA3
 630+ 9BA3              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BA3              ;
 632+ 9BA3              ;	24/7/22
 633+ 9BA3              ;
 634+ 9BA3              ;	Inc_CTRL_DESPLZ
 635+ 9BA3              ;
 636+ 9BA3              ;
 637+ 9BA3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BA3
 639+ 9BA3 21 92 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BA6 3A A0 89     	ld a,(Vel_right)
 641+ 9BA9 A7           	and a
 642+ 9BAA 28 06        	jr z,1F
 643+ 9BAC 47           	ld b,a
 644+ 9BAD 34           3 inc (hl)
 645+ 9BAE 10 FD        	djnz 3B
 646+ 9BB0 18 01        	jr 2F
 647+ 9BB2 34           1 inc (hl)
 648+ 9BB3 C9           2 ret
 649+ 9BB4
 650+ 9BB4              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BB4              ;
 652+ 9BB4              ;	5/2/23
 653+ 9BB4              ;
 654+ 9BB4              ;	Dec_CTRL_DESPLZ
 655+ 9BB4              ;
 656+ 9BB4              ;
 657+ 9BB4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BB4
 659+ 9BB4 21 92 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BB7 3A 9F 89     	ld a,(Vel_left)
 661+ 9BBA A7           	and a
 662+ 9BBB 28 06        	jr z,1F
 663+ 9BBD 47           	ld b,a
 664+ 9BBE 35           3 dec (hl)
 665+ 9BBF 10 FD        	djnz 3B
 666+ 9BC1 18 01        	jr 2F
 667+ 9BC3 35           1 dec (hl)
 668+ 9BC4 C9           2 ret
 669+ 9BC5
 670+ 9BC5              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BC5
 672+ 9BC5 2A 8C 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BC8 01 1F 00     	ld bc,31
 674+ 9BCB A7           	and a
 675+ 9BCC ED 4A        	adc hl,bc
 676+ 9BCE 22 8C 89     	ld (Posicion_actual),hl
 677+ 9BD1 21 B8 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9BD4 CB C6        	set 0,(hl)
 679+ 9BD6 C9           	ret
 680+ 9BD7
 681+ 9BD7              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9BD7
 683+ 9BD7 2A 8C 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9BDA 01 1F 00     	ld bc,31
 685+ 9BDD A7           	and a
 686+ 9BDE ED 42        	sbc hl,bc
 687+ 9BE0 22 8C 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9BE3 21 B8 89     	ld hl,Ctrl_0
 689+ 9BE6 CB CE        	set 1,(hl)
 690+ 9BE8 C9           	ret
 691+ 9BE9
 692+ 9BE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9BE9
 694+ 9BE9 24           Reaparece_abajo inc h
 695+ 9BEA 01 E0 17     	ld bc,$17e0
 696+ 9BED A7           	and a
 697+ 9BEE ED 4A        	adc hl,bc
 698+ 9BF0 22 8C 89     	ld (Posicion_actual),hl
 699+ 9BF3 21 B8 89     	ld hl,Ctrl_0
 700+ 9BF6 CB D6        	set 2,(hl)
 701+ 9BF8 C9           	ret
 702+ 9BF9
 703+ 9BF9              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9BF9
 705+ 9BF9 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9BFC A7           	and a
 707+ 9BFD ED 42        	sbc hl,bc
 708+ 9BFF 22 8C 89     	ld (Posicion_actual),hl
 709+ 9C02 21 B8 89     	ld hl,Ctrl_0
 710+ 9C05 CB DE        	set 3,(hl)
 711+ 9C07 C9           	ret
 712+ 9C08
 713+ 9C08              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C08
 715+ 9C08 2A 9C 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C0B 22 8C 89     	ld (Posicion_actual),hl
 717+ 9C0E C9           	ret
# file closed: Direcciones.asm
1256  9C0F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C0F              ; ------------------------------------------------------------------------
   2+ 9C0F              ;
   3+ 9C0F              ;	02/04/23
   4+ 9C0F              ;
   5+ 9C0F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C0F              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C0F              ;
   8+ 9C0F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C0F              ;
  10+ 9C0F              ;	Modifica: A,BC y DE.
  11+ 9C0F
  12+ 9C0F C5           Genera_coordenadas push bc
  13+ 9C10 E5           	push hl
  14+ 9C11 D5           	push de
  15+ 9C12
  16+ 9C12 2A 8C 89     	ld hl,(Posicion_actual)
  17+ 9C15
  18+ 9C15 7D           	ld a,l
  19+ 9C16 E6 1F        	and $1f
  20+ 9C18 32 90 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C1B
  22+ 9C1B CD A3 98     	call calcula_tercio
  23+ 9C1E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C1F
  25+ 9C1F 1E 00        	ld e,0
  26+ 9C21 7D           	ld a,l
  27+ 9C22 E6 E0        	and $e0
  28+ 9C24 28 01        	jr z,1F
  29+ 9C26 04           	inc b
  30+ 9C27
  31+ 9C27 04           1 inc b
  32+ 9C28 05           	dec b
  33+ 9C29 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C2B              ;														; _ , salimos.
  35+ 9C2B 1C           3 inc e
  36+ 9C2C D6 20        	sub 32
  37+ 9C2E 20 FB        	jr nz,3B
  38+ 9C30 10 F5        	djnz 1B
  39+ 9C32
  40+ 9C32 7B           2 ld a,e
  41+ 9C33 32 91 89     	ld (Coordenada_y),a
  42+ 9C36
  43+ 9C36 D1           	pop de
  44+ 9C37 E1           	pop hl
  45+ 9C38 C1           	pop bc
  46+ 9C39
  47+ 9C39 C9           	ret
  48+ 9C3A
  49+ 9C3A              ; ------------------------------------------------------------------------
  50+ 9C3A              ;	28/05/23
  51+ 9C3A              ;
  52+ 9C3A              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C3A              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C3A              ;
  55+ 9C3A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C3A              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C3A              ;
  58+ 9C3A              ;		DE="$120d"
  59+ 9C3A              ;
  60+ 9C3A              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C3A              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C3A              ;
  63+ 9C3A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C3A
  65+ 9C3A              ;	Modifica: A,BC y DE.
  66+ 9C3A
  67+ 9C3A
  68+ 9C3A              Genera_coordenadas_disparo
  69+ 9C3A
  70+ 9C3A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C3A
  72+ 9C3A 7D           	ld a,l
  73+ 9C3B E6 1F        	and $1f
  74+ 9C3D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C3E CD A3 98     	call calcula_tercio
  76+ 9C41 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C42 1E 00        	ld e,0
  78+ 9C44 7D           	ld a,l
  79+ 9C45 E6 E0        	and $e0
  80+ 9C47 28 01        	jr z,1F
  81+ 9C49 04           	inc b
  82+ 9C4A 1C           1 inc e
  83+ 9C4B D6 20        	sub 32
  84+ 9C4D 20 FB        	jr nz,1B
  85+ 9C4F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C51 C9           	ret
  87+ 9C52
# file closed: Genera_coordenadas.asm
1257  9C52              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C52
   2+ 9C52
   3+ 9C52              ;   11/8/22
   4+ 9C52              ;
   5+ 9C52              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C52              ;
   7+ 9C52              ;   Mov_obj.asm
   8+ 9C52              ;
   9+ 9C52              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9C52              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9C52              ;
  12+ 9C52              ;   Codificación:
  13+ 9C52              ;
  14+ 9C52              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9C52
  16+ 9C52              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9C52
  18+ 9C52 02 40 00     Arriba db 2,%01000000,0
  19+ 9C55 02 80 00     Abajo db 2,%10000000,0
  20+ 9C58 02 20 00     Derecha db 2,%00100000,0
  21+ 9C5B 02 10 00     Izquierda db 2,%00010000,0
  22+ 9C5E 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9C62 60 42 60 40
  22+ 9C66 63
  23+ 9C67 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9C6B 22 A3 80 A0
  24+ 9C6F 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9C73 84 A0 83 A0
  25+ 9C77 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9C7B 80 A3 22 A0
  26+ 9C7F 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9C83 40 60 42 60
  27+ 9C87 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9C8B
  29+ 9C8B 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9C8F 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9C93 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9C97 84 00
  32+ 9C99 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9C9D 84 00
  33+ 9C9F 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9CA3 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9CA7 1F 1F 1F 1F
  35+ 9CAB 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9CAF 1F 1F 1F 1F
  35+ 9CB3 1F
  36+ 9CB4 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9CB8 2F 2F 2F 2F
  36+ 9CBC 2F 2F
  37+ 9CBE 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9CC2 2F 2F 00
  38+ 9CC5
  39+ 9CC5              ; ----- ----- ----- ----- -----
  40+ 9CC5
  41+ 9CC5 A3 9C        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9CC7 9F 9C        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9CC9 5B 9C        Indice_mov_Izquierda defw Izquierda
  44+ 9CCB 58 9C        Indice_mov_Derecha defw Derecha
  45+ 9CCD 55 9C        Indice_mov_Abajo defw Abajo
  46+ 9CCF 52 9C        Indice_mov_Arriba defw Arriba
  47+ 9CD1 8F 9C        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9CD3 93 9C        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9CD5 8B 9C        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9CD7 99 9C        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9CD9 5E 9C        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9CDB              ; ----- ----- ----- ----- -----
  53+ 9CDB
  54+ 9CDB 3A BF 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9CDE A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9CDF 28 02            jr z,1F
  57+ 9CE1 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9CE3 3A C0 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9CE6 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9CE8 32 C0 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9CEB              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9CEB 2A BD 89         ld hl,(Puntero_mov)
  63+ 9CEE 7E               ld a,(hl)
  64+ 9CEF 32 BF 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9CF2 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9CF3 22 BD 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9CF6
  68+ 9CF6 3A C1 89     Decoder ld a,(Repetimos_db)
  69+ 9CF9 A7               and a
  70+ 9CFA 20 0C            jr nz,12F
  71+ 9CFC 2A BD 89         ld hl,(Puntero_mov)
  72+ 9CFF 7E               ld a,(hl)
  73+ 9D00 A7               and a
  74+ 9D01 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9D03 E6 0F            and $0f
  76+ 9D05 32 C1 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9D08              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9D08 2A BD 89     12 ld hl,(Puntero_mov)
  79+ 9D0B CB 7E            bit 7,(hl)
  80+ 9D0D 28 03            jr z,2F
  81+ 9D0F CD E9 98         call Mov_down
  82+ 9D12 2A BD 89     2 ld hl, (Puntero_mov)
  83+ 9D15 CB 76            bit 6,(hl)
  84+ 9D17 28 03            jr z,3F
  85+ 9D19 CD 1A 99         call Mov_up
  86+ 9D1C 2A BD 89     3 ld hl, (Puntero_mov)
  87+ 9D1F CB 6E            bit 5,(hl)
  88+ 9D21 28 03            jr z,4F
  89+ 9D23 CD 5D 99         call Mov_right
  90+ 9D26 2A BD 89     4 ld hl, (Puntero_mov)
  91+ 9D29 CB 66            bit 4,(hl)
  92+ 9D2B 28 03            jr z,5F
  93+ 9D2D CD 7B 9A         call Mov_left
  94+ 9D30
  95+ 9D30              ; ---------- --------- --------- ---------- ----------
  96+ 9D30
  97+ 9D30 3A C1 89     5 ld a,(Repetimos_db)
  98+ 9D33 A7               and a
  99+ 9D34 28 07            jr z,6F
 100+ 9D36 3D               dec a
 101+ 9D37 32 C1 89         ld (Repetimos_db),a
 102+ 9D3A 28 01            jr z,6f
 103+ 9D3C C9           11 ret
 104+ 9D3D 21 BF 89     6 ld hl,Contador_db_mov
 105+ 9D40 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9D41 2A BD 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9D44 23               inc hl
 108+ 9D45 22 BD 89         ld (Puntero_mov),hl
 109+ 9D48 18 F2            jr 11B
 110+ 9D4A 2A BB 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9D4D 3A C0 89         ld a,(Incrementa_puntero)
 112+ 9D50 47               ld b,a
 113+ 9D51 23           8 inc hl
 114+ 9D52 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9D54 5E               ld e,(hl)
 116+ 9D55 23               inc hl
 117+ 9D56 56               ld d,(hl)
 118+ 9D57 EB               ex de,hl
 119+ 9D58 22 BD 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9D5B 18 DF            jr 11B
 121+ 9D5D
 122+ 9D5D              ; ---------- --------- --------- ---------- ----------
 123+ 9D5D              ;
 124+ 9D5D              ;   11/8/22
 125+ 9D5D              ;
 126+ 9D5D              ;   Prepara_Puntero_mov
 127+ 9D5D
 128+ 9D5D E5           Prepara_Puntero_mov push hl
 129+ 9D5E D5               push de
 130+ 9D5F 2A BB 89         ld hl,(Puntero_indice_mov)
 131+ 9D62 5E               ld e,(hl)
 132+ 9D63 23               inc hl
 133+ 9D64 56               ld d,(hl)
 134+ 9D65 EB               ex de,hl
 135+ 9D66 22 BD 89         ld (Puntero_mov),hl
 136+ 9D69 D1               pop de
 137+ 9D6A E1               pop hl
 138+ 9D6B C9               ret
 139+ 9D6C
 140+ 9D6C              ; ---------- --------- --------- ---------- ----------
 141+ 9D6C              ;
 142+ 9D6C              ;   11/8/22
 143+ 9D6C              ;
 144+ 9D6C              ;   Reinicia_el_movimiento
 145+ 9D6C
 146+ 9D6C CD 5D 9D     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9D6F AF               xor a
 148+ 9D70 32 BF 89         ld (Contador_db_mov),a
 149+ 9D73 32 C0 89         ld (Incrementa_puntero),a
 150+ 9D76 C3 DB 9C         jp Movimiento
 151+ 9D79 C9               ret
 152+ 9D7A              ; ---------- --------- --------- ---------- ----------
 153+ 9D7A
 154+ 9D7A
 155+ 9D7A
 156+ 9D7A
 157+ 9D7A
 158+ 9D7A
 159+ 9D7A
 160+ 9D7A
 161+ 9D7A
 162+ 9D7A
 163+ 9D7A
 164+ 9D7A
 165+ 9D7A
 166+ 9D7A
 167+ 9D7A
 168+ 9D7A
 169+ 9D7A
 170+ 9D7A
# file closed: Patrones_de_mov.asm
1258  9D7A              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9D7A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9D7A              ;
   3+ 9D7A              ;	3/1/23
   4+ 9D7A              ;
   5+ 9D7A              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9D7A
   7+ 9D7A              ;	ADC HL,SP	LD (addr),SP
   8+ 9D7A              ;	ADD HL,SP	LD SP,(addr)
   9+ 9D7A              ;	ADD IX,SP	LD SP,nn
  10+ 9D7A              ; 	ADD IY,SP	LD SP,HL
  11+ 9D7A              ;				LD SP,IX
  12+ 9D7A              ;	DEC SP		LD SP,IY
  13+ 9D7A
  14+ 9D7A              ;	EX (SP),HL
  15+ 9D7A              ;	EX (SP),IX
  16+ 9D7A              ;	EX (SP),IY
  17+ 9D7A
  18+ 9D7A              ;	INC SP
  19+ 9D7A
  20+ 9D7A
  21+ 9D7A                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 D9 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A C8 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A DF 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A DD 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 DF 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 DD 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B D9 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1259  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1260  7FE6
1261  7FE6              	SAVESNA "Pruebas.sna", START
1262  7FE6
1263  7FE6
1264  7FE6
1265  7FE6
# file closed: Banco_de_pruebas.asm
