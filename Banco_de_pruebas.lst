# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 F9 88  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15
  42  AA15 3A 17 89     	ld a,(Contador_de_frames)
  43  AA18 FE 32        	cp $32	; 	$44 ok.
  44  AA1A 28 FE        	jr z,$
  45  AA1C 30 FE        	jr nc,$
  46  AA1E
  47  AA1E 3E 01        	ld a,1
  48  AA20 D3 FE        	out ($fe),a
  49  AA22 CD 29 8D     	call Pinta_entidades
  50  AA25
  51  AA25              ;	call Pinta_Amadeus
  52  AA25 3E 00        	ld a,0
  53  AA27 D3 FE        	out ($fe),a
  54  AA29
  55  AA29              ;	ld a,2
  56  AA29              ;	out ($fe),a
  57  AA29              ;	call Guarda_parametros_DRAW
  58  AA29              ;	call Restore_Amadeus
  59  AA29              ;	call Gestiona_Amadeus
  60  AA29              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA29              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA29
  63  AA29              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA29
  65  AA29              ;	call Recupera_parametros_DRAW
  66  AA29 CD 33 8D     	call Actualiza_relojes
  67  AA2C              ;	ld a,0
  68  AA2C              ;	out ($fe),a
  69  AA2C
  70  AA2C 21 03 89     	ld hl,Ctrl_3
  71  AA2F CB 86        	res 0,(hl)
  72  AA31
  73  AA31 FD E1        	pop iy
  74  AA33 DD E1        	pop ix
  75  AA35 F1           	pop af
  76  AA36 C1           	pop bc
  77  AA37 D1           	pop de
  78  AA38 E1           	pop hl
  79  AA39 D9           	exx
  80  AA3A C1           	pop bc
  81  AA3B D1           	pop de
  82  AA3C E1           	pop hl
  83  AA3D 08           	ex af,af'
  84  AA3E F1           	pop af
  85  AA3F 08           	ex af,af'
  86  AA40 D9           	exx
  87  AA41
  88  AA41 ED 7B F9 88  	ld sp,(Stack_3)
  89  AA45
  90  AA45 FB           	ei
  91  AA46 C9           	ret
  92  AA47
  93  AA47              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA47
  95  AA47              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA47              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA47              ;
   3+ AA47              ;	17/02/23
   4+ AA47              ;
   5+ AA47              ;	Sprites e índices.
   6+ AA47
   7+ AA47              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BD 85        	defw Caja_1
 100+ 856E FC 85        	defw Caja_2
 101+ 8570 3B 86        	defw Caja_3
 102+ 8572 7A 86        	defw Caja_4
 103+ 8574 B9 86        	defw Caja_5
 104+ 8576 F8 86        	defw Caja_6
 105+ 8578 37 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 8587
 117+ 8587 05           	db %00000101									; (Attr).
 118+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 858C
 121+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8590
 124+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 125+ 8592 04           	db 4 											; (Cuad_objeto).
 126+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 8597
 128+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8598
 130+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 859E
 132+ 859E 00 00        	db 0,0											; Variables_de_pintado
 133+ 85A0 00 00        	defw 0											;	" " " " " " "
 134+ 85A2 00 00        	defw 0											;	" " " " " " "
 135+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85A8
 137+ 85A8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85AA
 139+ 85AA 00           	db 0											; (Autoriza_movimiento).
 140+ 85AB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85AF 00 00
 141+ 85B1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85B4
 143+ 85B4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85B6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85B7
 146+ 85B7 00           	db 0 											; (Columnas).
 147+ 85B8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85BA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85BD
 150+ 85BD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85BD
 152+ 85BD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85BF 00 00        	defw 0											; (Posicion_actual).
 154+ 85C1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85C3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85C6
 157+ 85C6 00           	db %00000000 									; (Attr).
 158+ 85C7
 159+ 85C7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85C9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85CB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85CF
 164+ 85CF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85D1 00           	db 0											; (Cuad_objeto).
 166+ 85D2
 167+ 85D2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85D6
 169+ 85D6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85D7
 171+ 85D7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85DD
 173+ 85DD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85DF 00 00        	defw 0											;	" " " " " " "
 175+ 85E1 00 00        	defw 0											;	" " " " " " "
 176+ 85E3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85E7
 178+ 85E7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 85E9
 180+ 85E9 00           	db 0											; (Autoriza_movimiento).
 181+ 85EA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 85EE 00 00
 182+ 85F0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 85F3
 184+ 85F3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 85F5 00           	db 0											; (Cola_de_desplazamiento).
 186+ 85F6
 187+ 85F6 00           	db 0 											; (Columnas).
 188+ 85F7 00 00        	defw 0											; (Limite_horizontal).
 189+ 85F9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 85FC
 191+ 85FC              ; ---------- ---------- ---------- ---------- ----------
 192+ 85FC
 193+ 85FC 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 85FE 00 00        	defw 0											; (Posicion_actual).
 195+ 8600 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8602 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8605
 198+ 8605 00           	db %00000000 									; (Attr).
 199+ 8606
 200+ 8606 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8608 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 860A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 860C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 860E
 205+ 860E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8610 00           	db 0											; (Cuad_objeto).
 207+ 8611
 208+ 8611 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8615
 210+ 8615 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8616
 212+ 8616 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 861C
 214+ 861C 00 00        	db 0,0											; Variables_de_pintado
 215+ 861E 00 00        	defw 0											;	" " " " " " "
 216+ 8620 00 00        	defw 0											;	" " " " " " "
 217+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8626
 219+ 8626 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8628
 221+ 8628 00           	db 0											; (Autoriza_movimiento).
 222+ 8629 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 862D 00 00
 223+ 862F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8632
 225+ 8632 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8634 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8635
 228+ 8635 00           	db 0 											; (Columnas).
 229+ 8636 00 00        	defw 0											; (Limite_horizontal).
 230+ 8638 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 863B
 232+ 863B              ; ---------- ---------- ---------- ---------- ----------
 233+ 863B
 234+ 863B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 863D 00 00        	defw 0											; (Posicion_actual).
 236+ 863F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8641 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8644
 239+ 8644 00           	db %00000000 									; (Attr).
 240+ 8645
 241+ 8645 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8647 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8649 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 864B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 864D
 246+ 864D 00 00        	defw 0											; (Posicion_inicio).
 247+ 864F 00           	db 0											; (Cuad_objeto).
 248+ 8650
 249+ 8650 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8654
 251+ 8654 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8655
 253+ 8655 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 865B
 255+ 865B 00 00        	db 0,0											; Variables_de_pintado
 256+ 865D 00 00        	defw 0											;	" " " " " " "
 257+ 865F 00 00        	defw 0											;	" " " " " " "
 258+ 8661 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8665
 260+ 8665 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8667
 262+ 8667 00           	db 0											; (Autoriza_movimiento).
 263+ 8668 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 866C 00 00
 264+ 866E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8671
 266+ 8671 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8673 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8674
 269+ 8674 00           	db 0 											; (Columnas).
 270+ 8675 00 00        	defw 0											; (Limite_horizontal).
 271+ 8677 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 867A
 273+ 867A              ; ---------- ---------- ---------- ---------- ----------
 274+ 867A
 275+ 867A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 867C 00 00        	defw 0											; (Posicion_actual).
 277+ 867E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 8680 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 8683
 280+ 8683 00           	db %00000000 									; (Attr).
 281+ 8684
 282+ 8684 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 8686 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 8688 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 868A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 868C
 287+ 868C 00 00        	defw 0											; (Posicion_inicio).
 288+ 868E 00           	db 0											; (Cuad_objeto).
 289+ 868F
 290+ 868F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 8693
 292+ 8693 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 8694
 294+ 8694 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 869A
 296+ 869A 00 00        	db 0,0											; Variables_de_pintado
 297+ 869C 00 00        	defw 0											;	" " " " " " "
 298+ 869E 00 00        	defw 0											;	" " " " " " "
 299+ 86A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86A4
 301+ 86A4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86A6
 303+ 86A6 00           	db 0											; (Autoriza_movimiento).
 304+ 86A7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86AB 00 00
 305+ 86AD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86B0
 307+ 86B0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86B2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86B3
 310+ 86B3 00           	db 0 											; (Columnas).
 311+ 86B4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86B6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86B9
 314+ 86B9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86B9
 316+ 86B9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86BB 00 00        	defw 0											; (Posicion_actual).
 318+ 86BD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86BF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86C2
 321+ 86C2 00           	db %00000000 									; (Attr).
 322+ 86C3
 323+ 86C3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86C5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86C7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86C9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86CB
 328+ 86CB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86CD 00           	db 0											; (Cuad_objeto).
 330+ 86CE
 331+ 86CE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86D2
 333+ 86D2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86D3
 335+ 86D3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86D9
 337+ 86D9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86DB 00 00        	defw 0											;	" " " " " " "
 339+ 86DD 00 00        	defw 0											;	" " " " " " "
 340+ 86DF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 86E3
 342+ 86E3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 86E5
 344+ 86E5 00           	db 0											; (Autoriza_movimiento).
 345+ 86E6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 86EA 00 00
 346+ 86EC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 86EF
 348+ 86EF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 86F1 00           	db 0											; (Cola_de_desplazamiento).
 350+ 86F2
 351+ 86F2 00           	db 0 											; (Columnas).
 352+ 86F3 00 00        	defw 0											; (Limite_horizontal).
 353+ 86F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 86F8
 355+ 86F8              ; ---------- ---------- ---------- ---------- ----------
 356+ 86F8
 357+ 86F8 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 86FA 00 00        	defw 0											; (Posicion_actual).
 359+ 86FC 00 00        	defw 0 											; (Puntero_objeto).
 360+ 86FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8701
 362+ 8701 00           	db %00000000 									; (Attr).
 363+ 8702
 364+ 8702 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8704 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8706 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8708 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 870A
 369+ 870A 00 00        	defw 0											; (Posicion_inicio).
 370+ 870C 00           	db 0											; (Cuad_objeto).
 371+ 870D
 372+ 870D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8711
 374+ 8711 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8712
 376+ 8712 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8718
 378+ 8718 00 00        	db 0,0											; Variables_de_pintado
 379+ 871A 00 00        	defw 0											;	" " " " " " "
 380+ 871C 00 00        	defw 0											;	" " " " " " "
 381+ 871E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8722
 383+ 8722 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8724
 385+ 8724 00           	db 0											; (Autoriza_movimiento).
 386+ 8725 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8729 00 00
 387+ 872B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 872E
 389+ 872E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8730 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8731
 392+ 8731 00           	db 0 											; (Columnas).
 393+ 8732 00 00        	defw 0											; (Limite_horizontal).
 394+ 8734 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8737
 396+ 8737              ; ---------- ---------- ---------- ---------- ----------
 397+ 8737
 398+ 8737 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8739 00 00        	defw 0											; (Posicion_actual).
 400+ 873B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 873D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8740
 403+ 8740 00           	db %00000000 									; (Attr).
 404+ 8741
 405+ 8741 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8743 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8745 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8747 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8749
 410+ 8749 00 00        	defw 0											; (Posicion_inicio).
 411+ 874B 00           	db 0											; (Cuad_objeto).
 412+ 874C
 413+ 874C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8750
 415+ 8750 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8751
 417+ 8751 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8757
 419+ 8757 00 00        	db 0,0											; Variables_de_pintado
 420+ 8759 00 00        	defw 0											;	" " " " " " "
 421+ 875B 00 00        	defw 0											;	" " " " " " "
 422+ 875D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8761
 424+ 8761 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8763
 426+ 8763 00           	db 0											; (Autoriza_movimiento).
 427+ 8764 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8768 00 00
 428+ 876A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 876D
 430+ 876D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 876F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8770
 433+ 8770 00           	db 0 											; (Columnas).
 434+ 8771 00 00        	defw 0											; (Limite_horizontal).
 435+ 8773 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8776
 437+ 8776              ; -------------------------------------------------------------------------------------
 438+ 8776              ;
 439+ 8776              ;	20/05/23
 440+ 8776              ;
 441+ 8776              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8776              ;
 443+ 8776              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8776              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8776              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8776              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8776
 448+ 8776              Indice_de_entidades
 449+ 8776
 450+ 8776 7A 87        	defw Entidad_1
 451+ 8778 8A 87        	defw Entidad_2
 452+ 877A
 453+ 877A              ;	BADSAT, (Satélite malvado).
 454+ 877A
 455+ 877A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 877C 04           	db %00000100									; (Attr).
 457+ 877D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 877F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 8781 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 8783 01           	db 1											; (Cuad_objeto).
 461+ 8784 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 8788 37 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 878A
 464+ 878A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 878C 02           	db %00000010									; (Attr).
 466+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 8791 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 8793 01           	db 1											; (Cuad_objeto).
 470+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 8798 37 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 879A
# file closed: Cajas_y_disparos.asm
  97  879A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 879A              ; 13/05/23
   2+ 879A
   3+ 879A              Indice_de_niveles
   4+ 879A
   5+ 879A A8 87        	defw Nivel_1
   6+ 879C AD 87        	defw Nivel_2
   7+ 879E BA 87        	defw Nivel_3
   8+ 87A0 CA 87        	defw Nivel_4
   9+ 87A2 DC 87        	defw Nivel_5
  10+ 87A4              ;	...
  11+ 87A4              ;	...
  12+ 87A4              ;	+ Niveles ...
  13+ 87A4
  14+ 87A4 00 00        	defw 0
  15+ 87A6 00 00        	defw 0
  16+ 87A8
  17+ 87A8 04           Nivel_1 db 4	                                ; Nº de entidades.
  18+ 87A9 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87AD 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87AE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87B2 01 02
  21+ 87B4 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87B8 01 02
  22+ 87BA 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87BB 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87BF 01
  24+ 87C0 03 01 01 01  	db 3,1,1,1,1
  24+ 87C4 01
  25+ 87C5 03 01 01 01  	db 3,1,1,1,1
  25+ 87C9 01
  26+ 87CA 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87CB 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87CF 01
  28+ 87D0 04 01 01 01  	db 4,1,1,1,1
  28+ 87D4 01
  29+ 87D5 04 01 01 01  	db 4,1,1,1,1
  29+ 87D9 01
  30+ 87DA 02 03        	db 2,3
  31+ 87DC 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87DD 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87E1 01
  33+ 87E2 05 01 01 01  	db 5,1,1,1,1
  33+ 87E6 01
  34+ 87E7 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87EB 01
  35+ 87EC 05 01 01 01  	db 5,1,1,1,1
  35+ 87F0 01
  36+ 87F1
  37+ 87F1              ;---------------------------------------------------------------------------------------------------------------
  38+ 87F1              ;
  39+ 87F1              ;   3/9/23
  40+ 87F1              ;
  41+ 87F1              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87F1              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87F1              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87F1              ;	_en la caja DRAW correspondiente.
  45+ 87F1              ;
  46+ 87F1              ;	MODIFICA: HL,DE y A.
  47+ 87F1              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87F1
  49+ 87F1              Inicializa_Punteros_de_nivel
  50+ 87F1
  51+ 87F1 21 9A 87     	ld hl,Indice_de_niveles
  52+ 87F4 22 23 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 87F7 CD DB 8B     	call Extrae_address
  54+ 87FA 7E           	ld a,(hl)
  55+ 87FB 32 ED 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 87FE 23           	inc hl
  57+ 87FF 22 25 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8802 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8803
  60+ 8803              ;---------------------------------------------------------------------------------------------------------------
  61+ 8803              ;
  62+ 8803              ;   13/5/23
  63+ 8803              ;
  64+ 8803              ;	Destruye A,BC,HL,DE
  65+ 8803
  66+ 8803              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8803              ;	_del juego.
  68+ 8803
  69+ 8803              Prepara_cajas
  70+ 8803
  71+ 8803              ; Preparamos los punteros de las cajas.
  72+ 8803
  73+ 8803 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8806 CD DB 8B     	call Extrae_address
  75+ 8809 CD 46 88     	call Avanza_caja
  76+ 880C
  77+ 880C CD 8A 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 880F
  79+ 880F 2A 25 89     	ld hl,(Datos_de_nivel)
  80+ 8812
  81+ 8812              ; HL está en los datos del nivel correspondiente.
  82+ 8812              ; B actuará como contador de cajas.
  83+ 8812
  84+ 8812 C5           1 push bc
  85+ 8813
  86+ 8813 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8814 CD 37 88     	call PreparaBC
  88+ 8817
  89+ 8817 21 76 87     	ld hl,Indice_de_entidades
  90+ 881A CD 3F 88     	call SBC_HL_con_BC_y_Extrae
  91+ 881D 22 F3 88         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8820
  93+ 8820 CD 50 88     	call Datos_de_entidad_a_caja
  94+ 8823
  95+ 8823 2A EB 88     	ld hl,(Indice_restore_caja)
  96+ 8826 CD DB 8B     	call Extrae_address
  97+ 8829 CD 46 88     	call Avanza_caja
  98+ 882C
  99+ 882C 2A 25 89     	ld hl,(Datos_de_nivel)
 100+ 882F 23           	inc hl
 101+ 8830 22 25 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8833
 103+ 8833 C1           	pop bc
 104+ 8834 10 DC        	djnz 1B
 105+ 8836 C9           	ret
 106+ 8837
 107+ 8837 CB 27        PreparaBC sla a
 108+ 8839 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 883B 4F           	ld c,a
 110+ 883C 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 883E C9           	ret
 112+ 883F
 113+ 883F A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8840 ED 4A        	adc hl,bc
 115+ 8842 CD DB 8B     	call Extrae_address
 116+ 8845 C9           	ret
 117+ 8846
 118+ 8846 22 E7 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8849 13           	inc de
 120+ 884A 13           	inc de
 121+ 884B EB           	ex de,hl
 122+ 884C 22 EB 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 884F C9           	ret
 124+ 8850
 125+ 8850              Datos_de_entidad_a_caja
 126+ 8850
 127+ 8850              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8850
 129+ 8850
 130+ 8850 ED 5B E7 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8854
 132+ 8854 01 02 00     	ld bc,2
 133+ 8857 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8859
 135+ 8859 01 07 00     	ld bc,7
 136+ 885C CD 84 88     	call Situa_DE
 137+ 885F
 138+ 885F 01 05 00     	ld bc,5
 139+ 8862 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8864
 141+ 8864 01 04 00     	ld bc,4
 142+ 8867 CD 84 88     	call Situa_DE
 143+ 886A
 144+ 886A 01 07 00     	ld bc,7
 145+ 886D ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 886F
 147+ 886F 01 12 00     	ld bc,18
 148+ 8872 CD 84 88     	call Situa_DE
 149+ 8875
 150+ 8875 01 02 00     	ld bc,2
 151+ 8878 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 887A
 153+ 887A              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 887A              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 887A
 156+ 887A 01 0F 00     	ld bc,15									; *****
 157+ 887D CD 84 88     	call Situa_DE
 158+ 8880
 159+ 8880 3E 03        	ld a,3
 160+ 8882 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8883
 162+ 8883 C9           	ret
 163+ 8884
 164+ 8884 EB           Situa_DE ex de,hl
 165+ 8885 A7           	and a
 166+ 8886 ED 4A        	adc hl,bc
 167+ 8888 EB           	ex de,hl
 168+ 8889 C9           	ret
 169+ 888A
 170+ 888A              ;---------------------------------------------------------------------------------------------------------------
 171+ 888A              ;
 172+ 888A              ;	21/5/23
 173+ 888A              ;
 174+ 888A              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 888A              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 888A              ;
 177+ 888A              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 888A              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 888A              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 888A              ;
 181+ 888A              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 888A              ;	MODIFICA: A y B.
 183+ 888A              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 888A
 185+ 888A              Admin_num_entidades
 186+ 888A
 187+ 888A              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 888A
 189+ 888A 3A ED 88     	ld a,(Numero_de_entidades)
 190+ 888D A7           	and a
 191+ 888E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 888E              ;	jr z,$
 193+ 888E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 888E
 195+ 888E 20 03        	jr nz,3F
 196+ 8890
 197+ 8890              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 8890
 199+ 8890 CD F1 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 8893
 201+ 8893 3A ED 88     3 ld a,(Numero_de_entidades)
 202+ 8896 FE 0A        	cp 10
 203+ 8898 38 08        	jr c,1F
 204+ 889A
 205+ 889A              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 889A              ; Actualizamos variables.
 207+ 889A
 208+ 889A 3E 0A        	ld a,10
 209+ 889C 32 EE 88     	ld (Numero_parcial_de_entidades),a
 210+ 889F 47           	ld b,a
 211+ 88A0 18 04        	jr 2F
 212+ 88A2
 213+ 88A2              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88A2              ; (Numero_de_entidades)="0".
 215+ 88A2
 216+ 88A2 32 EE 88     1 ld (Numero_parcial_de_entidades),a
 217+ 88A5 47           	ld b,a
 218+ 88A6 C9           2 ret
# file closed: Niveles.asm
  98  88A7
  99  88A7              ; ******************************************************************************************************************************************************************************************
 100  88A7              ; Constantes.
 101  88A7              ; ******************************************************************************************************************************************************************************************
 102  88A7              ;
 103  88A7              ; 10/11/23
 104  88A7
 105  88A7              ;
 106  88A7              ; Constantes generales.
 107  88A7              ;
 108  88A7
 109  88A7              Sprite_vacio equ $f000
 110  88A7              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88A7              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88A7              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88A7              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88A7
 115  88A7              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 116  88A7              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 117  88A7              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 118  88A7              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 119  88A7              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 120  88A7
 121  88A7              ;														; 55 Bytes.
 122  88A7
 123  88A7              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 124  88A7              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 125  88A7
 126  88A7              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88A7
 128  88A7              ; ******************************************************************************************************************************************************************************************
 129  88A7              ; Variables.
 130  88A7              ; ******************************************************************************************************************************************************************************************
 131  88A7              ;
 132  88A7              ; 10/11//23
 133  88A7              ;
 134  88A7              ; Variables de DRAW. (Motor principal).
 135  88A7              ;
 136  88A7              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88A7
 138  88A7 00           Filas db 0												; Filas. [DRAW]
 139  88A8 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88A9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88AB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88AD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88AE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88AF
 145  88AF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88AF
 147  88AF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88B0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88B0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88B0 00           Attr db 0												; Atributos de la entidad:
 151  88B1
 152  88B1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88B1              ;
 154  88B1              ;	COLORES: 0 ..... NEGRO
 155  88B1              ;    		 1 ..... AZUL
 156  88B1              ; 			 2 ..... ROJO
 157  88B1              ;			 3 ..... MAGENTA
 158  88B1              ; 			 4 ..... VERDE
 159  88B1              ; 			 5 ..... CIAN
 160  88B1              ;			 6 ..... AMARILLO
 161  88B1              ; 			 7 ..... BLANCO
 162  88B1
 163  88B1 00 00        Indice_Sprite_der defw 0
 164  88B3 00 00        Indice_Sprite_izq defw 0
 165  88B5 00 00        Puntero_DESPLZ_der defw 0
 166  88B7 00 00        Puntero_DESPLZ_izq defw 0
 167  88B9
 168  88B9 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88BB 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88BC
 171  88BC              ; Variables de objeto. (Características).
 172  88BC
 173  88BC 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88BD 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88BE 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88BF 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88C0
 178  88C0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88C1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88C1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88C1 00 00 00...  Variables_de_borrado ds 6
 182  88C7
 183  88C7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88C9 00 00        	defw 0
 185  88CB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88CD 00 00 00 00  	db 0,0,0,0
 187  88D1
 188  88D1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88D1
 190  88D1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88D2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88D2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88D2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88D2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88D2              ;
 196  88D2              ; 														DESCRIPCIÖN:
 197  88D2              ;
 198  88D2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88D2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88D2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88D2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88D2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88D2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88D2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88D2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88D2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88D2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88D2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88D2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88D2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88D2              ;
 212  88D2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88D2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88D2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88D2
 216  88D2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88D2
 218  88D2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88D4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88D6 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88D8              ;
 222  88D8              ;
 223  88D8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88D9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88D9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88D9 00           Incrementa_puntero_backup db 0
 227  88DA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88DB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88DB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88DC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88DD 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88DE              ;
 233  88DE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88DE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88DE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88DE              ;
 237  88DE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88DE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88DE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88DE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88DE              ;
 242  88DE              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88DE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88DE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88DE
 246  88DE
 247  88DE              ; Variables de funcionamiento. [DRAW].
 248  88DE
 249  88DE 00           Columnas db 0
 250  88DF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  88E1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  88E1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  88E2
 254  88E2              ; variables de control general.
 255  88E2
 256  88E2 00           Ctrl_2 db 0
 257  88E3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  88E3              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  88E3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  88E3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  88E3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  88E3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  88E3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  88E3              ;
 265  88E3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  88E3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  88E3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  88E3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  88E3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  88E3
 271  88E3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  88E4
 273  88E4              ;! 61 Bytes por entidad.
 274  88E4
 275  88E4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  88E4              ;					         		---------;      ;---------
 277  88E4
 278  88E4
 279  88E4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  88E4
 281  88E4 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  88E5
 283  88E5              ;														DESCRIPCIÓN:
 284  88E5              ;
 285  88E5              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  88E5              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  88E5              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  88E5              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  88E5              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  88E5              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  88E5
 292  88E5              ;														BIT 3, Recarga de nueva oleada.
 293  88E5              ;														BIT 4, Recarga de nueva oleada.
 294  88E5              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  88E5              ;														BIT 6, **** Frame completo.
 296  88E5              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  88E5
 298  88E5 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  88E7              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  88E7              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  88E7              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  88E7
 303  88E7              ; Gestión de ENTIDADES y CAJAS.
 304  88E7
 305  88E7 00 00        Puntero_store_caja defw 0
 306  88E9 00 00        Puntero_restore_caja defw 0
 307  88EB 00 00        Indice_restore_caja defw 0
 308  88ED 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 309  88EE 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 310  88EF 00           Entidades_en_curso db 0									; ..... ..... .....
 311  88F0 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 312  88F1              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 313  88F1              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 314  88F1              ;														; _ (Numero_de_malotes)="0".
 315  88F1 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 316  88F3 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 317  88F5              ;														; _ puntero (Indice_entidades).
 318  88F5
 319  88F5
 320  88F5              ;---------------------------------------------------------------------------------------------------------------
 321  88F5              ;
 322  88F5              ;	18/11/23
 323  88F5              ;
 324  88F5              ;	Álbumes.
 325  88F5
 326  88F5 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 327  88F7              ;														; _variable para almacenar lo posición del puntero_
 328  88F7              ; 														; _de pila, SP.
 329  88F7 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 330  88F9              ;														; La utiliza la rutina [Extrae_foto_registros].
 331  88F9 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 332  88FB 00 70        Stack_snapshot defw Album_de_fotos
 333  88FD 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 334  88FF
 335  88FF              ;End_Snapshot defw Album_de_fotos
 336  88FF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 337  88FF 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 338  8901              ;														; _el snapshot de los registros del siguiente disparo.
 339  8901              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 340  8901 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 341  8903
 342  8903 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 343  8904              ;
 344  8904              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 345  8904              ; Gestión de Disparos.
 346  8904
 347  8904 00           Numero_de_disparotes db 0
 348  8905 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 349  8907 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 350  8909 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 351  890A              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 352  890A              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 353  890A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 354  890C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 355  890C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 356  890C              ;														; _produzca colisión.
 357  890C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 358  890E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 359  890E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 360  8911              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 361  8911 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 362  8914              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 363  8914 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 364  8916 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 365  8917
 366  8917              ;---------------------------------------------------------------------------------------------------------------
 367  8917
 368  8917              ; Relojes y temporizaciones.
 369  8917
 370  8917 00           Contador_de_frames db 0
 371  8918 00           Contador_de_frames_2 db 0
 372  8919
 373  8919 04           Clock_explosion db 4
 374  891A 1E           Clock_Entidades_en_curso db 30
 375  891B 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 376  891C              ;														; Repite la oleada de entidades.
 377  891C 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 378  891D 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 379  891E 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 380  891F
 381  891F 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 382  8920 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 383  8921 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 384  8922
 385  8922              ;---------------------------------------------------------------------------------------------------------------
 386  8922
 387  8922              ; Gestión de NIVELES.
 388  8922
 389  8922 00           Nivel db 0												; Nivel actual del juego.
 390  8923 00 00        Puntero_indice_NIVELES defw 0
 391  8925 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 392  8927              ; 														; _ que definen el NIVEL.
 393  8927              ; Y todo comienza aquí .....
 394  8927              ;
 395  8927              ; Rutina principal *************************************************************************************************************************************************************************
 396  8927              ;
 397  8927              ;	16/11/22
 398  8927
 399  8927              START
 400  8927
 401  8927 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 402  892A 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 403  892C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 404  892E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 405  8930 F3           	DI
 406  8931
 407  8931 3E 07        	ld a,%00000111
 408  8933 CD 60 98     	call Cls
 409  8936
 410  8936 CD B4 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 411  8939
 412  8939              ; INICIALIZACIÓN.
 413  8939
 414  8939 CD F1 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 415  893C CD 03 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 416  893F CD 43 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 417  8942              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 418  8942 CD 64 8C     	call Restore_entidad
 419  8945
 420  8945 21 EE 88     	ld hl,Numero_parcial_de_entidades
 421  8948 46           	ld b,(hl)
 422  8949 04           	inc b
 423  894A 05           	dec b
 424  894B 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 425  894D
 426  894D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 427  894D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 428  894D              ;	Pintamos el resto de entidades:
 429  894D
 430  894D              ;	INICIA ENTIDADES !!!!!
 431  894D
 432  894D C5           1 push bc  												; Guardo el contador de entidades.
 433  894E CD 13 8B     	call Inicia_entidad
 434  8951 C1           	pop bc
 435  8952 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 436  8954
 437  8954              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 438  8954              ; (Esto se dá cuando se inicia una nueva oleada).
 439  8954
 440  8954 3A E4 88     	ld a,(Ctrl_1)
 441  8957 CB 5F        	bit 3,a
 442  8959 20 00        	jr nz,5F											; Loop
 443  895B
 444  895B              ; 	INICIA AMADEUS !!!!!
 445  895B
 446  895B              3
 447  895B              ;	call Restore_Amadeus
 448  895B              ;	call Inicia_Puntero_objeto
 449  895B              ;	call Draw
 450  895B              ;	call Guarda_foto_registros
 451  895B              ;	call Guarda_datos_de_borrado_Amadeus
 452  895B
 453  895B              ;	ld de,Amadeus_db
 454  895B              ;	call Store_Amadeus
 455  895B
 456  895B              ; 	INICIA DISPAROS !!!!!
 457  895B
 458  895B              ;	call Inicia_Puntero_Disparo_Entidades
 459  895B              ;	call Inicia_Puntero_Disparo_Amadeus
 460  895B
 461  895B              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 462  895B
 463  895B CD 43 8B     5 call Inicia_punteros_de_cajas
 464  895E CD 64 8C     	call Restore_entidad
 465  8961
 466  8961 3A E4 88     	ld a,(Ctrl_1)
 467  8964 CB 5F        	bit 3,a
 468  8966 28 07        	jr z,6F
 469  8968
 470  8968              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 471  8968
 472  8968 21 E4 88     	ld hl,Ctrl_1
 473  896B CB 9E        	res 3,(hl)
 474  896D 18 07        	jr Main
 475  896F
 476  896F              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 477  896F
 478  896F 21 03 89     6 ld hl,Ctrl_3
 479  8972 CB C6        	set 0,(hl)											; Frame completo.
 480  8974 FB           	ei
 481  8975 76           	halt
 482  8976
 483  8976              ; ------------------------------------
 484  8976
 485  8976              Main
 486  8976              ;
 487  8976              ;	12/11/23
 488  8976
 489  8976              ; Aparece nueva entidad ???
 490  8976
 491  8976              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 492  8976              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 493  8976              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 494  8976              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 495  8976              ;														; _un 2º bloque.
 496  8976
 497  8976 3A 1A 89     	ld a,(Clock_Entidades_en_curso)
 498  8979 47           	ld b,a
 499  897A 3A 17 89     	ld a,(Contador_de_frames)
 500  897D B8           	cp b
 501  897E 28 07        	jr z,21F
 502  8980
 503  8980              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 504  8980              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 505  8980              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 506  8980              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 507  8980
 508  8980 3C           	inc a
 509  8981 B8           	cp b
 510  8982 20 1B        	jr nz,13F
 511  8984
 512  8984 32 17 89     	ld (Contador_de_frames),a
 513  8987
 514  8987              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 515  8987              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 516  8987
 517  8987 3A EE 88     21 ld a,(Numero_parcial_de_entidades)
 518  898A 47           	ld b,a
 519  898B 3A EF 88     	ld a,(Entidades_en_curso)
 520  898E B8           	cp b
 521  898F 28 0E        	jr z,13F
 522  8991 30 0C        	jr nc,13F
 523  8993
 524  8993              ; --- --- --- --- ---
 525  8993
 526  8993 3C           	inc a
 527  8994 32 EF 88     	ld (Entidades_en_curso),a
 528  8997
 529  8997              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 530  8997
 531  8997 3A 1A 89     	ld a,(Clock_Entidades_en_curso)
 532  899A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 533  899A              ;! _ IMPREDECIBLE !!!!
 534  899A C6 32        	add 50
 535  899C 32 1A 89     	ld (Clock_Entidades_en_curso),a
 536  899F
 537  899F              ; -------------------------------------------------------------------------------------------------------------
 538  899F
 539  899F              ; Habilita disparos.
 540  899F
 541  899F 21 1C 89     13 ld hl,Disparo_Amadeus
 542  89A2 11 1E 89     	ld de,CLOCK_repone_disparo_Amadeus
 543  89A5 CD 28 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 544  89A8
 545  89A8 21 1F 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 546  89AB 11 21 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 547  89AE CD 28 9C     	call Habilita_disparos
 548  89B1
 549  89B1              ; COLISIONES.
 550  89B1
 551  89B1 CD 2F 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 552  89B4
 553  89B4              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 554  89B4              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 555  89B4              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 556  89B4
 557  89B4 AF           	xor a
 558  89B5 32 09 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 559  89B8
 560  89B8 CD 43 8B     	call Inicia_punteros_de_cajas
 561  89BB CD 64 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 562  89BE              ; 														; _ en DRAW.
 563  89BE 3A A7 88     	ld a,(Filas)
 564  89C1 A7           	and a
 565  89C2 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 566  89C4 CD 76 8C     	call Incrementa_punteros_de_cajas
 567  89C7 18 F2        	jr 12B
 568  89C9
 569  89C9              ; ---------------------------------------------------------------------------------------
 570  89C9
 571  89C9 3A EE 88     10 ld a,(Numero_parcial_de_entidades)
 572  89CC 47               ld b,a
 573  89CD A7           	and a
 574  89CE 20 14        	jr nz,11F
 575  89D0
 576  89D0 21 E4 88     	ld hl,Ctrl_1
 577  89D3 CB 66        	bit 4,(hl)
 578  89D5 C2 61 8A     	jp nz,16F
 579  89D8
 580  89D8              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 581  89D8
 582  89D8 21 E4 88     	ld hl,Ctrl_1
 583  89DB CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 584  89DD
 585  89DD 3A 17 89     	ld a,(Contador_de_frames)
 586  89E0 3C           	inc a
 587  89E1 32 1B 89     	ld (Activa_recarga_cajas),a
 588  89E4
 589  89E4              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 590  89E4
 591  89E4 3A EF 88     11 ld a,(Entidades_en_curso)
 592  89E7 A7           	and a
 593  89E8 CA 61 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 594  89EB 47           	ld b,a												; No hay entidades que gestionar.
 595  89EC
 596  89EC              ; Código que ejecutamos con cada entidad:
 597  89EC              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 598  89EC
 599  89EC C5           15 push bc 												; Nº de entidades en curso.
 600  89ED
 601  89ED              ; Impacto ???
 602  89ED
 603  89ED 3A C0 88     22 ld a,(Impacto)
 604  89F0 A7           	and a
 605  89F1 28 31        	jr z,8F
 606  89F3
 607  89F3              ; Hay Impacto en esta entidad.
 608  89F3
 609  89F3 21 19 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 610  89F6 35           	dec (hl)
 611  89F7 C2 5B 8A     	jp nz,17F
 612  89FA
 613  89FA              ;! Velocidad de la animación de la explosión.
 614  89FA
 615  89FA 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 616  89FC              ;														; _,(velocidad de la explosión).
 617  89FC
 618  89FC              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 619  89FC
 620  89FC CD 08 8D     	call Repone_datos_de_borrado
 621  89FF CD 81 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 622  8A02
 623  8A02              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 624  8A02
 625  8A02 3A E2 88     	ld a,(Ctrl_2)
 626  8A05 CB 4F        	bit 1,a
 627  8A07 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 628  8A09
 629  8A09              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 630  8A09
 631  8A09 3A AF 88     	ld a,(CTRL_DESPLZ)
 632  8A0C A7           	and a
 633  8A0D 20 08        	jr nz,18F
 634  8A0F
 635  8A0F 21 84 84     	ld hl,Indice_Explosion_2x2-2
 636  8A12 22 B5 88     	ld (Puntero_DESPLZ_der),hl
 637  8A15 18 06        	jr 19F
 638  8A17
 639  8A17 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 640  8A1A 22 B5 88     	ld (Puntero_DESPLZ_der),hl
 641  8A1D
 642  8A1D 21 E2 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 643  8A20 CB CE        	set 1,(hl)
 644  8A22 18 22        	jr 7F
 645  8A24
 646  8A24              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 647  8A24              ; _con las coordenadas de la entidad almacenada en DRAW.
 648  8A24
 649  8A24 3A E4 88     8 ld a,(Ctrl_1)
 650  8A27 CB 57        	bit 2,a
 651  8A29 28 1B        	jr z,7F
 652  8A2B
 653  8A2B 2A 0C 89     	ld hl,(Coordenadas_disparo_certero)
 654  8A2E EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 655  8A2F              ;														; E contiene la coordenada_X del disparo.
 656  8A2F 2A AD 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 657  8A32              ;														; H FILA, (Coordenada_y de la entidad).
 658  8A32 A7           	and a
 659  8A33 ED 52        	sbc hl,de
 660  8A35
 661  8A35 CD 66 91     	call Determina_resultado_comparativa
 662  8A38
 663  8A38 78           	ld a,b
 664  8A39 A7           	and a
 665  8A3A 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 666  8A3C
 667  8A3C              ; ----- ----- -----
 668  8A3C
 669  8A3C 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 670  8A3E 32 C0 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 671  8A41
 672  8A41 21 E4 88     	ld hl,Ctrl_1
 673  8A44 CB 96        	res 2,(hl)
 674  8A46
 675  8A46 CD AF 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 676  8A49
 677  8A49 3A D1 88     	ld a,(Ctrl_0)
 678  8A4C CB 67        	bit 4,a
 679  8A4E 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 680  8A50
 681  8A50              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 682  8A50              ; [[[
 683  8A50 CD E2 8C     	call Detecta_disparo_entidad
 684  8A53              ; ]]]
 685  8A53 CD 24 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 686  8A56
 687  8A56 21 D1 88     	ld hl,Ctrl_0
 688  8A59 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 689  8A5B
 690  8A5B CD 29 8C     17 call Store_Restore_cajas
 691  8A5E
 692  8A5E C1           	pop bc
 693  8A5F 10 8B        	djnz 15B
 694  8A61
 695  8A61              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 696  8A61              ; Hemos gestionado todas las unidades.
 697  8A61              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 698  8A61
 699  8A61              ;	ld hl,Ctrl_1
 700  8A61              ;	res 2,(hl)
 701  8A61
 702  8A61 21 03 89     16 ld hl,Ctrl_3
 703  8A64 CB C6        	set 0,(hl)											; Frame completo.
 704  8A66 FB           	ei
 705  8A67 76           	halt
 706  8A68
 707  8A68              ; ----------------------------------------
 708  8A68
 709  8A68 3A E4 88     	ld a,(Ctrl_1) 										; Existe Loop?
 710  8A6B CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 711  8A6D CA 76 89     	jp z,Main
 712  8A70
 713  8A70              ; RECARGA DE NUEVA OLEADA.
 714  8A70
 715  8A70 3A 17 89     	ld a,(Contador_de_frames)
 716  8A73 47           	ld b,a
 717  8A74 3A 1B 89     	ld a,(Activa_recarga_cajas)
 718  8A77 B8           	cp b
 719  8A78 28 08        	jr z,20F
 720  8A7A
 721  8A7A 21 E4 88     	ld hl,Ctrl_1
 722  8A7D CB E6        	set 4,(hl)
 723  8A7F C3 76 89     	jp Main
 724  8A82
 725  8A82 21 E4 88     20 ld hl,Ctrl_1
 726  8A85 CB A6        	res 4,(hl)
 727  8A87
 728  8A87 3A 17 89     	ld a,(Contador_de_frames)
 729  8A8A
 730  8A8A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 731  8A8A              ;! _ IMPREDECIBLE !!!!
 732  8A8A
 733  8A8A C6 0A        	add 10
 734  8A8C 32 1A 89     	ld (Clock_Entidades_en_curso),a
 735  8A8F
 736  8A8F C3 3C 89     	jp 4B
 737  8A92
 738  8A92 C9           	ret
 739  8A93
 740  8A93              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 741  8A93              ;
 742  8A93              ;	16/11/23
 743  8A93
 744  8A93              Gestiona_Amadeus
 745  8A93
 746  8A93              ;! Activa/desactiva impacto con Amadeus.
 747  8A93
 748  8A93 3A C0 88     	ld a,(Impacto)
 749  8A96 A7           	and a
 750  8A97 20 FE        	jr nz,$
 751  8A99
 752  8A99 CD 00 8B     	call Mov_Amadeus
 753  8A9C
 754  8A9C 3A D1 88     	ld a,(Ctrl_0)
 755  8A9F CB 67        	bit 4,a
 756  8AA1 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 757  8AA3
 758  8AA3 CD 24 8B     	call Guarda_foto_entidad_a_pintar
 759  8AA6 CD E8 8C     	call Guarda_datos_de_borrado_Amadeus
 760  8AA9
 761  8AA9 21 D1 88     14 ld hl,Ctrl_0
 762  8AAC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 763  8AAE
 764  8AAE              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 765  8AAE
 766  8AAE              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 767  8AAE
 768  8AAE              ;	call Calcula_numero_de_disparotes
 769  8AAE
 770  8AAE C9           	ret
 771  8AAF
 772  8AAF              ; --------------------------------------------------------------------------------------------------------------
 773  8AAF              ;
 774  8AAF              ;	27/05/23
 775  8AAF
 776  8AAF              Mov_obj
 777  8AAF
 778  8AAF 3A E2 88     	ld a,(Ctrl_2)
 779  8AB2 CB 4F        	bit 1,a
 780  8AB4 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 781  8AB6
 782  8AB6              ; Explosión:
 783  8AB6
 784  8AB6 3A E3 88     	ld a,(Frames_explosion)
 785  8AB9 A7           	and a
 786  8ABA 20 11        	jr nz,4F
 787  8ABC
 788  8ABC              ; Una alimaña menos!!!!!!!!!1
 789  8ABC
 790  8ABC CD A6 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 791  8ABF 21 EE 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 792  8AC2 35           	dec (hl)
 793  8AC3 21 EF 88     	ld hl,Entidades_en_curso
 794  8AC6 35           	dec (hl)
 795  8AC7 21 ED 88     	ld hl,Numero_de_entidades
 796  8ACA 35           	dec (hl)
 797  8ACB 18 32        	jr 3F
 798  8ACD
 799  8ACD              ; -----
 800  8ACD
 801  8ACD              ;	`Movemos´ la explosión.
 802  8ACD
 803  8ACD 2A B5 88     4 ld hl,(Puntero_DESPLZ_der)
 804  8AD0 23           	inc hl
 805  8AD1 23           	inc hl
 806  8AD2 22 B5 88     	ld (Puntero_DESPLZ_der),hl
 807  8AD5 CD DB 8B     	call Extrae_address
 808  8AD8 22 AB 88     	ld (Puntero_objeto),hl
 809  8ADB
 810  8ADB 21 E3 88     	ld hl,Frames_explosion
 811  8ADE 35           	dec (hl)
 812  8ADF 18 1E        	jr 3F
 813  8AE1
 814  8AE1 AF           2 xor a
 815  8AE2 32 D1 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 816  8AE5
 817  8AE5              ; Movemos Entidades malignas.
 818  8AE5
 819  8AE5 CD D3 9D     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 820  8AE8
 821  8AE8 3A D1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 822  8AEB CB 67        	bit 4,a
 823  8AED C8           	ret z
 824  8AEE
 825  8AEE              ; Ha habido desplazamiento de la entidad maligna.
 826  8AEE              ; Ha llegado a zona de AMADEUS ???
 827  8AEE
 828  8AEE 3A AE 88     	ld a,(Coordenada_y)
 829  8AF1 FE 14        	cp $14
 830  8AF3 D4 F4 8E     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 831  8AF6              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 832  8AF6              ; ---------
 833  8AF6
 834  8AF6 CD 2B 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 835  8AF9 CD 08 8D     	call Repone_datos_de_borrado
 836  8AFC CD 81 8B     	call Limpia_Variables_de_borrado
 837  8AFF
 838  8AFF C9           3 ret													; _de la misma.
 839  8B00
 840  8B00              ; --------------------------------------------------------------------------------------------------------------
 841  8B00              ;
 842  8B00              ;	29/1/23
 843  8B00
 844  8B00              Mov_Amadeus
 845  8B00
 846  8B00 CD C8 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 847  8B03
 848  8B03 3A D1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 849  8B06 CB 67        	bit 4,a
 850  8B08 C8           	ret z
 851  8B09
 852  8B09              ; ---------
 853  8B09
 854  8B09 CD 2B 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 855  8B0C CD F8 8C     	call Repone_datos_de_borrado_Amadeus
 856  8B0F CD 81 8B     	call Limpia_Variables_de_borrado
 857  8B12
 858  8B12 C9           	ret
 859  8B13
 860  8B13              ; -----------------------------------------------------------------------------------
 861  8B13              ;
 862  8B13              ;	16/11/23
 863  8B13
 864  8B13 CD E1 8B     Inicia_entidad	call Inicia_Puntero_objeto
 865  8B16 CD 74 98     	call Recompone_posicion_inicio
 866  8B19 CD 4D 92     	call Draw
 867  8B1C CD A0 7F     	call Guarda_foto_registros
 868  8B1F F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 869  8B20              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 870  8B20 CD 29 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 871  8B23 C9           	ret
 872  8B24
 873  8B24              ; --------------------------------------------------------------------------------------------------------------
 874  8B24              ;
 875  8B24              ;	31/08/23
 876  8B24              ;
 877  8B24              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 878  8B24              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 879  8B24
 880  8B24              Guarda_foto_entidad_a_pintar
 881  8B24
 882  8B24              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 883  8B24
 884  8B24 CD 4D 92     	call Draw
 885  8B27 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 886  8B2A C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 887  8B2B
 888  8B2B              ; --------------------------------------------------------------------------------------------------------------
 889  8B2B              ;
 890  8B2B              ;	19/9/23
 891  8B2B
 892  8B2B 21 A7 88     Prepara_var_pintado ld hl,Filas
 893  8B2E 11 C7 88     	ld de,Variables_de_pintado
 894  8B31 01 08 00     	ld bc,8
 895  8B34 ED B0        	ldir
 896  8B36 C9           	ret
 897  8B37
 898  8B37              ; --------------------------------------------------------------------------------------------------------------
 899  8B37
 900  8B37 21 C7 88     Repone_pintar ld hl,Variables_de_pintado
 901  8B3A 11 A7 88     	ld de,Filas
 902  8B3D 01 08 00     	ld bc,8
 903  8B40 ED B0        	ldir
 904  8B42 C9           	ret
 905  8B43
 906  8B43              ; *************************************************************************************************************************************************************
 907  8B43              ;
 908  8B43              ; 8/1/23
 909  8B43              ;
 910  8B43              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 911  8B43              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 912  8B43              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 913  8B43
 914  8B43              ; Destruye HL y DE !!!!!
 915  8B43
 916  8B43              Inicia_punteros_de_cajas
 917  8B43
 918  8B43 21 6C 85     	ld hl,Indice_de_cajas
 919  8B46 CD DB 8B         call Extrae_address
 920  8B49 22 E7 88         ld (Puntero_store_caja),hl
 921  8B4C 21 6E 85     	ld hl,Indice_de_cajas+2
 922  8B4F 22 EB 88     	ld (Indice_restore_caja),hl
 923  8B52 CD DB 8B     	call Extrae_address
 924  8B55 22 E9 88     	ld (Puntero_restore_caja),hl
 925  8B58 C9               ret
 926  8B59
 927  8B59              ; *************************************************************************************************************************************************************
 928  8B59              ;
 929  8B59              ; 8/1/23
 930  8B59              ;
 931  8B59              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 932  8B59
 933  8B59 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 934  8B5C 22 05 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935  8B5F C9           	ret
 936  8B60 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 937  8B63 22 07 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 938  8B66 C9           	ret
 939  8B67
 940  8B67              ; -------------------------------------------------------------------------------------------------------------
 941  8B67              ;
 942  8B67              ; 21/9/23
 943  8B67              ;
 944  8B67
 945  8B67              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 946  8B67
 947  8B67              Limpia_album_Amadeus
 948  8B67
 949  8B67 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 950  8B6A 7E           	ld a,(hl)
 951  8B6B A7           	and a
 952  8B6C C8           	ret z
 953  8B6D
 954  8B6D 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 955  8B70 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
 956  8B73 01 0B 00     	ld bc,11
 957  8B76 AF           	xor a
 958  8B77 77           	ld (hl),a
 959  8B78 ED B0        	ldir
 960  8B7A
 961  8B7A 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 962  8B7D 22 01 89     	ld (End_Snapshot_Amadeus),hl
 963  8B80
 964  8B80 C9           	ret
 965  8B81
 966  8B81 21 C1 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
 967  8B84 11 C2 88     	ld de,Variables_de_borrado+1
 968  8B87 01 05 00     	ld bc,5
 969  8B8A AF           	xor a
 970  8B8B 77           	ld (hl),a
 971  8B8C ED B0        	ldir
 972  8B8E C9           	ret
 973  8B8F
 974  8B8F              ; -------------------------------------------------------------------------------------------------------------
 975  8B8F              ;
 976  8B8F              ; 8/9/23
 977  8B8F              ;
 978  8B8F
 979  8B8F              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
 980  8B8F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
 981  8B8F
 982  8B8F              Calcula_numero_de_malotes
 983  8B8F
 984  8B8F 21 00 70     	ld hl,Album_de_fotos
 985  8B92 EB           	ex de,hl
 986  8B93 2A FB 88     	ld hl,(Stack_snapshot)
 987  8B96
 988  8B96              ;	ld a,h
 989  8B96              ;	and a
 990  8B96              ;	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
 991  8B96
 992  8B96 06 00        4 ld b,0
 993  8B98 7D           	ld a,l
 994  8B99 93           	sub e
 995  8B9A 28 07        	jr z,1F
 996  8B9C
 997  8B9C              ; Nº de malotes no es "0".
 998  8B9C
 999  8B9C D6 06        2 sub 6
1000  8B9E 04           	inc b
1001  8B9F A7           	and a
1002  8BA0 20 FA        	jr nz,2B
1003  8BA2 78           	ld a,b
1004  8BA3
1005  8BA3 32 F0 88     1 ld (Numero_de_malotes),a
1006  8BA6 C9           	ret
1007  8BA7
1008  8BA7              ; -------------------------------------------------------------------------------------------------------------
1009  8BA7              ;
1010  8BA7              ; 8/9/23
1011  8BA7              ;
1012  8BA7
1013  8BA7              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1014  8BA7              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1015  8BA7
1016  8BA7              Calcula_malotes_Amadeus
1017  8BA7
1018  8BA7 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1019  8BAA EB           	ex de,hl
1020  8BAB 2A 01 89     	ld hl,(End_Snapshot_Amadeus)
1021  8BAE
1022  8BAE 7C           	ld a,h
1023  8BAF A7           	and a
1024  8BB0 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1025  8BB2
1026  8BB2 06 00        	ld b,0
1027  8BB4 7D           	ld a,l
1028  8BB5 93           	sub e
1029  8BB6 28 07        	jr z,1F
1030  8BB8
1031  8BB8              ; Nº de malotes no es "0".
1032  8BB8
1033  8BB8 D6 06        2 sub 6
1034  8BBA 04           	inc b
1035  8BBB A7           	and a
1036  8BBC 20 FA        	jr nz,2B
1037  8BBE 78           	ld a,b
1038  8BBF
1039  8BBF 32 F0 88     1 ld (Numero_de_malotes),a
1040  8BC2 C9           	ret
1041  8BC3
1042  8BC3              ; -------------------------------------------------------------------------------------------------------------
1043  8BC3              ;
1044  8BC3              ; 28/2/23
1045  8BC3              ;
1046  8BC3
1047  8BC3              Calcula_numero_de_disparotes
1048  8BC3
1049  8BC3 21 56 70     	ld hl,Album_de_fotos_disparos
1050  8BC6 EB           	ex de,hl
1051  8BC7 2A FF 88     	ld hl,(End_Snapshot_disparos)
1052  8BCA
1053  8BCA 06 00        	ld b,0
1054  8BCC 7D           	ld a,l
1055  8BCD 93           	sub e
1056  8BCE 28 07        	jr z,1F
1057  8BD0
1058  8BD0              ; Nº de malotes no es "0".
1059  8BD0
1060  8BD0 D6 06        2 sub 6
1061  8BD2 04           	inc b
1062  8BD3 A7           	and a
1063  8BD4 20 FA        	jr nz,2B
1064  8BD6 78           	ld a,b
1065  8BD7
1066  8BD7 32 04 89     1 ld (Numero_de_disparotes),a
1067  8BDA C9           	ret
1068  8BDB
1069  8BDB              ; *************************************************************************************************************************************************************
1070  8BDB              ;
1071  8BDB              ; 20/10/22
1072  8BDB              ;
1073  8BDB              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1074  8BDB              ;
1075  8BDB              ; Destruye el puntero y DE !!!!!
1076  8BDB
1077  8BDB 5E           Extrae_address ld e,(hl)
1078  8BDC 23           	inc hl
1079  8BDD 56           	ld d,(hl)
1080  8BDE 2B           	dec hl
1081  8BDF EB           	ex de,hl
1082  8BE0 C9           	ret
1083  8BE1
1084  8BE1              ; *************************************************************************************************************************************************************
1085  8BE1              ;
1086  8BE1              ;	7/2/23
1087  8BE1              ;
1088  8BE1              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1089  8BE1              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1090  8BE1              ;
1091  8BE1              ;   Destruye HL y BC !!!!!,
1092  8BE1              ;
1093  8BE1              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1094  8BE1              ;					"0" ..... Izquierda.
1095  8BE1
1096  8BE1              Inicia_Puntero_objeto
1097  8BE1
1098  8BE1 3A BB 88     	ld a,(Cuad_objeto)
1099  8BE4 E6 01        	and 1
1100  8BE6 F5           	push af
1101  8BE7 CC 05 8C     	call z,Inicia_puntero_objeto_izq
1102  8BEA F1           	pop af
1103  8BEB 28 2B        	jr z,1F
1104  8BED CD F2 8B     	call Inicia_puntero_objeto_der
1105  8BF0 18 26        	jr 1F
1106  8BF2
1107  8BF2              ; Arrancamos desde la parte izquierda de la pantalla.
1108  8BF2              ; Iniciamos (Indice_Sprite_der).
1109  8BF2
1110  8BF2 2A B1 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1111  8BF5 22 B5 88     	ld (Puntero_DESPLZ_der),hl
1112  8BF8 CD DB 8B     	call Extrae_address
1113  8BFB 22 AB 88     	ld (Puntero_objeto),hl
1114  8BFE
1115  8BFE 2A B3 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1116  8C01 22 B7 88     	ld (Puntero_DESPLZ_izq),hl
1117  8C04 C9           	ret
1118  8C05
1119  8C05              ; Arrancamos desde la parte derecha de la pantalla.
1120  8C05              ; Iniciamos (Indice_Sprite_izq).
1121  8C05
1122  8C05 2A B3 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1123  8C08 22 B7 88     	ld (Puntero_DESPLZ_izq),hl
1124  8C0B CD DB 8B     	call Extrae_address
1125  8C0E 22 AB 88     	ld (Puntero_objeto),hl
1126  8C11
1127  8C11 2A B1 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1128  8C14 22 B5 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1129  8C17 C9           	ret
1130  8C18
1131  8C18              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1132  8C18
1133  8C18 21 40 83     1 ld hl,Amadeus
1134  8C1B ED 4B AB 88  	ld bc,(Puntero_objeto)
1135  8C1F B7 ED 42     	sub hl,bc
1136  8C22 C0           	ret nz
1137  8C23 21 D1 88     	ld hl,Ctrl_0
1138  8C26 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1139  8C28 C9           	ret 												; _de nuestra nave en los extremos.
1140  8C29
1141  8C29              ; *************************************************************************************************************************************************************
1142  8C29              ;
1143  8C29              ;	14/5/23
1144  8C29              ;
1145  8C29              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1146  8C29              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1147  8C29
1148  8C29              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1149  8C29              ;	_de la 2ª y 3ª entidad respectivamente.
1150  8C29
1151  8C29              Store_Restore_cajas
1152  8C29
1153  8C29 E5           	push hl
1154  8C2A D5           	push de
1155  8C2B C5            	push bc
1156  8C2C
1157  8C2C              ;	STORE !!!!!
1158  8C2C              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1159  8C2C
1160  8C2C 21 A7 88     	ld hl,Filas
1161  8C2F ED 5B E7 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1162  8C33 01 3D 00     	ld bc,61
1163  8C36 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1164  8C38
1165  8C38              ; 	Entidad_sospechosa. 20/4/23
1166  8C38
1167  8C38 3A C0 88     	ld a,(Impacto)
1168  8C3B A7           	and a
1169  8C3C 28 0C        	jr z,1F
1170  8C3E
1171  8C3E 2A E7 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1172  8C41 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1173  8C44 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1174  8C45 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1175  8C47 22 0A 89     	ld (Entidad_sospechosa_de_colision),hl
1176  8C4A
1177  8C4A              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1178  8C4A
1179  8C4A 2A E9 88     1 ld hl,(Puntero_restore_caja)
1180  8C4D 7E           	ld a,(hl)
1181  8C4E A7           	and a
1182  8C4F F5           	push af
1183  8C50 28 08        	jr z,2F
1184  8C52
1185  8C52 11 A7 88     	ld de,Filas
1186  8C55 01 3D 00     	ld bc,61
1187  8C58 ED B0        	ldir
1188  8C5A
1189  8C5A CD 76 8C     2 call Incrementa_punteros_de_cajas
1190  8C5D
1191  8C5D F1           	pop af
1192  8C5E 28 EA        	jr z,1B
1193  8C60
1194  8C60 C1           	pop bc
1195  8C61 D1           	pop de
1196  8C62 E1           	pop hl
1197  8C63
1198  8C63 C9           	ret
1199  8C64
1200  8C64              ; **************************************************************************************************
1201  8C64              ;
1202  8C64              ;	12/05/23
1203  8C64              ;
1204  8C64              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1205  8C64
1206  8C64 E5           Restore_entidad push hl
1207  8C65 D5           	push de
1208  8C66 C5            	push bc
1209  8C67
1210  8C67 2A E7 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1211  8C6A 11 A7 88     	ld de,Filas
1212  8C6D 01 3D 00     	ld bc,61
1213  8C70 ED B0        	ldir
1214  8C72
1215  8C72 C1           	pop bc
1216  8C73 D1           	pop de
1217  8C74 E1           	pop hl
1218  8C75 C9           	ret
1219  8C76
1220  8C76              ; **************************************************************************************************
1221  8C76              ;
1222  8C76              ;	08/05/23
1223  8C76              ;
1224  8C76              ;	Incrementamos los dos punteros de entidades. (+1).
1225  8C76
1226  8C76              Incrementa_punteros_de_cajas
1227  8C76
1228  8C76 2A E9 88     	ld hl,(Puntero_restore_caja)
1229  8C79 22 E7 88     	ld (Puntero_store_caja),hl
1230  8C7C 2A EB 88     	ld hl,(Indice_restore_caja)
1231  8C7F 23           	inc hl
1232  8C80 23           	inc hl
1233  8C81 22 EB 88     	ld (Indice_restore_caja),hl
1234  8C84 CD DB 8B         call Extrae_address
1235  8C87 22 E9 88         ld (Puntero_restore_caja),hl
1236  8C8A C9               ret
1237  8C8B
1238  8C8B              ; **************************************************************************************************
1239  8C8B              ;
1240  8C8B              ;	25/01/23
1241  8C8B              ;
1242  8C8B              ;	Restore_Amadeus
1243  8C8B              ;
1244  8C8B              ;	Cargamos en DRAW los parámetros de Amadeus.
1245  8C8B              ;
1246  8C8B
1247  8C8B E5           Restore_Amadeus	push hl
1248  8C8C D5           	push de
1249  8C8D C5            	push bc
1250  8C8E 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1251  8C91 11 A7 88     	ld de,Filas
1252  8C94 01 3D 00     	ld bc,61
1253  8C97 ED B0        	ldir
1254  8C99 C1           	pop bc
1255  8C9A D1           	pop de
1256  8C9B E1           	pop hl
1257  8C9C C9           	ret
1258  8C9D
1259  8C9D              ; *************************************************************************************************************************************************************
1260  8C9D              ;
1261  8C9D              ;	29/04/23
1262  8C9D              ;
1263  8C9D              ;	Store_Amadeus
1264  8C9D              ;
1265  8C9D              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1266  8C9D              ;
1267  8C9D              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1268  8C9D              ;
1269  8C9D              ;	DESTRUYE: HL y BC y DE.
1270  8C9D
1271  8C9D 21 A7 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1272  8CA0 01 3D 00     	ld bc,61
1273  8CA3 ED B0        	ldir
1274  8CA5 C9           	ret
1275  8CA6
1276  8CA6              ; -----------------------------------------------------------
1277  8CA6              ;
1278  8CA6              ;	27/04/23
1279  8CA6              ;
1280  8CA6              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1281  8CA6              ;
1282  8CA6              ;	Destruye: HL,BC,DE,A
1283  8CA6
1284  8CA6 21 A7 88     Borra_datos_entidad ld hl,Filas
1285  8CA9 01 3C 00     	ld bc,60
1286  8CAC AF           	xor a
1287  8CAD 77           	ld (hl),a
1288  8CAE 11 A8 88     	ld de,Filas+1
1289  8CB1 ED B0        	ldir
1290  8CB3 C9           	ret
1291  8CB4
1292  8CB4              ; -----------------------------------------------------------
1293  8CB4
1294  8CB4              ; Teclado.
1295  8CB4
1296  8CB4 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1297  8CB6 DB FE        	in a,($fe)
1298  8CB8 E6 01        	and $01
1299  8CBA 28 02        	jr z,1f
1300  8CBC 18 F6        	jr Pulsa_ENTER
1301  8CBE C9           1 ret
1302  8CBF
1303  8CBF              ; **************************************************************************************************
1304  8CBF              ;
1305  8CBF              ; Temporización.
1306  8CBF
1307  8CBF              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1308  8CBF              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1309  8CBF              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1310  8CBF              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1311  8CBF
1312  8CBF              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1313  8CBF              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1314  8CBF              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1315  8CBF
1316  8CBF              ; A partir de $4f61 no hace falta DELAY.
1317  8CBF
1318  8CBF              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1319  8CBF
1320  8CBF 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1321  8CC2 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1322  8CC3 78           	LD A,B
1323  8CC4 A7           	AND A
1324  8CC5 20 FB        	JR NZ,wait
1325  8CC7 C9           	RET
1326  8CC8
1327  8CC8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1328  8CC8              ;
1329  8CC8              ;	5/3/23
1330  8CC8              ;
1331  8CC8              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1332  8CC8
1333  8CC8              Movimiento_Amadeus
1334  8CC8
1335  8CC8              ; Disparo.
1336  8CC8
1337  8CC8              ;	ld a,(Disparo_Amadeus)
1338  8CC8              ;	and a
1339  8CC8              ;	jr nz,1F
1340  8CC8              ;	jr 2F
1341  8CC8
1342  8CC8              ;1 ld a,$f7													; "5" para disparar.
1343  8CC8              ;	in a,($fe)
1344  8CC8              ;	and $10
1345  8CC8
1346  8CC8              ;	push af
1347  8CC8              ;	call z,Genera_disparo
1348  8CC8              ;	pop af
1349  8CC8              ;	jr nz,2F
1350  8CC8
1351  8CC8              ;	ld a,(Disparo_Amadeus)
1352  8CC8              ;	xor 1
1353  8CC8              ;	ld (Disparo_Amadeus),a
1354  8CC8
1355  8CC8 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1356  8CCA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1357  8CCC E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1358  8CCE CC 32 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1359  8CD1
1360  8CD1 3E F7        	ld a,$f7
1361  8CD3 DB FE        	in a,($fe)
1362  8CD5 E6 01        	and $01
1363  8CD7 C8           	ret z
1364  8CD8
1365  8CD8 3E F7        	ld a,$f7
1366  8CDA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1367  8CDC E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1368  8CDE CC 14 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1369  8CE1 C9           	ret
1370  8CE2
1371  8CE2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1372  8CE2              ;
1373  8CE2              ;	Rutina provisional para que los malotes cagen balas.
1374  8CE2
1375  8CE2              Detecta_disparo_entidad
1376  8CE2
1377  8CE2 3A 1F 89     	ld a,(Disparo_entidad)
1378  8CE5 A7           	and a
1379  8CE6 C8           	ret z
1380  8CE7
1381  8CE7              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1382  8CE7
1383  8CE7              ;	ld a,$7f				; Detecta SPACE.
1384  8CE7              ;	in a,($fe)
1385  8CE7              ;	and 1
1386  8CE7              ;	ret nz
1387  8CE7
1388  8CE7              ;	call Genera_disparo
1389  8CE7 C9           	ret
1390  8CE8
1391  8CE8              ; ----------------------------------------------------------------------
1392  8CE8              ;
1393  8CE8              ;	8/9/23
1394  8CE8
1395  8CE8 2A 01 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1396  8CEB 2B            	dec hl
1397  8CEC 7E           	ld a,(hl)
1398  8CED A7           	and a
1399  8CEE C8           	ret z										; Salimos si es álbum está vacío.
1400  8CEF
1401  8CEF 11 C6 88     	ld de,Variables_de_borrado+5
1402  8CF2 01 06 00     	ld bc,6
1403  8CF5 ED B8        	lddr
1404  8CF7 C9           	ret
1405  8CF8
1406  8CF8              ; ----------------------------------------------------------------------
1407  8CF8              ;
1408  8CF8              ;	9/9/23
1409  8CF8
1410  8CF8              Repone_datos_de_borrado_Amadeus
1411  8CF8
1412  8CF8 21 C1 88     	ld hl,Variables_de_borrado
1413  8CFB 11 AC 70     	ld de,Album_de_fotos_Amadeus
1414  8CFE 01 06 00     	ld bc,6
1415  8D01 ED B0        	ldir
1416  8D03
1417  8D03 EB           	ex de,hl
1418  8D04 22 01 89     	ld (End_Snapshot_Amadeus),hl
1419  8D07
1420  8D07 C9           	ret
1421  8D08
1422  8D08              ; ----------------------------------------------------------------------
1423  8D08              ;
1424  8D08              ;	27/10/23
1425  8D08              ;
1426  8D08
1427  8D08              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1428  8D08              ;	_ Album_de_fotos correspondiente.
1429  8D08
1430  8D08              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1431  8D08              ;	_ durante el proceso de escritura.
1432  8D08
1433  8D08              Repone_datos_de_borrado
1434  8D08
1435  8D08 F3           	di
1436  8D09
1437  8D09 ED 5B FB 88  	ld de,(Stack_snapshot)
1438  8D0D 21 C1 88     	ld hl,Variables_de_borrado
1439  8D10 01 06 00     	ld bc,6
1440  8D13 ED B0        	ldir
1441  8D15 FB           	ei
1442  8D16
1443  8D16 EB           	ex de,hl
1444  8D17 22 FB 88     	ld (Stack_snapshot),hl
1445  8D1A
1446  8D1A C9           	ret
1447  8D1B
1448  8D1B              ; -----------------------------------------------------------------------------------
1449  8D1B
1450  8D1B              Pinta_Amadeus
1451  8D1B
1452  8D1B 3E 06        	ld a,6
1453  8D1D D3 FE            out ($fe),a										; Amarillo
1454  8D1F
1455  8D1F CD A7 8B        	call Calcula_malotes_Amadeus
1456  8D22 CD E3 95     	call Extrae_foto_Amadeus
1457  8D25 CD 67 8B     	call Limpia_album_Amadeus
1458  8D28
1459  8D28 C9           	ret
1460  8D29
1461  8D29              Pinta_entidades
1462  8D29
1463  8D29 CD 8F 8B     	call Calcula_numero_de_malotes
1464  8D2C CD 5B 95     	call Extrae_foto_entidades
1465  8D2F CD FE 7F     	call Limpia_y_reinicia_Stack_Snapshot
1466  8D32
1467  8D32 C9           	ret
1468  8D33
1469  8D33              ; -----------------------------------------------------------------------------------
1470  8D33              ;
1471  8D33              ;	12/11/23
1472  8D33              ;
1473  8D33              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1474  8D33
1475  8D33              Actualiza_relojes
1476  8D33
1477  8D33 21 17 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1478  8D36 34           	inc (hl)
1479  8D37
1480  8D37 34           	inc (hl)
1481  8D38 35           	dec (hl)
1482  8D39 C0           	ret nz
1483  8D3A
1484  8D3A 21 18 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1485  8D3D 34           	inc (hl)
1486  8D3E C9           	ret
1487  8D3F
1488  8D3F              ; ---------------------------------------------------------------
1489  8D3F              ;
1490  8D3F              ;	27/9/23
1491  8D3F
1492  8D3F              Guarda_parametros_DRAW
1493  8D3F
1494  8D3F 21 A7 88     	ld hl,Filas
1495  8D42 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1496  8D45 01 3D 00     	ld bc,61
1497  8D48 ED B0        	ldir
1498  8D4A C9           	ret
1499  8D4B
1500  8D4B              Recupera_parametros_DRAW
1501  8D4B
1502  8D4B 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1503  8D4E 11 A7 88     	ld de,Filas
1504  8D51 01 3D 00     	ld bc,61
1505  8D54 ED B0        	ldir
1506  8D56 C9           	ret
1507  8D57
1508  8D57              ; ---------------------------------------------------------------
1509  8D57
1510  8D57              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D57              ; ******************************************************************************************************************************************************************************************
   2+ 8D57              ;
   3+ 8D57              ;   21/07/23
   4+ 8D57              ;
   5+ 8D57              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D57              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D57              ;
   8+ 8D57              ;
   9+ 8D57              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D57              ;
  11+ 8D57              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D57              ;               _ hacen las entidades hacia abajo.
  13+ 8D57              ;
  14+ 8D57              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D57              ;
  16+ 8D57              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D57              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D57              ;
  19+ 8D57              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D57              ;           _ la bala.
  21+ 8D57              ;
  22+ 8D57              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D57              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D57              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D57              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D57              ;           _ en el momento de generarse la bala)).
  27+ 8D57
  28+ 8D57              Genera_disparo
  29+ 8D57
  30+ 8D57              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D57              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D57              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D57              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D57              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D57              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D57              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D57
  38+ 8D57              ; Exclusiones:
  39+ 8D57
  40+ 8D57 3A BF 88         ld a,(Vel_down)
  41+ 8D5A 47               ld b,a
  42+ 8D5B 3A 16 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D5E B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D5F D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D60 3A DE 88         ld a,(Columnas)
  46+ 8D63 47               ld b,a
  47+ 8D64 3A A8 88         ld a,(Columns)
  48+ 8D67 B8               cp b
  49+ 8D68 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D69
  51+ 8D69              ; ----- ----- -----
  52+ 8D69
  53+ 8D69 3A D1 88         ld a,(Ctrl_0)
  54+ 8D6C CB 77            bit 6,a
  55+ 8D6E 20 06            jr nz,14F
  56+ 8D70
  57+ 8D70 3A AE 88         ld a,(Coordenada_y)
  58+ 8D73 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D75 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D76
  61+ 8D76 21 00 80     14 ld hl,Indice_disparo
  62+ 8D79 3A AF 88         ld a,(CTRL_DESPLZ)
  63+ 8D7C 4F               ld c,a
  64+ 8D7D 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D7F              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D7F              ;                                            ""        ""       "f9", B="1"
  67+ 8D7F              ;                                            ""        ""       "fb", B="2"
  68+ 8D7F              ;                                            ""        ""       "fb", B="3"
  69+ 8D7F A7               and a
  70+ 8D80 28 10            jr z,1F
  71+ 8D82 E6 01            and 1
  72+ 8D84 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D85
  74+ 8D85 79               ld a,c
  75+ 8D86 16 F9            ld d,$f9
  76+ 8D88 23           2 inc hl
  77+ 8D89 23               inc hl
  78+ 8D8A 04               inc b
  79+ 8D8B BA               cp d
  80+ 8D8C 28 04            jr z,1F
  81+ 8D8E 14               inc d
  82+ 8D8F 14               inc d
  83+ 8D90 18 F6            jr 2B
  84+ 8D92
  85+ 8D92 CD DB 8B     1 call Extrae_address
  86+ 8D95 E5               push hl
  87+ 8D96 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D98 DD 21 29 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D9C
  90+ 8D9C              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D9C              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D9C
  93+ 8D9C 3A D1 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D9F CB 77            bit 6,a
  95+ 8DA1 20 04            jr nz,19F
  96+ 8DA3
  97+ 8DA3 AF               xor a
  98+ 8DA4 32 1F 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8DA7
 100+ 8DA7 3A BB 88     19 ld a,(Cuad_objeto)
 101+ 8DAA FE 02            cp 2
 102+ 8DAC 38 66            jr c,3F
 103+ 8DAE 28 64            jr z,3F
 104+ 8DB0
 105+ 8DB0              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8DB0
 107+ 8DB0 E6 01            and 1
 108+ 8DB2 28 30            jr z,4F
 109+ 8DB4
 110+ 8DB4              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8DB4              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8DB4              ;
 113+ 8DB4              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8DB4              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8DB4              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8DB4
 117+ 8DB4 2A A9 88     	ld hl,(Posicion_actual)
 118+ 8DB7
 119+ 8DB7              ;   Amadeus o entidad ???.
 120+ 8DB7
 121+ 8DB7 3A D1 88         ld a,(Ctrl_0)
 122+ 8DBA CB 77            bit 6,a
 123+ 8DBC 28 0A            jr z,8F
 124+ 8DBE
 125+ 8DBE              ; 	Dispara Amadeus.
 126+ 8DBE
 127+ 8DBE 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8DC0 CD 4C 95         call PreviousScan
 129+ 8DC3 CD 4C 95         call PreviousScan
 130+ 8DC6
 131+ 8DC6              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8DC6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8DC6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8DC6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8DC6
 136+ 8DC6 18 11            jr 10F
 137+ 8DC8
 138+ 8DC8              ; 	Dispara Entidad.
 139+ 8DC8
 140+ 8DC8 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8DCB              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8DCB
 143+ 8DCB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8DCB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8DCB
 146+ 8DCB C5               push bc
 147+ 8DCC 06 10            ld b,16
 148+ 8DCE CD 3D 95     9 call NextScan
 149+ 8DD1 10 FB            djnz 9B
 150+ 8DD3 C1               pop bc
 151+ 8DD4 CD 3E 8E         call Ajusta_disparo_parte_izquierda
 152+ 8DD7 18 06            jr 17F
 153+ 8DD9
 154+ 8DD9              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8DD9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8DD9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8DD9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8DD9
 159+ 8DD9 CD 3E 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8DDC CD B3 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8DDF              ;                                                      ; _al generar el disparo.
 162+ 8DDF
 163+ 8DDF              ; 	LLegados a este punto tendremos:
 164+ 8DDF              ;
 165+ 8DDF              ;       Puntero_objeto_disparo en IY.
 166+ 8DDF              ;       Rutinas_de_impresion en IX.
 167+ 8DDF              ;       Puntero_de_impresion en HL.
 168+ 8DDF              ;       Impacto/Dirección en BC.
 169+ 8DDF
 170+ 8DDF CD 46 8E     17 call Almacena_disparo
 171+ 8DE2 18 52            jr 6F                                             ; RET.
 172+ 8DE4
 173+ 8DE4              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8DE4              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8DE4              ;
 176+ 8DE4              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8DE4              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8DE4              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8DE4
 180+ 8DE4 2A A9 88     4 ld hl,(Posicion_actual)
 181+ 8DE7
 182+ 8DE7              ;   Amadeus o entidad ???.
 183+ 8DE7
 184+ 8DE7 3A D1 88         ld a,(Ctrl_0)
 185+ 8DEA CB 77            bit 6,a
 186+ 8DEC 28 0A            jr z,11F
 187+ 8DEE
 188+ 8DEE              ; 	Dispara Amadeus.
 189+ 8DEE
 190+ 8DEE 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DF0 CD 4C 95         call PreviousScan
 192+ 8DF3 CD 4C 95         call PreviousScan
 193+ 8DF6
 194+ 8DF6              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DF6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DF6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DF6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DF6
 199+ 8DF6 18 11            jr 13F
 200+ 8DF8
 201+ 8DF8              ; 	Dispara Entidad.
 202+ 8DF8
 203+ 8DF8 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DFB              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DFB
 206+ 8DFB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DFB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DFB
 209+ 8DFB C5               push bc
 210+ 8DFC 06 10            ld b,16
 211+ 8DFE CD 3D 95     12 call NextScan
 212+ 8E01 10 FB            djnz 12B
 213+ 8E03 C1               pop bc
 214+ 8E04
 215+ 8E04 CD 37 8E         call Ajusta_disparo_parte_derecha
 216+ 8E07 18 06            jr 18F
 217+ 8E09
 218+ 8E09              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E09              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E09              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E09              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E09
 223+ 8E09 CD 37 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E0C CD B3 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E0F              ;                                                       ; _al generar el disparo.
 226+ 8E0F
 227+ 8E0F              ; LLegados a este punto tendremos:
 228+ 8E0F              ;
 229+ 8E0F              ;       Puntero_objeto_disparo en IY.
 230+ 8E0F              ;       Rutinas_de_impresion en IX.
 231+ 8E0F              ;       Puntero_de_impresion en HL.
 232+ 8E0F              ;       Impacto/Dirección en BC.
 233+ 8E0F
 234+ 8E0F CD 46 8E     18 call Almacena_disparo
 235+ 8E12 18 22            jr 6F                                               ; RET.
 236+ 8E14
 237+ 8E14              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E14
 239+ 8E14 28 11        3 jr z,5F
 240+ 8E16
 241+ 8E16              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E16              ;
 243+ 8E16              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E16              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E16              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E16              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E16
 248+ 8E16              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E16              ;	   ""        ""       "f9", B="1"
 250+ 8E16              ;	   ""        ""       "fb", B="2"
 251+ 8E16              ; 	   ""        ""       "fb", B="3"
 252+ 8E16
 253+ 8E16 2A A9 88     	ld hl,(Posicion_actual)
 254+ 8E19 CD 3D 95     	call NextScan
 255+ 8E1C
 256+ 8E1C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E1C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E1C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E1C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E1C
 261+ 8E1C CD 3E 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E1F
 263+ 8E1F              ; 	No se produce impacto. B="$80"
 264+ 8E1F              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E1F
 266+ 8E1F 01 80 80         ld bc,$8080
 267+ 8E22
 268+ 8E22              ; 	LLegados a este punto tendremos:
 269+ 8E22              ;
 270+ 8E22              ;       Puntero_objeto_disparo en IY.
 271+ 8E22              ;       Rutinas_de_impresion en IX.
 272+ 8E22              ;       Puntero_de_impresion en HL.
 273+ 8E22              ;       Impacto/Dirección en BC.
 274+ 8E22
 275+ 8E22 CD 46 8E         call Almacena_disparo
 276+ 8E25 18 0F            jr 6F                                           ; RET.
 277+ 8E27
 278+ 8E27              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E27              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E27              ;
 281+ 8E27              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E27              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E27              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E27              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E27
 286+ 8E27 2A A9 88     5 ld hl,(Posicion_actual)
 287+ 8E2A CD 3D 95     	call NextScan
 288+ 8E2D
 289+ 8E2D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E2D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E2D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E2D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E2D
 294+ 8E2D CD 37 8E         call Ajusta_disparo_parte_derecha
 295+ 8E30
 296+ 8E30              ; 	No se produce impacto. B="$80"
 297+ 8E30              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E30
 299+ 8E30 01 80 80     15 ld bc,$8080
 300+ 8E33
 301+ 8E33              ; 	LLegados a este punto tendremos:
 302+ 8E33              ;
 303+ 8E33              ;       Puntero_objeto_disparo en IY.
 304+ 8E33              ;       Rutinas_de_impresion en IX.
 305+ 8E33              ;       Puntero_de_impresion en HL.
 306+ 8E33              ;       Impacto/Dirección en BC.
 307+ 8E33
 308+ 8E33 CD 46 8E         call Almacena_disparo
 309+ 8E36
 310+ 8E36 C9           6 ret
 311+ 8E37
 312+ 8E37              ; ----------------------------------------------------------------
 313+ 8E37              ;
 314+ 8E37              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E37              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E37              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E37
 318+ 8E37 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E38 FE 02            cp 2
 320+ 8E3A 38 01            jr c,1F
 321+ 8E3C 23               inc hl
 322+ 8E3D C9           1 ret
 323+ 8E3E
 324+ 8E3E 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E3F FE 01        	cp 1
 326+ 8E41 20 01        	jr nz,1F
 327+ 8E43 2B           	dec hl
 328+ 8E44 2B           1 dec hl
 329+ 8E45 C9               ret
 330+ 8E46
 331+ 8E46              ; ----------------------------------------------------------------
 332+ 8E46              ;
 333+ 8E46              ;   25/02/23
 334+ 8E46              ;
 335+ 8E46              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E46              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E46              ;
 338+ 8E46              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E46              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E46
 341+ 8E46              Almacena_disparo
 342+ 8E46
 343+ 8E46 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E47 F1               pop af
 345+ 8E48 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E49
 347+ 8E49 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E4A E6 01            and 1
 349+ 8E4C 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E4E              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E4E              ; 	Dispara AMADEUS.
 352+ 8E4E
 353+ 8E4E              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E4E              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E4E              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E4E              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E4E
 358+ 8E4E C5               push bc
 359+ 8E4F 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E52 2A 07 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E55 A7               and a
 362+ 8E56 ED 42            sbc hl,bc
 363+ 8E58 CC 60 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E5B C1               pop bc
 365+ 8E5C 28 54            jr z,4F
 366+ 8E5E
 367+ 8E5E 2A 07 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E61 23               inc hl
 369+ 8E62 23               inc hl
 370+ 8E63 22 07 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E66              ;                                                   ; _ Disparo_(+1).
 372+ 8E66 18 18            jr 2F
 373+ 8E68
 374+ 8E68              ; Dispara una entidad.
 375+ 8E68
 376+ 8E68 C5           1 push bc
 377+ 8E69 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E6C 2A 05 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E6F A7               and a
 380+ 8E70 ED 42            sbc hl,bc
 381+ 8E72 CC 59 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E75 C1               pop bc
 383+ 8E76 28 3A            jr z,4F
 384+ 8E78
 385+ 8E78 2A 05 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E7B 23               inc hl
 387+ 8E7C 23               inc hl
 388+ 8E7D 22 05 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E80              ;                                                   ; _ Disparo_(+1).
 390+ 8E80 CD DB 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E83              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E83              ;
 393+ 8E83              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E83              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E83              ;                                                     Puntero_de_impresion en HL.
 396+ 8E83              ;                                                     Impacto/Dirección en BC.
 397+ 8E83
 398+ 8E83 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E84 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E85 23               inc hl                                          ; _ al siguiente.
 401+ 8E86 A7               and a
 402+ 8E87 20 C0            jr nz,3B
 403+ 8E89
 404+ 8E89 08               ex af,af
 405+ 8E8A ED 73 F5 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E8E F9               ld sp,hl
 407+ 8E8F
 408+ 8E8F DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E91 F5               push af                                         ; Puntero de impresión.
 410+ 8E92 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E94 C5               push bc                                         ; Control.
 412+ 8E95
 413+ 8E95 ED 7B F5 88      ld sp,(Stack)
 414+ 8E99
 415+ 8E99              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E99
 417+ 8E99 21 E4 88     	ld hl,Ctrl_1
 418+ 8E9C CB C6        	set 0,(hl)
 419+ 8E9E
 420+ 8E9E DD E5        	push ix
 421+ 8EA0 E1               pop hl
 422+ 8EA1 F5               push af
 423+ 8EA2 DD E1            pop ix
 424+ 8EA4
 425+ 8EA4 CD A0 7F     	call Guarda_foto_registros
 426+ 8EA7
 427+ 8EA7 21 E4 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8EAA CB 86        	res 0,(hl)
 429+ 8EAC
 430+ 8EAC              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8EAC              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8EAC
 433+ 8EAC CD 60 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8EAF CD 59 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8EB2
 436+ 8EB2 C9           4 ret
 437+ 8EB3
 438+ 8EB3              ; ----------------------------------------------------------------
 439+ 8EB3              ;
 440+ 8EB3              ;   4/3/23
 441+ 8EB3              ;
 442+ 8EB3              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8EB3              ;   _ al generarse el disparo.
 444+ 8EB3              ;
 445+ 8EB3              ;       "$80" ..... No se produce colisión.
 446+ 8EB3              ;       "$81" ..... Se produce colisión.
 447+ 8EB3              ;
 448+ 8EB3              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8EB3              ;         _ que forman el disparo.
 450+ 8EB3
 451+ 8EB3
 452+ 8EB3              Comprueba_Colision
 453+ 8EB3
 454+ 8EB3              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8EB3
 456+ 8EB3 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8EB5 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8EB6
 459+ 8EB6 CD EC 8E         call Modifica_H_Velocidad_disparo
 460+ 8EB9
 461+ 8EB9 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8EBA FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8EBC 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8EBE
 465+ 8EBE 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8EC0 CD DC 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8EC3
 468+ 8EC3 7B               ld a,e
 469+ 8EC4 E6 01            and 1
 470+ 8EC6 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8EC8              ;                                                  ; _ para activar IMPACTO.
 472+ 8EC8 E1               pop hl
 473+ 8EC9 E5               push hl
 474+ 8ECA CD 3D 95         call NextScan
 475+ 8ECD
 476+ 8ECD 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8ECE FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8ED0 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8ED2              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8ED2 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8ED4 CD DC 8E         call Bucle_2
 482+ 8ED7
 483+ 8ED7 43           1 ld b,e
 484+ 8ED8 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8ED9 FD E1            pop iy
 486+ 8EDB C9               ret
 487+ 8EDC
 488+ 8EDC              ; ---------- ----------
 489+ 8EDC
 490+ 8EDC 06 02        Bucle_2 ld b,2
 491+ 8EDE FD 7E 00     2 ld a,(iy)
 492+ 8EE1 A6               and (hl)
 493+ 8EE2 28 02            jr z,1F
 494+ 8EE4 1E 81            ld e,$81
 495+ 8EE6 23           1 inc hl
 496+ 8EE7 FD 23            inc iy
 497+ 8EE9 10 F3            djnz 2B
 498+ 8EEB C9               ret
 499+ 8EEC
 500+ 8EEC              ; ---------- ----------
 501+ 8EEC              ;
 502+ 8EEC              ;   21/7/23
 503+ 8EEC
 504+ 8EEC              Modifica_H_Velocidad_disparo
 505+ 8EEC
 506+ 8EEC 3A 16 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8EEF FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EF1 D0               ret nc                                         ; _ incrementamos H.
 509+ 8EF2 24               inc h
 510+ 8EF3
 511+ 8EF3 C9               ret
 512+ 8EF4
 513+ 8EF4              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EF4              ;
 515+ 8EF4              ;   11/04/23
 516+ 8EF4              ;
 517+ 8EF4              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EF4              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EF4              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EF4              ;
 521+ 8EF4              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8EF4
 523+ 8EF4              Compara_coordenadas_X
 524+ 8EF4
 525+ 8EF4              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EF4              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EF4
 528+ 8EF4              ; Preparamos registros:
 529+ 8EF4
 530+ 8EF4 21 AD 88         ld hl,Filas+6
 531+ 8EF7 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8EF8 23               inc hl
 533+ 8EF9 23               inc hl
 534+ 8EFA 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8EFB 43               ld b,e
 536+ 8EFC
 537+ 8EFC 21 BB 88         ld hl,Filas+20
 538+ 8EFF 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8F00 21 11 89         ld hl,Coordenadas_X_Entidad
 540+ 8F03 CD 1F 91         call Guarda_coordenadas_X
 541+ 8F06
 542+ 8F06              ; Preparamos registros:
 543+ 8F06
 544+ 8F06 21 84 85         ld hl,Amadeus_db+6
 545+ 8F09 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8F0A 23               inc hl
 547+ 8F0B 23               inc hl
 548+ 8F0C 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8F0D 7B               ld a,e
 550+ 8F0E 08               ex af,af'
 551+ 8F0F 21 92 85         ld hl,Amadeus_db+20
 552+ 8F12 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8F13 21 0E 89         ld hl,Coordenadas_X_Amadeus
 554+ 8F16 CD 1F 91         call Guarda_coordenadas_X
 555+ 8F19
 556+ 8F19              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8F19              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8F19
 559+ 8F19 04               inc b
 560+ 8F1A 05               dec b
 561+ 8F1B 28 04            jr z,1F
 562+ 8F1D 06 03            ld b,3
 563+ 8F1F 18 02            jr 2F
 564+ 8F21 06 02        1 ld b,2
 565+ 8F23 08           2 ex af,af'
 566+ 8F24 3C               inc a
 567+ 8F25 3D               dec a
 568+ 8F26 28 04            jr z,5F
 569+ 8F28 0E 03            ld c,3
 570+ 8F2A 18 02            jr 6F
 571+ 8F2C 0E 02        5 ld c,2
 572+ 8F2E 79           6 ld a,c
 573+ 8F2F 08               ex af,af'
 574+ 8F30 11 11 89         ld de,Coordenadas_X_Entidad
 575+ 8F33 1A           4 ld a,(de)
 576+ 8F34 21 0E 89         ld hl,Coordenadas_X_Amadeus
 577+ 8F37 BE           3 cp (hl)
 578+ 8F38 28 0E            jr z,7F
 579+ 8F3A 23               inc hl
 580+ 8F3B 0D               dec c
 581+ 8F3C 20 F9            jr nz,3B
 582+ 8F3E 13               inc de
 583+ 8F3F 08               ex af,af'
 584+ 8F40 4F               ld c,a
 585+ 8F41 08               ex af,af'
 586+ 8F42 10 EF            djnz 4B
 587+ 8F44
 588+ 8F44              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 8F44
 590+ 8F44 CD 5B 91     8 call Limpia_Coordenadas_X
 591+ 8F47 C9               ret
 592+ 8F48
 593+ 8F48 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 8F4A 32 C0 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 8F4D 21 09 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 8F50 CB D6            set 2,(hl)
 597+ 8F52 18 F0            jr 8B
 598+ 8F54
 599+ 8F54              ; -----------------------------------------------------------------------
 600+ 8F54              ;
 601+ 8F54              ;   17/04/23
 602+ 8F54              ;
 603+ 8F54
 604+ 8F54              Detecta_colision_nave_entidad
 605+ 8F54
 606+ 8F54              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 8F54
 608+ 8F54 2A A9 88         ld hl,(Posicion_actual)
 609+ 8F57 CD 98 94         call Calcula_puntero_de_impresion
 610+ 8F5A
 611+ 8F5A              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 8F5A              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 8F5A
 614+ 8F5A DD E5            push ix
 615+ 8F5C E1               pop hl
 616+ 8F5D E5               push hl
 617+ 8F5E
 618+ 8F5E              ; ----- ----- -----
 619+ 8F5E 1E 00            ld e,0                                         ; Indica impacto.
 620+ 8F60 06 0A            ld b,10
 621+ 8F62 CD 92 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 8F65 7B               ld a,e
 623+ 8F66 FE 05            cp 5
 624+ 8F68 38 0E            jr c,3F
 625+ 8F6A
 626+ 8F6A              ; LLegados a este punto:
 627+ 8F6A              ;
 628+ 8F6A              ;   HAY COLISIÓN !!!!!.
 629+ 8F6A              ;
 630+ 8F6A              ;   .db (Impacto) de Amadeus a "1".
 631+ 8F6A              ;   SET el bit3 de (Impacto2).
 632+ 8F6A              ;
 633+ 8F6A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 8F6A
 635+ 8F6A 21 97 85         ld hl,Amadeus_db+25
 636+ 8F6D 36 01            ld (hl),1
 637+ 8F6F 21 09 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 8F72 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 8F74 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 8F76 18 18            jr 1F
 641+ 8F78
 642+ 8F78              ; -----
 643+ 8F78
 644+ 8F78 E1           3 pop hl
 645+ 8F79 CD 3D 95         call NextScan
 646+ 8F7C E5               push hl
 647+ 8F7D 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 8F7E FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 8F80 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 8F82 30 0C            jr nc,1F
 651+ 8F84              ;                                                  ; _ 2º scanline si esto es así.
 652+ 8F84 10 DC            djnz 2B
 653+ 8F86
 654+ 8F86              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 8F86
 656+ 8F86              ; LLegados a este punto:
 657+ 8F86              ;
 658+ 8F86              ;   NO HAY COLISIÓN !!!!!.
 659+ 8F86              ;
 660+ 8F86              ;   .db (Impacto) de Amadeus a "0".
 661+ 8F86              ;   RES el bit2 de (Impacto2).
 662+ 8F86              ;
 663+ 8F86              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F86              ;   Lo colocamos a "0".
 665+ 8F86
 666+ 8F86 21 09 89         ld hl,Impacto2
 667+ 8F89 CB 96            res 2,(hl)
 668+ 8F8B 2A 0A 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 8F8E 36 00            ld (hl),0
 670+ 8F90
 671+ 8F90 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 8F91 C9               ret
 673+ 8F92
 674+ 8F92               ; ---------- ----------
 675+ 8F92
 676+ 8F92 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 8F93 3A A8 88         ld a,(Columns)
 678+ 8F96 47               ld b,a
 679+ 8F97 FD 7E 00     2 ld a,(iy)
 680+ 8F9A BE               cp (hl)
 681+ 8F9B 28 01            jr z,1F
 682+ 8F9D
 683+ 8F9D 1C               inc e
 684+ 8F9E
 685+ 8F9E 23           1 inc hl
 686+ 8F9F FD 23            inc iy
 687+ 8FA1 10 F4            djnz 2B
 688+ 8FA3 C1               pop bc
 689+ 8FA4 C9               ret
 690+ 8FA5
 691+ 8FA5              ; -------------------------------------------------------------------------------------------------------------
 692+ 8FA5              ;
 693+ 8FA5              ;   13/03/23
 694+ 8FA5              ;
 695+ 8FA5              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 8FA5              ;
 697+ 8FA5              ;   DESTRUYE: HL,BC,DE y A.
 698+ 8FA5
 699+ 8FA5 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 8FA8 7E               ld a,(hl)
 701+ 8FA9 A7               and a
 702+ 8FAA C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 8FAB
 704+ 8FAB 44               ld b,h
 705+ 8FAC 4D               ld c,l
 706+ 8FAD 2A FD 88         ld hl,(Stack_snapshot_disparos)
 707+ 8FB0 E5               push hl
 708+ 8FB1 A7               and a
 709+ 8FB2 ED 42            sbc hl,bc
 710+ 8FB4 E5               push hl
 711+ 8FB5 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 8FB6
 713+ 8FB6 E1               pop hl
 714+ 8FB7 54               ld d,h
 715+ 8FB8 5D               ld e,l
 716+ 8FB9 1B               dec de
 717+ 8FBA ED B8            lddr                                                ; Limpiamos.
 718+ 8FBC
 719+ 8FBC 21 56 70         ld hl,Album_de_fotos_disparos
 720+ 8FBF 22 FD 88         ld (Stack_snapshot_disparos),hl
 721+ 8FC2
 722+ 8FC2 C9               ret
 723+ 8FC3
 724+ 8FC3              ; -------------------------------------------------------------------------------------------------------------
 725+ 8FC3              ;
 726+ 8FC3              ;   18/07/23
 727+ 8FC3              ;
 728+ 8FC3
 729+ 8FC3              Motor_de_disparos
 730+ 8FC3
 731+ 8FC3              ; Gestiona DISPAROS DE AMADEUS.
 732+ 8FC3
 733+ 8FC3 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 8FC6 2A 07 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 8FC9
 736+ 8FC9 CD DB 8B     2 call Extrae_address
 737+ 8FCC 7E               ld a,(hl)
 738+ 8FCD A7               and a
 739+ 8FCE 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 8FD0
 741+ 8FD0              ; ----- ----- ----- ----- ----- -----
 742+ 8FD0
 743+ 8FD0 C5               push bc
 744+ 8FD1 CD 95 90         call foto_disparo_a_borrar
 745+ 8FD4
 746+ 8FD4              ; Existe colisión con este disparo???
 747+ 8FD4
 748+ 8FD4 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 8FD5 7E               ld a,(hl)
 750+ 8FD6 2B               dec hl
 751+ 8FD7 E6 01            and 1
 752+ 8FD9 28 1D            jr z,9F
 753+ 8FDB
 754+ 8FDB              ;   En este punto:
 755+ 8FDB              ;
 756+ 8FDB              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 8FDB              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 8FDB              ;   _con la entidad).
 759+ 8FDB              ;
 760+ 8FDB              ;   Disparo_2A defw 0                                ; Control.
 761+ 8FDB              ;    defw 0                                          ; Puntero objeto.
 762+ 8FDB              ;    defw 0                                          ; Puntero de impresión.
 763+ 8FDB              ;    defw 0                                          ; Rutina de impresión.
 764+ 8FDB
 765+ 8FDB E5               push hl
 766+ 8FDC
 767+ 8FDC 06 04            ld b,4
 768+ 8FDE 23           19 inc hl
 769+ 8FDF 10 FD            djnz 19B
 770+ 8FE1
 771+ 8FE1 CD DB 8B         call Extrae_address
 772+ 8FE4 CD 10 9C         call Genera_coordenadas_disparo
 773+ 8FE7
 774+ 8FE7              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 8FE7
 776+ 8FE7 21 0C 89         ld hl,Coordenadas_disparo_certero
 777+ 8FEA 72               ld (hl),d
 778+ 8FEB 23               inc hl
 779+ 8FEC 73               ld (hl),e
 780+ 8FED
 781+ 8FED              ; Elimino el disparo de la base de datos.
 782+ 8FED
 783+ 8FED E1               pop hl
 784+ 8FEE CD 14 91         call Elimina_disparo_de_base_de_datos
 785+ 8FF1 21 09 89         ld hl,Impacto2
 786+ 8FF4 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 8FF6
 788+ 8FF6 18 06            jr 11F
 789+ 8FF8
 790+ 8FF8 CD BE 90     9 call Mueve_disparo
 791+ 8FFB CD 95 90         call foto_disparo_a_borrar
 792+ 8FFE
 793+ 8FFE C1           11 pop bc
 794+ 8FFF 18 04            jr 7F
 795+ 9001
 796+ 9001              ; ----- ----- ----- ----- ----- -----
 797+ 9001
 798+ 9001 ED 42        1 sbc hl,bc
 799+ 9003 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9005
 801+ 9005 2A 07 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9008 23               inc hl
 803+ 9009 23               inc hl
 804+ 900A 22 07 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 900D 18 BA            jr 2B
 806+ 900F
 807+ 900F CD 60 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9012              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9012
 810+ 9012              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9012
 812+ 9012 01 6A 85         ld bc,Disparo_11
 813+ 9015 2A 05 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9018
 815+ 9018 CD DB 8B     5 call Extrae_address
 816+ 901B 7E               ld a,(hl)
 817+ 901C A7               and a
 818+ 901D 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 901F
 820+ 901F              ; ----- ----- ----- ----- ----- -----
 821+ 901F
 822+ 901F C5               push bc
 823+ 9020 CD 95 90         call foto_disparo_a_borrar
 824+ 9023
 825+ 9023              ; Existe colisión con este disparo???
 826+ 9023
 827+ 9023 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9024 7E               ld a,(hl)
 829+ 9025 2B               dec hl
 830+ 9026 E6 01            and 1
 831+ 9028 28 4D            jr z,10F
 832+ 902A
 833+ 902A              ;! La colisión se produce con Amadeus???
 834+ 902A              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 902A
 836+ 902A E5               push hl
 837+ 902B
 838+ 902B 06 04            ld b,4
 839+ 902D 23           16 inc hl
 840+ 902E 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9030
 842+ 9030 CD DB 8B         call Extrae_address
 843+ 9033 CD 10 9C         call Genera_coordenadas_disparo
 844+ 9036
 845+ 9036 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9037 FE 16            cp $16
 847+ 9039 38 2A            jr c,15F
 848+ 903B
 849+ 903B
 850+ 903B              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 903B
 852+ 903B D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 903C
 854+ 903C              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 903C
 856+ 903C
 857+ 903C 2A 14 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 903F
 859+ 903F              ; Coordenada X de Amadeus en D.
 860+ 903F
 861+ 903F 7D               ld a,l
 862+ 9040 E6 1F            and $1F
 863+ 9042 57               ld d,a
 864+ 9043
 865+ 9043 21 86 85         ld hl,Amadeus_db+8
 866+ 9046 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9047
 868+ 9047 21 0E 89         ld hl,Coordenadas_X_Amadeus
 869+ 904A CD 1F 91         call Guarda_coordenadas_X
 870+ 904D
 871+ 904D D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 904E
 873+ 904E              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 904E
 875+ 904E 06 02            ld b,2
 876+ 9050 C5           20 push bc
 877+ 9051
 878+ 9051 06 03            ld b,3
 879+ 9053 21 0E 89         ld hl,Coordenadas_X_Amadeus
 880+ 9056 7E           18 ld a,(hl)
 881+ 9057 BA               cp d
 882+ 9058 20 04            jr nz,17F
 883+ 905A
 884+ 905A              ;! Colisión Amadeus !!!!!!!!!!
 885+ 905A
 886+ 905A C1               pop bc
 887+ 905B E1               pop hl
 888+ 905C 18 0D            jr 14F
 889+ 905E
 890+ 905E 23           17 inc hl
 891+ 905F 10 F5            djnz 18B
 892+ 9061
 893+ 9061 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9062
 895+ 9062 C1               pop bc
 896+ 9063 10 EB            djnz 20B
 897+ 9065
 898+ 9065
 899+ 9065              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9065              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9065
 902+ 9065 E1           15 pop hl
 903+ 9066 23               inc hl
 904+ 9067 35               dec (hl)
 905+ 9068 2B               dec hl
 906+ 9069 18 0C            jr 10F
 907+ 906B
 908+ 906B              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 906B              ; _ almacén de coordenadas_X de Amadeus.
 910+ 906B
 911+ 906B E5           14 push hl
 912+ 906C CD 14 91         call Elimina_disparo_de_base_de_datos
 913+ 906F 21 09 89         ld hl,Impacto2
 914+ 9072 CB CE            set 1,(hl)
 915+ 9074 E1               pop hl
 916+ 9075 18 06            jr 12F
 917+ 9077
 918+ 9077              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9077
 920+ 9077 CD BE 90     10 call Mueve_disparo
 921+ 907A CD 95 90         call foto_disparo_a_borrar
 922+ 907D C1           12 pop bc
 923+ 907E
 924+ 907E 18 04            jr 8F
 925+ 9080
 926+ 9080              ; ----- ----- ----- ----- ----- -----
 927+ 9080
 928+ 9080 ED 42        4 sbc hl,bc
 929+ 9082 28 0A            jr z,6F
 930+ 9084
 931+ 9084 2A 05 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9087 23               inc hl
 933+ 9088 23               inc hl
 934+ 9089 22 05 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 908C 18 8A            jr 5B
 936+ 908E
 937+ 908E CD 59 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9091 CD 5B 91         call Limpia_Coordenadas_X
 939+ 9094 C9               ret
 940+ 9095
 941+ 9095              ; ------------------------------------------------------------------
 942+ 9095
 943+ 9095              foto_disparo_a_borrar
 944+ 9095
 945+ 9095 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9096 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9097 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9098
 949+ 9098 E5               push hl
 950+ 9099 23               inc hl
 951+ 909A 23               inc hl
 952+ 909B ED 73 F5 88      ld (Stack),sp
 953+ 909F F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 90A0 FD E1            pop iy
 955+ 90A2 DD E1            pop ix
 956+ 90A4 E1               pop hl
 957+ 90A5 ED 7B F5 88      ld sp,(Stack)
 958+ 90A9 3A E4 88         ld a,(Ctrl_1)
 959+ 90AC CB C7            set 0,a
 960+ 90AE 32 E4 88         ld (Ctrl_1),a
 961+ 90B1 CD A0 7F         call Guarda_foto_registros
 962+ 90B4 3A E4 88         ld a,(Ctrl_1)
 963+ 90B7 CB 87            res 0,a
 964+ 90B9 32 E4 88         ld (Ctrl_1),a
 965+ 90BC E1               pop hl
 966+ 90BD C9               ret
 967+ 90BE
 968+ 90BE              ;---------------------------------------------------
 969+ 90BE              ;
 970+ 90BE              ;   18/07/23
 971+ 90BE              ;
 972+ 90BE
 973+ 90BE              Mueve_disparo
 974+ 90BE
 975+ 90BE              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 90BE              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 90BE              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 90BE
 979+ 90BE E5               push hl
 980+ 90BF
 981+ 90BF 7E               ld a,(hl)
 982+ 90C0
 983+ 90C0 06 04            ld b,4
 984+ 90C2 23           1 inc hl
 985+ 90C3 10 FD            djnz 1B
 986+ 90C5
 987+ 90C5              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 90C5
 989+ 90C5 CD DB 8B         call Extrae_address
 990+ 90C8
 991+ 90C8 E6 01            and 1
 992+ 90CA 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 90CC
 994+ 90CC              ; Disparo hacia arriba, (Amadeus).
 995+ 90CC
 996+ 90CC              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 90CC              ; _ de la dificultad.
 998+ 90CC
 999+ 90CC CD 4C 95         call PreviousScan
1000+ 90CF CD 4C 95         call PreviousScan
1001+ 90D2 CD 4C 95         call PreviousScan
1002+ 90D5 CD 4C 95         call PreviousScan
1003+ 90D8
1004+ 90D8              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 90D8
1006+ 90D8 7C               ld a,h
1007+ 90D9 FE 40            cp $40
1008+ 90DB 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 90DD
1010+ 90DD              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 90DD
1012+ 90DD EB               ex de,hl
1013+ 90DE 06 04            ld b,4
1014+ 90E0 2B           6 dec hl
1015+ 90E1 10 FD            djnz 6B
1016+ 90E3
1017+ 90E3 CD 14 91         call Elimina_disparo_de_base_de_datos
1018+ 90E6 E1               pop hl
1019+ 90E7 18 10            jr 7F
1020+ 90E9
1021+ 90E9              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 90E9              ; HL contiene el puntero de impresión del disparo.
1023+ 90E9              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 90E9
1025+ 90E9 D5           3 push de
1026+ 90EA C5               push bc
1027+ 90EB
1028+ 90EB CD B3 8E         call Comprueba_Colision
1029+ 90EE
1030+ 90EE              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 90EE
1032+ 90EE 78               ld a,b
1033+ 90EF
1034+ 90EF C1               pop bc
1035+ 90F0 D1               pop de
1036+ 90F1
1037+ 90F1 EB               ex de,hl
1038+ 90F2
1039+ 90F2 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 90F3 23               inc hl                                      ; _ movimiento.
1041+ 90F4 72               ld (hl),d
1042+ 90F5
1043+ 90F5 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 90F6
1045+ 90F6 23               inc hl                                      ; _ en curso.
1046+ 90F7 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 90F8 2B               dec hl
1048+ 90F9
1049+ 90F9 C9           7 ret
1050+ 90FA
1051+ 90FA              ; Disparo hacia abajo, (Entidad).
1052+ 90FA
1053+ 90FA 3A 16 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 90FD 47               ld b,a
1055+ 90FE
1056+ 90FE CD 3D 95     4 call NextScan
1057+ 9101 10 FB            djnz 4B
1058+ 9103
1059+ 9103              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9103
1061+ 9103 7C               ld a,h
1062+ 9104 FE 58            cp $58
1063+ 9106 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9108
1065+ 9108 EB               ex de,hl
1066+ 9109 06 04            ld b,4
1067+ 910B 2B           5 dec hl
1068+ 910C 10 FD            djnz 5B
1069+ 910E
1070+ 910E CD 14 91         call Elimina_disparo_de_base_de_datos
1071+ 9111 E1               pop hl
1072+ 9112 18 E5            jr 7B
1073+ 9114
1074+ 9114              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9114
1076+ 9114 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9117 AF               xor a
1078+ 9118 77               ld (hl),a
1079+ 9119 54               ld d,h
1080+ 911A 5D               ld e,l
1081+ 911B 13               inc de
1082+ 911C ED B0            ldir
1083+ 911E C9               ret
1084+ 911F
1085+ 911F              ; -----------------------------------------------------------------
1086+ 911F              ;
1087+ 911F              ;   19/7/23
1088+ 911F              ;
1089+ 911F              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 911F              ;
1091+ 911F              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 911F              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 911F              ;
1094+ 911F              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 911F              ;
1096+ 911F              ;   INPUTS:
1097+ 911F              ;
1098+ 911F              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 911F              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 911F
1101+ 911F              ;   MODIFICA: A, HL, BC y DE.
1102+ 911F
1103+ 911F              Guarda_coordenadas_X
1104+ 911F
1105+ 911F 7B               ld a,e
1106+ 9120 A7               and a
1107+ 9121 20 04            jr nz,1F
1108+ 9123
1109+ 9123 06 02            ld b,2
1110+ 9125 18 02            jr 2F
1111+ 9127
1112+ 9127 06 03        1 ld b,3
1113+ 9129 72           2 ld (hl),d
1114+ 912A 23               inc hl
1115+ 912B 14               inc d
1116+ 912C 10 FB            djnz 2B
1117+ 912E
1118+ 912E C9               ret
1119+ 912F
1120+ 912F              ; -----------------------------------------------------------------
1121+ 912F              ;
1122+ 912F              ;   12/04/23
1123+ 912F              ;
1124+ 912F
1125+ 912F 3A 09 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9132 A7               and a
1127+ 9133 C8               ret z
1128+ 9134
1129+ 9134 FE 04            cp 4
1130+ 9136 20 09            jr nz,1F
1131+ 9138
1132+ 9138
1133+ 9138              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9138
1135+ 9138 CD 54 8F         call Detecta_colision_nave_entidad
1136+ 913B
1137+ 913B 21 09 89         ld hl,Impacto2
1138+ 913E CB 5E            bit 3,(hl)
1139+ 9140 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9141
1141+ 9141              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9141              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9141
1144+ 9141 21 09 89     1 ld hl,Impacto2
1145+ 9144 CB 4E            bit 1,(hl)
1146+ 9146 28 07            jr z,2F
1147+ 9148
1148+ 9148 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 914B 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 914D 18 0B            jr 3F
1151+ 914F
1152+ 914F 21 09 89     2 ld hl,Impacto2
1153+ 9152 CB 46            bit 0,(hl)
1154+ 9154 C8               ret z
1155+ 9155
1156+ 9155              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9155
1158+ 9155 21 E4 88         ld hl,Ctrl_1
1159+ 9158 CB D6            set 2,(hl)
1160+ 915A
1161+ 915A C9           3 ret
1162+ 915B
1163+ 915B              ; -----------------------------------------------------------------
1164+ 915B              ;
1165+ 915B              ;   19/7/23
1166+ 915B              ;
1167+ 915B              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 915B
1169+ 915B AF           Limpia_Coordenadas_X xor a
1170+ 915C 06 06            ld b,6
1171+ 915E 21 0E 89         ld hl,Coordenadas_X_Amadeus
1172+ 9161 77           1 ld (hl),a
1173+ 9162 23               inc hl
1174+ 9163 10 FC            djnz 1B
1175+ 9165 C9               ret
1176+ 9166
1177+ 9166              ; -----------------------------------------------------------------
1178+ 9166              ;
1179+ 9166              ;   25/04/23
1180+ 9166              ;
1181+ 9166
1182+ 9166              Determina_resultado_comparativa
1183+ 9166
1184+ 9166              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9166              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9166              ;
1187+ 9166              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9166              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9166              ;
1190+ 9166              ;   SBC HL,DE
1191+ 9166
1192+ 9166              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9166              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9166
1195+ 9166              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9166              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9166
1198+ 9166
1199+ 9166 3A BB 88         ld a,(Cuad_objeto)
1200+ 9169 FE 02            cp 2
1201+ 916B 28 26            jr z,2F
1202+ 916D 38 24            jr c,2F
1203+ 916F
1204+ 916F              ; Cuadrantes 3º y 4º
1205+ 916F
1206+ 916F E6 01            and 1
1207+ 9171 28 10            jr z,4F
1208+ 9173
1209+ 9173              ; Cuadrante 3º
1210+ 9173
1211+ 9173 7C               ld a,h
1212+ 9174 06 00            ld b,0
1213+ 9176
1214+ 9176 CD 01 92         call Compara_cositas_H3
1215+ 9179
1216+ 9179 04               inc b
1217+ 917A 05               dec b
1218+ 917B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 917C
1220+ 917C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 917D 06 00            ld b,0
1222+ 917F
1223+ 917F CD 13 92         call Compara_cositas_L3
1224+ 9182 C9               ret
1225+ 9183
1226+ 9183              ; Cuadrante 4º
1227+ 9183
1228+ 9183 7C           4 ld a,h
1229+ 9184 06 00            ld b,0
1230+ 9186
1231+ 9186 CD 25 92         call Compara_cositas_H4
1232+ 9189
1233+ 9189 04               inc b
1234+ 918A 05               dec b
1235+ 918B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 918C
1237+ 918C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 918D 06 00            ld b,0
1239+ 918F
1240+ 918F CD 3B 92         call Compara_cositas_L4
1241+ 9192 C9               ret
1242+ 9193
1243+ 9193              ; Cuadrantes 1º y 2º.
1244+ 9193
1245+ 9193 28 10        2 jr z,3F
1246+ 9195
1247+ 9195              ; 1er Cuadrante
1248+ 9195
1249+ 9195 7C               ld a,h
1250+ 9196 06 00            ld b,0
1251+ 9198
1252+ 9198 CD D9 91         call Compara_cositas_H1
1253+ 919B
1254+ 919B 04               inc b
1255+ 919C 05               dec b
1256+ 919D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 919E
1258+ 919E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 919F 06 00            ld b,0
1260+ 91A1
1261+ 91A1 CD EF 91         call Compara_cositas_L1
1262+ 91A4 C9               ret
1263+ 91A5
1264+ 91A5
1265+ 91A5              ; 2º Cuadrante
1266+ 91A5
1267+ 91A5 7C           3 ld a,h
1268+ 91A6 06 00            ld b,0
1269+ 91A8
1270+ 91A8 CD B5 91         call Compara_cositas_H2
1271+ 91AB
1272+ 91AB 04               inc b
1273+ 91AC 05               dec b
1274+ 91AD C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 91AE
1276+ 91AE 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 91AF 06 00            ld b,0
1278+ 91B1
1279+ 91B1 CD C7 91         call Compara_cositas_L2
1280+ 91B4 C9               ret
1281+ 91B5
1282+ 91B5 A7           Compara_cositas_H2 and a
1283+ 91B6 28 0D            jr z,1F
1284+ 91B8              ;    cp $fd
1285+ 91B8              ;    jr z,1F
1286+ 91B8              ;    cp $fe
1287+ 91B8              ;    jr z,1F
1288+ 91B8 FE FF            cp $ff
1289+ 91BA 28 09            jr z,1F
1290+ 91BC FE 01            cp $01
1291+ 91BE 28 05            jr z,1F
1292+ 91C0 FE 02            cp $02
1293+ 91C2 28 01            jr z,1F
1294+ 91C4 C0               ret nz
1295+ 91C5 04           1 inc b
1296+ 91C6 C9               ret
1297+ 91C7
1298+ 91C7 A7           Compara_cositas_L2 and a
1299+ 91C8 28 0D            jr z,1F
1300+ 91CA              ;    cp $fd
1301+ 91CA              ;    jr z,1F
1302+ 91CA FE FE            cp $fe
1303+ 91CC 28 09            jr z,1F
1304+ 91CE FE FF            cp $ff
1305+ 91D0 28 05            jr z,1F
1306+ 91D2 FE 01            cp $01
1307+ 91D4 28 01            jr z,1F
1308+ 91D6              ;    cp $02
1309+ 91D6              ;    jr z,1F
1310+ 91D6 C0               ret nz
1311+ 91D7 04           1 inc b
1312+ 91D8 C9               ret
1313+ 91D9
1314+ 91D9 A7           Compara_cositas_H1 and a
1315+ 91DA 28 11            jr z,1F
1316+ 91DC              ;    cp $fd
1317+ 91DC              ;    jr z,1F
1318+ 91DC              ;    cp $fe
1319+ 91DC              ;    jr z,1F
1320+ 91DC FE FF            cp $ff
1321+ 91DE 28 0D            jr z,1F
1322+ 91E0 FE 01            cp $01
1323+ 91E2 28 09            jr z,1F
1324+ 91E4 FE 02            cp $02
1325+ 91E6 28 05            jr z,1F
1326+ 91E8 FE 03            cp $03
1327+ 91EA 28 01            jr z,1F
1328+ 91EC C0               ret nz
1329+ 91ED 04           1 inc b
1330+ 91EE C9               ret
1331+ 91EF
1332+ 91EF A7           Compara_cositas_L1 and a
1333+ 91F0 28 0D            jr z,1F
1334+ 91F2              ;    cp $fd
1335+ 91F2              ;    jr z,1F
1336+ 91F2              ;    cp $fe
1337+ 91F2              ;    jr z,1F
1338+ 91F2              ;    cp $ff
1339+ 91F2              ;    jr z,1F
1340+ 91F2 FE 01            cp $01
1341+ 91F4 28 09            jr z,1F
1342+ 91F6 FE 02            cp $02
1343+ 91F8 28 05            jr z,1F
1344+ 91FA FE 03            cp $03
1345+ 91FC 28 01            jr z,1F
1346+ 91FE C0               ret nz
1347+ 91FF 04           1 inc b
1348+ 9200 C9               ret
1349+ 9201
1350+ 9201 A7           Compara_cositas_H3 and a
1351+ 9202 28 0D            jr z,1F
1352+ 9204              ;    cp $fd
1353+ 9204              ;    jr z,1F
1354+ 9204 FE FE            cp $fe
1355+ 9206 28 09            jr z,1F
1356+ 9208 FE FF            cp $ff
1357+ 920A 28 05            jr z,1F
1358+ 920C FE 01            cp $01
1359+ 920E 28 01            jr z,1F
1360+ 9210              ;    cp $02
1361+ 9210              ;    jr z,1F
1362+ 9210              ;    cp $03
1363+ 9210              ;    jr z,1F
1364+ 9210 C0               ret nz
1365+ 9211 04           1 inc b
1366+ 9212 C9               ret
1367+ 9213
1368+ 9213 A7           Compara_cositas_L3 and a
1369+ 9214 28 0D            jr z,1F
1370+ 9216              ;    cp $fd
1371+ 9216              ;    jr z,1F
1372+ 9216              ;    cp $fe
1373+ 9216              ;    jr z,1F
1374+ 9216              ;    cp $ff
1375+ 9216              ;    jr z,1F
1376+ 9216 FE 01            cp $01
1377+ 9218 28 09            jr z,1F
1378+ 921A FE 02            cp $02
1379+ 921C 28 05            jr z,1F
1380+ 921E FE 03            cp $03
1381+ 9220 28 01            jr z,1F
1382+ 9222 C0               ret nz
1383+ 9223 04           1 inc b
1384+ 9224 C9               ret
1385+ 9225
1386+ 9225 A7           Compara_cositas_H4 and a
1387+ 9226 28 11            jr z,1F
1388+ 9228 FE FD            cp $fd
1389+ 922A 28 0D            jr z,1F
1390+ 922C FE FE            cp $fe
1391+ 922E 28 09            jr z,1F
1392+ 9230 FE FF            cp $ff
1393+ 9232 28 05            jr z,1F
1394+ 9234 FE 01            cp $01
1395+ 9236 28 01            jr z,1F
1396+ 9238              ;    cp $02
1397+ 9238              ;    jr z,1F
1398+ 9238              ;    cp $03
1399+ 9238              ;    jr z,1F
1400+ 9238 C0               ret nz
1401+ 9239 04           1 inc b
1402+ 923A C9               ret
1403+ 923B
1404+ 923B A7           Compara_cositas_L4 and a
1405+ 923C 28 0D            jr z,1F
1406+ 923E              ;    cp $fd
1407+ 923E              ;    jr z,1F
1408+ 923E FE FE            cp $fe
1409+ 9240 28 09            jr z,1F
1410+ 9242 FE FF            cp $ff
1411+ 9244 28 05            jr z,1F
1412+ 9246 FE 01            cp $01
1413+ 9248 28 01            jr z,1F
1414+ 924A              ;    cp $02
1415+ 924A              ;    jr z,1F
1416+ 924A              ;    cp $03
1417+ 924A              ;    jr z,1F
1418+ 924A C0               ret nz
1419+ 924B 04           1 inc b
1420+ 924C C9               ret
# file closed: Disparo.asm
1511  924D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 924D              ; ******************************************************************************************************************************************************************************************
   2+ 924D              ;
   3+ 924D              ; 26/06/23
   4+ 924D              ;
   5+ 924D              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 924D
   7+ 924D CD 31 95     Draw call Prepara_draw
   8+ 9250 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9251 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9252 28 05        	jr z,2F
  11+ 9254
  12+ 9254 3A BB 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9257 18 0C        	jr 1F
  14+ 9259
  15+ 9259 2A B9 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 925C 22 A9 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 925F CD EE 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9262              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9262 CD 9B 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9265
  21+ 9265 3A D1 88     1 ld a,(Ctrl_0)
  22+ 9268 CB 6F        	bit 5,a
  23+ 926A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 926C
  25+ 926C CD 84 92     	call Comprueba_limite_horizontal
  26+ 926F CD 14 93     	call Comprueba_limite_vertical
  27+ 9272
  28+ 9272              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9272              ; -----------------------
  30+ 9272              ; -----------------------
  31+ 9272              ; -----------------------
  32+ 9272
  33+ 9272 CD 61 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9275 CD 98 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9278 CD F7 94     	call Define_rutina_de_impresion
  36+ 927B
  37+ 927B 3A D1 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 927E CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9280 32 D1 88     	ld (Ctrl_0),a
  40+ 9283
  41+ 9283 C9           	ret
  42+ 9284
  43+ 9284              ; *******************************************************************************************************************************************************************************************
  44+ 9284              ;	21/01/23
  45+ 9284              ;
  46+ 9284              ; 	Comprueba_limite_horizontal.
  47+ 9284              ;
  48+ 9284              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9284              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9284              ;
  51+ 9284              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9284              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9284              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9284              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9284
  56+ 9284
  57+ 9284
  58+ 9284 3A D1 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9287 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9289 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 928B E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 928D 32 D1 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9290 18 09            jr 6F
  64+ 9292 CB 5F        1 bit 3,a
  65+ 9294 28 0A            jr z,2F
  66+ 9296 E6 F7            and $f7
  67+ 9298 32 D1 88         ld (Ctrl_0),a
  68+ 929B CD EE 93     6 call Inicializacion
  69+ 929E 18 5B            jr 5F
  70+ 92A0 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 92A1
  72+ 92A1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 92A1              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 92A1
  75+ 92A1 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 92A2 2A DF 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 92A5 CD 56 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 92A8 67           	ld h,a
  79+ 92A9 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 92AA CD 56 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 92AD 67           	ld h,a
  82+ 92AE A7           	and a
  83+ 92AF ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 92B1 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 92B2 3A BB 88     	ld a,(Cuad_objeto)
  86+ 92B5 FE 02        	cp 2
  87+ 92B7 38 1E        	jr c,3F
  88+ 92B9 28 1C        	jr z,3F
  89+ 92BB 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 92BC 28 23            jr z,7F
  91+ 92BE 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 92C0 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 92C2 E1           	pop hl
  94+ 92C3
  95+ 92C3              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 92C3              ; _para indicar con E="2" en caso necesario.
  97+ 92C3
  98+ 92C3 E5               push hl
  99+ 92C4 C5               push bc
 100+ 92C5 CD 56 98     	call calcula_tercio
 101+ 92C8 FE 01        	cp 1
 102+ 92CA 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 92CC CD FC 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 92CF 28 26            jr z,9F
 105+ 92D1 38 24            jr c,9F
 106+ 92D3 1E 00        11 ld e,0
 107+ 92D5 18 22            jr 8F
 108+ 92D7 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 92D8 28 07        	jr z, 7F
 110+ 92DA 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 92DC 1E 00         	ld e,0
 112+ 92DE E1           	pop hl
 113+ 92DF 18 04        	jr 4F
 114+ 92E1 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 92E3 18 15            jr 10F
 116+ 92E5
 117+ 92E5              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 92E5              ; _para indicar con E="2" en caso necesario.
 119+ 92E5
 120+ 92E5 E5           4 push hl
 121+ 92E6 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 92E7 CD 56 98     	call calcula_tercio
 123+ 92EA FE 01        	cp 1
 124+ 92EC 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 92EE CD FC 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 92F1 28 04            jr z,9F
 127+ 92F3 30 02            jr nc,9F
 128+ 92F5 18 02        	jr 8F
 129+ 92F7 1E 02        9 ld e,2
 130+ 92F9 C1           8 pop bc
 131+ 92FA E1           10 pop hl
 132+ 92FB C9           5 ret
 133+ 92FC
 134+ 92FC              ; --------------------
 135+ 92FC              ;
 136+ 92FC              ; 25/08/22
 137+ 92FC
 138+ 92FC CD 56 98     Comprueba_centro call calcula_tercio
 139+ 92FF 67               ld h,a
 140+ 9300 08           	ex af,af
 141+ 9301 FE 02        	cp 2
 142+ 9303 38 07        	jr c,1F
 143+ 9305 28 05        	jr z,1F
 144+ 9307 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 930A 18 03        	jr 2F
 146+ 930C 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 930F 08           2 ex af,af
 148+ 9310 A7               and a
 149+ 9311 ED 42            sbc hl,bc
 150+ 9313 C9               ret
 151+ 9314
 152+ 9314              ; *********************************************************************************************************************************************************************************************
 153+ 9314              ;
 154+ 9314              ;   16/8/22
 155+ 9314              ;
 156+ 9314              ;	Comprueba_limite_vertical
 157+ 9314              ;
 158+ 9314              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9314              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9314              ;
 161+ 9314
 162+ 9314 2A A9 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9317 7D           	ld a,l
 164+ 9318 E6 1F        	and $1F
 165+ 931A 57           	ld d,a
 166+ 931B 3A E1 88     	ld a,(Limite_vertical)
 167+ 931E BA           	cp d 											; Límite - Posición.
 168+ 931F 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9320 3A BB 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9323 CB 47        	bit 0,a
 171+ 9325 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9327
 173+ 9327              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9327
 175+ 9327 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9328 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 932A
 178+ 932A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 932A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 932A
 181+ 932A 3A AD 88         ld a,(Coordenada_X)
 182+ 932D 16 0F            ld d,Centro_izquierda
 183+ 932F A7               and a
 184+ 9330 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9331 28 1E            jr z,3F
 186+ 9333 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9335              ;                                                    ; _salimos sin modificar nada.
 188+ 9335 18 0E            jr 2F
 189+ 9337 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9338 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 933A
 192+ 933A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 933A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 933A
 195+ 933A 3A AD 88         ld a,(Coordenada_X)
 196+ 933D 16 10            ld d,Centro_derecha
 197+ 933F A7               and a
 198+ 9340 92               sub d
 199+ 9341 28 0E            jr z,3F
 200+ 9343 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9345              ;                                                    ; _salimos sin modificar nada.
 202+ 9345 CB 43        2 bit 0,e
 203+ 9347 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9349 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 934A CD DE 93         call Modificaccionne
 206+ 934D C1           	pop bc
 207+ 934E CD EE 93         call Inicializacion
 208+ 9351 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9352
 210+ 9352              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9352
 212+ 9352 C5           4 push bc
 213+ 9353 01 A8 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9356 0A           	ld a,(bc)
 215+ 9357 3D           	dec a
 216+ 9358 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9359 7D           	ld a,l
 218+ 935A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 935B CB 47        	bit 0,a
 220+ 935D 28 03        	jr z,5F
 221+ 935F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9360 18 2E        	jr 7F
 223+ 9362
 224+ 9362              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9362
 226+ 9362 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9363 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9364 3A D1 88     	ld a,(Ctrl_0)
 229+ 9367 CB 4F        	bit 1,a
 230+ 9369 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 936B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 936C
 233+ 936C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 936C
 235+ 936C 1C               inc e
 236+ 936D 1D               dec e
 237+ 936E 20 07            jr nz,12F
 238+ 9370 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9371 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9372 22 A9 88     	ld (Posicion_actual),hl
 241+ 9375 18 44        13 jr 9F
 242+ 9377 CB 43        12 bit 0,e
 243+ 9379 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 937B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 937B C1           	pop bc
 246+ 937C 18 D3        	jr 3B
 247+ 937E 80           14 add b
 248+ 937F 6F               ld l,a
 249+ 9380 22 A9 88     	ld (Posicion_actual),hl
 250+ 9383 CD DE 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9386 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9388 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 938A 32 D1 88         ld (Ctrl_0),a
 254+ 938D F1           	pop af
 255+ 938E 18 2B        	jr 9F
 256+ 9390
 257+ 9390              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9390
 259+ 9390 F5           7 push af
 260+ 9391 3A D1 88     	ld a,(Ctrl_0)
 261+ 9394 CB 47        	bit 0,a
 262+ 9396 20 1D        	jr nz,8F
 263+ 9398 F1           	pop af
 264+ 9399
 265+ 9399              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9399
 267+ 9399 1C           	inc e
 268+ 939A 1D               dec e
 269+ 939B 20 07            jr nz,10F
 270+ 939D 90           	sub b
 271+ 939E 6F               ld l,a
 272+ 939F 22 A9 88     	ld (Posicion_actual),hl
 273+ 93A2 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 93A4              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 93A4 CB 43        10 bit 0,e
 276+ 93A6 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 93A8              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 93A8 C1           	pop bc
 279+ 93A9 18 A6        	jr 3B
 280+ 93AB 90           16 sub b
 281+ 93AC 6F               ld l,a
 282+ 93AD 22 A9 88     	ld (Posicion_actual),hl
 283+ 93B0 CD DE 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 93B3 18 06            jr 9F
 285+ 93B5 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 93B7 32 D1 88         ld (Ctrl_0),a
 287+ 93BA F1           	pop af
 288+ 93BB C1           9 pop bc
 289+ 93BC 1E 00        	ld e,0
 290+ 93BE CD EE 93         call Inicializacion
 291+ 93C1 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 93C2 08           	ex af,af
 293+ 93C3 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 93C4 18 8B            jr 3B
 295+ 93C6
 296+ 93C6              ; --------------------
 297+ 93C6
 298+ 93C6 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 93C8 CD 4C 95     1 call PreviousScan
 300+ 93CB 10 FB            djnz 1B
 301+ 93CD 22 A9 88     	ld (Posicion_actual),hl
 302+ 93D0 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 93D1 C9           	ret
 304+ 93D2
 305+ 93D2              ; --------------------
 306+ 93D2
 307+ 93D2 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 93D4 CD 3D 95     1 call NextScan
 309+ 93D7 10 FB            djnz 1B
 310+ 93D9 22 A9 88     	ld (Posicion_actual),hl
 311+ 93DC AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 93DD C9           	ret
 313+ 93DE
 314+ 93DE              ; --------------------
 315+ 93DE              ;
 316+ 93DE              ;	22/01/23
 317+ 93DE              ;
 318+ 93DE              ;	E="1". Hemos cambiado de cuadrante.
 319+ 93DE              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 93DE              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 93DE
 322+ 93DE
 323+ 93DE              Modificaccionne
 324+ 93DE
 325+ 93DE 3A BB 88     	ld a,(Cuad_objeto)
 326+ 93E1 FE 02        	cp 2
 327+ 93E3 CC C6 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 93E6 DC C6 93         call c,Modifica_Pos_actual
 329+ 93E9 C8           	ret z
 330+ 93EA CD D2 93         call Modifica_Pos_actual2
 331+ 93ED C9               ret
 332+ 93EE
 333+ 93EE              ; *************************************************************************************************************************************************************************************************
 334+ 93EE              ;
 335+ 93EE              ;	13/8/22
 336+ 93EE              ;
 337+ 93EE              ;	Inicializacion
 338+ 93EE              ;
 339+ 93EE              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 93EE              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 93EE              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 93EE              ;
 343+ 93EE              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 93EE              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 93EE              ;	_ desaparece/aparece.
 346+ 93EE
 347+ 93EE              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 93EE              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 93EE              ;
 350+ 93EE              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 93EE              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 93EE              ; 		   [E] ="0"
 353+ 93EE
 354+ 93EE              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 93EE
 356+ 93EE CD 56 98     Inicializacion call calcula_tercio
 357+ 93F1 28 36        	jr z,primit
 358+ 93F3 E6 02        	and 2
 359+ 93F5 20 07        	jr nz,segmit
 360+ 93F7 7D           	ld a,l
 361+ 93F8 FE 7F        	cp $7f
 362+ 93FA 38 2D        	jr c,primit
 363+ 93FC 28 2B        	jr z,primit
 364+ 93FE CD 5B 94     segmit call column
 365+ 9401 38 13        	jr c,tercuad
 366+ 9403 3E 04        cuarcuad ld a,4
 367+ 9405 32 BB 88     	ld (Cuad_objeto),a
 368+ 9408 21 20 48     	ld hl,$4820
 369+ 940B 22 DF 88     	ld (Limite_horizontal),hl
 370+ 940E 21 E1 88     	ld hl,Limite_vertical
 371+ 9411 36 0D        	ld (hl),$0d
 372+ 9413 08           	ex af,af
 373+ 9414 18 3C        	jr 1F
 374+ 9416              tercuad
 375+ 9416 3E 03        	ld a,3
 376+ 9418 32 BB 88     	ld (Cuad_objeto),a
 377+ 941B 21 20 48     	ld hl,$4820
 378+ 941E 22 DF 88     	ld (Limite_horizontal),hl
 379+ 9421 21 E1 88     	ld hl,Limite_vertical
 380+ 9424 36 12        	ld (hl),$12
 381+ 9426 08           	ex af,af
 382+ 9427 18 29        	jr 1F
 383+ 9429 CD 5B 94     primit call column
 384+ 942C 38 13        	jr c, primcuad
 385+ 942E              segcuad
 386+ 942E 3E 02        	ld a,2
 387+ 9430 32 BB 88     	ld (Cuad_objeto),a
 388+ 9433 21 C0 4F     	ld hl,$4fc0
 389+ 9436 22 DF 88     	ld (Limite_horizontal),hl
 390+ 9439 21 E1 88     	ld hl,Limite_vertical
 391+ 943C 36 0D        	ld (hl),$0d
 392+ 943E 08           	ex af,af
 393+ 943F 18 11        	jr 1F
 394+ 9441              primcuad
 395+ 9441 3E 01        	ld a,1
 396+ 9443 32 BB 88     	ld (Cuad_objeto),a
 397+ 9446 21 C0 4F     	ld hl,$4fc0
 398+ 9449 22 DF 88     	ld (Limite_horizontal),hl
 399+ 944C 21 E1 88     	ld hl,Limite_vertical
 400+ 944F 36 12        	ld (hl),$12
 401+ 9451 08           	ex af,af
 402+ 9452 CD E5 9B     1 call Genera_coordenadas
 403+ 9455 21 D1 88     	ld hl,Ctrl_0
 404+ 9458 CB EE        	set 5,(hl)
 405+ 945A C9           	ret
 406+ 945B
 407+ 945B              ; ------------------------------------------------------------------------------------------------------------------
 408+ 945B
 409+ 945B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 945B              ;
 411+ 945B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 945B
 413+ 945B 7D           column ld a,l
 414+ 945C E6 1F        	and $1f
 415+ 945E FE 10         	cp $10
 416+ 9460 C9            	ret
 417+ 9461
 418+ 9461              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9461              ;
 420+ 9461              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9461              ;
 422+ 9461              ; 14/12/22
 423+ 9461              ;
 424+ 9461              ;	Modifica: A y BC.
 425+ 9461
 426+ 9461 3A BB 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9464 E6 01        	and 1
 428+ 9466 28 17        	jr z,1F
 429+ 9468
 430+ 9468              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9468
 432+ 9468 3A AD 88     	ld a,(Coordenada_X)
 433+ 946B 47           	ld b,a
 434+ 946C 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 946D 79           	ld a,c
 436+ 946E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 946F 38 08        	jr c,2F
 438+ 9471 47           	ld b,a
 439+ 9472 79           	ld a,c
 440+ 9473 90           	sub b
 441+ 9474 32 DE 88     	ld (Columnas),a
 442+ 9477 18 1B        	jr 4F
 443+ 9479 79           2 ld a,c
 444+ 947A 32 DE 88     	ld (Columnas),a
 445+ 947D 18 15        	jr 4F
 446+ 947F
 447+ 947F              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 947F
 449+ 947F 3A AD 88     1 ld a,(Coordenada_X)
 450+ 9482 81           	add c
 451+ 9483 3D           	dec a
 452+ 9484 D6 1F        	sub $1f
 453+ 9486 38 08        	jr c,3F
 454+ 9488 47           	ld b,a
 455+ 9489 79           	ld a,c
 456+ 948A 90           	sub b
 457+ 948B 32 DE 88     	ld (Columnas),a
 458+ 948E 18 04        	jr 4F
 459+ 9490 79           3 ld a,c
 460+ 9491 32 DE 88     	ld (Columnas),a
 461+ 9494 D9           4 exx
 462+ 9495 4F           	ld c,a
 463+ 9496 D9           	exx
 464+ 9497 C9            ret
 465+ 9498
 466+ 9498              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9498              ;
 468+ 9498              ;   19/7/23
 469+ 9498              ;
 470+ 9498              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9498              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9498              ;
 473+ 9498              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9498              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9498              ;
 476+ 9498              ;	DESTRUYE: HL,B Y A.
 477+ 9498
 478+ 9498 3A BB 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 949B FE 02        	cp 2
 480+ 949D 38 18        	jr c,1F
 481+ 949F 28 16        	jr z,1F
 482+ 94A1 E6 01        	and 1
 483+ 94A3 28 0D        	jr z,3F
 484+ 94A5
 485+ 94A5              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 94A5
 487+ 94A5 CD EB 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 94A8
 489+ 94A8 7D           9 ld a,l
 490+ 94A9 E6 1F        	and $1f
 491+ 94AB 28 2A        	jr z,7F
 492+ 94AD 2B           	dec hl
 493+ 94AE 10 F8        	djnz 9B
 494+ 94B0 18 25        	jr 7F
 495+ 94B2
 496+ 94B2              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 94B2
 498+ 94B2 2A A9 88     3 ld hl,(Posicion_actual)
 499+ 94B5 18 20        	jr 7F
 500+ 94B7
 501+ 94B7 28 14        1 jr z,2F
 502+ 94B9
 503+ 94B9              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 94B9
 505+ 94B9 CD EB 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 94BC
 507+ 94BC 7D           4 ld a,l
 508+ 94BD E6 1F        	and $1f
 509+ 94BF 28 03        	jr z,6F
 510+ 94C1 2B           	dec hl
 511+ 94C2 10 F8        	djnz 4B
 512+ 94C4 06 0F        6 ld b,15
 513+ 94C6 CD 4C 95     5 call PreviousScan
 514+ 94C9 10 FB        	djnz 5B
 515+ 94CB 18 0A        	jr 7F
 516+ 94CD
 517+ 94CD              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 94CD
 519+ 94CD CD EB 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 94D0 06 0F        	ld b,15
 521+ 94D2 CD 4C 95     8 call PreviousScan
 522+ 94D5 10 FB        	djnz 8B
 523+ 94D7
 524+ 94D7 E5           7 push hl
 525+ 94D8 DD E1        	pop ix
 526+ 94DA
 527+ 94DA 2A AB 88     	ld hl,(Puntero_objeto)
 528+ 94DD E5           	push hl
 529+ 94DE FD E1        	pop iy
 530+ 94E0
 531+ 94E0              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 94E0
 533+ 94E0 3A D1 88     	ld a,(Ctrl_0)
 534+ 94E3 CB 77        	bit 6,a
 535+ 94E5 C8           	ret z
 536+ 94E6
 537+ 94E6              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 94E6              ; _ entidad / Amadeus´.
 539+ 94E6
 540+ 94E6 DD 22 14 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 94EA
 542+ 94EA C9           	ret
 543+ 94EB
 544+ 94EB              ; --------------------------------------------------------------------------------------------------------------------
 545+ 94EB              ;
 546+ 94EB              ;	2/1/23
 547+ 94EB              ;
 548+ 94EB              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 94EB              ;
 550+ 94EB              ;	Tras esta rutina tenemos:
 551+ 94EB              ;
 552+ 94EB              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 94EB              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 94EB              ;
 555+ 94EB              ;	DESTRUYE!!!!! HL,B y A.
 556+ 94EB
 557+ 94EB 2A A9 88     Operandos ld hl,(Posicion_actual)
 558+ 94EE 3A DE 88     	ld a,(Columnas)
 559+ 94F1 3D           	dec a
 560+ 94F2 20 01        	jr nz,1F
 561+ 94F4 3C           	inc a
 562+ 94F5 47           1 ld b,a
 563+ 94F6 C9           	ret
 564+ 94F7
 565+ 94F7              ; --------------------------------------------------------------------------------------------------------------------
 566+ 94F7              ;
 567+ 94F7              ;	3/1/23
 568+ 94F7              ;
 569+ 94F7              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 94F7              ;
 571+ 94F7              ;	Destruye: A,B,HL y DE.
 572+ 94F7
 573+ 94F7              Define_rutina_de_impresion
 574+ 94F7
 575+ 94F7 3A A8 88     	ld a,(Columns)
 576+ 94FA 47           	ld b,a
 577+ 94FB 3A DE 88     	ld a,(Columnas)
 578+ 94FE B8           	cp b
 579+ 94FF 20 0D        	jr nz,2f
 580+ 9501
 581+ 9501              ;	La entidad se imprime entera.
 582+ 9501
 583+ 9501 21 26 96     	ld hl, Indice_entidades_completas
 584+ 9504 E6 01        	and 1
 585+ 9506 28 02        	jr z,1F
 586+ 9508
 587+ 9508 23           	inc hl
 588+ 9509 23           	inc hl
 589+ 950A
 590+ 950A CD DB 8B     1 call Extrae_address
 591+ 950D C9           	ret		;	ret
 592+ 950E
 593+ 950E              ;	La entidad no se imprime entera en pantalla.
 594+ 950E
 595+ 950E 3A BB 88     2 ld a,(Cuad_objeto)
 596+ 9511 E6 01        	and 1
 597+ 9513 28 17        	jr z,3F
 598+ 9515
 599+ 9515              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9515
 601+ 9515 21 2A 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9518 3A A8 88     4 ld a,(Columns)
 603+ 951B E6 01        	and 1
 604+ 951D 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 951F
 606+ 951F 23           	inc hl
 607+ 9520 23           	inc hl
 608+ 9521
 609+ 9521 3A DE 88     	ld a,(Columnas)
 610+ 9524 E6 01        	and 1
 611+ 9526 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9528
 613+ 9528 23           	inc hl
 614+ 9529 23           	inc hl
 615+ 952A
 616+ 952A 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 952C
 618+ 952C 21 30 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 952F 18 E7        	jr 4B
 620+ 9531
 621+ 9531              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9531              ;
 623+ 9531              ;	Prepara_draw
 624+ 9531              ;
 625+ 9531              ;	Es una rutina de carga.
 626+ 9531              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9531              ;
 628+ 9531              ;	FUNCIONAMIENTO:
 629+ 9531              ;
 630+ 9531              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9531              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9531              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9531              ;
 634+ 9531              ;	DESTRUYE:
 635+ 9531              ;
 636+ 9531              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9531
 638+ 9531 21 A7 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9534 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9535 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9536 4E           	ld c,(hl)
 642+ 9537 2A A9 88     	ld hl,(Posicion_actual)
 643+ 953A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 953C C9           	ret
 645+ 953D
 646+ 953D              ;----------------------------------------------------------------------------------------------------------------
 647+ 953D              ;
 648+ 953D              ;	5/08/22
 649+ 953D              ;
 650+ 953D              ;   NextScan.
 651+ 953D              ;
 652+ 953D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 953D              ;
 654+ 953D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 953D              ;
 656+ 953D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 953D              ;
 658+ 953D              ;       DESTRUIDOS: AF y HL !!!
 659+ 953D              ;
 660+ 953D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 953D              ;
 662+ 953D
 663+ 953D 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 953E 7C               ld a,h
 665+ 953F E6 07            and 7
 666+ 9541 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9542
 668+ 9542 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9543 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9545 6F               ld l,a
 671+ 9546 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9547
 673+ 9547 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9548 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 954A 67               ld h,a
 676+ 954B C9               ret
 677+ 954C
 678+ 954C              ;----------------------------------------------------------------------------------------------------------------
 679+ 954C              ;
 680+ 954C              ;	5/08/22
 681+ 954C              ;
 682+ 954C              ;   PreviousScan.
 683+ 954C              ;
 684+ 954C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 954C              ;
 686+ 954C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 954C              ;
 688+ 954C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 954C              ;
 690+ 954C              ;       DESTRUIDOS: AF y HL !!!
 691+ 954C              ;
 692+ 954C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 954C              ;
 694+ 954C
 695+ 954C 7C           PreviousScan ld a,h
 696+ 954D 25               dec h               ; Dec H.
 697+ 954E E6 07            and 7
 698+ 9550 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9551
 700+ 9551 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9552 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9554 6F               ld l,a
 703+ 9555 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9556
 705+ 9556 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9557 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9559 67               ld h,a
 708+ 955A C9               ret
 709+ 955B
 710+ 955B              ; -----------------------------------------------------------------------------------
 711+ 955B              ;
 712+ 955B              ;	31/7/23
 713+ 955B              ;
 714+ 955B              ;	Rutina principal de pintado de entidades.
 715+ 955B              ;	Extrae la foto del frame, (entidades).
 716+ 955B
 717+ 955B              Extrae_foto_entidades
 718+ 955B
 719+ 955B 3A 03 89     	ld a,(Ctrl_3)
 720+ 955E CB 47        	bit 0,a
 721+ 9560 C8           	ret Z 																	; Salimos si el FRAME a pintar NO ESTÁ COMPLETO.
 722+ 9561
 723+ 9561 21 01 70     	ld hl,Album_de_fotos+1
 724+ 9564 7E           	ld a,(hl)
 725+ 9565 A7           	and a
 726+ 9566 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 727+ 9567
 728+ 9567              ;	No hay datos, (entidades para pintar en este frame).
 729+ 9567
 730+ 9567 3A F0 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 731+ 956A A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 732+ 956B C8           	ret z
 733+ 956C
 734+ 956C              ; -----------------------------------
 735+ 956C
 736+ 956C ED 73 F5 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 737+ 9570 31 00 70     	ld sp,Album_de_fotos
 738+ 9573
 739+ 9573 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 740+ 9575 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 741+ 9576 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 742+ 9577
 743+ 9577 ED 73 F7 88  	ld (Stack_2),sp
 744+ 957B ED 7B F5 88  	ld sp,(Stack)
 745+ 957F
 746+ 957F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 747+ 957F
 748+ 957F 3E CD        	ld a,$cd
 749+ 9581 32 89 95     	ld (Imprime),a
 750+ 9584 EB           	ex de,hl
 751+ 9585 22 8A 95     	ld (Imprime+1),hl
 752+ 9588 EB           	ex de,hl
 753+ 9589
 754+ 9589              ; Ejecuta la llamada:	CALL $xx,xx
 755+ 9589
 756+ 9589 00 00 00     Imprime db 0,0,0
 757+ 958C
 758+ 958C ED 73 F5 88  	ld (Stack),sp
 759+ 9590
 760+ 9590 3A F0 88     	ld a,(Numero_de_malotes)
 761+ 9593 3D           	dec a
 762+ 9594 28 09        	jr z,1F
 763+ 9596 32 F0 88      	ld (Numero_de_malotes),a
 764+ 9599
 765+ 9599 ED 7B F7 88  	ld sp,(Stack_2)
 766+ 959D 18 D4        	jr 2B
 767+ 959F
 768+ 959F AF           1 xor a
 769+ 95A0 32 F7 88     	ld (Stack_2),a
 770+ 95A3
 771+ 95A3 C9           	ret
 772+ 95A4
 773+ 95A4              ; -----------------------------------------------------------------------------------
 774+ 95A4              ;
 775+ 95A4              ;	28/2/23
 776+ 95A4              ;
 777+ 95A4              ;	Pinta los disparos generados.
 778+ 95A4
 779+ 95A4              Extrae_foto_disparos
 780+ 95A4
 781+ 95A4 21 57 70     	ld hl,Album_de_fotos_disparos+1
 782+ 95A7 7E               ld a,(hl)
 783+ 95A8 A7               and a
 784+ 95A9 C8               ret z
 785+ 95AA
 786+ 95AA 3A 04 89     	ld a,(Numero_de_disparotes)
 787+ 95AD A7           	and a
 788+ 95AE C8           	ret z
 789+ 95AF ED 73 F5 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 790+ 95B3 31 56 70     	ld sp,Album_de_fotos_disparos
 791+ 95B6
 792+ 95B6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 793+ 95B8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 794+ 95B9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 795+ 95BA
 796+ 95BA ED 73 F7 88  	ld (Stack_2),sp
 797+ 95BE ED 7B F5 88  	ld sp,(Stack)
 798+ 95C2
 799+ 95C2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 800+ 95C2
 801+ 95C2 3E CD        	ld a,$cd
 802+ 95C4 32 CC 95     	ld (Imprime2),a
 803+ 95C7 EB           	ex de,hl
 804+ 95C8 22 CD 95     	ld (Imprime2+1),hl
 805+ 95CB EB           	ex de,hl
 806+ 95CC
 807+ 95CC              ; Ejecuta la llamada:	CALL $xx,xx
 808+ 95CC
 809+ 95CC 00 00 00     Imprime2 db 0,0,0
 810+ 95CF
 811+ 95CF 3A 04 89     	ld a,(Numero_de_disparotes)
 812+ 95D2 3D           	dec a
 813+ 95D3 28 09        	jr z,1F
 814+ 95D5 32 04 89      	ld (Numero_de_disparotes),a
 815+ 95D8
 816+ 95D8 ED 7B F7 88  	ld sp,(Stack_2)
 817+ 95DC 18 D8        	jr 2B
 818+ 95DE
 819+ 95DE AF           1 xor a
 820+ 95DF 32 F7 88     	ld (Stack_2),a
 821+ 95E2 C9           	ret
 822+ 95E3
 823+ 95E3              ; -----------------------------------------------------------------------------------
 824+ 95E3              ;
 825+ 95E3              ;	4/9/23
 826+ 95E3              ;
 827+ 95E3              ;	Rutina principal de pintado de Amadeus.
 828+ 95E3              ;	Extrae fotos de Album_de_fotos_Amadeus.
 829+ 95E3
 830+ 95E3 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 831+ 95E6 7E           	ld a,(hl)
 832+ 95E7 A7           	and a
 833+ 95E8 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 834+ 95E9
 835+ 95E9 3A F0 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 836+ 95EC A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 837+ 95ED C8           	ret z
 838+ 95EE
 839+ 95EE              ; -----------------------------------
 840+ 95EE
 841+ 95EE ED 73 F5 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 842+ 95F2 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 843+ 95F5
 844+ 95F5 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 845+ 95F7 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 846+ 95F8 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 847+ 95F9
 848+ 95F9 ED 73 F7 88  	ld (Stack_2),sp
 849+ 95FD ED 7B F5 88  	ld sp,(Stack)
 850+ 9601
 851+ 9601              ; Fabrica la llamada a la correspondiente rutina de impresión.
 852+ 9601
 853+ 9601 3E CD        	ld a,$cd
 854+ 9603 32 0B 96     	ld (Imprime_Amadeus),a
 855+ 9606 EB           	ex de,hl
 856+ 9607 22 0C 96     	ld (Imprime_Amadeus+1),hl
 857+ 960A EB           	ex de,hl
 858+ 960B
 859+ 960B              ; Ejecuta la llamada:	CALL $xx,xx
 860+ 960B
 861+ 960B 00 00 00     Imprime_Amadeus db 0,0,0
 862+ 960E
 863+ 960E ED 73 F5 88  	ld (Stack),sp
 864+ 9612
 865+ 9612 3A F0 88     	ld a,(Numero_de_malotes)
 866+ 9615 3D           	dec a
 867+ 9616 28 09        	jr z,1F
 868+ 9618 32 F0 88      	ld (Numero_de_malotes),a
 869+ 961B
 870+ 961B ED 7B F7 88  	ld sp,(Stack_2)
 871+ 961F 18 D4        	jr 2B
 872+ 9621
 873+ 9621 AF           1 xor a
 874+ 9622 32 F7 88     	ld (Stack_2),a
 875+ 9625
 876+ 9625 C9           	ret
# file closed: Draw_XOR.asm
1512  9626              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9626              ;   índices de Rutinas de impresión.
   2+ 9626
   3+ 9626 36 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9628 63 96            defw Pinta_Amadeus_3x2
   5+ 962A
   6+ 962A B9 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 962C 59 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 962E 0D 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9630
  10+ 9630 E3 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9632 E7 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9634 9B 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9636
  14+ 9636
  15+ 9636              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9636              ;
  17+ 9636              ;   12/12/22
  18+ 9636              ;
  19+ 9636              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9636              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9636              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9636              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9636              ;
  24+ 9636              ;   Modifica: DE y HL.
  25+ 9636
  26+ 9636 ED 73 F5 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 963A FD F9        	ld sp,iy
  28+ 963C 06 10            ld b,16
  29+ 963E D1           1 pop de
  30+ 963F 7B               ld a,e
  31+ 9640 AE               xor (hl)
  32+ 9641 77           	ld (hl),a
  33+ 9642 23           	inc hl
  34+ 9643 7A               ld a,d
  35+ 9644 AE               xor (hl)
  36+ 9645 77           	ld (hl),a
  37+ 9646 2B           	dec hl
  38+ 9647 24           	inc h
  39+ 9648 7C               ld a,h
  40+ 9649 E6 07            and 7
  41+ 964B 20 0A            jr nz,2F
  42+ 964D 7D               ld a,l
  43+ 964E C6 20            add a,$20
  44+ 9650 6F               ld l,a
  45+ 9651 38 04            jr c,2F
  46+ 9653 7C               ld a,h
  47+ 9654 D6 08            sub 8
  48+ 9656 67               ld h,a
  49+ 9657 7C           2 ld a,h
  50+ 9658 FE 58            cp $58
  51+ 965A 28 02            jr z,3F
  52+ 965C 10 E0            djnz 1B
  53+ 965E ED 7B F5 88  3 ld sp,(Stack)
  54+ 9662 C9           	ret
  55+ 9663
  56+ 9663 ED 73 F5 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9667 FD F9        	ld sp,iy
  58+ 9669 06 08            ld b,8
  59+ 966B D1           1 pop de
  60+ 966C 7B               ld a,e
  61+ 966D AE               xor (hl)
  62+ 966E 77           	ld (hl),a
  63+ 966F 23           	inc hl
  64+ 9670 7A               ld a,d
  65+ 9671 AE               xor (hl)
  66+ 9672 77           	ld (hl),a
  67+ 9673 23           	inc hl
  68+ 9674 D1           	pop de
  69+ 9675 7B               ld a,e
  70+ 9676 AE               xor (hl)
  71+ 9677 77           	ld (hl),a
  72+ 9678 2B           	dec hl
  73+ 9679 2B           	dec hl
  74+ 967A 24           	inc h
  75+ 967B 7C               ld a,h
  76+ 967C E6 07            and 7
  77+ 967E 20 0A            jr nz,2F
  78+ 9680 7D               ld a,l
  79+ 9681 C6 20            add a,$20
  80+ 9683 6F               ld l,a
  81+ 9684 38 04            jr c,2F
  82+ 9686 7C               ld a,h
  83+ 9687 D6 08            sub 8
  84+ 9689 67               ld h,a
  85+ 968A 7C           2 ld a,h
  86+ 968B FE 58            cp $58
  87+ 968D 28 25            jr z,4F
  88+ 968F 7A               ld a,d
  89+ 9690 AE               xor (hl)
  90+ 9691 77               ld (hl),a
  91+ 9692 D1           	pop de
  92+ 9693 23           	inc hl
  93+ 9694 7B               ld a,e
  94+ 9695 AE               xor (hl)
  95+ 9696 77           	ld (hl),a
  96+ 9697 23           	inc hl
  97+ 9698 7A               ld a,d
  98+ 9699 AE               xor (hl)
  99+ 969A 77           	ld (hl),a
 100+ 969B 2B           	dec hl
 101+ 969C 2B           	dec hl
 102+ 969D 24           	inc h
 103+ 969E 7C               ld a,h
 104+ 969F E6 07            and 7
 105+ 96A1 20 0A            jr nz,3F
 106+ 96A3 7D               ld a,l
 107+ 96A4 C6 20            add a,$20
 108+ 96A6 6F               ld l,a
 109+ 96A7 38 04            jr c,3F
 110+ 96A9 7C               ld a,h
 111+ 96AA D6 08            sub 8
 112+ 96AC 67               ld h,a
 113+ 96AD 7C           3 ld a,h
 114+ 96AE FE 58            cp $58
 115+ 96B0 28 02            jr z,4F
 116+ 96B2 10 B7            djnz 1B
 117+ 96B4 ED 7B F5 88  4 ld sp,(Stack)
 118+ 96B8 C9           	ret
 119+ 96B9
 120+ 96B9              ; ---------------------------------------------------
 121+ 96B9
 122+ 96B9 ED 73 F5 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 96BD FD F9        	ld sp,iy
 124+ 96BF
 125+ 96BF              ; >>>
 126+ 96BF
 127+ 96BF 06 10            ld b,16
 128+ 96C1 D1           1 pop de
 129+ 96C2 7A           	ld a,d
 130+ 96C3 AE           	xor (hl)
 131+ 96C4 77           	ld (hl),a
 132+ 96C5 24           	inc h
 133+ 96C6 7C               ld a,h
 134+ 96C7 E6 07            and 7
 135+ 96C9 20 0C            jr nz,2F
 136+ 96CB 7D               ld a,l
 137+ 96CC C6 20            add a,$20
 138+ 96CE 6F               ld l,a
 139+ 96CF 38 06            jr c,2F
 140+ 96D1 7C               ld a,h
 141+ 96D2 D6 08            sub 8
 142+ 96D4 67               ld h,a
 143+ 96D5 18 00            jr 2F
 144+ 96D7 7C           2 ld a,h
 145+ 96D8 FE 58            cp $58
 146+ 96DA 28 02            jr z,3F
 147+ 96DC 10 E3            djnz 1B
 148+ 96DE ED 7B F5 88  3 ld sp,(Stack)
 149+ 96E2 C9           	ret
 150+ 96E3
 151+ 96E3 ED 73 F5 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 96E7 FD F9        	ld sp,iy
 153+ 96E9
 154+ 96E9              ; >>>
 155+ 96E9
 156+ 96E9 06 10            ld b,16
 157+ 96EB D1           1 pop de
 158+ 96EC 7B           	ld a,e
 159+ 96ED AE           	xor (hl)
 160+ 96EE 77           	ld (hl),a
 161+ 96EF 24           	inc h
 162+ 96F0 7C               ld a,h
 163+ 96F1 E6 07            and 7
 164+ 96F3 20 0C            jr nz,2F
 165+ 96F5 7D               ld a,l
 166+ 96F6 C6 20            add a,$20
 167+ 96F8 6F               ld l,a
 168+ 96F9 38 06            jr c,2F
 169+ 96FB 7C               ld a,h
 170+ 96FC D6 08            sub 8
 171+ 96FE 67               ld h,a
 172+ 96FF 18 00            jr 2F
 173+ 9701 7C           2 ld a,h
 174+ 9702 FE 58            cp $58
 175+ 9704 28 02            jr z,3F
 176+ 9706 10 E3            djnz 1B
 177+ 9708 ED 7B F5 88  3 ld sp,(Stack)
 178+ 970C C9           	ret
 179+ 970D
 180+ 970D              ; ---------------------------------------------------
 181+ 970D
 182+ 970D ED 73 F5 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9711 FD F9        	ld sp,iy
 184+ 9713 06 08            ld b,8
 185+ 9715 D1           1 pop de
 186+ 9716 7A           	ld a,d
 187+ 9717 AE           	xor (hl)
 188+ 9718 77           	ld (hl),a
 189+ 9719 23           	inc hl
 190+ 971A D1           	pop de
 191+ 971B 7B           	ld a,e
 192+ 971C AE           	xor (hl)
 193+ 971D 77           	ld (hl),a
 194+ 971E 2B           	dec hl
 195+ 971F 24            	inc h
 196+ 9720 7C               ld a,h
 197+ 9721 E6 07            and 7
 198+ 9723 20 0A            jr nz,2F
 199+ 9725 7D               ld a,l
 200+ 9726 C6 20            add a,$20
 201+ 9728 6F               ld l,a
 202+ 9729 38 04            jr c,2F
 203+ 972B 7C               ld a,h
 204+ 972C D6 08            sub 8
 205+ 972E 67               ld h,a
 206+ 972F 7C           2 ld a,h
 207+ 9730 FE 58            cp $58
 208+ 9732 28 20            jr z,4F
 209+ 9734 D1               pop de
 210+ 9735 7B           	ld a,e
 211+ 9736 AE           	xor (hl)
 212+ 9737 77           	ld (hl),a
 213+ 9738 23           	inc hl
 214+ 9739 7A           	ld a,d
 215+ 973A AE           	xor (hl)
 216+ 973B 77           	ld (hl),a
 217+ 973C 2B           	dec hl
 218+ 973D 24           	inc h
 219+ 973E 7C               ld a,h
 220+ 973F E6 07            and 7
 221+ 9741 20 0A            jr nz,3F
 222+ 9743 7D               ld a,l
 223+ 9744 C6 20            add a,$20
 224+ 9746 6F               ld l,a
 225+ 9747 38 04            jr c,3F
 226+ 9749 7C               ld a,h
 227+ 974A D6 08            sub 8
 228+ 974C 67               ld h,a
 229+ 974D 7C           3 ld a,h
 230+ 974E FE 58            cp $58
 231+ 9750 28 02            jr z,4F
 232+ 9752 10 C1            djnz 1B
 233+ 9754 ED 7B F5 88  4 ld sp,(Stack)
 234+ 9758 C9           	ret
 235+ 9759
 236+ 9759 ED 73 F5 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 975D FD F9        	ld sp,iy
 238+ 975F 06 08            ld b,8
 239+ 9761 D1           1 pop de
 240+ 9762 D1           	pop de
 241+ 9763 7B           	ld a,e
 242+ 9764 AE           	xor (hl)
 243+ 9765 77           	ld (hl),a
 244+ 9766 24            	inc h
 245+ 9767 7C               ld a,h
 246+ 9768 E6 07            and 7
 247+ 976A 20 0A            jr nz,2F
 248+ 976C 7D               ld a,l
 249+ 976D C6 20            add a,$20
 250+ 976F 6F               ld l,a
 251+ 9770 38 04            jr c,2F
 252+ 9772 7C               ld a,h
 253+ 9773 D6 08            sub 8
 254+ 9775 67               ld h,a
 255+ 9776 7C           2 ld a,h
 256+ 9777 FE 58            cp $58
 257+ 9779 28 1B            jr z,4F
 258+ 977B D1               pop de
 259+ 977C 7A           	ld a,d
 260+ 977D AE           	xor (hl)
 261+ 977E 77           	ld (hl),a
 262+ 977F 24           	inc h
 263+ 9780 7C               ld a,h
 264+ 9781 E6 07            and 7
 265+ 9783 20 0A            jr nz,3F
 266+ 9785 7D               ld a,l
 267+ 9786 C6 20            add a,$20
 268+ 9788 6F               ld l,a
 269+ 9789 38 04            jr c,3F
 270+ 978B 7C               ld a,h
 271+ 978C D6 08            sub 8
 272+ 978E 67               ld h,a
 273+ 978F 7C           3 ld a,h
 274+ 9790 FE 58            cp $58
 275+ 9792 28 02            jr z,4F
 276+ 9794 10 CB            djnz 1B
 277+ 9796 ED 7B F5 88  4 ld sp,(Stack)
 278+ 979A C9           	ret
 279+ 979B
 280+ 979B ED 73 F5 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 979F FD F9        	ld sp,iy
 282+ 97A1 06 08            ld b,8
 283+ 97A3 D1           1 pop de
 284+ 97A4 7B           	ld a,e
 285+ 97A5 AE           	xor (hl)
 286+ 97A6 77           	ld (hl),a
 287+ 97A7 23           	inc hl
 288+ 97A8 7A           	ld a,d
 289+ 97A9 AE           	xor (hl)
 290+ 97AA 77           	ld (hl),a
 291+ 97AB 2B           	dec hl
 292+ 97AC 24             	inc h
 293+ 97AD 7C               ld a,h
 294+ 97AE E6 07            and 7
 295+ 97B0 20 0A            jr nz,2F
 296+ 97B2 7D               ld a,l
 297+ 97B3 C6 20            add a,$20
 298+ 97B5 6F               ld l,a
 299+ 97B6 38 04            jr c,2F
 300+ 97B8 7C               ld a,h
 301+ 97B9 D6 08            sub 8
 302+ 97BB 67               ld h,a
 303+ 97BC 7C           2 ld a,h
 304+ 97BD FE 58            cp $58
 305+ 97BF 28 21            jr z,4F
 306+ 97C1 D1               pop de
 307+ 97C2 7A           	ld a,d
 308+ 97C3 AE           	xor (hl)
 309+ 97C4 77           	ld (hl),a
 310+ 97C5 23           	inc hl
 311+ 97C6 D1               pop de
 312+ 97C7 7B           	ld a,e
 313+ 97C8 AE           	xor (hl)
 314+ 97C9 77           	ld (hl),a
 315+ 97CA 2B           	dec hl
 316+ 97CB 24           	inc h
 317+ 97CC 7C               ld a,h
 318+ 97CD E6 07            and 7
 319+ 97CF 20 0A            jr nz,3F
 320+ 97D1 7D               ld a,l
 321+ 97D2 C6 20            add a,$20
 322+ 97D4 6F               ld l,a
 323+ 97D5 38 04            jr c,3F
 324+ 97D7 7C               ld a,h
 325+ 97D8 D6 08            sub 8
 326+ 97DA 67               ld h,a
 327+ 97DB 7C           3 ld a,h
 328+ 97DC FE 58            cp $58
 329+ 97DE 28 02            jr z,4F
 330+ 97E0 10 C1            djnz 1B
 331+ 97E2 ED 7B F5 88  4 ld sp,(Stack)
 332+ 97E6 C9           	ret
 333+ 97E7
 334+ 97E7 ED 73 F5 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 97EB FD F9        	ld sp,iy
 336+ 97ED 06 08            ld b,8
 337+ 97EF D1           1 pop de
 338+ 97F0 7B           	ld a,e
 339+ 97F1 AE           	xor (hl)
 340+ 97F2 77           	ld (hl),a
 341+ 97F3 24            	inc h
 342+ 97F4 7C               ld a,h
 343+ 97F5 E6 07            and 7
 344+ 97F7 20 0A            jr nz,2F
 345+ 97F9 7D               ld a,l
 346+ 97FA C6 20            add a,$20
 347+ 97FC 6F               ld l,a
 348+ 97FD 38 04            jr c,2F
 349+ 97FF 7C               ld a,h
 350+ 9800 D6 08            sub 8
 351+ 9802 67               ld h,a
 352+ 9803 7C           2 ld a,h
 353+ 9804 FE 58            cp $58
 354+ 9806 28 1C            jr z,4F
 355+ 9808 D1               pop de
 356+ 9809 7A           	ld a,d
 357+ 980A AE           	xor (hl)
 358+ 980B 77           	ld (hl),a
 359+ 980C 24           	inc h
 360+ 980D 7C               ld a,h
 361+ 980E E6 07            and 7
 362+ 9810 20 0A            jr nz,3F
 363+ 9812 7D               ld a,l
 364+ 9813 C6 20            add a,$20
 365+ 9815 6F               ld l,a
 366+ 9816 38 04            jr c,3F
 367+ 9818 7C               ld a,h
 368+ 9819 D6 08            sub 8
 369+ 981B 67               ld h,a
 370+ 981C 7C           3 ld a,h
 371+ 981D FE 58            cp $58
 372+ 981F 28 03            jr z,4F
 373+ 9821 D1               pop de
 374+ 9822 10 CB            djnz 1B
 375+ 9824 ED 7B F5 88  4 ld sp,(Stack)
 376+ 9828 C9           	ret
 377+ 9829
 378+ 9829              ; ---------------------------------------------------
 379+ 9829              ;
 380+ 9829              ;   27/02/23
 381+ 9829              ;
 382+ 9829              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9829              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9829              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9829
 386+ 9829 ED 73 F5 88  Pinta_Disparo ld (Stack),sp
 387+ 982D FD F9            ld sp,iy
 388+ 982F 06 03            ld b,3
 389+ 9831 D1           1 pop de
 390+ 9832 7B               ld a,e
 391+ 9833 AE               xor (hl)
 392+ 9834 77               ld (hl),a
 393+ 9835 23               inc hl
 394+ 9836 7A               ld a,d
 395+ 9837 AE               xor (hl)
 396+ 9838 77               ld (hl),a
 397+ 9839 2B               dec hl
 398+ 983A
 399+ 983A 24               inc h
 400+ 983B 7C               ld a,h
 401+ 983C E6 07            and 7
 402+ 983E 20 0A            jr nz,2F
 403+ 9840 7D               ld a,l
 404+ 9841 C6 20            add a,$20
 405+ 9843 6F               ld l,a
 406+ 9844 38 04            jr c,2F
 407+ 9846 7C               ld a,h
 408+ 9847 D6 08            sub 8
 409+ 9849 67               ld h,a
 410+ 984A 7C           2 ld a,h
 411+ 984B FE 58            cp $58
 412+ 984D 28 02            jr z,3F
 413+ 984F
 414+ 984F 10 E0            djnz 1B
 415+ 9851 ED 7B F5 88  3 ld sp,(Stack)
 416+ 9855 C9               ret
 417+ 9856
# file closed: Rutinas_de_impresion_sprites.asm
1513  9856              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9856              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9856              ;
   3+ 9856              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9856              ;
   5+ 9856              ; *****************************************************************************************************************************************************************************************
   6+ 9856              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9856
   8+ 9856 7C           calcula_tercio ld a,h
   9+ 9857 E6 18        	and $18
  10+ 9859 CB 2F        	sra a
  11+ 985B CB 2F        	sra a
  12+ 985D CB 2F        	sra a
  13+ 985F C9           	ret
  14+ 9860
# file closed: calcula_tercio.asm
1514  9860              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9860              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9860              ;
   3+ 9860              ;
   4+ 9860              ;	CLS.
   5+ 9860              ;
   6+ 9860              ;	Limpia la pantalla y define sus atributos.
   7+ 9860              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9860              ;
   9+ 9860              ;	COLORES: 0 ..... NEGRO
  10+ 9860              ;    		 1 ..... AZUL
  11+ 9860              ; 			 2 ..... ROJO
  12+ 9860              ;			 3 ..... MAGENTA
  13+ 9860              ; 			 4 ..... VERDE
  14+ 9860              ; 			 5 ..... CIAN
  15+ 9860              ;			 6 ..... AMARILLO
  16+ 9860              ; 			 7 ..... BLANCO
  17+ 9860              ;
  18+ 9860              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9860              ;
  20+ 9860              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9860
  22+ 9860
  23+ 9860 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9863 11 01 40     	LD DE,$4001
  25+ 9866 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9869 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 986B ED B0        	LDIR
  28+ 986D 01 FF 02     	LD BC,767
  29+ 9870 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9871 ED B0        	LDIR
  31+ 9873 C9           	ret
  32+ 9874
# file closed: Cls.asm
1515  9874              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9874              ; ******************************************************************************************************************************************************************************************
   2+ 9874              ;
   3+ 9874              ;   20/05/23
   4+ 9874              ;
   5+ 9874              ;	Recompone_posicion_inicio
   6+ 9874              ;
   7+ 9874              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9874              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9874              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9874              ;	_ a una u otra rutina.
  11+ 9874
  12+ 9874              Recompone_posicion_inicio
  13+ 9874
  14+ 9874 2A B9 88     	ld hl,(Posicion_inicio)
  15+ 9877 7D           	ld a,l
  16+ 9878 E6 1F        	and $1f
  17+ 987A 28 16        	jr z,1F
  18+ 987C
  19+ 987C FE 1F        	cp $1f
  20+ 987E 28 0D        	jr z,3F
  21+ 9880
  22+ 9880 21 E2 88     	ld hl,Ctrl_2
  23+ 9883 CB C6        	set 0,(hl)
  24+ 9885 2A AB 88     	ld hl,(Puntero_objeto)
  25+ 9888 22 E5 88     	ld (Repone_puntero_objeto),hl
  26+ 988B 18 08        	jr 2F
  27+ 988D
  28+ 988D CD 32 9A     3 call Mov_left
  29+ 9890 18 03        	jr 2F
  30+ 9892
  31+ 9892 CD 14 99     1 call Mov_right
  32+ 9895 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9898 22 AB 88     	ld (Puntero_objeto),hl
  34+ 989B C9           	ret
  35+ 989C
  36+ 989C              ; ******************************************************************************************************************************************************************************************
  37+ 989C              ;
  38+ 989C              ;   27/05/23
  39+ 989C              ;
  40+ 989C              ;	Mov_down
  41+ 989C              ;
  42+ 989C              ; 	Mueve el Sprite X px hacia abajo.
  43+ 989C              ;
  44+ 989C              ;
  45+ 989C              Mov_down
  46+ 989C
  47+ 989C CD 02 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 989F              ;																	; _ repone (Puntero_objeto).
  49+ 989F 21 D1 88     	ld hl,Ctrl_0
  50+ 98A2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98A4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98A4              ; 																	; _ en el caso de que no lo haya.
  53+ 98A4 3A BF 88     	ld a,(Vel_down)
  54+ 98A7 47           	ld b,a
  55+ 98A8 2A A9 88         ld hl,(Posicion_actual)
  56+ 98AB CD 56 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98AE E6 02        	and 2
  58+ 98B0 28 13        	jr z,1F
  59+ 98B2
  60+ 98B2              ; Nos encontramos en el último tercio de pantalla.
  61+ 98B2              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98B2
  63+ 98B2 7C           	ld a,h
  64+ 98B3 FE 57        	cp $57
  65+ 98B5 20 0E        	jr nz,1F
  66+ 98B7
  67+ 98B7 7D           	ld a,l
  68+ 98B8 C6 20        	add $20
  69+ 98BA 30 09        	jr nc,1F
  70+ 98BC
  71+ 98BC              ; ------------------------------
  72+ 98BC              ;	call Reaparece_arriba
  73+ 98BC F3           	di
  74+ 98BD 18 FE        	jr $
  75+ 98BF FB           	ei
  76+ 98C0
  77+ 98C0 CD BF 9B     	call Reinicio
  78+ 98C3              ; ------------------------------
  79+ 98C3
  80+ 98C3 18 08        	jr 3F
  81+ 98C5 CD 3D 95     1 call NextScan
  82+ 98C8 22 A9 88     	ld (Posicion_actual),hl
  83+ 98CB 10 DE            djnz 2B
  84+ 98CD CD E5 9B     3 call Genera_coordenadas
  85+ 98D0 C9           	ret
  86+ 98D1
  87+ 98D1              ; ******************************************************************************************************************************************************************************************
  88+ 98D1              ;
  89+ 98D1              ;   27/05/23
  90+ 98D1              ;
  91+ 98D1              ;	Mov_up
  92+ 98D1              ;
  93+ 98D1              ; 	Mueve el Sprite hacia arriba.
  94+ 98D1              ;
  95+ 98D1              ;
  96+ 98D1              Mov_up
  97+ 98D1
  98+ 98D1 CD 02 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  99+ 98D4              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 100+ 98D4 21 D1 88     	ld hl,Ctrl_0
 101+ 98D7 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 102+ 98D9              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 103+ 98D9              ; 																		; _ en el caso de que no lo haya.
 104+ 98D9 3A BE 88     	ld a,(Vel_up)
 105+ 98DC 47           	ld b,a
 106+ 98DD 2A A9 88     	ld hl,(Posicion_actual)
 107+ 98E0 CD 56 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 108+ 98E3 A7           	and a
 109+ 98E4 20 10        	jr nz,1F
 110+ 98E6
 111+ 98E6              ; Nos encontramos en el 1er tercio de pantalla.
 112+ 98E6              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 113+ 98E6
 114+ 98E6 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 115+ 98E7 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 116+ 98E9 20 0B            jr nz,1F
 117+ 98EB 7D               ld a,l
 118+ 98EC D6 20            sub $20
 119+ 98EE 30 06            jr nc,1F
 120+ 98F0 25               dec h
 121+ 98F1
 122+ 98F1              ; -----------------------------
 123+ 98F1 CD A0 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 124+ 98F4              ;	call Reinicio
 125+ 98F4              ; -----------------------------
 126+ 98F4
 127+ 98F4 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 128+ 98F6 CD 4C 95     1 call PreviousScan
 129+ 98F9 22 A9 88     	ld (Posicion_actual),hl
 130+ 98FC 10 E2            djnz 3B
 131+ 98FE CD E5 9B     2 call Genera_coordenadas
 132+ 9901 C9           	ret
 133+ 9902
 134+ 9902              ; -----------------------------
 135+ 9902              ;
 136+ 9902              ;	27/5/23
 137+ 9902              ;
 138+ 9902              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 139+ 9902              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 140+ 9902              ;
 141+ 9902              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 142+ 9902              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 143+ 9902              ;
 144+ 9902              ;	Modifica: A y (Puntero_objeto).
 145+ 9902
 146+ 9902 3A E2 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 147+ 9905 CB 47        	bit 0,a
 148+ 9907 C8           	ret z
 149+ 9908 CB 87        	res 0,a
 150+ 990A 32 E2 88     	ld (Ctrl_2),a
 151+ 990D 2A E5 88     	ld hl,(Repone_puntero_objeto)
 152+ 9910 22 AB 88     	ld (Puntero_objeto),hl
 153+ 9913 C9           	ret
 154+ 9914
 155+ 9914              ; ******************************************************************************************************************************************************************************************
 156+ 9914              ;
 157+ 9914              ;	19/10/22
 158+ 9914              ;
 159+ 9914              ;	Mov_right.
 160+ 9914              ;
 161+ 9914              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 162+ 9914              ;
 163+ 9914
 164+ 9914 21 D1 88     Mov_right ld hl,Ctrl_0
 165+ 9917 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 166+ 9919              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 167+ 9919              ; 																	; _ en el caso de que no lo haya.
 168+ 9919 3A D1 88     	ld a,(Ctrl_0)
 169+ 991C CB 77        	bit 6,a
 170+ 991E 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 171+ 9920
 172+ 9920 CD 4E 9B     	call Stop_Amadeus_right
 173+ 9923 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 174+ 9924 18 4D        	jr 8F
 175+ 9926
 176+ 9926 3A AD 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 177+ 9929 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 178+ 992B 20 46        	jr nz,8F
 179+ 992D
 180+ 992D 3A AF 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 181+ 9930 A7           	and a 															; _[3] para continuar con el DESPLZ.
 182+ 9931 28 40        	jr z,8F
 183+ 9933
 184+ 9933              ; ---------- ---------- ----------
 185+ 9933              ;
 186+ 9933              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 187+ 9933
 188+ 9933 3A BD 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 189+ 9936 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 190+ 9938 28 11        	jr z,1F
 191+ 993A 38 06        	jr c,6F
 192+ 993C FE 04        	cp 4
 193+ 993E 28 14        	jr z,7F
 194+ 9940 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 195+ 9942
 196+ 9942              ; ---------- ---------- ----------
 197+ 9942              ;
 198+ 9942              ; Perfiles de velocidad
 199+ 9942              ;
 200+ 9942
 201+ 9942 3A AF 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 202+ 9945 FE FE        	cp $fe
 203+ 9947 20 2A        	jr nz,8F
 204+ 9949 18 10        	jr 3F
 205+ 994B 3A AF 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 206+ 994E FE FD        	cp $fd
 207+ 9950 20 21        	jr nz,8F
 208+ 9952 18 07        	jr 3F
 209+ 9954 3A AF 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 210+ 9957 FE FB        	cp $fb
 211+ 9959 20 18        	jr nz,8F
 212+ 995B
 213+ 995B              ; ---------- ---------- ----------
 214+ 995B
 215+ 995B              3
 216+ 995B CD 8E 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 217+ 995E              ;	call Reinicio
 218+ 995E
 219+ 995E              ; ---------- ---------- ----------
 220+ 995E              ;
 221+ 995E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 222+ 995E
 223+ 995E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 224+ 9960 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 225+ 9961 CD 7A 99     	call DESPLZ_DER
 226+ 9964 C1           	pop bc
 227+ 9965 10 F9        	djnz 5B
 228+ 9967 2A A9 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 229+ 996A 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 230+ 996B 22 A9 88     	ld (Posicion_actual),hl
 231+ 996E CD E5 9B     	call Genera_coordenadas
 232+ 9971 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 233+ 9973
 234+ 9973              ; ---------- ---------- ----------
 235+ 9973
 236+ 9973 2A A9 88     8 ld hl,(Posicion_actual)
 237+ 9976 CD 7A 99     	call DESPLZ_DER
 238+ 9979 C9           2 ret
 239+ 997A
 240+ 997A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 241+ 997A              ;
 242+ 997A              ;	22/9/22
 243+ 997A              ;
 244+ 997A
 245+ 997A CD 89 99     DESPLZ_DER call Desplaza_derecha
 246+ 997D CD D5 99         call modifica_parametros_1er_DESPLZ_2
 247+ 9980 CD FE 99         call Ciclo_completo
 248+ 9983 21 D1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 249+ 9986 CB FE        	set 7,(hl)
 250+ 9988 C9           	ret
 251+ 9989
 252+ 9989              ; ******************************************************************************************************************************************************************************************
 253+ 9989              ;	15/02/23
 254+ 9989              ;
 255+ 9989
 256+ 9989 3A BD 88     Desplaza_derecha ld a,(Vel_right)
 257+ 998C 47           	ld b,a
 258+ 998D 2A B5 88     	ld hl,(Puntero_DESPLZ_der)
 259+ 9990 23           1 inc hl
 260+ 9991 23           	inc hl
 261+ 9992 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 262+ 9994 22 B5 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 263+ 9997 CD DB 8B     	call Extrae_address
 264+ 999A 22 AB 88     	ld (Puntero_objeto),hl
 265+ 999D
 266+ 999D              ; Modifica (Puntero_DESPLZ_izq).
 267+ 999D
 268+ 999D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 269+ 999D              ; Cuántos movimientos hemos hecho ??
 270+ 999D              ; DE contiene (Puntero_DESPLZ_der).
 271+ 999D
 272+ 999D 2A B1 88     7 ld hl,(Indice_Sprite_der)
 273+ 99A0 EB           	ex de,hl
 274+ 99A1 A7           	and a
 275+ 99A2 ED 52        	sbc hl,de
 276+ 99A4 CB 3D        	srl l
 277+ 99A6 3E 08        6 ld a,8
 278+ 99A8 95           	sub l
 279+ 99A9 30 1E        	jr nc,3F
 280+ 99AB
 281+ 99AB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 282+ 99AB              ; B="0".
 283+ 99AB
 284+ 99AB 04           4 inc b
 285+ 99AC 3C           	inc a
 286+ 99AD 20 FC        	jr nz,4B
 287+ 99AF 78           	ld a,b
 288+ 99B0 08           	ex af,af
 289+ 99B1 2A B1 88     	ld hl,(Indice_Sprite_der)
 290+ 99B4 23           5 inc hl
 291+ 99B5 23           	inc hl
 292+ 99B6 10 FC        	djnz 5B
 293+ 99B8 22 B5 88     	ld (Puntero_DESPLZ_der),hl
 294+ 99BB CD DB 8B     	call Extrae_address
 295+ 99BE 22 AB 88     	ld (Puntero_objeto),hl
 296+ 99C1
 297+ 99C1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 298+ 99C1              ; _(Posicion_actual).
 299+ 99C1
 300+ 99C1 21 A9 88     	ld hl,Posicion_actual
 301+ 99C4 34           	inc (hl)
 302+ 99C5 08               ex af,af
 303+ 99C6 6F           	ld l,a
 304+ 99C7 18 DD        	jr 6B
 305+ 99C9
 306+ 99C9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 307+ 99C9
 308+ 99C9 47           3 ld b,a
 309+ 99CA 2A B3 88     	ld hl,(Indice_Sprite_izq)
 310+ 99CD 23           2 inc hl
 311+ 99CE 23           	inc hl
 312+ 99CF 10 FC        	djnz 2B
 313+ 99D1 22 B7 88     	ld (Puntero_DESPLZ_izq),hl
 314+ 99D4 C9           8 ret
 315+ 99D5
 316+ 99D5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 317+ 99D5              ;
 318+ 99D5              ;	24/7/22
 319+ 99D5              ;
 320+ 99D5              ;	modifica_parametros_1er_DESPLZ_2
 321+ 99D5              ;
 322+ 99D5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 323+ 99D5              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 324+ 99D5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 325+ 99D5
 326+ 99D5 3A AF 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 327+ 99D8 A7           	and a
 328+ 99D9 20 1F        	jr nz,1F
 329+ 99DB D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 330+ 99DD 32 AF 88         ld (CTRL_DESPLZ),a
 331+ 99E0
 332+ 99E0 21 A8 88     	ld hl,Columns
 333+ 99E3 34           	inc (hl)
 334+ 99E4 3A BB 88     	ld a,(Cuad_objeto)
 335+ 99E7 E6 01        	and 1
 336+ 99E9 28 0F        	jr z,1F
 337+ 99EB 2A A9 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 338+ 99EE 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 339+ 99EF 22 A9 88     	ld (Posicion_actual),hl
 340+ 99F2 CD E5 9B     	call Genera_coordenadas
 341+ 99F5 CD 5A 9B     	call Inc_CTRL_DESPLZ
 342+ 99F8 18 03        	jr 2F
 343+ 99FA CD 5A 9B     1 call Inc_CTRL_DESPLZ
 344+ 99FD C9           2 ret
 345+ 99FE
 346+ 99FE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 347+ 99FE              ;
 348+ 99FE              ;	24/7/22
 349+ 99FE              ;
 350+ 99FE              ;	Ciclo_completo.
 351+ 99FE              ;
 352+ 99FE              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 353+ 99FE              ;
 354+ 99FE              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 355+ 99FE              ; 	Decrementamos (Columns).
 356+ 99FE              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 357+ 99FE              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 358+ 99FE
 359+ 99FE
 360+ 99FE 3A AF 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 361+ 9A01 FE FF        	cp $ff
 362+ 9A03 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 363+ 9A05 E6 F0        	and $f0
 364+ 9A07 20 28        	jr nz,3F
 365+ 9A09
 366+ 9A09              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 367+ 9A09
 368+ 9A09 3A AF 88     	ld a,(CTRL_DESPLZ)
 369+ 9A0C 47           	ld b,a
 370+ 9A0D 3E F8        	ld a,$f8
 371+ 9A0F 80           	add b
 372+ 9A10 32 AF 88     	ld (CTRL_DESPLZ),a
 373+ 9A13 18 1C        	jr 3F
 374+ 9A15 21 A8 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 375+ 9A18 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 376+ 9A19 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 377+ 9A1A 32 AF 88     	ld (CTRL_DESPLZ),a
 378+ 9A1D 3A BB 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 379+ 9A20 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 380+ 9A22 20 0A        	jr nz,2F
 381+ 9A24 2A A9 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 382+ 9A27 23           	inc hl
 383+ 9A28 22 A9 88     	ld (Posicion_actual),hl
 384+ 9A2B CD E5 9B     	call Genera_coordenadas
 385+ 9A2E
 386+ 9A2E              ; Inicia el puntero de Sprite.
 387+ 9A2E
 388+ 9A2E CD F2 8B     2 call Inicia_puntero_objeto_der
 389+ 9A31 C9           3 ret
 390+ 9A32
 391+ 9A32              ; ******************************************************************************************************************************************************************************************
 392+ 9A32              ;
 393+ 9A32              ;	15/02/23
 394+ 9A32              ;
 395+ 9A32              ;	Mov_left.
 396+ 9A32              ;
 397+ 9A32              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 398+ 9A32              ;
 399+ 9A32              Mov_left
 400+ 9A32
 401+ 9A32 21 D1 88     	ld hl,Ctrl_0
 402+ 9A35 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 403+ 9A37              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 404+ 9A37              ; 																	; _ en el caso de que no lo haya.
 405+ 9A37 3A D1 88     	ld a,(Ctrl_0)
 406+ 9A3A CB 77        	bit 6,a
 407+ 9A3C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 408+ 9A3E
 409+ 9A3E CD 54 9B     	call Stop_Amadeus_left
 410+ 9A41 C8           	ret z
 411+ 9A42 20 4A        	jr nz,8F
 412+ 9A44
 413+ 9A44 3A AD 88     11 ld a,(Coordenada_X)
 414+ 9A47 A7           	and a
 415+ 9A48 20 44        	jr nz,8F
 416+ 9A4A
 417+ 9A4A 3A AF 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 418+ 9A4D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 419+ 9A4E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 420+ 9A50
 421+ 9A50              ; ---------- ---------- ----------
 422+ 9A50
 423+ 9A50 3A BC 88     	ld a,(Vel_left)
 424+ 9A53 FE 02        	cp 2
 425+ 9A55 28 0F        	jr z,1F
 426+ 9A57 38 04        	jr c,6F
 427+ 9A59 FE 04        	cp 4
 428+ 9A5B 28 12        	jr z,7F
 429+ 9A5D
 430+ 9A5D              ; ---------- ---------- ----------
 431+ 9A5D
 432+ 9A5D 3A AF 88     6 ld a,(CTRL_DESPLZ)
 433+ 9A60 FE F8        	cp $f8
 434+ 9A62 20 2A        	jr nz,8F
 435+ 9A64 18 10        	jr 4F
 436+ 9A66 3A AF 88     1 ld a,(CTRL_DESPLZ)
 437+ 9A69 FE F9        	cp $f9
 438+ 9A6B 20 21        	jr nz,8F
 439+ 9A6D 18 07        	jr 4F
 440+ 9A6F 3A AF 88     7 ld a,(CTRL_DESPLZ)
 441+ 9A72 FE FB        	cp $fb
 442+ 9A74 20 18        	jr nz,8F
 443+ 9A76
 444+ 9A76              ; ---------- ---------- ----------
 445+ 9A76
 446+ 9A76              4
 447+ 9A76 CD 7C 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 448+ 9A79              ;	call Reinicio
 449+ 9A79
 450+ 9A79              ; ---------- ---------- ----------
 451+ 9A79
 452+ 9A79 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 453+ 9A7B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 454+ 9A7C
 455+ 9A7C              ;	ld hl,(Indice_Sprite_izq)
 456+ 9A7C              ;	ld (Puntero_DESPLZ_izq),hl
 457+ 9A7C
 458+ 9A7C CD 95 9A     	call DESPLZ_IZQ
 459+ 9A7F C1           	pop bc
 460+ 9A80 10 F9        	djnz 5B
 461+ 9A82 2A A9 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 462+ 9A85 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 463+ 9A86 22 A9 88     	ld (Posicion_actual),hl
 464+ 9A89 CD E5 9B     	call Genera_coordenadas
 465+ 9A8C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 466+ 9A8E
 467+ 9A8E              ; ---------- ---------- ----------
 468+ 9A8E
 469+ 9A8E              ; Movemos, no hay recolocación.
 470+ 9A8E
 471+ 9A8E 2A A9 88     8 ld hl,(Posicion_actual)
 472+ 9A91 CD 95 9A     	call DESPLZ_IZQ
 473+ 9A94 C9           2 ret
 474+ 9A95
 475+ 9A95              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 476+ 9A95              ;
 477+ 9A95              ;	22/9/22
 478+ 9A95
 479+ 9A95              DESPLZ_IZQ
 480+ 9A95
 481+ 9A95 CD A4 9A     	call Desplaza_izquierda
 482+ 9A98 CD F0 9A         call modifica_parametros_1er_DESPLZ
 483+ 9A9B CD 18 9B     	call Ciclo_completo_2
 484+ 9A9E 21 D1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 485+ 9AA1 CB BE        	res 7,(hl)
 486+ 9AA3 C9           	ret
 487+ 9AA4
 488+ 9AA4              Desplaza_izquierda
 489+ 9AA4
 490+ 9AA4 3A BC 88     	ld a,(Vel_left)
 491+ 9AA7 47           	ld b,a
 492+ 9AA8 2A B7 88     	ld hl,(Puntero_DESPLZ_izq)
 493+ 9AAB 23           1 inc hl
 494+ 9AAC 23           	inc hl
 495+ 9AAD 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 496+ 9AAF 22 B7 88     	ld (Puntero_DESPLZ_izq),hl
 497+ 9AB2 CD DB 8B     	call Extrae_address
 498+ 9AB5 22 AB 88     	ld (Puntero_objeto),hl
 499+ 9AB8
 500+ 9AB8              ; Modifica (Puntero_DESPLZ_der).
 501+ 9AB8
 502+ 9AB8              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 503+ 9AB8              ; Cuántos movimientos hemos hecho ??
 504+ 9AB8              ; DE contiene (Puntero_DESPLZ_izq).
 505+ 9AB8
 506+ 9AB8 2A B3 88     7 ld hl,(Indice_Sprite_izq)
 507+ 9ABB EB           	ex de,hl
 508+ 9ABC A7           	and a
 509+ 9ABD ED 52        	sbc hl,de
 510+ 9ABF CB 3D        	srl l
 511+ 9AC1 3E 08        6 ld a,8
 512+ 9AC3 95           	sub l
 513+ 9AC4 30 1E        	jr nc,3F
 514+ 9AC6
 515+ 9AC6              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 516+ 9AC6              ; B="0".
 517+ 9AC6
 518+ 9AC6 04           4 inc b
 519+ 9AC7 3C           	inc a
 520+ 9AC8 20 FC        	jr nz,4B
 521+ 9ACA 78           	ld a,b
 522+ 9ACB 08           	ex af,af
 523+ 9ACC 2A B3 88     	ld hl,(Indice_Sprite_izq)
 524+ 9ACF 23           5 inc hl
 525+ 9AD0 23           	inc hl
 526+ 9AD1 10 FC        	djnz 5B
 527+ 9AD3 22 B7 88     	ld (Puntero_DESPLZ_izq),hl
 528+ 9AD6 CD DB 8B     	call Extrae_address
 529+ 9AD9 22 AB 88     	ld (Puntero_objeto),hl
 530+ 9ADC
 531+ 9ADC              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 532+ 9ADC              ; _(Posicion_actual).
 533+ 9ADC
 534+ 9ADC 21 A9 88     	ld hl,Posicion_actual
 535+ 9ADF 35           	dec (hl)
 536+ 9AE0 08           	ex af,af
 537+ 9AE1 6F           	ld l,a
 538+ 9AE2 18 DD        	jr 6B
 539+ 9AE4
 540+ 9AE4              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 541+ 9AE4
 542+ 9AE4 47           3 ld b,a
 543+ 9AE5 2A B1 88     	ld hl,(Indice_Sprite_der)
 544+ 9AE8 23           2 inc hl
 545+ 9AE9 23           	inc hl
 546+ 9AEA 10 FC        	djnz 2B
 547+ 9AEC 22 B5 88     	ld (Puntero_DESPLZ_der),hl
 548+ 9AEF C9           8 ret
 549+ 9AF0
 550+ 9AF0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 551+ 9AF0              ;
 552+ 9AF0              ;	modifica_parametros_1er_DESPLZ
 553+ 9AF0              ;
 554+ 9AF0              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 555+ 9AF0              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 556+ 9AF0              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 557+ 9AF0
 558+ 9AF0 3A AF 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 559+ 9AF3 A7           	and a
 560+ 9AF4 20 1E        	jr nz,1F
 561+ 9AF6 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 562+ 9AF7 32 AF 88         ld (CTRL_DESPLZ),a
 563+ 9AFA 21 A8 88     	ld hl,Columns
 564+ 9AFD 34           	inc (hl)
 565+ 9AFE 3A BB 88     	ld a,(Cuad_objeto)
 566+ 9B01 E6 01        	and 1
 567+ 9B03 20 0F        	jr nz,1F
 568+ 9B05 2A A9 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 569+ 9B08 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 570+ 9B09 22 A9 88     	ld (Posicion_actual),hl
 571+ 9B0C CD E5 9B     	call Genera_coordenadas
 572+ 9B0F CD 6B 9B     	call Dec_CTRL_DESPLZ
 573+ 9B12 18 03        	jr 2F
 574+ 9B14 CD 6B 9B     1 call Dec_CTRL_DESPLZ
 575+ 9B17 C9           2 ret
 576+ 9B18
 577+ 9B18              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 578+ 9B18
 579+ 9B18 3A AF 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 580+ 9B1B FE F7        	cp $f7
 581+ 9B1D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 582+ 9B1F 30 2C        	jr nc,3F
 583+ 9B21
 584+ 9B21              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 585+ 9B21
 586+ 9B21 06 00        	ld b,0
 587+ 9B23 04           4 inc b
 588+ 9B24 3C           	inc a
 589+ 9B25 FE F7        	cp $f7
 590+ 9B27 20 FA        	jr nz,4B
 591+ 9B29 3E FF        	ld a,$ff
 592+ 9B2B 90           	sub b
 593+ 9B2C 32 AF 88     	ld (CTRL_DESPLZ),a
 594+ 9B2F 18 1C        	jr 3F
 595+ 9B31
 596+ 9B31              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 597+ 9B31
 598+ 9B31 21 A8 88     1 ld hl,Columns
 599+ 9B34 35           	dec (hl)
 600+ 9B35 AF           	xor a
 601+ 9B36 32 AF 88     	ld (CTRL_DESPLZ),a
 602+ 9B39 3A BB 88     	ld a,(Cuad_objeto)
 603+ 9B3C E6 01        	and 1
 604+ 9B3E 28 0A        	jr z,2F
 605+ 9B40 2A A9 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 606+ 9B43 2B           	dec hl
 607+ 9B44 22 A9 88     	ld (Posicion_actual),hl
 608+ 9B47 CD E5 9B     	call Genera_coordenadas
 609+ 9B4A
 610+ 9B4A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 611+ 9B4A
 612+ 9B4A CD 05 8C     2 call Inicia_puntero_objeto_izq
 613+ 9B4D C9           3 ret
 614+ 9B4E
 615+ 9B4E              ; ---------- ---------- ---------- ---------- ---------- ----------
 616+ 9B4E              ;
 617+ 9B4E              ;	19/10/22
 618+ 9B4E              ;
 619+ 9B4E              ;	(cp 29) para un Amadeus de 3 Columns.
 620+ 9B4E              ;	(cp 30)   ""  ""    ""     2 Columns.
 621+ 9B4E
 622+ 9B4E 3A AD 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 623+ 9B51 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 624+ 9B53 C9           	ret
 625+ 9B54
 626+ 9B54              ; ---------- ---------- ---------- ---------- ---------- ----------
 627+ 9B54              ;
 628+ 9B54              ;	19/10/22
 629+ 9B54              ;
 630+ 9B54              ;	(cp 2) para un Amadeus de 3 Columns.
 631+ 9B54              ;	(cp 1)   ""  ""    ""     2 Columns.
 632+ 9B54
 633+ 9B54 3A AD 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 634+ 9B57 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 635+ 9B59 C9           	ret
 636+ 9B5A
 637+ 9B5A              ; ---------- ---------- ---------- ---------- ---------- ----------
 638+ 9B5A              ;
 639+ 9B5A              ;	24/7/22
 640+ 9B5A              ;
 641+ 9B5A              ;	Inc_CTRL_DESPLZ
 642+ 9B5A              ;
 643+ 9B5A              ;
 644+ 9B5A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 645+ 9B5A
 646+ 9B5A 21 AF 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 647+ 9B5D 3A BD 88     	ld a,(Vel_right)
 648+ 9B60 A7           	and a
 649+ 9B61 28 06        	jr z,1F
 650+ 9B63 47           	ld b,a
 651+ 9B64 34           3 inc (hl)
 652+ 9B65 10 FD        	djnz 3B
 653+ 9B67 18 01        	jr 2F
 654+ 9B69 34           1 inc (hl)
 655+ 9B6A C9           2 ret
 656+ 9B6B
 657+ 9B6B              ; ---------- ---------- ---------- ---------- ---------- ----------
 658+ 9B6B              ;
 659+ 9B6B              ;	5/2/23
 660+ 9B6B              ;
 661+ 9B6B              ;	Dec_CTRL_DESPLZ
 662+ 9B6B              ;
 663+ 9B6B              ;
 664+ 9B6B              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 665+ 9B6B
 666+ 9B6B 21 AF 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 667+ 9B6E 3A BC 88     	ld a,(Vel_left)
 668+ 9B71 A7           	and a
 669+ 9B72 28 06        	jr z,1F
 670+ 9B74 47           	ld b,a
 671+ 9B75 35           3 dec (hl)
 672+ 9B76 10 FD        	djnz 3B
 673+ 9B78 18 01        	jr 2F
 674+ 9B7A 35           1 dec (hl)
 675+ 9B7B C9           2 ret
 676+ 9B7C
 677+ 9B7C              ; ---------- ---------- ---------- ---------- ---------- ----------
 678+ 9B7C
 679+ 9B7C 2A A9 88     Reaparece_derecha ld hl,(Posicion_actual)
 680+ 9B7F 01 1F 00     	ld bc,31
 681+ 9B82 A7           	and a
 682+ 9B83 ED 4A        	adc hl,bc
 683+ 9B85 22 A9 88     	ld (Posicion_actual),hl
 684+ 9B88 21 D1 88     	ld hl,Ctrl_0														; $xxx1
 685+ 9B8B CB C6        	set 0,(hl)
 686+ 9B8D C9           	ret
 687+ 9B8E
 688+ 9B8E              ; ---------- ---------- ---------- ---------- ---------- ----------
 689+ 9B8E
 690+ 9B8E 2A A9 88     Reaparece_izquierda ld hl,(Posicion_actual)
 691+ 9B91 01 1F 00     	ld bc,31
 692+ 9B94 A7           	and a
 693+ 9B95 ED 42        	sbc hl,bc
 694+ 9B97 22 A9 88     	ld (Posicion_actual),hl 											; $xx1x
 695+ 9B9A 21 D1 88     	ld hl,Ctrl_0
 696+ 9B9D CB CE        	set 1,(hl)
 697+ 9B9F C9           	ret
 698+ 9BA0
 699+ 9BA0              ; ---------- ---------- ---------- ---------- ---------- ----------
 700+ 9BA0
 701+ 9BA0 24           Reaparece_abajo inc h
 702+ 9BA1 01 E0 17     	ld bc,$17e0
 703+ 9BA4 A7           	and a
 704+ 9BA5 ED 4A        	adc hl,bc
 705+ 9BA7 22 A9 88     	ld (Posicion_actual),hl
 706+ 9BAA 21 D1 88     	ld hl,Ctrl_0
 707+ 9BAD CB D6        	set 2,(hl)
 708+ 9BAF C9           	ret
 709+ 9BB0
 710+ 9BB0              ; ---------- ---------- ---------- ---------- ---------- ----------
 711+ 9BB0
 712+ 9BB0 01 E0 17     Reaparece_arriba ld bc,$17e0
 713+ 9BB3 A7           	and a
 714+ 9BB4 ED 42        	sbc hl,bc
 715+ 9BB6 22 A9 88     	ld (Posicion_actual),hl
 716+ 9BB9 21 D1 88     	ld hl,Ctrl_0
 717+ 9BBC CB DE        	set 3,(hl)
 718+ 9BBE C9           	ret
 719+ 9BBF
 720+ 9BBF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 721+ 9BBF              ;
 722+ 9BBF              ;	15/07/23
 723+ 9BBF
 724+ 9BBF              Reinicio
 725+ 9BBF
 726+ 9BBF              ; Vamos a reiniciar los punteros y variables de movimiento.
 727+ 9BBF
 728+ 9BBF AF           	xor a
 729+ 9BC0 21 D6 88     	ld hl,Puntero_indice_mov_bucle
 730+ 9BC3 CD E1 9B     	call Limpia_contenido_hl
 731+ 9BC6
 732+ 9BC6 21 A9 88     	ld hl,Posicion_actual
 733+ 9BC9 CD E1 9B     	call Limpia_contenido_hl
 734+ 9BCC
 735+ 9BCC CD 11 9F     	call Inicializa_Puntero_indice_mov
 736+ 9BCF CD 9B 9E     	call Inicia_Puntero_mov
 737+ 9BD2
 738+ 9BD2 21 D8 88     	ld hl,Incrementa_puntero
 739+ 9BD5 06 05        	ld b,5
 740+ 9BD7 77           1 ld (hl),a
 741+ 9BD8 23           	inc hl
 742+ 9BD9 10 FC        	djnz 1B
 743+ 9BDB
 744+ 9BDB 21 E2 88     	ld hl,Ctrl_2
 745+ 9BDE CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 746+ 9BE0
 747+ 9BE0 C9           	ret
 748+ 9BE1
 749+ 9BE1 77           Limpia_contenido_hl	ld (hl),a
 750+ 9BE2 23           	inc hl
 751+ 9BE3 77           	ld (hl),a
 752+ 9BE4 C9           	ret
 753+ 9BE5
 754+ 9BE5
# file closed: Direcciones.asm
1516  9BE5              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9BE5              ; ------------------------------------------------------------------------
   2+ 9BE5              ;
   3+ 9BE5              ;	02/04/23
   4+ 9BE5              ;
   5+ 9BE5              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9BE5              ;	Fila superior "0", Columna izquierda "0".
   7+ 9BE5              ;
   8+ 9BE5              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9BE5              ;
  10+ 9BE5              ;	Modifica: A,BC y DE.
  11+ 9BE5
  12+ 9BE5 C5           Genera_coordenadas push bc
  13+ 9BE6 E5           	push hl
  14+ 9BE7 D5           	push de
  15+ 9BE8
  16+ 9BE8 2A A9 88     	ld hl,(Posicion_actual)
  17+ 9BEB
  18+ 9BEB 7D           	ld a,l
  19+ 9BEC E6 1F        	and $1f
  20+ 9BEE 32 AD 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9BF1
  22+ 9BF1 CD 56 98     	call calcula_tercio
  23+ 9BF4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9BF5
  25+ 9BF5 1E 00        	ld e,0
  26+ 9BF7 7D           	ld a,l
  27+ 9BF8 E6 E0        	and $e0
  28+ 9BFA 28 01        	jr z,1F
  29+ 9BFC 04           	inc b
  30+ 9BFD
  31+ 9BFD 04           1 inc b
  32+ 9BFE 05           	dec b
  33+ 9BFF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C01              ;														; _ , salimos.
  35+ 9C01 1C           3 inc e
  36+ 9C02 D6 20        	sub 32
  37+ 9C04 20 FB        	jr nz,3B
  38+ 9C06 10 F5        	djnz 1B
  39+ 9C08
  40+ 9C08 7B           2 ld a,e
  41+ 9C09 32 AE 88     	ld (Coordenada_y),a
  42+ 9C0C
  43+ 9C0C D1           	pop de
  44+ 9C0D E1           	pop hl
  45+ 9C0E C1           	pop bc
  46+ 9C0F
  47+ 9C0F C9           	ret
  48+ 9C10
  49+ 9C10              ; ------------------------------------------------------------------------
  50+ 9C10              ;	28/05/23
  51+ 9C10              ;
  52+ 9C10              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C10              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C10              ;
  55+ 9C10              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C10              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C10              ;
  58+ 9C10              ;		DE="$120d"
  59+ 9C10              ;
  60+ 9C10              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C10              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C10              ;
  63+ 9C10              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C10
  65+ 9C10              ;	Modifica: A,BC y DE.
  66+ 9C10
  67+ 9C10
  68+ 9C10              Genera_coordenadas_disparo
  69+ 9C10
  70+ 9C10              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C10
  72+ 9C10 7D           	ld a,l
  73+ 9C11 E6 1F        	and $1f
  74+ 9C13 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C14 CD 56 98     	call calcula_tercio
  76+ 9C17 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C18 1E 00        	ld e,0
  78+ 9C1A 7D           	ld a,l
  79+ 9C1B E6 E0        	and $e0
  80+ 9C1D 28 01        	jr z,1F
  81+ 9C1F 04           	inc b
  82+ 9C20 1C           1 inc e
  83+ 9C21 D6 20        	sub 32
  84+ 9C23 20 FB        	jr nz,1B
  85+ 9C25 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C27 C9           	ret
  87+ 9C28
# file closed: Genera_coordenadas.asm
1517  9C28              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C28              ; Relojes y temporizaciones.
   2+ 9C28
   3+ 9C28              ; ------------------------------------------------------
   4+ 9C28              ;
   5+ 9C28              ;	16/7/23
   6+ 9C28              ;
   7+ 9C28              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C28              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C28              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C28              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C28              ;
  12+ 9C28              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C28              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C28
  15+ 9C28              ; Disparo_entidad db 1
  16+ 9C28              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C28              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C28
  19+ 9C28              Habilita_disparos
  20+ 9C28
  21+ 9C28 7E           	ld a,(hl)
  22+ 9C29 A7           	and a
  23+ 9C2A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C2B
  25+ 9C2B EB           	ex de,hl
  26+ 9C2C
  27+ 9C2C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C2D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C2E
  30+ 9C2E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C2E
  32+ 9C2E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C2F 7E           	ld a,(hl)
  34+ 9C30 23           	inc hl
  35+ 9C31 77           	ld (hl),a
  36+ 9C32
  37+ 9C32 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C33 3E 01        	ld a,1
  39+ 9C35 77           	ld (hl),a
  40+ 9C36 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1518  9C37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C37
   2+ 9C37
   3+ 9C37              ;   07/07/23
   4+ 9C37              ;
   5+ 9C37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C37              ;
   7+ 9C37              ;   Codificación:
   8+ 9C37              ;
   9+ 9C37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C37              ;
  11+ 9C37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C37              ;
  13+ 9C37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C37              ;
  15+ 9C37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C37              ;
  17+ 9C37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C37              ;                               ..... %01000010 Vel_up 4
  19+ 9C37              ;                                               Vel_down 2
  20+ 9C37              ;                               ..... $42
  21+ 9C37              ;
  22+ 9C37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C37              ;
  24+ 9C37              ;                               ..... %01000010 Vel_left 4
  25+ 9C37              ;                                               Vel_right 2
  26+ 9C37              ;                               ..... $42
  27+ 9C37              ;
  28+ 9C37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C37              ;
  30+ 9C37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C37              ;
  32+ 9C37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C37              ;
  34+ 9C37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C37              ;                                     $53
  36+ 9C37              ;
  37+ 9C37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C37              ;
  39+ 9C37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C37              ;
  42+ 9C37              ;                       Arriba ..... $81
  43+ 9C37              ;                       Arriba - izquierda ..... $a1
  44+ 9C37              ;                       Arriba - derecha ..... $91
  45+ 9C37              ;
  46+ 9C37              ;                       Abajo ..... $41
  47+ 9C37              ;                       Abajo - izquierda ..... $61
  48+ 9C37              ;                       Abajo - derecha ..... $51
  49+ 9C37              ;
  50+ 9C37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C37              ;
  52+ 9C37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C37              ;
  56+ 9C37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C37              ;
  61+ 9C37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C37              ;
  65+ 9C37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C37
  70+ 9C37              ; ----- ----- ----- ----- -----
  71+ 9C37
  72+ 9C37 63 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C39 6B 9C            defw F_1
  74+ 9C3B 75 9C            defw F_2
  75+ 9C3D 7F 9C            defw Codo_abajo_derecha
  76+ 9C3F B3 9C            defw Derecha_y_subiendo
  77+ 9C41 BD 9C            defw Derecha_y_subiendo_1
  78+ 9C43 C7 9C            defw F_3
  79+ 9C45 D1 9C            defw F_4
  80+ 9C47 DB 9C            defw Derecha_y_bajando
  81+ 9C49 E5 9C            defw Derecha_y_bajando_1
  82+ 9C4B EF 9C            defw Derecha_y_bajando_2
  83+ 9C4D F9 9C            defw Codo_derecha_abajo
  84+ 9C4F 29 9D            defw Codo_abajo_izq.
  85+ 9C51 5D 9D            defw Izquierda_y_subiendo
  86+ 9C53 67 9D            defw Izquierda_y_subiendo_1
  87+ 9C55 71 9D            defw F_5
  88+ 9C57 7B 9D            defw F_6
  89+ 9C59 85 9D            defw Izquierda_y_bajando
  90+ 9C5B 8F 9D            defw Izquierda_y_bajando_1
  91+ 9C5D 99 9D            defw Izquierda_y_bajando_2
  92+ 9C5F A3 9D            defw Codo_izquierda_abajo
  93+ 9C61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C63
  95+ 9C63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C6B
  98+ 9C6B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C73 08 00
 100+ 9C75 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C7D 0F FE
 102+ 9C7F
 103+ 9C7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9CA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9CAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9CAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9CB3
 117+ 9CB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9CB7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9CBB 06 00
 119+ 9CBD
 120+ 9CBD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9CC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9CC5 02 00
 122+ 9CC7
 123+ 9CC7 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9CCB 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9CCF 04 00
 125+ 9CD1 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9CD5 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9CD9 08 00
 127+ 9CDB
 128+ 9CDB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9CDF 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9CE3 02 00
 130+ 9CE5
 131+ 9CE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9CE9 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9CED 06 00
 133+ 9CEF
 134+ 9CEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9CF3 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9CF7 06 00
 136+ 9CF9
 137+ 9CF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9CF9
 139+ 9CF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9CFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D29
 152+ 9D29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D5D
 166+ 9D5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D61 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D65 06 00
 168+ 9D67
 169+ 9D67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D6F 02 00
 171+ 9D71
 172+ 9D71 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D75 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D79 04 00
 174+ 9D7B 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D7F 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D83 08 00
 176+ 9D85
 177+ 9D85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D89 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D8D 02 00
 179+ 9D8F
 180+ 9D8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D93 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D97 06 00
 182+ 9D99
 183+ 9D99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D9D 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9DA1 06 00
 185+ 9DA3
 186+ 9DA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9DA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9DAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9DAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9DB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9DB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9DBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9DBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9DC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9DC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9DCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9DCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9DD3
 199+ 9DD3              ; ----- ----- ----- ----- -----
 200+ 9DD3              ;
 201+ 9DD3              ;   27/06/23
 202+ 9DD3
 203+ 9DD3              Movimiento
 204+ 9DD3
 205+ 9DD3              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9DD3
 207+ 9DD3              ;    ld hl,(Posicion_actual)
 208+ 9DD3
 209+ 9DD3 3A E2 88         ld a,(Ctrl_2)
 210+ 9DD6 CB 57            bit 2,a
 211+ 9DD8 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9DDA
 213+ 9DDA 2A D4 88         ld hl,(Puntero_mov)
 214+ 9DDD 7E               ld a,(hl)
 215+ 9DDE
 216+ 9DDE              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9DDE
 218+ 9DDE              Inicia_desplazamiento.
 219+ 9DDE
 220+ 9DDE              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9DDE
 222+ 9DDE CD D2 9E         call Ajusta_velocidad_desplazamiento
 223+ 9DE1
 224+ 9DE1              ; Iniciamos (Repetimos_mov).
 225+ 9DE1
 226+ 9DE1 7E               ld a,(hl)
 227+ 9DE2 E6 0F            and $0f
 228+ 9DE4 32 DA 88         ld (Repetimos_desplazamiento),a
 229+ 9DE7 32 DB 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9DEA
 231+ 9DEA              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9DEA
 233+ 9DEA 23               inc hl
 234+ 9DEB 7E               ld a,(hl)
 235+ 9DEC 32 DD 88         ld (Cola_de_desplazamiento),a
 236+ 9DEF 2B               dec hl
 237+ 9DF0
 238+ 9DF0 21 E2 88         ld hl,Ctrl_2
 239+ 9DF3 CB D6            set 2,(hl)
 240+ 9DF5
 241+ 9DF5              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9DF5              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9DF5
 244+ 9DF5              Desplazamiento_iniciado
 245+ 9DF5
 246+ 9DF5 CD A6 9E         call Aplica_desplazamiento
 247+ 9DF8
 248+ 9DF8 3A E2 88         ld a,(Ctrl_2)
 249+ 9DFB CB 67            bit 4,a
 250+ 9DFD C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9DFE
 252+ 9DFE 21 DA 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E01 35               dec (hl)
 254+ 9E02 C0               ret nz
 255+ 9E03
 256+ 9E03              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E03              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E03              ; Analiza (Cola_de_desplazamiento).
 259+ 9E03
 260+ 9E03 3A DD 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E06 A7               and a
 262+ 9E07 CC FB 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E0A 28 30            jr z,Reinicia_el_movimiento
 264+ 9E0C
 265+ 9E0C FE FF            cp $ff
 266+ 9E0E 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E10
 268+ 9E10 FE FE            cp $fe
 269+ 9E12 CC 7F 9E         call z,Fijamos_bucle
 270+ 9E15 28 25            jr z,Reinicia_el_movimiento
 271+ 9E17
 272+ 9E17 FE FD            cp $fd
 273+ 9E19 20 11            jr nz,1F
 274+ 9E1B
 275+ 9E1B              ; ---
 276+ 9E1B              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E1B
 278+ 9E1B 3A E2 88         ld a,(Ctrl_2)
 279+ 9E1E CB 5F            bit 3,a
 280+ 9E20 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E22
 282+ 9E22              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E22
 284+ 9E22 21 E2 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E25 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E27
 287+ 9E27 CD 90 9E         call Inicia_Repetimos_movimiento
 288+ 9E2A 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E2C              ; ---
 290+ 9E2C
 291+ 9E2C FE 01        1 cp 1
 292+ 9E2E CA 69 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E31
 294+ 9E31 3D               dec a
 295+ 9E32 32 DD 88         ld (Cola_de_desplazamiento),a
 296+ 9E35
 297+ 9E35 3A DB 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E38 32 DA 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E3B              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E3B C9               ret
 301+ 9E3C
 302+ 9E3C              Reinicia_el_movimiento
 303+ 9E3C
 304+ 9E3C 3A E2 88         ld a,(Ctrl_2)
 305+ 9E3F CB 5F            bit 3,a
 306+ 9E41 28 1B            jr z,2F
 307+ 9E43
 308+ 9E43              ; (Cola_de_desplazamiento)="254".
 309+ 9E43
 310+ 9E43 21 DC 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9E46 35               dec (hl)
 312+ 9E47 20 15            jr nz,2F
 313+ 9E49
 314+ 9E49              ; Fin de las repeticiones del último movimiento.
 315+ 9E49
 316+ 9E49 21 E2 88         ld hl,Ctrl_2
 317+ 9E4C CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9E4E
 319+ 9E4E 2A D4 88         ld hl,(Puntero_mov)
 320+ 9E51 23               inc hl
 321+ 9E52 23               inc hl
 322+ 9E53 23               inc hl
 323+ 9E54 22 D4 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9E57              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9E57 7E               ld a,(hl)
 326+ 9E58 32 DD 88         ld (Cola_de_desplazamiento),a
 327+ 9E5B
 328+ 9E5B C3 03 9E         jp Cola
 329+ 9E5E
 330+ 9E5E CD 9B 9E     2 call Inicia_Puntero_mov
 331+ 9E61
 332+ 9E61 21 E2 88         ld hl,Ctrl_2
 333+ 9E64 CB 96            res 2,(hl)
 334+ 9E66
 335+ 9E66 C3 D3 9D         jp Movimiento
 336+ 9E69
 337+ 9E69              Siguiente_desplazamiento
 338+ 9E69
 339+ 9E69              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9E69              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9E69
 342+ 9E69 21 E2 88         ld hl,Ctrl_2
 343+ 9E6C CB 96            res 2,(hl)
 344+ 9E6E
 345+ 9E6E 2A D4 88         ld hl,(Puntero_mov)
 346+ 9E71 23               inc hl
 347+ 9E72 23               inc hl
 348+ 9E73 22 D4 88         ld (Puntero_mov),hl
 349+ 9E76
 350+ 9E76 7E               ld a,(hl)
 351+ 9E77 A7               and a
 352+ 9E78 CC FB 9E         call z,Incrementa_Puntero_indice_mov
 353+ 9E7B CA 3C 9E         jp z,Reinicia_el_movimiento
 354+ 9E7E
 355+ 9E7E C9               ret
 356+ 9E7F
 357+ 9E7F              ; Subrutinas -----------------------------------------
 358+ 9E7F              ; ---------- --------- --------- ---------- ----------
 359+ 9E7F              ;
 360+ 9E7F              ;   24/07/23
 361+ 9E7F              ;
 362+ 9E7F              ;   Fijamos_bucle
 363+ 9E7F              ;
 364+ 9E7F              ;
 365+ 9E7F
 366+ 9E7F              Fijamos_bucle
 367+ 9E7F
 368+ 9E7F 3A D8 88         ld a,(Incrementa_puntero)
 369+ 9E82 3C               inc a
 370+ 9E83 32 D9 88         ld (Incrementa_puntero_backup),a
 371+ 9E86
 372+ 9E86 CD FB 9E         call Incrementa_Puntero_indice_mov
 373+ 9E89 2A D2 88         ld hl,(Puntero_indice_mov)
 374+ 9E8C 22 D6 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9E8F C9               ret
 376+ 9E90
 377+ 9E90              ; ---------- --------- --------- ---------- ----------
 378+ 9E90              ;
 379+ 9E90              ;   07/7/23
 380+ 9E90              ;
 381+ 9E90              ;   Inicia_Repetimos_movimiento
 382+ 9E90              ;
 383+ 9E90              ;
 384+ 9E90
 385+ 9E90              Inicia_Repetimos_movimiento
 386+ 9E90
 387+ 9E90              ; Iniciamos (Repetimos_movimiento).
 388+ 9E90
 389+ 9E90 DD 2A D4 88      ld ix,(Puntero_mov)
 390+ 9E94 DD 7E 02         ld a,(ix+2)
 391+ 9E97 32 DC 88         ld (Repetimos_movimiento),a
 392+ 9E9A
 393+ 9E9A C9               ret
 394+ 9E9B
 395+ 9E9B              ; ---------- --------- --------- ---------- ----------
 396+ 9E9B              ;
 397+ 9E9B              ;   26/6/23
 398+ 9E9B              ;
 399+ 9E9B              ;   Inicia_Puntero_mov
 400+ 9E9B              ;
 401+ 9E9B              ;
 402+ 9E9B
 403+ 9E9B 2A D2 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9E9E 5E               ld e,(hl)
 405+ 9E9F 23               inc hl
 406+ 9EA0 56               ld d,(hl)
 407+ 9EA1 EB               ex de,hl
 408+ 9EA2 22 D4 88         ld (Puntero_mov),hl
 409+ 9EA5 C9               ret
 410+ 9EA6
 411+ 9EA6              ; ---------- --------- --------- ---------- ----------
 412+ 9EA6              ;
 413+ 9EA6              ;   27/06/23
 414+ 9EA6              ;
 415+ 9EA6              ;   Aplica_movimiento.
 416+ 9EA6
 417+ 9EA6              Aplica_desplazamiento
 418+ 9EA6
 419+ 9EA6              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9EA6
 421+ 9EA6 2A D4 88         ld hl, (Puntero_mov)
 422+ 9EA9
 423+ 9EA9 7E               ld a,(hl)
 424+ 9EAA E6 F0            and $f0
 425+ 9EAC C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9EAD
 427+ 9EAD CB 7E            bit 7,(hl)
 428+ 9EAF 28 03            jr z,1F
 429+ 9EB1 CD D1 98         call Mov_up
 430+ 9EB4 2A D4 88     1 ld hl, (Puntero_mov)
 431+ 9EB7 CB 76            bit 6,(hl)
 432+ 9EB9 28 03            jr z,2F
 433+ 9EBB CD 9C 98         call Mov_down
 434+ 9EBE 2A D4 88     2 ld hl, (Puntero_mov)
 435+ 9EC1 CB 6E            bit 5,(hl)
 436+ 9EC3 28 03            jr z,3F
 437+ 9EC5 CD 32 9A         call Mov_left
 438+ 9EC8 2A D4 88     3 ld hl, (Puntero_mov)
 439+ 9ECB CB 66            bit 4,(hl)
 440+ 9ECD C8               ret z
 441+ 9ECE CD 14 99         call Mov_right
 442+ 9ED1 C9               ret
 443+ 9ED2
 444+ 9ED2              ; ---------- --------- --------- ---------- ----------
 445+ 9ED2              ;
 446+ 9ED2              ;   26/06/23
 447+ 9ED2              ;
 448+ 9ED2              ;   Ajusta_velocidad_desplazamiento.
 449+ 9ED2
 450+ 9ED2              Ajusta_velocidad_desplazamiento
 451+ 9ED2
 452+ 9ED2              ; 1er byte de la cadena de movimiento.
 453+ 9ED2              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9ED2
 455+ 9ED2 CD F0 9E         call Extrae_nibble_alto
 456+ 9ED5
 457+ 9ED5 32 BE 88         ld (Vel_up),a
 458+ 9ED8 79               ld a,c
 459+ 9ED9 E6 0F            and $0f
 460+ 9EDB 32 BF 88         ld (Vel_down),a
 461+ 9EDE
 462+ 9EDE              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9EDE              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9EDE
 465+ 9EDE 23               inc hl
 466+ 9EDF CD F0 9E         call Extrae_nibble_alto
 467+ 9EE2
 468+ 9EE2 32 BC 88         ld (Vel_left),a
 469+ 9EE5 79               ld a,c
 470+ 9EE6 E6 0F            and $0f
 471+ 9EE8 32 BD 88         ld (Vel_right),a
 472+ 9EEB
 473+ 9EEB              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9EEB
 475+ 9EEB 23               inc hl
 476+ 9EEC 22 D4 88         ld (Puntero_mov),hl
 477+ 9EEF C9               ret
 478+ 9EF0
 479+ 9EF0 06 04        Extrae_nibble_alto ld b,4
 480+ 9EF2 7E               ld a,(hl)
 481+ 9EF3 4F               ld c,a
 482+ 9EF4 E6 F0            and $f0
 483+ 9EF6 CB 3F        1 srl a
 484+ 9EF8 10 FC            djnz 1B
 485+ 9EFA C9               ret
 486+ 9EFB
 487+ 9EFB              ; ---------- --------- --------- ---------- ----------
 488+ 9EFB              ;
 489+ 9EFB              ;   5/7/23
 490+ 9EFB              ;
 491+ 9EFB              ;   Incrementa_Puntero_indice_mov
 492+ 9EFB
 493+ 9EFB              Incrementa_Puntero_indice_mov
 494+ 9EFB
 495+ 9EFB 21 D8 88         ld hl,Incrementa_puntero
 496+ 9EFE 34               inc (hl)
 497+ 9EFF
 498+ 9EFF 2A D2 88         ld hl,(Puntero_indice_mov)
 499+ 9F02 01 02 00         ld bc,2
 500+ 9F05 A7               and a
 501+ 9F06 09               add hl,bc
 502+ 9F07 22 D2 88         ld (Puntero_indice_mov),hl
 503+ 9F0A
 504+ 9F0A 7E               ld a,(hl)
 505+ 9F0B A7               and a
 506+ 9F0C
 507+ 9F0C              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F0C
 509+ 9F0C              ;    jr z,$
 510+ 9F0C
 511+ 9F0C              ;! Reinicia el Patrón de movimiento.
 512+ 9F0C
 513+ 9F0C CC 11 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F0F
 515+ 9F0F AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F10
 517+ 9F10 C9               ret
 518+ 9F11
 519+ 9F11
 520+ 9F11              ; ---------- --------- --------- ---------- ----------
 521+ 9F11              ;
 522+ 9F11              ;   24/07/23
 523+ 9F11              ;
 524+ 9F11              ;   Inicializa_Puntero_indice_mov
 525+ 9F11
 526+ 9F11              Inicializa_Puntero_indice_mov
 527+ 9F11
 528+ 9F11              ; Existe etiqueta de bucle principal???
 529+ 9F11
 530+ 9F11 2A D6 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F14 24               inc h
 532+ 9F15 25               dec h
 533+ 9F16 28 05            jr z,2F
 534+ 9F18
 535+ 9F18 22 D2 88         ld (Puntero_indice_mov),hl
 536+ 9F1B 18 14            jr 3F
 537+ 9F1D
 538+ 9F1D              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F1D
 540+ 9F1D 3A D8 88     2 ld a,(Incrementa_puntero)
 541+ 9F20 47               ld b,a
 542+ 9F21
 543+ 9F21 2A D2 88         ld hl,(Puntero_indice_mov)
 544+ 9F24 2B           1 dec hl
 545+ 9F25 2B               dec hl
 546+ 9F26 10 FC            djnz 1B
 547+ 9F28 22 D2 88         ld (Puntero_indice_mov),hl
 548+ 9F2B
 549+ 9F2B AF               xor a
 550+ 9F2C 32 D8 88         ld (Incrementa_puntero),a
 551+ 9F2F 18 06            jr 4F
 552+ 9F31
 553+ 9F31 3A D9 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F34 32 D8 88         ld (Incrementa_puntero),a
 555+ 9F37 C9           4 ret
 556+ 9F38
 557+ 9F38
 558+ 9F38
# file closed: Patrones_de_mov.asm
1519  9F38              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F38              ;
   3+ 9F38              ;	27/10/23
   4+ 9F38              ;
   5+ 9F38              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F38
   7+ 9F38              ;	ADC HL,SP	LD (addr),SP
   8+ 9F38              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F38              ;	ADD IX,SP	LD SP,nn
  10+ 9F38              ; 	ADD IY,SP	LD SP,HL
  11+ 9F38              ;				LD SP,IX
  12+ 9F38              ;	DEC SP		LD SP,IY
  13+ 9F38
  14+ 9F38              ;	EX (SP),HL
  15+ 9F38              ;	EX (SP),IX
  16+ 9F38              ;	EX (SP),IY
  17+ 9F38
  18+ 9F38              ;	INC SP
  19+ 9F38
  20+ 9F38                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 F5 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 C7 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A E4 88         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A FD 88         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A D1 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 01 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A FB 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A E4 88         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 FD 88         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A D1 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 01 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B F5 88      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 FB 88     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B F5 88  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC FB               ei
 107+ 7FFD C9               ret
 108+ 7FFE
 109+ 7FFE              ; -----------------------------------------------------------------------------
 110+ 7FFE              ;
 111+ 7FFE              ;   20/11/23
 112+ 7FFE
 113+ 7FFE              Limpia_y_reinicia_Stack_Snapshot
 114+ 7FFE
 115+ 7FFE              ;   Limpia Album_de_fotos.
 116+ 7FFE
 117+ 7FFE 2A FB 88         ld hl,(Stack_snapshot)
 118+ 8001 E5               push hl
 119+ 8002
 120+ 8002 01 00 70         ld bc,Album_de_fotos
 121+ 8005 A7               and a
 122+ 8006 ED 42            sbc hl,bc
 123+ 8008 C8               ret z
 124+ 8009
 125+ 8009 45               ld b,l
 126+ 800A
 127+ 800A E1               pop hl
 128+ 800B 2B               dec hl
 129+ 800C
 130+ 800C 36 00        1 ld (hl),0
 131+ 800E 2B               dec hl
 132+ 800F 10 FB            djnz 1B
 133+ 8011
 134+ 8011              ;   Reinicializa (Stack_snapshot).
 135+ 8011
 136+ 8011 23               inc hl
 137+ 8012 22 FB 88         ld (Stack_snapshot),hl
 138+ 8015
 139+ 8015 C9               ret
# file closed: Guarda_foto_registros.asm
1520  8016
1521  8016              	SAVESNA "Pruebas.sna", START
1522  8016
1523  8016
1524  8016
1525  8016
# file closed: Banco_de_pruebas.asm
