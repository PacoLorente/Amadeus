# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 9A 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 60 Bytes por entidad.
  96+ 8468
  97+ 8468 B2 84        	defw Entidad_1
  98+ 846A EE 84        	defw Entidad_2
  99+ 846C 2A 85        	defw Entidad_3
 100+ 846E 66 85        	defw Entidad_4
 101+ 8470 A2 85        	defw Entidad_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480
 119+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 120+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B
 127+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 128+ 848F
 129+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 130+ 8490
 131+ 8490 00 00        	db 0,0											; Variables_de_borrado
 132+ 8492 00 00        	defw 0											;	" " " " " " "
 133+ 8494 00 00        	defw 0											;	" " " " " " "
 134+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 135+ 849A
 136+ 849A 00 00        	db 0,0											; Variables_de_pintado
 137+ 849C 00 00        	defw 0											;	" " " " " " "
 138+ 849E 00 00        	defw 0											;	" " " " " " "
 139+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 140+ 84A4
 141+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 142+ 84A7
 143+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 144+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 145+ 84AE
 146+ 84AE 00           	db 0 											; (Columnas).
 147+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 148+ 84B1 00           	db 0											; (Limite_vertical).
 149+ 84B2
 150+ 84B2              ; ---------- ---------- ---------- ---------- ----------
 151+ 84B2
 152+ 84B2 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 153+ 84B4 00 00        	defw 0											; (Posicion_actual).
 154+ 84B6 00 00        	defw 0 											; (Puntero_objeto).
 155+ 84B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 84BB
 157+ 84BB 00           	db %00000000 									; (Attr).
 158+ 84BC
 159+ 84BC 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 84BE 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 84C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 84C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 84C4
 164+ 84C4 00 00        	defw 0											; (Posicion_inicio).
 165+ 84C6 00           	db 0											; (Cuad_objeto).
 166+ 84C7
 167+ 84C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 84CB
 169+ 84CB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 84CC
 171+ 84CC 00 00        	db 0,0										    ; Variables_de_borrado
 172+ 84CE 00 00        	defw 0											;	" " " " " " "
 173+ 84D0 00 00        	defw 0											;	" " " " " " "
 174+ 84D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 84D6
 176+ 84D6 00 00        	db 0,0											; Variables_de_pintado
 177+ 84D8 00 00        	defw 0											;	" " " " " " "
 178+ 84DA 00 00        	defw 0											;	" " " " " " "
 179+ 84DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 84E0
 181+ 84E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 182+ 84E3
 183+ 84E3 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 184+ 84E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 185+ 84EA
 186+ 84EA 00           	db 0 											; (Columnas).
 187+ 84EB 00 00        	defw 0											; (Limite_horizontal).
 188+ 84ED 00           	db 0											; (Limite_vertical).
 189+ 84EE
 190+ 84EE              ; ---------- ---------- ---------- ---------- ----------
 191+ 84EE
 192+ 84EE 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 193+ 84F0 00 00        	defw 0                                          ; (Posicion_actual).
 194+ 84F2 00 00        	defw 0											; (Puntero_objeto).
 195+ 84F4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 196+ 84F7
 197+ 84F7 02           	db %00000010									; (Attr).
 198+ 84F8
 199+ 84F8 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 200+ 84FA 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 201+ 84FC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 202+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 203+ 8500
 204+ 8500 5E 48        	defw $485e                                      ; (Posicion_inicio).
 205+ 8502 02           	db 2											; (Cuad_objeto).
 206+ 8503
 207+ 8503 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 208+ 8507
 209+ 8507 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 210+ 8508
 211+ 8508 00 00        	db 0,0											; Variables_de_borrado
 212+ 850A 00 00        	defw 0										 	;	" " " " " " "
 213+ 850C 00 00        	defw 0											;	" " " " " " "
 214+ 850E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 215+ 8512
 216+ 8512 00 00        	db 0,0											; Variables_de_pintado
 217+ 8514 00 00        	defw 0											;	" " " " " " "
 218+ 8516 00 00        	defw 0											;	" " " " " " "
 219+ 8518 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 851C
 221+ 851C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 222+ 851F
 223+ 851F 74 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0	; (Puntero_indice_mov) / (Puntero_mov).
 224+ 8523 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 225+ 8526
 226+ 8526 00           	db 0 											; (Columnas).
 227+ 8527 00 00        	defw 0											; (Limite_horizontal).
 228+ 8529 00           	db 0											; (Limite_vertical).
 229+ 852A
 230+ 852A              ; ---------- ---------- ---------- ---------- ----------
 231+ 852A
 232+ 852A 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 233+ 852C 00 00        	defw 0                                          ; (Posicion_actual).
 234+ 852E 00 00        	defw 0											; (Puntero_objeto).
 235+ 8530 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8533
 237+ 8533 04           	db %00000100									; (Attr).
 238+ 8534
 239+ 8534 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 240+ 8536 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 241+ 8538
 242+ 8538 00 00        	defw 0											; (Puntero_DESPLZ_der).
 243+ 853A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 244+ 853C
 245+ 853C A1 47        	defw $47a1                                      ; (Posicion_inicio).
 246+ 853E 01           	db 1											; (Cuad_objeto).
 247+ 853F
 248+ 853F 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 249+ 8543
 250+ 8543 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 251+ 8544
 252+ 8544 00 00        	db 0,0											; Variables_de_borrado
 253+ 8546 00 00        	defw 0										 	;	" " " " " " "
 254+ 8548 00 00        	defw 0											;	" " " " " " "
 255+ 854A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 256+ 854E
 257+ 854E 00 00        	db 0,0											; Variables_de_pintado
 258+ 8550 00 00        	defw 0											;	" " " " " " "
 259+ 8552 00 00        	defw 0											;	" " " " " " "
 260+ 8554 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 261+ 8558
 262+ 8558 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 263+ 855B
 264+ 855B 68 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 265+ 855F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 266+ 8562
 267+ 8562 00           	db 0 											; (Columnas).
 268+ 8563 00 00        	defw 0											; (Limite_horizontal).
 269+ 8565 00           	db 0											; (Limite_vertical).
 270+ 8566
 271+ 8566              ; ---------- ---------- ---------- ---------- ----------
 272+ 8566
 273+ 8566 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 274+ 8568 00 00        	defw 0                                          ; (Posicion_actual).
 275+ 856A 00 00        	defw 0 											; (Puntero_objeto).
 276+ 856C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 856F
 278+ 856F 01           	db %00000001									; (Attr).
 279+ 8570
 280+ 8570 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 281+ 8572 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 282+ 8574
 283+ 8574 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8576 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8578
 286+ 8578 BE 47        	defw $47be                                      ; (Posicion_inicio).
 287+ 857A 00           	db 0											; (Cuad_objeto).
 288+ 857B
 289+ 857B 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 857F
 291+ 857F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 8580
 293+ 8580 00 00        	db 0,0											; Variables_de_borrado
 294+ 8582 00 00        	defw 0										 	;	" " " " " " "
 295+ 8584 00 00        	defw 0											;	" " " " " " "
 296+ 8586 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 858A
 298+ 858A 00 00        	db 0,0											; Variables_de_pintado
 299+ 858C 00 00        	defw 0											;	" " " " " " "
 300+ 858E 00 00        	defw 0											;	" " " " " " "
 301+ 8590 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 8594
 303+ 8594 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 8597
 305+ 8597 74 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
 306+ 859B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 859E
 308+ 859E 00           	db 0 											; (Columnas).
 309+ 859F 00 00        	defw 0											; (Limite_horizontal).
 310+ 85A1 00           	db 0											; (Limite_vertical).
 311+ 85A2
 312+ 85A2              ; ---------- ---------- ---------- ---------- ----------
 313+ 85A2
 314+ 85A2 02 02        Entidad_5 db 2,2                                  	; (Filas) / (Columns).
 315+ 85A4 00 00        	defw 0                                          ; (Posicion_actual).
 316+ 85A6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 85A8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 85AB
 319+ 85AB 01           	db %00000001									; (Attr).
 320+ 85AC
 321+ 85AC 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 322+ 85AE 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 323+ 85B0
 324+ 85B0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 325+ 85B2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 326+ 85B4
 327+ 85B4 0A 40        	defw $400a                                      ; (Posicion_inicio).
 328+ 85B6 01           	db 1											; (Cuad_objeto).
 329+ 85B7
 330+ 85B7 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 331+ 85BB
 332+ 85BB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 333+ 85BC
 334+ 85BC 00 00        	db 0,0											; Variables_de_borrado
 335+ 85BE 00 00        	defw 0										 	;	" " " " " " "
 336+ 85C0 00 00        	defw 0											;	" " " " " " "
 337+ 85C2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 338+ 85C6
 339+ 85C6 00 00        	db 0,0											; Variables_de_pintado
 340+ 85C8 00 00        	defw 0											;	" " " " " " "
 341+ 85CA 00 00        	defw 0											;	" " " " " " "
 342+ 85CC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 343+ 85D0
 344+ 85D0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 345+ 85D3
 346+ 85D3 6A 97 00 00  	defw Indice_mov_Abajo,0   		                ; (Puntero_indice_mov) / (Puntero_mov).
 347+ 85D7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 348+ 85DA
 349+ 85DA 00           	db 0 											; (Columnas).
 350+ 85DB 00 00        	defw 0											; (Limite_horizontal).
 351+ 85DD 00           	db 0											; (Limite_vertical).
# file closed: Entidades_y_disparos.asm
  21  85DE
  22  85DE              ; ******************************************************************************************************************************************************************************************
  23  85DE              ; Constantes.
  24  85DE              ; ******************************************************************************************************************************************************************************************
  25  85DE              ;
  26  85DE              ; 8/11/22
  27  85DE              ;
  28  85DE              ; Constantes generales.
  29  85DE              ;
  30  85DE
  31  85DE              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  85DE              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  85DE              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  85DE              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  85DE
  36  85DE              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  85DE              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  85DE              ;                               				        ; De momento situamos este almacén en $7000.
  39  85DE              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  85DE              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  85DE              ;                               				        ; De momento situamos este almacén en $7060.
  42  85DE
  43  85DE              ; ******************************************************************************************************************************************************************************************
  44  85DE              ; Variables.
  45  85DE              ; ******************************************************************************************************************************************************************************************
  46  85DE              ;
  47  85DE              ; 10/11/22
  48  85DE              ;
  49  85DE              ; Variables de DRAW. (Motor principal).
  50  85DE              ;
  51  85DE              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  85DE
  53  85DE 02           Filas db 2												; Filas. [DRAW]
  54  85DF 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  85E0 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  85E2 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85E4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85E5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85E6
  60  85E6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85E6
  62  85E6 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85E7              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85E7              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85E7 04           Attr db %00000100										; Atributos de la entidad:
  66  85E8
  67  85E8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85E8              ;
  69  85E8              ;	COLORES: 0 ..... NEGRO
  70  85E8              ;    		 1 ..... AZUL
  71  85E8              ; 			 2 ..... ROJO
  72  85E8              ;			 3 ..... MAGENTA
  73  85E8              ; 			 4 ..... VERDE
  74  85E8              ; 			 5 ..... CIAN
  75  85E8              ;			 6 ..... AMARILLO
  76  85E8              ; 			 7 ..... BLANCO
  77  85E8
  78  85E8 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85EA 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85EC 00 00        Puntero_DESPLZ_der defw 0
  81  85EE 00 00        Puntero_DESPLZ_izq defw 0
  82  85F0
  83  85F0 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85F2 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85F3
  86  85F3              ; Variables de objeto. (Características).
  87  85F3
  88  85F3 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85F4 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85F5 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85F6 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85F7
  93  85F7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85F8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85F8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85F8 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85FA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85FC 00 00        	defw 0
  99  85FE 00 00 00 00  	db 0,0,0,0
 100  8602
 101  8602 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  8604 00 00        	defw 0
 103  8606 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  8608 00 00 00 00  	db 0,0,0,0
 105  860C
 106  860C              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  860C
 108  860C 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  860D              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  860D              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  860D              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  860D              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  860D              ;
 114  860D              ; 														DESCRIPCIÖN:
 115  860D              ;
 116  860D              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  860D              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  860D              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  860D              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  860D              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  860D              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  860D              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  860D              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  860D              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  860D              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  860D              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  860D              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  860D              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  860D              ;
 130  860D              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  860D              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  860D              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  860D
 134  860D 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  860E
 136  860E              ; Movimiento.
 137  860E
 138  860E
 139  860E 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 140  860F 76 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 141  8611 00 00        Puntero_mov defw 0
 142  8613 00           Contador_db_mov db 0
 143  8614 00           Incrementa_puntero db 0
 144  8615 00           Repetimos_db db 0
 145  8616
 146  8616              ; Variables de funcionamiento. [DRAW].
 147  8616
 148  8616 00           Columnas db 0
 149  8617 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 150  8619              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 151  8619 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 152  861A
 153  861A              ; 60 Bytes por entidad.
 154  861A              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 155  861A              ;					         		---------;      ;---------
 156  861A
 157  861A
 158  861A              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 159  861A
 160  861A 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 161  861B
 162  861B              ;														DESCRIPCIÓN:
 163  861B              ;
 164  861B              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 165  861B              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 166  861B              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 167  861B              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 168  861B              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad, hay que confirmarlo_
 169  861B              ; 															_ comparando las coordenadas del disparo con las de la entidad almacenada en DRAW.
 170  861B
 171  861B              ; Gestión de ENTIDADES.
 172  861B
 173  861B 02           Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 174  861C 00 00        Puntero_store_entidades defw 0
 175  861E 00 00        Puntero_restore_entidades defw 0
 176  8620 00 00        Indice_restore defw 0
 177  8622 02           Numero_de_entidades db 2								; Nº de entidades en pantalla, (contando con Amadeus).
 178  8623 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 179  8624              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 180  8624              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 181  8624              ;														; _ (Numero_de_malotes)="0".
 182  8624 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 183  8626              ;														; _variable para almacenar lo posición del puntero_
 184  8626              ; 														; _de pila, SP.
 185  8626 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 186  8628              ;														; La utiliza la rutina [Extrae_foto_registros].
 187  8628 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 188  862A              ;														; _el snapshot de los registros de la siguiente entidad.
 189  862A              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 190  862A 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 191  862C              ;														; _el snapshot de los registros del siguiente disparo.
 192  862C              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 193  862C
 194  862C              ;---------------------------------------------------------------------------------------------------------------
 195  862C
 196  862C              ; Gestión de Disparos.
 197  862C
 198  862C 00           Numero_de_disparotes db 0
 199  862D 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 200  862F 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 201  8631 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 202  8632              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 203  8632              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 204  8632 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 205  8634              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 206  8634              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 207  8634              ;														; _produzca colisión.
 208  8634 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 209  8636              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 210  8636 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 211  8639              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 212  8639 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 213  863C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 214  863C
 215  863C              ;---------------------------------------------------------------------------------------------------------------
 216  863C
 217  863C              ; Relojes y temporizaciones.
 218  863C
 219  863C 01           Habilita_disparo_Amadeus db 1
 220  863D 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 221  863E 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 222  863F
 223  863F 01           Habilita_disparo_entidad db 1
 224  8640 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 225  8641 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 226  8642
 227  8642              ;---------------------------------------------------------------------------------------------------------------
 228  8642
 229  8642              ; Gestión de FRAMES.
 230  8642
 231  8642 00           Switch db 0
 232  8643
 233  8643              ; Variables de Raster y localización en pantalla.
 234  8643
 235  8643 00 FF        Temp_Raster defw $ff00
 236  8645
 237  8645              ; Rutina principal *************************************************************************************************************************************************************************
 238  8645              ;
 239  8645              ;	14/11/22
 240  8645
 241  8645 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 242  8648
 243  8648 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 244  864A ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 245  864C ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 246  864E F3           	DI
 247  864F
 248  864F 3E 07        	ld a,%00000111
 249  8651 CD 8A 93     	call Cls
 250  8654
 251  8654              ;	call Pinta_FILAS
 252  8654
 253  8654 CD 33 89     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 254  8657
 255  8657 21 22 86     	ld hl,Numero_de_entidades
 256  865A 46           	ld b,(hl)
 257  865B 04           	inc b
 258  865C 05           	dec b
 259  865D 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 260  865F
 261  865F CD 01 88     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 262  8662              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 263  8662
 264  8662              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 265  8662              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 266  8662              ;	Pintamos el resto de entidades:
 267  8662
 268  8662              ;	INICIA ENTIDADES !!!!!
 269  8662
 270  8662 C5           1 push bc  												; Guardo el contador de entidades.
 271  8663 CD 5B 88      	call Inicia_Puntero_objeto
 272  8666 CD DA 8D     	call Draw
 273  8669 CD A0 7F     	call Guarda_foto_registros
 274  866C CD A3 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 275  866F C1           	pop bc
 276  8670 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 277  8672
 278  8672              ; 	INICIA AMADEUS !!!!!
 279  8672
 280  8672 CD 0A 89     3 call Restore_Amadeus
 281  8675 CD 5B 88     	call Inicia_Puntero_objeto
 282  8678 CD DA 8D     	call Draw
 283  867B CD A0 7F     	call Guarda_foto_registros
 284  867E
 285  867E 11 76 84     	ld de,Amadeus_db
 286  8681 CD 1C 89     	call Store_Amadeus
 287  8684
 288  8684              ; 	INICIA DISPAROS !!!!!
 289  8684
 290  8684 CD 17 88     	call Inicia_Puntero_Disparo_Entidades
 291  8687 CD 1E 88     	call Inicia_Puntero_Disparo_Amadeus
 292  868A
 293  868A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 294  868A
 295  868A CD 01 88     	call Inicia_punteros_de_entidades
 296  868D CD E3 88     	call Restore_entidad
 297  8690
 298  8690 3A 22 86     	ld a,(Numero_de_entidades)
 299  8693 3C           	inc a
 300  8694 32 23 86     	ld (Numero_de_malotes),a
 301  8697
 302  8697 FB           2 ei
 303  8698 18 FD        	jr 2B
 304  869A
 305  869A              ; -----------------------------------------------------------------------------------
 306  869A
 307  869A              Frame
 308  869A
 309  869A              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 310  869A              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 311  869A
 312  869A              ; PINTAMOS.
 313  869A
 314  869A 3E 02            ld a,2
 315  869C D3 FE            out ($fe),a
 316  869E CD DE 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 317  86A1 CD 17 91     	call Extrae_foto_disparos
 318  86A4 3E 01            ld a,1
 319  86A6 D3 FE            out ($fe),a
 320  86A8
 321  86A8              ; ----------------------------------------------------------------------
 322  86A8
 323  86A8              ; RELOJES.
 324  86A8
 325  86A8 21 3C 86     	ld hl,Habilita_disparo_Amadeus
 326  86AB 11 3E 86     	ld de,Temporiza_disparo_Amadeus
 327  86AE CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 328  86B1
 329  86B1 21 3F 86     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 330  86B4 11 41 86     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 331  86B7 CD D5 7F     	call Habilita_disparos
 332  86BA
 333  86BA              ; COLISIONES.
 334  86BA
 335  86BA CD 7C 8D     	call Selector_de_impactos
 336  86BD
 337  86BD              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 338  86BD              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 339  86BD              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 340  86BD
 341  86BD AF           	xor a
 342  86BE 32 31 86     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 343  86C1
 344  86C1 CD 01 88     	call Inicia_punteros_de_entidades
 345  86C4 CD E3 88     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_entidades),_
 346  86C7              ; 														; _ en DRAW.
 347  86C7 3A DE 85     	ld a,(Filas)
 348  86CA A7           	and a
 349  86CB 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 350  86CD CD F5 88     	call Incrementa_punteros_entidades
 351  86D0 18 F2        	jr 12B
 352  86D2
 353  86D2              ; ---------------------------------------------------------------------------------------
 354  86D2
 355  86D2 CD F5 8B     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 356  86D5 21 00 70     	ld hl,Album_de_fotos
 357  86D8 22 28 86         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 358  86DB              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 359  86DB 3A 22 86     	ld a,(Numero_de_entidades)
 360  86DE 47               ld b,a
 361  86DF A7           	and a
 362  86E0 28 54        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 363  86E2
 364  86E2              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 365  86E2
 366  86E2              ; Código que ejecutamos con cada entidad:
 367  86E2
 368  86E2              ; Impacto ???
 369  86E2
 370  86E2 C5           2 push bc 												; Nº de entidades.
 371  86E3
 372  86E3 3A F7 85     	ld a,(Impacto)
 373  86E6 A7           	and a
 374  86E7 28 0C        	jr z,8F
 375  86E9
 376  86E9              ; Hay Impacto en esta entidad.
 377  86E9
 378  86E9 CD B8 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 379  86EC CD 25 89     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 380  86EF 21 22 86     	ld hl,Numero_de_entidades							; Una alimaña menos.
 381  86F2 35           	dec (hl)
 382  86F3
 383  86F3              ; debugg
 384  86F3              ;	jr $	; Para imagen cuando hay impacto.
 385  86F3              ; debugg
 386  86F3
 387  86F3 18 3B        	jr 6F
 388  86F5
 389  86F5              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 390  86F5              ; _con las coordenadas de la entidad almacenada en DRAW.
 391  86F5
 392  86F5 3A 1A 86     8 ld a,(Ctrl_1)
 393  86F8 CB 57        	bit 2,a
 394  86FA 28 1B        	jr z,7F
 395  86FC
 396  86FC 2A 34 86     	ld hl,(Coordenadas_disparo_certero)
 397  86FF EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 398  8700              ;														; E contiene la coordenada_X del disparo.
 399  8700 2A E4 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 400  8703              ;														; H Coordenado_y de la entidad.
 401  8703 A7           	and a
 402  8704 ED 52        	sbc hl,de
 403  8706 CD B3 8D     	call Determina_resultado_comparativa
 404  8709 04           	inc b
 405  870A 05           	dec b
 406  870B 28 0A        	jr z,7F
 407  870D
 408  870D              ; ----- ----- -----
 409  870D
 410  870D 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 411  870F 32 F7 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 412  8712 21 1A 86     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 413  8715 CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 414  8717
 415  8717 CD 69 87     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 416  871A
 417  871A 3A 0C 86     	ld a,(Ctrl_0)
 418  871D CB 67        	bit 4,a
 419  871F 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 420  8721
 421  8721              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 422  8721              ; [[[
 423  8721 CD 7E 89     	call Detecta_disparo_entidad
 424  8724              ; ]]]
 425  8724 CD C8 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 426  8727
 427  8727 21 0C 86     	ld hl,Ctrl_0
 428  872A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 429  872C AF           	xor a
 430  872D 32 0D 86     	ld (Obj_dibujado),a
 431  8730
 432  8730 CD A3 88     6 call Store_Restore_entidades
 433  8733
 434  8733 C1           	pop bc
 435  8734 10 AC        	djnz 2B
 436  8736
 437  8736              ; Tras la gestión de las entidades, ... AMADEUS.
 438  8736
 439  8736 CD 0A 89     4 call Restore_Amadeus
 440  8739
 441  8739 3A F7 85     	ld a,(Impacto)
 442  873C A7           	and a
 443  873D 20 FE        	jr nz,$
 444  873F
 445  873F              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 446  873F
 447  873F CD 99 87     	call Mov_Amadeus
 448  8742
 449  8742 3A 0C 86     	ld a,(Ctrl_0)
 450  8745 CB 67        	bit 4,a
 451  8747 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 452  8749
 453  8749 CD C8 87     	call Guarda_foto_entidad_a_pintar
 454  874C
 455  874C 21 0C 86     3 ld hl,Ctrl_0
 456  874F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 457  8751 AF           	xor a
 458  8752 32 0D 86     	ld (Obj_dibujado),a
 459  8755
 460  8755 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 461  8758 CD 1C 89     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 462  875B
 463  875B CD 13 8C     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 464  875E
 465  875E              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 466  875E
 467  875E CD 3D 88     	call Calcula_numero_de_disparotes
 468  8761 CD 25 88     9 call Calcula_numero_de_malotes
 469  8764
 470  8764 3E 04        	ld a,4
 471  8766 D3 FE        	out ($fe),a
 472  8768
 473  8768 C9           	ret
 474  8769
 475  8769              ; --------------------------------------------------------------------------------------------------------------
 476  8769              ;
 477  8769              ;	27/03/23
 478  8769
 479  8769              Mov_obj
 480  8769
 481  8769              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 482  8769
 483  8769 AF           	xor a
 484  876A 32 0D 86     	ld (Obj_dibujado),a
 485  876D 32 0C 86     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 486  8770              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 487  8770              ; 														; _de la entidad.
 488  8770 CD D2 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 489  8773              ;														; Obj_dibujado="0".
 490  8773              ; Movemos Entidades malignas.
 491  8773
 492  8773 21 0F 86     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 493  8776 34           	inc (hl)
 494  8777 35           	dec (hl)                                            ; Salimos de la rutina.
 495  8778 C8           	ret z
 496  8779
 497  8779 CD 78 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 498  877C
 499  877C 3A 0C 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 500  877F CB 67        	bit 4,a
 501  8781 C8           	ret z
 502  8782
 503  8782              ; Ha habido desplazamiento de la entidad maligna.
 504  8782              ; Ha llegado a zona de AMADEUS ???
 505  8782
 506  8782 3A E5 85     	ld a,(Coordenada_y)
 507  8785 FE 14        	cp $14
 508  8787 D4 44 8B     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 509  878A              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 510  878A              ; ---------
 511  878A
 512  878A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 513  878C 32 0D 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 514  878F CD D2 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 515  8792 CD E9 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 516  8795 CD B8 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 517  8798 C9           	ret													; _de la misma.
 518  8799
 519  8799              ; --------------------------------------------------------------------------------------------------------------
 520  8799              ;
 521  8799              ;	29/1/23
 522  8799
 523  8799              Mov_Amadeus
 524  8799
 525  8799 AF           	xor a
 526  879A 32 0D 86     	ld (Obj_dibujado),a
 527  879D CD D2 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 528  87A0              ;														; Obj_dibujado="0".
 529  87A0              ; Movemos Amadeus.
 530  87A0
 531  87A0 CD 47 89     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 532  87A3 3A 0C 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 533  87A6 CB 67        	bit 4,a
 534  87A8 C8           	ret z
 535  87A9
 536  87A9              ; ---------
 537  87A9
 538  87A9 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 539  87AB 32 0D 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 540  87AE CD D2 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 541  87B1 CD E9 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 542  87B4 CD B8 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 543  87B7 C9           	ret													; _de la nave.
 544  87B8
 545  87B8              ; --------------------------------------------------------------------------------------------------------------
 546  87B8              ;
 547  87B8              ;	31/01/23
 548  87B8              ;
 549  87B8              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 550  87B8
 551  87B8              Guarda_foto_entidad_a_borrar
 552  87B8
 553  87B8 CD B4 90     	call Prepara_draw
 554  87BB CD EE 8F     	call calcula_CColumnass
 555  87BE CD 25 90     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 556  87C1 CD 7A 90     	call Define_rutina_de_impresion
 557  87C4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 558  87C7 C9           	ret
 559  87C8
 560  87C8              ; --------------------------------------------------------------------------------------------------------------
 561  87C8              ;
 562  87C8              ;	31/01/23
 563  87C8              ;
 564  87C8              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 565  87C8              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 566  87C8
 567  87C8              Guarda_foto_entidad_a_pintar
 568  87C8
 569  87C8 CD F5 87     	call Repone_pintar
 570  87CB CD DA 8D     	call Draw
 571  87CE CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 572  87D1 C9           	ret
 573  87D2
 574  87D2              ; --------------------------------------------------------------------------------------------------------------
 575  87D2              ;
 576  87D2              ;
 577  87D2
 578  87D2 21 DE 85     Prepara_var_pintado_borrado	ld hl,Filas
 579  87D5 3A 0D 86     	ld a,(Obj_dibujado)
 580  87D8 A7           	and a
 581  87D9 28 05        	jr z,1F
 582  87DB 11 02 86     	ld de,Variables_de_pintado
 583  87DE 18 03        	jr 2F
 584  87E0 11 F8 85     1 ld de,Variables_de_borrado
 585  87E3 01 08 00     2 ld bc,8
 586  87E6 ED B0        	ldir
 587  87E8 C9           	ret
 588  87E9
 589  87E9              ; --------------------------------------------------------------------------------------------------------------
 590  87E9
 591  87E9 21 F8 85     Repone_borrar ld hl,Variables_de_borrado
 592  87EC 11 DE 85     	ld de,Filas
 593  87EF 01 08 00     	ld bc,8
 594  87F2 ED B0        	ldir
 595  87F4 C9           	ret
 596  87F5
 597  87F5 21 02 86     Repone_pintar ld hl,Variables_de_pintado
 598  87F8 11 DE 85     	ld de,Filas
 599  87FB 01 08 00     	ld bc,8
 600  87FE ED B0        	ldir
 601  8800 C9           	ret
 602  8801
 603  8801              ; *************************************************************************************************************************************************************
 604  8801              ;
 605  8801              ; 8/1/23
 606  8801              ;
 607  8801              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 608  8801              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 609  8801              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 610  8801
 611  8801              ; Destruye HL y DE !!!!!
 612  8801
 613  8801              Inicia_punteros_de_entidades
 614  8801
 615  8801 21 68 84     	ld hl,Indice_de_entidades
 616  8804 CD 55 88         call Extrae_address
 617  8807 22 1C 86         ld (Puntero_store_entidades),hl
 618  880A 21 6A 84     	ld hl,Indice_de_entidades+2
 619  880D 22 20 86     	ld (Indice_restore),hl
 620  8810 CD 55 88     	call Extrae_address
 621  8813 22 1E 86     	ld (Puntero_restore_entidades),hl
 622  8816 C9               ret
 623  8817
 624  8817              ; *************************************************************************************************************************************************************
 625  8817              ;
 626  8817              ; 8/1/23
 627  8817              ;
 628  8817              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 629  8817
 630  8817 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 631  881A 22 2D 86     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 632  881D C9           	ret
 633  881E 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 634  8821 22 2F 86     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 635  8824 C9           	ret
 636  8825
 637  8825              ; -------------------------------------------------------------------------------------------------------------
 638  8825              ;
 639  8825              ; 28/2/23
 640  8825              ;
 641  8825
 642  8825              Calcula_numero_de_malotes
 643  8825
 644  8825 21 00 70     	ld hl,Album_de_fotos
 645  8828 EB           	ex de,hl
 646  8829 2A 28 86     	ld hl,(Stack_snapshot)
 647  882C
 648  882C 06 00        	ld b,0
 649  882E 7D           	ld a,l
 650  882F 93           	sub e
 651  8830 28 07        	jr z,1F
 652  8832
 653  8832              ; Nº de malotes no es "0".
 654  8832
 655  8832 D6 06        2 sub 6
 656  8834 04           	inc b
 657  8835 A7           	and a
 658  8836 20 FA        	jr nz,2B
 659  8838 78           	ld a,b
 660  8839
 661  8839 32 23 86     1 ld (Numero_de_malotes),a
 662  883C C9           	ret
 663  883D
 664  883D              ; -------------------------------------------------------------------------------------------------------------
 665  883D              ;
 666  883D              ; 28/2/23
 667  883D              ;
 668  883D
 669  883D              Calcula_numero_de_disparotes
 670  883D
 671  883D 21 60 70     	ld hl,Album_de_fotos_disparos
 672  8840 EB           	ex de,hl
 673  8841 2A 2A 86     	ld hl,(Stack_snapshot_disparos)
 674  8844
 675  8844 06 00        	ld b,0
 676  8846 7D           	ld a,l
 677  8847 93           	sub e
 678  8848 28 07        	jr z,1F
 679  884A
 680  884A              ; Nº de malotes no es "0".
 681  884A
 682  884A D6 06        2 sub 6
 683  884C 04           	inc b
 684  884D A7           	and a
 685  884E 20 FA        	jr nz,2B
 686  8850 78           	ld a,b
 687  8851
 688  8851 32 2C 86     1 ld (Numero_de_disparotes),a
 689  8854 C9           	ret
 690  8855              ; *************************************************************************************************************************************************************
 691  8855              ;
 692  8855              ; 20/10/22
 693  8855              ;
 694  8855              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 695  8855              ;
 696  8855              ; Destruye el puntero y DE !!!!!
 697  8855
 698  8855 5E           Extrae_address ld e,(hl)
 699  8856 23           	inc hl
 700  8857 56           	ld d,(hl)
 701  8858 2B           	dec hl
 702  8859 EB           	ex de,hl
 703  885A C9           	ret
 704  885B
 705  885B              ; *************************************************************************************************************************************************************
 706  885B              ;
 707  885B              ;	7/2/23
 708  885B              ;
 709  885B              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 710  885B              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 711  885B              ;
 712  885B              ;   Destruye HL y BC !!!!!,
 713  885B              ;
 714  885B              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 715  885B              ;					"0" ..... Izquierda.
 716  885B
 717  885B              Inicia_Puntero_objeto
 718  885B
 719  885B 3A F2 85     	ld a,(Cuad_objeto)
 720  885E E6 01        	and 1
 721  8860 F5           	push af
 722  8861 CC 7F 88     	call z,Inicia_puntero_objeto_izq
 723  8864 F1           	pop af
 724  8865 28 2B        	jr z,1F
 725  8867 CD 6C 88     	call Inicia_puntero_objeto_der
 726  886A 18 26        	jr 1F
 727  886C
 728  886C              ; Arrancamos desde la parte izquierda de la pantalla.
 729  886C              ; Iniciamos (Indice_Sprite_der).
 730  886C
 731  886C 2A E8 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 732  886F 22 EC 85     	ld (Puntero_DESPLZ_der),hl
 733  8872 CD 55 88     	call Extrae_address
 734  8875 22 E2 85     	ld (Puntero_objeto),hl
 735  8878
 736  8878 2A EA 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 737  887B 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 738  887E C9           	ret
 739  887F
 740  887F              ; Arrancamos desde la parte derecha de la pantalla.
 741  887F              ; Iniciamos (Indice_Sprite_izq).
 742  887F
 743  887F 2A EA 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 744  8882 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 745  8885 CD 55 88     	call Extrae_address
 746  8888 22 E2 85     	ld (Puntero_objeto),hl
 747  888B
 748  888B 2A E8 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 749  888E 22 EC 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 750  8891 C9           	ret
 751  8892
 752  8892              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 753  8892
 754  8892 21 38 83     1 ld hl,Amadeus
 755  8895 ED 4B E2 85  	ld bc,(Puntero_objeto)
 756  8899 B7 ED 42     	sub hl,bc
 757  889C C0           	ret nz
 758  889D 21 0C 86     	ld hl,Ctrl_0
 759  88A0 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 760  88A2 C9           	ret 												; _de nuestra nave en los extremos.
 761  88A3
 762  88A3              ; *************************************************************************************************************************************************************
 763  88A3              ;
 764  88A3              ;	8/1/23
 765  88A3              ;
 766  88A3              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 767  88A3              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 768  88A3
 769  88A3              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 770  88A3              ;	_de la 2ª y 3ª entidad respectivamente.
 771  88A3
 772  88A3              Store_Restore_entidades
 773  88A3
 774  88A3 3A 22 86     	ld a,(Numero_de_entidades)
 775  88A6 A7           	and a
 776  88A7 C8           	ret z												 ; Salimos de la rutina si no quedan entidades vivitas y coleando.
 777  88A8
 778  88A8 E5           	push hl
 779  88A9 D5           	push de
 780  88AA C5            	push bc
 781  88AB
 782  88AB              ;	STORE !!!!!
 783  88AB              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 784  88AB
 785  88AB 21 DE 85     	ld hl,Filas
 786  88AE ED 5B 1C 86  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 787  88B2 01 3C 00     	ld bc,60
 788  88B5 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 789  88B7
 790  88B7              ; 	Entidad_sospechosa. 20/4/23
 791  88B7
 792  88B7 3A F7 85     	ld a,(Impacto)
 793  88BA A7           	and a
 794  88BB 28 0C        	jr z,1F
 795  88BD
 796  88BD 2A 1C 86     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 797  88C0 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 798  88C3 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 799  88C4 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 800  88C6 22 32 86     	ld (Entidad_sospechosa_de_colision),hl
 801  88C9
 802  88C9              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 803  88C9
 804  88C9 2A 1E 86     1 ld hl,(Puntero_restore_entidades)
 805  88CC 7E           	ld a,(hl)
 806  88CD A7           	and a
 807  88CE F5           	push af
 808  88CF 28 08        	jr z,2F
 809  88D1
 810  88D1 11 DE 85     	ld de,Filas
 811  88D4 01 3C 00     	ld bc,60
 812  88D7 ED B0        	ldir
 813  88D9
 814  88D9 CD F5 88     2 call Incrementa_punteros_entidades
 815  88DC F1           	pop af
 816  88DD 28 EA        	jr z,1B
 817  88DF
 818  88DF C1           	pop bc
 819  88E0 D1           	pop de
 820  88E1 E1           	pop hl
 821  88E2
 822  88E2 C9           	ret
 823  88E3
 824  88E3              ; **************************************************************************************************
 825  88E3              ;
 826  88E3              ;	29/10/22
 827  88E3              ;
 828  88E3              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 829  88E3
 830  88E3 E5           Restore_entidad push hl
 831  88E4 D5           	push de
 832  88E5 C5            	push bc
 833  88E6
 834  88E6 2A 1C 86     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 835  88E9 11 DE 85     	ld de,Filas
 836  88EC 01 3C 00     	ld bc,60
 837  88EF ED B0        	ldir
 838  88F1
 839  88F1 C1           	pop bc
 840  88F2 D1           	pop de
 841  88F3 E1           	pop hl
 842  88F4 C9           	ret
 843  88F5
 844  88F5
 845  88F5              ; **************************************************************************************************
 846  88F5              ;
 847  88F5              ;	08/05/23
 848  88F5              ;
 849  88F5              ;	Incrementamos los dos punteros de entidades. (+1).
 850  88F5
 851  88F5 2A 1E 86     Incrementa_punteros_entidades ld hl,(Puntero_restore_entidades)
 852  88F8 22 1C 86     	ld (Puntero_store_entidades),hl
 853  88FB 2A 20 86     	ld hl,(Indice_restore)
 854  88FE 23           	inc hl
 855  88FF 23           	inc hl
 856  8900 22 20 86     	ld (Indice_restore),hl
 857  8903 CD 55 88         call Extrae_address
 858  8906 22 1E 86         ld (Puntero_restore_entidades),hl
 859  8909 C9               ret
 860  890A
 861  890A              ; **************************************************************************************************
 862  890A              ;
 863  890A              ;	25/01/23
 864  890A              ;
 865  890A              ;	Restore_Amadeus
 866  890A              ;
 867  890A              ;	Cargamos en DRAW los parámetros de Amadeus.
 868  890A              ;
 869  890A
 870  890A E5           Restore_Amadeus	push hl
 871  890B D5           	push de
 872  890C C5            	push bc
 873  890D 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 874  8910 11 DE 85     	ld de,Filas
 875  8913 01 3C 00     	ld bc,60
 876  8916 ED B0        	ldir
 877  8918 C1           	pop bc
 878  8919 D1           	pop de
 879  891A E1           	pop hl
 880  891B C9           	ret
 881  891C
 882  891C              ; *************************************************************************************************************************************************************
 883  891C              ;
 884  891C              ;	29/04/23
 885  891C              ;
 886  891C              ;	Store_Amadeus
 887  891C              ;
 888  891C              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 889  891C              ;
 890  891C              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 891  891C              ;
 892  891C              ;	DESTRUYE: HL y BC y DE.
 893  891C
 894  891C 21 DE 85     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 895  891F 01 3C 00     	ld bc,60
 896  8922 ED B0        	ldir
 897  8924 C9           	ret
 898  8925
 899  8925              ; -----------------------------------------------------------
 900  8925              ;
 901  8925              ;	27/04/23
 902  8925              ;
 903  8925              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 904  8925              ;
 905  8925              ;	Destruye: HL,BC,DE,A
 906  8925
 907  8925 21 DE 85     Borra_datos_entidad ld hl,Filas
 908  8928 01 3B 00     	ld bc,59
 909  892B AF           	xor a
 910  892C 77           	ld (hl),a
 911  892D 11 DF 85     	ld de,Filas+1
 912  8930 ED B0        	ldir
 913  8932 C9           	ret
 914  8933
 915  8933              ; -----------------------------------------------------------
 916  8933
 917  8933              ; Teclado.
 918  8933
 919  8933 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 920  8935 DB FE        	in a,($fe)
 921  8937 E6 01        	and $01
 922  8939 28 02        	jr z,1f
 923  893B 18 F6        	jr Pulsa_ENTER
 924  893D C9           1 ret
 925  893E
 926  893E              ; **************************************************************************************************
 927  893E              ;
 928  893E              ; Temporización.
 929  893E
 930  893E              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 931  893E              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 932  893E              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 933  893E              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 934  893E
 935  893E              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 936  893E              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 937  893E              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 938  893E
 939  893E              ; A partir de $4f61 no hace falta DELAY.
 940  893E
 941  893E              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 942  893E
 943  893E 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 944  8941 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 945  8942 78           	LD A,B
 946  8943 A7           	AND A
 947  8944 20 FB        	JR NZ,wait
 948  8946 C9           	RET
 949  8947
 950  8947              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 951  8947              ;
 952  8947              ;	5/3/23
 953  8947              ;
 954  8947              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 955  8947
 956  8947              Movimiento_Amadeus
 957  8947
 958  8947              ; Disparo.
 959  8947
 960  8947 3A 3C 86     	ld a,(Habilita_disparo_Amadeus)
 961  894A A7           	and a
 962  894B 20 02        	jr nz,1F
 963  894D 18 15        	jr 2F
 964  894F
 965  894F 3E F7        1 ld a,$f7													; "5" para disparar.
 966  8951 DB FE        	in a,($fe)
 967  8953 E6 10        	and $10
 968  8955
 969  8955 F5           	push af
 970  8956 CC C0 89     	call z,Genera_disparo
 971  8959 F1           	pop af
 972  895A 20 08        	jr nz,2F
 973  895C
 974  895C 3A 3C 86     	ld a,(Habilita_disparo_Amadeus)
 975  895F EE 01        	xor 1
 976  8961 32 3C 86     	ld (Habilita_disparo_Amadeus),a
 977  8964
 978  8964 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 979  8966 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 980  8968 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 981  896A CC 18 95         call z,Mov_left											;			"			"			"			"			"			"			"			"
 982  896D 3E F7        	ld a,$f7
 983  896F DB FE        	in a,($fe)
 984  8971 E6 01        	and $01
 985  8973 C8           	ret z
 986  8974
 987  8974 3E F7        	ld a,$f7
 988  8976 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 989  8978 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 990  897A CC FA 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 991  897D C9           	ret
 992  897E
 993  897E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 994  897E              ;
 995  897E              ;	Rutina provisional para que los malotes cagen balas.
 996  897E
 997  897E              Detecta_disparo_entidad
 998  897E
 999  897E 3A 3F 86     	ld a,(Habilita_disparo_entidad)
1000  8981 A7           	and a
1001  8982 C8           	ret z
1002  8983 3E 7F        	ld a,$7f
1003  8985 DB FE        	in a,($fe)
1004  8987 E6 01        	and 1
1005  8989 C0           	ret nz
1006  898A CD C0 89     	call Genera_disparo
1007  898D C9           	ret
1008  898E
1009  898E              ; Pinta indicadores de FILAS. ------------------------------------------------------
1010  898E
1011  898E 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1012  8991
1013  8991              ; ----------
1014  8991 06 20        	ld b,32
1015  8993 E5           2 push hl
1016  8994 C5           	push bc
1017  8995              ; ----------
1018  8995
1019  8995 06 BF        	ld b,$bf
1020  8997 36 80        1 ld (hl),%10000000
1021  8999 CD C0 90     	call NextScan
1022  899C 10 F9        	djnz 1B
1023  899E
1024  899E              ; ----------
1025  899E C1           	pop bc
1026  899F E1           	pop hl
1027  89A0 2C           	inc l
1028  89A1 10 F0        	djnz 2B
1029  89A3              ; ----------
1030  89A3
1031  89A3 06 03        	ld b,3
1032  89A5 21 00 47         ld hl,$4700
1033  89A8 CD AE 89     3 call Bucle_1
1034  89AB 10 FB            djnz 3B
1035  89AD C9               ret
1036  89AE
1037  89AE C5           Bucle_1 push bc
1038  89AF E5                   push hl
1039  89B0 D1                   pop de
1040  89B1 13                   inc de
1041  89B2 01 FF 00             ld bc,255
1042  89B5 36 FF                ld (hl),255
1043  89B7 ED B0                ldir
1044  89B9 23                   inc hl
1045  89BA 3E 07                ld a,7
1046  89BC 84                   add a,h
1047  89BD 67                   ld h,a
1048  89BE C1                   pop bc
1049  89BF C9                   ret
1050  89C0
1051  89C0              ; ---------------------------------------------------------------
1052  89C0
1053  89C0              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 89C0              ; ******************************************************************************************************************************************************************************************
   2+ 89C0              ;
   3+ 89C0              ;   17/04/23
   4+ 89C0              ;
   5+ 89C0              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 89C0              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 89C0              ;
   8+ 89C0              ;
   9+ 89C0              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 89C0              ;
  11+ 89C0              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 89C0              ;               _ hacen las entidades hacia abajo.
  13+ 89C0              ;
  14+ 89C0              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 89C0              ;
  16+ 89C0              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 89C0              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 89C0              ;
  19+ 89C0              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 89C0              ;           _ la bala.
  21+ 89C0              ;
  22+ 89C0              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 89C0              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 89C0              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 89C0              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 89C0              ;           _ en el momento de generarse la bala)).
  27+ 89C0
  28+ 89C0              Genera_disparo
  29+ 89C0
  30+ 89C0              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 89C0              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 89C0              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 89C0              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 89C0              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 89C0              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 89C0              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 89C0
  38+ 89C0              ; Exclusiones:
  39+ 89C0
  40+ 89C0 3A 16 86         ld a,(Columnas)
  41+ 89C3 47               ld b,a
  42+ 89C4 3A DF 85         ld a,(Columns)
  43+ 89C7 B8               cp b
  44+ 89C8 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 89C9
  46+ 89C9              ; ----- ----- -----
  47+ 89C9
  48+ 89C9 3A 0C 86         ld a,(Ctrl_0)
  49+ 89CC CB 77            bit 6,a
  50+ 89CE 20 06            jr nz,14F
  51+ 89D0
  52+ 89D0 3A E5 85         ld a,(Coordenada_y)
  53+ 89D3 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 89D5 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 89D6
  56+ 89D6 21 00 80     14 ld hl,Indice_disparo
  57+ 89D9 3A E6 85         ld a,(CTRL_DESPLZ)
  58+ 89DC 4F               ld c,a
  59+ 89DD 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 89DF              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 89DF              ;                                            ""        ""       "f9", B="1"
  62+ 89DF              ;                                            ""        ""       "fb", B="2"
  63+ 89DF              ;                                            ""        ""       "fb", B="3"
  64+ 89DF A7               and a
  65+ 89E0 28 10            jr z,1F
  66+ 89E2 E6 01            and 1
  67+ 89E4 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 89E5
  69+ 89E5 79               ld a,c
  70+ 89E6 16 F9            ld d,$f9
  71+ 89E8 23           2 inc hl
  72+ 89E9 23               inc hl
  73+ 89EA 04               inc b
  74+ 89EB BA               cp d
  75+ 89EC 28 04            jr z,1F
  76+ 89EE 14               inc d
  77+ 89EF 14               inc d
  78+ 89F0 18 F6            jr 2B
  79+ 89F2
  80+ 89F2 CD 55 88     1 call Extrae_address
  81+ 89F5 E5               push hl
  82+ 89F6 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 89F8 DD 21 53 93  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 89FC
  85+ 89FC              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 89FC              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 89FC
  88+ 89FC 3A 0C 86         ld a,(Ctrl_0)
  89+ 89FF CB 77            bit 6,a
  90+ 8A01 20 04            jr nz,19F
  91+ 8A03
  92+ 8A03 AF               xor a
  93+ 8A04 32 3F 86         ld (Habilita_disparo_entidad),a
  94+ 8A07
  95+ 8A07 3A F2 85     19 ld a,(Cuad_objeto)
  96+ 8A0A FE 02            cp 2
  97+ 8A0C 38 66            jr c,3F
  98+ 8A0E 28 64            jr z,3F
  99+ 8A10
 100+ 8A10              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8A10
 102+ 8A10 E6 01            and 1
 103+ 8A12 28 30            jr z,4F
 104+ 8A14
 105+ 8A14              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8A14              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8A14              ;
 108+ 8A14              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8A14              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8A14              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8A14
 112+ 8A14 2A E0 85     	ld hl,(Posicion_actual)
 113+ 8A17
 114+ 8A17              ;   Amadeus o entidad ???.
 115+ 8A17
 116+ 8A17 3A 0C 86         ld a,(Ctrl_0)
 117+ 8A1A CB 77            bit 6,a
 118+ 8A1C 28 0A            jr z,8F
 119+ 8A1E
 120+ 8A1E              ; 	Dispara Amadeus.
 121+ 8A1E
 122+ 8A1E 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8A20 CD CF 90         call PreviousScan
 124+ 8A23 CD CF 90         call PreviousScan
 125+ 8A26
 126+ 8A26              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8A26              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8A26              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8A26              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8A26
 131+ 8A26 18 11            jr 10F
 132+ 8A28
 133+ 8A28              ; 	Dispara Entidad.
 134+ 8A28
 135+ 8A28 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8A2B              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8A2B
 138+ 8A2B              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8A2B              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8A2B
 141+ 8A2B C5               push bc
 142+ 8A2C 06 10            ld b,16
 143+ 8A2E CD C0 90     9 call NextScan
 144+ 8A31 10 FB            djnz 9B
 145+ 8A33 C1               pop bc
 146+ 8A34 CD 9E 8A         call Ajusta_disparo_parte_izquierda
 147+ 8A37 18 06            jr 17F
 148+ 8A39
 149+ 8A39              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8A39              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8A39              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8A39              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8A39
 154+ 8A39 CD 9E 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 8A3C CD 13 8B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8A3F              ;                                                      ; _al generar el disparo.
 157+ 8A3F
 158+ 8A3F              ; 	LLegados a este punto tendremos:
 159+ 8A3F              ;
 160+ 8A3F              ;       Puntero_objeto_disparo en IY.
 161+ 8A3F              ;       Rutinas_de_impresion en IX.
 162+ 8A3F              ;       Puntero_de_impresion en HL.
 163+ 8A3F              ;       Impacto/Dirección en BC.
 164+ 8A3F
 165+ 8A3F CD A6 8A     17 call Almacena_disparo
 166+ 8A42 18 52            jr 6F                                             ; RET.
 167+ 8A44
 168+ 8A44              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8A44              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8A44              ;
 171+ 8A44              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8A44              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8A44              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8A44
 175+ 8A44 2A E0 85     4 ld hl,(Posicion_actual)
 176+ 8A47
 177+ 8A47              ;   Amadeus o entidad ???.
 178+ 8A47
 179+ 8A47 3A 0C 86         ld a,(Ctrl_0)
 180+ 8A4A CB 77            bit 6,a
 181+ 8A4C 28 0A            jr z,11F
 182+ 8A4E
 183+ 8A4E              ; 	Dispara Amadeus.
 184+ 8A4E
 185+ 8A4E 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A50 CD CF 90         call PreviousScan
 187+ 8A53 CD CF 90         call PreviousScan
 188+ 8A56
 189+ 8A56              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A56              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A56              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A56              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A56
 194+ 8A56 18 11            jr 13F
 195+ 8A58
 196+ 8A58              ; 	Dispara Entidad.
 197+ 8A58
 198+ 8A58 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A5B              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A5B
 201+ 8A5B              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A5B              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A5B
 204+ 8A5B C5               push bc
 205+ 8A5C 06 10            ld b,16
 206+ 8A5E CD C0 90     12 call NextScan
 207+ 8A61 10 FB            djnz 12B
 208+ 8A63 C1               pop bc
 209+ 8A64
 210+ 8A64 CD 97 8A         call Ajusta_disparo_parte_derecha
 211+ 8A67 18 06            jr 18F
 212+ 8A69
 213+ 8A69              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A69              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A69              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A69              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A69
 218+ 8A69 CD 97 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A6C CD 13 8B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A6F              ;                                                       ; _al generar el disparo.
 221+ 8A6F
 222+ 8A6F              ; LLegados a este punto tendremos:
 223+ 8A6F              ;
 224+ 8A6F              ;       Puntero_objeto_disparo en IY.
 225+ 8A6F              ;       Rutinas_de_impresion en IX.
 226+ 8A6F              ;       Puntero_de_impresion en HL.
 227+ 8A6F              ;       Impacto/Dirección en BC.
 228+ 8A6F
 229+ 8A6F CD A6 8A     18 call Almacena_disparo
 230+ 8A72 18 22            jr 6F                                               ; RET.
 231+ 8A74
 232+ 8A74              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A74
 234+ 8A74 28 11        3 jr z,5F
 235+ 8A76
 236+ 8A76              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A76              ;
 238+ 8A76              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A76              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A76              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A76              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A76
 243+ 8A76              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A76              ;	   ""        ""       "f9", B="1"
 245+ 8A76              ;	   ""        ""       "fb", B="2"
 246+ 8A76              ; 	   ""        ""       "fb", B="3"
 247+ 8A76
 248+ 8A76 2A E0 85     	ld hl,(Posicion_actual)
 249+ 8A79 CD C0 90     	call NextScan
 250+ 8A7C
 251+ 8A7C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A7C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A7C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A7C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A7C
 256+ 8A7C CD 9E 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A7F
 258+ 8A7F              ; 	No se produce impacto. B="$80"
 259+ 8A7F              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A7F
 261+ 8A7F 01 80 80         ld bc,$8080
 262+ 8A82
 263+ 8A82              ; 	LLegados a este punto tendremos:
 264+ 8A82              ;
 265+ 8A82              ;       Puntero_objeto_disparo en IY.
 266+ 8A82              ;       Rutinas_de_impresion en IX.
 267+ 8A82              ;       Puntero_de_impresion en HL.
 268+ 8A82              ;       Impacto/Dirección en BC.
 269+ 8A82
 270+ 8A82 CD A6 8A         call Almacena_disparo
 271+ 8A85 18 0F            jr 6F                                           ; RET.
 272+ 8A87
 273+ 8A87              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A87              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A87              ;
 276+ 8A87              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A87              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A87              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A87              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A87
 281+ 8A87 2A E0 85     5 ld hl,(Posicion_actual)
 282+ 8A8A CD C0 90     	call NextScan
 283+ 8A8D
 284+ 8A8D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A8D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A8D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A8D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A8D
 289+ 8A8D CD 97 8A         call Ajusta_disparo_parte_derecha
 290+ 8A90
 291+ 8A90              ; 	No se produce impacto. B="$80"
 292+ 8A90              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A90
 294+ 8A90 01 80 80     15 ld bc,$8080
 295+ 8A93
 296+ 8A93              ; 	LLegados a este punto tendremos:
 297+ 8A93              ;
 298+ 8A93              ;       Puntero_objeto_disparo en IY.
 299+ 8A93              ;       Rutinas_de_impresion en IX.
 300+ 8A93              ;       Puntero_de_impresion en HL.
 301+ 8A93              ;       Impacto/Dirección en BC.
 302+ 8A93
 303+ 8A93 CD A6 8A         call Almacena_disparo
 304+ 8A96
 305+ 8A96 C9           6 ret
 306+ 8A97
 307+ 8A97              ; ----------------------------------------------------------------
 308+ 8A97              ;
 309+ 8A97              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A97              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A97              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A97
 313+ 8A97 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A98 FE 02            cp 2
 315+ 8A9A 38 01            jr c,1F
 316+ 8A9C 23               inc hl
 317+ 8A9D C9           1 ret
 318+ 8A9E
 319+ 8A9E 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8A9F FE 01        	cp 1
 321+ 8AA1 20 01        	jr nz,1F
 322+ 8AA3 2B           	dec hl
 323+ 8AA4 2B           1 dec hl
 324+ 8AA5 C9               ret
 325+ 8AA6
 326+ 8AA6              ; ----------------------------------------------------------------
 327+ 8AA6              ;
 328+ 8AA6              ;   25/02/23
 329+ 8AA6              ;
 330+ 8AA6              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8AA6              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8AA6              ;
 333+ 8AA6              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8AA6              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8AA6
 336+ 8AA6              Almacena_disparo
 337+ 8AA6
 338+ 8AA6 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8AA7 F1               pop af
 340+ 8AA8 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8AA9
 342+ 8AA9 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8AAA E6 01            and 1
 344+ 8AAC 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8AAE              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8AAE              ; 	Dispara AMADEUS.
 347+ 8AAE
 348+ 8AAE              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8AAE              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8AAE              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8AAE              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8AAE
 353+ 8AAE C5               push bc
 354+ 8AAF 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8AB2 2A 2F 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8AB5 A7               and a
 357+ 8AB6 ED 42            sbc hl,bc
 358+ 8AB8 CC 1E 88         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8ABB C1               pop bc
 360+ 8ABC 28 54            jr z,4F
 361+ 8ABE
 362+ 8ABE 2A 2F 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8AC1 23               inc hl
 364+ 8AC2 23               inc hl
 365+ 8AC3 22 2F 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8AC6              ;                                                   ; _ Disparo_(+1).
 367+ 8AC6 18 18            jr 2F
 368+ 8AC8
 369+ 8AC8              ; Dispara una entidad.
 370+ 8AC8
 371+ 8AC8 C5           1 push bc
 372+ 8AC9 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8ACC 2A 2D 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8ACF A7               and a
 375+ 8AD0 ED 42            sbc hl,bc
 376+ 8AD2 CC 17 88         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8AD5 C1               pop bc
 378+ 8AD6 28 3A            jr z,4F
 379+ 8AD8
 380+ 8AD8 2A 2D 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8ADB 23               inc hl
 382+ 8ADC 23               inc hl
 383+ 8ADD 22 2D 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8AE0              ;                                                   ; _ Disparo_(+1).
 385+ 8AE0 CD 55 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8AE3              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8AE3              ;
 388+ 8AE3              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8AE3              ;                                                     Rutinas_de_impresion en IX.
 390+ 8AE3              ;                                                     Puntero_de_impresion en HL.
 391+ 8AE3              ;                                                     Impacto/Dirección en BC.
 392+ 8AE3
 393+ 8AE3 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8AE4 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8AE5 23               inc hl                                          ; _ al siguiente.
 396+ 8AE6 A7               and a
 397+ 8AE7 20 C0            jr nz,3B
 398+ 8AE9
 399+ 8AE9 08               ex af,af
 400+ 8AEA ED 73 24 86      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8AEE F9               ld sp,hl
 402+ 8AEF
 403+ 8AEF DD E5            push ix                                         ; Rutina de impresión.
 404+ 8AF1 F5               push af                                         ; Puntero de impresión.
 405+ 8AF2 FD E5            push iy                                         ; Puntero objeto.
 406+ 8AF4 C5               push bc                                         ; Control.
 407+ 8AF5
 408+ 8AF5 ED 7B 24 86      ld sp,(Stack)
 409+ 8AF9
 410+ 8AF9              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8AF9
 412+ 8AF9 21 1A 86     	ld hl,Ctrl_1
 413+ 8AFC CB C6        	set 0,(hl)
 414+ 8AFE
 415+ 8AFE DD E5        	push ix
 416+ 8B00 E1               pop hl
 417+ 8B01 F5               push af
 418+ 8B02 DD E1            pop ix
 419+ 8B04
 420+ 8B04 CD A0 7F     	call Guarda_foto_registros
 421+ 8B07
 422+ 8B07 21 1A 86     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8B0A CB 86        	res 0,(hl)
 424+ 8B0C
 425+ 8B0C              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8B0C              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8B0C
 428+ 8B0C CD 1E 88         call Inicia_Puntero_Disparo_Amadeus
 429+ 8B0F CD 17 88         call Inicia_Puntero_Disparo_Entidades
 430+ 8B12
 431+ 8B12 C9           4 ret
 432+ 8B13
 433+ 8B13              ; ----------------------------------------------------------------
 434+ 8B13              ;
 435+ 8B13              ;   4/3/23
 436+ 8B13              ;
 437+ 8B13              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8B13              ;   _ al generarse el disparo.
 439+ 8B13              ;
 440+ 8B13              ;       "$80" ..... No se produce colisión.
 441+ 8B13              ;       "$81" ..... Se produce colisión.
 442+ 8B13
 443+ 8B13              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8B13              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8B13
 446+ 8B13
 447+ 8B13 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8B15 E5               push hl                                        ; Puntero de impresión.
 449+ 8B16
 450+ 8B16 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8B18 CD 34 8B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8B1B
 453+ 8B1B 7B               ld a,e
 454+ 8B1C E6 01            and 1
 455+ 8B1E 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8B20
 457+ 8B20 E1               pop hl
 458+ 8B21 E5               push hl
 459+ 8B22 CD C0 90         call NextScan
 460+ 8B25
 461+ 8B25 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8B26 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8B28 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8B2A              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8B2A 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8B2C CD 34 8B         call Bucle_2
 467+ 8B2F
 468+ 8B2F 43           2 ld b,e
 469+ 8B30 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8B31 FD E1            pop iy
 471+ 8B33 C9               ret
 472+ 8B34
 473+ 8B34               ; ---------- ----------
 474+ 8B34
 475+ 8B34 06 02        Bucle_2 ld b,2
 476+ 8B36 FD 7E 00     2 ld a,(iy)
 477+ 8B39 A6               and (hl)
 478+ 8B3A 28 02            jr z,1F
 479+ 8B3C 1E 81            ld e,$81
 480+ 8B3E 23           1 inc hl
 481+ 8B3F FD 23            inc iy
 482+ 8B41 10 F3            djnz 2B
 483+ 8B43 C9               ret
 484+ 8B44
 485+ 8B44              ; -------------------------------------------------------------------------------------------------------------
 486+ 8B44              ;
 487+ 8B44              ;   11/04/23
 488+ 8B44              ;
 489+ 8B44              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8B44              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8B44              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8B44              ;
 493+ 8B44              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8B44
 495+ 8B44              Compara_coordenadas_X
 496+ 8B44
 497+ 8B44              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8B44              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8B44
 500+ 8B44              ; Preparamos registros:
 501+ 8B44
 502+ 8B44 21 E4 85         ld hl,Filas+6
 503+ 8B47 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8B48 23               inc hl
 505+ 8B49 23               inc hl
 506+ 8B4A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8B4B 43               ld b,e
 508+ 8B4C 21 F2 85         ld hl,Filas+20
 509+ 8B4F 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8B50 21 39 86         ld hl,Coordenadas_X_Entidad
 511+ 8B53 CD 69 8D         call Guarda_coordenadas_X
 512+ 8B56
 513+ 8B56              ; Preparamos registros:
 514+ 8B56
 515+ 8B56 21 7C 84         ld hl,Amadeus_db+6
 516+ 8B59 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8B5A 23               inc hl
 518+ 8B5B 23               inc hl
 519+ 8B5C 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8B5D 7B               ld a,e
 521+ 8B5E 08               ex af,af'
 522+ 8B5F 21 8A 84         ld hl,Amadeus_db+20
 523+ 8B62 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8B63 21 36 86         ld hl,Coordenadas_X_Amadeus
 525+ 8B66 CD 69 8D         call Guarda_coordenadas_X
 526+ 8B69
 527+ 8B69              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8B69              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8B69
 530+ 8B69 04               inc b
 531+ 8B6A 05               dec b
 532+ 8B6B 28 04            jr z,1F
 533+ 8B6D 06 03            ld b,3
 534+ 8B6F 18 02            jr 2F
 535+ 8B71 06 02        1 ld b,2
 536+ 8B73 08           2 ex af,af'
 537+ 8B74 3C               inc a
 538+ 8B75 3D               dec a
 539+ 8B76 28 04            jr z,5F
 540+ 8B78 0E 03            ld c,3
 541+ 8B7A 18 02            jr 6F
 542+ 8B7C 0E 02        5 ld c,2
 543+ 8B7E 79           6 ld a,c
 544+ 8B7F 08               ex af,af'
 545+ 8B80 11 39 86         ld de,Coordenadas_X_Entidad
 546+ 8B83 1A           4 ld a,(de)
 547+ 8B84 21 36 86         ld hl,Coordenadas_X_Amadeus
 548+ 8B87 BE           3 cp (hl)
 549+ 8B88 28 0E            jr z,7F
 550+ 8B8A 23               inc hl
 551+ 8B8B 0D               dec c
 552+ 8B8C 20 F9            jr nz,3B
 553+ 8B8E 13               inc de
 554+ 8B8F 08               ex af,af'
 555+ 8B90 4F               ld c,a
 556+ 8B91 08               ex af,af'
 557+ 8B92 10 EF            djnz 4B
 558+ 8B94
 559+ 8B94              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8B94
 561+ 8B94 CD A8 8D     8 call Limpia_Coordenadas_X
 562+ 8B97 C9               ret
 563+ 8B98
 564+ 8B98              7
 565+ 8B98 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8B9A 32 F7 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8B9D 21 31 86         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8BA0 CB D6            set 2,(hl)
 569+ 8BA2 18 F0            jr 8B
 570+ 8BA4
 571+ 8BA4              ; -----------------------------------------------------------------------
 572+ 8BA4              ;
 573+ 8BA4              ;   17/04/23
 574+ 8BA4              ;
 575+ 8BA4
 576+ 8BA4              Detecta_colision_nave_entidad
 577+ 8BA4
 578+ 8BA4              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8BA4
 580+ 8BA4 2A E0 85         ld hl,(Posicion_actual)
 581+ 8BA7 CD 25 90         call Calcula_puntero_de_impresion
 582+ 8BAA
 583+ 8BAA              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8BAA              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8BAA
 586+ 8BAA DD E5            push ix
 587+ 8BAC E1               pop hl
 588+ 8BAD E5               push hl
 589+ 8BAE
 590+ 8BAE              ; ----- ----- -----
 591+ 8BAE 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8BB0 06 0A            ld b,10
 593+ 8BB2 CD E2 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8BB5 7B               ld a,e
 595+ 8BB6 FE 05            cp 5
 596+ 8BB8 38 0E            jr c,3F
 597+ 8BBA
 598+ 8BBA              ; LLegados a este punto:
 599+ 8BBA              ;
 600+ 8BBA              ;   HAY COLISIÓN !!!!!.
 601+ 8BBA              ;
 602+ 8BBA              ;   .db (Impacto) de Amadeus a "1".
 603+ 8BBA              ;   SET el bit3 de (Impacto2).
 604+ 8BBA              ;
 605+ 8BBA              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8BBA
 607+ 8BBA 21 8F 84         ld hl,Amadeus_db+25
 608+ 8BBD 36 01            ld (hl),1
 609+ 8BBF 21 31 86         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8BC2 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8BC4 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8BC6 18 18            jr 1F
 613+ 8BC8
 614+ 8BC8              ; -----
 615+ 8BC8
 616+ 8BC8 E1           3 pop hl
 617+ 8BC9 CD C0 90         call NextScan
 618+ 8BCC E5               push hl
 619+ 8BCD 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8BCE FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8BD0 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8BD2 30 0C            jr nc,1F
 623+ 8BD4              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8BD4 10 DC            djnz 2B
 625+ 8BD6
 626+ 8BD6              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8BD6
 628+ 8BD6              ; LLegados a este punto:
 629+ 8BD6              ;
 630+ 8BD6              ;   NO HAY COLISIÓN !!!!!.
 631+ 8BD6              ;
 632+ 8BD6              ;   .db (Impacto) de Amadeus a "0".
 633+ 8BD6              ;   RES el bit2 de (Impacto2).
 634+ 8BD6              ;
 635+ 8BD6              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8BD6              ;   Lo colocamos a "0".
 637+ 8BD6
 638+ 8BD6 21 31 86         ld hl,Impacto2
 639+ 8BD9 CB 96            res 2,(hl)
 640+ 8BDB 2A 32 86         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8BDE 36 00            ld (hl),0
 642+ 8BE0
 643+ 8BE0 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8BE1 C9               ret
 645+ 8BE2
 646+ 8BE2               ; ---------- ----------
 647+ 8BE2
 648+ 8BE2 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8BE3 3A DF 85         ld a,(Columns)
 650+ 8BE6 47               ld b,a
 651+ 8BE7 FD 7E 00     2 ld a,(iy)
 652+ 8BEA BE               cp (hl)
 653+ 8BEB 28 01            jr z,1F
 654+ 8BED
 655+ 8BED 1C               inc e
 656+ 8BEE
 657+ 8BEE 23           1 inc hl
 658+ 8BEF FD 23            inc iy
 659+ 8BF1 10 F4            djnz 2B
 660+ 8BF3 C1               pop bc
 661+ 8BF4 C9               ret
 662+ 8BF5
 663+ 8BF5              ; -------------------------------------------------------------------------------------------------------------
 664+ 8BF5              ;
 665+ 8BF5              ;   13/03/23
 666+ 8BF5              ;
 667+ 8BF5              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8BF5              ;
 669+ 8BF5              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8BF5
 671+ 8BF5 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8BF8 7E               ld a,(hl)
 673+ 8BF9 A7               and a
 674+ 8BFA C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8BFB
 676+ 8BFB 44               ld b,h
 677+ 8BFC 4D               ld c,l
 678+ 8BFD 2A 2A 86         ld hl,(Stack_snapshot_disparos)
 679+ 8C00 E5               push hl
 680+ 8C01 A7               and a
 681+ 8C02 ED 42            sbc hl,bc
 682+ 8C04 E5               push hl
 683+ 8C05 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8C06
 685+ 8C06 E1               pop hl
 686+ 8C07 54               ld d,h
 687+ 8C08 5D               ld e,l
 688+ 8C09 1B               dec de
 689+ 8C0A ED B8            lddr                                                ; Limpiamos.
 690+ 8C0C
 691+ 8C0C 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8C0F 22 2A 86         ld (Stack_snapshot_disparos),hl
 693+ 8C12
 694+ 8C12 C9               ret
 695+ 8C13
 696+ 8C13              ; -------------------------------------------------------------------------------------------------------------
 697+ 8C13              ;
 698+ 8C13              ;   28/03/23
 699+ 8C13              ;
 700+ 8C13
 701+ 8C13 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8C16 2A 2F 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8C19
 704+ 8C19 CD 55 88     2 call Extrae_address
 705+ 8C1C 7E               ld a,(hl)
 706+ 8C1D A7               and a
 707+ 8C1E 28 36            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8C20
 709+ 8C20              ; ----- ----- ----- ----- ----- -----
 710+ 8C20
 711+ 8C20 C5               push bc
 712+ 8C21 CD E2 8C         call foto_disparo_a_borrar
 713+ 8C24
 714+ 8C24              ; Existe colisión con este disparo???
 715+ 8C24
 716+ 8C24 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8C25 7E               ld a,(hl)
 718+ 8C26 2B               dec hl
 719+ 8C27 E6 01            and 1
 720+ 8C29 28 22            jr z,9F
 721+ 8C2B
 722+ 8C2B              ;   En este punto:
 723+ 8C2B              ;
 724+ 8C2B              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8C2B              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8C2B              ;   _con la entidad).
 727+ 8C2B              ;
 728+ 8C2B              ;   Disparo_2A defw 0                                ; Control.
 729+ 8C2B              ;    defw 0                                          ; Puntero objeto.
 730+ 8C2B              ;    defw 0                                          ; Puntero de impresión.
 731+ 8C2B              ;    defw 0                                          ; Rutina de impresión.
 732+ 8C2B
 733+ 8C2B E5               push hl
 734+ 8C2C
 735+ 8C2C 06 04            ld b,4
 736+ 8C2E 23           19 inc hl
 737+ 8C2F 10 FD            djnz 19B
 738+ 8C31
 739+ 8C31 CD 55 88         call Extrae_address
 740+ 8C34 CD D7 96         call Genera_coordenadas_disparo
 741+ 8C37
 742+ 8C37              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8C37
 744+ 8C37 21 34 86         ld hl,Coordenadas_disparo_certero
 745+ 8C3A 72               ld (hl),d
 746+ 8C3B 23               inc hl
 747+ 8C3C 73               ld (hl),e
 748+ 8C3D
 749+ 8C3D              ; Elimino el disparo de la base de datos.
 750+ 8C3D
 751+ 8C3D E1               pop hl
 752+ 8C3E CD 5E 8D         call Elimina_disparo_de_base_de_datos
 753+ 8C41 21 31 86         ld hl,Impacto2
 754+ 8C44 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8C46
 756+ 8C46              ;debuggggg
 757+ 8C46 2A 34 86         ld hl,(Coordenadas_disparo_certero)
 758+ 8C49 18 FE            jr $
 759+ 8C4B              ;debuggggg
 760+ 8C4B
 761+ 8C4B 18 06            jr 11F
 762+ 8C4D
 763+ 8C4D CD 0B 8D     9 call Mueve_disparo
 764+ 8C50 CD E2 8C         call foto_disparo_a_borrar
 765+ 8C53
 766+ 8C53 C1           11 pop bc
 767+ 8C54 18 04            jr 7F
 768+ 8C56
 769+ 8C56              ; ----- ----- ----- ----- ----- -----
 770+ 8C56
 771+ 8C56 ED 42        1 sbc hl,bc
 772+ 8C58 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 773+ 8C5A 2A 2F 86     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 774+ 8C5D 23               inc hl
 775+ 8C5E 23               inc hl
 776+ 8C5F 22 2F 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 777+ 8C62 18 B5            jr 2B
 778+ 8C64 CD 1E 88     3 call Inicia_Puntero_Disparo_Amadeus
 779+ 8C67
 780+ 8C67 01 66 84         ld bc,Disparo_11
 781+ 8C6A 2A 2D 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 782+ 8C6D
 783+ 8C6D CD 55 88     5 call Extrae_address
 784+ 8C70 7E               ld a,(hl)
 785+ 8C71 A7               and a
 786+ 8C72 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 787+ 8C74
 788+ 8C74              ; ----- ----- ----- ----- ----- -----
 789+ 8C74
 790+ 8C74 C5               push bc
 791+ 8C75 CD E2 8C         call foto_disparo_a_borrar
 792+ 8C78
 793+ 8C78              ; Existe colisión con este disparo???
 794+ 8C78
 795+ 8C78 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 796+ 8C79 7E               ld a,(hl)
 797+ 8C7A 2B               dec hl
 798+ 8C7B E6 01            and 1
 799+ 8C7D 28 48            jr z,10F
 800+ 8C7F
 801+ 8C7F              ; La colisión se produce con Amadeus???
 802+ 8C7F              ; Amadeus siempre tiene (Coordenada_y)="$16".
 803+ 8C7F
 804+ 8C7F E5               push hl
 805+ 8C80
 806+ 8C80 06 04            ld b,4
 807+ 8C82 23           16 inc hl
 808+ 8C83 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 809+ 8C85 CD 55 88         call Extrae_address
 810+ 8C88 CD D7 96         call Genera_coordenadas_disparo
 811+ 8C8B
 812+ 8C8B 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 813+ 8C8C FE 16            cp $16
 814+ 8C8E 38 22            jr c,15F
 815+ 8C90
 816+ 8C90              ; (Colisiones en filas 16 y 17).
 817+ 8C90
 818+ 8C90 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 819+ 8C91
 820+ 8C91              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 821+ 8C91
 822+ 8C91 21 7C 84         ld hl,Amadeus_db+6
 823+ 8C94 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 824+ 8C95 23               inc hl
 825+ 8C96 23               inc hl
 826+ 8C97 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 827+ 8C98 21 8A 84         ld hl,Amadeus_db+20
 828+ 8C9B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 829+ 8C9C 21 36 86         ld hl,Coordenadas_X_Amadeus
 830+ 8C9F CD 69 8D         call Guarda_coordenadas_X
 831+ 8CA2
 832+ 8CA2 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 833+ 8CA3
 834+ 8CA3              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 835+ 8CA3
 836+ 8CA3 06 03            ld b,3
 837+ 8CA5 21 36 86         ld hl,Coordenadas_X_Amadeus
 838+ 8CA8 7E           18 ld a,(hl)
 839+ 8CA9 BA               cp d
 840+ 8CAA 20 03            jr nz,17F
 841+ 8CAC
 842+ 8CAC              ; Colisión Amadeus !!!!!!!!!!
 843+ 8CAC
 844+ 8CAC E1               pop hl
 845+ 8CAD 18 09            jr 14F
 846+ 8CAF
 847+ 8CAF 23           17 inc hl
 848+ 8CB0 10 F6            djnz 18B
 849+ 8CB2
 850+ 8CB2              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 851+ 8CB2              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 852+ 8CB2
 853+ 8CB2 E1           15 pop hl
 854+ 8CB3 23               inc hl
 855+ 8CB4 35               dec (hl)
 856+ 8CB5 2B               dec hl
 857+ 8CB6 18 0F            jr 10F
 858+ 8CB8
 859+ 8CB8              ; -----------------------debug
 860+ 8CB8
 861+ 8CB8              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 862+ 8CB8              ; _ almacén de coordenadas_X de Amadeus.
 863+ 8CB8
 864+ 8CB8 E5           14 push hl
 865+ 8CB9 CD 5E 8D         call Elimina_disparo_de_base_de_datos
 866+ 8CBC 21 31 86         ld hl,Impacto2
 867+ 8CBF CB CE            set 1,(hl)
 868+ 8CC1 CD A8 8D         call Limpia_Coordenadas_X
 869+ 8CC4
 870+ 8CC4 E1               pop hl
 871+ 8CC5 18 06            jr 12F
 872+ 8CC7
 873+ 8CC7 CD 0B 8D     10 call Mueve_disparo
 874+ 8CCA CD E2 8C         call foto_disparo_a_borrar
 875+ 8CCD C1           12 pop bc
 876+ 8CCE
 877+ 8CCE 18 04            jr 8F
 878+ 8CD0
 879+ 8CD0              ; ----- ----- ----- ----- ----- -----
 880+ 8CD0
 881+ 8CD0 ED 42        4 sbc hl,bc
 882+ 8CD2 28 0A            jr z,6F
 883+ 8CD4
 884+ 8CD4 2A 2D 86     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 885+ 8CD7 23               inc hl
 886+ 8CD8 23               inc hl
 887+ 8CD9 22 2D 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 888+ 8CDC 18 8F            jr 5B
 889+ 8CDE
 890+ 8CDE CD 17 88     6 call Inicia_Puntero_Disparo_Entidades
 891+ 8CE1 C9               ret
 892+ 8CE2
 893+ 8CE2              ; ------------------------------------------------------------------
 894+ 8CE2
 895+ 8CE2              foto_disparo_a_borrar
 896+ 8CE2
 897+ 8CE2 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 898+ 8CE3 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 899+ 8CE4 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 900+ 8CE5
 901+ 8CE5 E5               push hl
 902+ 8CE6 23               inc hl
 903+ 8CE7 23               inc hl
 904+ 8CE8 ED 73 24 86      ld (Stack),sp
 905+ 8CEC F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 906+ 8CED FD E1            pop iy
 907+ 8CEF DD E1            pop ix
 908+ 8CF1 E1               pop hl
 909+ 8CF2 ED 7B 24 86      ld sp,(Stack)
 910+ 8CF6 3A 1A 86         ld a,(Ctrl_1)
 911+ 8CF9 CB C7            set 0,a
 912+ 8CFB 32 1A 86         ld (Ctrl_1),a
 913+ 8CFE CD A0 7F         call Guarda_foto_registros
 914+ 8D01 3A 1A 86         ld a,(Ctrl_1)
 915+ 8D04 CB 87            res 0,a
 916+ 8D06 32 1A 86         ld (Ctrl_1),a
 917+ 8D09 E1               pop hl
 918+ 8D0A C9               ret
 919+ 8D0B
 920+ 8D0B E5           Mueve_disparo push hl
 921+ 8D0C 7E               ld a,(hl)
 922+ 8D0D 06 04            ld b,4
 923+ 8D0F 23           1 inc hl
 924+ 8D10 10 FD            djnz 1B
 925+ 8D12
 926+ 8D12              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 927+ 8D12
 928+ 8D12 CD 55 88         call Extrae_address
 929+ 8D15
 930+ 8D15 E6 01            and 1
 931+ 8D17 28 2B            jr z,2F
 932+ 8D19
 933+ 8D19              ; Disparo hacia arriba, (Amadeus).
 934+ 8D19
 935+ 8D19              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 936+ 8D19              ; _ de la dificultad.
 937+ 8D19
 938+ 8D19 CD CF 90         call PreviousScan
 939+ 8D1C CD CF 90         call PreviousScan
 940+ 8D1F CD CF 90         call PreviousScan
 941+ 8D22
 942+ 8D22              ; Detecta si el disparo de Amadeus sale de pantalla:
 943+ 8D22
 944+ 8D22 7C               ld a,h
 945+ 8D23 FE 40            cp $40
 946+ 8D25 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 947+ 8D27
 948+ 8D27              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 949+ 8D27
 950+ 8D27 EB               ex de,hl
 951+ 8D28 06 04            ld b,4
 952+ 8D2A 2B           6 dec hl
 953+ 8D2B 10 FD            djnz 6B
 954+ 8D2D
 955+ 8D2D CD 5E 8D         call Elimina_disparo_de_base_de_datos
 956+ 8D30 E1               pop hl
 957+ 8D31 18 10            jr 7F
 958+ 8D33
 959+ 8D33              ; Se ha desplazado la bala, compruebo colisión.
 960+ 8D33
 961+ 8D33 D5           3 push de
 962+ 8D34 C5               push bc
 963+ 8D35
 964+ 8D35 CD 13 8B         call Comprueba_Colision
 965+ 8D38
 966+ 8D38              ; B="$80", no hay colisión. B="$81", existe colisión.
 967+ 8D38
 968+ 8D38 78               ld a,b
 969+ 8D39
 970+ 8D39 C1               pop bc
 971+ 8D3A D1               pop de
 972+ 8D3B
 973+ 8D3B EB               ex de,hl
 974+ 8D3C
 975+ 8D3C 73               ld (hl),e
 976+ 8D3D 23               inc hl
 977+ 8D3E 72               ld (hl),d
 978+ 8D3F
 979+ 8D3F E1           4 pop hl
 980+ 8D40 23               inc hl
 981+ 8D41 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 982+ 8D42 2B               dec hl
 983+ 8D43 C9           7 ret
 984+ 8D44
 985+ 8D44              ; Disparo hacia abajo, (Entidad).
 986+ 8D44
 987+ 8D44              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 988+ 8D44              ; _ de la dificultad.
 989+ 8D44
 990+ 8D44 CD C0 90     2 call NextScan
 991+ 8D47 CD C0 90         call NextScan
 992+ 8D4A CD C0 90         call NextScan
 993+ 8D4D
 994+ 8D4D              ; Detecta si el disparo de la entidad sale de la pantalla.
 995+ 8D4D
 996+ 8D4D 7C               ld a,h
 997+ 8D4E FE 58            cp $58
 998+ 8D50 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 999+ 8D52
1000+ 8D52 EB               ex de,hl
1001+ 8D53 06 04            ld b,4
1002+ 8D55 2B           5 dec hl
1003+ 8D56 10 FD            djnz 5B
1004+ 8D58
1005+ 8D58 CD 5E 8D         call Elimina_disparo_de_base_de_datos
1006+ 8D5B E1               pop hl
1007+ 8D5C 18 E5            jr 7B
1008+ 8D5E
1009+ 8D5E              ; HL apunta al primer byte de la base de datos del disparo.
1010+ 8D5E
1011+ 8D5E 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1012+ 8D61 AF               xor a
1013+ 8D62 77               ld (hl),a
1014+ 8D63 54               ld d,h
1015+ 8D64 5D               ld e,l
1016+ 8D65 13               inc de
1017+ 8D66 ED B0            ldir
1018+ 8D68 C9               ret
1019+ 8D69
1020+ 8D69              ; -----------------------------------------------------------------
1021+ 8D69              ;
1022+ 8D69              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1023+ 8D69              ;
1024+ 8D69              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1025+ 8D69              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1026+ 8D69              ;
1027+ 8D69              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1028+ 8D69              ;
1029+ 8D69              ;   INPUTS:
1030+ 8D69              ;
1031+ 8D69              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1032+ 8D69              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1033+ 8D69              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1034+ 8D69
1035+ 8D69              ;   MODIFICA: A, HL, DE y C
1036+ 8D69
1037+ 8D69 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1038+ 8D6A 79               ld a,c
1039+ 8D6B E6 01            and 1
1040+ 8D6D 20 03            jr nz,1F
1041+ 8D6F 14               inc d
1042+ 8D70 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1043+ 8D72
1044+ 8D72              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1045+ 8D72              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1046+ 8D72
1047+ 8D72 15           1 dec d
1048+ 8D73 23           2 inc hl
1049+ 8D74 72               ld (hl),d
1050+ 8D75
1051+ 8D75 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1052+ 8D76 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1053+ 8D77 C8               ret z
1054+ 8D78
1055+ 8D78 AF               xor a
1056+ 8D79 5F               ld e,a
1057+ 8D7A 18 ED            jr Guarda_coordenadas_X
1058+ 8D7C
1059+ 8D7C              ; -----------------------------------------------------------------
1060+ 8D7C              ;
1061+ 8D7C              ;   12/04/23
1062+ 8D7C              ;
1063+ 8D7C
1064+ 8D7C 3A 31 86     Selector_de_impactos ld a,(Impacto2)
1065+ 8D7F A7               and a
1066+ 8D80 C8               ret z
1067+ 8D81
1068+ 8D81 FE 04            cp 4
1069+ 8D83 20 09            jr nz,1F
1070+ 8D85
1071+ 8D85
1072+ 8D85              ; La colisión se produce por contacto entre Amadeus y una entidad.
1073+ 8D85
1074+ 8D85 CD A4 8B         call Detecta_colision_nave_entidad
1075+ 8D88
1076+ 8D88 21 31 86         ld hl,Impacto2
1077+ 8D8B CB 5E            bit 3,(hl)
1078+ 8D8D C0               ret nz                                               ; Existe colisión, RET.
1079+ 8D8E
1080+ 8D8E              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1081+ 8D8E              ; Primero analizamos si algún disparo impacta en Amadeus.
1082+ 8D8E
1083+ 8D8E 21 31 86     1 ld hl,Impacto2
1084+ 8D91 CB 4E            bit 1,(hl)
1085+ 8D93 28 07            jr z,2F
1086+ 8D95
1087+ 8D95 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1088+ 8D98 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1089+ 8D9A 18 0B            jr 3F
1090+ 8D9C
1091+ 8D9C 21 31 86     2 ld hl,Impacto2
1092+ 8D9F CB 46            bit 0,(hl)
1093+ 8DA1 C8               ret z
1094+ 8DA2
1095+ 8DA2              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1096+ 8DA2
1097+ 8DA2 21 1A 86         ld hl,Ctrl_1
1098+ 8DA5 CB D6            set 2,(hl)
1099+ 8DA7
1100+ 8DA7 C9           3 ret
1101+ 8DA8
1102+ 8DA8              ; -----------------------------------------------------------------
1103+ 8DA8              ;
1104+ 8DA8              ;   16/04/23
1105+ 8DA8              ;
1106+ 8DA8
1107+ 8DA8 AF           Limpia_Coordenadas_X xor a
1108+ 8DA9 06 06            ld b,6
1109+ 8DAB 21 36 86         ld hl,Coordenadas_X_Amadeus
1110+ 8DAE 77           1 ld (hl),a
1111+ 8DAF 23               inc hl
1112+ 8DB0 10 FC            djnz 1B
1113+ 8DB2 C9               ret
1114+ 8DB3
1115+ 8DB3              ; -----------------------------------------------------------------
1116+ 8DB3              ;
1117+ 8DB3              ;   25/04/23
1118+ 8DB3              ;
1119+ 8DB3
1120+ 8DB3              Determina_resultado_comparativa
1121+ 8DB3
1122+ 8DB3 7C               ld a,h
1123+ 8DB4 06 00            ld b,0
1124+ 8DB6
1125+ 8DB6 CD CE 8D         call Compara_cositas
1126+ 8DB9 04               inc b
1127+ 8DBA 05               dec b
1128+ 8DBB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1129+ 8DBC
1130+ 8DBC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1131+ 8DBD 06 00            ld b,0
1132+ 8DBF FE 02            cp $02
1133+ 8DC1 28 09            jr z,1F
1134+ 8DC3 FE FE            cp $fe
1135+ 8DC5 28 05            jr z,1F
1136+ 8DC7
1137+ 8DC7 CD CE 8D         call Compara_cositas
1138+ 8DCA 18 01            jr 2F
1139+ 8DCC
1140+ 8DCC 04           1 inc b
1141+ 8DCD C9           2 ret
1142+ 8DCE
1143+ 8DCE A7           Compara_cositas and a
1144+ 8DCF 28 07            jr z,1F
1145+ 8DD1 FE FF            cp $ff
1146+ 8DD3 28 03            jr z,1F
1147+ 8DD5 FE 01            cp $01
1148+ 8DD7 C0               ret nz
1149+ 8DD8 04           1 inc b
1150+ 8DD9 C9               ret
1151+ 8DDA
# file closed: Disparo.asm
1054  8DDA              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8DDA              ; ******************************************************************************************************************************************************************************************
   2+ 8DDA              ;
   3+ 8DDA              ; 01/23
   4+ 8DDA              ;
   5+ 8DDA              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8DDA
   7+ 8DDA CD B4 90     Draw call Prepara_draw
   8+ 8DDD 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8DDE A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8DDF 28 05        	jr z,2F
  11+ 8DE1
  12+ 8DE1 3A F2 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8DE4 18 0C        	jr 1F
  14+ 8DE6 2A F0 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8DE9 22 E0 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8DEC CD 7B 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8DEF              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8DEF CD FA 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8DF2 3A 0C 86     1 ld a,(Ctrl_0)
  20+ 8DF5 CB 6F        	bit 5,a
  21+ 8DF7 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8DF9
  23+ 8DF9 CD 11 8E     	call Comprueba_limite_horizontal
  24+ 8DFC CD A1 8E     	call Comprueba_limite_vertical
  25+ 8DFF
  26+ 8DFF              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8DFF
  28+ 8DFF CD EE 8F     3 call calcula_CColumnass
  29+ 8E02 CD 25 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8E05 CD 7A 90     	call Define_rutina_de_impresion
  31+ 8E08
  32+ 8E08 3A 0C 86     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8E0B CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8E0D 32 0C 86     	ld (Ctrl_0),a
  35+ 8E10
  36+ 8E10 C9           	ret
  37+ 8E11
  38+ 8E11              ; *******************************************************************************************************************************************************************************************
  39+ 8E11              ;	21/01/23
  40+ 8E11              ;
  41+ 8E11              ; 	Comprueba_limite_horizontal.
  42+ 8E11              ;
  43+ 8E11              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8E11              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8E11              ;
  46+ 8E11              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8E11              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8E11              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8E11              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8E11
  51+ 8E11
  52+ 8E11
  53+ 8E11 3A 0C 86     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8E14 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8E16 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8E18 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8E1A 32 0C 86     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8E1D 18 09            jr 6F
  59+ 8E1F CB 5F        1 bit 3,a
  60+ 8E21 28 0A            jr z,2F
  61+ 8E23 E6 F7            and $f7
  62+ 8E25 32 0C 86         ld (Ctrl_0),a
  63+ 8E28 CD 7B 8F     6 call Inicializacion
  64+ 8E2B 18 5B            jr 5F
  65+ 8E2D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8E2E
  67+ 8E2E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8E2E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8E2E
  70+ 8E2E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8E2F 2A 17 86     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8E32 CD 80 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8E35 67           	ld h,a
  74+ 8E36 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8E37 CD 80 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8E3A 67           	ld h,a
  77+ 8E3B A7           	and a
  78+ 8E3C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8E3E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8E3F 3A F2 85     	ld a,(Cuad_objeto)
  81+ 8E42 FE 02        	cp 2
  82+ 8E44 38 1E        	jr c,3F
  83+ 8E46 28 1C        	jr z,3F
  84+ 8E48 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8E49 28 23            jr z,7F
  86+ 8E4B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8E4D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8E4F E1           	pop hl
  89+ 8E50
  90+ 8E50              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8E50              ; _para indicar con E="2" en caso necesario.
  92+ 8E50
  93+ 8E50 E5               push hl
  94+ 8E51 C5               push bc
  95+ 8E52 CD 80 93     	call calcula_tercio
  96+ 8E55 FE 01        	cp 1
  97+ 8E57 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E59 CD 89 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E5C 28 26            jr z,9F
 100+ 8E5E 38 24            jr c,9F
 101+ 8E60 1E 00        11 ld e,0
 102+ 8E62 18 22            jr 8F
 103+ 8E64 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E65 28 07        	jr z, 7F
 105+ 8E67 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E69 1E 00         	ld e,0
 107+ 8E6B E1           	pop hl
 108+ 8E6C 18 04        	jr 4F
 109+ 8E6E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E70 18 15            jr 10F
 111+ 8E72
 112+ 8E72              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E72              ; _para indicar con E="2" en caso necesario.
 114+ 8E72
 115+ 8E72 E5           4 push hl
 116+ 8E73 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E74 CD 80 93     	call calcula_tercio
 118+ 8E77 FE 01        	cp 1
 119+ 8E79 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E7B CD 89 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E7E 28 04            jr z,9F
 122+ 8E80 30 02            jr nc,9F
 123+ 8E82 18 02        	jr 8F
 124+ 8E84 1E 02        9 ld e,2
 125+ 8E86 C1           8 pop bc
 126+ 8E87 E1           10 pop hl
 127+ 8E88 C9           5 ret
 128+ 8E89
 129+ 8E89              ; --------------------
 130+ 8E89              ;
 131+ 8E89              ; 25/08/22
 132+ 8E89
 133+ 8E89 CD 80 93     Comprueba_centro call calcula_tercio
 134+ 8E8C 67               ld h,a
 135+ 8E8D 08           	ex af,af
 136+ 8E8E FE 02        	cp 2
 137+ 8E90 38 07        	jr c,1F
 138+ 8E92 28 05        	jr z,1F
 139+ 8E94 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E97 18 03        	jr 2F
 141+ 8E99 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E9C 08           2 ex af,af
 143+ 8E9D A7               and a
 144+ 8E9E ED 42            sbc hl,bc
 145+ 8EA0 C9               ret
 146+ 8EA1
 147+ 8EA1              ; *********************************************************************************************************************************************************************************************
 148+ 8EA1              ;
 149+ 8EA1              ;   16/8/22
 150+ 8EA1              ;
 151+ 8EA1              ;	Comprueba_limite_vertical
 152+ 8EA1              ;
 153+ 8EA1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8EA1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8EA1              ;
 156+ 8EA1
 157+ 8EA1 2A E0 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8EA4 7D           	ld a,l
 159+ 8EA5 E6 1F        	and $1F
 160+ 8EA7 57           	ld d,a
 161+ 8EA8 3A 19 86     	ld a,(Limite_vertical)
 162+ 8EAB BA           	cp d 											; Límite - Posición.
 163+ 8EAC 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8EAD 3A F2 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8EB0 CB 47        	bit 0,a
 166+ 8EB2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8EB4
 168+ 8EB4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8EB4
 170+ 8EB4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8EB5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8EB7
 173+ 8EB7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8EB7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8EB7
 176+ 8EB7 3A E4 85         ld a,(Coordenada_X)
 177+ 8EBA 16 0F            ld d,Centro_izquierda
 178+ 8EBC A7               and a
 179+ 8EBD 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8EBE 28 1E            jr z,3F
 181+ 8EC0 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8EC2              ;                                                    ; _salimos sin modificar nada.
 183+ 8EC2 18 0E            jr 2F
 184+ 8EC4 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8EC5 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8EC7
 187+ 8EC7              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8EC7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8EC7
 190+ 8EC7 3A E4 85         ld a,(Coordenada_X)
 191+ 8ECA 16 10            ld d,Centro_derecha
 192+ 8ECC A7               and a
 193+ 8ECD 92               sub d
 194+ 8ECE 28 0E            jr z,3F
 195+ 8ED0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8ED2              ;                                                    ; _salimos sin modificar nada.
 197+ 8ED2 CB 43        2 bit 0,e
 198+ 8ED4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8ED6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8ED7 CD 6B 8F         call Modificaccionne
 201+ 8EDA C1           	pop bc
 202+ 8EDB CD 7B 8F         call Inicializacion
 203+ 8EDE C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8EDF
 205+ 8EDF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8EDF
 207+ 8EDF C5           4 push bc
 208+ 8EE0 01 DF 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8EE3 0A           	ld a,(bc)
 210+ 8EE4 3D           	dec a
 211+ 8EE5 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8EE6 7D           	ld a,l
 213+ 8EE7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8EE8 CB 47        	bit 0,a
 215+ 8EEA 28 03        	jr z,5F
 216+ 8EEC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8EED 18 2E        	jr 7F
 218+ 8EEF
 219+ 8EEF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8EEF
 221+ 8EEF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8EF0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8EF1 3A 0C 86     	ld a,(Ctrl_0)
 224+ 8EF4 CB 4F        	bit 1,a
 225+ 8EF6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8EF8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8EF9
 228+ 8EF9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8EF9
 230+ 8EF9 1C               inc e
 231+ 8EFA 1D               dec e
 232+ 8EFB 20 07            jr nz,12F
 233+ 8EFD 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8EFE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8EFF 22 E0 85     	ld (Posicion_actual),hl
 236+ 8F02 18 44        13 jr 9F
 237+ 8F04 CB 43        12 bit 0,e
 238+ 8F06 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8F08              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8F08 C1           	pop bc
 241+ 8F09 18 D3        	jr 3B
 242+ 8F0B 80           14 add b
 243+ 8F0C 6F               ld l,a
 244+ 8F0D 22 E0 85     	ld (Posicion_actual),hl
 245+ 8F10 CD 6B 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8F13 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8F15 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8F17 32 0C 86         ld (Ctrl_0),a
 249+ 8F1A F1           	pop af
 250+ 8F1B 18 2B        	jr 9F
 251+ 8F1D
 252+ 8F1D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8F1D
 254+ 8F1D F5           7 push af
 255+ 8F1E 3A 0C 86     	ld a,(Ctrl_0)
 256+ 8F21 CB 47        	bit 0,a
 257+ 8F23 20 1D        	jr nz,8F
 258+ 8F25 F1           	pop af
 259+ 8F26
 260+ 8F26              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8F26
 262+ 8F26 1C           	inc e
 263+ 8F27 1D               dec e
 264+ 8F28 20 07            jr nz,10F
 265+ 8F2A 90           	sub b
 266+ 8F2B 6F               ld l,a
 267+ 8F2C 22 E0 85     	ld (Posicion_actual),hl
 268+ 8F2F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8F31              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8F31 CB 43        10 bit 0,e
 271+ 8F33 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8F35              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8F35 C1           	pop bc
 274+ 8F36 18 A6        	jr 3B
 275+ 8F38 90           16 sub b
 276+ 8F39 6F               ld l,a
 277+ 8F3A 22 E0 85     	ld (Posicion_actual),hl
 278+ 8F3D CD 6B 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8F40 18 06            jr 9F
 280+ 8F42 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8F44 32 0C 86         ld (Ctrl_0),a
 282+ 8F47 F1           	pop af
 283+ 8F48 C1           9 pop bc
 284+ 8F49 1E 00        	ld e,0
 285+ 8F4B CD 7B 8F         call Inicializacion
 286+ 8F4E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8F4F 08           	ex af,af
 288+ 8F50 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8F51 18 8B            jr 3B
 290+ 8F53
 291+ 8F53              ; --------------------
 292+ 8F53
 293+ 8F53 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F55 CD CF 90     1 call PreviousScan
 295+ 8F58 10 FB            djnz 1B
 296+ 8F5A 22 E0 85     	ld (Posicion_actual),hl
 297+ 8F5D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F5E C9           	ret
 299+ 8F5F
 300+ 8F5F              ; --------------------
 301+ 8F5F
 302+ 8F5F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F61 CD C0 90     1 call NextScan
 304+ 8F64 10 FB            djnz 1B
 305+ 8F66 22 E0 85     	ld (Posicion_actual),hl
 306+ 8F69 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F6A C9           	ret
 308+ 8F6B
 309+ 8F6B              ; --------------------
 310+ 8F6B              ;
 311+ 8F6B              ;	22/01/23
 312+ 8F6B              ;
 313+ 8F6B              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F6B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F6B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F6B
 317+ 8F6B
 318+ 8F6B              Modificaccionne
 319+ 8F6B
 320+ 8F6B 3A F2 85     	ld a,(Cuad_objeto)
 321+ 8F6E FE 02        	cp 2
 322+ 8F70 CC 53 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F73 DC 53 8F         call c,Modifica_Pos_actual
 324+ 8F76 C8           	ret z
 325+ 8F77 CD 5F 8F         call Modifica_Pos_actual2
 326+ 8F7A C9               ret
 327+ 8F7B
 328+ 8F7B              ; *************************************************************************************************************************************************************************************************
 329+ 8F7B              ;
 330+ 8F7B              ;	13/8/22
 331+ 8F7B              ;
 332+ 8F7B              ;	Inicializacion
 333+ 8F7B              ;
 334+ 8F7B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F7B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F7B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F7B              ;
 338+ 8F7B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F7B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F7B              ;	_ desaparece/aparece.
 341+ 8F7B
 342+ 8F7B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F7B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F7B              ;
 345+ 8F7B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F7B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F7B              ; 		   [E] ="0"
 348+ 8F7B
 349+ 8F7B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F7B
 351+ 8F7B CD 80 93     Inicializacion call calcula_tercio
 352+ 8F7E 28 36        	jr z,primit
 353+ 8F80 E6 02        	and 2
 354+ 8F82 20 07        	jr nz,segmit
 355+ 8F84 7D           	ld a,l
 356+ 8F85 FE 7F        	cp $7f
 357+ 8F87 38 2D        	jr c,primit
 358+ 8F89 28 2B        	jr z,primit
 359+ 8F8B CD E8 8F     segmit call column
 360+ 8F8E 38 13        	jr c,tercuad
 361+ 8F90 3E 04        cuarcuad ld a,4
 362+ 8F92 32 F2 85     	ld (Cuad_objeto),a
 363+ 8F95 21 20 48     	ld hl,$4820
 364+ 8F98 22 17 86     	ld (Limite_horizontal),hl
 365+ 8F9B 21 19 86     	ld hl,Limite_vertical
 366+ 8F9E 36 0D        	ld (hl),$0d
 367+ 8FA0 08           	ex af,af
 368+ 8FA1 18 3C        	jr 1F
 369+ 8FA3              tercuad
 370+ 8FA3 3E 03        	ld a,3
 371+ 8FA5 32 F2 85     	ld (Cuad_objeto),a
 372+ 8FA8 21 20 48     	ld hl,$4820
 373+ 8FAB 22 17 86     	ld (Limite_horizontal),hl
 374+ 8FAE 21 19 86     	ld hl,Limite_vertical
 375+ 8FB1 36 12        	ld (hl),$12
 376+ 8FB3 08           	ex af,af
 377+ 8FB4 18 29        	jr 1F
 378+ 8FB6 CD E8 8F     primit call column
 379+ 8FB9 38 13        	jr c, primcuad
 380+ 8FBB              segcuad
 381+ 8FBB 3E 02        	ld a,2
 382+ 8FBD 32 F2 85     	ld (Cuad_objeto),a
 383+ 8FC0 21 C0 4F     	ld hl,$4fc0
 384+ 8FC3 22 17 86     	ld (Limite_horizontal),hl
 385+ 8FC6 21 19 86     	ld hl,Limite_vertical
 386+ 8FC9 36 0D        	ld (hl),$0d
 387+ 8FCB 08           	ex af,af
 388+ 8FCC 18 11        	jr 1F
 389+ 8FCE              primcuad
 390+ 8FCE 3E 01        	ld a,1
 391+ 8FD0 32 F2 85     	ld (Cuad_objeto),a
 392+ 8FD3 21 C0 4F     	ld hl,$4fc0
 393+ 8FD6 22 17 86     	ld (Limite_horizontal),hl
 394+ 8FD9 21 19 86     	ld hl,Limite_vertical
 395+ 8FDC 36 12        	ld (hl),$12
 396+ 8FDE 08           	ex af,af
 397+ 8FDF CD AC 96     1 call Genera_coordenadas
 398+ 8FE2 21 0C 86     	ld hl,Ctrl_0
 399+ 8FE5 CB EE        	set 5,(hl)
 400+ 8FE7 C9           	ret
 401+ 8FE8
 402+ 8FE8              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8FE8
 404+ 8FE8              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8FE8              ;
 406+ 8FE8              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8FE8
 408+ 8FE8 7D           column ld a,l
 409+ 8FE9 E6 1F        	and $1f
 410+ 8FEB FE 10         	cp $10
 411+ 8FED C9            	ret
 412+ 8FEE
 413+ 8FEE              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8FEE              ;
 415+ 8FEE              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8FEE              ;
 417+ 8FEE              ; 14/12/22
 418+ 8FEE              ;
 419+ 8FEE              ;	Modifica: A y BC.
 420+ 8FEE
 421+ 8FEE 3A F2 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8FF1 E6 01        	and 1
 423+ 8FF3 28 17        	jr z,1F
 424+ 8FF5
 425+ 8FF5              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8FF5
 427+ 8FF5 3A E4 85     	ld a,(Coordenada_X)
 428+ 8FF8 47           	ld b,a
 429+ 8FF9 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8FFA 79           	ld a,c
 431+ 8FFB 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8FFC 38 08        	jr c,2F
 433+ 8FFE 47           	ld b,a
 434+ 8FFF 79           	ld a,c
 435+ 9000 90           	sub b
 436+ 9001 32 16 86     	ld (Columnas),a
 437+ 9004 18 1B        	jr 4F
 438+ 9006 79           2 ld a,c
 439+ 9007 32 16 86     	ld (Columnas),a
 440+ 900A 18 15        	jr 4F
 441+ 900C
 442+ 900C              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 900C
 444+ 900C 3A E4 85     1 ld a,(Coordenada_X)
 445+ 900F 81           	add c
 446+ 9010 3D           	dec a
 447+ 9011 D6 1F        	sub $1f
 448+ 9013 38 08        	jr c,3F
 449+ 9015 47           	ld b,a
 450+ 9016 79           	ld a,c
 451+ 9017 90           	sub b
 452+ 9018 32 16 86     	ld (Columnas),a
 453+ 901B 18 04        	jr 4F
 454+ 901D 79           3 ld a,c
 455+ 901E 32 16 86     	ld (Columnas),a
 456+ 9021 D9           4 exx
 457+ 9022 4F           	ld c,a
 458+ 9023 D9           	exx
 459+ 9024 C9            ret
 460+ 9025
 461+ 9025              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9025              ;
 463+ 9025              ; 7/1/23
 464+ 9025              ;
 465+ 9025              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9025              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9025              ;
 468+ 9025              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9025              ;	DESTRUYE: HL,B Y A.
 470+ 9025
 471+ 9025 3A F2 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9028 FE 02        	cp 2
 473+ 902A 38 18        	jr c,1F
 474+ 902C 28 16        	jr z,1F
 475+ 902E E6 01        	and 1
 476+ 9030 28 0D        	jr z,3F
 477+ 9032
 478+ 9032              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9032
 480+ 9032 CD 6E 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9035
 482+ 9035 7D           9 ld a,l
 483+ 9036 E6 1F        	and $1f
 484+ 9038 28 2A        	jr z,7F
 485+ 903A 2B           	dec hl
 486+ 903B 10 F8        	djnz 9B
 487+ 903D 18 25        	jr 7F
 488+ 903F
 489+ 903F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 903F
 491+ 903F 2A E0 85     3 ld hl,(Posicion_actual)
 492+ 9042 18 20        	jr 7F
 493+ 9044
 494+ 9044 28 14        1 jr z,2F
 495+ 9046
 496+ 9046              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9046
 498+ 9046 CD 6E 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9049 7D           4 ld a,l
 500+ 904A E6 1F        	and $1f
 501+ 904C 28 03        	jr z,6F
 502+ 904E 2B           	dec hl
 503+ 904F 10 F8        	djnz 4B
 504+ 9051 06 0F        6 ld b,15
 505+ 9053 CD CF 90     5 call PreviousScan
 506+ 9056 10 FB        	djnz 5B
 507+ 9058 18 0A        	jr 7F
 508+ 905A
 509+ 905A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 905A
 511+ 905A CD 6E 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 905D 06 0F        	ld b,15
 513+ 905F CD CF 90     8 call PreviousScan
 514+ 9062 10 FB        	djnz 8B
 515+ 9064
 516+ 9064 E5           7 push hl
 517+ 9065 DD E1        	pop ix
 518+ 9067
 519+ 9067 2A E2 85     	ld hl,(Puntero_objeto)
 520+ 906A E5           	push hl
 521+ 906B FD E1        	pop iy
 522+ 906D
 523+ 906D C9           	ret
 524+ 906E
 525+ 906E              ; --------------------------------------------------------------------------------------------------------------------
 526+ 906E              ;
 527+ 906E              ;	2/1/23
 528+ 906E              ;
 529+ 906E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 906E              ;
 531+ 906E              ;	Tras esta rutina tenemos:
 532+ 906E              ;
 533+ 906E              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 906E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 906E              ;
 536+ 906E              ;	DESTRUYE!!!!! HL,B y A.
 537+ 906E
 538+ 906E 2A E0 85     Operandos ld hl,(Posicion_actual)
 539+ 9071 3A 16 86     	ld a,(Columnas)
 540+ 9074 3D           	dec a
 541+ 9075 20 01        	jr nz,1F
 542+ 9077 3C           	inc a
 543+ 9078 47           1 ld b,a
 544+ 9079 C9           	ret
 545+ 907A
 546+ 907A              ; --------------------------------------------------------------------------------------------------------------------
 547+ 907A              ;
 548+ 907A              ;	3/1/23
 549+ 907A              ;
 550+ 907A              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 907A              ;
 552+ 907A              ;	Destruye: A,B,HL y DE.
 553+ 907A
 554+ 907A              Define_rutina_de_impresion
 555+ 907A
 556+ 907A 3A DF 85     	ld a,(Columns)
 557+ 907D 47           	ld b,a
 558+ 907E 3A 16 86     	ld a,(Columnas)
 559+ 9081 B8           	cp b
 560+ 9082 20 0D        	jr nz,2f
 561+ 9084
 562+ 9084              ;	La entidad se imprime entera.
 563+ 9084
 564+ 9084 21 50 91     	ld hl, Indice_entidades_completas
 565+ 9087 E6 01        	and 1
 566+ 9089 28 02        	jr z,1F
 567+ 908B
 568+ 908B 23           	inc hl
 569+ 908C 23           	inc hl
 570+ 908D
 571+ 908D CD 55 88     1 call Extrae_address
 572+ 9090 C9           	ret		;	ret
 573+ 9091
 574+ 9091              ;	La entidad no se imprime entera en pantalla.
 575+ 9091
 576+ 9091 3A F2 85     2 ld a,(Cuad_objeto)
 577+ 9094 E6 01        	and 1
 578+ 9096 28 17        	jr z,3F
 579+ 9098
 580+ 9098              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9098
 582+ 9098 21 54 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 909B 3A DF 85     4 ld a,(Columns)
 584+ 909E E6 01        	and 1
 585+ 90A0 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 90A2
 587+ 90A2 23           	inc hl
 588+ 90A3 23           	inc hl
 589+ 90A4
 590+ 90A4 3A 16 86     	ld a,(Columnas)
 591+ 90A7 E6 01        	and 1
 592+ 90A9 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 90AB
 594+ 90AB 23           	inc hl
 595+ 90AC 23           	inc hl
 596+ 90AD
 597+ 90AD 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 90AF
 599+ 90AF 21 5A 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 90B2 18 E7        	jr 4B
 601+ 90B4
 602+ 90B4              ; --------------------------------------------------------------------------------------------------------------------
 603+ 90B4              ;
 604+ 90B4              ;	Prepara_draw
 605+ 90B4              ;
 606+ 90B4              ;	Es una rutina de carga.
 607+ 90B4              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 90B4              ;
 609+ 90B4              ;	FUNCIONAMIENTO:
 610+ 90B4              ;
 611+ 90B4              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 90B4              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 90B4              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 90B4              ;
 615+ 90B4              ;	DESTRUYE:
 616+ 90B4              ;
 617+ 90B4              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 90B4
 619+ 90B4 21 DE 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 90B7 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 90B8 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 90B9 4E           	ld c,(hl)
 623+ 90BA 2A E0 85     	ld hl,(Posicion_actual)
 624+ 90BD 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 90BF C9           	ret
 626+ 90C0
 627+ 90C0              ;----------------------------------------------------------------------------------------------------------------
 628+ 90C0              ;
 629+ 90C0              ;	5/08/22
 630+ 90C0              ;
 631+ 90C0              ;   NextScan.
 632+ 90C0              ;
 633+ 90C0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 90C0              ;
 635+ 90C0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 90C0              ;
 637+ 90C0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 90C0              ;
 639+ 90C0              ;       DESTRUIDOS: AF y HL !!!
 640+ 90C0              ;
 641+ 90C0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 90C0              ;
 643+ 90C0
 644+ 90C0 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 90C1 7C               ld a,h
 646+ 90C2 E6 07            and 7
 647+ 90C4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 90C5
 649+ 90C5 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 90C6 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 90C8 6F               ld l,a
 652+ 90C9 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 90CA
 654+ 90CA 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 90CB D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 90CD 67               ld h,a
 657+ 90CE C9               ret
 658+ 90CF
 659+ 90CF              ;----------------------------------------------------------------------------------------------------------------
 660+ 90CF              ;
 661+ 90CF              ;	5/08/22
 662+ 90CF              ;
 663+ 90CF              ;   PreviousScan.
 664+ 90CF              ;
 665+ 90CF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 90CF              ;
 667+ 90CF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 90CF              ;
 669+ 90CF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 90CF              ;
 671+ 90CF              ;       DESTRUIDOS: AF y HL !!!
 672+ 90CF              ;
 673+ 90CF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 90CF              ;
 675+ 90CF
 676+ 90CF 7C           PreviousScan ld a,h
 677+ 90D0 25               dec h               ; Dec H.
 678+ 90D1 E6 07            and 7
 679+ 90D3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 90D4
 681+ 90D4 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 90D5 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 90D7 6F               ld l,a
 684+ 90D8 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 90D9
 686+ 90D9 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 90DA C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 90DC 67               ld h,a
 689+ 90DD C9               ret
 690+ 90DE
 691+ 90DE              ; -----------------------------------------------------------------------------------
 692+ 90DE              ;
 693+ 90DE              ;	28/2/23
 694+ 90DE              ;
 695+ 90DE              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 90DE              ;	Extrae fotos de Album_de_fotos.
 697+ 90DE
 698+ 90DE              Extrae_foto_entidades
 699+ 90DE
 700+ 90DE 3A 23 86     	ld a,(Numero_de_malotes)
 701+ 90E1 A7           	and a
 702+ 90E2 C8           	ret z
 703+ 90E3 ED 73 24 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 90E7 31 00 70     	ld sp,Album_de_fotos
 705+ 90EA
 706+ 90EA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 90EC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 90ED D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 90EE
 710+ 90EE ED 73 26 86  	ld (Stack_2),sp
 711+ 90F2 ED 7B 24 86  	ld sp,(Stack)
 712+ 90F6
 713+ 90F6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 90F6
 715+ 90F6 3E CD        	ld a,$cd
 716+ 90F8 32 00 91     	ld (Imprime),a
 717+ 90FB EB           	ex de,hl
 718+ 90FC 22 01 91     	ld (Imprime+1),hl
 719+ 90FF EB           	ex de,hl
 720+ 9100
 721+ 9100              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 9100
 723+ 9100 00 00 00     Imprime db 0,0,0
 724+ 9103
 725+ 9103 3A 23 86     	ld a,(Numero_de_malotes)
 726+ 9106 3D           	dec a
 727+ 9107 28 09        	jr z,1F
 728+ 9109 32 23 86      	ld (Numero_de_malotes),a
 729+ 910C
 730+ 910C ED 7B 26 86   	ld sp,(Stack_2)
 731+ 9110 18 D8        	jr 2B
 732+ 9112
 733+ 9112 AF           1 xor a
 734+ 9113 32 26 86     	ld (Stack_2),a
 735+ 9116 C9           	ret
 736+ 9117
 737+ 9117              ; -----------------------------------------------------------------------------------
 738+ 9117              ;
 739+ 9117              ;	28/2/23
 740+ 9117              ;
 741+ 9117              ;	Pinta los disparos generados.
 742+ 9117
 743+ 9117              Extrae_foto_disparos
 744+ 9117
 745+ 9117 3A 2C 86     	ld a,(Numero_de_disparotes)
 746+ 911A A7           	and a
 747+ 911B C8           	ret z
 748+ 911C ED 73 24 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 9120 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 9123
 751+ 9123 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 9125 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 9126 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 9127
 755+ 9127 ED 73 26 86  	ld (Stack_2),sp
 756+ 912B ED 7B 24 86  	ld sp,(Stack)
 757+ 912F
 758+ 912F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 912F
 760+ 912F 3E CD        	ld a,$cd
 761+ 9131 32 39 91     	ld (Imprime2),a
 762+ 9134 EB           	ex de,hl
 763+ 9135 22 3A 91     	ld (Imprime2+1),hl
 764+ 9138 EB           	ex de,hl
 765+ 9139
 766+ 9139              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9139
 768+ 9139 00 00 00     Imprime2 db 0,0,0
 769+ 913C
 770+ 913C 3A 2C 86     	ld a,(Numero_de_disparotes)
 771+ 913F 3D           	dec a
 772+ 9140 28 09        	jr z,1F
 773+ 9142 32 2C 86      	ld (Numero_de_disparotes),a
 774+ 9145
 775+ 9145 ED 7B 26 86  	ld sp,(Stack_2)
 776+ 9149 18 D8        	jr 2B
 777+ 914B
 778+ 914B AF           1 xor a
 779+ 914C 32 26 86     	ld (Stack_2),a
 780+ 914F C9           	ret
 781+ 9150
# file closed: Draw_XOR.asm
1055  9150              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9150              ;   índices de Rutinas de impresión.
   2+ 9150
   3+ 9150 60 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9152 8D 91            defw Pinta_Amadeus_3x2
   5+ 9154
   6+ 9154 E3 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9156 83 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9158 37 92            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 915A
  10+ 915A 0D 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 915C 11 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 915E C5 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9160
  14+ 9160
  15+ 9160              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9160              ;
  17+ 9160              ;   12/12/22
  18+ 9160              ;
  19+ 9160              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9160              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9160              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9160              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9160              ;
  24+ 9160              ;   Modifica: DE y HL.
  25+ 9160
  26+ 9160 ED 73 24 86  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9164 FD F9        	ld sp,iy
  28+ 9166 06 10            ld b,16
  29+ 9168 D1           1 pop de
  30+ 9169 7B               ld a,e
  31+ 916A AE               xor (hl)
  32+ 916B 77           	ld (hl),a
  33+ 916C 23           	inc hl
  34+ 916D 7A               ld a,d
  35+ 916E AE               xor (hl)
  36+ 916F 77           	ld (hl),a
  37+ 9170 2B           	dec hl
  38+ 9171 24           	inc h
  39+ 9172 7C               ld a,h
  40+ 9173 E6 07            and 7
  41+ 9175 20 0A            jr nz,2F
  42+ 9177 7D               ld a,l
  43+ 9178 C6 20            add a,$20
  44+ 917A 6F               ld l,a
  45+ 917B 38 04            jr c,2F
  46+ 917D 7C               ld a,h
  47+ 917E D6 08            sub 8
  48+ 9180 67               ld h,a
  49+ 9181 7C           2 ld a,h
  50+ 9182 FE 58            cp $58
  51+ 9184 28 02            jr z,3F
  52+ 9186 10 E0            djnz 1B
  53+ 9188 ED 7B 24 86  3 ld sp,(Stack)
  54+ 918C C9           	ret
  55+ 918D
  56+ 918D ED 73 24 86  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9191 FD F9        	ld sp,iy
  58+ 9193 06 08            ld b,8
  59+ 9195 D1           1 pop de
  60+ 9196 7B               ld a,e
  61+ 9197 AE               xor (hl)
  62+ 9198 77           	ld (hl),a
  63+ 9199 23           	inc hl
  64+ 919A 7A               ld a,d
  65+ 919B AE               xor (hl)
  66+ 919C 77           	ld (hl),a
  67+ 919D 23           	inc hl
  68+ 919E D1           	pop de
  69+ 919F 7B               ld a,e
  70+ 91A0 AE               xor (hl)
  71+ 91A1 77           	ld (hl),a
  72+ 91A2 2B           	dec hl
  73+ 91A3 2B           	dec hl
  74+ 91A4 24           	inc h
  75+ 91A5 7C               ld a,h
  76+ 91A6 E6 07            and 7
  77+ 91A8 20 0A            jr nz,2F
  78+ 91AA 7D               ld a,l
  79+ 91AB C6 20            add a,$20
  80+ 91AD 6F               ld l,a
  81+ 91AE 38 04            jr c,2F
  82+ 91B0 7C               ld a,h
  83+ 91B1 D6 08            sub 8
  84+ 91B3 67               ld h,a
  85+ 91B4 7C           2 ld a,h
  86+ 91B5 FE 58            cp $58
  87+ 91B7 28 25            jr z,4F
  88+ 91B9 7A               ld a,d
  89+ 91BA AE               xor (hl)
  90+ 91BB 77               ld (hl),a
  91+ 91BC D1           	pop de
  92+ 91BD 23           	inc hl
  93+ 91BE 7B               ld a,e
  94+ 91BF AE               xor (hl)
  95+ 91C0 77           	ld (hl),a
  96+ 91C1 23           	inc hl
  97+ 91C2 7A               ld a,d
  98+ 91C3 AE               xor (hl)
  99+ 91C4 77           	ld (hl),a
 100+ 91C5 2B           	dec hl
 101+ 91C6 2B           	dec hl
 102+ 91C7 24           	inc h
 103+ 91C8 7C               ld a,h
 104+ 91C9 E6 07            and 7
 105+ 91CB 20 0A            jr nz,3F
 106+ 91CD 7D               ld a,l
 107+ 91CE C6 20            add a,$20
 108+ 91D0 6F               ld l,a
 109+ 91D1 38 04            jr c,3F
 110+ 91D3 7C               ld a,h
 111+ 91D4 D6 08            sub 8
 112+ 91D6 67               ld h,a
 113+ 91D7 7C           3 ld a,h
 114+ 91D8 FE 58            cp $58
 115+ 91DA 28 02            jr z,4F
 116+ 91DC 10 B7            djnz 1B
 117+ 91DE ED 7B 24 86  4 ld sp,(Stack)
 118+ 91E2 C9           	ret
 119+ 91E3
 120+ 91E3              ; ---------------------------------------------------
 121+ 91E3
 122+ 91E3 ED 73 24 86  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 91E7 FD F9        	ld sp,iy
 124+ 91E9
 125+ 91E9              ; >>>
 126+ 91E9
 127+ 91E9 06 10            ld b,16
 128+ 91EB D1           1 pop de
 129+ 91EC 7A           	ld a,d
 130+ 91ED AE           	xor (hl)
 131+ 91EE 77           	ld (hl),a
 132+ 91EF 24           	inc h
 133+ 91F0 7C               ld a,h
 134+ 91F1 E6 07            and 7
 135+ 91F3 20 0C            jr nz,2F
 136+ 91F5 7D               ld a,l
 137+ 91F6 C6 20            add a,$20
 138+ 91F8 6F               ld l,a
 139+ 91F9 38 06            jr c,2F
 140+ 91FB 7C               ld a,h
 141+ 91FC D6 08            sub 8
 142+ 91FE 67               ld h,a
 143+ 91FF 18 00            jr 2F
 144+ 9201 7C           2 ld a,h
 145+ 9202 FE 58            cp $58
 146+ 9204 28 02            jr z,3F
 147+ 9206 10 E3            djnz 1B
 148+ 9208 ED 7B 24 86  3 ld sp,(Stack)
 149+ 920C C9           	ret
 150+ 920D
 151+ 920D ED 73 24 86  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9211 FD F9        	ld sp,iy
 153+ 9213
 154+ 9213              ; >>>
 155+ 9213
 156+ 9213 06 10            ld b,16
 157+ 9215 D1           1 pop de
 158+ 9216 7B           	ld a,e
 159+ 9217 AE           	xor (hl)
 160+ 9218 77           	ld (hl),a
 161+ 9219 24           	inc h
 162+ 921A 7C               ld a,h
 163+ 921B E6 07            and 7
 164+ 921D 20 0C            jr nz,2F
 165+ 921F 7D               ld a,l
 166+ 9220 C6 20            add a,$20
 167+ 9222 6F               ld l,a
 168+ 9223 38 06            jr c,2F
 169+ 9225 7C               ld a,h
 170+ 9226 D6 08            sub 8
 171+ 9228 67               ld h,a
 172+ 9229 18 00            jr 2F
 173+ 922B 7C           2 ld a,h
 174+ 922C FE 58            cp $58
 175+ 922E 28 02            jr z,3F
 176+ 9230 10 E3            djnz 1B
 177+ 9232 ED 7B 24 86  3 ld sp,(Stack)
 178+ 9236 C9           	ret
 179+ 9237
 180+ 9237              ; ---------------------------------------------------
 181+ 9237
 182+ 9237 ED 73 24 86  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 923B FD F9        	ld sp,iy
 184+ 923D 06 08            ld b,8
 185+ 923F D1           1 pop de
 186+ 9240 7A           	ld a,d
 187+ 9241 AE           	xor (hl)
 188+ 9242 77           	ld (hl),a
 189+ 9243 23           	inc hl
 190+ 9244 D1           	pop de
 191+ 9245 7B           	ld a,e
 192+ 9246 AE           	xor (hl)
 193+ 9247 77           	ld (hl),a
 194+ 9248 2B           	dec hl
 195+ 9249 24            	inc h
 196+ 924A 7C               ld a,h
 197+ 924B E6 07            and 7
 198+ 924D 20 0A            jr nz,2F
 199+ 924F 7D               ld a,l
 200+ 9250 C6 20            add a,$20
 201+ 9252 6F               ld l,a
 202+ 9253 38 04            jr c,2F
 203+ 9255 7C               ld a,h
 204+ 9256 D6 08            sub 8
 205+ 9258 67               ld h,a
 206+ 9259 7C           2 ld a,h
 207+ 925A FE 58            cp $58
 208+ 925C 28 20            jr z,4F
 209+ 925E D1               pop de
 210+ 925F 7B           	ld a,e
 211+ 9260 AE           	xor (hl)
 212+ 9261 77           	ld (hl),a
 213+ 9262 23           	inc hl
 214+ 9263 7A           	ld a,d
 215+ 9264 AE           	xor (hl)
 216+ 9265 77           	ld (hl),a
 217+ 9266 2B           	dec hl
 218+ 9267 24           	inc h
 219+ 9268 7C               ld a,h
 220+ 9269 E6 07            and 7
 221+ 926B 20 0A            jr nz,3F
 222+ 926D 7D               ld a,l
 223+ 926E C6 20            add a,$20
 224+ 9270 6F               ld l,a
 225+ 9271 38 04            jr c,3F
 226+ 9273 7C               ld a,h
 227+ 9274 D6 08            sub 8
 228+ 9276 67               ld h,a
 229+ 9277 7C           3 ld a,h
 230+ 9278 FE 58            cp $58
 231+ 927A 28 02            jr z,4F
 232+ 927C 10 C1            djnz 1B
 233+ 927E ED 7B 24 86  4 ld sp,(Stack)
 234+ 9282 C9           	ret
 235+ 9283
 236+ 9283 ED 73 24 86  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9287 FD F9        	ld sp,iy
 238+ 9289 06 08            ld b,8
 239+ 928B D1           1 pop de
 240+ 928C D1           	pop de
 241+ 928D 7B           	ld a,e
 242+ 928E AE           	xor (hl)
 243+ 928F 77           	ld (hl),a
 244+ 9290 24            	inc h
 245+ 9291 7C               ld a,h
 246+ 9292 E6 07            and 7
 247+ 9294 20 0A            jr nz,2F
 248+ 9296 7D               ld a,l
 249+ 9297 C6 20            add a,$20
 250+ 9299 6F               ld l,a
 251+ 929A 38 04            jr c,2F
 252+ 929C 7C               ld a,h
 253+ 929D D6 08            sub 8
 254+ 929F 67               ld h,a
 255+ 92A0 7C           2 ld a,h
 256+ 92A1 FE 58            cp $58
 257+ 92A3 28 1B            jr z,4F
 258+ 92A5 D1               pop de
 259+ 92A6 7A           	ld a,d
 260+ 92A7 AE           	xor (hl)
 261+ 92A8 77           	ld (hl),a
 262+ 92A9 24           	inc h
 263+ 92AA 7C               ld a,h
 264+ 92AB E6 07            and 7
 265+ 92AD 20 0A            jr nz,3F
 266+ 92AF 7D               ld a,l
 267+ 92B0 C6 20            add a,$20
 268+ 92B2 6F               ld l,a
 269+ 92B3 38 04            jr c,3F
 270+ 92B5 7C               ld a,h
 271+ 92B6 D6 08            sub 8
 272+ 92B8 67               ld h,a
 273+ 92B9 7C           3 ld a,h
 274+ 92BA FE 58            cp $58
 275+ 92BC 28 02            jr z,4F
 276+ 92BE 10 CB            djnz 1B
 277+ 92C0 ED 7B 24 86  4 ld sp,(Stack)
 278+ 92C4 C9           	ret
 279+ 92C5
 280+ 92C5 ED 73 24 86  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 92C9 FD F9        	ld sp,iy
 282+ 92CB 06 08            ld b,8
 283+ 92CD D1           1 pop de
 284+ 92CE 7B           	ld a,e
 285+ 92CF AE           	xor (hl)
 286+ 92D0 77           	ld (hl),a
 287+ 92D1 23           	inc hl
 288+ 92D2 7A           	ld a,d
 289+ 92D3 AE           	xor (hl)
 290+ 92D4 77           	ld (hl),a
 291+ 92D5 2B           	dec hl
 292+ 92D6 24             	inc h
 293+ 92D7 7C               ld a,h
 294+ 92D8 E6 07            and 7
 295+ 92DA 20 0A            jr nz,2F
 296+ 92DC 7D               ld a,l
 297+ 92DD C6 20            add a,$20
 298+ 92DF 6F               ld l,a
 299+ 92E0 38 04            jr c,2F
 300+ 92E2 7C               ld a,h
 301+ 92E3 D6 08            sub 8
 302+ 92E5 67               ld h,a
 303+ 92E6 7C           2 ld a,h
 304+ 92E7 FE 58            cp $58
 305+ 92E9 28 21            jr z,4F
 306+ 92EB D1               pop de
 307+ 92EC 7A           	ld a,d
 308+ 92ED AE           	xor (hl)
 309+ 92EE 77           	ld (hl),a
 310+ 92EF 23           	inc hl
 311+ 92F0 D1               pop de
 312+ 92F1 7B           	ld a,e
 313+ 92F2 AE           	xor (hl)
 314+ 92F3 77           	ld (hl),a
 315+ 92F4 2B           	dec hl
 316+ 92F5 24           	inc h
 317+ 92F6 7C               ld a,h
 318+ 92F7 E6 07            and 7
 319+ 92F9 20 0A            jr nz,3F
 320+ 92FB 7D               ld a,l
 321+ 92FC C6 20            add a,$20
 322+ 92FE 6F               ld l,a
 323+ 92FF 38 04            jr c,3F
 324+ 9301 7C               ld a,h
 325+ 9302 D6 08            sub 8
 326+ 9304 67               ld h,a
 327+ 9305 7C           3 ld a,h
 328+ 9306 FE 58            cp $58
 329+ 9308 28 02            jr z,4F
 330+ 930A 10 C1            djnz 1B
 331+ 930C ED 7B 24 86  4 ld sp,(Stack)
 332+ 9310 C9           	ret
 333+ 9311
 334+ 9311 ED 73 24 86  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9315 FD F9        	ld sp,iy
 336+ 9317 06 08            ld b,8
 337+ 9319 D1           1 pop de
 338+ 931A 7B           	ld a,e
 339+ 931B AE           	xor (hl)
 340+ 931C 77           	ld (hl),a
 341+ 931D 24            	inc h
 342+ 931E 7C               ld a,h
 343+ 931F E6 07            and 7
 344+ 9321 20 0A            jr nz,2F
 345+ 9323 7D               ld a,l
 346+ 9324 C6 20            add a,$20
 347+ 9326 6F               ld l,a
 348+ 9327 38 04            jr c,2F
 349+ 9329 7C               ld a,h
 350+ 932A D6 08            sub 8
 351+ 932C 67               ld h,a
 352+ 932D 7C           2 ld a,h
 353+ 932E FE 58            cp $58
 354+ 9330 28 1C            jr z,4F
 355+ 9332 D1               pop de
 356+ 9333 7A           	ld a,d
 357+ 9334 AE           	xor (hl)
 358+ 9335 77           	ld (hl),a
 359+ 9336 24           	inc h
 360+ 9337 7C               ld a,h
 361+ 9338 E6 07            and 7
 362+ 933A 20 0A            jr nz,3F
 363+ 933C 7D               ld a,l
 364+ 933D C6 20            add a,$20
 365+ 933F 6F               ld l,a
 366+ 9340 38 04            jr c,3F
 367+ 9342 7C               ld a,h
 368+ 9343 D6 08            sub 8
 369+ 9345 67               ld h,a
 370+ 9346 7C           3 ld a,h
 371+ 9347 FE 58            cp $58
 372+ 9349 28 03            jr z,4F
 373+ 934B D1               pop de
 374+ 934C 10 CB            djnz 1B
 375+ 934E ED 7B 24 86  4 ld sp,(Stack)
 376+ 9352 C9           	ret
 377+ 9353
 378+ 9353              ; ---------------------------------------------------
 379+ 9353              ;
 380+ 9353              ;   27/02/23
 381+ 9353              ;
 382+ 9353              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9353              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9353              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9353
 386+ 9353 ED 73 24 86  Pinta_Disparo ld (Stack),sp
 387+ 9357 FD F9            ld sp,iy
 388+ 9359 06 02            ld b,2
 389+ 935B D1           1 pop de
 390+ 935C 7B               ld a,e
 391+ 935D AE               xor (hl)
 392+ 935E 77               ld (hl),a
 393+ 935F 23               inc hl
 394+ 9360 7A               ld a,d
 395+ 9361 AE               xor (hl)
 396+ 9362 77               ld (hl),a
 397+ 9363 2B               dec hl
 398+ 9364
 399+ 9364 24               inc h
 400+ 9365 7C               ld a,h
 401+ 9366 E6 07            and 7
 402+ 9368 20 0A            jr nz,2F
 403+ 936A 7D               ld a,l
 404+ 936B C6 20            add a,$20
 405+ 936D 6F               ld l,a
 406+ 936E 38 04            jr c,2F
 407+ 9370 7C               ld a,h
 408+ 9371 D6 08            sub 8
 409+ 9373 67               ld h,a
 410+ 9374 7C           2 ld a,h
 411+ 9375 FE 58            cp $58
 412+ 9377 28 02            jr z,3F
 413+ 9379
 414+ 9379 10 E0            djnz 1B
 415+ 937B ED 7B 24 86  3 ld sp,(Stack)
 416+ 937F C9               ret
 417+ 9380
# file closed: Rutinas_de_impresion_sprites.asm
1056  9380              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9380              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9380              ;
   3+ 9380              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9380              ;
   5+ 9380              ; *****************************************************************************************************************************************************************************************
   6+ 9380              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9380
   8+ 9380 7C           calcula_tercio ld a,h
   9+ 9381 E6 18        	and $18
  10+ 9383 CB 2F        	sra a
  11+ 9385 CB 2F        	sra a
  12+ 9387 CB 2F        	sra a
  13+ 9389 C9           	ret
  14+ 938A
# file closed: calcula_tercio.asm
1057  938A              	include "Cls.asm"
# file opened: Cls.asm
   1+ 938A              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 938A              ;
   3+ 938A              ;
   4+ 938A              ;	CLS.
   5+ 938A              ;
   6+ 938A              ;	Limpia la pantalla y define sus atributos.
   7+ 938A              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 938A              ;
   9+ 938A              ;	COLORES: 0 ..... NEGRO
  10+ 938A              ;    		 1 ..... AZUL
  11+ 938A              ; 			 2 ..... ROJO
  12+ 938A              ;			 3 ..... MAGENTA
  13+ 938A              ; 			 4 ..... VERDE
  14+ 938A              ; 			 5 ..... CIAN
  15+ 938A              ;			 6 ..... AMARILLO
  16+ 938A              ; 			 7 ..... BLANCO
  17+ 938A              ;
  18+ 938A              ;	INPUT: A contiene los atributos de pantalla.
  19+ 938A              ;
  20+ 938A              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 938A
  22+ 938A
  23+ 938A 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 938D 11 01 40     	LD DE,$4001
  25+ 9390 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9393 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9395 ED B0        	LDIR
  28+ 9397 01 FF 02     	LD BC,767
  29+ 939A 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 939B ED B0        	LDIR
  31+ 939D C9           	ret
  32+ 939E
# file closed: Cls.asm
1058  939E              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 939E              ; ******************************************************************************************************************************************************************************************
   2+ 939E              ;
   3+ 939E              ;   22/01/23
   4+ 939E              ;
   5+ 939E              ;	Mov_down
   6+ 939E              ;
   7+ 939E              ; 	Mueve el Sprite X px hacia abajo.
   8+ 939E              ;
   9+ 939E              ;
  10+ 939E 21 0C 86     Mov_down ld hl,Ctrl_0
  11+ 93A1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 93A3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 93A3              ; 																	; _ en el caso de que no lo haya.
  14+ 93A3 3A F6 85     	ld a,(Vel_down)
  15+ 93A6 47           	ld b,a
  16+ 93A7 2A E0 85         ld hl,(Posicion_actual)
  17+ 93AA CD 80 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 93AD E6 02        	and 2
  19+ 93AF 28 0F        	jr z,1F
  20+ 93B1
  21+ 93B1              ; Nos encontramos en el último tercio de pantalla.
  22+ 93B1              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 93B1
  24+ 93B1 7C           	ld a,h
  25+ 93B2 FE 57        	cp $57
  26+ 93B4 20 0A        	jr nz,1F
  27+ 93B6 7D           	ld a,l
  28+ 93B7 C6 20        	add $20
  29+ 93B9 30 05        	jr nc,1F
  30+ 93BB
  31+ 93BB              ; ------------------------------
  32+ 93BB CD 96 96     	call Reaparece_arriba
  33+ 93BE              ;	call Reinicio
  34+ 93BE              ; ------------------------------
  35+ 93BE
  36+ 93BE 18 08        	jr 3F
  37+ 93C0 CD C0 90     1 call NextScan
  38+ 93C3 22 E0 85     	ld (Posicion_actual),hl
  39+ 93C6 10 E2            djnz 2B
  40+ 93C8 CD AC 96     3 call Genera_coordenadas
  41+ 93CB C9           	ret
  42+ 93CC
  43+ 93CC              ; ******************************************************************************************************************************************************************************************
  44+ 93CC              ;
  45+ 93CC              ;   22/01/23
  46+ 93CC              ;
  47+ 93CC              ;	Mov_up
  48+ 93CC              ;
  49+ 93CC              ; 	Mueve el Sprite hacia arriba.
  50+ 93CC              ;
  51+ 93CC              ;
  52+ 93CC 21 0C 86     Mov_up ld hl,Ctrl_0
  53+ 93CF CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 93D1              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 93D1              ; 																		; _ en el caso de que no lo haya.
  56+ 93D1 3A F5 85     	ld a,(Vel_up)
  57+ 93D4 47           	ld b,a
  58+ 93D5 2A E0 85     	ld hl,(Posicion_actual)
  59+ 93D8 CD 80 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 93DB A7           	and a
  61+ 93DC 20 10        	jr nz,1F
  62+ 93DE
  63+ 93DE              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 93DE              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 93DE
  66+ 93DE 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 93DF FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 93E1 20 0B            jr nz,1F
  69+ 93E3 7D               ld a,l
  70+ 93E4 D6 20            sub $20
  71+ 93E6 30 06            jr nc,1F
  72+ 93E8 25               dec h
  73+ 93E9
  74+ 93E9              ; -----------------------------
  75+ 93E9 CD 86 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 93EC              ;	call Reinicio
  77+ 93EC              ; -----------------------------
  78+ 93EC
  79+ 93EC 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 93EE CD CF 90     1 call PreviousScan
  81+ 93F1 22 E0 85     	ld (Posicion_actual),hl
  82+ 93F4 10 E2            djnz 3B
  83+ 93F6 CD AC 96     2 call Genera_coordenadas
  84+ 93F9 C9           	ret
  85+ 93FA
  86+ 93FA              ; ******************************************************************************************************************************************************************************************
  87+ 93FA              ;
  88+ 93FA              ;	19/10/22
  89+ 93FA              ;
  90+ 93FA              ;	Mov_right.
  91+ 93FA              ;
  92+ 93FA              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 93FA              ;
  94+ 93FA
  95+ 93FA 21 0C 86     Mov_right ld hl,Ctrl_0
  96+ 93FD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 93FF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 93FF              ; 																	; _ en el caso de que no lo haya.
  99+ 93FF 3A 0C 86     	ld a,(Ctrl_0)
 100+ 9402 CB 77        	bit 6,a
 101+ 9404 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9406
 103+ 9406 CD 34 96     	call Stop_Amadeus_right
 104+ 9409 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 940A 18 4D        	jr 8F
 106+ 940C
 107+ 940C 3A E4 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 940F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9411 20 46        	jr nz,8F
 110+ 9413
 111+ 9413 3A E6 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9416 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9417 28 40        	jr z,8F
 114+ 9419
 115+ 9419              ; ---------- ---------- ----------
 116+ 9419              ;
 117+ 9419              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9419
 119+ 9419 3A F4 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 941C FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 941E 28 11        	jr z,1F
 122+ 9420 38 06        	jr c,6F
 123+ 9422 FE 04        	cp 4
 124+ 9424 28 14        	jr z,7F
 125+ 9426 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9428
 127+ 9428              ; ---------- ---------- ----------
 128+ 9428              ;
 129+ 9428              ; Perfiles de velocidad
 130+ 9428              ;
 131+ 9428
 132+ 9428 3A E6 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 942B FE FE        	cp $fe
 134+ 942D 20 2A        	jr nz,8F
 135+ 942F 18 10        	jr 3F
 136+ 9431 3A E6 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 9434 FE FD        	cp $fd
 138+ 9436 20 21        	jr nz,8F
 139+ 9438 18 07        	jr 3F
 140+ 943A 3A E6 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 943D FE FB        	cp $fb
 142+ 943F 20 18        	jr nz,8F
 143+ 9441
 144+ 9441              ; ---------- ---------- ----------
 145+ 9441
 146+ 9441              3
 147+ 9441 CD 74 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 9444              ;	call Reinicio
 149+ 9444
 150+ 9444              ; ---------- ---------- ----------
 151+ 9444              ;
 152+ 9444              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 9444
 154+ 9444 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 9446 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 9447 CD 60 94     	call DESPLZ_DER
 157+ 944A C1           	pop bc
 158+ 944B 10 F9        	djnz 5B
 159+ 944D 2A E0 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9450 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9451 22 E0 85     	ld (Posicion_actual),hl
 162+ 9454 CD AC 96     	call Genera_coordenadas
 163+ 9457 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9459
 165+ 9459              ; ---------- ---------- ----------
 166+ 9459
 167+ 9459 2A E0 85     8 ld hl,(Posicion_actual)
 168+ 945C CD 60 94     	call DESPLZ_DER
 169+ 945F C9           2 ret
 170+ 9460
 171+ 9460              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9460              ;
 173+ 9460              ;	22/9/22
 174+ 9460              ;
 175+ 9460
 176+ 9460 CD 6F 94     DESPLZ_DER call Desplaza_derecha
 177+ 9463 CD BB 94         call modifica_parametros_1er_DESPLZ_2
 178+ 9466 CD E4 94         call Ciclo_completo
 179+ 9469 21 0C 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 946C CB FE        	set 7,(hl)
 181+ 946E C9           	ret
 182+ 946F
 183+ 946F              ; ******************************************************************************************************************************************************************************************
 184+ 946F              ;	15/02/23
 185+ 946F              ;
 186+ 946F
 187+ 946F 3A F4 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9472 47           	ld b,a
 189+ 9473 2A EC 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9476 23           1 inc hl
 191+ 9477 23           	inc hl
 192+ 9478 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 947A 22 EC 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 947D CD 55 88     	call Extrae_address
 195+ 9480 22 E2 85     	ld (Puntero_objeto),hl
 196+ 9483
 197+ 9483              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9483
 199+ 9483              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9483              ; Cuántos movimientos hemos hecho ??
 201+ 9483              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9483
 203+ 9483 2A E8 85     7 ld hl,(Indice_Sprite_der)
 204+ 9486 EB           	ex de,hl
 205+ 9487 A7           	and a
 206+ 9488 ED 52        	sbc hl,de
 207+ 948A CB 3D        	srl l
 208+ 948C 3E 08        6 ld a,8
 209+ 948E 95           	sub l
 210+ 948F 30 1E        	jr nc,3F
 211+ 9491
 212+ 9491              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9491              ; B="0".
 214+ 9491
 215+ 9491 04           4 inc b
 216+ 9492 3C           	inc a
 217+ 9493 20 FC        	jr nz,4B
 218+ 9495 78           	ld a,b
 219+ 9496 08           	ex af,af
 220+ 9497 2A E8 85     	ld hl,(Indice_Sprite_der)
 221+ 949A 23           5 inc hl
 222+ 949B 23           	inc hl
 223+ 949C 10 FC        	djnz 5B
 224+ 949E 22 EC 85     	ld (Puntero_DESPLZ_der),hl
 225+ 94A1 CD 55 88     	call Extrae_address
 226+ 94A4 22 E2 85     	ld (Puntero_objeto),hl
 227+ 94A7
 228+ 94A7              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 94A7              ; _(Posicion_actual).
 230+ 94A7
 231+ 94A7 21 E0 85     	ld hl,Posicion_actual
 232+ 94AA 34           	inc (hl)
 233+ 94AB 08               ex af,af
 234+ 94AC 6F           	ld l,a
 235+ 94AD 18 DD        	jr 6B
 236+ 94AF
 237+ 94AF              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 94AF
 239+ 94AF 47           3 ld b,a
 240+ 94B0 2A EA 85     	ld hl,(Indice_Sprite_izq)
 241+ 94B3 23           2 inc hl
 242+ 94B4 23           	inc hl
 243+ 94B5 10 FC        	djnz 2B
 244+ 94B7 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 94BA C9           8 ret
 246+ 94BB
 247+ 94BB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 94BB              ;
 249+ 94BB              ;	24/7/22
 250+ 94BB              ;
 251+ 94BB              ;	modifica_parametros_1er_DESPLZ_2
 252+ 94BB              ;
 253+ 94BB              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 94BB              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 94BB              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 94BB
 257+ 94BB 3A E6 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 94BE A7           	and a
 259+ 94BF 20 1F        	jr nz,1F
 260+ 94C1 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 94C3 32 E6 85         ld (CTRL_DESPLZ),a
 262+ 94C6
 263+ 94C6 21 DF 85     	ld hl,Columns
 264+ 94C9 34           	inc (hl)
 265+ 94CA 3A F2 85     	ld a,(Cuad_objeto)
 266+ 94CD E6 01        	and 1
 267+ 94CF 28 0F        	jr z,1F
 268+ 94D1 2A E0 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 94D4 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 94D5 22 E0 85     	ld (Posicion_actual),hl
 271+ 94D8 CD AC 96     	call Genera_coordenadas
 272+ 94DB CD 40 96     	call Inc_CTRL_DESPLZ
 273+ 94DE 18 03        	jr 2F
 274+ 94E0 CD 40 96     1 call Inc_CTRL_DESPLZ
 275+ 94E3 C9           2 ret
 276+ 94E4
 277+ 94E4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 94E4              ;
 279+ 94E4              ;	24/7/22
 280+ 94E4              ;
 281+ 94E4              ;	Ciclo_completo.
 282+ 94E4              ;
 283+ 94E4              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 94E4              ;
 285+ 94E4              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 94E4              ; 	Decrementamos (Columns).
 287+ 94E4              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 94E4              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 94E4
 290+ 94E4
 291+ 94E4 3A E6 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 94E7 FE FF        	cp $ff
 293+ 94E9 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 94EB E6 F0        	and $f0
 295+ 94ED 20 28        	jr nz,3F
 296+ 94EF
 297+ 94EF              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 94EF
 299+ 94EF 3A E6 85     	ld a,(CTRL_DESPLZ)
 300+ 94F2 47           	ld b,a
 301+ 94F3 3E F8        	ld a,$f8
 302+ 94F5 80           	add b
 303+ 94F6 32 E6 85     	ld (CTRL_DESPLZ),a
 304+ 94F9 18 1C        	jr 3F
 305+ 94FB 21 DF 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 94FE 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 94FF AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9500 32 E6 85     	ld (CTRL_DESPLZ),a
 309+ 9503 3A F2 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9506 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9508 20 0A        	jr nz,2F
 312+ 950A 2A E0 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 950D 23           	inc hl
 314+ 950E 22 E0 85     	ld (Posicion_actual),hl
 315+ 9511 CD AC 96     	call Genera_coordenadas
 316+ 9514
 317+ 9514              ; Inicia el puntero de Sprite.
 318+ 9514
 319+ 9514 CD 6C 88     2 call Inicia_puntero_objeto_der
 320+ 9517 C9           3 ret
 321+ 9518
 322+ 9518              ; ******************************************************************************************************************************************************************************************
 323+ 9518              ;
 324+ 9518              ;	15/02/23
 325+ 9518              ;
 326+ 9518              ;	Mov_left.
 327+ 9518              ;
 328+ 9518              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9518              ;
 330+ 9518              Mov_left
 331+ 9518
 332+ 9518 21 0C 86     	ld hl,Ctrl_0
 333+ 951B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 951D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 951D              ; 																	; _ en el caso de que no lo haya.
 336+ 951D 3A 0C 86     	ld a,(Ctrl_0)
 337+ 9520 CB 77        	bit 6,a
 338+ 9522 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 9524
 340+ 9524 CD 3A 96     	call Stop_Amadeus_left
 341+ 9527 C8           	ret z
 342+ 9528 20 4A        	jr nz,8F
 343+ 952A
 344+ 952A 3A E4 85     11 ld a,(Coordenada_X)
 345+ 952D A7           	and a
 346+ 952E 20 44        	jr nz,8F
 347+ 9530
 348+ 9530 3A E6 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 9533 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 9534 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 9536
 352+ 9536              ; ---------- ---------- ----------
 353+ 9536
 354+ 9536 3A F3 85     	ld a,(Vel_left)
 355+ 9539 FE 02        	cp 2
 356+ 953B 28 0F        	jr z,1F
 357+ 953D 38 04        	jr c,6F
 358+ 953F FE 04        	cp 4
 359+ 9541 28 12        	jr z,7F
 360+ 9543
 361+ 9543              ; ---------- ---------- ----------
 362+ 9543
 363+ 9543 3A E6 85     6 ld a,(CTRL_DESPLZ)
 364+ 9546 FE F8        	cp $f8
 365+ 9548 20 2A        	jr nz,8F
 366+ 954A 18 10        	jr 4F
 367+ 954C 3A E6 85     1 ld a,(CTRL_DESPLZ)
 368+ 954F FE F9        	cp $f9
 369+ 9551 20 21        	jr nz,8F
 370+ 9553 18 07        	jr 4F
 371+ 9555 3A E6 85     7 ld a,(CTRL_DESPLZ)
 372+ 9558 FE FB        	cp $fb
 373+ 955A 20 18        	jr nz,8F
 374+ 955C
 375+ 955C              ; ---------- ---------- ----------
 376+ 955C
 377+ 955C              4
 378+ 955C CD 62 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 955F              ;	call Reinicio
 380+ 955F
 381+ 955F              ; ---------- ---------- ----------
 382+ 955F
 383+ 955F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9561 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9562
 386+ 9562              ;	ld hl,(Indice_Sprite_izq)
 387+ 9562              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9562
 389+ 9562 CD 7B 95     	call DESPLZ_IZQ
 390+ 9565 C1           	pop bc
 391+ 9566 10 F9        	djnz 5B
 392+ 9568 2A E0 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 956B 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 956C 22 E0 85     	ld (Posicion_actual),hl
 395+ 956F CD AC 96     	call Genera_coordenadas
 396+ 9572 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9574
 398+ 9574              ; ---------- ---------- ----------
 399+ 9574
 400+ 9574              ; Movemos, no hay recolocación.
 401+ 9574
 402+ 9574 2A E0 85     8 ld hl,(Posicion_actual)
 403+ 9577 CD 7B 95     	call DESPLZ_IZQ
 404+ 957A C9           2 ret
 405+ 957B
 406+ 957B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 957B              ;
 408+ 957B              ;	22/9/22
 409+ 957B
 410+ 957B              DESPLZ_IZQ
 411+ 957B
 412+ 957B CD 8A 95     	call Desplaza_izquierda
 413+ 957E CD D6 95         call modifica_parametros_1er_DESPLZ
 414+ 9581 CD FE 95     	call Ciclo_completo_2
 415+ 9584 21 0C 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9587 CB BE        	res 7,(hl)
 417+ 9589 C9           	ret
 418+ 958A
 419+ 958A              Desplaza_izquierda
 420+ 958A
 421+ 958A 3A F3 85     	ld a,(Vel_left)
 422+ 958D 47           	ld b,a
 423+ 958E 2A EE 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9591 23           1 inc hl
 425+ 9592 23           	inc hl
 426+ 9593 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9595 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9598 CD 55 88     	call Extrae_address
 429+ 959B 22 E2 85     	ld (Puntero_objeto),hl
 430+ 959E
 431+ 959E              ; Modifica (Puntero_DESPLZ_der).
 432+ 959E
 433+ 959E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 959E              ; Cuántos movimientos hemos hecho ??
 435+ 959E              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 959E
 437+ 959E 2A EA 85     7 ld hl,(Indice_Sprite_izq)
 438+ 95A1 EB           	ex de,hl
 439+ 95A2 A7           	and a
 440+ 95A3 ED 52        	sbc hl,de
 441+ 95A5 CB 3D        	srl l
 442+ 95A7 3E 08        6 ld a,8
 443+ 95A9 95           	sub l
 444+ 95AA 30 1E        	jr nc,3F
 445+ 95AC
 446+ 95AC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 95AC              ; B="0".
 448+ 95AC
 449+ 95AC 04           4 inc b
 450+ 95AD 3C           	inc a
 451+ 95AE 20 FC        	jr nz,4B
 452+ 95B0 78           	ld a,b
 453+ 95B1 08           	ex af,af
 454+ 95B2 2A EA 85     	ld hl,(Indice_Sprite_izq)
 455+ 95B5 23           5 inc hl
 456+ 95B6 23           	inc hl
 457+ 95B7 10 FC        	djnz 5B
 458+ 95B9 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 95BC CD 55 88     	call Extrae_address
 460+ 95BF 22 E2 85     	ld (Puntero_objeto),hl
 461+ 95C2
 462+ 95C2              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 95C2              ; _(Posicion_actual).
 464+ 95C2
 465+ 95C2 21 E0 85     	ld hl,Posicion_actual
 466+ 95C5 35           	dec (hl)
 467+ 95C6 08           	ex af,af
 468+ 95C7 6F           	ld l,a
 469+ 95C8 18 DD        	jr 6B
 470+ 95CA
 471+ 95CA              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 95CA
 473+ 95CA 47           3 ld b,a
 474+ 95CB 2A E8 85     	ld hl,(Indice_Sprite_der)
 475+ 95CE 23           2 inc hl
 476+ 95CF 23           	inc hl
 477+ 95D0 10 FC        	djnz 2B
 478+ 95D2 22 EC 85     	ld (Puntero_DESPLZ_der),hl
 479+ 95D5 C9           8 ret
 480+ 95D6
 481+ 95D6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 95D6              ;
 483+ 95D6              ;	modifica_parametros_1er_DESPLZ
 484+ 95D6              ;
 485+ 95D6              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 95D6              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 95D6              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 95D6
 489+ 95D6 3A E6 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 95D9 A7           	and a
 491+ 95DA 20 1E        	jr nz,1F
 492+ 95DC 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 95DD 32 E6 85         ld (CTRL_DESPLZ),a
 494+ 95E0 21 DF 85     	ld hl,Columns
 495+ 95E3 34           	inc (hl)
 496+ 95E4 3A F2 85     	ld a,(Cuad_objeto)
 497+ 95E7 E6 01        	and 1
 498+ 95E9 20 0F        	jr nz,1F
 499+ 95EB 2A E0 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 95EE 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 95EF 22 E0 85     	ld (Posicion_actual),hl
 502+ 95F2 CD AC 96     	call Genera_coordenadas
 503+ 95F5 CD 51 96     	call Dec_CTRL_DESPLZ
 504+ 95F8 18 03        	jr 2F
 505+ 95FA CD 51 96     1 call Dec_CTRL_DESPLZ
 506+ 95FD C9           2 ret
 507+ 95FE
 508+ 95FE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 95FE
 510+ 95FE 3A E6 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9601 FE F7        	cp $f7
 512+ 9603 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9605 30 2C        	jr nc,3F
 514+ 9607
 515+ 9607              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9607
 517+ 9607 06 00        	ld b,0
 518+ 9609 04           4 inc b
 519+ 960A 3C           	inc a
 520+ 960B FE F7        	cp $f7
 521+ 960D 20 FA        	jr nz,4B
 522+ 960F 3E FF        	ld a,$ff
 523+ 9611 90           	sub b
 524+ 9612 32 E6 85     	ld (CTRL_DESPLZ),a
 525+ 9615 18 1C        	jr 3F
 526+ 9617
 527+ 9617              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9617
 529+ 9617 21 DF 85     1 ld hl,Columns
 530+ 961A 35           	dec (hl)
 531+ 961B AF           	xor a
 532+ 961C 32 E6 85     	ld (CTRL_DESPLZ),a
 533+ 961F 3A F2 85     	ld a,(Cuad_objeto)
 534+ 9622 E6 01        	and 1
 535+ 9624 28 0A        	jr z,2F
 536+ 9626 2A E0 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9629 2B           	dec hl
 538+ 962A 22 E0 85     	ld (Posicion_actual),hl
 539+ 962D CD AC 96     	call Genera_coordenadas
 540+ 9630
 541+ 9630              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 9630
 543+ 9630 CD 7F 88     2 call Inicia_puntero_objeto_izq
 544+ 9633 C9           3 ret
 545+ 9634
 546+ 9634              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 9634              ;
 548+ 9634              ;	19/10/22
 549+ 9634              ;
 550+ 9634              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 9634              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 9634
 553+ 9634 3A E4 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 9637 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9639 C9           	ret
 556+ 963A
 557+ 963A              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 963A              ;
 559+ 963A              ;	19/10/22
 560+ 963A              ;
 561+ 963A              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 963A              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 963A
 564+ 963A 3A E4 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 963D FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 963F C9           	ret
 567+ 9640
 568+ 9640              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 9640              ;
 570+ 9640              ;	24/7/22
 571+ 9640              ;
 572+ 9640              ;	Inc_CTRL_DESPLZ
 573+ 9640              ;
 574+ 9640              ;
 575+ 9640              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 9640
 577+ 9640 21 E6 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 9643 3A F4 85     	ld a,(Vel_right)
 579+ 9646 A7           	and a
 580+ 9647 28 06        	jr z,1F
 581+ 9649 47           	ld b,a
 582+ 964A 34           3 inc (hl)
 583+ 964B 10 FD        	djnz 3B
 584+ 964D 18 01        	jr 2F
 585+ 964F 34           1 inc (hl)
 586+ 9650 C9           2 ret
 587+ 9651
 588+ 9651              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9651              ;
 590+ 9651              ;	5/2/23
 591+ 9651              ;
 592+ 9651              ;	Dec_CTRL_DESPLZ
 593+ 9651              ;
 594+ 9651              ;
 595+ 9651              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9651
 597+ 9651 21 E6 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9654 3A F3 85     	ld a,(Vel_left)
 599+ 9657 A7           	and a
 600+ 9658 28 06        	jr z,1F
 601+ 965A 47           	ld b,a
 602+ 965B 35           3 dec (hl)
 603+ 965C 10 FD        	djnz 3B
 604+ 965E 18 01        	jr 2F
 605+ 9660 35           1 dec (hl)
 606+ 9661 C9           2 ret
 607+ 9662
 608+ 9662              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9662
 610+ 9662 2A E0 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9665 01 1F 00     	ld bc,31
 612+ 9668 A7           	and a
 613+ 9669 ED 4A        	adc hl,bc
 614+ 966B 22 E0 85     	ld (Posicion_actual),hl
 615+ 966E 21 0C 86     	ld hl,Ctrl_0														; $xxx1
 616+ 9671 CB C6        	set 0,(hl)
 617+ 9673 C9           	ret
 618+ 9674
 619+ 9674              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9674
 621+ 9674 2A E0 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9677 01 1F 00     	ld bc,31
 623+ 967A A7           	and a
 624+ 967B ED 42        	sbc hl,bc
 625+ 967D 22 E0 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9680 21 0C 86     	ld hl,Ctrl_0
 627+ 9683 CB CE        	set 1,(hl)
 628+ 9685 C9           	ret
 629+ 9686
 630+ 9686              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9686
 632+ 9686 24           Reaparece_abajo inc h
 633+ 9687 01 E0 17     	ld bc,$17e0
 634+ 968A A7           	and a
 635+ 968B ED 4A        	adc hl,bc
 636+ 968D 22 E0 85     	ld (Posicion_actual),hl
 637+ 9690 21 0C 86     	ld hl,Ctrl_0
 638+ 9693 CB D6        	set 2,(hl)
 639+ 9695 C9           	ret
 640+ 9696
 641+ 9696              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9696
 643+ 9696 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9699 A7           	and a
 645+ 969A ED 42        	sbc hl,bc
 646+ 969C 22 E0 85     	ld (Posicion_actual),hl
 647+ 969F 21 0C 86     	ld hl,Ctrl_0
 648+ 96A2 CB DE        	set 3,(hl)
 649+ 96A4 C9           	ret
 650+ 96A5
 651+ 96A5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 96A5
 653+ 96A5 2A F0 85     Reinicio ld hl,(Posicion_inicio)
 654+ 96A8 22 E0 85     	ld (Posicion_actual),hl
 655+ 96AB C9           	ret
# file closed: Direcciones.asm
1059  96AC              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 96AC              ; ------------------------------------------------------------------------
   2+ 96AC              ;
   3+ 96AC              ;	02/04/23
   4+ 96AC              ;
   5+ 96AC              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 96AC              ;	Fila superior "0", Columna izquierda "0".
   7+ 96AC              ;
   8+ 96AC              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 96AC              ;
  10+ 96AC              ;	Modifica: A,BC y DE.
  11+ 96AC
  12+ 96AC C5           Genera_coordenadas push bc
  13+ 96AD E5           	push hl
  14+ 96AE D5           	push de
  15+ 96AF
  16+ 96AF 2A E0 85     	ld hl,(Posicion_actual)
  17+ 96B2
  18+ 96B2 7D           	ld a,l
  19+ 96B3 E6 1F        	and $1f
  20+ 96B5 32 E4 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 96B8
  22+ 96B8 CD 80 93     	call calcula_tercio
  23+ 96BB 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 96BC
  25+ 96BC 1E 00        	ld e,0
  26+ 96BE 7D           	ld a,l
  27+ 96BF E6 E0        	and $e0
  28+ 96C1 28 01        	jr z,1F
  29+ 96C3 04           	inc b
  30+ 96C4
  31+ 96C4 04           1 inc b
  32+ 96C5 05           	dec b
  33+ 96C6 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 96C8              ;														; _ , salimos.
  35+ 96C8 1C           3 inc e
  36+ 96C9 D6 20        	sub 32
  37+ 96CB 20 FB        	jr nz,3B
  38+ 96CD 10 F5        	djnz 1B
  39+ 96CF
  40+ 96CF 7B           2 ld a,e
  41+ 96D0 32 E5 85     	ld (Coordenada_y),a
  42+ 96D3
  43+ 96D3 D1           	pop de
  44+ 96D4 E1           	pop hl
  45+ 96D5 C1           	pop bc
  46+ 96D6
  47+ 96D6 C9           	ret
  48+ 96D7
  49+ 96D7              ; ------------------------------------------------------------------------
  50+ 96D7              ;	28/03/23
  51+ 96D7              ;
  52+ 96D7              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 96D7              ;	Fila superior "0", Columna izquierda "0".
  54+ 96D7              ;
  55+ 96D7              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 96D7              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 96D7              ;
  58+ 96D7              ;		DE="$120d"
  59+ 96D7              ;
  60+ 96D7              ;		D, (Coordenada_X), Columnas, $12
  61+ 96D7              ;		E, (Coordenada_y), Filas, $0d
  62+ 96D7              ;
  63+ 96D7              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 96D7
  65+ 96D7              ;	Modifica: A,BC y DE.
  66+ 96D7
  67+ 96D7
  68+ 96D7              Genera_coordenadas_disparo
  69+ 96D7
  70+ 96D7              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 96D7
  72+ 96D7 7D           	ld a,l
  73+ 96D8 E6 1F        	and $1f
  74+ 96DA 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 96DB CD 80 93     	call calcula_tercio
  76+ 96DE 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 96DF 1E 00        	ld e,0
  78+ 96E1 7D           	ld a,l
  79+ 96E2 E6 E0        	and $e0
  80+ 96E4 28 01        	jr z,1F
  81+ 96E6 04           	inc b
  82+ 96E7 1C           1 inc e
  83+ 96E8 D6 20        	sub 32
  84+ 96EA 20 FB        	jr nz,1B
  85+ 96EC 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 96EE C9           	ret
  87+ 96EF
# file closed: Genera_coordenadas.asm
1060  96EF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 96EF
   2+ 96EF
   3+ 96EF              ;   11/8/22
   4+ 96EF              ;
   5+ 96EF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 96EF              ;
   7+ 96EF              ;   Mov_obj.asm
   8+ 96EF              ;
   9+ 96EF              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 96EF              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 96EF              ;
  12+ 96EF              ;   Codificación:
  13+ 96EF              ;
  14+ 96EF              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 96EF
  16+ 96EF              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 96EF
  18+ 96EF 02 40 00     Arriba db 2,%01000000,0
  19+ 96F2 02 80 00     Abajo db 2,%10000000,0
  20+ 96F5 02 20 00     Derecha db 2,%00100000,0
  21+ 96F8 02 10 00     Izquierda db 2,%00010000,0
  22+ 96FB 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 96FF 60 42 60 40
  22+ 9703 63
  23+ 9704 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9708 22 A3 80 A0
  24+ 970C 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9710 84 A0 83 A0
  25+ 9714 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9718 80 A3 22 A0
  26+ 971C 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9720 40 60 42 60
  27+ 9724 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9728
  29+ 9728 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 972C 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9730 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9734 84 00
  32+ 9736 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 973A 84 00
  33+ 973C 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9740 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9744 1F 1F 1F 1F
  35+ 9748 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 974C 1F 1F 1F 1F
  35+ 9750 1F
  36+ 9751 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9755 2F 2F 2F 2F
  36+ 9759 2F 2F
  37+ 975B 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 975F 2F 2F 00
  38+ 9762
  39+ 9762              ; ----- ----- ----- ----- -----
  40+ 9762
  41+ 9762 40 97        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9764 3C 97        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9766 F8 96        Indice_mov_Izquierda defw Izquierda
  44+ 9768 F5 96        Indice_mov_Derecha defw Derecha
  45+ 976A F2 96        Indice_mov_Abajo defw Abajo
  46+ 976C EF 96        Indice_mov_Arriba defw Arriba
  47+ 976E 2C 97        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9770 30 97        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9772 28 97        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9774 36 97        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9776 FB 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9778              ; ----- ----- ----- ----- -----
  53+ 9778
  54+ 9778 3A 13 86     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 977B A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 977C 28 02            jr z,1F
  57+ 977E 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9780 3A 14 86     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9783 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9785 32 14 86         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9788              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9788 2A 11 86         ld hl,(Puntero_mov)
  63+ 978B 7E               ld a,(hl)
  64+ 978C 32 13 86         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 978F 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9790 22 11 86         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9793
  68+ 9793 3A 15 86     Decoder ld a,(Repetimos_db)
  69+ 9796 A7               and a
  70+ 9797 20 0C            jr nz,12F
  71+ 9799 2A 11 86         ld hl,(Puntero_mov)
  72+ 979C 7E               ld a,(hl)
  73+ 979D A7               and a
  74+ 979E 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 97A0 E6 0F            and $0f
  76+ 97A2 32 15 86         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 97A5              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 97A5 2A 11 86     12 ld hl,(Puntero_mov)
  79+ 97A8 CB 7E            bit 7,(hl)
  80+ 97AA 28 03            jr z,2F
  81+ 97AC CD 9E 93         call Mov_down
  82+ 97AF 2A 11 86     2 ld hl, (Puntero_mov)
  83+ 97B2 CB 76            bit 6,(hl)
  84+ 97B4 28 03            jr z,3F
  85+ 97B6 CD CC 93         call Mov_up
  86+ 97B9 2A 11 86     3 ld hl, (Puntero_mov)
  87+ 97BC CB 6E            bit 5,(hl)
  88+ 97BE 28 03            jr z,4F
  89+ 97C0 CD FA 93         call Mov_right
  90+ 97C3 2A 11 86     4 ld hl, (Puntero_mov)
  91+ 97C6 CB 66            bit 4,(hl)
  92+ 97C8 28 03            jr z,5F
  93+ 97CA CD 18 95         call Mov_left
  94+ 97CD
  95+ 97CD              ; ---------- --------- --------- ---------- ----------
  96+ 97CD
  97+ 97CD 3A 15 86     5 ld a,(Repetimos_db)
  98+ 97D0 A7               and a
  99+ 97D1 28 07            jr z,6F
 100+ 97D3 3D               dec a
 101+ 97D4 32 15 86         ld (Repetimos_db),a
 102+ 97D7 28 01            jr z,6f
 103+ 97D9 C9           11 ret
 104+ 97DA 21 13 86     6 ld hl,Contador_db_mov
 105+ 97DD 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 97DE 2A 11 86         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 97E1 23               inc hl
 108+ 97E2 22 11 86         ld (Puntero_mov),hl
 109+ 97E5 18 F2            jr 11B
 110+ 97E7 2A 0F 86     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 97EA 3A 14 86         ld a,(Incrementa_puntero)
 112+ 97ED 47               ld b,a
 113+ 97EE 23           8 inc hl
 114+ 97EF 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 97F1 5E               ld e,(hl)
 116+ 97F2 23               inc hl
 117+ 97F3 56               ld d,(hl)
 118+ 97F4 EB               ex de,hl
 119+ 97F5 22 11 86         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 97F8 18 DF            jr 11B
 121+ 97FA
 122+ 97FA              ; ---------- --------- --------- ---------- ----------
 123+ 97FA              ;
 124+ 97FA              ;   11/8/22
 125+ 97FA              ;
 126+ 97FA              ;   Prepara_Puntero_mov
 127+ 97FA
 128+ 97FA E5           Prepara_Puntero_mov push hl
 129+ 97FB D5               push de
 130+ 97FC 2A 0F 86         ld hl,(Puntero_indice_mov)
 131+ 97FF 5E               ld e,(hl)
 132+ 9800 23               inc hl
 133+ 9801 56               ld d,(hl)
 134+ 9802 EB               ex de,hl
 135+ 9803 22 11 86         ld (Puntero_mov),hl
 136+ 9806 D1               pop de
 137+ 9807 E1               pop hl
 138+ 9808 C9               ret
 139+ 9809
 140+ 9809              ; ---------- --------- --------- ---------- ----------
 141+ 9809              ;
 142+ 9809              ;   11/8/22
 143+ 9809              ;
 144+ 9809              ;   Reinicia_el_movimiento
 145+ 9809
 146+ 9809 CD FA 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 980C AF               xor a
 148+ 980D 32 13 86         ld (Contador_db_mov),a
 149+ 9810 32 14 86         ld (Incrementa_puntero),a
 150+ 9813 C3 78 97         jp Movimiento
 151+ 9816 C9               ret
 152+ 9817              ; ---------- --------- --------- ---------- ----------
 153+ 9817
 154+ 9817
 155+ 9817
 156+ 9817
 157+ 9817
 158+ 9817
 159+ 9817
 160+ 9817
 161+ 9817
 162+ 9817
 163+ 9817
 164+ 9817
 165+ 9817
 166+ 9817
 167+ 9817
 168+ 9817
 169+ 9817
 170+ 9817
# file closed: Patrones_de_mov.asm
1061  9817              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9817              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9817              ;
   3+ 9817              ;	3/1/23
   4+ 9817              ;
   5+ 9817              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9817
   7+ 9817              ;	ADC HL,SP	LD (addr),SP
   8+ 9817              ;	ADD HL,SP	LD SP,(addr)
   9+ 9817              ;	ADD IX,SP	LD SP,nn
  10+ 9817              ; 	ADD IY,SP	LD SP,HL
  11+ 9817              ;				LD SP,IX
  12+ 9817              ;	DEC SP		LD SP,IY
  13+ 9817
  14+ 9817              ;	EX (SP),HL
  15+ 9817              ;	EX (SP),IX
  16+ 9817              ;	EX (SP),IY
  17+ 9817
  18+ 9817              ;	INC SP
  19+ 9817
  20+ 9817
  21+ 9817                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 24 86      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 1A 86         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 2A 86         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 28 86     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 2A 86         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 28 86     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 24 86  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1062  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1063  7FE6
1064  7FE6              	SAVESNA "Pruebas.sna", START
1065  7FE6
1066  7FE6
1067  7FE6
# file closed: Banco_de_pruebas.asm
