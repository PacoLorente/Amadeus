# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 2B 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 42 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 13 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 55 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 23 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 53 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 53 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 56 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 33 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 FE 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas de entidades.
  83+ 8961              ;
  84+ 8961              ;	18/1/24
  85+ 8961              ;
  86+ 8961
  87+ 8961              Indice_de_cajas_de_entidades
  88+ 8961
  89+ 8961 7F 89        	defw Caja_1
  90+ 8963 8B 89        	defw Caja_2
  91+ 8965 97 89        	defw Caja_3
  92+ 8967 A3 89        	defw Caja_4
  93+ 8969 AF 89        	defw Caja_5
  94+ 896B BB 89        	defw Caja_6
  95+ 896D C7 89        	defw Caja_7
  96+ 896F
  97+ 896F 00 00        	defw 0
  98+ 8971 00 00        	defw 0
  99+ 8973
 100+ 8973              ; -------------------------
 101+ 8973
 102+ 8973              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8973
 104+ 8973              ;	db 0
 105+ 8973
 106+ 8973              ; ---------- ---------- ---------- ---------- ----------
 107+ 8973              ;
 108+ 8973              ;	28/05/24
 109+ 8973              ;
 110+ 8973              ; 	Cada caja tiene 14 bytes !!!
 111+ 8973              ;
 112+ 8973              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8973
 114+ 8973 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8974 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8976 00           	db 0												; (Contador_de_vueltas).
 117+ 8977 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8978 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 897A 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 897C 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897E 00           	db 0												; (Velocidad).
 122+ 897F
 123+ 897F              ; ---------- ---------- ---------- ---------- ----------
 124+ 897F              ;
 125+ 897F              ;	22/01/24
 126+ 897F              ;
 127+ 897F              ; 	Cada caja tiene 12 bytes !!!
 128+ 897F
 129+ 897F 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 8982 00           	db 0												; (Contador_de_vueltas).
 131+ 8983 00           	db 0												; (Impacto).
 132+ 8984 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8986 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8988 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 898A 00           	db 0												; (Velocidad).
 136+ 898B
 137+ 898B              ; ---------- ---------- ---------- ---------- ----------
 138+ 898B
 139+ 898B 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898E 00           	db 0 												; (Contador_de_vueltas).
 141+ 898F 00           	db 0												; (Impacto).
 142+ 8990 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 8992 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8994 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8996 00           	db 0												; (Velocidad).
 146+ 8997
 147+ 8997              ; ---------- ---------- ---------- ---------- ----------
 148+ 8997
 149+ 8997 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 899A 00           	db 0 												; (Contador_de_vueltas).
 151+ 899B 00           	db 0												; (Impacto).
 152+ 899C 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 89A0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 89A2 00           	db 0												; (Velocidad).
 156+ 89A3
 157+ 89A3              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A3
 159+ 89A3 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A6 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A7 00           	db 0												; (Impacto).
 162+ 89A8 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89AA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89AC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AE 00           	db 0												; (Velocidad).
 166+ 89AF
 167+ 89AF              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AF
 169+ 89AF 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89B2 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B3 00           	db 0												; (Impacto).
 172+ 89B4 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89BA 00           	db 0												; (Velocidad).
 176+ 89BB
 177+ 89BB              ; ---------- ---------- ---------- ---------- ----------
 178+ 89BB
 179+ 89BB 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BE 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BF 00           	db 0												; (Impacto).
 182+ 89C0 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89C2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C6 00           	db 0												; (Velocidad).
 186+ 89C7
 187+ 89C7              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C7
 189+ 89C7 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89CA 00           	db 0 												; (Contador_de_vueltas).
 191+ 89CB 00           	db 0												; (Impacto).
 192+ 89CC 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89D0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89D2 00           	db 0												; (Velocidad).
 196+ 89D3
 197+ 89D3              ; -------------------------------------------------------------------------------------
 198+ 89D3              ;
 199+ 89D3              ;	11/1/24
 200+ 89D3              ;
 201+ 89D3              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D3              ;
 203+ 89D3              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D3              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D3              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D3              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D3
 208+ 89D3              Indice_de_definiciones_de_entidades
 209+ 89D3
 210+ 89D3 D7 89        	defw Entidad_1
 211+ 89D5 E4 89        	defw Entidad_2
 212+ 89D7
 213+ 89D7              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D7
 215+ 89D7              ;	BADSAT, (Satélite malvado).
 216+ 89D7
 217+ 89D7 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89DA 02           	db 2												; (Contador_de_vueltas).
 219+ 89DB 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DD 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DF 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89E1 01           	db 1												; (Cuad_objeto).
 223+ 89E2 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E4
 225+ 89E4 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E7 01           	db 1												; (Contador_de_vueltas).
 227+ 89E8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89EA 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89EC 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EE 01           	db 1												; (Cuad_objeto).
 231+ 89EF C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89F1
 233+ 89F1              ; -------------------------------------------------------------------------------------
 234+ 89F1              ;
 235+ 89F1              ;	28/05/24
 236+ 89F1              ;
 237+ 89F1              ;	Definición de Amadeus.
 238+ 89F1              ;
 239+ 89F1              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89F1              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89F1
 242+ 89F1 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F4 00           	db 0												; (Contador_de_vueltas).
 244+ 89F5 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F7 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F9 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89FB 03           	db 3												; (Cuad_objeto).
 248+ 89FC DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  89FE              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FE
   2+ 89FE
   3+ 89FE              ;   07/07/23
   4+ 89FE              ;
   5+ 89FE              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FE              ;
   7+ 89FE              ;   Codificación:
   8+ 89FE              ;
   9+ 89FE              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FE              ;
  11+ 89FE              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FE              ;
  13+ 89FE              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FE              ;
  15+ 89FE              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FE              ;
  17+ 89FE              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FE              ;                               ..... %01000010 Vel_up 4
  19+ 89FE              ;                                               Vel_down 2
  20+ 89FE              ;                               ..... $42
  21+ 89FE              ;
  22+ 89FE              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FE              ;
  24+ 89FE              ;                               ..... %01000010 Vel_left 4
  25+ 89FE              ;                                               Vel_right 2
  26+ 89FE              ;                               ..... $42
  27+ 89FE              ;
  28+ 89FE              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FE              ;
  30+ 89FE              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FE              ;
  32+ 89FE              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FE              ;
  34+ 89FE              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FE              ;                                     $53
  36+ 89FE              ;
  37+ 89FE              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FE              ;
  39+ 89FE              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FE              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FE              ;
  42+ 89FE              ;                       Arriba ..... $81
  43+ 89FE              ;                       Arriba - izquierda ..... $a1
  44+ 89FE              ;                       Arriba - derecha ..... $91
  45+ 89FE              ;
  46+ 89FE              ;                       Abajo ..... $41
  47+ 89FE              ;                       Abajo - izquierda ..... $61
  48+ 89FE              ;                       Abajo - derecha ..... $51
  49+ 89FE              ;
  50+ 89FE              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FE              ;
  52+ 89FE              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FE              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FE              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FE              ;
  56+ 89FE              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FE              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FE              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FE              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FE              ;
  61+ 89FE              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FE              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FE              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FE              ;
  65+ 89FE              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FE              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FE              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FE              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FE
  70+ 89FE              ; ----- ----- ----- ----- -----
  71+ 89FE
  72+ 89FE 2A 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A00 32 8A            defw F_1
  74+ 8A02 3C 8A            defw F_2
  75+ 8A04 46 8A            defw Codo_abajo_derecha
  76+ 8A06 7A 8A            defw Derecha_y_subiendo
  77+ 8A08 84 8A            defw Derecha_y_subiendo_1
  78+ 8A0A 8E 8A            defw F_3
  79+ 8A0C 98 8A            defw F_4
  80+ 8A0E A2 8A            defw Derecha_y_bajando
  81+ 8A10 AC 8A            defw Derecha_y_bajando_1
  82+ 8A12 B6 8A            defw Derecha_y_bajando_2
  83+ 8A14 C0 8A            defw Codo_derecha_abajo
  84+ 8A16 F0 8A            defw Codo_abajo_izq.
  85+ 8A18 24 8B            defw Izquierda_y_subiendo
  86+ 8A1A 2E 8B            defw Izquierda_y_subiendo_1
  87+ 8A1C 38 8B            defw F_5
  88+ 8A1E 42 8B            defw F_6
  89+ 8A20 4C 8B            defw Izquierda_y_bajando
  90+ 8A22 56 8B            defw Izquierda_y_bajando_1
  91+ 8A24 60 8B            defw Izquierda_y_bajando_2
  92+ 8A26 6A 8B            defw Codo_izquierda_abajo
  93+ 8A28 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2A
  95+ 8A2A 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2E 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A32
  98+ 8A32 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A36 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3A 08 00
 100+ 8A3C
 101+ 8A3C 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A40 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A44 0F FE
 103+ 8A46
 104+ 8A46 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A52 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A56 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A62 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A66 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6E 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A72 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A76 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7A
 118+ 8A7A 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7E 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A82 06 00
 120+ 8A84
 121+ 8A84 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A88 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8C 02 00
 123+ 8A8E
 124+ 8A8E 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A92 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A96 04 00
 126+ 8A98
 127+ 8A98 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9C 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA0 08 00
 129+ 8AA2
 130+ 8AA2 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA6 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAA 02 00
 132+ 8AAC
 133+ 8AAC 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB0 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB4 06 00
 135+ 8AB6
 136+ 8AB6 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABA 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABE 06 00
 138+ 8AC0
 139+ 8AC0              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC0
 141+ 8AC0 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC4 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD4 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AEC 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF0
 154+ 8AF0 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B00 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B04 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B08 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0C 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B10 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B14 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B18 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B20 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B24
 168+ 8B24 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B28 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2C 06 00
 170+ 8B2E
 171+ 8B2E 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B32 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B36 02 00
 173+ 8B38
 174+ 8B38 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3C 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B40 04 00
 176+ 8B42
 177+ 8B42 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B46 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4A 08 00
 179+ 8B4C
 180+ 8B4C 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B50 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B54 02 00
 182+ 8B56
 183+ 8B56 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5A 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5E 06 00
 185+ 8B60
 186+ 8B60 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B64 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B68 06 00
 188+ 8B6A
 189+ 8B6A 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B72 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B76 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7E 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B82 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B86 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8E 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B92 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B96 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9A
 202+ 8B9A
 203+ 8B9A
 204+ 8B9A
 205+ 8B9A
 206+ 8B9A
 207+ 8B9A
 208+ 8B9A
 209+ 8B9A
 210+ 8B9A
# file closed: Patrones_de_mov.asm
 149  8B9A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9A              ; 19/1/24
   2+ 8B9A
   3+ 8B9A              Indice_de_niveles
   4+ 8B9A
   5+ 8B9A A2 8B        	defw Nivel_1
   6+ 8B9C A9 8B        	defw Nivel_2
   7+ 8B9E
   8+ 8B9E              ;	...
   9+ 8B9E              ;	...
  10+ 8B9E              ;	+ Niveles ...
  11+ 8B9E
  12+ 8B9E 00 00        	defw 0
  13+ 8BA0 00 00        	defw 0
  14+ 8BA2
  15+ 8BA2 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA3 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BA7 01 01
  17+ 8BA9
  18+ 8BA9 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BAA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BAE 01 02
  20+ 8BB0 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BB4 01 02
  21+ 8BB6
# file closed: Niveles.asm
 150  8BB6
 151  8BB6              ; --------------------------------------------------------------------------------
 152  8BB6              ;
 153  8BB6              ; 12/05/24
 154  8BB6              ;
 155  8BB6              ; Parámetros DRAW.
 156  8BB6              ;
 157  8BB6
 158  8BB6              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BB6
 160  8BB6 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BB7              ;															- Patrón de movimiento.
 162  8BB7 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BB8 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BB9
 165  8BB9 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BBA              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BBA
 168  8BBA              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BBA              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BBA              ; Ejemplos.
 171  8BBA
 172  8BBA              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BBA              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BBA              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BBA              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BBA              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BBA
 178  8BBA 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BBB              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BBB              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BBB
 182  8BBB 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BBD              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BBD
 185  8BBD 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BBF
 187  8BBF              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BBF
 189  8BBF 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BC1              ;														; _palabras que componen el "movimiento_masticado".
 191  8BC1
 192  8BC1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BC1
 194  8BC1 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BC2              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BC2              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BC2              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BC2              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BC2
 200  8BC2 00           Ctrl_2 db 0
 201  8BC3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BC3              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BC3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BC3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BC3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BC3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BC3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BC3              ;
 209  8BC3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BC3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BC3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BC3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BC3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BC3              ;														BIT 4, ???
 215  8BC3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BC3
 217  8BC3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BC4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BC4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BC4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BC4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BC4              ;
 223  8BC4              ; 														DESCRIPCIÖN:
 224  8BC4              ;
 225  8BC4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BC4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BC4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BC4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BC4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BC4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BC4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BC4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BC4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BC4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BC4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BC4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BC4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BC4              ;
 239  8BC4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BC4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BC4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BC4
 243  8BC4              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BC4
 245  8BC4 00           Filas db 0												; Filas. [DRAW]
 246  8BC5 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BC6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BC8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BCA
 250  8BCA              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BCA
 252  8BCA 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8BCB              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8BCB              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8BCB
 256  8BCB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8BCB
 258  8BCB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8BCB              ;
 260  8BCB              ;	COLORES: 0 ..... NEGRO
 261  8BCB              ;    		 1 ..... AZUL
 262  8BCB              ; 			 2 ..... ROJO
 263  8BCB              ;			 3 ..... MAGENTA
 264  8BCB              ; 			 4 ..... VERDE
 265  8BCB              ; 			 5 ..... CIAN
 266  8BCB              ;			 6 ..... AMARILLO
 267  8BCB              ; 			 7 ..... BLANCO
 268  8BCB
 269  8BCB 00 00        Indice_Sprite_der defw 0
 270  8BCD 00 00        Indice_Sprite_izq defw 0
 271  8BCF 00 00        Puntero_DESPLZ_der defw 0
 272  8BD1 00 00        Puntero_DESPLZ_izq defw 0
 273  8BD3
 274  8BD3 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8BD5 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8BD6 00           Columnas db 0
 277  8BD7 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8BD9              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BD9 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8BDA
 281  8BDA              ; variables de control general.
 282  8BDA
 283  8BDA 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8BDB
 285  8BDB              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8BDB
 287  8BDB              Perfiles_de_velocidad
 288  8BDB
 289  8BDB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8BDC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8BDD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8BDE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8BDF
 294  8BDF              ; Contadores de 16 bits.
 295  8BDF
 296  8BDF 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8BE1 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8BE3 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8BE5 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8BE7
 301  8BE7              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8BE7
 303  8BE7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8BE9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8BEB 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8BED              ;
 307  8BED              ;
 308  8BED 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8BEE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8BEE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8BEE 00           Incrementa_puntero_backup db 0
 312  8BEF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8BF0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8BF0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8BF1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8BF2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8BF3              ;
 318  8BF3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8BF3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8BF3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8BF3              ;
 322  8BF3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8BF3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8BF3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8BF3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8BF3              ;
 327  8BF3              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8BF3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8BF3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8BF3
 331  8BF3 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8BF4
 333  8BF4              ;														DESCRIPCIÓN:
 334  8BF4              ;
 335  8BF4              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8BF4              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8BF4              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8BF4              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8BF4              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8BF4              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8BF4
 342  8BF4              ;														BIT 3, Recarga de nueva oleada.
 343  8BF4              ;														BIT 4, Recarga de nueva oleada.
 344  8BF4              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8BF4              ;														BIT 6, **** Frame completo.
 346  8BF4              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8BF4
 348  8BF4 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8BF6              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8BF6              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8BF6              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8BF6
 353  8BF6              ; Gestión de ENTIDADES y CAJAS.
 354  8BF6
 355  8BF6 00 00        Puntero_store_caja defw 0
 356  8BF8 00 00        Puntero_restore_caja defw 0
 357  8BFA 00 00        Indice_restore_caja defw 0
 358  8BFC
 359  8BFC 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 360  8BFD 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 361  8BFE 00           Entidades_en_curso db 0									; Entidades en pantalla.
 362  8BFF
 363  8BFF 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 364  8C01 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 365  8C03              ;														; _ puntero (Indice_entidades).
 366  8C03
 367  8C03              ;---------------------------------------------------------------------------------------------------------------
 368  8C03              ;
 369  8C03              ;	13/10/24
 370  8C03              ;
 371  8C03              ;	Álbumes.
 372  8C03
 373  8C03 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 374  8C05              ;														; _variable para almacenar lo posición del puntero_
 375  8C05              ; 														; _de pila, SP.
 376  8C05 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 377  8C07              ;														; La utiliza la rutina [Extrae_foto_registros].
 378  8C07
 379  8C07              ; Impresión. ----------------------------------------------------------------------------------------------------
 380  8C07
 381  8C07 00 00        Album_de_pintado defw 0
 382  8C09 00 00        Album_de_borrado defw 0
 383  8C0B 00 00        Album_de_pintado_Amadeus defw 0
 384  8C0D 00 00        Album_de_borrado_Amadeus defw 0
 385  8C0F
 386  8C0F 00 00        Album_de_pintado_disparos_Amadeus defw 0
 387  8C11 00 00        Album_de_borrado_disparos_Amadeus defw 0
 388  8C13
 389  8C13 00 00        Album_de_pintado_disparos_Entidades defw 0
 390  8C15 00 00        Album_de_borrado_disparos_Entidades defw 0
 391  8C17
 392  8C17
 393  8C17 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 394  8C19
 395  8C19 00           Num_de_bytes_album_de_disparos db 0
 396  8C1A 00           Num_de_bytes_album_de_disparos_borrado db 0
 397  8C1B
 398  8C1B 07           Numero_de_disparos_de_entidades db 7
 399  8C1C
 400  8C1C 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 401  8C1D 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 402  8C1E
 403  8C1E 00 00        Techo_Scanlines_album defw 0
 404  8C20 00 00        Techo_Scanlines_album_2 defw 0
 405  8C22 00           Switch db 0
 406  8C23 00 00        Techo defw 0
 407  8C25 00 00        Scanlines_album_SP defw 0
 408  8C27 00 89        India_SP defw Tabla_de_pintado
 409  8C29 03 89        India_2_SP defw Tabla_de_pintado+3
 410  8C2B
 411  8C2B 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 412  8C2C              ;
 413  8C2C              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 414  8C2C              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 415  8C2C              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 416  8C2C              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 417  8C2C              ;																Habilita el borrado/pintado de sprites.
 418  8C2C              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 419  8C2C              ;																_ a la baja.
 420  8C2C              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 421  8C2C              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 422  8C2C              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 423  8C2C              ; 																_ el último frame de la explosión de nuestra nave.
 424  8C2C              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 425  8C2C              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 426  8C2C
 427  8C2C 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 428  8C2D              ;
 429  8C2D              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 430  8C2D              ;
 431  8C2D              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 432  8C2D              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 433  8C2D              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 434  8C2D              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 435  8C2D              ;
 436  8C2D              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 437  8C2D              ;															_ masticados ya generados.
 438  8C2D              ;
 439  8C2D              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 440  8C2D              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 441  8C2D              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 442  8C2D              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 443  8C2D
 444  8C2D 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 445  8C2E              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 446  8C2E              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 447  8C2E
 448  8C2E              ; Gestión de Disparos.
 449  8C2E
 450  8C2E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 451  8C30 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 452  8C32 00           Impacto2 db 0											; Byte de control de impactos.
 453  8C33
 454  8C33              ;
 455  8C33              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 456  8C33              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 457  8C33              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 458  8C33              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 459  8C33
 460  8C33
 461  8C33
 462  8C33
 463  8C33
 464  8C33
 465  8C33
 466  8C33 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 467  8C35              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 468  8C35              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 469  8C35
 470  8C35 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 471  8C37              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 472  8C37 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 473  8C3A              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 474  8C3A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 475  8C3D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 476  8C3D
 477  8C3D              ;---------------------------------------------------------------------------------------------------------------
 478  8C3D
 479  8C3D              ; Relojes y temporizaciones.
 480  8C3D
 481  8C3D 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 482  8C3E 05           Clock_explosion_Amadeus db 5
 483  8C3F 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 484  8C40
 485  8C40 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 486  8C42 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 487  8C44 00           Numero_rnd_disparos db 0
 488  8C45
 489  8C45 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 490  8C47 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 491  8C48              ;																		; Repite la oleada de entidades.
 492  8C48 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 493  8C49 A0           CLOCK_disparos_de_entidades db $a0
 494  8C4A
 495  8C4A              ;---------------------------------------------------------------------------------------------------------------
 496  8C4A
 497  8C4A              ; Gestión de NIVELES.
 498  8C4A
 499  8C4A 00           Nivel db 0												; Nivel actual del juego.
 500  8C4B 00 00        Puntero_indice_NIVELES defw 0
 501  8C4D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 502  8C4F              ; 														; _ que definen el NIVEL.
 503  8C4F
 504  8C4F              ; ---------------------------------------------------------------------------------------------------------------
 505  8C4F
 506  8C4F              ; Temporizaciones Shield.
 507  8C4F
 508  8C4F 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 509  8C53 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 510  8C55 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 511  8C56 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 512  8C57 00           Shield_3 db 0
 513  8C58
 514  8C58 03           Lives db 3
 515  8C59
 516  8C59              ; 	INICIO  *************************************************************************************************************************************************************************
 517  8C59              ;
 518  8C59              ;	5/1/24
 519  8C59
 520  8C59              START
 521  8C59
 522  8C59 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 523  8C5C 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 524  8C5E ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 525  8C60 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 526  8C62 F3           	DI
 527  8C63
 528  8C63              ; Limpiamos pantalla.
 529  8C63
 530  8C63 3E 07        	ld a,%00000111
 531  8C65 CD C0 94     	call Cls
 532  8C68 CD 18 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 533  8C6B
 534  8C6B              ; INICIALIZACIÓN.
 535  8C6B
 536  8C6B 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 537  8C6D CD 65 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 538  8C70 CD AD 8E     	call Extrae_numero_aleatorio_y_avanza
 539  8C73 6F           	ld l,a
 540  8C74 26 00        	ld h,0
 541  8C76 22 45 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 542  8C79
 543  8C79 CD 95 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 544  8C7C              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 545  8C7C              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 546  8C7C              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 547  8C7C
 548  8C7C              ;	Inicia los álbumes de líneas.
 549  8C7C
 550  8C7C CD 66 90     	call Inicia_albumes_de_lineas
 551  8C7F              ;
 552  8C7F CD 76 90     	call Inicia_albumes_de_lineas_Amadeus
 553  8C82 CD 83 90     	call Inicia_albumes_de_disparos
 554  8C85
 555  8C85 CD D7 92     4 call Inicia_Entidades
 556  8C88 CD 3A 93     	call Inicia_Amadeus
 557  8C8B
 558  8C8B              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 559  8C8B              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 560  8C8B              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 561  8C8B
 562  8C8B 11 73 89     	ld de,Amadeus_BOX
 563  8C8E CD 90 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 564  8C91 CD 7D 93     	call Limpiamos_bandeja_DRAW
 565  8C94
 566  8C94              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 567  8C94
 568  8C94 06 3C        	ld b,60
 569  8C96 CD 66 9D     2 call Amadeus_a_izquierda
 570  8C99 10 FB        	djnz 2B
 571  8C9B
 572  8C9B CD 44 90     	call Genera_datos_de_impresion_Amadeus
 573  8C9E
 574  8C9E              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 575  8C9E
 576  8C9E CD 9F 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 577  8CA1
 578  8CA1 CD 23 91     	call Inicia_Shield
 579  8CA4
 580  8CA4 2A 25 8C     6 ld hl,(Scanlines_album_SP)
 581  8CA7 22 1E 8C     	ld (Techo_Scanlines_album),hl
 582  8CAA
 583  8CAA 2A 09 8C     	ld hl,(Album_de_borrado)
 584  8CAD 22 25 8C     	ld (Scanlines_album_SP),hl
 585  8CB0
 586  8CB0 21 00 89     	ld hl,Tabla_de_pintado
 587  8CB3 22 27 8C     	ld (India_SP),hl
 588  8CB6
 589  8CB6 21 2B 8C     	ld hl,Ctrl_3
 590  8CB9 CB C6        	set 0,(hl) 											; Indica Frame completo.
 591  8CBB CB D6        	set 2,(hl)
 592  8CBD CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 593  8CBF
 594  8CBF FB           	ei 													; Ha de apuntar a $5c3a.
 595  8CC0
 596  8CC0 76           	halt
 597  8CC1
 598  8CC1              ; ------------------------------------
 599  8CC1
 600  8CC1              Main
 601  8CC1              ;
 602  8CC1              ; 07/11/24.
 603  8CC1
 604  8CC1              ; Gestión de disparos.
 605  8CC1
 606  8CC1 CD 82 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 607  8CC4 CD 59 9F     	call Motor_de_disparos_entidades
 608  8CC7 CD EE A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 609  8CCA
 610  8CCA              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 611  8CCA              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 612  8CCA              ; Este hecho lo indica el bit2 de (Impacto2).
 613  8CCA
 614  8CCA CD 8B A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 615  8CCD
 616  8CCD              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 617  8CCD
 618  8CCD 21 49 8C     	ld hl,CLOCK_disparos_de_entidades
 619  8CD0 35           	dec (hl)
 620  8CD1 CC C9 8D     	call z,Autoriza_disparo_de_entidades
 621  8CD4
 622  8CD4 2A 45 8C     	ld hl,(Clock_next_entity)
 623  8CD7 ED 4B 78 5C  	ld bc,(FRAMES)
 624  8CDB A7           	and a
 625  8CDC ED 42        	sbc hl,bc
 626  8CDE 20 16        	jr nz,1F
 627  8CE0
 628  8CE0              ; GESTIÓN DE ENTIDADES.
 629  8CE0
 630  8CE0              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 631  8CE0              ; _ (Clock_next_entity) para la siguiente entidad.
 632  8CE0
 633  8CE0              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 634  8CE0              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 635  8CE0              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 636  8CE0
 637  8CE0 21 FD 8B     	ld hl,Numero_parcial_de_entidades
 638  8CE3 46           	ld b,(hl)
 639  8CE4 3A FE 8B     	ld a,(Entidades_en_curso)									; Entidades que hay en pantalla.
 640  8CE7 B8           	cp b
 641  8CE8 28 0C        	jr z,1F
 642  8CEA 30 0A        	jr nc,1F
 643  8CEC
 644  8CEC              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 645  8CEC
 646  8CEC 3C           	inc a
 647  8CED 32 FE 8B     	ld (Entidades_en_curso),a
 648  8CF0
 649  8CF0              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 650  8CF0
 651  8CF0 CD AD 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 652  8CF3 CD C9 8E     	call Define_Clock_next_entity
 653  8CF6
 654  8CF6 3A FE 8B     1 ld a,(Entidades_en_curso)
 655  8CF9 A7           	and a
 656  8CFA CA 74 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 657  8CFD 47           	ld b,a												; No hay entidades que gestionar.
 658  8CFE
 659  8CFE              ; ( Código que ejecutamos con cada entidad: ).
 660  8CFE
 661  8CFE              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 662  8CFE              ;
 663  8CFE              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 664  8CFE
 665  8CFE 21 00 89     	ld hl,Tabla_de_pintado
 666  8D01 22 27 8C     	ld (India_SP),hl
 667  8D04
 668  8D04 21 2B 8C     	ld hl,Ctrl_3
 669  8D07 CB D6        	set 2,(hl)
 670  8D09 CD 57 8E     	call Change
 671  8D0C
 672  8D0C C5           2 push bc 												; Nº de entidades en curso.
 673  8D0D
 674  8D0D CD F0 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 675  8D10 ED 5B 25 8C  	ld de,(Scanlines_album_SP)
 676  8D14
 677  8D14              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 678  8D14
 679  8D14              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 680  8D14              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 681  8D14
 682  8D14 3A 32 8C     	ld a,(Impacto2)
 683  8D17 CB 5F        	bit 3,a
 684  8D19 C4 85 A1     	call nz,Compara_con_coordenadas_de_disparo
 685  8D1C
 686  8D1C 3A BA 8B     	ld a,(Impacto)
 687  8D1F CB 4F        	bit 1,a
 688  8D21 C4 00 92     	call nz,Genera_explosion
 689  8D24 20 31        	jr nz,Gestiona_siguiente_entidad
 690  8D26
 691  8D26 3A BA 8B     	ld a,(Impacto)
 692  8D29 A7           	and a
 693  8D2A 28 0C        	jr z,3F
 694  8D2C
 695  8D2C              ; IMPACTO en entidad por colisión con Amadeus.
 696  8D2C
 697  8D2C              ; 5/7/24
 698  8D2C              ; Nota importante:
 699  8D2C              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 700  8D2C              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 701  8D2C              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 702  8D2C
 703  8D2C 3A 77 89     	ld a,(Impacto_Amadeus)
 704  8D2F A7           	and a
 705  8D30 C4 00 92     	call nz,Genera_explosion
 706  8D33 20 22        	jr nz,Gestiona_siguiente_entidad
 707  8D35
 708  8D35              ; Falsa colisión !!!
 709  8D35
 710  8D35 32 BA 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 711  8D38
 712  8D38              ; -------------------------------------------
 713  8D38
 714  8D38 CD 0D 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 715  8D3B CD 35 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 716  8D3E CD FD 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 717  8D41 CD 00 95     	call Genera_datos_de_impresion
 718  8D44 CD A0 93     	call Decrementa_Contador_de_mov_masticados
 719  8D47
 720  8D47              ; -------------------------------------------
 721  8D47
 722  8D47              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 723  8D47
 724  8D47 2A BB 8B     	ld hl,(Puntero_de_impresion)
 725  8D4A CD D4 94     	call Genera_coordenadas
 726  8D4D
 727  8D4D              ; TODO: Generamos disparo ???
 728  8D4D
 729  8D4D 3A 1D 8C     	ld a,(Permiso_de_disparo_Entidades)
 730  8D50 A7           	and a
 731  8D51 C4 DE 8D     	call nz,Entidad_genera_disparo_si_procede
 732  8D54
 733  8D54 CD 09 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 734  8D57
 735  8D57              Gestiona_siguiente_entidad
 736  8D57
 737  8D57 CD 72 93      	call Store_Restore_cajas
 738  8D5A C1           	pop bc
 739  8D5B 10 AF        	djnz 2B
 740  8D5D
 741  8D5D              ; Hemos gestionado todas las entidades.
 742  8D5D              ; ----- ----- -----
 743  8D5D
 744  8D5D CD 21 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 745  8D60 CD 38 8F     	call Ordena_tabla_de_impresion
 746  8D63 CD 9F 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 747  8D66
 748  8D66 CD DE 8E     	call Borra_diferencia
 749  8D69
 750  8D69 3A 2B 8C     	ld a,(Ctrl_3)
 751  8D6C CB 5F        	bit 3,a
 752  8D6E 20 04        	jr nz,Gestion_de_Amadeus
 753  8D70
 754  8D70 EB           	ex de,hl
 755  8D71 71           	ld (hl),c
 756  8D72 2C           	inc l
 757  8D73 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 758  8D74
 759  8D74              ;! GESTIONA AMADEUS !!!!!!!!!!
 760  8D74
 761  8D74              Gestion_de_Amadeus
 762  8D74
 763  8D74 21 2B 8C     	ld hl,Ctrl_3
 764  8D77 CB 76        	bit 6,(hl)
 765  8D79 28 13        	jr z,Amadeus_vivo
 766  8D7B
 767  8D7B              ; Amadeus ha sido destruido.
 768  8D7B              ; Decrementa (Temp_new_live).
 769  8D7B
 770  8D7B 21 3F 8C     	ld hl,Temp_new_live
 771  8D7E 35           	dec (hl)
 772  8D7F 20 26        	jr nz,End_frame
 773  8D81
 774  8D81              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 775  8D81
 776  8D81 21 58 8C     	ld hl,Lives
 777  8D84 35           	dec (hl)
 778  8D85
 779  8D85              ;! Fin del juego
 780  8D85
 781  8D85 F3           	di
 782  8D86 28 FE        	jr z,$
 783  8D88 FB           	ei
 784  8D89
 785  8D89              ; Nueva nave.
 786  8D89
 787  8D89 CD FB 8D     	call Reinicia_Amadeus
 788  8D8C 18 19        	jr End_frame
 789  8D8E
 790  8D8E              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 791  8D8E
 792  8D8E              Amadeus_vivo
 793  8D8E
 794  8D8E 3A 77 89     	ld a,(Impacto_Amadeus)
 795  8D91 A7           	and a
 796  8D92 C4 30 92     	call nz, Genera_explosion_Amadeus
 797  8D95 20 10        	jr nz, End_frame
 798  8D97
 799  8D97 CD DD 91     	call Teclado
 800  8D9A 21 2B 8C     	ld hl,Ctrl_3
 801  8D9D
 802  8D9D CB 6E        	bit 5,(hl)
 803  8D9F 28 06        	jr z,End_frame
 804  8DA1
 805  8DA1              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 806  8DA1
 807  8DA1 CD 72 8E     	call Change_Amadeus
 808  8DA4 CD 44 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 809  8DA7
 810  8DA7              End_frame
 811  8DA7
 812  8DA7              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 813  8DA7              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 814  8DA7
 815  8DA7 CD B0 A0     	call Genera_datos_de_impresion_disparos_Entidades
 816  8DAA CD 74 A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 817  8DAD CD CA A1     	call Calcula_bytes_pintado_disparos
 818  8DB0 CD D7 A1     	call Limpia_album_de_pintado_disparos_entidades
 819  8DB3
 820  8DB3              ; ------------ ------------- --------------
 821  8DB3
 822  8DB3 2A 09 8C     	ld hl,(Album_de_borrado)
 823  8DB6 22 25 8C     	ld (Scanlines_album_SP),hl
 824  8DB9
 825  8DB9 21 2B 8C     	ld hl,Ctrl_3
 826  8DBC CB C6        	set 0,(hl) 											; Indica Frame completo.
 827  8DBE CB 9E        	res 3,(hl)
 828  8DC0 CB A6        	res 4,(hl)
 829  8DC2
 830  8DC2 AF           	xor a
 831  8DC3 D3 FE        	out ($fe),a
 832  8DC5
 833  8DC5 76           	halt
 834  8DC6
 835  8DC6              ; ----------------------------------------
 836  8DC6
 837  8DC6              ;	ld a,(Ctrl_1) 										; Existe Loop?
 838  8DC6              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 839  8DC6 CA C1 8C     	jp z,Main
 840  8DC9
 841  8DC9              ;------------------------------------------
 842  8DC9              ;
 843  8DC9              ;	07/11/24
 844  8DC9
 845  8DC9              Autoriza_disparo_de_entidades
 846  8DC9
 847  8DC9 3E 01        	ld a,1
 848  8DCB 32 1D 8C     	ld (Permiso_de_disparo_Entidades),a
 849  8DCE
 850  8DCE 3A 48 8C     	ld a,(Repone_CLOCK_disparos)
 851  8DD1 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 852  8DD3 38 02        	jr c,1F
 853  8DD5
 854  8DD5              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 855  8DD5              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 856  8DD5              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 857  8DD5
 858  8DD5 D6 03        	sub 3
 859  8DD7
 860  8DD7 32 48 8C     1 ld (Repone_CLOCK_disparos),a
 861  8DDA 32 49 8C     	ld (CLOCK_disparos_de_entidades),a
 862  8DDD
 863  8DDD C9           	ret
 864  8DDE
 865  8DDE              ;------------------------------------------
 866  8DDE              ;
 867  8DDE              ;	14/09/24
 868  8DDE              ;
 869  8DDE              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 870  8DDE
 871  8DDE              Entidad_genera_disparo_si_procede
 872  8DDE
 873  8DDE 2A 42 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 874  8DE1 CB 06        	rlc (hl)
 875  8DE3
 876  8DE3 DC 00 A1     	call c,Genera_disparo_de_entidad_maldosa
 877  8DE6
 878  8DE6 C9           	ret
 879  8DE7
 880  8DE7              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 881  8DE7              ;
 882  8DE7              ;	30/09/24
 883  8DE7
 884  8DE7              Actuaiza_sp_de_disparos_de_entidades
 885  8DE7
 886  8DE7 2A 42 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 887  8DEA 23           	inc hl
 888  8DEB 22 42 8C     	ld (Puntero_num_aleatorios_disparos),hl
 889  8DEE
 890  8DEE 11 FD 88     	ld de,Numeros_aleatorios+7
 891  8DF1 7B           	ld a,e
 892  8DF2 95           	sub l
 893  8DF3 C0           	ret nz
 894  8DF4
 895  8DF4 21 F6 88     1 ld hl,Numeros_aleatorios
 896  8DF7 22 42 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 897  8DFA C9           	ret
 898  8DFB
 899  8DFB              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 900  8DFB              ;
 901  8DFB              ;	24/07/24
 902  8DFB
 903  8DFB              Reinicia_Amadeus
 904  8DFB
 905  8DFB              ;	Reinicia posición y estado.
 906  8DFB
 907  8DFB 21 CF 50     	ld hl,$50cf
 908  8DFE 22 78 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 909  8E01 21 CC DC     	ld hl,$dccc
 910  8E04 22 7A 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 911  8E07 21 3D 00     	ld hl,$003d
 912  8E0A 22 7C 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 913  8E0D
 914  8E0D              ;	limpiamos el álbum de borrado.
 915  8E0D
 916  8E0D 2A 0D 8C     	ld hl,(Album_de_borrado_Amadeus)
 917  8E10
 918  8E10 AF           	xor a
 919  8E11 77           	ld (hl),a
 920  8E12
 921  8E12 E5           	push hl
 922  8E13 D1           	pop de
 923  8E14 13           	inc de
 924  8E15
 925  8E15 01 23 00     	ld bc,35
 926  8E18 ED B0        	ldir
 927  8E1A
 928  8E1A CD 44 90     	call Genera_datos_de_impresion_Amadeus
 929  8E1D
 930  8E1D              ;	Reinicia temporizaciones.
 931  8E1D
 932  8E1D CD 23 91     	call Inicia_Shield
 933  8E20
 934  8E20 3E 5A        	ld a,90
 935  8E22 32 55 8C     	ld (Shield),a
 936  8E25
 937  8E25 3E 64        	ld a,100
 938  8E27 32 3F 8C     	ld (Temp_new_live),a
 939  8E2A
 940  8E2A              ; 	Restauramos el FLAG: Amadeus vivo.
 941  8E2A
 942  8E2A 21 2B 8C     	ld hl,Ctrl_3
 943  8E2D CB B6        	res 6,(hl)
 944  8E2F
 945  8E2F              ;	Fuerza la impresión de la nave en el siguiente frame.
 946  8E2F
 947  8E2F 21 2B 8C      	ld hl,Ctrl_3
 948  8E32 CB EE        	set 5,(hl)
 949  8E34
 950  8E34 C9           	ret
 951  8E35
 952  8E35              ; --------------------------------------------------------------------------------------------------------------
 953  8E35              ;
 954  8E35              ;	7/11/24
 955  8E35
 956  8E35              Ajusta_velocidad_entidad
 957  8E35
 958  8E35 3A C1 8B     	ld a,(Velocidad)
 959  8E38 A7           	and a
 960  8E39 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 961  8E3A              	;									  _una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 962  8E3A              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 963  8E3A
 964  8E3A
 965  8E3A              ; Incrementa (Contador_de_vueltas)x2.
 966  8E3A              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 967  8E3A
 968  8E3A              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 969  8E3A              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 970  8E3A              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 971  8E3A              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 972  8E3A              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 973  8E3A
 974  8E3A
 975  8E3A CB 27        	sla a 								;	Multiplica x2 (Velocidad) en cada FRAME.
 976  8E3C 32 C1 8B     	ld (Velocidad),a
 977  8E3F E6 10        	and $10
 978  8E41 C8           	ret z
 979  8E42
 980  8E42              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 981  8E42
 982  8E42 3A B9 8B     	ld a,(Contador_de_vueltas)
 983  8E45 CB 2F        	sra a
 984  8E47 CB 2F        	sra a
 985  8E49 32 C1 8B     	ld (Velocidad),a
 986  8E4C
 987  8E4C 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 988  8E4F 23           	inc hl
 989  8E50 23           	inc hl
 990  8E51 23           	inc hl
 991  8E52 23           	inc hl
 992  8E53 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 993  8E56
 994  8E56 C9           	ret
 995  8E57
 996  8E57              ; --------------------------------------------------------------------------------------------------------------
 997  8E57              ;
 998  8E57              ;	25/08/24
 999  8E57
1000  8E57              Change
1001  8E57
1002  8E57 3A 22 8C     	ld a,(Switch)
1003  8E5A EE 01        	xor 1
1004  8E5C 32 22 8C     	ld (Switch),a
1005  8E5F 2A 07 8C     	ld hl,(Album_de_pintado)
1006  8E62 ED 5B 09 8C  	ld de,(Album_de_borrado)
1007  8E66 EB           	ex de,hl
1008  8E67 22 07 8C     	ld (Album_de_pintado),hl
1009  8E6A 22 25 8C     	ld (Scanlines_album_SP),hl
1010  8E6D ED 53 09 8C  	ld (Album_de_borrado),de
1011  8E71 C9           	ret
1012  8E72
1013  8E72              Change_Amadeus
1014  8E72
1015  8E72 2A 0B 8C     	ld hl,(Album_de_pintado_Amadeus)
1016  8E75 ED 5B 0D 8C  	ld de,(Album_de_borrado_Amadeus)
1017  8E79 EB           	ex de,hl
1018  8E7A 22 0B 8C     	ld (Album_de_pintado_Amadeus),hl
1019  8E7D ED 53 0D 8C  	ld (Album_de_borrado_Amadeus),de
1020  8E81 C9           	ret
1021  8E82
1022  8E82              Change_Disparos
1023  8E82
1024  8E82              ; Álbumes de Amadeus.
1025  8E82
1026  8E82 2A 0F 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1027  8E85 ED 5B 11 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1028  8E89 EB           	ex de,hl
1029  8E8A 22 0F 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1030  8E8D ED 53 11 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1031  8E91 CD BF A1     	call Limpia_album_de_pintado_disparos_Amadeus
1032  8E94
1033  8E94              ; Álbumes de entidades.
1034  8E94
1035  8E94 2A 13 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1036  8E97 ED 5B 15 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1037  8E9B EB           	ex de,hl
1038  8E9C 22 13 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1039  8E9F ED 53 15 8C  	ld (Album_de_borrado_disparos_Entidades),de
1040  8EA3 22 17 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1041  8EA6
1042  8EA6 3A 19 8C     	ld a,(Num_de_bytes_album_de_disparos)
1043  8EA9 32 1A 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1044  8EAC
1045  8EAC C9           	ret
1046  8EAD
1047  8EAD              ; ------------------------------------
1048  8EAD              ;
1049  8EAD              ; 1/05/24
1050  8EAD
1051  8EAD              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1052  8EAD              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1053  8EAD
1054  8EAD              ;	DESTRUYE: HL,DE,A
1055  8EAD              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1056  8EAD
1057  8EAD              ;	Variables implicadas: (RND_SP).
1058  8EAD
1059  8EAD              Extrae_numero_aleatorio_y_avanza
1060  8EAD
1061  8EAD 21 00 89     	ld hl,Tabla_de_pintado
1062  8EB0 EB           	ex de,hl
1063  8EB1 2A 40 8C     	ld hl,(RND_SP)
1064  8EB4 EB           	ex de,hl
1065  8EB5 A7           	and a
1066  8EB6 ED 52        	sbc hl,de
1067  8EB8
1068  8EB8 2A 40 8C     	ld hl,(RND_SP)
1069  8EBB 20 06        	jr nz,1F
1070  8EBD
1071  8EBD              ; Sitúa HL al principio de la tabla de nº aleatorios.
1072  8EBD
1073  8EBD 21 F6 88     	ld hl,Numeros_aleatorios
1074  8EC0 22 40 8C     	ld (RND_SP),HL
1075  8EC3
1076  8EC3              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1077  8EC3
1078  8EC3 7E           1 ld a,(hl)
1079  8EC4 23           	inc hl
1080  8EC5 22 40 8C     	ld (RND_SP),hl
1081  8EC8 C9           	ret
1082  8EC9
1083  8EC9              ; ------------------------------------
1084  8EC9              ;
1085  8EC9              ; 1/05/24
1086  8EC9
1087  8EC9              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1088  8EC9              ; (1 a 4 segundos).
1089  8EC9              ; Actualizamos (Clock_next_entity) con A.
1090  8EC9
1091  8EC9              ;	DESTRUYE: A y B.
1092  8EC9              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1093  8EC9              ;			 Actualiza (Clock_next_entity) con A.
1094  8EC9
1095  8EC9              ;	Variables implicadas: (Clock_next_entity).
1096  8EC9
1097  8EC9              ; Notas:
1098  8EC9
1099  8EC9              ; 	$32 1 seg.
1100  8EC9              ; 	$64 2 seg.
1101  8EC9              ; 	$96 3 seg.
1102  8EC9              ; 	$c8 4 seg.
1103  8EC9              ; 	$fa 5 seg.
1104  8EC9
1105  8EC9              ; $ffff 1310,7 seg, 22 minutos.
1106  8EC9
1107  8EC9              ;	$0100  5 seg. aproximadamente.
1108  8EC9              ;	$0200 10 seg. aproximadamente.
1109  8EC9              ;	$0300 15 seg. aproximadamente.
1110  8EC9              ;	$0400 20 seg. aproximadamente.
1111  8EC9              ;	$0500 25 seg. aproximadamente.
1112  8EC9              ;	$0600 30 seg. aproximadamente.
1113  8EC9
1114  8EC9              Define_Clock_next_entity
1115  8EC9
1116  8EC9 FE 34        	cp $34
1117  8ECB 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1118  8ECD
1119  8ECD              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1120  8ECD
1121  8ECD 4F           3 ld c,a
1122  8ECE 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1123  8ED0 2A 78 5C     	ld hl,(FRAMES)
1124  8ED3 A7           	and a
1125  8ED4 ED 4A        	adc hl,bc
1126  8ED6 22 45 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1127  8ED9 C9           	ret
1128  8EDA
1129  8EDA 3E 34        1 ld a,$34
1130  8EDC 18 EF        	jr 3B
1131  8EDE
1132  8EDE              ; ------------------------------------
1133  8EDE              ;
1134  8EDE              ; 18/03/24
1135  8EDE
1136  8EDE              Borra_diferencia
1137  8EDE
1138  8EDE ED 4B 25 8C  	ld bc,(Scanlines_album_SP)
1139  8EE2
1140  8EE2 3A 22 8C     	ld a,(Switch)
1141  8EE5 A7           	and a
1142  8EE6 28 08        	jr z,2F
1143  8EE8
1144  8EE8 2A 20 8C     	ld hl,(Techo_Scanlines_album_2)
1145  8EEB 11 20 8C     	ld de,Techo_Scanlines_album_2
1146  8EEE 18 06        	jr 3F
1147  8EF0
1148  8EF0 2A 1E 8C     2 ld hl,(Techo_Scanlines_album)
1149  8EF3 11 1E 8C     	ld de,Techo_Scanlines_album
1150  8EF6
1151  8EF6              ; Diferencia.
1152  8EF6
1153  8EF6 ED 42        3 sbc hl,bc
1154  8EF8
1155  8EF8 C8           	ret z
1156  8EF9 D8           	ret c
1157  8EFA
1158  8EFA              ; Nuevo techo, (más bajo que el anterior).
1159  8EFA              ; Fijamos nuevo techo y borramos bytes sobrantes.
1160  8EFA
1161  8EFA EB           	ex de,hl
1162  8EFB
1163  8EFB 71           	ld (hl),c
1164  8EFC 2C           	inc l
1165  8EFD 70           	ld (hl),b
1166  8EFE
1167  8EFE AF           	xor a
1168  8EFF 43           	ld b,e
1169  8F00
1170  8F00 2A 25 8C     	ld hl,(Scanlines_album_SP)
1171  8F03
1172  8F03 77           1 ld (hl),a
1173  8F04 23           	inc hl
1174  8F05 10 FC        	djnz 1B
1175  8F07
1176  8F07              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1177  8F07
1178  8F07 21 2B 8C     	ld hl,Ctrl_3
1179  8F0A CB DE        	set 3,(hl)
1180  8F0C
1181  8F0C C9           	ret
1182  8F0D
1183  8F0D              ; --------------------------------------------------------------------------------------------------------------
1184  8F0D              ;
1185  8F0D              ;	26/3/24
1186  8F0D
1187  8F0D              Recauda_informacion_de_entidad_en_curso
1188  8F0D
1189  8F0D              ; Almacena la Coordenada Y de la entidad en curso.
1190  8F0D
1191  8F0D              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1192  8F0D
1193  8F0D 3A B8 8B     	ld a,(Coordenada_y)
1194  8F10 2A 27 8C     	ld hl,(India_SP)
1195  8F13 77           	ld (hl),a
1196  8F14 2C           	inc l
1197  8F15
1198  8F15              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1199  8F15
1200  8F15 ED 5B 25 8C  	ld de,(Scanlines_album_SP)
1201  8F19
1202  8F19 73           	ld (hl),e
1203  8F1A 2C           	inc l
1204  8F1B 72           	ld (hl),d
1205  8F1C 2C           	inc l
1206  8F1D
1207  8F1D 22 27 8C     	ld (India_SP),hl
1208  8F20
1209  8F20 C9           	ret
1210  8F21
1211  8F21              ; --------------------------------------------------------------------------------------------------------------
1212  8F21              ;
1213  8F21              ;	27/03/24
1214  8F21              ;
1215  8F21
1216  8F21              Inicializa_India_y_limpia_Tabla_de_impresion
1217  8F21
1218  8F21 2A 27 8C     	ld hl,(India_SP)
1219  8F24 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1220  8F27
1221  8F27 79           	ld a,c
1222  8F28 95           	sub l
1223  8F29 28 06        	jr z,2F
1224  8F2B 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1225  8F2C              ;														; _ y pasamos a inicializar (India_SP).
1226  8F2C AF           	xor a
1227  8F2D
1228  8F2D 77           1 ld (hl),a
1229  8F2E 2C           	inc l
1230  8F2F 10 FC        	djnz 1B												; Limpia Tabla.
1231  8F31
1232  8F31 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1233  8F34 22 27 8C     	ld (India_SP),hl
1234  8F37
1235  8F37 C9           	ret
1236  8F38
1237  8F38              ; --------------------------------------------------------------------------------------------------------------
1238  8F38              ;
1239  8F38              ;	31/3/24
1240  8F38
1241  8F38              Ordena_tabla_de_impresion
1242  8F38
1243  8F38              ; 5794 T/states.
1244  8F38              ; 6278 T/states.
1245  8F38              ; 5310 T/states.
1246  8F38
1247  8F38              ; Inicializamos punteros (India_SP) e (India_2_SP).
1248  8F38              ; Inicializamos contador de comparaciones, [C].
1249  8F38              ; Cargamos los registros A y B para efectuar comparación.
1250  8F38
1251  8F38 FD 2E 00     	ld iyl,0
1252  8F3B
1253  8F3B 3A FE 8B     	ld a,(Entidades_en_curso)
1254  8F3E FE 04        	cp 4 	;	4
1255  8F40 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1256  8F41
1257  8F41 3D           	dec a
1258  8F42 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1259  8F43 51           	ld d,c 										; Copia de respaldo.
1260  8F44
1261  8F44 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1262  8F45
1263  8F45 21 03 89     	ld hl,Tabla_de_pintado+3
1264  8F48 46           	ld b,(hl)
1265  8F49 22 29 8C     	ld (India_2_SP),hl
1266  8F4C
1267  8F4C B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1268  8F4D DC 75 8F     	call c, Avanza_India_2_SP
1269  8F50 CC 75 8F     	call z, Avanza_India_2_SP
1270  8F53
1271  8F53 FD 2D        	dec iyl
1272  8F55 28 18        	jr z,2F
1273  8F57
1274  8F57
1275  8F57              ; --------------------------------------------------------------------------------------------------------------
1276  8F57              ;
1277  8F57              ;	7/4/24
1278  8F57
1279  8F57              Trueque
1280  8F57
1281  8F57              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1282  8F57              ;  			A contiene en nº de fila de (India_SP).
1283  8F57              ;			HL contiene (India_2_SP).
1284  8F57
1285  8F57 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1286  8F58 E5           	push hl										; Preservo (India_2_SP).
1287  8F59
1288  8F59 ED 5B 27 8C  	ld de,(India_SP)
1289  8F5D EB           	ex de,hl
1290  8F5E 70           	ld (hl),b
1291  8F5F 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1292  8F60
1293  8F60 CD A1 8F     	call Intercambia_1_byte
1294  8F63 CD A1 8F     	call Intercambia_1_byte
1295  8F66
1296  8F66
1297  8F66              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1298  8F66              ; Recuperamos (India_2_SP) en HL.
1299  8F66
1300  8F66 2A 27 8C     	ld hl,(India_SP)
1301  8F69 7E           	ld a,(hl)
1302  8F6A
1303  8F6A E1           	pop hl
1304  8F6B D1           	pop de
1305  8F6C
1306  8F6C              ; --------------------------------------------------------------------------------------------------------------
1307  8F6C
1308  8F6C CD 75 8F     	call Avanza_India_2_SP
1309  8F6F
1310  8F6F 14           2 inc d
1311  8F70 15           	dec d
1312  8F71 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1313  8F72 18 D8        	jr 1B
1314  8F74
1315  8F74 C9           	ret
1316  8F75
1317  8F75              ; ----- ----- ----- ----- -----
1318  8F75
1319  8F75              Avanza_India_2_SP
1320  8F75
1321  8F75 0D           	dec c
1322  8F76 28 0A        	jr z,Avanza_punteros_indios
1323  8F78
1324  8F78 FD 2C        	inc iyl
1325  8F7A
1326  8F7A 2C           	inc l
1327  8F7B 2C           	inc l
1328  8F7C 2C           	inc l
1329  8F7D
1330  8F7D 46           	ld b,(hl)
1331  8F7E 22 29 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1332  8F81
1333  8F81 C9           	ret
1334  8F82
1335  8F82              ; ----- ----- ----- ----- -----
1336  8F82
1337  8F82              Avanza_punteros_indios
1338  8F82
1339  8F82 15           	dec d
1340  8F83 28 15        	jr z,Prepara_salida
1341  8F85
1342  8F85 4A           	ld c,d
1343  8F86
1344  8F86 2A 27 8C     	ld hl,(India_SP)
1345  8F89 2C           	inc l
1346  8F8A 2C           	inc l
1347  8F8B 2C           	inc l
1348  8F8C 7E           	ld a,(hl)
1349  8F8D 22 27 8C     	ld (India_SP),hl
1350  8F90
1351  8F90 2C           	inc l
1352  8F91 2C           	inc l
1353  8F92 2C           	inc l
1354  8F93 46           	ld b,(hl)
1355  8F94 22 29 8C     	ld (India_2_SP),hl
1356  8F97
1357  8F97 FD 2C        	inc iyl
1358  8F99
1359  8F99 C9           	ret
1360  8F9A
1361  8F9A              Prepara_salida
1362  8F9A
1363  8F9A 21 00 89     	ld hl,Tabla_de_pintado
1364  8F9D 22 27 8C     	ld (India_SP),hl
1365  8FA0 C9           	ret
1366  8FA1
1367  8FA1
1368  8FA1 2C           Intercambia_1_byte inc l
1369  8FA2 1C           	inc e
1370  8FA3 46           	ld b,(hl)
1371  8FA4 1A           	ld a,(de)
1372  8FA5 EB           	ex de,hl
1373  8FA6 70           	ld (hl),b
1374  8FA7 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1375  8FA8 C9           	ret
1376  8FA9
1377  8FA9              ; -----------------------------------------------------------------------------------
1378  8FA9              ;
1379  8FA9              ;	20/01/24
1380  8FA9              ;
1381  8FA9              ;
1382  8FA9
1383  8FA9              Construye_movimientos_masticados_entidad
1384  8FA9
1385  8FA9 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1386  8FAC E5           	push hl
1387  8FAD CD F0 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1388  8FB0              ;															; _ el (Contador_de_mov_masticados).
1389  8FB0 CD BB 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1390  8FB3              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1391  8FB3 CD EC 99     	call Recompone_posicion_inicio
1392  8FB6
1393  8FB6 CD 1C 97     1 call Draw
1394  8FB9 CD D5 8F     	call Guarda_movimiento_masticado
1395  8FBC
1396  8FBC CD 99 9D     	call Movimiento
1397  8FBF
1398  8FBF 3A 2B 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1399  8FC2 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1400  8FC4 28 F0        	jr z,1B
1401  8FC6
1402  8FC6              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1403  8FC6              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1404  8FC6
1405  8FC6 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1406  8FC7 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1407  8FCA
1408  8FCA              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1409  8FCA
1410  8FCA CD FD 9E     	call Situa_en_contador_general_de_mov_masticados
1411  8FCD
1412  8FCD              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1413  8FCD              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1414  8FCD
1415  8FCD ED 4B BF 8B  	ld bc,(Contador_de_mov_masticados)
1416  8FD1
1417  8FD1 71           	ld (hl),c
1418  8FD2 23           	inc hl
1419  8FD3 70           	ld (hl),b
1420  8FD4
1421  8FD4 C9           	ret
1422  8FD5
1423  8FD5              ; -----------------------------------------------------------------------------------
1424  8FD5              ;
1425  8FD5              ;	28/12/23
1426  8FD5              ;
1427  8FD5              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1428  8FD5              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1429  8FD5
1430  8FD5              Guarda_movimiento_masticado
1431  8FD5
1432  8FD5 ED 73 03 8C  	ld (Stack),sp
1433  8FD9 ED 7B BD 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1434  8FDD
1435  8FDD DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1436  8FDF FD E5            push iy 												; Pushea Puntero_objeto.
1437  8FE1
1438  8FE1 ED 7B 03 8C      ld sp,(Stack)
1439  8FE5
1440  8FE5 2A BF 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1441  8FE8 23           	inc hl
1442  8FE9 22 BF 8B     	ld (Contador_de_mov_masticados),hl
1443  8FEC
1444  8FEC CD F0 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1445  8FEF              ;															; _ el (Contador_de_mov_masticados).
1446  8FEF C9               ret
1447  8FF0
1448  8FF0              ; --------------------------------------------------------------------------------------------------------------
1449  8FF0              ;
1450  8FF0              ;	12/1/24
1451  8FF0              ;
1452  8FF0              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1453  8FF0
1454  8FF0              Actualiza_Puntero_de_almacen_de_mov_masticados
1455  8FF0
1456  8FF0 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1457  8FF3 01 04 00     	ld bc,4
1458  8FF6 A7           	and a
1459  8FF7 ED 4A        	adc hl,bc
1460  8FF9 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1461  8FFC C9           	ret
1462  8FFD
1463  8FFD              ; --------------------------------------------------------------------------------------------------------------
1464  8FFD              ;
1465  8FFD              ;	24/03/24
1466  8FFD              ;
1467  8FFD              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1468  8FFD              ;
1469  8FFD              ;	IX contiene el puntero de impresión.
1470  8FFD              ;	DE contiene (Puntero_objeto).
1471  8FFD
1472  8FFD
1473  8FFD              Cargamos_registros_con_mov_masticado
1474  8FFD
1475  8FFD ED 73 03 8C  	ld (Stack),sp
1476  9001 ED 7B BD 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1477  9005
1478  9005 D1           	pop de 															; DE contiene Puntero_objeto
1479  9006 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1480  9008
1481  9008 ED 73 BD 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1482  900C ED 7B 03 8C  	ld sp,(Stack)
1483  9010
1484  9010 7B           	ld a,e
1485  9011 82           	add d															; Comprueba si ya no hay datos en el almacén.
1486  9012
1487  9012 CC A8 93     	call z,Reinicia_entidad_maliciosa
1488  9015
1489  9015 C9           	ret
1490  9016
1491  9016              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1492  9016              ;
1493  9016              ;	22/7/24
1494  9016
1495  9016              Cargamos_registros_con_explosion
1496  9016
1497  9016
1498  9016 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1499  9019 CD B5 90     	call Extrae_address
1500  901C
1501  901C 5D           	ld e,l
1502  901D 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1503  901E
1504  901E DD 2A BB 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1505  9022
1506  9022 C9           	ret
1507  9023
1508  9023
1509  9023              Cargamos_registros_con_explosion_Amadeus
1510  9023
1511  9023 2A 7A 89     	ld hl,(Pamm_Amadeus)
1512  9026 CD B5 90     	call Extrae_address
1513  9029
1514  9029 5D           	ld e,l
1515  902A 54           	ld d,h
1516  902B
1517  902B DD 2A 78 89  	ld ix,(p.imp.amadeus)
1518  902F
1519  902F C9           	ret
1520  9030
1521  9030              ; --------------------------------------------------------------------------------------------------------------
1522  9030              ;
1523  9030              ;	17/06/24
1524  9030              ;
1525  9030              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1526  9030              ;
1527  9030              ;	IX contiene el puntero de impresión.
1528  9030              ;	DE contiene (Puntero_objeto).
1529  9030
1530  9030
1531  9030              Cargamos_registros_con_mov_masticado_Amadeus
1532  9030
1533  9030 ED 73 03 8C  	ld (Stack),sp
1534  9034 ED 7B 7A 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1535  9038 D1           	pop de 															; DE contiene Puntero_objeto
1536  9039 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1537  903B DD 22 78 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1538  903F ED 7B 03 8C  	ld sp,(Stack)
1539  9043 C9           	ret
1540  9044
1541  9044              ; ---------------------------------------------------------------------------------------------------------------------
1542  9044              ;
1543  9044              ;	18/6/24
1544  9044              ;
1545  9044              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1546  9044
1547  9044              Genera_datos_de_impresion_Amadeus
1548  9044
1549  9044 3A 77 89     	ld a,(Impacto_Amadeus)
1550  9047 A7           	and a
1551  9048 20 03        	jr nz,1F
1552  904A
1553  904A              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1554  904A              ; _apuntando a la correspondiente explosión.
1555  904A
1556  904A CD 30 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1557  904D
1558  904D DD 7D        1 ld a,ixl
1559  904F E6 1F        	and $1f
1560  9051 32 74 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1561  9054
1562  9054 2A 25 8C     	ld hl,(Scanlines_album_SP)
1563  9057 E5           	push hl
1564  9058
1565  9058 2A 0B 8C     	ld hl,(Album_de_pintado_Amadeus)
1566  905B 22 25 8C     	ld (Scanlines_album_SP),hl
1567  905E
1568  905E CD 00 95     	call Genera_datos_de_impresion
1569  9061
1570  9061 E1           	pop hl
1571  9062 22 25 8C     	ld (Scanlines_album_SP),hl
1572  9065
1573  9065 C9           	ret
1574  9066
1575  9066              ; ---------------------------------------------------------------------------------------------------------------------
1576  9066              ;
1577  9066              ;	13/03/24
1578  9066              ;
1579  9066              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1580  9066
1581  9066              Inicia_albumes_de_lineas
1582  9066
1583  9066 21 00 80     	ld hl,Scanlines_album
1584  9069 22 07 8C     	ld (Album_de_pintado),hl
1585  906C 22 25 8C     	ld (Scanlines_album_SP),hl
1586  906F
1587  906F 21 1A 81     	ld hl,Scanlines_album_2
1588  9072 22 09 8C     	ld (Album_de_borrado),hl
1589  9075
1590  9075 C9           	ret
1591  9076
1592  9076              Inicia_albumes_de_lineas_Amadeus
1593  9076
1594  9076 21 34 82     	ld hl,Amadeus_scanlines_album
1595  9079 22 0B 8C     	ld (Album_de_pintado_Amadeus),hl
1596  907C 21 58 82     	ld hl,Amadeus_scanlines_album_2
1597  907F 22 0D 8C     	ld (Album_de_borrado_Amadeus),hl
1598  9082
1599  9082 C9           	ret
1600  9083
1601  9083              Inicia_albumes_de_disparos
1602  9083
1603  9083 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1604  9086 22 0F 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1605  9089 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1606  908C 22 11 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1607  908F
1608  908F 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1609  9092 22 13 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1610  9095 22 17 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1611  9098
1612  9098 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1613  909B 22 15 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1614  909E
1615  909E C9           	ret
1616  909F
1617  909F              ; ---------------------------------------------------------------------------------------------------------------------
1618  909F              ;
1619  909F              ; 8/1/23
1620  909F              ;
1621  909F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1622  909F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1623  909F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1624  909F
1625  909F              ; Destruye HL y DE !!!!!
1626  909F
1627  909F              Inicia_punteros_de_cajas
1628  909F
1629  909F 21 61 89     	ld hl,Indice_de_cajas_de_entidades
1630  90A2 CD B5 90         call Extrae_address
1631  90A5 22 F6 8B         ld (Puntero_store_caja),hl
1632  90A8 21 63 89     	ld hl,Indice_de_cajas_de_entidades+2
1633  90AB 22 FA 8B     	ld (Indice_restore_caja),hl
1634  90AE CD B5 90     	call Extrae_address
1635  90B1 22 F8 8B     	ld (Puntero_restore_caja),hl
1636  90B4 C9               ret
1637  90B5
1638  90B5              ; *************************************************************************************************************************************************************
1639  90B5
1640  90B5              ;
1641  90B5              ; 20/10/22
1642  90B5              ;
1643  90B5              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1644  90B5              ;
1645  90B5              ; Destruye el puntero y DE !!!!!
1646  90B5
1647  90B5 5E           Extrae_address ld e,(hl)
1648  90B6 23           	inc hl
1649  90B7 56           	ld d,(hl)
1650  90B8 2B           	dec hl
1651  90B9 EB           	ex de,hl
1652  90BA C9           	ret
1653  90BB
1654  90BB              ; *************************************************************************************************************************************************************
1655  90BB              ;
1656  90BB              ;	20/1/24
1657  90BB              ;
1658  90BB              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1659  90BB              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1660  90BB              ;
1661  90BB              ;   Destruye HL y BC !!!!!,
1662  90BB              ;
1663  90BB              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1664  90BB              ;					"0" ..... Izquierda.
1665  90BB
1666  90BB              Inicia_Puntero_objeto
1667  90BB
1668  90BB 3A D5 8B     	ld a,(Cuad_objeto)
1669  90BE E6 01        	and 1
1670  90C0 F5           	push af
1671  90C1 CC DD 90     	call z,Inicia_puntero_objeto_izq
1672  90C4 F1           	pop af
1673  90C5 C8           	ret z
1674  90C6 CD CA 90     	call Inicia_puntero_objeto_der
1675  90C9 C9           	ret
1676  90CA
1677  90CA              ; Arrancamos desde la parte izquierda de la pantalla.
1678  90CA              ; Iniciamos (Indice_Sprite_der).
1679  90CA
1680  90CA 2A CB 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1681  90CD 22 CF 8B     	ld (Puntero_DESPLZ_der),hl
1682  90D0 CD B5 90     	call Extrae_address
1683  90D3 22 C8 8B     	ld (Puntero_objeto),hl
1684  90D6
1685  90D6 2A CD 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1686  90D9 22 D1 8B     	ld (Puntero_DESPLZ_izq),hl
1687  90DC C9           	ret
1688  90DD
1689  90DD              ; Arrancamos desde la parte derecha de la pantalla.
1690  90DD              ; Iniciamos (Indice_Sprite_izq).
1691  90DD
1692  90DD 2A CD 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1693  90E0 22 D1 8B     	ld (Puntero_DESPLZ_izq),hl
1694  90E3 CD B5 90     	call Extrae_address
1695  90E6 22 C8 8B     	ld (Puntero_objeto),hl
1696  90E9
1697  90E9 2A CB 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1698  90EC 22 CF 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1699  90EF C9           	ret
1700  90F0
1701  90F0              ; **************************************************************************************************
1702  90F0              ;
1703  90F0              ;	06/07/24
1704  90F0              ;
1705  90F0              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1706  90F0
1707  90F0              Restore_entidad
1708  90F0
1709  90F0 2A F6 8B     	ld hl,(Puntero_store_caja)
1710  90F3 7E           	ld a,(hl)
1711  90F4 A7           	and a
1712  90F5 CC 03 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1713  90F8 28 F6        	jr z,Restore_entidad
1714  90FA
1715  90FA 11 B6 8B     	ld de,Bandeja_DRAW
1716  90FD 01 0C 00     	ld bc,12
1717  9100 ED B0        	ldir
1718  9102 C9           	ret
1719  9103
1720  9103              ; **************************************************************************************************
1721  9103              ;
1722  9103              ;	08/05/23
1723  9103              ;
1724  9103              ;	Incrementamos los dos punteros de entidades. (+1).
1725  9103
1726  9103              Incrementa_punteros_de_cajas
1727  9103
1728  9103 2A F8 8B     	ld hl,(Puntero_restore_caja)
1729  9106 22 F6 8B     	ld (Puntero_store_caja),hl
1730  9109 2A FA 8B     	ld hl,(Indice_restore_caja)
1731  910C 23           	inc hl
1732  910D 23           	inc hl
1733  910E 22 FA 8B     	ld (Indice_restore_caja),hl
1734  9111 CD B5 90         call Extrae_address
1735  9114 22 F8 8B         ld (Puntero_restore_caja),hl
1736  9117 C9               ret
1737  9118
1738  9118              ; -----------------------------------------------------------
1739  9118
1740  9118              ; Teclado.
1741  9118
1742  9118 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1743  911A DB FE        	in a,($fe)
1744  911C E6 01        	and $01
1745  911E 28 02        	jr z,1f
1746  9120 18 F6        	jr Pulsa_ENTER
1747  9122 C9           1 ret
1748  9123
1749  9123              ; **************************************************************************************************
1750  9123              ;
1751  9123              ; Temporización.
1752  9123
1753  9123              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1754  9123              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1755  9123              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1756  9123              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1757  9123
1758  9123              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1759  9123              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1760  9123              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1761  9123
1762  9123              ; A partir de $4f61 no hace falta DELAY.
1763  9123
1764  9123              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1765  9123
1766  9123              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1767  9123              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1768  9123              ;	LD A,B
1769  9123              ;	AND A
1770  9123              ;	JR NZ,wait
1771  9123              ;	RET
1772  9123
1773  9123              ; ---------------------------------------------------------------------------------------------------------------
1774  9123              ;
1775  9123              ;	13/07/24
1776  9123              ;
1777  9123
1778  9123              Inicia_Shield
1779  9123
1780  9123 21 4F 8C     	ld hl,Datos_Shield
1781  9126 22 53 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1782  9129
1783  9129 7E           	ld a,(hl)
1784  912A 32 56 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1785  912D
1786  912D 3E 01        	ld a,1
1787  912F 32 57 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1788  9132
1789  9132 C9           	ret
1790  9133
1791  9133              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1792  9133              ;
1793  9133              ;	4/6/24
1794  9133              ;
1795  9133              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1796  9133              ;
1797  9133              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1798  9133              ;
1799  9133
1800  9133              Actualiza_pantalla
1801  9133
1802  9133 3E 02        	ld a,2
1803  9135 D3 FE        	out ($fe),a
1804  9137
1805  9137 3A 2B 8C     	ld a,(Ctrl_3)
1806  913A CB 57        	bit 2,a
1807  913C 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1808  913E
1809  913E              Borrando_entidades
1810  913E
1811  913E 2A 25 8C     	ld hl,(Scanlines_album_SP)
1812  9141 CD B5 90     	call Extrae_address
1813  9144 24           	inc h
1814  9145 25           	dec h
1815  9146 28 05        	jr z,Pintando_entidades
1816  9148 CD F9 95     	call Pinta_Sprites
1817  914B 18 F1        	jr Borrando_entidades
1818  914D
1819  914D              Pintando_entidades
1820  914D
1821  914D 2A 27 8C     	ld hl,(India_SP)
1822  9150 2C           	inc l
1823  9151 CD B5 90     	call Extrae_address
1824  9154 24           	inc h
1825  9155 25           	dec h
1826  9156 28 0E        	jr z,Ejecuta_escudo
1827  9158 1C           	inc e
1828  9159 1C           	inc e
1829  915A ED 53 27 8C  	ld (India_SP),de
1830  915E CD B5 90     	call Extrae_address
1831  9161 CD F9 95     	call Pinta_Sprites
1832  9164 18 E7        	jr Pintando_entidades
1833  9166
1834  9166              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1835  9166
1836  9166              Ejecuta_escudo
1837  9166
1838  9166 3A 55 8C     	ld a,(Shield)
1839  9169 A7           	and a
1840  916A 20 2F        	jr nz,Aplica_Shield
1841  916C
1842  916C              Borrando_Amadeus
1843  916C
1844  916C 21 2B 8C     	ld hl,Ctrl_3
1845  916F CB 6E        	bit 5,(hl)
1846  9171 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1847  9173
1848  9173 2A 0D 8C     	ld hl,(Album_de_borrado_Amadeus)
1849  9176 CD B5 90     	call Extrae_address
1850  9179 24           	inc h
1851  917A 25           	dec h
1852  917B 28 03        	jr z,Pintando_Amadeus
1853  917D CD F9 95     	call Pinta_Sprites
1854  9180
1855  9180              Pintando_Amadeus
1856  9180
1857  9180 2A 0B 8C     	ld hl,(Album_de_pintado_Amadeus)
1858  9183 CD B5 90     	call Extrae_address
1859  9186 24           	inc h
1860  9187 25           	dec h
1861  9188 28 03        	jr z,1F
1862  918A CD F9 95     	call Pinta_Sprites
1863  918D
1864  918D              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1865  918D
1866  918D 21 2B 8C     1 ld hl,Ctrl_3
1867  9190 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1868  9192 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1869  9194 CB AE        	res 5,(hl)
1870  9196
1871  9196 3E 01        	ld a,1												; Borde azul.
1872  9198 D3 FE        	out ($fe),a
1873  919A
1874  919A C9           	ret
1875  919B
1876  919B              Aplica_Shield
1877  919B
1878  919B              ;	Bit 1 "1" (Shield_3) Sólo borra.
1879  919B              ;		  "0"     ""     Borra/Pinta.
1880  919B              ;	Bit 2    ""  RET.	 No borra, no pinta.
1881  919B
1882  919B 21 57 8C     	ld hl,Shield_3
1883  919E
1884  919E CB 5E        	bit 3,(hl)
1885  91A0 20 DE        	jr nz,Pintando_Amadeus
1886  91A2
1887  91A2 CB 56        	bit 2,(hl)
1888  91A4 20 E7        	jr nz,1B
1889  91A6
1890  91A6 CB 4E        	bit 1,(hl)
1891  91A8 C4 AF 91     	call nz,Borra_Amadeus_shield
1892  91AB
1893  91AB 28 BF        	jr z,Borrando_Amadeus
1894  91AD 18 DE        	jr 1B
1895  91AF
1896  91AF              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1897  91AF
1898  91AF              Borra_Amadeus_shield
1899  91AF
1900  91AF 3A 2B 8C     	ld a,(Ctrl_3)
1901  91B2 CB 6F        	bit 5,a
1902  91B4 28 08        	jr z,1F
1903  91B6
1904  91B6 2A 0D 8C     	ld hl,(Album_de_borrado_Amadeus)
1905  91B9 CD B5 90     	call Extrae_address
1906  91BC 18 06        	jr 2F
1907  91BE
1908  91BE 2A 0B 8C     1 ld hl,(Album_de_pintado_Amadeus)
1909  91C1 CD B5 90     	call Extrae_address
1910  91C4
1911  91C4 CD F9 95     2 call Pinta_Sprites
1912  91C7
1913  91C7 AF           	xor a
1914  91C8 3C           	inc a											; Asegura NZ en la salida de la rutina.
1915  91C9
1916  91C9 C9           	ret
1917  91CA
1918  91CA              Pinta_Amadeus_shield
1919  91CA
1920  91CA 2A 0B 8C     	ld hl,(Album_de_pintado_Amadeus)
1921  91CD CD B5 90     	call Extrae_address
1922  91D0 CD F9 95     	call Pinta_Sprites
1923  91D3
1924  91D3 AF           	xor a
1925  91D4 3C           	inc a											; Asegura NZ en la salida de la rutina.
1926  91D5
1927  91D5 C9           	ret
1928  91D6
1929  91D6              Borra_Pinta_Amadeus_shield
1930  91D6
1931  91D6 CD AF 91     	call Borra_Amadeus_shield
1932  91D9 CD CA 91     	call Pinta_Amadeus_shield
1933  91DC C9           	ret
1934  91DD
1935  91DD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1936  91DD              ;
1937  91DD              ;	19/6/24
1938  91DD              ;
1939  91DD
1940  91DD              Teclado
1941  91DD
1942  91DD              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1943  91DD
1944  91DD 3E F7        	ld a,$f7												; "5" para disparar.
1945  91DF DB FE        	in a,($fe)
1946  91E1 E6 10        	and $10
1947  91E3
1948  91E3 CC 93 A2     	call z,Genera_disparo_Amadeus
1949  91E6
1950  91E6 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1951  91E8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1952  91EA E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1953  91EC CC 66 9D         call z,Amadeus_a_izquierda
1954  91EF
1955  91EF 3E F7        	ld a,$f7
1956  91F1 DB FE        	in a,($fe)
1957  91F3 E6 01        	and $01
1958  91F5 C8           	ret z
1959  91F6
1960  91F6 3E F7        	ld a,$f7
1961  91F8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1962  91FA E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1963  91FC CC 7E 9D     	call z,Amadeus_a_derecha
1964  91FF
1965  91FF C9           	ret
1966  9200
1967  9200              ; ------------------------------------------------------------------------------------------------------------------------
1968  9200              ;
1969  9200              ;	06/07/24
1970  9200              ;
1971  9200
1972  9200              Genera_explosion
1973  9200
1974  9200 21 3D 8C     	ld hl,Clock_explosion
1975  9203 35           	dec (hl)
1976  9204 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1977  9206
1978  9206              Borra_entidad_colisionada
1979  9206
1980  9206 CD 0D 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1981  9209 CD 16 90     	call Cargamos_registros_con_explosion
1982  920C CD 00 95     	call Genera_datos_de_impresion
1983  920F
1984  920F AF           	xor a
1985  9210 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1986  9211
1987  9211 C9           	ret
1988  9212
1989  9212              Siguiente_frame_explosion
1990  9212
1991  9212 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1992  9214
1993  9214              ; Avanza Frame de explosión.
1994  9214
1995  9214 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1996  9217 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1997  921A
1998  921A 79           	ld a,c
1999  921B 95           	sub l
2000  921C 20 0B        	jr nz,1F
2001  921E
2002  921E              ; Fín de la entidad !!!!!!!!!!!!!
2003  921E
2004  921E 21 FD 8B     	ld hl,Numero_parcial_de_entidades
2005  9221 35           	dec (hl)
2006  9222 23           	inc hl
2007  9223 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2008  9224
2009  9224 CD 7D 93     	call Limpiamos_bandeja_DRAW
2010  9227 18 DD        	jr Borra_entidad_colisionada
2011  9229
2012  9229 23           1 inc hl
2013  922A 23           	inc hl
2014  922B 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2015  922E 18 D6        	jr Borra_entidad_colisionada
2016  9230
2017  9230              ; ----- ----- ----- ----- -----
2018  9230
2019  9230              Genera_explosion_Amadeus
2020  9230
2021  9230 21 3E 8C     	ld hl,Clock_explosion_Amadeus
2022  9233 35           	dec (hl)
2023  9234 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2024  9236
2025  9236              Borra_Amadeus_impactado
2026  9236
2027  9236 CD 72 8E     	call Change_Amadeus
2028  9239 CD 23 90     	call Cargamos_registros_con_explosion_Amadeus
2029  923C CD 44 90     	call Genera_datos_de_impresion_Amadeus
2030  923F
2031  923F 21 2B 8C     	ld hl,Ctrl_3
2032  9242 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2033  9244
2034  9244 AF           	xor a
2035  9245 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2036  9246
2037  9246 C9           	ret
2038  9247
2039  9247              Siguiente_frame_explosion_Amadeus
2040  9247
2041  9247 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2042  9249
2043  9249              ; Avanza Frame de explosión.
2044  9249
2045  9249 2A 7A 89     	ld hl,(Pamm_Amadeus)
2046  924C 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2047  924F
2048  924F 79           	ld a,c
2049  9250 95           	sub l
2050  9251 20 0B        	jr nz,1F
2051  9253
2052  9253              ; Fín de Amadeus !!!!!!!!!!!!!
2053  9253              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2054  9253
2055  9253 AF           	xor a
2056  9254 32 77 89     	ld (Impacto_Amadeus),a
2057  9257 21 2B 8C     	ld hl,Ctrl_3
2058  925A CB F6        	set 6,(hl)
2059  925C
2060  925C 18 D8        	jr Borra_Amadeus_impactado
2061  925E
2062  925E 23           1 inc hl
2063  925F 23           	inc hl
2064  9260 22 7A 89     	ld (Pamm_Amadeus),hl
2065  9263 18 D1        	jr Borra_Amadeus_impactado
2066  9265
2067  9265              ; ---------------------------------------------------------------
2068  9265
2069  9265              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9265              ; ******************************************************************************************************************************************************************************************
   2+ 9265              ;
   3+ 9265              ;   21/04/24
   4+ 9265              ;
   5+ 9265              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9265              ;   (XOR) bit a bit.
   7+ 9265              ;
   8+ 9265              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9265
  10+ 9265              Derivando_RND
  11+ 9265
  12+ 9265 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9268
  14+ 9268 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 926A C5               push bc
  16+ 926B              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 926B 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 926E              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 926E
  20+ 926E A7           6 and a                                 ; Carry a "0".
  21+ 926F CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9271 30 02            jr nc,1F
  23+ 9273
  24+ 9273 CB C1            set 0,c
  25+ 9275
  26+ 9275 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9276 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9278 5F               ld e,a
  29+ 9279
  30+ 9279 7A               ld a,d
  31+ 927A E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 927C 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 927E
  34+ 927E CB 3F            srl a
  35+ 9280
  36+ 9280 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9281
  38+ 9281 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9282 28 04            jr z,4F
  40+ 9284
  41+ 9284 CB FF            set 7,a
  42+ 9286 18 02            jr 5F
  43+ 9288
  44+ 9288 CB BF        4 res 7,a
  45+ 928A
  46+ 928A CB 21        5 sla c
  47+ 928C 10 E0            djnz 6B
  48+ 928E
  49+ 928E 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 928F
  51+ 928F 77               ld (hl),a
  52+ 9290 23               inc hl
  53+ 9291 C1               pop bc
  54+ 9292 10 D4            djnz 3B
  55+ 9294
  56+ 9294 C9               ret
  57+ 9295
  58+ 9295
  59+ 9295
# file closed: RND_Derivando.asm
2070  9295              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9295              ;---------------------------------------------------------------------------------------------------------------
   2+ 9295              ;
   3+ 9295              ;   9/11/24
   4+ 9295              ;
   5+ 9295              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9295              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9295              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9295              ;	_ de la 1ª entidad del Nivel.
   9+ 9295              ;
  10+ 9295              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9295
  12+ 9295              ;	MODIFICA: HL,DE y A.
  13+ 9295              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9295
  15+ 9295              Inicializa_Nivel
  16+ 9295
  17+ 9295              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  18+ 9295
  19+ 9295 21 9A 8B     	ld hl,Indice_de_niveles
  20+ 9298 22 4B 8C     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  21+ 929B CD B5 90     	call Extrae_address
  22+ 929E 1C           	inc e
  23+ 929F 1C           	inc e
  24+ 92A0 ED 53 4B 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
  25+ 92A4
  26+ 92A4 7E           	ld a,(hl)
  27+ 92A5 32 FC 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  28+ 92A8
  29+ 92A8 2C           	inc l
  30+ 92A9
  31+ 92A9 22 4D 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  32+ 92AC
  33+ 92AC CD B3 92     	call Situa_Puntero_indice_mov			 	 ; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en la coreografía correcta.
  34+ 92AF CD C4 92     	call Situa_Puntero_de_almacen_de_mov_masticados					; Sitúa (Puntero_de_almacen_de_mov_masticados) en el almacén adecuado según el (Tipo) de entidad.
  35+ 92B2
  36+ 92B2 C9           	ret
  37+ 92B3
  38+ 92B3              ; ----------------------
  39+ 92B3
  40+ 92B3              ; Fija_velocidades ld de,Perfiles_de_velocidad
  41+ 92B3              ; 	ld bc,4
  42+ 92B3              ; 	ldir
  43+ 92B3              ; 	ret
  44+ 92B3
  45+ 92B3 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  46+ 92B4 CD 4E 94         call Calcula_salto_en_BC
  47+ 92B7 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  48+ 92BA A7               and a
  49+ 92BB ED 4A            adc hl,bc
  50+ 92BD CD B5 90         call Extrae_address
  51+ 92C0 22 E7 8B         ld (Puntero_indice_mov),hl
  52+ 92C3 C9               ret
  53+ 92C4
  54+ 92C4 3A B6 8B     Situa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  55+ 92C7 CD 4E 94     	call Calcula_salto_en_BC
  56+ 92CA 21 1B 89     	ld hl,Indice_de_almacenes_de_mov_masticados
  57+ 92CD A7               and a
  58+ 92CE ED 4A            adc hl,bc
  59+ 92D0 CD B5 90         call Extrae_address
  60+ 92D3 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  61+ 92D6 C9           	ret
  62+ 92D7
  63+ 92D7              ;---------------------------------------------------------------------------------------------------------------
  64+ 92D7              ;
  65+ 92D7              ;   5/1/24
  66+ 92D7              ;
  67+ 92D7              ;	Destruye A,BC,HL,DE
  68+ 92D7
  69+ 92D7              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  70+ 92D7              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  71+ 92D7
  72+ 92D7              Inicia_Entidades
  73+ 92D7
  74+ 92D7              ; Preparamos los punteros de las cajas de entidades:
  75+ 92D7
  76+ 92D7 CD 9F 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  77+ 92DA              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  78+ 92DA CD 99 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 92DD
  80+ 92DD 2A 4D 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  81+ 92E0
  82+ 92E0 22 4D 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  83+ 92E3
  84+ 92E3 CD FC 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  85+ 92E6
  86+ 92E6 2A 4D 8C     	ld hl,(Datos_de_nivel)
  87+ 92E9
  88+ 92E9              ; En este punto:
  89+ 92E9              ;
  90+ 92E9              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  91+ 92E9              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  92+ 92E9
  93+ 92E9 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  94+ 92EA
  95+ 92EA 7E           	ld a,(hl)
  96+ 92EB CD 68 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  97+ 92EE
  98+ 92EE CD 63 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  99+ 92F1
 100+ 92F1              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 101+ 92F1
 102+ 92F1 CD 1E 94     	call Busca_mov_masticados_segun_tipo
 103+ 92F4
 104+ 92F4 A7           	and a
 105+ 92F5 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 106+ 92F7
 107+ 92F7              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 108+ 92F7
 109+ 92F7              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 110+ 92F7              ;	_ de este tipo de entidad.
 111+ 92F7
 112+ 92F7 CD FD 9E     	call Situa_en_contador_general_de_mov_masticados
 113+ 92FA CD 0A 9F     	call Transfiere_datos_de_contadores
 114+ 92FD
 115+ 92FD 18 06        	jr 4F
 116+ 92FF
 117+ 92FF CD A9 8F     3 call Construye_movimientos_masticados_entidad
 118+ 9302
 119+ 9302              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 120+ 9302              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 121+ 9302              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 122+ 9302              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 123+ 9302              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 124+ 9302
 125+ 9302 CD DC 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 126+ 9305              ;																; _ Mov_masticados ya generados.
 127+ 9305
 128+ 9305 CD FD 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 129+ 9308
 130+ 9308 DD E5        	push ix
 131+ 930A E1           	pop hl 														; (Puntero_de_impresion) en HL.
 132+ 930B
 133+ 930B D5           	push de
 134+ 930C CD D4 94     	call Genera_coordenadas
 135+ 930F
 136+ 930F ED 5B 25 8C  	ld de,(Scanlines_album_SP)
 137+ 9313 CD 0D 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 138+ 9316 D1           	pop de
 139+ 9317
 140+ 9317 CD 00 95     	call Genera_datos_de_impresion
 141+ 931A              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 142+ 931A              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 143+ 931A              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 144+ 931A              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 145+ 931A
 146+ 931A CD A0 93     	call Decrementa_Contador_de_mov_masticados
 147+ 931D
 148+ 931D              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 149+ 931D
 150+ 931D ED 5B F6 8B  	ld de,(Puntero_store_caja)
 151+ 9321 CD 90 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 152+ 9324
 153+ 9324 CD 7D 93     	call Limpiamos_bandeja_DRAW
 154+ 9327 CD 03 91     	call Incrementa_punteros_de_cajas
 155+ 932A
 156+ 932A              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 157+ 932A              ; _ entidad del Nivel.
 158+ 932A
 159+ 932A 3A 2C 8C     	ld a,(Ctrl_4)
 160+ 932D E6 F0        	and $f0
 161+ 932F 32 2C 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 162+ 9332
 163+ 9332              ; Siguiente entidad del Nivel.
 164+ 9332
 165+ 9332 2A 4D 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 166+ 9335 23           	inc hl 														; _ entidad del Nivel.
 167+ 9336
 168+ 9336 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 169+ 9337
 170+ 9337 10 A7        	djnz 2B
 171+ 9339
 172+ 9339 C9           	ret
 173+ 933A
 174+ 933A              ; -------------------------------------------------------------------------------------------------------------------
 175+ 933A              ;
 176+ 933A              ;	27/5/24
 177+ 933A              ;
 178+ 933A              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 179+ 933A              ;
 180+ 933A
 181+ 933A              ; 	Cargamos la definición de Amadeus en DRAW.
 182+ 933A              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 183+ 933A
 184+ 933A 21 F1 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 185+ 933D CD 63 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 186+ 9340
 187+ 9340
 188+ 9340              Construye_movimientos_masticados_Amadeus
 189+ 9340
 190+ 9340 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 191+ 9343 CD F0 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 192+ 9346              ;															; _ el (Contador_de_mov_masticados).
 193+ 9346 CD BB 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 194+ 9349              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 195+ 9349
 196+ 9349              ; Generamos movimientos masticados de Amadeus.
 197+ 9349
 198+ 9349 06 79        	ld b,121												; $0079, 121d.
 199+ 934B
 200+ 934B C5           1 push bc
 201+ 934C CD 1C 97     	call Draw
 202+ 934F CD D5 8F     	call Guarda_movimiento_masticado
 203+ 9352
 204+ 9352 CD 90 9A     	call Mov_right
 205+ 9355 CD 90 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 206+ 9358
 207+ 9358 C1           	pop bc
 208+ 9359 10 F0        	djnz 1B
 209+ 935B
 210+ 935B              ; Todos los movimientos masticados de Amadeus se han creado.
 211+ 935B
 212+ 935B              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 213+ 935B              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 214+ 935B
 215+ 935B 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 216+ 935E 01 08 00     	ld bc,8
 217+ 9361 A7           	and a
 218+ 9362 ED 42        	sbc hl,bc
 219+ 9364 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 220+ 9367
 221+ 9367 C9           	ret
 222+ 9368
 223+ 9368              ; ---------------------------------------------------------------------
 224+ 9368              ;
 225+ 9368              ;	10/02/24
 226+ 9368              ;
 227+ 9368              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 228+ 9368              ;
 229+ 9368              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 230+ 9368
 231+ 9368              Definicion_segun_tipo
 232+ 9368
 233+ 9368 CD 4E 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 234+ 936B 21 D3 89     	ld hl,Indice_de_definiciones_de_entidades
 235+ 936E CD 59 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 236+ 9371 C9           	ret
 237+ 9372
 238+ 9372              ; ---------------------------------------------------------------------
 239+ 9372              ;
 240+ 9372              ;	6/7/24
 241+ 9372
 242+ 9372
 243+ 9372              Store_Restore_cajas
 244+ 9372
 245+ 9372 ED 5B F6 8B  	ld de,(Puntero_store_caja)
 246+ 9376 CD 90 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 247+ 9379 CD 03 91     	call Incrementa_punteros_de_cajas
 248+ 937C C9           	ret
 249+ 937D
 250+ 937D              ; ---------------------------------------------------------------------
 251+ 937D              ;
 252+ 937D              ;	23/6/24
 253+ 937D              ;
 254+ 937D              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 255+ 937D              ;
 256+ 937D              ;	MODIFY: HL
 257+ 937D
 258+ 937D              Limpiamos_bandeja_DRAW
 259+ 937D
 260+ 937D ED 73 03 8C  	ld (Stack),sp
 261+ 9381 31 DB 8B     	ld sp,Vel_left
 262+ 9384
 263+ 9384 AF           	xor a
 264+ 9385 67           	ld h,a
 265+ 9386 6F           	ld l,a
 266+ 9387
 267+ 9387 E5           	push hl
 268+ 9388 E5           	push hl
 269+ 9389 E5           	push hl
 270+ 938A E5           	push hl
 271+ 938B E5           	push hl
 272+ 938C E5           	push hl
 273+ 938D E5           	push hl
 274+ 938E E5           	push hl
 275+ 938F E5           	push hl
 276+ 9390 E5           	push hl
 277+ 9391 E5           	push hl
 278+ 9392 E5           	push hl
 279+ 9393 E5           	push hl
 280+ 9394 E5           	push hl
 281+ 9395 E5           	push hl
 282+ 9396 E5           	push hl
 283+ 9397 E5           	push hl
 284+ 9398 E5           	push hl
 285+ 9399
 286+ 9399 33           	inc sp
 287+ 939A
 288+ 939A E5           	push hl
 289+ 939B ED 7B 03 8C  	ld sp,(Stack)
 290+ 939F
 291+ 939F C9           	ret
 292+ 93A0
 293+ 93A0              ; ---------------------------------------------------------------------
 294+ 93A0              ;
 295+ 93A0              ;	24/03/24
 296+ 93A0
 297+ 93A0 2A BF 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 298+ 93A3 2B           	dec hl
 299+ 93A4 22 BF 8B     	ld (Contador_de_mov_masticados),hl
 300+ 93A7 C9           	ret
 301+ 93A8
 302+ 93A8              ; ---------------------------------------------------------------------
 303+ 93A8              ;
 304+ 93A8              ;	7/11/24
 305+ 93A8
 306+ 93A8              Reinicia_entidad_maliciosa
 307+ 93A8
 308+ 93A8              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 309+ 93A8
 310+ 93A8 CD FD 9E     	call Situa_en_contador_general_de_mov_masticados
 311+ 93AB CD 0A 9F     	call Transfiere_datos_de_contadores
 312+ 93AE
 313+ 93AE              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 314+ 93AE
 315+ 93AE 3A B6 8B     	ld a,(Tipo)
 316+ 93B1 CD 68 93     	call Definicion_segun_tipo
 317+ 93B4
 318+ 93B4 E5           	push hl
 319+ 93B5 DD E1        	pop ix
 320+ 93B7
 321+ 93B7 DD 6E 0B     	ld l,(ix+11)
 322+ 93BA DD 66 0C     	ld h,(ix+12)
 323+ 93BD
 324+ 93BD 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 325+ 93C0
 326+ 93C0 CD FD 8F     	call Cargamos_registros_con_mov_masticado
 327+ 93C3
 328+ 93C3              ; Incrementa (Contador_de_vueltas)x2.
 329+ 93C3              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 330+ 93C3
 331+ 93C3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 332+ 93C3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 333+ 93C3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 334+ 93C3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 335+ 93C3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 336+ 93C3
 337+ 93C3 21 B9 8B     	ld hl,Contador_de_vueltas
 338+ 93C6 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 339+ 93C8
 340+ 93C8 7E           	ld a,(hl)
 341+ 93C9 CB 2F        	sra a
 342+ 93CB CB 2F        	sra a
 343+ 93CD
 344+ 93CD 32 C1 8B     	ld (Velocidad),a
 345+ 93D0
 346+ 93D0 3E 40        	ld a,$40
 347+ 93D2 BE           	cp (hl)
 348+ 93D3 C0           	ret nz
 349+ 93D4
 350+ 93D4              ; Límitador.
 351+ 93D4
 352+ 93D4              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 353+ 93D4
 354+ 93D4 CB 2E        	sra (hl)
 355+ 93D6 21 C1 8B     	ld hl,Velocidad
 356+ 93D9 CB 2E        	sra (hl)
 357+ 93DB
 358+ 93DB C9           	ret
 359+ 93DC
 360+ 93DC              ; ---------------------------------------------------------------------
 361+ 93DC              ;
 362+ 93DC              ;	22/01/24
 363+ 93DC
 364+ 93DC 21 2C 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 365+ 93DF CB 46        	bit 0,(hl)
 366+ 93E1 20 0D        	jr nz,1F
 367+ 93E3 CB 4E        	bit 1,(hl)
 368+ 93E5 20 0C        	jr nz,2F
 369+ 93E7 CB 56        	bit 2,(hl)
 370+ 93E9 20 0B        	jr nz,3F
 371+ 93EB CB 5E        	bit 3,(hl)
 372+ 93ED 20 0A        	jr nz,4F
 373+ 93EF C9           	ret
 374+ 93F0
 375+ 93F0 CB E6        1 set 4,(hl)
 376+ 93F2 C9           	ret
 377+ 93F3 CB EE        2 set 5,(hl)
 378+ 93F5 C9           	ret
 379+ 93F6 CB F6        3 set 6,(hl)
 380+ 93F8 C9           	ret
 381+ 93F9 CB FE        4 set 7,(hl)
 382+ 93FB C9           	ret
 383+ 93FC
 384+ 93FC              ; ---------------------------------------------------------------------
 385+ 93FC              ;
 386+ 93FC              ;	23/01/24
 387+ 93FC              ;
 388+ 93FC              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 389+ 93FC              ;
 390+ 93FC              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 391+ 93FC              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 392+ 93FC              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 393+ 93FC              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 394+ 93FC
 395+ 93FC              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 396+ 93FC
 397+ 93FC 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 398+ 93FD 3D           	dec a
 399+ 93FE 20 06        	jr nz,1F
 400+ 9400
 401+ 9400              ; --- Tipo_1
 402+ 9400
 403+ 9400 21 2C 8C     	ld hl,Ctrl_4
 404+ 9403 CB C6        	set 0,(hl)
 405+ 9405 C9           	ret
 406+ 9406
 407+ 9406 3D           1 dec a
 408+ 9407 20 06        	jr nz,2F
 409+ 9409
 410+ 9409              ; --- Tipo_2
 411+ 9409
 412+ 9409 21 2C 8C     	ld hl,Ctrl_4
 413+ 940C CB CE        	set 1,(hl)
 414+ 940E C9           	ret
 415+ 940F
 416+ 940F 3D           2 dec a
 417+ 9410 20 06        	jr nz,3F
 418+ 9412
 419+ 9412              ; --- Tipo_3
 420+ 9412
 421+ 9412 21 2C 8C     	ld hl,Ctrl_4
 422+ 9415 CB D6        	set 2,(hl)
 423+ 9417 C9           	ret
 424+ 9418
 425+ 9418              ; --- Tipo_3
 426+ 9418
 427+ 9418 21 2C 8C     3 ld hl,Ctrl_4
 428+ 941B CB D6        	set 2,(hl)
 429+ 941D C9           	ret
 430+ 941E
 431+ 941E              ; ---------------------------------------------------------------------
 432+ 941E              ;
 433+ 941E              ;	22/01/24
 434+ 941E
 435+ 941E 21 2C 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 436+ 9421 CB 46        	bit 0,(hl)
 437+ 9423 20 0E        	jr nz,1F
 438+ 9425
 439+ 9425 CB 4E        	bit 1,(hl)
 440+ 9427 20 10        	jr nz,2F
 441+ 9429
 442+ 9429 CB 56        	bit 2,(hl)
 443+ 942B 20 12        	jr nz,3F
 444+ 942D
 445+ 942D CB 5E        	bit 3,(hl)
 446+ 942F 20 14        	jr nz,4F
 447+ 9431 18 19        	jr 6F
 448+ 9433
 449+ 9433              ; Entidad_de_Tipo_1.
 450+ 9433
 451+ 9433 CB 66        1 bit 4,(hl)
 452+ 9435 28 15        	jr z,6F
 453+ 9437 18 10        	jr 5F
 454+ 9439
 455+ 9439              ; Entidad_de_Tipo_2.
 456+ 9439
 457+ 9439 CB 6E        2 bit 5,(hl)
 458+ 943B 28 0F        	jr z,6F
 459+ 943D 18 0A        	jr 5F
 460+ 943F
 461+ 943F              ; Entidad_de_Tipo_3.
 462+ 943F
 463+ 943F CB 76        3 bit 6,(hl)
 464+ 9441 28 09        	jr z,6F
 465+ 9443 18 04        	jr 5F
 466+ 9445
 467+ 9445              ; Entidad_de_Tipo_4.
 468+ 9445
 469+ 9445 CB 7E        4 bit 7,(hl)
 470+ 9447 28 03        	jr z,6F
 471+ 9449
 472+ 9449              ; Esta entidad TIENE MOV_MASTICADOS.
 473+ 9449
 474+ 9449 AF           5 xor a
 475+ 944A 3C           	inc a
 476+ 944B C9           	ret
 477+ 944C
 478+ 944C              ; Esta entidad NO TIENE MOV_MASTICADOS.
 479+ 944C
 480+ 944C AF           6 xor a
 481+ 944D C9           	ret
 482+ 944E
 483+ 944E              ;	------------------------------------------------------------------------------------
 484+ 944E              ;
 485+ 944E              ;	09/11/24
 486+ 944E              ;
 487+ 944E              ;	INPUTS:	A contiene el (Tipo) de entidad.
 488+ 944E              ;
 489+ 944E              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 490+ 944E              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 491+ 944E
 492+ 944E A7           Calcula_salto_en_BC and a
 493+ 944F 28 04        	jr z,1F
 494+ 9451 CB 27        	sla a
 495+ 9453 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 496+ 9455 4F           1 ld c,a
 497+ 9456 06 00        	ld b,0
 498+ 9458 C9           	ret
 499+ 9459
 500+ 9459              ; ------------------------------------------------------------------
 501+ 9459              ;
 502+ 9459              ;	19/1/24
 503+ 9459              ;
 504+ 9459              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 505+ 9459              ;	Actualiza (Datos_de_entidad) con esa dirección.
 506+ 9459
 507+ 9459 A7           Situa_en_datos_de_definicion and a
 508+ 945A ED 4A        	adc hl,bc
 509+ 945C CD B5 90     	call Extrae_address
 510+ 945F 22 01 8C         ld (Datos_de_entidad),hl
 511+ 9462 C9           	ret
 512+ 9463
 513+ 9463              ; ------------------------------------------------------------------
 514+ 9463
 515+ 9463              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 516+ 9463              ; 	inc de
 517+ 9463              ; 	inc de
 518+ 9463              ; 	ex de,hl
 519+ 9463              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 520+ 9463              ; 	ret
 521+ 9463
 522+ 9463              ; ----------------------------------------------------------------------------------------------------------
 523+ 9463              ;
 524+ 9463              ;	24/6/24
 525+ 9463              ;
 526+ 9463              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 527+ 9463              ;	_ de entidad.
 528+ 9463              ;
 529+ 9463              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 530+ 9463              ;
 531+ 9463              ;
 532+ 9463              ;	MODIFICA: HL,DE y BC
 533+ 9463
 534+ 9463
 535+ 9463              Definicion_de_entidad_a_bandeja_DRAW
 536+ 9463
 537+ 9463 11 B6 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 538+ 9466 7E           	ld a,(hl) 									; Volcamos Tipo.
 539+ 9467 12           	ld (de),a
 540+ 9468 23           	inc hl
 541+ 9469              ;
 542+ 9469 11 C4 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 543+ 946C 01 02 00     	ld bc,2
 544+ 946F ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 545+ 9471              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 546+ 9471 11 B9 8B     	ld de,Contador_de_vueltas
 547+ 9474 7E           	ld a,(hl)
 548+ 9475 12           	ld (de),a
 549+ 9476 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 550+ 9477
 551+ 9477 11 CB 8B     	ld de,Indice_Sprite_der
 552+ 947A 01 04 00     	ld bc,4
 553+ 947D ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 554+ 947F
 555+ 947F 11 D3 8B     	ld de,Posicion_inicio
 556+ 9482 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 557+ 9485 ED B0        	ldir 									; Vuelco (Frames_explosion).
 558+ 9487
 559+ 9487 11 BD 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 560+ 948A 01 02 00     	ld bc,2
 561+ 948D ED B0        	ldir
 562+ 948F
 563+ 948F C9           	ret
 564+ 9490
 565+ 9490              ; ----------------------------------------------------------------------------------------------------------
 566+ 9490              ;
 567+ 9490              ;	1/8/24
 568+ 9490              ;
 569+ 9490
 570+ 9490              Parametros_de_bandeja_DRAW_a_caja
 571+ 9490
 572+ 9490 21 B6 8B     	ld hl,Bandeja_DRAW
 573+ 9493 01 0C 00     	ld bc,12
 574+ 9496 ED B0        	ldir
 575+ 9498 C9           	ret
 576+ 9499
 577+ 9499              ;---------------------------------------------------------------------------------------------------------------
 578+ 9499              ;
 579+ 9499              ;	5/1/24
 580+ 9499              ;
 581+ 9499              ;	INICIALIZA (Numero_parcial_de_entidades).
 582+ 9499              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 583+ 9499              ;
 584+ 9499              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 585+ 9499              ;
 586+ 9499              ;	(Numero_parcial_de_entidades)="7".
 587+ 9499              ;
 588+ 9499              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 589+ 9499              ;
 590+ 9499              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 591+ 9499              ;
 592+ 9499              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 593+ 9499              ;	MODIFICA: A y B.
 594+ 9499              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 595+ 9499
 596+ 9499              Inicializa_Numero_parcial_de_entidades
 597+ 9499
 598+ 9499              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 599+ 9499
 600+ 9499 3A FC 8B     	ld a,(Numero_de_entidades)
 601+ 949C A7           	and a
 602+ 949D
 603+ 949D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 604+ 949D              ;	jr z,$
 605+ 949D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 606+ 949D
 607+ 949D 20 03        	jr nz,3F
 608+ 949F
 609+ 949F              ; ---------- ---------- ----------
 610+ 949F
 611+ 949F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 612+ 949F              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 613+ 949F
 614+ 949F CD 95 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 615+ 94A2
 616+ 94A2              ; ---------- ---------- ----------
 617+ 94A2
 618+ 94A2 3A FC 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 619+ 94A5 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 620+ 94A7 38 08        	jr c,1F
 621+ 94A9
 622+ 94A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 623+ 94A9              ; Actualizamos variables.
 624+ 94A9
 625+ 94A9 3E 07        	ld a,7
 626+ 94AB 32 FD 8B     	ld (Numero_parcial_de_entidades),a
 627+ 94AE 47           	ld b,a
 628+ 94AF 18 04        	jr 2F
 629+ 94B1
 630+ 94B1              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 631+ 94B1              ; (Numero_de_entidades)="0".
 632+ 94B1
 633+ 94B1 32 FD 8B     1 ld (Numero_parcial_de_entidades),a
 634+ 94B4 47           	ld b,a
 635+ 94B5 C9           2 ret
 636+ 94B6
# file closed: Rutinas_de_inicio_y_niveles.asm
2071  94B6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94B6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94B6              ;
   3+ 94B6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94B6              ;
   5+ 94B6              ; *****************************************************************************************************************************************************************************************
   6+ 94B6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94B6
   8+ 94B6 7C           calcula_tercio ld a,h
   9+ 94B7 E6 18        	and $18
  10+ 94B9 CB 2F        	sra a
  11+ 94BB CB 2F        	sra a
  12+ 94BD CB 2F        	sra a
  13+ 94BF C9           	ret
  14+ 94C0
# file closed: calcula_tercio.asm
2072  94C0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94C0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94C0              ;
   3+ 94C0              ;
   4+ 94C0              ;	CLS.
   5+ 94C0              ;
   6+ 94C0              ;	Limpia la pantalla y define sus atributos.
   7+ 94C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94C0              ;
   9+ 94C0              ;	COLORES: 0 ..... NEGRO
  10+ 94C0              ;    		 1 ..... AZUL
  11+ 94C0              ; 			 2 ..... ROJO
  12+ 94C0              ;			 3 ..... MAGENTA
  13+ 94C0              ; 			 4 ..... VERDE
  14+ 94C0              ; 			 5 ..... CIAN
  15+ 94C0              ;			 6 ..... AMARILLO
  16+ 94C0              ; 			 7 ..... BLANCO
  17+ 94C0              ;
  18+ 94C0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94C0              ;
  20+ 94C0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94C0
  22+ 94C0
  23+ 94C0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94C3 11 01 40     	LD DE,$4001
  25+ 94C6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94C9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94CB ED B0        	LDIR
  28+ 94CD 01 FF 02     	LD BC,767
  29+ 94D0 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94D1 ED B0        	LDIR
  31+ 94D3 C9           	ret
  32+ 94D4
# file closed: Cls.asm
2073  94D4              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94D4              ; ------------------------------------------------------------------------
   2+ 94D4              ;
   3+ 94D4              ;	30/1/24
   4+ 94D4              ;
   5+ 94D4              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94D4              ;	Fila superior "0", Columna izquierda "0".
   7+ 94D4              ;
   8+ 94D4              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94D4              ;
  10+ 94D4              ;	Modifica: A,BC y DE.
  11+ 94D4
  12+ 94D4 7D           Genera_coordenadas ld a,l
  13+ 94D5 E6 1F        	and $1f
  14+ 94D7 32 B7 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94DA
  16+ 94DA 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94DB FE 40        	cp $40
  18+ 94DD 38 1C        	jr c,4F
  19+ 94DF
  20+ 94DF CD B6 94     	call calcula_tercio
  21+ 94E2 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94E3
  23+ 94E3 1E 00        	ld e,0
  24+ 94E5 7D           	ld a,l
  25+ 94E6 E6 E0        	and $e0
  26+ 94E8 28 01        	jr z,1F
  27+ 94EA 04           	inc b
  28+ 94EB
  29+ 94EB 04           1 inc b
  30+ 94EC 05           	dec b
  31+ 94ED 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94EF              ;														; _ , salimos.
  33+ 94EF 1C           3 inc e
  34+ 94F0 D6 20        	sub 32
  35+ 94F2 20 FB        	jr nz,3B
  36+ 94F4 10 F5        	djnz 1B
  37+ 94F6
  38+ 94F6 7B           2 ld a,e
  39+ 94F7 32 B8 8B     	ld (Coordenada_y),a
  40+ 94FA C9           	ret
  41+ 94FB
  42+ 94FB AF           4 xor a
  43+ 94FC 32 B8 8B     	ld (Coordenada_y),a
  44+ 94FF C9           	ret
  45+ 9500
# file closed: Genera_coordenadas.asm
2074  9500              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9500              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9500              ;
   3+ 9500              ;	20/09/24
   4+ 9500              ;
   5+ 9500              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9500              ;   DE contiene Puntero_objeto.
   7+ 9500              ;   IX contiene el Puntero de impresión.
   8+ 9500
   9+ 9500              Genera_datos_de_impresion
  10+ 9500
  11+ 9500 ED 73 03 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9504
  13+ 9504 31 BD 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9507 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9509
  16+ 9509 2A 25 8C         ld hl,(Scanlines_album_SP)
  17+ 950C
  18+ 950C 3E 05            ld a,5
  19+ 950E 85               add l
  20+ 950F 6F               ld l,a
  21+ 9510
  22+ 9510 F9               ld sp,hl
  23+ 9511 22 25 8C         ld (Scanlines_album_SP),hl
  24+ 9514
  25+ 9514 21 00 00         ld hl,0
  26+ 9517
  27+ 9517 DD E5            push ix
  28+ 9519 3B               dec sp
  29+ 951A ED 7A            adc hl,sp
  30+ 951C D5               push de
  31+ 951D
  32+ 951D              ; Recuperamos SP.
  33+ 951D
  34+ 951D ED 7B 03 8C      ld sp,(Stack)
  35+ 9521
  36+ 9521 E5               push hl
  37+ 9522 F1               pop af
  38+ 9523 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9524
  40+ 9524              ; Tenemos el encabezado listo.
  41+ 9524              ; Preparamos registros para generar los scanlines.
  42+ 9524
  43+ 9524 DD E5            push ix
  44+ 9526 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9527
  46+ 9527 ED 5B 25 8C      ld de,(Scanlines_album_SP)
  47+ 952B
  48+ 952B              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 952B              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 952B
  51+ 952B 7C               ld a,h
  52+ 952C FE 50            cp $50
  53+ 952E 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9530
  55+ 9530 20 05            jr nz,2F
  56+ 9532
  57+ 9532 7D               ld a,l
  58+ 9533 FE E0            cp $e0
  59+ 9535 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9537
  61+ 9537 7D           2 ld a,l
  62+ 9538 FE C0            cp $c0
  63+ 953A D2 D0 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 953D
  65+ 953D              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 953D
  67+ 953D CD CE 99         call NextScan
  68+ 9540 EB               ex de,hl
  69+ 9541
  70+ 9541 73               ld (hl),e
  71+ 9542 23               inc hl
  72+ 9543 72               ld (hl),d
  73+ 9544 23               inc hl
  74+ 9545
  75+ 9545 EB               ex de,hl
  76+ 9546
  77+ 9546 CD CE 99         call NextScan
  78+ 9549 EB               ex de,hl
  79+ 954A
  80+ 954A 73               ld (hl),e
  81+ 954B 23               inc hl
  82+ 954C 72               ld (hl),d
  83+ 954D 23               inc hl
  84+ 954E
  85+ 954E EB               ex de,hl
  86+ 954F
  87+ 954F CD CE 99         call NextScan
  88+ 9552 EB               ex de,hl
  89+ 9553
  90+ 9553 73               ld (hl),e
  91+ 9554 23               inc hl
  92+ 9555 72               ld (hl),d
  93+ 9556 23               inc hl
  94+ 9557
  95+ 9557 EB               ex de,hl
  96+ 9558
  97+ 9558 CD CE 99         call NextScan
  98+ 955B EB               ex de,hl
  99+ 955C
 100+ 955C 73               ld (hl),e
 101+ 955D 23               inc hl
 102+ 955E 72               ld (hl),d
 103+ 955F 23               inc hl
 104+ 9560
 105+ 9560 EB               ex de,hl
 106+ 9561
 107+ 9561 CD CE 99         call NextScan
 108+ 9564 EB               ex de,hl
 109+ 9565
 110+ 9565 73               ld (hl),e
 111+ 9566 23               inc hl
 112+ 9567 72               ld (hl),d
 113+ 9568 23               inc hl
 114+ 9569
 115+ 9569 EB               ex de,hl
 116+ 956A
 117+ 956A CD CE 99         call NextScan
 118+ 956D EB               ex de,hl
 119+ 956E
 120+ 956E 73               ld (hl),e
 121+ 956F 23               inc hl
 122+ 9570 72               ld (hl),d
 123+ 9571 23               inc hl
 124+ 9572
 125+ 9572 EB               ex de,hl
 126+ 9573
 127+ 9573 CD CE 99         call NextScan
 128+ 9576 EB               ex de,hl
 129+ 9577
 130+ 9577 73               ld (hl),e
 131+ 9578 23               inc hl
 132+ 9579 72               ld (hl),d
 133+ 957A 23               inc hl
 134+ 957B
 135+ 957B EB               ex de,hl
 136+ 957C
 137+ 957C CD CE 99         call NextScan
 138+ 957F EB               ex de,hl
 139+ 9580
 140+ 9580 73               ld (hl),e
 141+ 9581 23               inc hl
 142+ 9582 72               ld (hl),d
 143+ 9583 23               inc hl
 144+ 9584
 145+ 9584 EB               ex de,hl
 146+ 9585
 147+ 9585 CD CE 99         call NextScan
 148+ 9588 EB               ex de,hl
 149+ 9589
 150+ 9589 73               ld (hl),e
 151+ 958A 23               inc hl
 152+ 958B 72               ld (hl),d
 153+ 958C 23               inc hl
 154+ 958D
 155+ 958D EB               ex de,hl
 156+ 958E
 157+ 958E CD CE 99         call NextScan
 158+ 9591 EB               ex de,hl
 159+ 9592
 160+ 9592 73               ld (hl),e
 161+ 9593 23               inc hl
 162+ 9594 72               ld (hl),d
 163+ 9595 23               inc hl
 164+ 9596
 165+ 9596 EB               ex de,hl
 166+ 9597
 167+ 9597 CD CE 99         call NextScan
 168+ 959A EB               ex de,hl
 169+ 959B
 170+ 959B 73               ld (hl),e
 171+ 959C 23               inc hl
 172+ 959D 72               ld (hl),d
 173+ 959E 23               inc hl
 174+ 959F
 175+ 959F EB               ex de,hl
 176+ 95A0
 177+ 95A0 CD CE 99         call NextScan
 178+ 95A3 EB               ex de,hl
 179+ 95A4
 180+ 95A4 73               ld (hl),e
 181+ 95A5 23               inc hl
 182+ 95A6 72               ld (hl),d
 183+ 95A7 23               inc hl
 184+ 95A8
 185+ 95A8 EB               ex de,hl
 186+ 95A9
 187+ 95A9 CD CE 99         call NextScan
 188+ 95AC EB               ex de,hl
 189+ 95AD
 190+ 95AD 73               ld (hl),e
 191+ 95AE 23               inc hl
 192+ 95AF 72               ld (hl),d
 193+ 95B0 23               inc hl
 194+ 95B1
 195+ 95B1 EB               ex de,hl
 196+ 95B2
 197+ 95B2 CD CE 99         call NextScan
 198+ 95B5 EB               ex de,hl
 199+ 95B6
 200+ 95B6 73               ld (hl),e
 201+ 95B7 23               inc hl
 202+ 95B8 72               ld (hl),d
 203+ 95B9 23               inc hl
 204+ 95BA
 205+ 95BA EB               ex de,hl
 206+ 95BB
 207+ 95BB CD CE 99         call NextScan
 208+ 95BE EB               ex de,hl
 209+ 95BF
 210+ 95BF              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95BF              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95BF              ;   _ generar sus scanlines.
 213+ 95BF
 214+ 95BF              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95BF
 216+ 95BF 73               ld (hl),e
 217+ 95C0 23               inc hl
 218+ 95C1 72               ld (hl),d
 219+ 95C2 23               inc hl
 220+ 95C3
 221+ 95C3              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95C3
 223+ 95C3 22 25 8C         ld (Scanlines_album_SP),hl
 224+ 95C6
 225+ 95C6 EB               ex de,hl
 226+ 95C7
 227+ 95C7              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95C7
 229+ 95C7              ;    call NextScan
 230+ 95C7              ;    call NextScan
 231+ 95C7
 232+ 95C7 22 30 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95CA
 234+ 95CA              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95CA
 236+ 95CA 08               ex af,af
 237+ 95CB
 238+ 95CB F5               push af
 239+ 95CC E1               pop hl
 240+ 95CD
 241+ 95CD 36 10            ld (hl),16
 242+ 95CF
 243+ 95CF C9               ret
 244+ 95D0
 245+ 95D0              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95D0
 247+ 95D0              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95D0
 249+ 95D0 3E 57            ld a,$57
 250+ 95D2 94               sub h
 251+ 95D3 47               ld b,a
 252+ 95D4
 253+ 95D4 3E DF            ld a,$df
 254+ 95D6 BD               cp l
 255+ 95D7 38 04            jr c,1F
 256+ 95D9
 257+ 95D9 3E 08            ld a,8
 258+ 95DB 80               add b
 259+ 95DC 47               ld b,a
 260+ 95DD
 261+ 95DD              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95DD              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95DD
 264+ 95DD 48           1 ld c,b
 265+ 95DE 0C               inc c
 266+ 95DF
 267+ 95DF 04               inc b
 268+ 95E0 05               dec b
 269+ 95E1 20 02            jr nz,3F
 270+ 95E3
 271+ 95E3 18 0B            jr 6F
 272+ 95E5
 273+ 95E5 CD CE 99     3 call NextScan
 274+ 95E8 EB               ex de,hl
 275+ 95E9
 276+ 95E9 73               ld (hl),e
 277+ 95EA 23               inc hl
 278+ 95EB 72               ld (hl),d
 279+ 95EC 23               inc hl
 280+ 95ED
 281+ 95ED EB               ex de,hl
 282+ 95EE 10 F5            djnz 3B
 283+ 95F0
 284+ 95F0 ED 53 25 8C  6 ld (Scanlines_album_SP),de
 285+ 95F4
 286+ 95F4 08           5 ex af,af
 287+ 95F5 F5               push af
 288+ 95F6 E1               pop hl
 289+ 95F7
 290+ 95F7 71               ld (hl),c
 291+ 95F8
 292+ 95F8 C9               ret
 293+ 95F9
# file closed: Genera_datos_de_impresion.asm
2075  95F9              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95F9              ; -----------------------------------------------------------------------------
   2+ 95F9              ;
   3+ 95F9              ;   11/03/24
   4+ 95F9              ;
   5+ 95F9
   6+ 95F9              Pinta_Sprites
   7+ 95F9
   8+ 95F9              ;    ld hl,(Scanlines_album_SP)
   9+ 95F9              ;    call Extrae_address
  10+ 95F9
  11+ 95F9              ;    inc h
  12+ 95F9              ;    dec h
  13+ 95F9              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95F9
  15+ 95F9 ED 73 03 8C      ld (Stack),sp
  16+ 95FD
  17+ 95FD EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95FE              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95FE 2C               inc l
  20+ 95FF 2C               inc l
  21+ 9600
  22+ 9600 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9601
  24+ 9601 2C               inc l
  25+ 9602 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9603
  27+ 9603              ;   Seleccionamos rutina de impresión:
  28+ 9603
  29+ 9603 3E 10            ld a,16
  30+ 9605 B8               cp b
  31+ 9606 C2 02 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9609
  33+ 9609              ;   Rutinas:
  34+ 9609
  35+ 9609              Pinta_rapido    ;   1520 t/states.
  36+ 9609
  37+ 9609 E1               pop hl
  38+ 960A
  39+ 960A 1A               ld a,(de)
  40+ 960B AE               xor (hl)
  41+ 960C 77               ld (hl),a
  42+ 960D 2C               inc l
  43+ 960E 1C               inc e
  44+ 960F 1A               ld a,(de)
  45+ 9610 AE               xor (hl)
  46+ 9611 77               ld (hl),a
  47+ 9612 2C               inc l
  48+ 9613 1C               inc e
  49+ 9614 1A               ld a,(de)
  50+ 9615 AE               xor (hl)
  51+ 9616 77               ld (hl),a
  52+ 9617 13               inc de
  53+ 9618
  54+ 9618 E1               pop hl
  55+ 9619
  56+ 9619 1A               ld a,(de)
  57+ 961A AE               xor (hl)
  58+ 961B 77               ld (hl),a
  59+ 961C 2C               inc l
  60+ 961D 1C               inc e
  61+ 961E 1A               ld a,(de)
  62+ 961F AE               xor (hl)
  63+ 9620 77               ld (hl),a
  64+ 9621 2C               inc l
  65+ 9622 1C               inc e
  66+ 9623 1A               ld a,(de)
  67+ 9624 AE               xor (hl)
  68+ 9625 77               ld (hl),a
  69+ 9626 13               inc de
  70+ 9627
  71+ 9627 E1               pop hl
  72+ 9628
  73+ 9628 1A               ld a,(de)
  74+ 9629 AE               xor (hl)
  75+ 962A 77               ld (hl),a
  76+ 962B 2C               inc l
  77+ 962C 1C               inc e
  78+ 962D 1A               ld a,(de)
  79+ 962E AE               xor (hl)
  80+ 962F 77               ld (hl),a
  81+ 9630 2C               inc l
  82+ 9631 1C               inc e
  83+ 9632 1A               ld a,(de)
  84+ 9633 AE               xor (hl)
  85+ 9634 77               ld (hl),a
  86+ 9635 13               inc de
  87+ 9636
  88+ 9636 E1               pop hl
  89+ 9637
  90+ 9637 1A               ld a,(de)
  91+ 9638 AE               xor (hl)
  92+ 9639 77               ld (hl),a
  93+ 963A 2C               inc l
  94+ 963B 1C               inc e
  95+ 963C 1A               ld a,(de)
  96+ 963D AE               xor (hl)
  97+ 963E 77               ld (hl),a
  98+ 963F 2C               inc l
  99+ 9640 1C               inc e
 100+ 9641 1A               ld a,(de)
 101+ 9642 AE               xor (hl)
 102+ 9643 77               ld (hl),a
 103+ 9644 13               inc de
 104+ 9645
 105+ 9645 E1               pop hl
 106+ 9646
 107+ 9646 1A               ld a,(de)
 108+ 9647 AE               xor (hl)
 109+ 9648 77               ld (hl),a
 110+ 9649 2C               inc l
 111+ 964A 1C               inc e
 112+ 964B 1A               ld a,(de)
 113+ 964C AE               xor (hl)
 114+ 964D 77               ld (hl),a
 115+ 964E 2C               inc l
 116+ 964F 1C               inc e
 117+ 9650 1A               ld a,(de)
 118+ 9651 AE               xor (hl)
 119+ 9652 77               ld (hl),a
 120+ 9653 13               inc de
 121+ 9654
 122+ 9654 E1               pop hl
 123+ 9655
 124+ 9655 1A               ld a,(de)
 125+ 9656 AE               xor (hl)
 126+ 9657 77               ld (hl),a
 127+ 9658 2C               inc l
 128+ 9659 1C               inc e
 129+ 965A 1A               ld a,(de)
 130+ 965B AE               xor (hl)
 131+ 965C 77               ld (hl),a
 132+ 965D 2C               inc l
 133+ 965E 1C               inc e
 134+ 965F 1A               ld a,(de)
 135+ 9660 AE               xor (hl)
 136+ 9661 77               ld (hl),a
 137+ 9662 13               inc de
 138+ 9663
 139+ 9663 E1               pop hl
 140+ 9664
 141+ 9664 1A               ld a,(de)
 142+ 9665 AE               xor (hl)
 143+ 9666 77               ld (hl),a
 144+ 9667 2C               inc l
 145+ 9668 1C               inc e
 146+ 9669 1A               ld a,(de)
 147+ 966A AE               xor (hl)
 148+ 966B 77               ld (hl),a
 149+ 966C 2C               inc l
 150+ 966D 1C               inc e
 151+ 966E 1A               ld a,(de)
 152+ 966F AE               xor (hl)
 153+ 9670 77               ld (hl),a
 154+ 9671 13               inc de
 155+ 9672
 156+ 9672 E1               pop hl
 157+ 9673
 158+ 9673 1A               ld a,(de)
 159+ 9674 AE               xor (hl)
 160+ 9675 77               ld (hl),a
 161+ 9676 2C               inc l
 162+ 9677 1C               inc e
 163+ 9678 1A               ld a,(de)
 164+ 9679 AE               xor (hl)
 165+ 967A 77               ld (hl),a
 166+ 967B 2C               inc l
 167+ 967C 1C               inc e
 168+ 967D 1A               ld a,(de)
 169+ 967E AE               xor (hl)
 170+ 967F 77               ld (hl),a
 171+ 9680 13               inc de
 172+ 9681
 173+ 9681 E1               pop hl
 174+ 9682
 175+ 9682 1A               ld a,(de)
 176+ 9683 AE               xor (hl)
 177+ 9684 77               ld (hl),a
 178+ 9685 2C               inc l
 179+ 9686 1C               inc e
 180+ 9687 1A               ld a,(de)
 181+ 9688 AE               xor (hl)
 182+ 9689 77               ld (hl),a
 183+ 968A 2C               inc l
 184+ 968B 1C               inc e
 185+ 968C 1A               ld a,(de)
 186+ 968D AE               xor (hl)
 187+ 968E 77               ld (hl),a
 188+ 968F 13               inc de
 189+ 9690
 190+ 9690 E1               pop hl
 191+ 9691
 192+ 9691 1A               ld a,(de)
 193+ 9692 AE               xor (hl)
 194+ 9693 77               ld (hl),a
 195+ 9694 2C               inc l
 196+ 9695 1C               inc e
 197+ 9696 1A               ld a,(de)
 198+ 9697 AE               xor (hl)
 199+ 9698 77               ld (hl),a
 200+ 9699 2C               inc l
 201+ 969A 1C               inc e
 202+ 969B 1A               ld a,(de)
 203+ 969C AE               xor (hl)
 204+ 969D 77               ld (hl),a
 205+ 969E 13               inc de
 206+ 969F
 207+ 969F E1               pop hl
 208+ 96A0
 209+ 96A0 1A               ld a,(de)
 210+ 96A1 AE               xor (hl)
 211+ 96A2 77               ld (hl),a
 212+ 96A3 2C               inc l
 213+ 96A4 1C               inc e
 214+ 96A5 1A               ld a,(de)
 215+ 96A6 AE               xor (hl)
 216+ 96A7 77               ld (hl),a
 217+ 96A8 2C               inc l
 218+ 96A9 1C               inc e
 219+ 96AA 1A               ld a,(de)
 220+ 96AB AE               xor (hl)
 221+ 96AC 77               ld (hl),a
 222+ 96AD 13               inc de
 223+ 96AE
 224+ 96AE E1               pop hl
 225+ 96AF
 226+ 96AF 1A               ld a,(de)
 227+ 96B0 AE               xor (hl)
 228+ 96B1 77               ld (hl),a
 229+ 96B2 2C               inc l
 230+ 96B3 1C               inc e
 231+ 96B4 1A               ld a,(de)
 232+ 96B5 AE               xor (hl)
 233+ 96B6 77               ld (hl),a
 234+ 96B7 2C               inc l
 235+ 96B8 1C               inc e
 236+ 96B9 1A               ld a,(de)
 237+ 96BA AE               xor (hl)
 238+ 96BB 77               ld (hl),a
 239+ 96BC 13               inc de
 240+ 96BD
 241+ 96BD E1               pop hl
 242+ 96BE
 243+ 96BE 1A               ld a,(de)
 244+ 96BF AE               xor (hl)
 245+ 96C0 77               ld (hl),a
 246+ 96C1 2C               inc l
 247+ 96C2 1C               inc e
 248+ 96C3 1A               ld a,(de)
 249+ 96C4 AE               xor (hl)
 250+ 96C5 77               ld (hl),a
 251+ 96C6 2C               inc l
 252+ 96C7 1C               inc e
 253+ 96C8 1A               ld a,(de)
 254+ 96C9 AE               xor (hl)
 255+ 96CA 77               ld (hl),a
 256+ 96CB 13               inc de
 257+ 96CC
 258+ 96CC E1               pop hl
 259+ 96CD
 260+ 96CD 1A               ld a,(de)
 261+ 96CE AE               xor (hl)
 262+ 96CF 77               ld (hl),a
 263+ 96D0 2C               inc l
 264+ 96D1 1C               inc e
 265+ 96D2 1A               ld a,(de)
 266+ 96D3 AE               xor (hl)
 267+ 96D4 77               ld (hl),a
 268+ 96D5 2C               inc l
 269+ 96D6 1C               inc e
 270+ 96D7 1A               ld a,(de)
 271+ 96D8 AE               xor (hl)
 272+ 96D9 77               ld (hl),a
 273+ 96DA 13               inc de
 274+ 96DB
 275+ 96DB E1               pop hl
 276+ 96DC
 277+ 96DC 1A               ld a,(de)
 278+ 96DD AE               xor (hl)
 279+ 96DE 77               ld (hl),a
 280+ 96DF 2C               inc l
 281+ 96E0 1C               inc e
 282+ 96E1 1A               ld a,(de)
 283+ 96E2 AE               xor (hl)
 284+ 96E3 77               ld (hl),a
 285+ 96E4 2C               inc l
 286+ 96E5 1C               inc e
 287+ 96E6 1A               ld a,(de)
 288+ 96E7 AE               xor (hl)
 289+ 96E8 77               ld (hl),a
 290+ 96E9 13               inc de
 291+ 96EA
 292+ 96EA E1               pop hl
 293+ 96EB
 294+ 96EB 1A               ld a,(de)
 295+ 96EC AE               xor (hl)
 296+ 96ED 77               ld (hl),a
 297+ 96EE 2C               inc l
 298+ 96EF 1C               inc e
 299+ 96F0 1A               ld a,(de)
 300+ 96F1 AE               xor (hl)
 301+ 96F2 77               ld (hl),a
 302+ 96F3 2C               inc l
 303+ 96F4 1C               inc e
 304+ 96F5 1A               ld a,(de)
 305+ 96F6 AE               xor (hl)
 306+ 96F7 77               ld (hl),a
 307+ 96F8 13               inc de
 308+ 96F9
 309+ 96F9 ED 73 25 8C      ld (Scanlines_album_SP),sp
 310+ 96FD ED 7B 03 8C      ld sp,(Stack)
 311+ 9701 C9               ret
 312+ 9702
 313+ 9702              Pinta_lento
 314+ 9702
 315+ 9702 E1           1 pop hl
 316+ 9703
 317+ 9703 1A               ld a,(de)
 318+ 9704 AE               xor (hl)
 319+ 9705 77               ld (hl),a
 320+ 9706 2C               inc l
 321+ 9707 1C               inc e
 322+ 9708 1A               ld a,(de)
 323+ 9709 AE               xor (hl)
 324+ 970A 77               ld (hl),a
 325+ 970B 2C               inc l
 326+ 970C 1C               inc e
 327+ 970D 1A               ld a,(de)
 328+ 970E AE               xor (hl)
 329+ 970F 77               ld (hl),a
 330+ 9710 13               inc de
 331+ 9711
 332+ 9711 10 EF            djnz 1B
 333+ 9713
 334+ 9713 ED 73 25 8C      ld (Scanlines_album_SP),sp
 335+ 9717 ED 7B 03 8C      ld sp,(Stack)
 336+ 971B C9               ret
# file closed: Pinta_Sprites.asm
2076  971C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 971C              ; ******************************************************************************************************************************************************************************************
   2+ 971C              ;
   3+ 971C              ; 26/06/23
   4+ 971C              ;
   5+ 971C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 971C
   7+ 971C              Draw
   8+ 971C
   9+ 971C CD C2 99     	call Prepara_draw
  10+ 971F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9720 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9721 28 05        	jr z,2F
  13+ 9723
  14+ 9723 3A D5 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9726 18 0C        	jr 1F
  16+ 9728
  17+ 9728 2A D3 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 972B 22 C6 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 972E CD BA 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9731              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9731
  22+ 9731 CD 61 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9734
  24+ 9734 3A C3 8B     1 ld a,(Ctrl_0)
  25+ 9737 CB 6F        	bit 5,a
  26+ 9739 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 973B
  28+ 973B CD 50 97     	call Comprueba_limite_horizontal
  29+ 973E CD E0 97     	call Comprueba_limite_vertical
  30+ 9741
  31+ 9741              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9741              ; -----------------------
  33+ 9741              ; -----------------------
  34+ 9741              ; -----------------------
  35+ 9741
  36+ 9741 CD 36 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9744 CD 6D 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9747
  39+ 9747 3A C3 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 974A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 974C 32 C3 8B     	ld (Ctrl_0),a
  42+ 974F
  43+ 974F C9           	ret
  44+ 9750
  45+ 9750              ; *******************************************************************************************************************************************************************************************
  46+ 9750              ;	21/01/23
  47+ 9750              ;
  48+ 9750              ; 	Comprueba_limite_horizontal.
  49+ 9750              ;
  50+ 9750              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9750              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9750              ;
  53+ 9750              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9750              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9750              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9750              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9750
  58+ 9750
  59+ 9750
  60+ 9750 3A C3 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9753 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9755 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9757 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9759 32 C3 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 975C 18 09            jr 6F
  66+ 975E CB 5F        1 bit 3,a
  67+ 9760 28 0A            jr z,2F
  68+ 9762 E6 F7            and $f7
  69+ 9764 32 C3 8B         ld (Ctrl_0),a
  70+ 9767 CD BA 98     6 call Inicializacion
  71+ 976A 18 5B            jr 5F
  72+ 976C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 976D
  74+ 976D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 976D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 976D
  77+ 976D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 976E 2A D7 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9771 CD B6 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9774 67           	ld h,a
  81+ 9775 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9776 CD B6 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9779 67           	ld h,a
  84+ 977A A7           	and a
  85+ 977B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 977D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 977E 3A D5 8B     	ld a,(Cuad_objeto)
  88+ 9781 FE 02        	cp 2
  89+ 9783 38 1E        	jr c,3F
  90+ 9785 28 1C        	jr z,3F
  91+ 9787 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9788 28 23            jr z,7F
  93+ 978A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 978C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 978E E1           	pop hl
  96+ 978F
  97+ 978F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 978F              ; _para indicar con E="2" en caso necesario.
  99+ 978F
 100+ 978F E5               push hl
 101+ 9790 C5               push bc
 102+ 9791 CD B6 94     	call calcula_tercio
 103+ 9794 FE 01        	cp 1
 104+ 9796 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9798 CD C8 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 979B 28 26            jr z,9F
 107+ 979D 38 24            jr c,9F
 108+ 979F 1E 00        11 ld e,0
 109+ 97A1 18 22            jr 8F
 110+ 97A3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97A4 28 07        	jr z, 7F
 112+ 97A6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97A8 1E 00         	ld e,0
 114+ 97AA E1           	pop hl
 115+ 97AB 18 04        	jr 4F
 116+ 97AD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97AF 18 15            jr 10F
 118+ 97B1
 119+ 97B1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97B1              ; _para indicar con E="2" en caso necesario.
 121+ 97B1
 122+ 97B1 E5           4 push hl
 123+ 97B2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97B3 CD B6 94     	call calcula_tercio
 125+ 97B6 FE 01        	cp 1
 126+ 97B8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97BA CD C8 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97BD 28 04            jr z,9F
 129+ 97BF 30 02            jr nc,9F
 130+ 97C1 18 02        	jr 8F
 131+ 97C3 1E 02        9 ld e,2
 132+ 97C5 C1           8 pop bc
 133+ 97C6 E1           10 pop hl
 134+ 97C7 C9           5 ret
 135+ 97C8
 136+ 97C8              ; --------------------
 137+ 97C8              ;
 138+ 97C8              ; 25/08/22
 139+ 97C8
 140+ 97C8 CD B6 94     Comprueba_centro call calcula_tercio
 141+ 97CB 67               ld h,a
 142+ 97CC 08           	ex af,af
 143+ 97CD FE 02        	cp 2
 144+ 97CF 38 07        	jr c,1F
 145+ 97D1 28 05        	jr z,1F
 146+ 97D3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97D6 18 03        	jr 2F
 148+ 97D8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97DB 08           2 ex af,af
 150+ 97DC A7               and a
 151+ 97DD ED 42            sbc hl,bc
 152+ 97DF C9               ret
 153+ 97E0
 154+ 97E0              ; *********************************************************************************************************************************************************************************************
 155+ 97E0              ;
 156+ 97E0              ;   16/8/22
 157+ 97E0              ;
 158+ 97E0              ;	Comprueba_limite_vertical
 159+ 97E0              ;
 160+ 97E0              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97E0              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97E0              ;
 163+ 97E0
 164+ 97E0 2A C6 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97E3 7D           	ld a,l
 166+ 97E4 E6 1F        	and $1F
 167+ 97E6 57           	ld d,a
 168+ 97E7 3A D9 8B     	ld a,(Limite_vertical)
 169+ 97EA BA           	cp d 											; Límite - Posición.
 170+ 97EB 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97EC 3A D5 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97EF CB 47        	bit 0,a
 173+ 97F1 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97F3
 175+ 97F3              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97F3
 177+ 97F3 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97F4 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97F6
 180+ 97F6              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97F6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97F6
 183+ 97F6 3A B7 8B         ld a,(Coordenada_X)
 184+ 97F9 16 0F            ld d,Centro_izquierda
 185+ 97FB A7               and a
 186+ 97FC 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97FD 28 1E            jr z,3F
 188+ 97FF 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9801              ;                                                    ; _salimos sin modificar nada.
 190+ 9801 18 0E            jr 2F
 191+ 9803 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9804 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9806
 194+ 9806              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9806              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9806
 197+ 9806 3A B7 8B         ld a,(Coordenada_X)
 198+ 9809 16 10            ld d,Centro_derecha
 199+ 980B A7               and a
 200+ 980C 92               sub d
 201+ 980D 28 0E            jr z,3F
 202+ 980F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9811              ;                                                    ; _salimos sin modificar nada.
 204+ 9811 CB 43        2 bit 0,e
 205+ 9813 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9815 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9816 CD AA 98         call Modificaccionne
 208+ 9819 C1           	pop bc
 209+ 981A CD BA 98         call Inicializacion
 210+ 981D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 981E
 212+ 981E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 981E
 214+ 981E C5           4 push bc
 215+ 981F 01 C5 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9822 0A           	ld a,(bc)
 217+ 9823 3D           	dec a
 218+ 9824 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9825 7D           	ld a,l
 220+ 9826 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9827 CB 47        	bit 0,a
 222+ 9829 28 03        	jr z,5F
 223+ 982B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 982C 18 2E        	jr 7F
 225+ 982E
 226+ 982E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 982E
 228+ 982E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 982F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9830 3A C3 8B     	ld a,(Ctrl_0)
 231+ 9833 CB 4F        	bit 1,a
 232+ 9835 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9837 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9838
 235+ 9838              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9838
 237+ 9838 1C               inc e
 238+ 9839 1D               dec e
 239+ 983A 20 07            jr nz,12F
 240+ 983C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 983D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 983E 22 C6 8B     	ld (Posicion_actual),hl
 243+ 9841 18 44        13 jr 9F
 244+ 9843 CB 43        12 bit 0,e
 245+ 9845 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9847              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9847 C1           	pop bc
 248+ 9848 18 D3        	jr 3B
 249+ 984A 80           14 add b
 250+ 984B 6F               ld l,a
 251+ 984C 22 C6 8B     	ld (Posicion_actual),hl
 252+ 984F CD AA 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9852 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9854 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9856 32 C3 8B         ld (Ctrl_0),a
 256+ 9859 F1           	pop af
 257+ 985A 18 2B        	jr 9F
 258+ 985C
 259+ 985C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 985C
 261+ 985C F5           7 push af
 262+ 985D 3A C3 8B     	ld a,(Ctrl_0)
 263+ 9860 CB 47        	bit 0,a
 264+ 9862 20 1D        	jr nz,8F
 265+ 9864 F1           	pop af
 266+ 9865
 267+ 9865              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9865
 269+ 9865 1C           	inc e
 270+ 9866 1D               dec e
 271+ 9867 20 07            jr nz,10F
 272+ 9869 90           	sub b
 273+ 986A 6F               ld l,a
 274+ 986B 22 C6 8B     	ld (Posicion_actual),hl
 275+ 986E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9870              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9870 CB 43        10 bit 0,e
 278+ 9872 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9874              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9874 C1           	pop bc
 281+ 9875 18 A6        	jr 3B
 282+ 9877 90           16 sub b
 283+ 9878 6F               ld l,a
 284+ 9879 22 C6 8B     	ld (Posicion_actual),hl
 285+ 987C CD AA 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 987F 18 06            jr 9F
 287+ 9881 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9883 32 C3 8B         ld (Ctrl_0),a
 289+ 9886 F1           	pop af
 290+ 9887 C1           9 pop bc
 291+ 9888 1E 00        	ld e,0
 292+ 988A CD BA 98         call Inicializacion
 293+ 988D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 988E 08           	ex af,af
 295+ 988F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9890 18 8B            jr 3B
 297+ 9892
 298+ 9892              ; --------------------
 299+ 9892
 300+ 9892 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9894 CD DD 99     1 call PreviousScan
 302+ 9897 10 FB            djnz 1B
 303+ 9899 22 C6 8B     	ld (Posicion_actual),hl
 304+ 989C AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 989D C9           	ret
 306+ 989E
 307+ 989E              ; --------------------
 308+ 989E
 309+ 989E 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98A0 CD CE 99     1 call NextScan
 311+ 98A3 10 FB            djnz 1B
 312+ 98A5 22 C6 8B     	ld (Posicion_actual),hl
 313+ 98A8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98A9 C9           	ret
 315+ 98AA
 316+ 98AA              ; --------------------
 317+ 98AA              ;
 318+ 98AA              ;	22/01/23
 319+ 98AA              ;
 320+ 98AA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98AA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98AA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98AA
 324+ 98AA
 325+ 98AA              Modificaccionne
 326+ 98AA
 327+ 98AA 3A D5 8B     	ld a,(Cuad_objeto)
 328+ 98AD FE 02        	cp 2
 329+ 98AF CC 92 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98B2 DC 92 98         call c,Modifica_Pos_actual
 331+ 98B5 C8           	ret z
 332+ 98B6 CD 9E 98         call Modifica_Pos_actual2
 333+ 98B9 C9               ret
 334+ 98BA
 335+ 98BA              ; *************************************************************************************************************************************************************************************************
 336+ 98BA              ;
 337+ 98BA              ;	13/8/22
 338+ 98BA              ;
 339+ 98BA              ;	Inicializacion
 340+ 98BA              ;
 341+ 98BA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98BA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98BA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98BA              ;
 345+ 98BA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98BA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98BA              ;	_ desaparece/aparece.
 348+ 98BA
 349+ 98BA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98BA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98BA              ;
 352+ 98BA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98BA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98BA              ; 		   [E] ="0"
 355+ 98BA
 356+ 98BA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98BA
 358+ 98BA CD B6 94     Inicializacion call calcula_tercio
 359+ 98BD 28 36        	jr z,primit
 360+ 98BF E6 02        	and 2
 361+ 98C1 20 07        	jr nz,segmit
 362+ 98C3 7D           	ld a,l
 363+ 98C4 FE 7F        	cp $7f
 364+ 98C6 38 2D        	jr c,primit
 365+ 98C8 28 2B        	jr z,primit
 366+ 98CA CD 30 99     segmit call column
 367+ 98CD 38 13        	jr c,tercuad
 368+ 98CF 3E 04        cuarcuad ld a,4
 369+ 98D1 32 D5 8B     	ld (Cuad_objeto),a
 370+ 98D4 21 20 48     	ld hl,$4820
 371+ 98D7 22 D7 8B     	ld (Limite_horizontal),hl
 372+ 98DA 21 D9 8B     	ld hl,Limite_vertical
 373+ 98DD 36 0D        	ld (hl),$0d
 374+ 98DF 08           	ex af,af
 375+ 98E0 18 3C        	jr 1F
 376+ 98E2              tercuad
 377+ 98E2 3E 03        	ld a,3
 378+ 98E4 32 D5 8B     	ld (Cuad_objeto),a
 379+ 98E7 21 20 48     	ld hl,$4820
 380+ 98EA 22 D7 8B     	ld (Limite_horizontal),hl
 381+ 98ED 21 D9 8B     	ld hl,Limite_vertical
 382+ 98F0 36 12        	ld (hl),$12
 383+ 98F2 08           	ex af,af
 384+ 98F3 18 29        	jr 1F
 385+ 98F5 CD 30 99     primit call column
 386+ 98F8 38 13        	jr c, primcuad
 387+ 98FA              segcuad
 388+ 98FA 3E 02        	ld a,2
 389+ 98FC 32 D5 8B     	ld (Cuad_objeto),a
 390+ 98FF 21 C0 4F     	ld hl,$4fc0
 391+ 9902 22 D7 8B     	ld (Limite_horizontal),hl
 392+ 9905 21 D9 8B     	ld hl,Limite_vertical
 393+ 9908 36 0D        	ld (hl),$0d
 394+ 990A 08           	ex af,af
 395+ 990B 18 11        	jr 1F
 396+ 990D              primcuad
 397+ 990D 3E 01        	ld a,1
 398+ 990F 32 D5 8B     	ld (Cuad_objeto),a
 399+ 9912 21 C0 4F     	ld hl,$4fc0
 400+ 9915 22 D7 8B     	ld (Limite_horizontal),hl
 401+ 9918 21 D9 8B     	ld hl,Limite_vertical
 402+ 991B 36 12        	ld (hl),$12
 403+ 991D 08           	ex af,af
 404+ 991E
 405+ 991E C5           1 push bc
 406+ 991F E5           	push hl
 407+ 9920 D5           	push de
 408+ 9921
 409+ 9921 2A C6 8B     	ld hl,(Posicion_actual)
 410+ 9924 CD D4 94     	call Genera_coordenadas
 411+ 9927
 412+ 9927 D1           	pop de
 413+ 9928 E1           	pop hl
 414+ 9929 C1           	pop bc
 415+ 992A
 416+ 992A 21 C3 8B     	ld hl,Ctrl_0
 417+ 992D CB EE        	set 5,(hl)
 418+ 992F C9           	ret
 419+ 9930
 420+ 9930              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9930
 422+ 9930              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9930              ;
 424+ 9930              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9930
 426+ 9930 7D           column ld a,l
 427+ 9931 E6 1F        	and $1f
 428+ 9933 FE 10         	cp $10
 429+ 9935 C9            	ret
 430+ 9936
 431+ 9936              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9936              ;
 433+ 9936              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9936              ;
 435+ 9936              ; 14/12/22
 436+ 9936              ;
 437+ 9936              ;	Modifica: A y BC.
 438+ 9936
 439+ 9936 3A D5 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9939 E6 01        	and 1
 441+ 993B 28 17        	jr z,1F
 442+ 993D
 443+ 993D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 993D
 445+ 993D 3A B7 8B     	ld a,(Coordenada_X)
 446+ 9940 47           	ld b,a
 447+ 9941 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9942 79           	ld a,c
 449+ 9943 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9944 38 08        	jr c,2F
 451+ 9946 47           	ld b,a
 452+ 9947 79           	ld a,c
 453+ 9948 90           	sub b
 454+ 9949 32 D6 8B     	ld (Columnas),a
 455+ 994C 18 1B        	jr 4F
 456+ 994E 79           2 ld a,c
 457+ 994F 32 D6 8B     	ld (Columnas),a
 458+ 9952 18 15        	jr 4F
 459+ 9954
 460+ 9954              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9954
 462+ 9954 3A B7 8B     1 ld a,(Coordenada_X)
 463+ 9957 81           	add c
 464+ 9958 3D           	dec a
 465+ 9959 D6 1F        	sub $1f
 466+ 995B 38 08        	jr c,3F
 467+ 995D 47           	ld b,a
 468+ 995E 79           	ld a,c
 469+ 995F 90           	sub b
 470+ 9960 32 D6 8B     	ld (Columnas),a
 471+ 9963 18 04        	jr 4F
 472+ 9965 79           3 ld a,c
 473+ 9966 32 D6 8B     	ld (Columnas),a
 474+ 9969 D9           4 exx
 475+ 996A 4F           	ld c,a
 476+ 996B D9           	exx
 477+ 996C C9            ret
 478+ 996D
 479+ 996D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 996D              ;
 481+ 996D              ;   19/7/23
 482+ 996D              ;
 483+ 996D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 996D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 996D              ;
 486+ 996D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 996D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 996D              ;
 489+ 996D              ;	DESTRUYE: HL,B Y A.
 490+ 996D
 491+ 996D 3A D5 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9970 FE 02        	cp 2
 493+ 9972 38 18        	jr c,1F
 494+ 9974 28 16        	jr z,1F
 495+ 9976 E6 01        	and 1
 496+ 9978 28 0D        	jr z,3F
 497+ 997A
 498+ 997A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 997A
 500+ 997A CD B6 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 997D
 502+ 997D 7D           9 ld a,l
 503+ 997E E6 1F        	and $1f
 504+ 9980 28 2A        	jr z,7F
 505+ 9982 2B           	dec hl
 506+ 9983 10 F8        	djnz 9B
 507+ 9985 18 25        	jr 7F
 508+ 9987
 509+ 9987              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9987
 511+ 9987 2A C6 8B     3 ld hl,(Posicion_actual)
 512+ 998A 18 20        	jr 7F
 513+ 998C
 514+ 998C 28 14        1 jr z,2F
 515+ 998E
 516+ 998E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 998E
 518+ 998E CD B6 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9991
 520+ 9991 7D           4 ld a,l
 521+ 9992 E6 1F        	and $1f
 522+ 9994 28 03        	jr z,6F
 523+ 9996 2B           	dec hl
 524+ 9997 10 F8        	djnz 4B
 525+ 9999 06 0F        6 ld b,15
 526+ 999B CD DD 99     5 call PreviousScan
 527+ 999E 10 FB        	djnz 5B
 528+ 99A0 18 0A        	jr 7F
 529+ 99A2
 530+ 99A2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99A2
 532+ 99A2 CD B6 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99A5 06 0F        	ld b,15
 534+ 99A7 CD DD 99     8 call PreviousScan
 535+ 99AA 10 FB        	djnz 8B
 536+ 99AC
 537+ 99AC E5           7 push hl
 538+ 99AD DD E1        	pop ix
 539+ 99AF
 540+ 99AF 2A C8 8B     	ld hl,(Puntero_objeto)
 541+ 99B2 E5           	push hl
 542+ 99B3 FD E1        	pop iy
 543+ 99B5
 544+ 99B5 C9           	ret
 545+ 99B6
 546+ 99B6              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99B6              ;
 548+ 99B6              ;	2/1/23
 549+ 99B6              ;
 550+ 99B6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99B6              ;
 552+ 99B6              ;	Tras esta rutina tenemos:
 553+ 99B6              ;
 554+ 99B6              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99B6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99B6              ;
 557+ 99B6              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99B6
 559+ 99B6 2A C6 8B     Operandos ld hl,(Posicion_actual)
 560+ 99B9 3A D6 8B     	ld a,(Columnas)
 561+ 99BC 3D           	dec a
 562+ 99BD 20 01        	jr nz,1F
 563+ 99BF 3C           	inc a
 564+ 99C0 47           1 ld b,a
 565+ 99C1 C9           	ret
 566+ 99C2
 567+ 99C2              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99C2              ;
 569+ 99C2              ;	Prepara_draw
 570+ 99C2              ;
 571+ 99C2              ;	Es una rutina de carga.
 572+ 99C2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99C2              ;
 574+ 99C2              ;	FUNCIONAMIENTO:
 575+ 99C2              ;
 576+ 99C2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99C2              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99C2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99C2              ;
 580+ 99C2              ;	DESTRUYE:
 581+ 99C2              ;
 582+ 99C2              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99C2
 584+ 99C2 21 C4 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99C5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99C6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99C7 4E           	ld c,(hl)
 588+ 99C8 2A C6 8B     	ld hl,(Posicion_actual)
 589+ 99CB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99CD C9           	ret
 591+ 99CE
 592+ 99CE              ;----------------------------------------------------------------------------------------------------------------
 593+ 99CE              ;
 594+ 99CE              ;	5/08/22
 595+ 99CE              ;
 596+ 99CE              ;   NextScan.
 597+ 99CE              ;
 598+ 99CE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99CE              ;
 600+ 99CE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99CE              ;
 602+ 99CE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99CE              ;
 604+ 99CE              ;       DESTRUIDOS: AF y HL !!!
 605+ 99CE              ;
 606+ 99CE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99CE              ;
 608+ 99CE
 609+ 99CE 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99CF 7C               ld a,h
 611+ 99D0 E6 07            and 7
 612+ 99D2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99D3
 614+ 99D3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99D4 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99D6 6F               ld l,a
 617+ 99D7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99D8
 619+ 99D8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99D9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99DB 67               ld h,a
 622+ 99DC C9               ret
 623+ 99DD
 624+ 99DD              ;----------------------------------------------------------------------------------------------------------------
 625+ 99DD              ;
 626+ 99DD              ;	5/08/22
 627+ 99DD              ;
 628+ 99DD              ;   PreviousScan.
 629+ 99DD              ;
 630+ 99DD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99DD              ;
 632+ 99DD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99DD              ;
 634+ 99DD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99DD              ;
 636+ 99DD              ;       DESTRUIDOS: AF y HL !!!
 637+ 99DD              ;
 638+ 99DD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99DD              ;
 640+ 99DD
 641+ 99DD 7C           PreviousScan ld a,h
 642+ 99DE 25               dec h               ; Dec H.
 643+ 99DF E6 07            and 7
 644+ 99E1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99E2
 646+ 99E2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99E3 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99E5 6F               ld l,a
 649+ 99E6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99E7
 651+ 99E7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99E8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99EA 67               ld h,a
 654+ 99EB C9               ret
 655+ 99EC
 656+ 99EC
 657+ 99EC
 658+ 99EC
 659+ 99EC
 660+ 99EC
 661+ 99EC
 662+ 99EC
 663+ 99EC
 664+ 99EC
 665+ 99EC
 666+ 99EC
# file closed: Draw_XOR.asm
2077  99EC              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99EC
   2+ 99EC              ; ******************************************************************************************************************************************************************************************
   3+ 99EC              ;
   4+ 99EC              ;   20/05/23
   5+ 99EC              ;
   6+ 99EC              ;	Recompone_posicion_inicio
   7+ 99EC              ;
   8+ 99EC              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99EC              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99EC              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99EC              ;	_ a una u otra rutina.
  12+ 99EC
  13+ 99EC              Recompone_posicion_inicio
  14+ 99EC
  15+ 99EC 2A D3 8B     	ld hl,(Posicion_inicio)
  16+ 99EF 7D           	ld a,l
  17+ 99F0 E6 1F        	and $1f
  18+ 99F2 28 16        	jr z,1F
  19+ 99F4
  20+ 99F4 FE 1F        	cp $1f
  21+ 99F6 28 0D        	jr z,3F
  22+ 99F8
  23+ 99F8 21 C2 8B     	ld hl,Ctrl_2
  24+ 99FB CB C6        	set 0,(hl)
  25+ 99FD 2A C8 8B     	ld hl,(Puntero_objeto)
  26+ 9A00 22 F4 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A03 18 08        	jr 2F
  28+ 9A05
  29+ 9A05 CD B3 9B     3 call Mov_left
  30+ 9A08 18 03        	jr 2F
  31+ 9A0A
  32+ 9A0A CD 90 9A     1 call Mov_right
  33+ 9A0D 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A10 22 C8 8B     	ld (Puntero_objeto),hl
  35+ 9A13 C9           	ret
  36+ 9A14
  37+ 9A14              ; ******************************************************************************************************************************************************************************************
  38+ 9A14              ;
  39+ 9A14              ;   27/05/23
  40+ 9A14              ;
  41+ 9A14              ;	Mov_down
  42+ 9A14              ;
  43+ 9A14              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A14              ;
  45+ 9A14              ;
  46+ 9A14              Mov_down
  47+ 9A14
  48+ 9A14 CD 7E 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A17              ;																	; _ repone (Puntero_objeto).
  50+ 9A17 21 C3 8B     	ld hl,Ctrl_0
  51+ 9A1A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A1C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A1C              ; 																	; _ en el caso de que no lo haya.
  54+ 9A1C 3A DE 8B     	ld a,(Vel_down)
  55+ 9A1F 47           	ld b,a
  56+ 9A20 2A C6 8B         ld hl,(Posicion_actual)
  57+ 9A23 CD B6 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A26 E6 02        	and 2
  59+ 9A28 28 17        	jr z,1F
  60+ 9A2A
  61+ 9A2A              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A2A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A2A
  64+ 9A2A 7C           	ld a,h
  65+ 9A2B FE 57        	cp $57
  66+ 9A2D 20 12        	jr nz,1F
  67+ 9A2F
  68+ 9A2F 7D           	ld a,l
  69+ 9A30 C6 20        	add $20
  70+ 9A32 30 0D        	jr nc,1F
  71+ 9A34
  72+ 9A34              ; ------------------------------
  73+ 9A34              ;
  74+ 9A34              ;	12/01/24
  75+ 9A34
  76+ 9A34              ;	call Reaparece_arriba
  77+ 9A34 CD 40 9D     	call Reinicio
  78+ 9A37
  79+ 9A37              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A37
  81+ 9A37 3A 2B 8C     	ld a,(Ctrl_3)
  82+ 9A3A CB CF        	set 1,a
  83+ 9A3C 32 2B 8C     	ld (Ctrl_3),a
  84+ 9A3F
  85+ 9A3F 18 08        	jr 3F
  86+ 9A41              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A41              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A41              ; ------------------------------
  89+ 9A41
  90+ 9A41 CD CE 99     1 call NextScan
  91+ 9A44 22 C6 8B     	ld (Posicion_actual),hl
  92+ 9A47 10 DA            djnz 2B
  93+ 9A49 CD D4 94     3 call Genera_coordenadas
  94+ 9A4C C9           	ret
  95+ 9A4D
  96+ 9A4D              ; ******************************************************************************************************************************************************************************************
  97+ 9A4D              ;
  98+ 9A4D              ;   27/05/23
  99+ 9A4D              ;
 100+ 9A4D              ;	Mov_up
 101+ 9A4D              ;
 102+ 9A4D              ; 	Mueve el Sprite hacia arriba.
 103+ 9A4D              ;
 104+ 9A4D              ;
 105+ 9A4D              Mov_up
 106+ 9A4D
 107+ 9A4D CD 7E 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A50              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A50 21 C3 8B     	ld hl,Ctrl_0
 110+ 9A53 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A55              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A55              ; 																		; _ en el caso de que no lo haya.
 113+ 9A55 3A DD 8B     	ld a,(Vel_up)
 114+ 9A58 47           	ld b,a
 115+ 9A59 2A C6 8B     	ld hl,(Posicion_actual)
 116+ 9A5C CD B6 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A5F A7           	and a
 118+ 9A60 20 10        	jr nz,1F
 119+ 9A62
 120+ 9A62              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A62              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A62
 123+ 9A62 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A63 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A65 20 0B            jr nz,1F
 126+ 9A67 7D               ld a,l
 127+ 9A68 D6 20            sub $20
 128+ 9A6A 30 06            jr nc,1F
 129+ 9A6C 25               dec h
 130+ 9A6D
 131+ 9A6D              ; -----------------------------
 132+ 9A6D CD 21 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A70              ;	call Reinicio
 134+ 9A70              ; -----------------------------
 135+ 9A70
 136+ 9A70 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A72 CD DD 99     1 call PreviousScan
 138+ 9A75 22 C6 8B     	ld (Posicion_actual),hl
 139+ 9A78 10 E2            djnz 3B
 140+ 9A7A CD D4 94     2 call Genera_coordenadas
 141+ 9A7D C9           	ret
 142+ 9A7E
 143+ 9A7E              ; -----------------------------
 144+ 9A7E              ;
 145+ 9A7E              ;	27/5/23
 146+ 9A7E              ;
 147+ 9A7E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A7E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A7E              ;
 150+ 9A7E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A7E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A7E              ;
 153+ 9A7E              ;	Modifica: A y (Puntero_objeto).
 154+ 9A7E
 155+ 9A7E 3A C2 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A81 CB 47        	bit 0,a
 157+ 9A83 C8           	ret z
 158+ 9A84 CB 87        	res 0,a
 159+ 9A86 32 C2 8B     	ld (Ctrl_2),a
 160+ 9A89 2A F4 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A8C 22 C8 8B     	ld (Puntero_objeto),hl
 162+ 9A8F C9           	ret
 163+ 9A90
 164+ 9A90              ; ******************************************************************************************************************************************************************************************
 165+ 9A90              ;
 166+ 9A90              ;	19/10/22
 167+ 9A90              ;
 168+ 9A90              ;	Mov_right.
 169+ 9A90              ;
 170+ 9A90              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A90              ;
 172+ 9A90
 173+ 9A90 3A C3 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A93 CB 77        	bit 6,a
 175+ 9A95 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A97
 177+ 9A97 CD CF 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A9A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A9B
 180+ 9A9B 21 C3 8B     	ld hl,Ctrl_0
 181+ 9A9E CB E6        	set 4,(hl)
 182+ 9AA0 18 52        	jr 8F
 183+ 9AA2
 184+ 9AA2 21 C3 8B     10 ld hl,Ctrl_0
 185+ 9AA5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AA7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AA7              ; 																	; _ en el caso de que no lo haya.
 188+ 9AA7 3A B7 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AAA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AAC 20 46        	jr nz,8F
 191+ 9AAE
 192+ 9AAE 3A CA 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AB1 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AB2 28 40        	jr z,8F
 195+ 9AB4
 196+ 9AB4              ; ---------- ---------- ----------
 197+ 9AB4              ;
 198+ 9AB4              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AB4
 200+ 9AB4 3A DC 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AB7 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AB9 28 11        	jr z,1F
 203+ 9ABB 38 06        	jr c,6F
 204+ 9ABD FE 04        	cp 4
 205+ 9ABF 28 14        	jr z,7F
 206+ 9AC1 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AC3
 208+ 9AC3              ; ---------- ---------- ----------
 209+ 9AC3              ;
 210+ 9AC3              ; Perfiles de velocidad
 211+ 9AC3              ;
 212+ 9AC3
 213+ 9AC3 3A CA 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AC6 FE FE        	cp $fe
 215+ 9AC8 20 2A        	jr nz,8F
 216+ 9ACA 18 10        	jr 3F
 217+ 9ACC 3A CA 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ACF FE FD        	cp $fd
 219+ 9AD1 20 21        	jr nz,8F
 220+ 9AD3 18 07        	jr 3F
 221+ 9AD5 3A CA 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AD8 FE FB        	cp $fb
 223+ 9ADA 20 18        	jr nz,8F
 224+ 9ADC
 225+ 9ADC              ; ---------- ---------- ----------
 226+ 9ADC
 227+ 9ADC              3
 228+ 9ADC CD 0F 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9ADF              ;	call Reinicio
 230+ 9ADF
 231+ 9ADF              ; ---------- ---------- ----------
 232+ 9ADF              ;
 233+ 9ADF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9ADF
 235+ 9ADF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AE1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AE2 CD FB 9A     	call DESPLZ_DER
 238+ 9AE5 C1           	pop bc
 239+ 9AE6 10 F9        	djnz 5B
 240+ 9AE8 2A C6 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AEB 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AEC 22 C6 8B     	ld (Posicion_actual),hl
 243+ 9AEF CD D4 94     	call Genera_coordenadas
 244+ 9AF2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AF4
 246+ 9AF4              ; ---------- ---------- ----------
 247+ 9AF4
 248+ 9AF4 2A C6 8B     8 ld hl,(Posicion_actual)
 249+ 9AF7 CD FB 9A     	call DESPLZ_DER
 250+ 9AFA C9           2 ret
 251+ 9AFB
 252+ 9AFB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AFB              ;
 254+ 9AFB              ;	22/9/22
 255+ 9AFB              ;
 256+ 9AFB
 257+ 9AFB CD 0A 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9AFE CD 56 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B01 CD 7F 9B         call Ciclo_completo
 260+ 9B04 21 C3 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B07 CB FE        	set 7,(hl)
 262+ 9B09 C9           	ret
 263+ 9B0A
 264+ 9B0A              ; ******************************************************************************************************************************************************************************************
 265+ 9B0A              ;	15/02/23
 266+ 9B0A              ;
 267+ 9B0A
 268+ 9B0A 3A DC 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B0D 47           	ld b,a
 270+ 9B0E 2A CF 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B11 23           1 inc hl
 272+ 9B12 23           	inc hl
 273+ 9B13 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B15 22 CF 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B18 CD B5 90     	call Extrae_address
 276+ 9B1B 22 C8 8B     	ld (Puntero_objeto),hl
 277+ 9B1E
 278+ 9B1E              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B1E
 280+ 9B1E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B1E              ; Cuántos movimientos hemos hecho ??
 282+ 9B1E              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B1E
 284+ 9B1E 2A CB 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B21 EB           	ex de,hl
 286+ 9B22 A7           	and a
 287+ 9B23 ED 52        	sbc hl,de
 288+ 9B25 CB 3D        	srl l
 289+ 9B27 3E 08        6 ld a,8
 290+ 9B29 95           	sub l
 291+ 9B2A 30 1E        	jr nc,3F
 292+ 9B2C
 293+ 9B2C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B2C              ; B="0".
 295+ 9B2C
 296+ 9B2C 04           4 inc b
 297+ 9B2D 3C           	inc a
 298+ 9B2E 20 FC        	jr nz,4B
 299+ 9B30 78           	ld a,b
 300+ 9B31 08           	ex af,af
 301+ 9B32 2A CB 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B35 23           5 inc hl
 303+ 9B36 23           	inc hl
 304+ 9B37 10 FC        	djnz 5B
 305+ 9B39 22 CF 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B3C CD B5 90     	call Extrae_address
 307+ 9B3F 22 C8 8B     	ld (Puntero_objeto),hl
 308+ 9B42
 309+ 9B42              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B42              ; _(Posicion_actual).
 311+ 9B42
 312+ 9B42 21 C6 8B     	ld hl,Posicion_actual
 313+ 9B45 34           	inc (hl)
 314+ 9B46 08               ex af,af
 315+ 9B47 6F           	ld l,a
 316+ 9B48 18 DD        	jr 6B
 317+ 9B4A
 318+ 9B4A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B4A
 320+ 9B4A 47           3 ld b,a
 321+ 9B4B 2A CD 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B4E 23           2 inc hl
 323+ 9B4F 23           	inc hl
 324+ 9B50 10 FC        	djnz 2B
 325+ 9B52 22 D1 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B55 C9           8 ret
 327+ 9B56
 328+ 9B56              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B56              ;
 330+ 9B56              ;	24/7/22
 331+ 9B56              ;
 332+ 9B56              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B56              ;
 334+ 9B56              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B56              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B56              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B56
 338+ 9B56 3A CA 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B59 A7           	and a
 340+ 9B5A 20 1F        	jr nz,1F
 341+ 9B5C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B5E 32 CA 8B         ld (CTRL_DESPLZ),a
 343+ 9B61
 344+ 9B61 21 C5 8B     	ld hl,Columns
 345+ 9B64 34           	inc (hl)
 346+ 9B65 3A D5 8B     	ld a,(Cuad_objeto)
 347+ 9B68 E6 01        	and 1
 348+ 9B6A 28 0F        	jr z,1F
 349+ 9B6C 2A C6 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B6F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B70 22 C6 8B     	ld (Posicion_actual),hl
 352+ 9B73 CD D4 94     	call Genera_coordenadas
 353+ 9B76 CD DB 9C     	call Inc_CTRL_DESPLZ
 354+ 9B79 18 03        	jr 2F
 355+ 9B7B CD DB 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B7E C9           2 ret
 357+ 9B7F
 358+ 9B7F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B7F              ;
 360+ 9B7F              ;	24/7/22
 361+ 9B7F              ;
 362+ 9B7F              ;	Ciclo_completo.
 363+ 9B7F              ;
 364+ 9B7F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B7F              ;
 366+ 9B7F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B7F              ; 	Decrementamos (Columns).
 368+ 9B7F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B7F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B7F
 371+ 9B7F
 372+ 9B7F 3A CA 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B82 FE FF        	cp $ff
 374+ 9B84 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B86 E6 F0        	and $f0
 376+ 9B88 20 28        	jr nz,3F
 377+ 9B8A
 378+ 9B8A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B8A
 380+ 9B8A 3A CA 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B8D 47           	ld b,a
 382+ 9B8E 3E F8        	ld a,$f8
 383+ 9B90 80           	add b
 384+ 9B91 32 CA 8B     	ld (CTRL_DESPLZ),a
 385+ 9B94 18 1C        	jr 3F
 386+ 9B96 21 C5 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B99 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B9A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B9B 32 CA 8B     	ld (CTRL_DESPLZ),a
 390+ 9B9E 3A D5 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BA1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BA3 20 0A        	jr nz,2F
 393+ 9BA5 2A C6 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BA8 23           	inc hl
 395+ 9BA9 22 C6 8B     	ld (Posicion_actual),hl
 396+ 9BAC CD D4 94     	call Genera_coordenadas
 397+ 9BAF
 398+ 9BAF              ; Inicia el puntero de Sprite.
 399+ 9BAF
 400+ 9BAF CD CA 90     2 call Inicia_puntero_objeto_der
 401+ 9BB2 C9           3 ret
 402+ 9BB3
 403+ 9BB3              ; ******************************************************************************************************************************************************************************************
 404+ 9BB3              ;
 405+ 9BB3              ;	15/02/23
 406+ 9BB3              ;
 407+ 9BB3              ;	Mov_left.
 408+ 9BB3              ;
 409+ 9BB3              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BB3              ;
 411+ 9BB3              Mov_left
 412+ 9BB3
 413+ 9BB3 21 C3 8B     	ld hl,Ctrl_0
 414+ 9BB6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BB8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BB8              ; 																	; _ en el caso de que no lo haya.
 417+ 9BB8 3A C3 8B     	ld a,(Ctrl_0)
 418+ 9BBB CB 77        	bit 6,a
 419+ 9BBD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BBF
 421+ 9BBF CD D5 9C     	call Stop_Amadeus_left
 422+ 9BC2 C8           	ret z
 423+ 9BC3 20 4A        	jr nz,8F
 424+ 9BC5
 425+ 9BC5 3A B7 8B     11 ld a,(Coordenada_X)
 426+ 9BC8 A7           	and a
 427+ 9BC9 20 44        	jr nz,8F
 428+ 9BCB
 429+ 9BCB 3A CA 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BCE A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BCF 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BD1
 433+ 9BD1              ; ---------- ---------- ----------
 434+ 9BD1
 435+ 9BD1 3A DB 8B     	ld a,(Vel_left)
 436+ 9BD4 FE 02        	cp 2
 437+ 9BD6 28 0F        	jr z,1F
 438+ 9BD8 38 04        	jr c,6F
 439+ 9BDA FE 04        	cp 4
 440+ 9BDC 28 12        	jr z,7F
 441+ 9BDE
 442+ 9BDE              ; ---------- ---------- ----------
 443+ 9BDE
 444+ 9BDE 3A CA 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BE1 FE F8        	cp $f8
 446+ 9BE3 20 2A        	jr nz,8F
 447+ 9BE5 18 10        	jr 4F
 448+ 9BE7 3A CA 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BEA FE F9        	cp $f9
 450+ 9BEC 20 21        	jr nz,8F
 451+ 9BEE 18 07        	jr 4F
 452+ 9BF0 3A CA 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BF3 FE FB        	cp $fb
 454+ 9BF5 20 18        	jr nz,8F
 455+ 9BF7
 456+ 9BF7              ; ---------- ---------- ----------
 457+ 9BF7
 458+ 9BF7              4
 459+ 9BF7 CD FD 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BFA              ;	call Reinicio
 461+ 9BFA
 462+ 9BFA              ; ---------- ---------- ----------
 463+ 9BFA
 464+ 9BFA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BFC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BFD
 467+ 9BFD              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BFD              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BFD
 470+ 9BFD CD 16 9C     	call DESPLZ_IZQ
 471+ 9C00 C1           	pop bc
 472+ 9C01 10 F9        	djnz 5B
 473+ 9C03 2A C6 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C06 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C07 22 C6 8B     	ld (Posicion_actual),hl
 476+ 9C0A CD D4 94     	call Genera_coordenadas
 477+ 9C0D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C0F
 479+ 9C0F              ; ---------- ---------- ----------
 480+ 9C0F
 481+ 9C0F              ; Movemos, no hay recolocación.
 482+ 9C0F
 483+ 9C0F 2A C6 8B     8 ld hl,(Posicion_actual)
 484+ 9C12 CD 16 9C     	call DESPLZ_IZQ
 485+ 9C15 C9           2 ret
 486+ 9C16
 487+ 9C16              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C16              ;
 489+ 9C16              ;	22/9/22
 490+ 9C16
 491+ 9C16              DESPLZ_IZQ
 492+ 9C16
 493+ 9C16 CD 25 9C     	call Desplaza_izquierda
 494+ 9C19 CD 71 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C1C CD 99 9C     	call Ciclo_completo_2
 496+ 9C1F 21 C3 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C22 CB BE        	res 7,(hl)
 498+ 9C24 C9           	ret
 499+ 9C25
 500+ 9C25              Desplaza_izquierda
 501+ 9C25
 502+ 9C25 3A DB 8B     	ld a,(Vel_left)
 503+ 9C28 47           	ld b,a
 504+ 9C29 2A D1 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C2C 23           1 inc hl
 506+ 9C2D 23           	inc hl
 507+ 9C2E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C30 22 D1 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C33 CD B5 90     	call Extrae_address
 510+ 9C36 22 C8 8B     	ld (Puntero_objeto),hl
 511+ 9C39
 512+ 9C39              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C39
 514+ 9C39              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C39              ; Cuántos movimientos hemos hecho ??
 516+ 9C39              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C39
 518+ 9C39 2A CD 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C3C EB           	ex de,hl
 520+ 9C3D A7           	and a
 521+ 9C3E ED 52        	sbc hl,de
 522+ 9C40 CB 3D        	srl l
 523+ 9C42 3E 08        6 ld a,8
 524+ 9C44 95           	sub l
 525+ 9C45 30 1E        	jr nc,3F
 526+ 9C47
 527+ 9C47              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C47              ; B="0".
 529+ 9C47
 530+ 9C47 04           4 inc b
 531+ 9C48 3C           	inc a
 532+ 9C49 20 FC        	jr nz,4B
 533+ 9C4B 78           	ld a,b
 534+ 9C4C 08           	ex af,af
 535+ 9C4D 2A CD 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C50 23           5 inc hl
 537+ 9C51 23           	inc hl
 538+ 9C52 10 FC        	djnz 5B
 539+ 9C54 22 D1 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C57 CD B5 90     	call Extrae_address
 541+ 9C5A 22 C8 8B     	ld (Puntero_objeto),hl
 542+ 9C5D
 543+ 9C5D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C5D              ; _(Posicion_actual).
 545+ 9C5D
 546+ 9C5D 21 C6 8B     	ld hl,Posicion_actual
 547+ 9C60 35           	dec (hl)
 548+ 9C61 08           	ex af,af
 549+ 9C62 6F           	ld l,a
 550+ 9C63 18 DD        	jr 6B
 551+ 9C65
 552+ 9C65              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C65
 554+ 9C65 47           3 ld b,a
 555+ 9C66 2A CB 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C69 23           2 inc hl
 557+ 9C6A 23           	inc hl
 558+ 9C6B 10 FC        	djnz 2B
 559+ 9C6D 22 CF 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C70 C9           8 ret
 561+ 9C71
 562+ 9C71              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C71              ;
 564+ 9C71              ;	modifica_parametros_1er_DESPLZ
 565+ 9C71              ;
 566+ 9C71              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C71              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C71              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C71
 570+ 9C71 3A CA 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C74 A7           	and a
 572+ 9C75 20 1E        	jr nz,1F
 573+ 9C77 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C78 32 CA 8B         ld (CTRL_DESPLZ),a
 575+ 9C7B 21 C5 8B     	ld hl,Columns
 576+ 9C7E 34           	inc (hl)
 577+ 9C7F 3A D5 8B     	ld a,(Cuad_objeto)
 578+ 9C82 E6 01        	and 1
 579+ 9C84 20 0F        	jr nz,1F
 580+ 9C86 2A C6 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C89 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C8A 22 C6 8B     	ld (Posicion_actual),hl
 583+ 9C8D CD D4 94     	call Genera_coordenadas
 584+ 9C90 CD EC 9C     	call Dec_CTRL_DESPLZ
 585+ 9C93 18 03        	jr 2F
 586+ 9C95 CD EC 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C98 C9           2 ret
 588+ 9C99
 589+ 9C99              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C99
 591+ 9C99 3A CA 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C9C FE F7        	cp $f7
 593+ 9C9E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CA0 30 2C        	jr nc,3F
 595+ 9CA2
 596+ 9CA2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CA2
 598+ 9CA2 06 00        	ld b,0
 599+ 9CA4 04           4 inc b
 600+ 9CA5 3C           	inc a
 601+ 9CA6 FE F7        	cp $f7
 602+ 9CA8 20 FA        	jr nz,4B
 603+ 9CAA 3E FF        	ld a,$ff
 604+ 9CAC 90           	sub b
 605+ 9CAD 32 CA 8B     	ld (CTRL_DESPLZ),a
 606+ 9CB0 18 1C        	jr 3F
 607+ 9CB2
 608+ 9CB2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CB2
 610+ 9CB2 21 C5 8B     1 ld hl,Columns
 611+ 9CB5 35           	dec (hl)
 612+ 9CB6 AF           	xor a
 613+ 9CB7 32 CA 8B     	ld (CTRL_DESPLZ),a
 614+ 9CBA 3A D5 8B     	ld a,(Cuad_objeto)
 615+ 9CBD E6 01        	and 1
 616+ 9CBF 28 0A        	jr z,2F
 617+ 9CC1 2A C6 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CC4 2B           	dec hl
 619+ 9CC5 22 C6 8B     	ld (Posicion_actual),hl
 620+ 9CC8 CD D4 94     	call Genera_coordenadas
 621+ 9CCB
 622+ 9CCB              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CCB
 624+ 9CCB CD DD 90     2 call Inicia_puntero_objeto_izq
 625+ 9CCE C9           3 ret
 626+ 9CCF
 627+ 9CCF              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CCF              ;
 629+ 9CCF              ;	19/10/22
 630+ 9CCF              ;
 631+ 9CCF              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CCF              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CCF
 634+ 9CCF 3A B7 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CD2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CD4 C9           	ret
 637+ 9CD5
 638+ 9CD5              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CD5              ;
 640+ 9CD5              ;	19/10/22
 641+ 9CD5              ;
 642+ 9CD5              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CD5              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CD5
 645+ 9CD5 3A B7 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CD8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CDA C9           	ret
 648+ 9CDB
 649+ 9CDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CDB              ;
 651+ 9CDB              ;	24/7/22
 652+ 9CDB              ;
 653+ 9CDB              ;	Inc_CTRL_DESPLZ
 654+ 9CDB              ;
 655+ 9CDB              ;
 656+ 9CDB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CDB
 658+ 9CDB 21 CA 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CDE 3A DC 8B     	ld a,(Vel_right)
 660+ 9CE1 A7           	and a
 661+ 9CE2 28 06        	jr z,1F
 662+ 9CE4 47           	ld b,a
 663+ 9CE5 34           3 inc (hl)
 664+ 9CE6 10 FD        	djnz 3B
 665+ 9CE8 18 01        	jr 2F
 666+ 9CEA 34           1 inc (hl)
 667+ 9CEB C9           2 ret
 668+ 9CEC
 669+ 9CEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CEC              ;
 671+ 9CEC              ;	5/2/23
 672+ 9CEC              ;
 673+ 9CEC              ;	Dec_CTRL_DESPLZ
 674+ 9CEC              ;
 675+ 9CEC              ;
 676+ 9CEC              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CEC
 678+ 9CEC 21 CA 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CEF 3A DB 8B     	ld a,(Vel_left)
 680+ 9CF2 A7           	and a
 681+ 9CF3 28 06        	jr z,1F
 682+ 9CF5 47           	ld b,a
 683+ 9CF6 35           3 dec (hl)
 684+ 9CF7 10 FD        	djnz 3B
 685+ 9CF9 18 01        	jr 2F
 686+ 9CFB 35           1 dec (hl)
 687+ 9CFC C9           2 ret
 688+ 9CFD
 689+ 9CFD              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CFD
 691+ 9CFD 2A C6 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D00 01 1F 00     	ld bc,31
 693+ 9D03 A7           	and a
 694+ 9D04 ED 4A        	adc hl,bc
 695+ 9D06 22 C6 8B     	ld (Posicion_actual),hl
 696+ 9D09 21 C3 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D0C CB C6        	set 0,(hl)
 698+ 9D0E C9           	ret
 699+ 9D0F
 700+ 9D0F              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D0F
 702+ 9D0F 2A C6 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D12 01 1F 00     	ld bc,31
 704+ 9D15 A7           	and a
 705+ 9D16 ED 42        	sbc hl,bc
 706+ 9D18 22 C6 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D1B 21 C3 8B     	ld hl,Ctrl_0
 708+ 9D1E CB CE        	set 1,(hl)
 709+ 9D20 C9           	ret
 710+ 9D21
 711+ 9D21              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D21
 713+ 9D21 24           Reaparece_abajo inc h
 714+ 9D22 01 E0 17     	ld bc,$17e0
 715+ 9D25 A7           	and a
 716+ 9D26 ED 4A        	adc hl,bc
 717+ 9D28 22 C6 8B     	ld (Posicion_actual),hl
 718+ 9D2B 21 C3 8B     	ld hl,Ctrl_0
 719+ 9D2E CB D6        	set 2,(hl)
 720+ 9D30 C9           	ret
 721+ 9D31
 722+ 9D31              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D31
 724+ 9D31 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D34 A7           	and a
 726+ 9D35 ED 42        	sbc hl,bc
 727+ 9D37 22 C6 8B     	ld (Posicion_actual),hl
 728+ 9D3A 21 C3 8B     	ld hl,Ctrl_0
 729+ 9D3D CB DE        	set 3,(hl)
 730+ 9D3F C9           	ret
 731+ 9D40
 732+ 9D40              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D40              ;
 734+ 9D40              ;	15/07/23
 735+ 9D40
 736+ 9D40              Reinicio
 737+ 9D40
 738+ 9D40              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D40
 740+ 9D40 AF           	xor a
 741+ 9D41 21 EB 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D44 CD 62 9D     	call Limpia_contenido_hl
 743+ 9D47
 744+ 9D47 21 C6 8B     	ld hl,Posicion_actual
 745+ 9D4A CD 62 9D     	call Limpia_contenido_hl
 746+ 9D4D
 747+ 9D4D CD B3 92     	call Situa_Puntero_indice_mov
 748+ 9D50 CD 61 9E     	call Inicia_Puntero_mov
 749+ 9D53
 750+ 9D53 21 ED 8B     	ld hl,Incrementa_puntero
 751+ 9D56 06 05        	ld b,5
 752+ 9D58 77           1 ld (hl),a
 753+ 9D59 23           	inc hl
 754+ 9D5A 10 FC        	djnz 1B
 755+ 9D5C
 756+ 9D5C 21 C2 8B     	ld hl,Ctrl_2
 757+ 9D5F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D61
 759+ 9D61 C9           	ret
 760+ 9D62
 761+ 9D62 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D63 23           	inc hl
 763+ 9D64 77           	ld (hl),a
 764+ 9D65 C9           	ret
 765+ 9D66
 766+ 9D66              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D66              ;
 768+ 9D66              ;	18/6/24
 769+ 9D66              ;
 770+ 9D66
 771+ 9D66              Amadeus_a_izquierda
 772+ 9D66
 773+ 9D66              ;	Actualiza contador de movimientos.
 774+ 9D66
 775+ 9D66 21 7C 89     	ld hl,Comm_Amadeus
 776+ 9D69 35           	dec (hl)
 777+ 9D6A 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D6C
 779+ 9D6C 2A 7A 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D6F 2B           	dec hl
 781+ 9D70 2B           	dec hl
 782+ 9D71 2B           	dec hl
 783+ 9D72 2B           	dec hl
 784+ 9D73 22 7A 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D76
 786+ 9D76 21 2B 8C     	ld hl,Ctrl_3
 787+ 9D79 CB EE        	set 5,(hl)
 788+ 9D7B
 789+ 9D7B C9           	ret
 790+ 9D7C
 791+ 9D7C 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D7D C9           	ret
 793+ 9D7E
 794+ 9D7E
 795+ 9D7E              Amadeus_a_derecha
 796+ 9D7E
 797+ 9D7E              ;	Actualiza contador de movimientos.
 798+ 9D7E
 799+ 9D7E 21 7C 89     	ld hl,Comm_Amadeus
 800+ 9D81 34           	inc (hl)
 801+ 9D82 3E 7A        	ld a,$7a
 802+ 9D84 BE           	cp (hl)
 803+ 9D85 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D87
 805+ 9D87 2A 7A 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D8A 23           	inc hl
 807+ 9D8B 23           	inc hl
 808+ 9D8C 23           	inc hl
 809+ 9D8D 23           	inc hl
 810+ 9D8E 22 7A 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D91
 812+ 9D91 21 2B 8C     	ld hl,Ctrl_3
 813+ 9D94 CB EE        	set 5,(hl)
 814+ 9D96 C9           	ret
 815+ 9D97
 816+ 9D97 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D98 C9           	ret
# file closed: Direcciones.asm
2078  9D99              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D99              ; ----- ----- ----- ----- -----
   2+ 9D99              ;
   3+ 9D99              ;   28/12/23
   4+ 9D99
   5+ 9D99              Movimiento
   6+ 9D99
   7+ 9D99              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D99
   9+ 9D99 3A C2 8B         ld a,(Ctrl_2)
  10+ 9D9C CB 57            bit 2,a
  11+ 9D9E 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DA0
  13+ 9DA0 2A E9 8B         ld hl,(Puntero_mov)
  14+ 9DA3 7E               ld a,(hl)
  15+ 9DA4
  16+ 9DA4              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DA4
  18+ 9DA4              Inicia_desplazamiento.
  19+ 9DA4
  20+ 9DA4              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DA4
  22+ 9DA4 CD 97 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DA7
  24+ 9DA7              ; Iniciamos (Repetimos_mov).
  25+ 9DA7
  26+ 9DA7 7E               ld a,(hl)
  27+ 9DA8 E6 0F            and $0f
  28+ 9DAA 32 EF 8B         ld (Repetimos_desplazamiento),a
  29+ 9DAD 32 F0 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DB0
  31+ 9DB0              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DB0
  33+ 9DB0 23               inc hl
  34+ 9DB1 7E               ld a,(hl)
  35+ 9DB2 32 F2 8B         ld (Cola_de_desplazamiento),a
  36+ 9DB5 2B               dec hl
  37+ 9DB6
  38+ 9DB6 21 C2 8B         ld hl,Ctrl_2
  39+ 9DB9 CB D6            set 2,(hl)
  40+ 9DBB
  41+ 9DBB              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DBB              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DBB
  44+ 9DBB              Desplazamiento_iniciado
  45+ 9DBB
  46+ 9DBB CD 6B 9E         call Aplica_desplazamiento
  47+ 9DBE
  48+ 9DBE              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DBE
  50+ 9DBE 3A 2B 8C         ld a,(Ctrl_3)
  51+ 9DC1 CB 4F            bit 1,a
  52+ 9DC3 C0               ret nz
  53+ 9DC4
  54+ 9DC4 21 EF 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DC7 35               dec (hl)
  56+ 9DC8 C0               ret nz
  57+ 9DC9
  58+ 9DC9              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DC9              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DC9              ; Analiza (Cola_de_desplazamiento).
  61+ 9DC9
  62+ 9DC9 3A F2 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DCC A7               and a
  64+ 9DCD CC C0 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DD0 28 30            jr z,Reinicia_el_movimiento
  66+ 9DD2
  67+ 9DD2 FE FF            cp $ff
  68+ 9DD4 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DD6
  70+ 9DD6 FE FE            cp $fe
  71+ 9DD8 CC 45 9E         call z,Fijamos_bucle
  72+ 9DDB 28 25            jr z,Reinicia_el_movimiento
  73+ 9DDD
  74+ 9DDD FE FD            cp $fd
  75+ 9DDF 20 11            jr nz,1F
  76+ 9DE1
  77+ 9DE1              ; ---
  78+ 9DE1              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DE1
  80+ 9DE1 3A C2 8B         ld a,(Ctrl_2)
  81+ 9DE4 CB 5F            bit 3,a
  82+ 9DE6 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DE8
  84+ 9DE8              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DE8
  86+ 9DE8 21 C2 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DEB CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DED
  89+ 9DED CD 56 9E         call Inicia_Repetimos_movimiento
  90+ 9DF0 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DF2              ; ---
  92+ 9DF2
  93+ 9DF2 FE 01        1 cp 1
  94+ 9DF4 CA 2F 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DF7
  96+ 9DF7 3D               dec a
  97+ 9DF8 32 F2 8B         ld (Cola_de_desplazamiento),a
  98+ 9DFB
  99+ 9DFB 3A F0 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DFE 32 EF 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E01              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E01 C9               ret
 103+ 9E02
 104+ 9E02              Reinicia_el_movimiento
 105+ 9E02
 106+ 9E02 3A C2 8B         ld a,(Ctrl_2)
 107+ 9E05 CB 5F            bit 3,a
 108+ 9E07 28 1B            jr z,2F
 109+ 9E09
 110+ 9E09              ; (Cola_de_desplazamiento)="254".
 111+ 9E09
 112+ 9E09 21 F1 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E0C 35               dec (hl)
 114+ 9E0D 20 15            jr nz,2F
 115+ 9E0F
 116+ 9E0F              ; Fin de las repeticiones del último movimiento.
 117+ 9E0F
 118+ 9E0F 21 C2 8B         ld hl,Ctrl_2
 119+ 9E12 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E14
 121+ 9E14 2A E9 8B         ld hl,(Puntero_mov)
 122+ 9E17 23               inc hl
 123+ 9E18 23               inc hl
 124+ 9E19 23               inc hl
 125+ 9E1A 22 E9 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E1D              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E1D 7E               ld a,(hl)
 128+ 9E1E 32 F2 8B         ld (Cola_de_desplazamiento),a
 129+ 9E21
 130+ 9E21 C3 C9 9D         jp Cola
 131+ 9E24
 132+ 9E24 CD 61 9E     2 call Inicia_Puntero_mov
 133+ 9E27
 134+ 9E27 21 C2 8B         ld hl,Ctrl_2
 135+ 9E2A CB 96            res 2,(hl)
 136+ 9E2C
 137+ 9E2C C3 99 9D         jp Movimiento
 138+ 9E2F
 139+ 9E2F              Siguiente_desplazamiento
 140+ 9E2F
 141+ 9E2F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E2F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E2F
 144+ 9E2F 21 C2 8B         ld hl,Ctrl_2
 145+ 9E32 CB 96            res 2,(hl)
 146+ 9E34
 147+ 9E34 2A E9 8B         ld hl,(Puntero_mov)
 148+ 9E37 23               inc hl
 149+ 9E38 23               inc hl
 150+ 9E39 22 E9 8B         ld (Puntero_mov),hl
 151+ 9E3C
 152+ 9E3C 7E               ld a,(hl)
 153+ 9E3D A7               and a
 154+ 9E3E CC C0 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E41 CA 02 9E         jp z,Reinicia_el_movimiento
 156+ 9E44
 157+ 9E44 C9               ret
 158+ 9E45
 159+ 9E45              ; Subrutinas -----------------------------------------
 160+ 9E45              ; ---------- --------- --------- ---------- ----------
 161+ 9E45              ;
 162+ 9E45              ;   24/07/23
 163+ 9E45              ;
 164+ 9E45              ;   Fijamos_bucle
 165+ 9E45              ;
 166+ 9E45              ;
 167+ 9E45
 168+ 9E45              Fijamos_bucle
 169+ 9E45
 170+ 9E45 3A ED 8B         ld a,(Incrementa_puntero)
 171+ 9E48 3C               inc a
 172+ 9E49 32 EE 8B         ld (Incrementa_puntero_backup),a
 173+ 9E4C
 174+ 9E4C CD C0 9E         call Incrementa_Puntero_indice_mov
 175+ 9E4F 2A E7 8B         ld hl,(Puntero_indice_mov)
 176+ 9E52 22 EB 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E55 C9               ret
 178+ 9E56
 179+ 9E56              ; ---------- --------- --------- ---------- ----------
 180+ 9E56              ;
 181+ 9E56              ;   07/7/23
 182+ 9E56              ;
 183+ 9E56              ;   Inicia_Repetimos_movimiento
 184+ 9E56              ;
 185+ 9E56              ;
 186+ 9E56
 187+ 9E56              Inicia_Repetimos_movimiento
 188+ 9E56
 189+ 9E56              ; Iniciamos (Repetimos_movimiento).
 190+ 9E56
 191+ 9E56 DD 2A E9 8B      ld ix,(Puntero_mov)
 192+ 9E5A DD 7E 02         ld a,(ix+2)
 193+ 9E5D 32 F1 8B         ld (Repetimos_movimiento),a
 194+ 9E60
 195+ 9E60 C9               ret
 196+ 9E61
 197+ 9E61              ; ---------- --------- --------- ---------- ----------
 198+ 9E61              ;
 199+ 9E61              ;   26/6/23
 200+ 9E61              ;
 201+ 9E61              ;   Inicia_Puntero_mov
 202+ 9E61              ;
 203+ 9E61              ;
 204+ 9E61
 205+ 9E61 2A E7 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E64 CD B5 90         call Extrae_address
 207+ 9E67 22 E9 8B         ld (Puntero_mov),hl
 208+ 9E6A C9               ret
 209+ 9E6B
 210+ 9E6B              ; ---------- --------- --------- ---------- ----------
 211+ 9E6B              ;
 212+ 9E6B              ;   27/06/23
 213+ 9E6B              ;
 214+ 9E6B              ;   Aplica_movimiento.
 215+ 9E6B
 216+ 9E6B              Aplica_desplazamiento
 217+ 9E6B
 218+ 9E6B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E6B
 220+ 9E6B 2A E9 8B         ld hl, (Puntero_mov)
 221+ 9E6E
 222+ 9E6E 7E               ld a,(hl)
 223+ 9E6F E6 F0            and $f0
 224+ 9E71 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E72
 226+ 9E72 CB 7E            bit 7,(hl)
 227+ 9E74 28 03            jr z,1F
 228+ 9E76 CD 4D 9A         call Mov_up
 229+ 9E79 2A E9 8B     1 ld hl, (Puntero_mov)
 230+ 9E7C CB 76            bit 6,(hl)
 231+ 9E7E 28 03            jr z,2F
 232+ 9E80 CD 14 9A         call Mov_down
 233+ 9E83
 234+ 9E83              ; Se ha aplicado reinicio ???
 235+ 9E83              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E83
 237+ 9E83              ;    ld a,(Ctrl_3)
 238+ 9E83              ;    bit 1,a
 239+ 9E83              ;    ret nz
 240+ 9E83
 241+ 9E83 2A E9 8B     2 ld hl, (Puntero_mov)
 242+ 9E86 CB 6E            bit 5,(hl)
 243+ 9E88 28 03            jr z,3F
 244+ 9E8A CD B3 9B         call Mov_left
 245+ 9E8D 2A E9 8B     3 ld hl, (Puntero_mov)
 246+ 9E90 CB 66            bit 4,(hl)
 247+ 9E92 C8               ret z
 248+ 9E93 CD 90 9A         call Mov_right
 249+ 9E96 C9               ret
 250+ 9E97
 251+ 9E97              ; ---------- --------- --------- ---------- ----------
 252+ 9E97              ;
 253+ 9E97              ;   26/06/23
 254+ 9E97              ;
 255+ 9E97              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E97
 257+ 9E97              Ajusta_velocidad_desplazamiento
 258+ 9E97
 259+ 9E97              ; 1er byte de la cadena de movimiento.
 260+ 9E97              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E97
 262+ 9E97 CD B5 9E         call Extrae_nibble_alto
 263+ 9E9A
 264+ 9E9A 32 DD 8B         ld (Vel_up),a
 265+ 9E9D 79               ld a,c
 266+ 9E9E E6 0F            and $0f
 267+ 9EA0 32 DE 8B         ld (Vel_down),a
 268+ 9EA3
 269+ 9EA3              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EA3              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EA3
 272+ 9EA3 23               inc hl
 273+ 9EA4 CD B5 9E         call Extrae_nibble_alto
 274+ 9EA7
 275+ 9EA7 32 DB 8B         ld (Vel_left),a
 276+ 9EAA 79               ld a,c
 277+ 9EAB E6 0F            and $0f
 278+ 9EAD 32 DC 8B         ld (Vel_right),a
 279+ 9EB0
 280+ 9EB0              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EB0
 282+ 9EB0 23               inc hl
 283+ 9EB1 22 E9 8B         ld (Puntero_mov),hl
 284+ 9EB4 C9               ret
 285+ 9EB5
 286+ 9EB5 06 04        Extrae_nibble_alto ld b,4
 287+ 9EB7 7E               ld a,(hl)
 288+ 9EB8 4F               ld c,a
 289+ 9EB9 E6 F0            and $f0
 290+ 9EBB CB 3F        1 srl a
 291+ 9EBD 10 FC            djnz 1B
 292+ 9EBF C9               ret
 293+ 9EC0
 294+ 9EC0              ; ---------- --------- --------- ---------- ----------
 295+ 9EC0              ;
 296+ 9EC0              ;   5/7/23
 297+ 9EC0              ;
 298+ 9EC0              ;   Incrementa_Puntero_indice_mov
 299+ 9EC0
 300+ 9EC0              Incrementa_Puntero_indice_mov
 301+ 9EC0
 302+ 9EC0 21 ED 8B         ld hl,Incrementa_puntero
 303+ 9EC3 34               inc (hl)
 304+ 9EC4
 305+ 9EC4 2A E7 8B         ld hl,(Puntero_indice_mov)
 306+ 9EC7 01 02 00         ld bc,2
 307+ 9ECA A7               and a
 308+ 9ECB 09               add hl,bc
 309+ 9ECC 22 E7 8B         ld (Puntero_indice_mov),hl
 310+ 9ECF
 311+ 9ECF 7E               ld a,(hl)
 312+ 9ED0 A7               and a
 313+ 9ED1
 314+ 9ED1              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9ED1
 316+ 9ED1              ;    jr z,$
 317+ 9ED1
 318+ 9ED1              ;! Reinicia el Patrón de movimiento.
 319+ 9ED1
 320+ 9ED1 CC D6 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9ED4
 322+ 9ED4 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9ED5
 324+ 9ED5 C9               ret
 325+ 9ED6
 326+ 9ED6              ; ---------- --------- --------- ---------- ----------
 327+ 9ED6              ;
 328+ 9ED6              ;   15/01/24
 329+ 9ED6              ;
 330+ 9ED6              ;   Inicializa_Puntero_indice_mov
 331+ 9ED6
 332+ 9ED6              Inicializa_Puntero_indice_mov_2
 333+ 9ED6
 334+ 9ED6              ; Existe etiqueta de bucle principal???
 335+ 9ED6
 336+ 9ED6 2A EB 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9ED9 24               inc h
 338+ 9EDA 25               dec h
 339+ 9EDB 28 05            jr z,2F
 340+ 9EDD
 341+ 9EDD 22 E7 8B         ld (Puntero_indice_mov),hl
 342+ 9EE0 18 14            jr 3F
 343+ 9EE2
 344+ 9EE2              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EE2
 346+ 9EE2 3A ED 8B     2 ld a,(Incrementa_puntero)
 347+ 9EE5 47               ld b,a
 348+ 9EE6
 349+ 9EE6 2A E7 8B         ld hl,(Puntero_indice_mov)
 350+ 9EE9 2B           1 dec hl
 351+ 9EEA 2B               dec hl
 352+ 9EEB 10 FC            djnz 1B
 353+ 9EED 22 E7 8B         ld (Puntero_indice_mov),hl
 354+ 9EF0
 355+ 9EF0 AF               xor a
 356+ 9EF1 32 ED 8B         ld (Incrementa_puntero),a
 357+ 9EF4 18 06            jr 4F
 358+ 9EF6
 359+ 9EF6 3A EE 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EF9 32 ED 8B         ld (Incrementa_puntero),a
 361+ 9EFC C9           4 ret
 362+ 9EFD
 363+ 9EFD              ; ----------------------------------------------------------------------
 364+ 9EFD              ;
 365+ 9EFD              ;   30/01/24
 366+ 9EFD              ;
 367+ 9EFD              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EFD
 369+ 9EFD 3A B6 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F00 CD 4E 94         call Calcula_salto_en_BC
 371+ 9F03 21 DF 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F06 A7               and a
 373+ 9F07 ED 4A            adc hl,bc
 374+ 9F09 C9               ret
 375+ 9F0A
 376+ 9F0A              ; ----------------------------------------------------------------------
 377+ 9F0A              ;
 378+ 9F0A              ;   30/01/24
 379+ 9F0A              ;
 380+ 9F0A              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F0A              ;
 382+ 9F0A              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F0A
 384+ 9F0A 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F0B 23               inc hl
 386+ 9F0C 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F0D 69               ld l,c
 388+ 9F0E 60               ld h,b
 389+ 9F0F 22 BF 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F12 C9               ret
 391+ 9F13
# file closed: Movimiento.asm
2079  9F13              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F13              ; --------------------------------------------------------------------------------------
   2+ 9F13              ;
   3+ 9F13              ;   25/10/24
   4+ 9F13              ;
   5+ 9F13
   6+ 9F13              Pinta_disparos_Entidades
   7+ 9F13
   8+ 9F13 ED 73 03 8C      ld (Stack),sp
   9+ 9F17 ED 7B 15 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F1B
  11+ 9F1B 3E 02            ld a,2
  12+ 9F1D 08               ex af,af
  13+ 9F1E
  14+ 9F1E 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F20              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F20              ;                                     _ No encontraría "0".
  17+ 9F20 FD E1        4 pop iy
  18+ 9F22 D1               pop de                          ; 1er .db IYL
  19+ 9F23              ;                                   ; 2º  .db IYH
  20+ 9F23              ;                                   ; 3er .db E.
  21+ 9F23              ;   Album vacío ???
  22+ 9F23
  23+ 9F23 FD 7D            ld a,iyl
  24+ 9F25 FD 84            add iyh
  25+ 9F27 83               add e
  26+ 9F28 28 1F            jr z,1F
  27+ 9F2A
  28+ 9F2A              ;   Imprime album, (contiene datos).
  29+ 9F2A
  30+ 9F2A 3B               dec sp
  31+ 9F2B
  32+ 9F2B E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F2C
  34+ 9F2C              ; Imprime el 1er scanline del disparo.
  35+ 9F2C
  36+ 9F2C FD 7D            ld a,iyl
  37+ 9F2E AE               xor (hl)
  38+ 9F2F 77               ld (hl),a
  39+ 9F30
  40+ 9F30 2C               inc l
  41+ 9F31
  42+ 9F31 FD 7C            ld a,iyh
  43+ 9F33 AE               xor (hl)
  44+ 9F34 77               ld (hl),a
  45+ 9F35
  46+ 9F35 2C               inc l
  47+ 9F36
  48+ 9F36 7B               ld a,e
  49+ 9F37 AE               xor (hl)
  50+ 9F38 77               ld (hl),a
  51+ 9F39
  52+ 9F39              ; Imprime el 2º scanline del disparo.
  53+ 9F39
  54+ 9F39 E1               pop hl
  55+ 9F3A
  56+ 9F3A FD 7D            ld a,iyl
  57+ 9F3C AE               xor (hl)
  58+ 9F3D 77               ld (hl),a
  59+ 9F3E
  60+ 9F3E 2C               inc l
  61+ 9F3F
  62+ 9F3F FD 7C            ld a,iyh
  63+ 9F41 AE               xor (hl)
  64+ 9F42 77               ld (hl),a
  65+ 9F43
  66+ 9F43 2C               inc l
  67+ 9F44
  68+ 9F44 7B               ld a,e
  69+ 9F45 AE               xor (hl)
  70+ 9F46 77               ld (hl),a
  71+ 9F47
  72+ 9F47 10 D7            djnz 4B
  73+ 9F49
  74+ 9F49 08           1 ex af,af
  75+ 9F4A 3D               dec a
  76+ 9F4B 20 05            jr nz,2F
  77+ 9F4D
  78+ 9F4D ED 7B 03 8C      ld sp,(Stack)
  79+ 9F51 C9               ret
  80+ 9F52
  81+ 9F52 ED 7B 13 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F56 08               ex af,af
  83+ 9F57 18 C5            jr 3B
  84+ 9F59
  85+ 9F59              ; --------------------------------------------------------------------------------------
  86+ 9F59              ;
  87+ 9F59              ;   30/10/24
  88+ 9F59              ;
  89+ 9F59
  90+ 9F59              Motor_de_disparos_entidades
  91+ 9F59
  92+ 9F59 3A 1B 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F5C FE 07            cp 7
  94+ 9F5E C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F5F
  96+ 9F5F 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F61 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F64
  99+ 9F64 CD B5 90     1 call Extrae_address
 100+ 9F67 1C               inc e
 101+ 9F68 1C               inc e
 102+ 9F69 ED 53 2E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F6D
 104+ 9F6D               ; Caja vacía ???
 105+ 9F6D
 106+ 9F6D 2D               dec l
 107+ 9F6E 7E               ld a,(hl)
 108+ 9F6F A7               and a
 109+ 9F70 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F72
 111+ 9F72              ; --- Trabajamos con caja:
 112+ 9F72
 113+ 9F72 2C               inc l
 114+ 9F73
 115+ 9F73              ; --- Existe posibilidad de impacto ???
 116+ 9F73
 117+ 9F73 CB 46            bit 0,(hl)
 118+ 9F75 C4 B5 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F78 20 37            jr nz,3F
 120+ 9F7A
 121+ 9F7A CD 3C A0         call Rota_disparo_si_procede
 122+ 9F7D
 123+ 9F7D              ; ------------------------------------------------------------
 124+ 9F7D
 125+ 9F7D 2D               dec l
 126+ 9F7E 2D               dec l
 127+ 9F7F
 128+ 9F7F CD B5 90         call Extrae_address
 129+ 9F82
 130+ 9F82              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F82              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F82
 133+ 9F82 3A 2D 8C         ld a,(Ctrl_5)
 134+ 9F85 CB 57            bit 2,a
 135+ 9F87 28 09            jr z,4F
 136+ 9F89
 137+ 9F89 CB 97            res 2,a
 138+ 9F8B 32 2D 8C         ld (Ctrl_5),a
 139+ 9F8E 2C               inc l
 140+ 9F8F 2C               inc l
 141+ 9F90 18 0C            jr 5F
 142+ 9F92
 143+ 9F92 CB 5F        4 bit 3,a
 144+ 9F94 28 08            jr z,5F
 145+ 9F96
 146+ 9F96 CB 9F            res 3,a
 147+ 9F98 32 2D 8C         ld (Ctrl_5),a
 148+ 9F9B 2D               dec l
 149+ 9F9C 2D               dec l
 150+ 9F9D 2D               dec l
 151+ 9F9E
 152+ 9F9E              ; ---------------------------------------------------------------------
 153+ 9F9E
 154+ 9F9E              ;! Velocidad del disparo de entidades.
 155+ 9F9E
 156+ 9F9E CD CE 99     5 call NextScan
 157+ 9FA1 CD CE 99         call NextScan
 158+ 9FA4
 159+ 9FA4              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FA4
 161+ 9FA4 CD 19 A0         call Fin_de_disparo_de_entidad
 162+ 9FA7
 163+ 9FA7 EB               ex de,hl
 164+ 9FA8
 165+ 9FA8 73               ld (hl),e
 166+ 9FA9 23               inc hl
 167+ 9FAA 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FAB
 169+ 9FAB 2A 2E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FAE 18 02            jr 2F
 171+ 9FB0
 172+ 9FB0 C9               ret
 173+ 9FB1
 174+ 9FB1 EB           3 ex de,hl
 175+ 9FB2 10 B0        2 djnz 1B
 176+ 9FB4
 177+ 9FB4 C9               ret
 178+ 9FB5
 179+ 9FB5              ; ------------- ------------- ------------
 180+ 9FB5              ;
 181+ 9FB5              ;   1/11/24
 182+ 9FB5
 183+ 9FB5              Comprueba_impacto_con_Amadeus
 184+ 9FB5
 185+ 9FB5              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FB5              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FB5
 188+ 9FB5              ;   Modificamos registros, así que guardamos ...
 189+ 9FB5
 190+ 9FB5 C5               push bc
 191+ 9FB6 E5               push hl
 192+ 9FB7 D5               push de
 193+ 9FB8
 194+ 9FB8 2D               dec l
 195+ 9FB9 2D               dec l
 196+ 9FBA
 197+ 9FBA CD B5 90         call Extrae_address
 198+ 9FBD
 199+ 9FBD 3A 74 89         ld a,(CX_Amadeus)
 200+ 9FC0 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FC1
 202+ 9FC1 7D               ld a,l
 203+ 9FC2 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FC4
 205+ 9FC4 06 03            ld b,3
 206+ 9FC6
 207+ 9FC6 B9           1 cp c
 208+ 9FC7 28 15            jr z,Coincidencia
 209+ 9FC9 0C               inc c
 210+ 9FCA 10 FA            djnz 1B
 211+ 9FCC
 212+ 9FCC 0D               dec c
 213+ 9FCD 0D               dec c
 214+ 9FCE 0D               dec c
 215+ 9FCF
 216+ 9FCF 3C               inc a
 217+ 9FD0 B9               cp c
 218+ 9FD1 28 0B            jr z,Coincidencia
 219+ 9FD3
 220+ 9FD3 3C               inc a
 221+ 9FD4 B9               cp c
 222+ 9FD5 28 07            jr z,Coincidencia
 223+ 9FD7
 224+ 9FD7 D1           2 pop de
 225+ 9FD8 E1               pop hl
 226+ 9FD9 C1               pop bc
 227+ 9FDA
 228+ 9FDA              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FDA
 230+ 9FDA CB 86            res 0,(hl)
 231+ 9FDC AF               xor a                       ; Z before RET.
 232+ 9FDD C9               ret
 233+ 9FDE
 234+ 9FDE              Coincidencia
 235+ 9FDE
 236+ 9FDE              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FDE              ;   Existe posibilidad de impacto.
 238+ 9FDE              ;   Vamos a averiguarlo ...
 239+ 9FDE
 240+ 9FDE 1D               dec e
 241+ 9FDF 1D               dec e
 242+ 9FE0 1D               dec e
 243+ 9FE1
 244+ 9FE1              ; DE en Puntero_objeto del disparo.
 245+ 9FE1              ; HL en Puntero_de_impresión del disparo.
 246+ 9FE1
 247+ 9FE1              ; Comparador:
 248+ 9FE1
 249+ 9FE1 06 03            ld b,3
 250+ 9FE3
 251+ 9FE3 1A           3 ld a,(de)
 252+ 9FE4 4F               ld c,a
 253+ 9FE5 A6               and (hl)
 254+ 9FE6 B9               cp c
 255+ 9FE7 20 06            jr nz,Amadeus_impactado
 256+ 9FE9
 257+ 9FE9 2C               inc l
 258+ 9FEA 1C               inc e
 259+ 9FEB
 260+ 9FEB 10 F6            djnz 3B
 261+ 9FED
 262+ 9FED 18 E8            jr 2B
 263+ 9FEF
 264+ 9FEF              Amadeus_impactado
 265+ 9FEF
 266+ 9FEF              ; Borramos disparo.
 267+ 9FEF
 268+ 9FEF D1               pop de
 269+ 9FF0 E1               pop hl
 270+ 9FF1
 271+ 9FF1 E5               push hl
 272+ 9FF2 D5               push de
 273+ 9FF3
 274+ 9FF3 CD A7 A0         call Borra_6_bytes
 275+ 9FF6
 276+ 9FF6 21 1B 8C         ld hl,Numero_de_disparos_de_entidades
 277+ 9FF9 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ 9FFA
 279+ 9FFA              ; Iniciamos el proceso de explosión de Amadeus.
 280+ 9FFA
 281+ 9FFA 21 77 89         ld hl,Impacto_Amadeus
 282+ 9FFD 36 01            ld (hl),1
 283+ 9FFF
 284+ 9FFF              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ 9FFF              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ 9FFF
 287+ 9FFF 3A 78 89         ld a,(p.imp.amadeus)
 288+ A002 FE DE            cp $de
 289+ A004 20 04            jr nz,1F
 290+ A006
 291+ A006 3D               dec a
 292+ A007 32 78 89         ld (p.imp.amadeus),a
 293+ A00A
 294+ A00A              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A00A
 296+ A00A 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A00D 21 7A 89         ld hl,Pamm_Amadeus
 298+ A010
 299+ A010 73               ld (hl),e
 300+ A011 23               inc hl
 301+ A012 72               ld (hl),d
 302+ A013
 303+ A013 D1               pop de
 304+ A014 E1               pop hl
 305+ A015 C1               pop bc
 306+ A016
 307+ A016 AF               xor a
 308+ A017 3C               inc a               ; NZ before RET.
 309+ A018 C9               ret
 310+ A019
 311+ A019              ; ------------- ------------- ------------
 312+ A019              ;
 313+ A019              ;   31/10/24
 314+ A019
 315+ A019              Fin_de_disparo_de_entidad
 316+ A019
 317+ A019              ; Estamos en zona de Amadeus ??
 318+ A019
 319+ A019 7C               ld a,h
 320+ A01A FE 54            cp $54
 321+ A01C 38 0D            jr c,1F
 322+ A01E
 323+ A01E D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A01F
 325+ A01F 5D               ld e,l
 326+ A020 54               ld d,h
 327+ A021
 328+ A021 21 E0 57         ld hl,$57e0
 329+ A024 ED 52            sbc hl,de
 330+ A026
 331+ A026 38 6F            jr c,Elimina_disparo_entidad
 332+ A028
 333+ A028 6B               ld l,e
 334+ A029 62               ld h,d
 335+ A02A
 336+ A02A D1               pop de
 337+ A02B
 338+ A02B 7C           1 ld a,h
 339+ A02C FE 50            cp $50
 340+ A02E D8               ret c
 341+ A02F
 342+ A02F 7D               ld a,l
 343+ A030 FE C0            cp $c0
 344+ A032 D8               ret c
 345+ A033
 346+ A033              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A033              ; Así podremos comprobar si hay colisión más adelante.
 348+ A033
 349+ A033 1C               inc e
 350+ A034 1C               inc e
 351+ A035
 352+ A035 EB               ex de,hl
 353+ A036 CB C6            set 0,(hl)
 354+ A038 EB               ex de,hl
 355+ A039
 356+ A039 1D               dec e
 357+ A03A 1D               dec e
 358+ A03B
 359+ A03B C9               ret
 360+ A03C
 361+ A03C              ; ----------------------------------------------------------
 362+ A03C              ;
 363+ A03C              ;   08/10/24
 364+ A03C
 365+ A03C              ;   Estructura de un disparo de entidades.
 366+ A03C
 367+ A03C              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A03C              ; 	defw 0											; Puntero de impresión.
 369+ A03C              ;	defw 0											; Control.
 370+ A03C
 371+ A03C              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A03C              ;   _de la entidad en el momento de disparar.
 373+ A03C
 374+ A03C              ;   El byte alto muestra la siguiente información:
 375+ A03C              ;
 376+ A03C              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A03C              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A03C              ;
 379+ A03C              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A03C              ;
 381+ A03C              ;                        10xx ..... Izquierda.
 382+ A03C              ;                        01xx ..... Derecha.
 383+ A03C              ;                        00xx ..... Recto.
 384+ A03C
 385+ A03C              Rota_disparo_si_procede
 386+ A03C
 387+ A03C              ;   Nos situamos en el byte alto de (Control).
 388+ A03C
 389+ A03C CB 76            bit 6,(hl)
 390+ A03E 20 2D            jr nz,Rota_a_derecha
 391+ A040 CB 7E            bit 7,(hl)
 392+ A042 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A043
 394+ A043              Rota_a_izq
 395+ A043
 396+ A043 E5               push hl
 397+ A044
 398+ A044 7D               ld a,l
 399+ A045 D6 05            sub 5
 400+ A047 6F               ld l,a
 401+ A048
 402+ A048 E5               push hl
 403+ A049 FD E1            pop iy
 404+ A04B
 405+ A04B A7               and a
 406+ A04C
 407+ A04C FD CB 02 16      rl (iy+02)
 408+ A050 FD CB 01 16      rl (iy+01)
 409+ A054 FD CB 00 16      rl (iy+00)
 410+ A058
 411+ A058 30 3B            jr nc,Exit
 412+ A05A
 413+ A05A              ; Desplazamiento completo hasta Carry.
 414+ A05A              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A05A
 416+ A05A FD 36 02 03      ld (iy+02),$03
 417+ A05E FD 36 01 00      ld (iy+01),$00
 418+ A062 FD 36 00 00      ld (iy+00),$00
 419+ A066
 420+ A066 21 2D 8C         ld hl,Ctrl_5
 421+ A069 CB DE            set 3,(hl)
 422+ A06B
 423+ A06B 18 28            jr Exit
 424+ A06D
 425+ A06D              Rota_a_derecha
 426+ A06D
 427+ A06D E5               push hl
 428+ A06E
 429+ A06E 7D               ld a,l
 430+ A06F D6 05            sub 5
 431+ A071 6F               ld l,a
 432+ A072
 433+ A072 E5               push hl
 434+ A073 FD E1            pop iy
 435+ A075
 436+ A075 A7               and a
 437+ A076
 438+ A076 FD CB 00 1E      rr (iy+00)
 439+ A07A FD CB 01 1E      rr (iy+01)
 440+ A07E FD CB 02 1E      rr (iy+02)
 441+ A082
 442+ A082 30 11            jr nc,Exit
 443+ A084
 444+ A084              ; Desplazamiento completo hasta Carry.
 445+ A084              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A084
 447+ A084 FD 36 00 01      ld (iy+00),$01
 448+ A088 FD 36 01 80      ld (iy+01),$80
 449+ A08C FD 36 02 00      ld (iy+02),$00
 450+ A090
 451+ A090 21 2D 8C         ld hl,Ctrl_5
 452+ A093 CB D6            set 2,(hl)
 453+ A095
 454+ A095 E1           Exit pop hl
 455+ A096 C9               ret
 456+ A097
 457+ A097              ; ------------ ----------- ------------
 458+ A097              ;
 459+ A097              ;   25/9/24
 460+ A097
 461+ A097              Elimina_disparo_entidad
 462+ A097
 463+ A097 21 1B 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A09A 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A09B
 466+ A09B E1               pop hl
 467+ A09C E5               push hl
 468+ A09D
 469+ A09D 2C               inc l
 470+ A09E 2C               inc l
 471+ A09F
 472+ A09F CD A7 A0         call Borra_6_bytes
 473+ A0A2
 474+ A0A2 D1               pop de
 475+ A0A3
 476+ A0A3 21 00 00         ld hl,0
 477+ A0A6
 478+ A0A6 C9               ret
 479+ A0A7
 480+ A0A7              ; ----- ----- ----- ----- -----
 481+ A0A7
 482+ A0A7              Borra_6_bytes
 483+ A0A7
 484+ A0A7 16 06            ld d,6                                                    ; Contador
 485+ A0A9 AF               xor a                                                     ; Borrador
 486+ A0AA 77           1 ld (hl),a
 487+ A0AB 2D               dec l
 488+ A0AC 15               dec d
 489+ A0AD 20 FB            jr nz,1B
 490+ A0AF
 491+ A0AF C9               ret
 492+ A0B0
 493+ A0B0              ; --------------------------------------------------------------------------------------
 494+ A0B0              ;
 495+ A0B0              ;   12/10/24
 496+ A0B0              ;
 497+ A0B0
 498+ A0B0              Genera_datos_de_impresion_disparos_Entidades
 499+ A0B0
 500+ A0B0 3E 07            ld a,7
 501+ A0B2 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0B3
 503+ A0B3              ; ---------------
 504+ A0B3
 505+ A0B3              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0B3
 507+ A0B3 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A0B6
 509+ A0B6 CD B5 90     1 call Extrae_address
 510+ A0B9
 511+ A0B9 13               inc de
 512+ A0BA 13               inc de
 513+ A0BB
 514+ A0BB ED 53 2E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0BF
 516+ A0BF 2D               dec l
 517+ A0C0 7E               ld a,(hl)
 518+ A0C1 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0C2 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0C4
 521+ A0C4              ; ----- ----- ----- -----
 522+ A0C4
 523+ A0C4 2D               dec l
 524+ A0C5 CD B5 90         call Extrae_address
 525+ A0C8 E5               push hl
 526+ A0C9
 527+ A0C9 1D               dec e
 528+ A0CA
 529+ A0CA EB               ex de,hl
 530+ A0CB
 531+ A0CB 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0CC 2D               dec l
 533+ A0CD 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0CE 2D               dec l
 535+ A0CF 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0D0
 537+ A0D0 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0D1
 539+ A0D1              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0D1
 541+ A0D1 FD 2A 17 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0D5 FD 73 00         ld (iy+0),e
 543+ A0D8 FD 70 01         ld (iy+1),b
 544+ A0DB FD 71 02         ld (iy+2),c
 545+ A0DE
 546+ A0DE FD 75 03         ld (iy+3),l
 547+ A0E1 FD 74 04         ld (iy+4),h
 548+ A0E4
 549+ A0E4 CD CE 99         call NextScan
 550+ A0E7
 551+ A0E7 FD 75 05         ld (iy+5),l
 552+ A0EA FD 74 06         ld (iy+6),h
 553+ A0ED
 554+ A0ED FD E5            push iy
 555+ A0EF E1               pop hl
 556+ A0F0
 557+ A0F0 3E 07            ld a,7
 558+ A0F2 85               add l
 559+ A0F3 6F               ld l,a
 560+ A0F4
 561+ A0F4 22 17 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A0F7
 563+ A0F7              ; ----- ----- ----- -----
 564+ A0F7
 565+ A0F7              Situa_en_siguiente_caja
 566+ A0F7
 567+ A0F7 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A0F8 3D               dec a
 569+ A0F9 C8               ret z
 570+ A0FA
 571+ A0FA 08               ex af,af
 572+ A0FB 2A 2E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A0FE 18 B6            jr 1B
 574+ A100
 575+ A100              ; --------------------------------------------------------------------------------------
 576+ A100              ;
 577+ A100              ;   12/10/24
 578+ A100              ;
 579+ A100
 580+ A100              Genera_disparo_de_entidad_maldosa
 581+ A100
 582+ A100              ;   Estructura de un disparo de entidades.
 583+ A100
 584+ A100              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A100              ; 	defw 0											; Puntero de impresión.
 586+ A100              ;	defw 0											; Control.
 587+ A100
 588+ A100              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A100              ;   _de la entidad en el momento de disparar.
 590+ A100
 591+ A100              ;   El byte de control muestra la siguiente información:
 592+ A100
 593+ A100              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A100              ;
 595+ A100              ;                        10xx ..... Izquierda.
 596+ A100              ;                        01xx ..... Derecha.
 597+ A100              ;                        00xx ..... Recto.
 598+ A100
 599+ A100              ;*  Exclusiones.
 600+ A100
 601+ A100              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A100              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A100
 604+ A100 3A 1B 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A103 A7               and a
 606+ A104 C8               ret z
 607+ A105
 608+ A105 3A B8 8B         ld a,(Coordenada_y)
 609+ A108 A7               and a
 610+ A109 C8               ret z
 611+ A10A
 612+ A10A 3D               dec a
 613+ A10B C8               ret z
 614+ A10C
 615+ A10C FE 10            cp 16
 616+ A10E D0               ret nc
 617+ A10F
 618+ A10F              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A10F              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A10F              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A10F
 622+ A10F 21 1D 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A112 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A113
 625+ A113              ;   Decrementa el numero de disparos de entidades.
 626+ A113
 627+ A113 21 1B 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A116 35               dec (hl)
 629+ A117
 630+ A117 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A11A
 632+ A11A CD B5 90     1 call Extrae_address
 633+ A11D
 634+ A11D 13               inc de
 635+ A11E 13               inc de
 636+ A11F
 637+ A11F ED 53 2E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A123
 639+ A123              ;   Comprobamos si la caja está vacía.
 640+ A123
 641+ A123 2D               dec l
 642+ A124 7E               ld a,(hl)
 643+ A125 A7               and a
 644+ A126 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A128 2C               inc l
 646+ A129
 647+ A129              ;   Caja vacía, vamos a generar un disparo.
 648+ A129              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A129
 650+ A129 CD 4A A1         call Genera_byte_inclinacion
 651+ A12C
 652+ A12C 7E               ld a,(hl)
 653+ A12D 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A12E
 655+ A12E 2D               dec l
 656+ A12F
 657+ A12F CD 66 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A132
 659+ A132 70               ld (hl),b
 660+ A133 2D               dec l
 661+ A134 71               ld (hl),c
 662+ A135
 663+ A135 2D               dec l
 664+ A136
 665+ A136              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A136
 667+ A136 FD 7E 02         ld a,(iy+02)
 668+ A139 77               ld (hl),a
 669+ A13A 2D               dec l
 670+ A13B
 671+ A13B FD 7E 01         ld a,(iy+01)
 672+ A13E 77               ld (hl),a
 673+ A13F 2D               dec l
 674+ A140
 675+ A140 FD 7E 00         ld a,(iy+00)
 676+ A143 77               ld (hl),a
 677+ A144
 678+ A144 C9               ret
 679+ A145
 680+ A145              ;   --- --- ---
 681+ A145
 682+ A145              Situa_en_siguiente_disparo
 683+ A145
 684+ A145 2A 2E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A148 18 D0            jr 1B
 686+ A14A
 687+ A14A              ; --------------------------------------------------------------------------------------
 688+ A14A              ;
 689+ A14A              ;   09/10/24
 690+ A14A              ;
 691+ A14A
 692+ A14A              Genera_byte_inclinacion
 693+ A14A
 694+ A14A              ; Determina tendencia del disparo.
 695+ A14A
 696+ A14A 3A 74 89         ld a,(CX_Amadeus)
 697+ A14D 47               ld b,a
 698+ A14E 3A B7 8B         ld a,(Coordenada_X)
 699+ A151 90               sub b
 700+ A152 38 07            jr c,Disparo_a_derecha
 701+ A154
 702+ A154 FE 06        Disparo_a_izquierda cp 6
 703+ A156
 704+ A156 D8               ret c
 705+ A157 C8               ret z
 706+ A158
 707+ A158 CB FE            set 7,(hl)
 708+ A15A C9               ret
 709+ A15B
 710+ A15B 47           Disparo_a_derecha ld b,a
 711+ A15C 3E FF            ld a,$ff
 712+ A15E 90               sub b
 713+ A15F
 714+ A15F FE 05            cp 5
 715+ A161
 716+ A161 D8               ret c
 717+ A162 C8               ret z
 718+ A163
 719+ A163 CB F6            set 6,(hl)
 720+ A165 C9               ret
 721+ A166
 722+ A166              ; --------------------------------------------------------------------------------------
 723+ A166              ;
 724+ A166              ;   09/10/24
 725+ A166              ;
 726+ A166
 727+ A166              Modifica_puntero_de_impresion
 728+ A166
 729+ A166              ;   Puntero de impresión del disparo en BC.
 730+ A166
 731+ A166 E5               push hl
 732+ A167
 733+ A167 2A 30 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A16A CD CE 99         call NextScan
 735+ A16D
 736+ A16D 4D               ld c,l
 737+ A16E 44               ld b,h
 738+ A16F
 739+ A16F E1               pop hl
 740+ A170
 741+ A170 08               ex af,af
 742+ A171 CB 77            bit 6,a
 743+ A173 28 06            jr z,1F
 744+ A175
 745+ A175 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A179 0C               inc c
 747+ A17A C9               ret
 748+ A17B
 749+ A17B CB 7F        1 bit 7,a
 750+ A17D 28 F6            jr z,2B
 751+ A17F
 752+ A17F FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A183 0D               dec c
 754+ A184
 755+ A184 C9               ret
 756+ A185
 757+ A185              ; --------------------------------------------------------------------------------------
 758+ A185              ;
 759+ A185              ;   31/08/24
 760+ A185              ;
 761+ A185
 762+ A185              Compara_con_coordenadas_de_disparo
 763+ A185
 764+ A185 3A B8 8B         ld a,(Coordenada_y)
 765+ A188 47               ld b,a
 766+ A189 3A 35 8C         ld a,(Coordenadas_disparo_certero)
 767+ A18C 90               sub b
 768+ A18D
 769+ A18D              ; A = "0" ok
 770+ A18D              ; A = "1" ok
 771+ A18D
 772+ A18D 28 08            jr z,Comprueba_coordenada_X
 773+ A18F 3D               dec a
 774+ A190 28 05            jr z,Comprueba_coordenada_X
 775+ A192
 776+ A192              ; A = "$ff" ok
 777+ A192
 778+ A192 FE FE            cp $fe
 779+ A194 28 01            jr z,Comprueba_coordenada_X
 780+ A196
 781+ A196 C9               ret
 782+ A197
 783+ A197              Comprueba_coordenada_X
 784+ A197
 785+ A197 3A B7 8B         ld a,(Coordenada_X)
 786+ A19A 47               ld b,a
 787+ A19B 21 36 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A19E 7E               ld a,(hl)
 789+ A19F 90               sub b
 790+ A1A0
 791+ A1A0              ; A = "0" ok
 792+ A1A0              ; A = "1" ok
 793+ A1A0
 794+ A1A0 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1A2 3D               dec a
 796+ A1A3 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1A5
 798+ A1A5              ; A = "2" ok
 799+ A1A5
 800+ A1A5 3D               dec a
 801+ A1A6 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1A8
 803+ A1A8              ; A = "$ff"
 804+ A1A8
 805+ A1A8 FE FD            cp $fd
 806+ A1AA C0               ret nz
 807+ A1AB
 808+ A1AB              Activa_Impacto_en_entidad
 809+ A1AB
 810+ A1AB              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1AB
 812+ A1AB 3E 02            ld a,2
 813+ A1AD 32 BA 8B         ld (Impacto),a
 814+ A1B0
 815+ A1B0              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1B0
 817+ A1B0 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1B3 21 BD 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1B6
 820+ A1B6 73               ld (hl),e
 821+ A1B7 23               inc hl
 822+ A1B8 72               ld (hl),d
 823+ A1B9
 824+ A1B9              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1B9
 826+ A1B9 21 32 8C         ld hl,Impacto2
 827+ A1BC CB 9E            res 3,(hl)
 828+ A1BE
 829+ A1BE C9               ret
 830+ A1BF
 831+ A1BF              ; --------------------------------------------------------------------------------------
 832+ A1BF              ;
 833+ A1BF              ;   13/10/24
 834+ A1BF              ;
 835+ A1BF
 836+ A1BF              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1BF
 838+ A1BF              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1BF
 840+ A1BF 2A 0F 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1C2 06 06            ld b,6
 842+ A1C4 AF               xor a
 843+ A1C5 77           1 ld (hl),a
 844+ A1C6 2C               inc l
 845+ A1C7 10 FC            djnz 1B
 846+ A1C9
 847+ A1C9 C9               ret
 848+ A1CA
 849+ A1CA              ; --------------------------------------------------------------------------------------
 850+ A1CA              ;
 851+ A1CA              ;   29/09/24
 852+ A1CA              ;
 853+ A1CA
 854+ A1CA              Calcula_bytes_pintado_disparos
 855+ A1CA
 856+ A1CA 2A 13 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1CD 45               ld b,l
 858+ A1CE 2A 17 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1D1 7D               ld a,l
 860+ A1D2
 861+ A1D2 90               sub b
 862+ A1D3 32 19 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1D6
 864+ A1D6 C9               ret
 865+ A1D7
 866+ A1D7              ; --------------------------------------------------------------------------------------
 867+ A1D7              ;
 868+ A1D7              ;   26/10/24
 869+ A1D7              ;
 870+ A1D7              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1D7              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1D7              ;   _disparos que el álbum del FRAME actual).
 873+ A1D7
 874+ A1D7              Limpia_album_de_pintado_disparos_entidades
 875+ A1D7
 876+ A1D7 21 1A 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1DA 7E               ld a,(hl)
 878+ A1DB 2D               dec l
 879+ A1DC 46               ld b,(hl)
 880+ A1DD 90               sub b
 881+ A1DE
 882+ A1DE D8               ret c
 883+ A1DF C8               ret z
 884+ A1E0
 885+ A1E0 F5               push af
 886+ A1E1 80               add b
 887+ A1E2 77               ld (hl),a
 888+ A1E3 F1               pop af
 889+ A1E4
 890+ A1E4              ; Clean.
 891+ A1E4
 892+ A1E4 47           2 ld b,a
 893+ A1E5 AF               xor a
 894+ A1E6 2A 17 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1E9 77           1 ld (hl),a
 896+ A1EA 23               inc hl
 897+ A1EB 10 FC            djnz 1B
 898+ A1ED
 899+ A1ED C9               ret
 900+ A1EE
 901+ A1EE              ; --------------------------------------------------------------------------------------
 902+ A1EE              ;
 903+ A1EE              ;   29/09/24
 904+ A1EE              ;
 905+ A1EE
 906+ A1EE              Motor_Disparos_Amadeus
 907+ A1EE
 908+ A1EE 21 26 89         ld hl,Disparo_Amad+1
 909+ A1F1
 910+ A1F1 34               inc (hl)
 911+ A1F2 35               dec (hl)
 912+ A1F3
 913+ A1F3 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A1F4
 915+ A1F4              ;   Esta caja contiene un disparo.
 916+ A1F4
 917+ A1F4 CD FB A1         call Consulta_Impacto
 918+ A1F7 CC 14 A2         call z,Mueve_disparo_Amadeus
 919+ A1FA
 920+ A1FA C9               ret
 921+ A1FB
 922+ A1FB              ; ----------------------
 923+ A1FB              ;
 924+ A1FB              ;
 925+ A1FB              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A1FB              ;
 927+ A1FB              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A1FB
 929+ A1FB
 930+ A1FB              Consulta_Impacto
 931+ A1FB
 932+ A1FB              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A1FB              ;   _sea lo más coherente posible.
 934+ A1FB
 935+ A1FB E5               push hl
 936+ A1FC 2B               dec hl
 937+ A1FD CD F0 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A200 E1               pop hl
 939+ A201 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A202
 941+ A202 C8               ret z
 942+ A203
 943+ A203 3A 32 8C         ld a,(Impacto2)
 944+ A206 CB DF            set 3,a
 945+ A208 32 32 8C         ld (Impacto2),a
 946+ A20B
 947+ A20B E5               push hl
 948+ A20C CD DD A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A20F E1               pop hl
 950+ A210 CD 2D A2         call Elimina_disparo_Amadeus
 951+ A213
 952+ A213 C9               ret
 953+ A214
 954+ A214              ; ----------------------
 955+ A214              ;
 956+ A214              ;
 957+ A214              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A214
 959+ A214              Mueve_disparo_Amadeus
 960+ A214
 961+ A214 CD B5 90         call Extrae_address
 962+ A217
 963+ A217 CD DD 99         call PreviousScan
 964+ A21A CD DD 99         call PreviousScan
 965+ A21D CD DD 99         call PreviousScan
 966+ A220 CD DD 99         call PreviousScan
 967+ A223
 968+ A223              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A223
 970+ A223 7C               ld a,h
 971+ A224 D6 40            sub $40
 972+ A226 EB               ex de,hl
 973+ A227 38 04            jr c,Elimina_disparo_Amadeus
 974+ A229
 975+ A229               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A229
 977+ A229 73               ld (hl),e
 978+ A22A 23               inc hl
 979+ A22B 72               ld (hl),d
 980+ A22C
 981+ A22C C9               ret
 982+ A22D
 983+ A22D              ; ----------------------
 984+ A22D              ;
 985+ A22D              ;   29/9/24
 986+ A22D
 987+ A22D              Elimina_disparo_Amadeus
 988+ A22D
 989+ A22D              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A22D              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A22D
 992+ A22D              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A22D              ;   	defw 0											; Puntero de impresión.
 994+ A22D
 995+ A22D 2B               dec hl
 996+ A22E 2B               dec hl
 997+ A22F
 998+ A22F AF               xor a
 999+ A230 77               ld (hl),a
1000+ A231 23               inc hl
1001+ A232 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A233
1003+ A233 23               inc hl
1004+ A234 77               ld (hl),a
1005+ A235 23               inc hl
1006+ A236 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A237
1008+ A237 3E 01            ld a,1
1009+ A239 32 1C 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A23C
1011+ A23C CD BF A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A23F
1013+ A23F AF               xor a
1014+ A240 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A241
1016+ A241 C9               ret
1017+ A242
1018+ A242              ; --------------------------------------------------------------------------------------
1019+ A242              ;
1020+ A242              ;   13/10/24
1021+ A242              ;
1022+ A242
1023+ A242              Pinta_disparos_Amadeus
1024+ A242
1025+ A242 06 02            ld b,2
1026+ A244 ED 73 03 8C      ld (Stack),sp
1027+ A248 ED 7B 11 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A24C D1           3 pop de
1029+ A24D 14               inc d
1030+ A24E 15               dec d
1031+ A24F 28 1C            jr z,1F
1032+ A251 E1               pop hl
1033+ A252
1034+ A252              Imprime_scanlines_en_pantalla
1035+ A252
1036+ A252              ; 1er scanline
1037+ A252
1038+ A252 1A               ld a,(de)
1039+ A253 AE               xor (hl)
1040+ A254 77               ld (hl),a
1041+ A255
1042+ A255 1C               inc e
1043+ A256 2C               inc l
1044+ A257
1045+ A257 1A               ld a,(de)
1046+ A258 AE               xor (hl)
1047+ A259 77               ld (hl),a
1048+ A25A
1049+ A25A 1D               dec e
1050+ A25B E1               pop hl
1051+ A25C
1052+ A25C              ; 2º scanline
1053+ A25C
1054+ A25C 1A               ld a,(de)
1055+ A25D AE               xor (hl)
1056+ A25E 77               ld (hl),a
1057+ A25F
1058+ A25F 1C               inc e
1059+ A260 2C               inc l
1060+ A261
1061+ A261 1A               ld a,(de)
1062+ A262 AE               xor (hl)
1063+ A263 77               ld (hl),a
1064+ A264
1065+ A264 1D               dec e
1066+ A265
1067+ A265 18 06            jr 1F
1068+ A267
1069+ A267 ED 7B 0F 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A26B 18 DF            jr 3B
1071+ A26D 10 F8        1 djnz 2B
1072+ A26F ED 7B 03 8C      ld sp,(Stack)
1073+ A273 C9               ret
1074+ A274
1075+ A274              ; --------------------------------------------------------------------------------------
1076+ A274              ;
1077+ A274              ;   13/10/24
1078+ A274              ;
1079+ A274              ;   Modifica: HL,BC y DE.
1080+ A274
1081+ A274
1082+ A274              Genera_datos_de_impresion_disparos_Amadeus
1083+ A274
1084+ A274 ED 73 03 8C      ld (Stack),sp
1085+ A278 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A27B D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A27C
1088+ A27C 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A27D 15               dec d
1090+ A27E
1091+ A27E 28 0E            jr z,Salida
1092+ A280
1093+ A280              Genera_scanlines_de_disparo_Amadeus
1094+ A280
1095+ A280 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A281              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A281 ED 7B 0F 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A285
1099+ A285 C1               pop bc
1100+ A286 C1               pop bc
1101+ A287 C1               pop bc
1102+ A288
1103+ A288 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A289 CD DD 99         call PreviousScan
1105+ A28C E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A28D D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A28E
1108+ A28E              Salida
1109+ A28E
1110+ A28E ED 7B 03 8C      ld sp,(Stack)
1111+ A292
1112+ A292 C9               ret
1113+ A293
1114+ A293              ; --------------------------------------------------------------------------------------
1115+ A293              ;
1116+ A293              ;   12/09/24
1117+ A293              ;
1118+ A293
1119+ A293              Genera_disparo_Amadeus
1120+ A293
1121+ A293              ;*  Exclusiones.
1122+ A293
1123+ A293 3A 1C 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A296 A7               and a
1125+ A297 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A298
1127+ A298 3D               dec a
1128+ A299 32 1C 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A29C
1130+ A29C              Define_puntero_objeto_disparo
1131+ A29C
1132+ A29C              ;   Inicializamos contador.
1133+ A29C
1134+ A29C 06 00            ld b,0
1135+ A29E
1136+ A29E 2A 78 89         ld hl,(p.imp.amadeus)
1137+ A2A1 2C               inc l
1138+ A2A2
1139+ A2A2 3E 80            ld a,$80
1140+ A2A4 BE               cp (hl)
1141+ A2A5 28 0D            jr z,1F
1142+ A2A7
1143+ A2A7 04               inc b
1144+ A2A8
1145+ A2A8 3E 60            ld a,$60
1146+ A2AA BE               cp (hl)
1147+ A2AB 28 07            jr z,1F
1148+ A2AD
1149+ A2AD
1150+ A2AD 04               inc b
1151+ A2AE
1152+ A2AE 3E 18            ld a,$18
1153+ A2B0 BE               cp (hl)
1154+ A2B1 28 01            jr z,1F
1155+ A2B3
1156+ A2B3 04               inc b
1157+ A2B4
1158+ A2B4              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2B4
1160+ A2B4              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2B4
1162+ A2B4 CD DD 99     1 call PreviousScan
1163+ A2B7
1164+ A2B7 78               ld a,b
1165+ A2B8 CB 3F            srl a
1166+ A2BA 28 03            jr z,4F
1167+ A2BC
1168+ A2BC              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2BC E5               push hl
1170+ A2BD 18 02            jr 5F
1171+ A2BF 2D           4 dec l
1172+ A2C0 E5               push hl
1173+ A2C1              ; ---
1174+ A2C1
1175+ A2C1              ;   Calcula el Puntero_objeto del disparo.
1176+ A2C1
1177+ A2C1 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2C4 04               inc b
1179+ A2C5 05               dec b
1180+ A2C6 28 04            jr z,2F
1181+ A2C8
1182+ A2C8              ;   Nos desplazamos por el índice de disparos.
1183+ A2C8
1184+ A2C8 2C           3 inc l
1185+ A2C9 2C               inc l
1186+ A2CA 10 FC            djnz 3B
1187+ A2CC
1188+ A2CC              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2CC CD B5 90     2 call Extrae_address
1190+ A2CF E5               push hl
1191+ A2D0              ; ---
1192+ A2D0
1193+ A2D0              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2D0              ; HL en el 1er .db de la caja.
1195+ A2D0
1196+ A2D0 21 25 89         ld hl,Disparo_Amad
1197+ A2D3
1198+ A2D3 06 02            ld b,2
1199+ A2D5
1200+ A2D5 D1           6 pop de
1201+ A2D6 73               ld (hl),e
1202+ A2D7 23               inc hl
1203+ A2D8 72               ld (hl),d
1204+ A2D9 23               inc hl
1205+ A2DA
1206+ A2DA 10 F9            djnz 6B
1207+ A2DC
1208+ A2DC C9               ret
1209+ A2DD
1210+ A2DD              Genera_coordenadas_de_disparo_Amadeus
1211+ A2DD
1212+ A2DD              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2DD              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2DD              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2DD
1216+ A2DD CD B5 90         call Extrae_address
1217+ A2E0 CD D4 94         call Genera_coordenadas
1218+ A2E3
1219+ A2E3 3D               dec a
1220+ A2E4
1221+ A2E4 21 35 8C         ld hl,Coordenadas_disparo_certero
1222+ A2E7 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2E8 23               inc hl
1224+ A2E9 3A B7 8B         ld a,(Coordenada_X)
1225+ A2EC 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2ED
1227+ A2ED AF               xor a
1228+ A2EE 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2EF
1230+ A2EF C9               ret
1231+ A2F0
1232+ A2F0              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2F0              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2F0              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2F0
1236+ A2F0              ; ----------------------------------------------
1237+ A2F0              ;
1238+ A2F0              ;   27/08/24
1239+ A2F0              ;
1240+ A2F0              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2F0              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2F0
1243+ A2F0              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2F0
1245+ A2F0              Extraccion_de_datos
1246+ A2F0
1247+ A2F0 13               inc de
1248+ A2F1 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2F2
1250+ A2F2 5E               ld e,(hl)
1251+ A2F3 23               inc hl
1252+ A2F4 56               ld d,(hl)
1253+ A2F5
1254+ A2F5 23               inc hl
1255+ A2F6
1256+ A2F6 4E               ld c,(hl)
1257+ A2F7 23               inc hl
1258+ A2F8 46               ld b,(hl)
1259+ A2F9
1260+ A2F9 C5               push bc
1261+ A2FA E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A2FB
1263+ A2FB              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A2FB
1265+ A2FB CD DD 99         call PreviousScan
1266+ A2FE CD DD 99         call PreviousScan
1267+ A301
1268+ A301              Detecta_impacto_
1269+ A301
1270+ A301 1A               ld a,(de)
1271+ A302 A6               and (hl)
1272+ A303 C0               ret nz
1273+ A304
1274+ A304 13               inc de
1275+ A305 23               inc hl
1276+ A306
1277+ A306 1A               ld a,(de)
1278+ A307 A6               and (hl)
1279+ A308 C9               ret
1280+ A309
1281+ A309              ; -------------------------------------------------------------------------------------------------------------
1282+ A309              ;
1283+ A309              ;   8/8/24
1284+ A309              ;
1285+ A309              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A309              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A309              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A309              ;
1289+ A309              ;   MODIFICA: HL,DE,BC y A.
1290+ A309              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A309              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A309
1293+ A309              Colision_Entidad_Amadeus
1294+ A309
1295+ A309              ; Posible contacto de entidad con Amadeus. ?????
1296+ A309
1297+ A309              ; Exclusiones:
1298+ A309
1299+ A309 3A 55 8C         ld a,(Shield)
1300+ A30C A7               and a
1301+ A30D C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A30E
1303+ A30E 21 2B 8C         ld hl,Ctrl_3
1304+ A311 CB 76            bit 6,(hl)
1305+ A313 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A314
1307+ A314 21 32 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A317 CB 56            bit 2,(hl)
1309+ A319 C0               ret nz
1310+ A31A
1311+ A31A 3A B8 8B     	ld a,(Coordenada_y)
1312+ A31D FE 14        	cp $14
1313+ A31F D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A320
1315+ A320 3A 77 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A323 A7               and a
1317+ A324 C0               ret nz
1318+ A325
1319+ A325              Genera_coordenadas_X
1320+ A325
1321+ A325              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A325              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A325
1324+ A325              ;   Limpiamos almacenes.
1325+ A325
1326+ A325              ;    call Limpia_Coordenadas_X
1327+ A325
1328+ A325              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A325
1330+ A325 21 37 8C         ld hl,Coordenadas_X_Entidad
1331+ A328 3A B7 8B         ld a,(Coordenada_X)
1332+ A32B CD 4D A3         call Guarda_coordenadas_X
1333+ A32E
1334+ A32E              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A32E
1336+ A32E 3A 74 89         ld a,(CX_Amadeus)
1337+ A331 CD 4D A3         call Guarda_coordenadas_X
1338+ A334 CD 61 A3         call Compara_coordenadas_X
1339+ A337 C0               ret nz
1340+ A338
1341+ A338 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A33A 32 BA 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A33D
1344+ A33D 2A F6 8B         ld hl,(Puntero_store_caja)
1345+ A340 2C               inc l
1346+ A341 2C               inc l
1347+ A342 2C               inc l
1348+ A343 2C               inc l
1349+ A344 22 33 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A347
1351+ A347 21 32 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A34A CB D6            set 2,(hl)
1353+ A34C
1354+ A34C C9               ret
1355+ A34D
1356+ A34D               ; ----- ----- ----- ----- -----
1357+ A34D
1358+ A34D 77           Guarda_coordenadas_X ld (hl),a
1359+ A34E 3C               inc a
1360+ A34F 2C               inc l
1361+ A350 77               ld (hl),a
1362+ A351 3C               inc a
1363+ A352 2C               inc l
1364+ A353 77               ld (hl),a
1365+ A354 2C               inc l
1366+ A355 C9               ret
1367+ A356
1368+ A356 AF           Limpia_Coordenadas_X xor a
1369+ A357 06 06            ld b,6
1370+ A359 21 3A 8C         ld hl,Coordenadas_X_Amadeus
1371+ A35C 77           1 ld (hl),a
1372+ A35D 23               inc hl
1373+ A35E 10 FC            djnz 1B
1374+ A360 C9               ret
1375+ A361
1376+ A361              ; ----- ----- ----- ----- -----
1377+ A361
1378+ A361              Compara_coordenadas_X
1379+ A361
1380+ A361 DD 21 37 8C      ld ix,Coordenadas_X_Entidad
1381+ A365 DD 7E 00         ld a,(ix+0)
1382+ A368 CD 76 A3         call Comparando
1383+ A36B C8               ret z
1384+ A36C
1385+ A36C 3C               inc a
1386+ A36D CD 85 A3         call Comparando_1
1387+ A370 C8               ret z
1388+ A371
1389+ A371 3C               inc a
1390+ A372 CD 85 A3         call Comparando_1
1391+ A375 C9               ret
1392+ A376
1393+ A376              ; ----- ----- ----- ----- -----
1394+ A376              ;
1395+ A376              ;   4/12/23
1396+ A376              ;
1397+ A376              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A376
1399+ A376              Comparando
1400+ A376
1401+ A376 DD 2C            inc ixl
1402+ A378 DD 2C            inc ixl
1403+ A37A DD 2C            inc ixl
1404+ A37C
1405+ A37C DD 46 00         ld b,(ix+0)
1406+ A37F DD 4E 01         ld c,(ix+1)
1407+ A382 DD 56 02         ld d,(ix+2)
1408+ A385
1409+ A385 B8           Comparando_1 cp b
1410+ A386 C8               ret z
1411+ A387 B9               cp c
1412+ A388 C8               ret z
1413+ A389 BA               cp d
1414+ A38A C9               ret
1415+ A38B
1416+ A38B              ; -----------------------------------------------------------------------
1417+ A38B              ;
1418+ A38B              ;   04/7/24
1419+ A38B              ;
1420+ A38B
1421+ A38B              Detecta_colision_nave_entidad
1422+ A38B
1423+ A38B              ; Exclusiones:
1424+ A38B
1425+ A38B              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A38B
1427+ A38B 21 32 8C     	ld hl,Impacto2
1428+ A38E CB 56        	bit 2,(hl)
1429+ A390 C8           	ret z
1430+ A391
1431+ A391              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A391
1433+ A391 2A 7A 89         ld hl,(Pamm_Amadeus)
1434+ A394 CD B5 90         call Extrae_address
1435+ A397 54               ld d,h
1436+ A398 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A399
1438+ A399 2A 78 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A39C 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A39E FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A3A1
1442+ A3A1 C5           1 push bc
1443+ A3A2 06 03            ld b,3
1444+ A3A4 E5               push hl
1445+ A3A5
1446+ A3A5              ; .db
1447+ A3A5
1448+ A3A5 1A           3 ld a,(de)
1449+ A3A6 A7               and a
1450+ A3A7 20 03            jr nz,4F
1451+ A3A9
1452+ A3A9 2C               inc l
1453+ A3AA 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A3AC
1455+ A3AC ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A3AE 28 04            jr z,2F
1457+ A3B0
1458+ A3B0              ; Impacto.
1459+ A3B0 FD 2D            dec iyl
1460+ A3B2 28 22            jr z,5F
1461+ A3B4
1462+ A3B4 1C           2 inc e
1463+ A3B5 10 EE            djnz 3B
1464+ A3B7
1465+ A3B7 E1               pop hl
1466+ A3B8
1467+ A3B8              ; Hay salto de línea en el puntero de impresión ???
1468+ A3B8
1469+ A3B8 7C               ld a,h
1470+ A3B9 D6 57            sub $57
1471+ A3BB 20 0A            jr nz,6F
1472+ A3BD
1473+ A3BD              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A3BD
1475+ A3BD 2A 78 89         ld hl,(p.imp.amadeus)
1476+ A3C0 3E 20            ld a,$20
1477+ A3C2 A7               and a
1478+ A3C3 85               add l
1479+ A3C4 6F               ld l,a
1480+ A3C5 18 01            jr 7F
1481+ A3C7
1482+ A3C7 24           6 inc h
1483+ A3C8
1484+ A3C8 C1           7 pop bc
1485+ A3C9 10 D6            djnz 1B
1486+ A3CB
1487+ A3CB              ;   Fin de la comparativa.
1488+ A3CB
1489+ A3CB              ;   NO HAY COLISIÓN !!!!!.
1490+ A3CB              ;
1491+ A3CB              ;   .db (Impacto) de Amadeus a "0".
1492+ A3CB              ;   RES el bit2 de (Impacto2).
1493+ A3CB              ;
1494+ A3CB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3CB              ;   Lo colocamos a "0".
1496+ A3CB
1497+ A3CB 21 32 8C         ld hl,Impacto2
1498+ A3CE CB 96            res 2,(hl)
1499+ A3D0 2A 33 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3D3 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3D5 C9               ret
1502+ A3D6
1503+ A3D6              ;   COLISIÓN !!!!!.
1504+ A3D6              ;
1505+ A3D6              ;   .db (Impacto) de Amadeus a "1".
1506+ A3D6              ;   SET el bit3 de (Impacto2).
1507+ A3D6              ;
1508+ A3D6              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3D6
1510+ A3D6 E1           5 pop hl
1511+ A3D7 C1               pop bc
1512+ A3D8
1513+ A3D8 21 77 89         ld hl,Impacto_Amadeus
1514+ A3DB 36 01            ld (hl),1
1515+ A3DD 21 32 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3E0 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3E2
1518+ A3E2 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3E5 2A 33 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3E8
1521+ A3E8 23               inc hl
1522+ A3E9 23               inc hl
1523+ A3EA 23               inc hl
1524+ A3EB
1525+ A3EB 73               ld (hl),e
1526+ A3EC 23               inc hl
1527+ A3ED 72               ld (hl),d
1528+ A3EE
1529+ A3EE              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3EE
1531+ A3EE 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3F1 21 7A 89         ld hl,Pamm_Amadeus
1533+ A3F4
1534+ A3F4 73               ld (hl),e
1535+ A3F5 23               inc hl
1536+ A3F6 72               ld (hl),d
1537+ A3F7
1538+ A3F7 C9               ret
1539+ A3F8
1540+ A3F8
1541+ A3F8
# file closed: Disparo.asm
2080  A3F8
2081  A3F8              	SAVESNA "Pruebas.sna", START
2082  A3F8
2083  A3F8
2084  A3F8
2085  A3F8
# file closed: Banco_de_pruebas.asm
