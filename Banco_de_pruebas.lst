# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											 ; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 56 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 18 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 00 00  Disparo_fb DEFW $18,$00,$18,$00
 21+  8014 18 00 00 00
 22+  8018              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8018 00 00 06 00  Disparo_fd DEFW $00,$06,$00,$00,$06,$00
 23+  801C 00 00 00 00
 23+  8020 06 00 00 00
 24+  8024
 25+  8024              ; ----------------------------------------------------------------------------------------
 26+  8024
 27+  8024              ; Badsat_izq. 2x2.
 28+  8024
 29+  8024 34 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  8026 74 81        	defw Badsat_izq_fe
 31+  8028 44 81        	defw Badsat_izq_fd
 32+  802A 14 81        	defw Badsat_izq_fc
 33+  802C E4 80        	defw Badsat_izq_fb
 34+  802E B4 80        	defw Badsat_izq_fa
 35+  8030 84 80        	defw Badsat_izq_f9
 36+  8032 54 80        	defw Badsat_izq_f8
 37+  8034
 38+  8034 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  8038 02 2A 02 55
 39+  803C 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8040 7F E8 03 60
 40+  8044 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  8048 2B E8 54 40
 41+  804C AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8050 28 00 10 00
 42+  8054
 43+  8054 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  8058 0A 00 01 15
 44+  805C 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8060 01 55 00 01
 45+  8064 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  8068 00 01 B0 00
 46+  806C 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8070 FC 00 15 F4
 47+  8074 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  8078 55 30 00 2A
 48+  807C 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8080 00 08 00 00
 49+  8084
 50+  8084 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  8088 85 00 00 8A
 51+  808C 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8090 00 AA 80 00
 52+  8094 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  8098 00 00 D8 00
 53+  809C 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  80A0 FE 00 0A FA
 54+  80A4 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  80A8 2A 98 00 15
 55+  80AC 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80B0 00 04 00 00
 56+  80B4
 57+  80B4 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80B8 42 80 00 45
 58+  80BC 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80C0 00 55 40 00
 59+  80C4 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80C8 00 00 6C 00
 60+  80CC 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80D0 FF 00 05 7D
 61+  80D4 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80D8 15 4C 00 0A
 62+  80DC 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80E0 00 02 00 00
 63+  80E4
 64+  80E4 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80E8 21 40 00 22
 65+  80EC A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80F0 00 2A A0 00
 66+  80F4 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80F8 80 00 36 00
 67+  80FC 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  8100 7F 80 02 BE
 68+  8104 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  8108 0A A6 00 05
 69+  810C 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8110 00 01 00 00
 70+  8114
 71+  8114 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  8118 10 A0 00 11
 72+  811C 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8120 00 15 50 00
 73+  8124 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  8128 40 00 1B 00
 74+  812C 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8130 BF C0 01 5F
 75+  8134 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  8138 05 53 00 02
 76+  813C A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8140 00 00 80 00
 77+  8144
 78+  8144 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  8148 08 50 00 08
 79+  814C A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8150 00 0A A8 00
 80+  8154 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  8158 A0 00 0D 80
 81+  815C 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8160 5F F8 00 AF
 82+  8164 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  8168 02 A9 00 01
 83+  816C 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8170 00 00 40 00
 84+  8174
 85+  8174 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  8178 04 28 00 04
 86+  817C 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8180 00 05 54 00
 87+  8184 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  8188 D0 00 06 C0
 88+  818C 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8190 2F FC 00 57
 89+  8194 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  8198 01 54 80 00
 90+  819C A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  81A0 00 00 20 00
 91+  81A4
 92+  81A4
 93+  81A4 B4 81        Indice_Badsat_der defw Badsat_derecha
 94+  81A6 D4 81        	defw Badsat_der_f8
 95+  81A8 04 82        	defw Badsat_der_f9
 96+  81AA 34 82        	defw Badsat_der_fa
 97+  81AC 64 82        	defw Badsat_der_fb
 98+  81AE 94 82        	defw Badsat_der_fc
 99+  81B0 C4 82        	defw Badsat_der_fd
100+  81B2 F4 82        	defw Badsat_der_fe
101+  81B4
102+  81B4 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81B8 54 40 AA 40
103+  81BC 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81C0 17 FE 06 C0
104+  81C4 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81C8 17 D4 02 2A
105+  81CC 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81D0 00 14 00 08
106+  81D4
107+  81D4 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81D8 20 00 2A 20
108+  81DC 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81E0 2A A0 00 15
109+  81E4 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81E8 00 03 60 00
110+  81EC 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81F0 F4 00 0B EA
111+  81F4 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81F8 03 2A 80 00
112+  81FC 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  8200 00 00 04 00
113+  8204
114+  8204 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  8208 10 00 15 10
115+  820C 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8210 15 50 00 0A
116+  8214 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  8218 80 01 B0 00
117+  821C 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8220 FA 00 05 F5
118+  8224 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  8228 01 95 40 00
119+  822C 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8230 00 00 02 00
120+  8234
121+  8234 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  8238 08 00 0A 88
122+  823C 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8240 0A A8 00 05
123+  8244 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  8248 C0 00 D8 00
124+  824C 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8250 FD 00 02 FA
125+  8254 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  8258 00 CA A0 00
126+  825C 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8260 80 00 01 00
127+  8264
128+  8264 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  8268 84 00 05 44
129+  826C 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8270 05 54 00 02
130+  8274 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  8278 E0 00 6C 00
131+  827C 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8280 FE 80 01 7D
132+  8284 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  8288 00 65 50 00
133+  828C 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8290 40 00 00 80
134+  8294
135+  8294 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  8298 42 00 02 A2
136+  829C 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  82A0 02 AA 00 01
137+  82A4 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  82A8 F0 00 36 00
138+  82AC 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82B0 FF 40 00 BE
139+  82B4 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82B8 00 32 A8 00
140+  82BC 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82C0 A0 00 00 40
141+  82C4
142+  82C4 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82C8 A1 00 01 51
143+  82CC 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82D0 01 55 00 00
144+  82D4 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82D8 F8 00 1B 00
145+  82DC 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82E0 FF A0 00 1F
146+  82E4 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82E8 00 09 54 00
147+  82EC 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82F0 50 00 00 20
148+  82F4
149+  82F4 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82F8 50 80 00 A8
150+  82FC 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  8300 00 AA 80 00
151+  8304 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  8308 FC 00 0D 80
152+  830C 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8310 FF D0 00 0F
153+  8314 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  8318 00 04 AA 00
154+  831C 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8320 28 00 00 10
155+  8324
156+  8324              ; ----------------------------------------------------------------------------------------
157+  8324
158+  8324              ; Amadeus. 2x2.
159+  8324
160+  8324 44 83        Indice_Amadeus_der defw Amadeus
161+  8326 00 00        	defw 0
162+  8328 64 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  832A 00 00        	defw 0
164+  832C 94 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  832E 00 00        	defw 0
166+  8330 C4 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8332 00 00        	defw 0	 								; (Fín de índice).
168+  8334
169+  8334 44 83        Indice_Amadeus_izq defw Amadeus
170+  8336 00 00        	defw 0
171+  8338 C4 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  833A 00 00        	defw 0
173+  833C 94 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  833E 00 00        	defw 0
175+  8340 64 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8342 00 00        	defw 0	 								; (Fín de índice).
177+  8344
178+  8344 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  8348 26 64 24 24
179+  834C 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8350 6F F6 67 E6
180+  8354 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  8358 F7 EF FF FF
181+  835C FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8360 8B D1 71 8E
182+  8364
183+  8364 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  8368 F1 00 09 99
184+  836C 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8370 0B 0D 00 1B
185+  8374 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  8378 80 19 F9 80
186+  837C 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8380 F3 C0 3D FB
187+  8384 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  8388 3E F7 C0 3E
188+  838C F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8390 40 1C 63 80
189+  8394
190+  8394 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  8398 3C 40 02 66
191+  839C 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  83A0 02 C3 40 06
192+  83A4 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  83A8 60 06 7E 60
193+  83AC 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83B0 3C F0 0F 7E
194+  83B4 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83B8 0F BD F0 0F
195+  83BC BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83C0 10 07 18 E0
196+  83C4
197+  83C4 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83C8 8F 10 00 99
198+  83CC 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83D0 00 B0 D0 01
199+  83D4 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83D8 D8 01 9F 98
200+  83DC 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83E0 CF 3C 03 DF
201+  83E4 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83E8 03 EF 7C 03
202+  83EC EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83F0 44 01 C6 38
203+  83F4
204+  83F4              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83F4              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83F4
  2+  83F4              ; Base de datos de entidades e Índice.
  3+  83F4              ;
  4+  83F4              ; 17/02/23
  5+  83F4
  6+  83F4              ; Control. %00000001 00000001
  7+  83F4              ;
  8+  83F4              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83F4              ;                  _ hacen las entidades hacia abajo.
 10+  83F4              ;
 11+  83F4              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83F4
 13+  83F4 FA 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83F6 02 84        	defw Disparo_2A
 15+  83F8 0A 84        	defw Disparo_3A
 16+  83FA
 17+  83FA 00 00        Disparo_1A defw 0									; Control.
 18+  83FC 00 00        	defw 0											; Puntero objeto.
 19+  83FE 00 00        	defw 0											; Puntero de impresión.
 20+  8400 00 00        	defw 0											; Rutina de impresión.
 21+  8402
 22+  8402 00 00        Disparo_2A defw 0									; Control.
 23+  8404 00 00        	defw 0											; Puntero objeto.
 24+  8406 00 00        	defw 0											; Puntero de impresión.
 25+  8408 00 00        	defw 0											; Rutina de impresión.
 26+  840A
 27+  840A 00 00        Disparo_3A defw 0
 28+  840C
 29+  840C 22 84        Indice_de_disparos_entidades defw Disparo_1
 30+  840E 2A 84        	defw Disparo_2
 31+  8410 32 84        	defw Disparo_3
 32+  8412 3A 84        	defw Disparo_4
 33+  8414 42 84        	defw Disparo_5
 34+  8416 4A 84        	defw Disparo_6
 35+  8418 52 84        	defw Disparo_7
 36+  841A 5A 84        	defw Disparo_8
 37+  841C 62 84        	defw Disparo_9
 38+  841E 6A 84        	defw Disparo_10
 39+  8420 72 84        	defw Disparo_11
 40+  8422
 41+  8422 00 00        Disparo_1 defw 0									; Control.
 42+  8424 00 00        	defw 0											; Puntero objeto.
 43+  8426 00 00        	defw 0											; Puntero de impresión.
 44+  8428 00 00        	defw 0											; Rutina de impresión.
 45+  842A
 46+  842A 00 00        Disparo_2 defw 0									; Control.
 47+  842C 00 00        	defw 0											; Puntero objeto.
 48+  842E 00 00        	defw 0											; Puntero de impresión.
 49+  8430 00 00        	defw 0											; Rutina de impresión.
 50+  8432
 51+  8432 00 00        Disparo_3 defw 0									; Control.
 52+  8434 00 00        	defw 0											; Puntero objeto.
 53+  8436 00 00        	defw 0											; Puntero de impresión.
 54+  8438 00 00        	defw 0											; Rutina de impresión.
 55+  843A
 56+  843A 00 00        Disparo_4 defw 0									; Control.
 57+  843C 00 00        	defw 0											; Puntero objeto.
 58+  843E 00 00        	defw 0											; Puntero de impresión.
 59+  8440 00 00        	defw 0											; Rutina de impresión.
 60+  8442
 61+  8442 00 00        Disparo_5 defw 0									; Control.
 62+  8444 00 00        	defw 0											; Puntero objeto.
 63+  8446 00 00        	defw 0											; Puntero de impresión.
 64+  8448 00 00        	defw 0
 65+  844A
 66+  844A 00 00        Disparo_6 defw 0									; Control.
 67+  844C 00 00        	defw 0											; Puntero objeto.
 68+  844E 00 00        	defw 0											; Puntero de impresión.
 69+  8450 00 00        	defw 0											; Rutina de impresión.
 70+  8452
 71+  8452 00 00        Disparo_7 defw 0									; Control.
 72+  8454 00 00        	defw 0											; Puntero objeto.
 73+  8456 00 00        	defw 0											; Puntero de impresión.
 74+  8458 00 00        	defw 0											; Rutina de impresión.
 75+  845A
 76+  845A 00 00        Disparo_8 defw 0									; Control.
 77+  845C 00 00        	defw 0											; Puntero objeto.
 78+  845E 00 00        	defw 0											; Puntero de impresión.
 79+  8460 00 00        	defw 0											; Rutina de impresión.
 80+  8462
 81+  8462 00 00        Disparo_9 defw 0									; Control.
 82+  8464 00 00        	defw 0											; Puntero objeto.
 83+  8466 00 00        	defw 0											; Puntero de impresión.
 84+  8468 00 00        	defw 0											; Rutina de impresión.
 85+  846A
 86+  846A 00 00        Disparo_10 defw 0									; Control.
 87+  846C 00 00        	defw 0											; Puntero objeto.
 88+  846E 00 00        	defw 0											; Puntero de impresión.
 89+  8470 00 00        	defw 0											; Rutina de impresión.
 90+  8472
 91+  8472 00 00        Disparo_11 defw 0
 92+  8474
 93+  8474              ; -------------------------------------------------------------------------------------
 94+  8474
 95+  8474              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8474
 97+  8474 BA 84        	defw Entidad_1
 98+  8476 F4 84        	defw Entidad_2
 99+  8478 2E 85        	defw Entidad_3
100+  847A 68 85        	defw Entidad_4
101+  847C              ;	...
102+  847C              ;	...
103+  847C              ;	+ entidades ...
104+  847C
105+  847C 00 00        	defw 0
106+  847E 00 00        	defw 0
107+  8480
108+  8480              ; ---------- ---------- ---------- ---------- ----------
109+  8480
110+  8480 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8482 00 00        	defw 0		 									; (Posicion_actual).
112+  8484 00 00        	defw 0	 										; (Puntero_objeto).
113+  8486 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  8489
115+  8489 05           	db %00000101									; (Attr).
116+  848A
117+  848A 24 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  848C 34 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  848E 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8490 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8492
122+  8492 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8494 04           	db 4 											; (Cuad_objeto).
124+  8495
125+  8495 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  8499
127+  8499 00 00        	db 0,0											; Variables_de_borrado
128+  849B 00 00        	defw 0											;	" " " " " " "
129+  849D 00 00        	defw 0											;	" " " " " " "
130+  849F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  84A3
132+  84A3 00 00        	db 0,0											; Variables_de_pintado
133+  84A5 00 00        	defw 0											;	" " " " " " "
134+  84A7 00 00        	defw 0											;	" " " " " " "
135+  84A9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84AD
137+  84AD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
138+  84AF
139+  84AF 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84B3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84B6
142+  84B6 00           	db 0 											; (Columnas).
143+  84B7 00 00        	defw 0											; (Limite_horizontal).
144+  84B9 00           	db 0											; (Limite_vertical).
145+  84BA
146+  84BA              ; ---------- ---------- ---------- ---------- ----------
147+  84BA
148+  84BA 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84BC 00 00        	defw 0											; (Posicion_actual).
150+  84BE 00 00        	defw 0 											; (Puntero_objeto).
151+  84C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84C3
153+  84C3 00           	db %00000000 									; (Attr).
154+  84C4
155+  84C4 00 00        	defw 0											; (Indice_Sprite_der).
156+  84C6 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84CC
160+  84CC 00 00        	defw 0											; (Posicion_inicio).
161+  84CE 00           	db 0											; (Cuad_objeto).
162+  84CF
163+  84CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84D3
165+  84D3 00 00        	db 0,0										    ; Variables_de_borrado
166+  84D5 00 00        	defw 0											;	" " " " " " "
167+  84D7 00 00        	defw 0											;	" " " " " " "
168+  84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84DD
170+  84DD 00 00        	db 0,0											; Variables_de_pintado
171+  84DF 00 00        	defw 0											;	" " " " " " "
172+  84E1 00 00        	defw 0											;	" " " " " " "
173+  84E3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84E7
175+  84E7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84E9
177+  84E9 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84ED 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84F0
180+  84F0 00           	db 0 											; (Columnas).
181+  84F1 00 00        	defw 0											; (Limite_horizontal).
182+  84F3 00           	db 0											; (Limite_vertical).
183+  84F4
184+  84F4              ; ---------- ---------- ---------- ---------- ----------
185+  84F4
186+  84F4 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84F6 00 00        	defw 0                                          ; (Posicion_actual).
188+  84F8 00 00        	defw 0											; (Puntero_objeto).
189+  84FA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84FD
191+  84FD 02           	db %00000010									; (Attr).
192+  84FE
193+  84FE A4 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  8500 24 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  8502 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  8504 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  8506
198+  8506 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  8508 02           	db 2											; (Cuad_objeto).
200+  8509
201+  8509 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  850D
203+  850D 00 00        	db 0,0											; Variables_de_borrado
204+  850F 00 00        	defw 0										 	;	" " " " " " "
205+  8511 00 00        	defw 0											;	" " " " " " "
206+  8513 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  8517
208+  8517 00 00        	db 0,0											; Variables_de_pintado
209+  8519 00 00        	defw 0											;	" " " " " " "
210+  851B 00 00        	defw 0											;	" " " " " " "
211+  851D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8521
213+  8521 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8523
215+  8523 76 93 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  8527 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  852A
218+  852A 00           	db 0 											; (Columnas).
219+  852B 00 00        	defw 0											; (Limite_horizontal).
220+  852D 00           	db 0											; (Limite_vertical).
221+  852E
222+  852E              ; ---------- ---------- ---------- ---------- ----------
223+  852E
224+  852E 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  8530 00 00        	defw 0                                          ; (Posicion_actual).
226+  8532 00 00        	defw 0											; (Puntero_objeto).
227+  8534 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  8537
229+  8537 04           	db %00000100									; (Attr).
230+  8538
231+  8538 A4 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  853A 24 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  853C
234+  853C 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  853E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  8540
237+  8540 A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  8542 01           	db 1											; (Cuad_objeto).
239+  8543
240+  8543 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  8547
242+  8547 00 00        	db 0,0											; Variables_de_borrado
243+  8549 00 00        	defw 0										 	;	" " " " " " "
244+  854B 00 00        	defw 0											;	" " " " " " "
245+  854D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  8551
247+  8551 00 00        	db 0,0											; Variables_de_pintado
248+  8553 00 00        	defw 0											;	" " " " " " "
249+  8555 00 00        	defw 0											;	" " " " " " "
250+  8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  855B
252+  855B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  855D
254+  855D 78 93 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  8561 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8564
257+  8564 00           	db 0 											; (Columnas).
258+  8565 00 00        	defw 0											; (Limite_horizontal).
259+  8567 00           	db 0											; (Limite_vertical).
260+  8568
261+  8568              ; ---------- ---------- ---------- ---------- ----------
262+  8568
263+  8568 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  856A 00 00        	defw 0                                          ; (Posicion_actual).
265+  856C 00 00        	defw 0 											; (Puntero_objeto).
266+  856E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  8571
268+  8571 01           	db %00000001									; (Attr).
269+  8572
270+  8572 A4 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8574 24 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  8576
273+  8576 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  8578 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  857A
276+  857A BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  857C 00           	db 0											; (Cuad_objeto).
278+  857D
279+  857D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  8581
281+  8581 00 00        	db 0,0											; Variables_de_borrado
282+  8583 00 00        	defw 0										 	;	" " " " " " "
283+  8585 00 00        	defw 0											;	" " " " " " "
284+  8587 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  858B
286+  858B 00 00        	db 0,0											; Variables_de_pintado
287+  858D 00 00        	defw 0											;	" " " " " " "
288+  858F 00 00        	defw 0											;	" " " " " " "
289+  8591 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8595
291+  8595 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  8597
293+  8597 68 93 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  859B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  859E
296+  859E 00           	db 0 											; (Columnas).
297+  859F 00 00        	defw 0											; (Limite_horizontal).
298+  85A1 00           	db 0											; (Limite_vertical).
299+  85A2
# file closed: Entidades_y_disparos.asm
 21   85A2
 22   85A2              ; ******************************************************************************************************************************************************************************************
 23   85A2              ; Constantes.
 24   85A2              ; ******************************************************************************************************************************************************************************************
 25   85A2              ;
 26   85A2              ; 8/11/22
 27   85A2              ;
 28   85A2              ; Constantes generales.
 29   85A2              ;
 30   85A2
 31   85A2              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   85A2              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   85A2              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   85A2              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   85A2
 36   85A2              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   85A2              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   85A2              ;                               				        ; De momento situamos este almacén en $7000.
 39   85A2              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   85A2              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   85A2              ;                               				        ; De momento situamos este almacén en $7060.
 42   85A2
 43   85A2              ; ******************************************************************************************************************************************************************************************
 44   85A2              ; Variables.
 45   85A2              ; ******************************************************************************************************************************************************************************************
 46   85A2              ;
 47   85A2              ; 10/11/22
 48   85A2              ;
 49   85A2              ; Variables de DRAW. (Motor principal).
 50   85A2              ;
 51   85A2              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   85A2
 53   85A2 02           Filas db 2												; Filas. [DRAW]
 54   85A3 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   85A4 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   85A6 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   85A8 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   85A9 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   85AA
 60   85AA              ; ---------- ---------- ---------- ---------;      ;---------
 61   85AA
 62   85AA 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   85AB              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   85AB              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   85AB 04           Attr db %00000100										; Atributos de la entidad:
 66   85AC
 67   85AC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85AC              ;
 69   85AC              ;	COLORES: 0 ..... NEGRO
 70   85AC              ;    		 1 ..... AZUL
 71   85AC              ; 			 2 ..... ROJO
 72   85AC              ;			 3 ..... MAGENTA
 73   85AC              ; 			 4 ..... VERDE
 74   85AC              ; 			 5 ..... CIAN
 75   85AC              ;			 6 ..... AMARILLO
 76   85AC              ; 			 7 ..... BLANCO
 77   85AC
 78   85AC A4 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85AE 24 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85B0 00 00        Puntero_DESPLZ_der defw 0
 81   85B2 00 00        Puntero_DESPLZ_izq defw 0
 82   85B4
 83   85B4 21 47        Posicion_inicio defw $4721								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85B6 01           Cuad_objeto db 1			 							; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85B7
 86   85B7              ; Variables de objeto. (Características).
 87   85B7
 88   85B7 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85B8 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85B9 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85BA 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85BB
 93   85BB 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85BF 00 00        	defw 0
 96   85C1 00 00 00 00  	db 0,0,0,0
 97   85C5
 98   85C5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85C7 00 00        	defw 0
100   85C9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85CB 00 00 00 00  	db 0,0,0,0
102   85CF
103   85CF              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85CF
105   85CF 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85D0              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85D0              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85D0              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85D0              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85D0              ;
111   85D0              ; 														DESCRIPCIÖN:
112   85D0              ;
113   85D0              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85D0              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85D0              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85D0              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85D0              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85D0              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85D0              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85D0              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85D0              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85D0              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85D0              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85D0              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85D0              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85D0              ;
127   85D0              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85D0              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85D0              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85D0
131   85D0 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85D1
133   85D1              ; Movimiento.
134   85D1
135   85D1 64 93        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   85D3 00 00        Puntero_mov defw 0
137   85D5 00           Contador_db_mov db 0
138   85D6 00           Incrementa_puntero db 0
139   85D7 00           Repetimos_db db 0
140   85D8
141   85D8              ; Variables de funcionamiento. [DRAW].
142   85D8
143   85D8 00           Columnas db 0
144   85D9 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85DB              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85DB 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85DC
148   85DC              ; 59 Bytes por entidad.
149   85DC              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85DC              ;					         		---------;      ;---------
151   85DC
152   85DC
153   85DC              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85DC
155   85DC 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85DD
157   85DD              ;														DESCRIPCIÓN:
158   85DD              ;
159   85DD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85DD              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85DD              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85DD              ; Gestión de ENTIDADES.
163   85DD
164   85DD 00 00        Puntero_store_entidades defw 0
165   85DF 00 00        Puntero_restore_entidades defw 0
166   85E1 00 00        Indice_restore defw 0
167   85E3 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
168   85E4 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
169   85E5              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
170   85E5              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
171   85E5              ;														; _ (Numero_de_malotes)="0".
172   85E5 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
173   85E7              ;														; _variable para almacenar lo posición del puntero_
174   85E7              ; 														; _de pila, SP.
175   85E7 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
176   85E9              ;														; La utiliza la rutina [Extrae_foto_registros].
177   85E9 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
178   85EB              ;														; _el snapshot de los registros de la siguiente entidad.
179   85EB              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
180   85EB 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
181   85ED              ;														; _el snapshot de los registros del siguiente disparo.
182   85ED              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
183   85ED
184   85ED              ; Gestión de Disparos.
185   85ED
186   85ED 00           Numero_de_disparotes db 0
187   85EE 0C 84        Stack_guns defw Indice_de_disparos_entidades			; Este puntero se irá desplazando por el índice de disparos_
188   85F0              ;														; _a medida que estos se van creando. Se sitúa en el siguiente_
189   85F0              ;														; _campo "vacio" del índice para alojar un nuevo disparo.
190   85F0 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
191   85F2 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
192   85F4
193   85F4
194   85F4
195   85F4              ; Gestión de FRAMES.
196   85F4
197   85F4 00           Switch db 0
198   85F5
199   85F5              ; Variables de Raster y localización en pantalla.
200   85F5
201   85F5 00 FF        Temp_Raster defw $ff00
202   85F7
203   85F7              ; Rutina principal *************************************************************************************************************************************************************************
204   85F7              ;
205   85F7              ;	14/11/22
206   85F7
207   85F7 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
208   85FA
209   85FA 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
210   85FC ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
211   85FE ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
212   8600 F3           	DI
213   8601
214   8601 3E 01        	ld a,1
215   8603 D3 FE        	out ($fe),a
216   8605
217   8605 3E 07        	ld a,%00000111
218   8607 CD 9D 8F     	call Cls
219   860A
220   860A              ;	call Pinta_FILAS
221   860A
222   860A CD 55 88     	call Pulsa_ENTER
223   860D
224   860D 21 E3 85     	ld hl,Numero_de_entidades
225   8610 46           	ld b,(hl)
226   8611 04           	inc b
227   8612 05           	dec b
228   8613 28 1C        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
229   8615
230   8615              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
231   8615              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
232   8615              ;	Pintamos el resto de entidades:
233   8615
234   8615 CD 4E 87     	call Inicia_punteros_de_entidades
235   8618
236   8618              ;	INICIA ENTIDADES!!!!!
237   8618
238   8618 C5           1 push bc  												; Guardo el contador de entidades.
239   8619 CD A8 87      	call Inicia_Puntero_objeto
240   861C CD ED 89     	call Draw
241   861F              ; ----
242   861F CD 0D 90     	call Mov_right
243   8622 CD 0D 90     	call Mov_right
244   8625 CD ED 89     	call Draw
245   8628              ; ----
246   8628
247   8628
248   8628 CD A0 7F     	call Guarda_foto_registros
249   862B CD F0 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
250   862E C1           	pop bc
251   862F 10 E7        	djnz 1B  											; Decremento el contador de entidades.
252   8631
253   8631              ; 	INICIA AMADEUS!!!!!
254   8631
255   8631 CD 31 88     3 call Restore_Amadeus
256   8634 CD A8 87     	call Inicia_Puntero_objeto
257   8637 CD ED 89     	call Draw
258   863A CD A0 7F     	call Guarda_foto_registros
259   863D CD 43 88     	call Store_Amadeus
260   8640
261   8640              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
262   8640
263   8640 CD 64 87     	call Inicia_Puntero_Disparo_Entidades
264   8643 CD 6B 87     	call Inicia_Puntero_Disparo_Amadeus
265   8646
266   8646
267   8646              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
268   8646
269   8646 CD 4E 87     	call Inicia_punteros_de_entidades
270   8649 CD 1F 88     	call Restore_Primera_entidad
271   864C
272   864C 3A E3 85     	ld a,(Numero_de_entidades)
273   864F 3C           	inc a
274   8650 32 E4 85     	ld (Numero_de_malotes),a
275   8653
276   8653 FB           2 ei
277   8654 18 FD        	jr 2B
278   8656
279   8656              ; -----------------------------------------------------------------------------------
280   8656
281   8656              Frame
282   8656
283   8656              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
284   8656              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
285   8656
286   8656 3E 02            ld a,2
287   8658 D3 FE            out ($fe),a
288   865A CD F1 8C     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
289   865D CD 2A 8D     	call Extrae_foto_registros_disparos
290   8660 3E 01            ld a,1
291   8662 D3 FE            out ($fe),a
292   8664
293   8664 CD 8B 88     	call Detecta_disparo_entidad
294   8667 CD 8A 87     	call Calcula_numero_de_disparotes
295   866A
296   866A C9           	ret
297   866B
298   866B
299   866B 18 FE            jr $
300   866D
301   866D              ; ----------------------------------------------------------------------
302   866D
303   866D 21 00 70     	ld hl,Album_de_fotos
304   8670 22 E9 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
305   8673              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
306   8673 3A E3 85         ld a,(Numero_de_entidades)
307   8676 47               ld b,a
308   8677 A7           	and a
309   8678 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
310   867A
311   867A C5           2 push bc
312   867B CD C7 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
313   867E 3A CF 85     	ld a,(Ctrl_0)
314   8681 CB 67        	bit 4,a
315   8683 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
316   8685
317   8685              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
318   8685              ; Las entidades sólo generan disparo cuando se mueven.
319   8685              ; 16/02/23.
320   8685              ; [[[
321   8685 CD 8B 88     	call Detecta_disparo_entidad
322   8688              ; ]]]
323   8688
324   8688 CD 15 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
325   868B
326   868B 21 CF 85     1 ld hl,Ctrl_0
327   868E CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
328   8690 AF           	xor a
329   8691 32 D0 85     	ld (Obj_dibujado),a
330   8694 CD F0 87     	call Store_Restore_entidades
331   8697 C1           	pop bc
332   8698 10 E0        	djnz 2B
333   869A
334   869A              ; Tras la gestión de las entidades, ... AMADEUS.
335   869A
336   869A CD 31 88     4 call Restore_Amadeus
337   869D CD E6 86     	call Mov_Amadeus
338   86A0 3A CF 85     	ld a,(Ctrl_0)
339   86A3 CB 67        	bit 4,a
340   86A5 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
341   86A7 CD 15 87     	call Guarda_foto_entidad_a_pintar
342   86AA
343   86AA 21 CF 85     3 ld hl,Ctrl_0
344   86AD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
345   86AF AF           	xor a
346   86B0 32 D0 85     	ld (Obj_dibujado),a
347   86B3 CD 43 88     	call Store_Amadeus
348   86B6
349   86B6              ; -----
350   86B6
351   86B6 CD 4E 87     	call Inicia_punteros_de_entidades
352   86B9 CD 1F 88     	call Restore_Primera_entidad
353   86BC
354   86BC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
355   86BC
356   86BC CD 72 87     	call Calcula_numero_de_malotes
357   86BF CD 8A 87     	call Calcula_numero_de_disparotes
358   86C2
359   86C2 3E 04        	ld a,4
360   86C4 D3 FE        	out ($fe),a
361   86C6 C9           	ret
362   86C7
363   86C7              ; --------------------------------------------------------------------------------------------------------------
364   86C7              ;
365   86C7              ;	29/1/23
366   86C7
367   86C7              Mov_obj
368   86C7
369   86C7              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
370   86C7
371   86C7 AF           	xor a
372   86C8 32 D0 85     	ld (Obj_dibujado),a
373   86CB CD 1F 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
374   86CE              ;														; Obj_dibujado="0".
375   86CE              ; Movemos Entidades malignas.
376   86CE
377   86CE CD 7A 93     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
378   86D1 3A CF 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
379   86D4 CB 67        	bit 4,a
380   86D6 C8           	ret z
381   86D7
382   86D7              ; ---------
383   86D7
384   86D7 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
385   86D9 32 D0 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
386   86DC CD 1F 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
387   86DF CD 36 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
388   86E2 CD 05 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
389   86E5 C9           	ret													; _de la misma.
390   86E6
391   86E6              ; --------------------------------------------------------------------------------------------------------------
392   86E6              ;
393   86E6              ;	29/1/23
394   86E6
395   86E6              Mov_Amadeus
396   86E6
397   86E6 AF           	xor a
398   86E7 32 D0 85     	ld (Obj_dibujado),a
399   86EA CD 1F 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
400   86ED              ;														; Obj_dibujado="0".
401   86ED              ; Movemos Amadeus.
402   86ED
403   86ED CD 69 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
404   86F0 3A CF 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
405   86F3 CB 67        	bit 4,a
406   86F5 C8           	ret z
407   86F6
408   86F6              ; ---------
409   86F6
410   86F6 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
411   86F8 32 D0 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
412   86FB CD 1F 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
413   86FE CD 36 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
414   8701 CD 05 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
415   8704 C9           	ret													; _de la nave.
416   8705
417   8705              ; --------------------------------------------------------------------------------------------------------------
418   8705              ;
419   8705              ;	31/01/23
420   8705              ;
421   8705              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
422   8705
423   8705              Guarda_foto_entidad_a_borrar
424   8705
425   8705 CD C7 8C     	call Prepara_draw
426   8708 CD 01 8C     	call calcula_CColumnass
427   870B CD 38 8C     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
428   870E CD 8D 8C     	call Define_rutina_de_impresion
429   8711 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
430   8714 C9           	ret
431   8715
432   8715              ; --------------------------------------------------------------------------------------------------------------
433   8715              ;
434   8715              ;	31/01/23
435   8715              ;
436   8715              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
437   8715              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
438   8715
439   8715              Guarda_foto_entidad_a_pintar
440   8715
441   8715 CD 42 87     	call Repone_pintar
442   8718 CD ED 89     	call Draw
443   871B CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
444   871E C9           	ret
445   871F
446   871F              ; --------------------------------------------------------------------------------------------------------------
447   871F              ;
448   871F              ;
449   871F
450   871F 21 A2 85     Prepara_var_pintado_borrado	ld hl,Filas
451   8722 3A D0 85     	ld a,(Obj_dibujado)
452   8725 A7           	and a
453   8726 28 05        	jr z,1F
454   8728 11 C5 85     	ld de,Variables_de_pintado
455   872B 18 03        	jr 2F
456   872D 11 BB 85     1 ld de,Variables_de_borrado
457   8730 01 08 00     2 ld bc,8
458   8733 ED B0        	ldir
459   8735 C9           	ret
460   8736
461   8736              ; --------------------------------------------------------------------------------------------------------------
462   8736
463   8736 21 BB 85     Repone_borrar ld hl,Variables_de_borrado
464   8739 11 A2 85     	ld de,Filas
465   873C 01 08 00     	ld bc,8
466   873F ED B0        	ldir
467   8741 C9           	ret
468   8742
469   8742 21 C5 85     Repone_pintar ld hl,Variables_de_pintado
470   8745 11 A2 85     	ld de,Filas
471   8748 01 08 00     	ld bc,8
472   874B ED B0        	ldir
473   874D C9           	ret
474   874E
475   874E              ; *************************************************************************************************************************************************************
476   874E              ;
477   874E              ; 8/1/23
478   874E              ;
479   874E              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
480   874E              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
481   874E              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
482   874E
483   874E              ; Destruye HL y DE !!!!!
484   874E
485   874E              Inicia_punteros_de_entidades
486   874E
487   874E 21 74 84     	ld hl,Indice_de_entidades
488   8751 CD A2 87         call Extrae_address
489   8754 22 DD 85         ld (Puntero_store_entidades),hl
490   8757 21 76 84     	ld hl,Indice_de_entidades+2
491   875A 22 E1 85     	ld (Indice_restore),hl
492   875D CD A2 87     	call Extrae_address
493   8760 22 DF 85     	ld (Puntero_restore_entidades),hl
494   8763 C9               ret
495   8764
496   8764              ; *************************************************************************************************************************************************************
497   8764              ;
498   8764              ; 8/1/23
499   8764              ;
500   8764              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
501   8764
502   8764 21 0C 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
503   8767 22 F0 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
504   876A C9           	ret
505   876B 21 F4 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
506   876E 22 F2 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
507   8771 C9           	ret
508   8772
509   8772              ; -------------------------------------------------------------------------------------------------------------
510   8772              ;
511   8772              ; 28/2/23
512   8772              ;
513   8772
514   8772              Calcula_numero_de_malotes
515   8772
516   8772 21 00 70     	ld hl,Album_de_fotos
517   8775 EB           	ex de,hl
518   8776 2A E9 85     	ld hl,(Stack_snapshot)
519   8779
520   8779 06 00        	ld b,0
521   877B 7D           	ld a,l
522   877C 93           	sub e
523   877D 28 07        	jr z,1F
524   877F
525   877F              ; Nº de malotes no es "0".
526   877F
527   877F D6 06        2 sub 6
528   8781 04           	inc b
529   8782 A7           	and a
530   8783 20 FA        	jr nz,2B
531   8785 78           	ld a,b
532   8786
533   8786 32 E4 85     1 ld (Numero_de_malotes),a
534   8789 C9           	ret
535   878A
536   878A              ; -------------------------------------------------------------------------------------------------------------
537   878A              ;
538   878A              ; 28/2/23
539   878A              ;
540   878A
541   878A              Calcula_numero_de_disparotes
542   878A
543   878A 21 60 70     	ld hl,Album_de_fotos_disparos
544   878D EB           	ex de,hl
545   878E 2A EB 85     	ld hl,(Stack_snapshot_disparos)
546   8791
547   8791 06 00        	ld b,0
548   8793 7D           	ld a,l
549   8794 93           	sub e
550   8795 28 07        	jr z,1F
551   8797
552   8797              ; Nº de malotes no es "0".
553   8797
554   8797 D6 06        2 sub 6
555   8799 04           	inc b
556   879A A7           	and a
557   879B 20 FA        	jr nz,2B
558   879D 78           	ld a,b
559   879E
560   879E 32 ED 85     1 ld (Numero_de_disparotes),a
561   87A1 C9           	ret
562   87A2              ; *************************************************************************************************************************************************************
563   87A2              ;
564   87A2              ; 20/10/22
565   87A2              ;
566   87A2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
567   87A2              ;
568   87A2              ; Destruye el puntero y DE !!!!!
569   87A2
570   87A2 5E           Extrae_address ld e,(hl)
571   87A3 23           	inc hl
572   87A4 56           	ld d,(hl)
573   87A5 2B           	dec hl
574   87A6 EB           	ex de,hl
575   87A7 C9           	ret
576   87A8
577   87A8              ; *************************************************************************************************************************************************************
578   87A8              ;
579   87A8              ;	7/2/23
580   87A8              ;
581   87A8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
582   87A8              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
583   87A8              ;
584   87A8              ;   Destruye HL y BC !!!!!,
585   87A8              ;
586   87A8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
587   87A8              ;					"0" ..... Izquierda.
588   87A8
589   87A8              Inicia_Puntero_objeto
590   87A8
591   87A8 3A B6 85     	ld a,(Cuad_objeto)
592   87AB E6 01        	and 1
593   87AD F5           	push af
594   87AE CC CC 87     	call z,Inicia_puntero_objeto_izq
595   87B1 F1           	pop af
596   87B2 28 2B        	jr z,1F
597   87B4 CD B9 87     	call Inicia_puntero_objeto_der
598   87B7 18 26        	jr 1F
599   87B9
600   87B9              ; Arrancamos desde la parte izquierda de la pantalla.
601   87B9              ; Iniciamos (Indice_Sprite_der).
602   87B9
603   87B9 2A AC 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
604   87BC 22 B0 85     	ld (Puntero_DESPLZ_der),hl
605   87BF CD A2 87     	call Extrae_address
606   87C2 22 A6 85     	ld (Puntero_objeto),hl
607   87C5
608   87C5 2A AE 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
609   87C8              ;	call Extrae_address
610   87C8 22 B2 85     	ld (Puntero_DESPLZ_izq),hl
611   87CB C9           	ret
612   87CC
613   87CC              ; Arrancamos desde la parte derecha de la pantalla.
614   87CC              ; Iniciamos (Indice_Sprite_izq).
615   87CC
616   87CC 2A AE 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
617   87CF 22 B2 85     	ld (Puntero_DESPLZ_izq),hl
618   87D2 CD A2 87     	call Extrae_address
619   87D5 22 A6 85     	ld (Puntero_objeto),hl
620   87D8
621   87D8 2A AC 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
622   87DB              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
623   87DB 22 B0 85     	ld (Puntero_DESPLZ_der),hl
624   87DE C9           	ret
625   87DF
626   87DF              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
627   87DF
628   87DF 21 44 83     1 ld hl,Amadeus
629   87E2 ED 4B A6 85  	ld bc,(Puntero_objeto)
630   87E6 B7 ED 42     	sub hl,bc
631   87E9 C0           	ret nz
632   87EA 21 CF 85     	ld hl,Ctrl_0
633   87ED CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
634   87EF C9           	ret 												; _de nuestra nave en los extremos.
635   87F0
636   87F0              ; *************************************************************************************************************************************************************
637   87F0              ;
638   87F0              ;	8/1/23
639   87F0              ;
640   87F0              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
641   87F0              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
642   87F0
643   87F0              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
644   87F0              ;	_de la 2ª y 3ª entidad respectivamente.
645   87F0
646   87F0              Store_Restore_entidades
647   87F0
648   87F0 E5           	push hl
649   87F1 D5           	push de
650   87F2 C5            	push bc
651   87F3
652   87F3              ;	STORE !!!!!
653   87F3              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
654   87F3
655   87F3 21 A2 85     	ld hl,Filas
656   87F6 ED 5B DD 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
657   87FA 01 3A 00     	ld bc,58
658   87FD ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
659   87FF
660   87FF              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
661   87FF
662   87FF 2A DF 85     	ld hl,(Puntero_restore_entidades)
663   8802 22 DD 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
664   8805 11 A2 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
665   8808 01 3A 00     	ld bc,58
666   880B ED B0        	ldir
667   880D
668   880D              ;	Incrementa RESTORE !!!!!
669   880D
670   880D 2A E1 85         ld hl,(Indice_restore)
671   8810 23           	inc hl
672   8811 23           	inc hl
673   8812 22 E1 85     	ld (Indice_restore),hl
674   8815 CD A2 87         call Extrae_address
675   8818 22 DF 85         ld (Puntero_restore_entidades),hl
676   881B C1           	pop bc
677   881C D1           	pop de
678   881D E1           	pop hl
679   881E C9           	ret
680   881F
681   881F              ; **************************************************************************************************
682   881F              ;
683   881F              ;	29/10/22
684   881F              ;
685   881F              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
686   881F
687   881F E5           Restore_Primera_entidad push hl
688   8820 D5           	push de
689   8821 C5            	push bc
690   8822 2A DD 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
691   8825 11 A2 85     	ld de,Filas
692   8828 01 3A 00     	ld bc,58
693   882B ED B0        	ldir
694   882D C1           	pop bc
695   882E D1           	pop de
696   882F E1           	pop hl
697   8830 C9           	ret
698   8831
699   8831              ; **************************************************************************************************
700   8831              ;
701   8831              ;	25/01/23
702   8831              ;
703   8831              ;	Restore_Amadeus
704   8831              ;
705   8831              ;	Cargamos en DRAW los parámetros de Amadeus.
706   8831              ;
707   8831
708   8831 E5           Restore_Amadeus	push hl
709   8832 D5           	push de
710   8833 C5            	push bc
711   8834 21 80 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
712   8837 11 A2 85     	ld de,Filas
713   883A 01 3A 00     	ld bc,58
714   883D ED B0        	ldir
715   883F C1           	pop bc
716   8840 D1           	pop de
717   8841 E1           	pop hl
718   8842 C9           	ret
719   8843
720   8843              ; *************************************************************************************************************************************************************
721   8843              ;
722   8843              ;	29/01/23
723   8843              ;
724   8843              ;	Store_Amadeus
725   8843              ;
726   8843              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
727   8843              ;
728   8843
729   8843 E5           Store_Amadeus push hl
730   8844 D5           	push de
731   8845 C5            	push bc
732   8846 21 A2 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
733   8849 11 80 84     	ld de,Amadeus_db
734   884C 01 3A 00     	ld bc,58
735   884F ED B0        	ldir
736   8851 C1           	pop bc
737   8852 D1           	pop de
738   8853 E1           	pop hl
739   8854 C9           	ret
740   8855
741   8855              ; **************************************************************************************************
742   8855
743   8855              ; Teclado.
744   8855
745   8855 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
746   8857 DB FE        	in a,($fe)
747   8859 E6 01        	and $01
748   885B 28 02        	jr z,1f
749   885D 18 F6        	jr Pulsa_ENTER
750   885F C9           1 ret
751   8860
752   8860              ; **************************************************************************************************
753   8860              ;
754   8860              ; Temporización.
755   8860
756   8860              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
757   8860              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
758   8860              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
759   8860              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
760   8860
761   8860              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
762   8860              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
763   8860              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
764   8860
765   8860              ; A partir de $4f61 no hace falta DELAY.
766   8860
767   8860              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
768   8860
769   8860 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
770   8863 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
771   8864 78           	LD A,B
772   8865 A7           	AND A
773   8866 20 FB        	JR NZ,wait
774   8868 C9           	RET
775   8869
776   8869              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
777   8869              ;
778   8869              ;	16/02/23
779   8869
780   8869              Movimiento_Amadeus
781   8869
782   8869              ; Disparo.
783   8869
784   8869 3E F7        	ld a,$f7												; "5" para disparar.
785   886B DB FE        	in a,($fe)
786   886D E6 10        	and $10
787   886F CC BF 88     	call z,Genera_disparo
788   8872
789   8872 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
790   8874 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
791   8876 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
792   8878 CC 2B 91         call z,Mov_left											;			"			"			"			"			"			"			"			"
793   887B 3E F7        	ld a,$f7
794   887D DB FE        	in a,($fe)
795   887F E6 01        	and $01
796   8881 C8           	ret z
797   8882
798   8882 3E F7        	ld a,$f7
799   8884 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
800   8886 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
801   8888 CC 0D 90     	call z,Mov_right										;			"			"			"			"			"			"			"			"
802   888B
803   888B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
804   888B              ;
805   888B              ;	Rutina provisional para que los malotes cagen balas.
806   888B
807   888B 3E 7F        Detecta_disparo_entidad	ld a,$7f
808   888D DB FE        	in a,($fe)
809   888F E6 01        	and 1
810   8891 C0           	ret nz
811   8892 CD BF 88     	call Genera_disparo
812   8895 C9           	ret
813   8896
814   8896              ; Pinta indicadores de FILAS. ------------------------------------------------------
815   8896
816   8896 21 10 40     Pinta_FILAS ld hl,$4010
817   8899              ;	ld b,9
818   8899              ;2 push hl
819   8899              ;	push bc
820   8899 06 BF        	ld b,$bf
821   889B 36 80        1 ld (hl),%10000000
822   889D CD D3 8C     	call NextScan
823   88A0 10 F9        	djnz 1B
824   88A2              ;	pop bc
825   88A2              ;	pop hl
826   88A2              ;	inc l
827   88A2              ;	djnz 2B
828   88A2 06 03        	ld b,3
829   88A4 21 00 47         ld hl,$4700
830   88A7 CD AD 88     3 call Bucle_1
831   88AA 10 FB            djnz 3B
832   88AC C9               ret
833   88AD
834   88AD C5           Bucle_1 push bc
835   88AE E5                   push hl
836   88AF D1                   pop de
837   88B0 13                   inc de
838   88B1 01 FF 00             ld bc,255
839   88B4 36 FF                ld (hl),255
840   88B6 ED B0                ldir
841   88B8 23                   inc hl
842   88B9 3E 07                ld a,7
843   88BB 84                   add a,h
844   88BC 67                   ld h,a
845   88BD C1                   pop bc
846   88BE C9                   ret
847   88BF
848   88BF              ; ---------------------------------------------------------------
849   88BF
850   88BF              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88BF              ; ******************************************************************************************************************************************************************************************
  2+  88BF              ;
  3+  88BF              ;   19/02/23
  4+  88BF              ;
  5+  88BF              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88BF              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88BF              ;
  8+  88BF              ;
  9+  88BF              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88BF              ;
 11+  88BF              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88BF              ;               _ hacen las entidades hacia abajo.
 13+  88BF              ;
 14+  88BF              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88BF              ;
 16+  88BF              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88BF              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88BF              ;
 19+  88BF              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88BF              ;           _ la bala.
 21+  88BF              ;
 22+  88BF              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88BF              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88BF              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88BF              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88BF              ;           _ en el momento de generarse la bala)).
 27+  88BF
 28+  88BF              Genera_disparo
 29+  88BF
 30+  88BF              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88BF              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88BF              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88BF              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88BF              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88BF              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga dichos valores.
 36+  88BF              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88BF
 38+  88BF 3A D8 85         ld a,(Columnas)
 39+  88C2 47               ld b,a
 40+  88C3 3A A3 85         ld a,(Columns)
 41+  88C6 B8               cp b
 42+  88C7 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 43+  88C8
 44+  88C8 21 00 80         ld hl,Indice_disparo
 45+  88CB 3A AA 85         ld a,(CTRL_DESPLZ)
 46+  88CE 4F               ld c,a
 47+  88CF A7               and a
 48+  88D0              ;    jr z,1F
 49+  88D0
 50+  88D0 C8               ret z
 51+  88D1
 52+  88D1 E6 01            and 1
 53+  88D3 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 54+  88D4
 55+  88D4 79               ld a,c
 56+  88D5 06 F9            ld b,$f9
 57+  88D7 23           2 inc hl
 58+  88D8 23               inc hl
 59+  88D9 B8               cp b
 60+  88DA 28 05            jr z,1F
 61+  88DC
 62+  88DC C0               ret nz
 63+  88DD
 64+  88DD 04               inc b
 65+  88DE 04               inc b
 66+  88DF 18 F6            jr 2B
 67+  88E1
 68+  88E1 CD A2 87     1 call Extrae_address
 69+  88E4 E5               push hl
 70+  88E5 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 71+  88E7 DD 21 66 8F  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 72+  88EB
 73+  88EB              ; --------------- ---------------- ----------------- -------------
 74+  88EB              ;
 75+  88EB              ;   Genera disparo.
 76+  88EB              ;
 77+  88EB              ;   Generamos variables de disparo. Varían en función del cuadrante en el que nos encontramos.
 78+  88EB
 79+  88EB 3A B6 85     	ld a,(Cuad_objeto)
 80+  88EE FE 02            cp 2
 81+  88F0 38 52            jr c,3F
 82+  88F2 28 50            jr z,3F
 83+  88F4
 84+  88F4              ; Estamos en mitad inferior de pantalla, (cuadrantes 3 y 4).
 85+  88F4
 86+  88F4 E6 01            and 1
 87+  88F6 28 27            jr z,4F
 88+  88F8
 89+  88F8              ; Estamos en el 3er cuadrante de pantalla.
 90+  88F8              ; 3er CUAD. ----- ----- ----- ----- -----
 91+  88F8              ;
 92+  88F8              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 93+  88F8              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 94+  88F8              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 95+  88F8
 96+  88F8 2A A4 85     	ld hl,(Posicion_actual)
 97+  88FB
 98+  88FB              ;   Compruebo si el disparo lo efectúa Amadeus o una entidad para poder calcular el puntero de impresión.
 99+  88FB
100+  88FB 3A CF 85         ld a,(Ctrl_0)
101+  88FE CB 77            bit 6,a
102+  8900 28 0B            jr z,8F
103+  8902
104+  8902              ; Dispara Amadeus.
105+  8902
106+  8902 0E 01            ld c,1	                                        ; Dirección "1", hacia arriba.
107+  8904 CD E2 8C         call PreviousScan
108+  8907 CD E2 8C         call PreviousScan
109+  890A 2B               dec hl                                          ; Puntero de impresión en HL.
110+  890B 18 0A            jr 10F
111+  890D
112+  890D              ; Dispara Entidad.
113+  890D
114+  890D 0E 00        8 ld c,0	                                        ; Dirección "0", hacia abajo.
115+  890F 06 10            ld b,16
116+  8911 CD D3 8C     9 call NextScan
117+  8914 10 FB            djnz 9B
118+  8916
119+  8916              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
120+  8916
121+  8916 2B               dec hl                                          ; Puntero de impresión en HL.
122+  8917 CD C8 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
123+  891A              ;                                                   ; _al generar el disparo.
124+  891A
125+  891A              ; LLegados a este punto tendremos:
126+  891A              ;
127+  891A              ;       Puntero_objeto_disparo en IY.
128+  891A              ;       Rutinas_de_impresion en IX.
129+  891A              ;       Puntero_de_impresion en HL.
130+  891A              ;       Impacto/Dirección en BC.
131+  891A
132+  891A CD 62 89         call Almacena_disparo
133+  891D 18 42            jr 6F                                           ; RET.
134+  891F
135+  891F
136+  891F              ; Estamos en el 4º cuadrante de pantalla.
137+  891F              ; 4º CUAD. ----- ----- ----- ----- -----
138+  891F              ;
139+  891F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
140+  891F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
141+  891F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
142+  891F
143+  891F 2A A4 85     4 ld hl,(Posicion_actual)
144+  8922
145+  8922              ;   Compruebo si el disparo lo efectúa Amadeus o una entidad para poder calcular el puntero de impresión.
146+  8922
147+  8922 3A CF 85         ld a,(Ctrl_0)
148+  8925 CB 77            bit 6,a
149+  8927 28 0A            jr z,11F
150+  8929
151+  8929              ; Dispara Amadeus.
152+  8929
153+  8929 0E 01            ld c,1                                            ; Dirección "1", hacia arriba.
154+  892B              ;    inc hl
155+  892B CD E2 8C         call PreviousScan
156+  892E CD E2 8C         call PreviousScan
157+  8931 18 09            jr 13F
158+  8933
159+  8933              ; Dispara Entidad.
160+  8933
161+  8933 0E 00        11 ld c,0                                        	  ; Dirección "0", hacia abajo.
162+  8935 06 10            ld b,16
163+  8937              ;    inc hl
164+  8937 CD D3 8C     12 call NextScan
165+  893A 10 FB            djnz 12B
166+  893C
167+  893C              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
168+  893C
169+  893C CD C8 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
170+  893F              ;                                                     ; _al generar el disparo.
171+  893F
172+  893F              ; LLegados a este punto tendremos:
173+  893F              ;
174+  893F              ;       Puntero_objeto_disparo en IY.
175+  893F              ;       Rutinas_de_impresion en IX.
176+  893F              ;       Puntero_de_impresion en HL.
177+  893F              ;       Impacto/Dirección en BC.
178+  893F
179+  893F CD 62 89         call Almacena_disparo
180+  8942 18 1D            jr 6F                                           ; RET.
181+  8944
182+  8944              ; Estamos en la mitad superior de pantalla, (cuadrantes 1 y 2).
183+  8944
184+  8944 28 0F        3 jr z,5F
185+  8946
186+  8946              ; 1er CUAD. ----- ----- ----- ----- -----
187+  8946              ;
188+  8946              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
189+  8946              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
190+  8946              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
191+  8946              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
192+  8946
193+  8946 2A A4 85     	ld hl,(Posicion_actual)
194+  8949 CD D3 8C     	call NextScan
195+  894C
196+  894C              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
197+  894C
198+  894C 2B               dec hl                                          ; Puntero de impresión en HL.
199+  894D
200+  894D              ; No se produce impacto. B="0"
201+  894D              ; Dirección del proyectil hacia abajo. C="0"
202+  894D
203+  894D 01 00 00         ld bc,0
204+  8950
205+  8950              ; LLegados a este punto tendremos:
206+  8950              ;
207+  8950              ;       Puntero_objeto_disparo en IY.
208+  8950              ;       Rutinas_de_impresion en IX.
209+  8950              ;       Puntero_de_impresion en HL.
210+  8950              ;       Impacto/Dirección en BC.
211+  8950
212+  8950 CD 62 89         call Almacena_disparo
213+  8953 18 0C            jr 6F                                           ; RET.
214+  8955
215+  8955              ; Estamos en el 2º cuadrante de pantalla.
216+  8955              ; 2º CUAD. ----- ----- ----- ----- -----
217+  8955              ;
218+  8955              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
219+  8955              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
220+  8955              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
221+  8955              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
222+  8955
223+  8955 2A A4 85     5 ld hl,(Posicion_actual)
224+  8958
225+  8958              ;	inc hl
226+  8958
227+  8958 CD D3 8C     	call NextScan
228+  895B
229+  895B              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
230+  895B
231+  895B              ; No se produce impacto. B="$80"
232+  895B              ; Dirección del proyectil hacia abajo. C="80"
233+  895B
234+  895B 01 00 00         ld bc,0
235+  895E
236+  895E              ; LLegados a este punto tendremos:
237+  895E              ;
238+  895E              ;       Puntero_objeto_disparo en IY.
239+  895E              ;       Rutinas_de_impresion en IX.
240+  895E              ;       Puntero_de_impresion en HL.
241+  895E              ;       Impacto/Dirección en BC.
242+  895E
243+  895E CD 62 89         call Almacena_disparo
244+  8961
245+  8961              ; Preparamos registros para llamar a [Guarda_foto_registros].
246+  8961              ; Antes de llamar a [Guarda_foto_registros] indicamos que se trata de un disparo.
247+  8961
248+  8961 C9           6 ret
249+  8962
250+  8962              ; ----------------------------------------------------------------
251+  8962              ;
252+  8962              ;   25/02/23
253+  8962              ;
254+  8962              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
255+  8962              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
256+  8962
257+  8962
258+  8962              Almacena_disparo
259+  8962
260+  8962 E5               push hl
261+  8963 F1               pop af
262+  8964 08               ex af,af                                        ; Puntero_de_impresion en AF'.
263+  8965
264+  8965 0C           3 inc c
265+  8966 0D               dec c
266+  8967 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
267+  8969              ;                                                   ; _ es Amadeus o una entidad la que dispara.
268+  8969
269+  8969              ; Dispara AMADEUS.
270+  8969
271+  8969 C5               push bc
272+  896A 01 F8 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A
273+  896D 2A F2 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
274+  8970 A7               and a
275+  8971 ED 42            sbc hl,bc
276+  8973 CC 6B 87         call z,Inicia_Puntero_Disparo_Amadeus
277+  8976 C1               pop bc
278+  8977 28 4E            jr z,4F
279+  8979
280+  8979 2A F2 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
281+  897C 23               inc hl
282+  897D 23               inc hl
283+  897E 22 F2 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
284+  8981              ;                                                   ; _ Disparo_(+1).
285+  8981 18 18            jr 2F
286+  8983
287+  8983              ; Dispara una entidad.
288+  8983
289+  8983 C5           1 push bc
290+  8984 01 20 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
291+  8987 2A F0 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
292+  898A A7               and a
293+  898B ED 42            sbc hl,bc
294+  898D CC 64 87         call z,Inicia_Puntero_Disparo_Entidades
295+  8990 C1               pop bc
296+  8991 28 34            jr z,4F
297+  8993
298+  8993 2A F0 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
299+  8996 23               inc hl
300+  8997 23               inc hl
301+  8998 22 F0 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
302+  899B              ;                                                   ; _ Disparo_(+1).
303+  899B CD A2 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
304+  899E              ;                                                   ; _ los 8 bytes que definen el disparo:
305+  899E              ;
306+  899E              ;                                                     Puntero_objeto_disparo en IY.
307+  899E              ;                                                     Rutinas_de_impresion en IX.
308+  899E              ;                                                     Puntero_de_impresion en HL.
309+  899E              ;                                                     Impacto/Dirección en BC.
310+  899E
311+  899E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
312+  899F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
313+  89A0 23               inc hl                                          ; _ al siguiente.
314+  89A1 A7               and a
315+  89A2 20 C1            jr nz,3B
316+  89A4
317+  89A4 08               ex af,af
318+  89A5 ED 73 E5 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
319+  89A9 F9               ld sp,hl
320+  89AA
321+  89AA DD E5            push ix                                         ; Rutina de impresión.
322+  89AC F5               push af                                         ; Puntero de impresión.
323+  89AD FD E5            push iy                                         ; Puntero objeto.
324+  89AF C5               push bc                                         ; Control.
325+  89B0
326+  89B0 ED 7B E5 85      ld sp,(Stack)
327+  89B4
328+  89B4              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
329+  89B4
330+  89B4 21 DC 85     	ld hl,Ctrl_1
331+  89B7 CB C6        	set 0,(hl)
332+  89B9
333+  89B9 DD E5        	push ix
334+  89BB E1               pop hl
335+  89BC F5               push af
336+  89BD DD E1            pop ix
337+  89BF
338+  89BF CD A0 7F     	call Guarda_foto_registros
339+  89C2
340+  89C2 21 DC 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
341+  89C5 CB 86        	res 0,(hl)
342+  89C7
343+  89C7 C9           4 ret
344+  89C8
345+  89C8              ; ----------------------------------------------------------------
346+  89C8              ;
347+  89C8              ;   20/02/23
348+  89C8
349+  89C8 E5           Comprueba_Colision push hl
350+  89C9 1E 00            ld e,0                                         ; E,(Impacto)="0".
351+  89CB CD DF 89         call Bucle_2                                   ; Comprobamos el 1er scanline.
352+  89CE 1C               inc e
353+  89CF 1D               dec e
354+  89D0 28 03            jr z,1F                                        ; Si no se produce impacto comprobamos el 2º scanline.
355+  89D2              ; Hay impacto.
356+  89D2 43           2 ld b,e
357+  89D3 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
358+  89D4 C9           3 ret
359+  89D5 E1           1 pop hl
360+  89D6 E5               push hl
361+  89D7 CD D3 8C         call NextScan
362+  89DA CD DF 89         call Bucle_2
363+  89DD 18 F3            jr 2B
364+  89DF
365+  89DF              ; ---------- ----------
366+  89DF
367+  89DF 06 02        Bucle_2 ld b,2
368+  89E1 7E           2 ld a,(hl)
369+  89E2 A7               and a
370+  89E3 20 04            jr nz,1F
371+  89E5 23               inc hl
372+  89E6 10 F9            djnz 2B
373+  89E8 C9           3 ret
374+  89E9 1E 01        1 ld e,1
375+  89EB 18 FB            jr 3B
376+  89ED
377+  89ED              ; -------------------------------------------------------------------------------------------------------------
378+  89ED
379+  89ED
380+  89ED
381+  89ED
382+  89ED
# file closed: Disparo.asm
851   89ED              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  89ED              ; ******************************************************************************************************************************************************************************************
  2+  89ED              ;
  3+  89ED              ; 01/23
  4+  89ED              ;
  5+  89ED              ; DRAW. ************************************************************************************************************************************************************************************
  6+  89ED
  7+  89ED CD C7 8C     Draw call Prepara_draw
  8+  89F0 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  89F1 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  89F2 28 05        	jr z,2F
 11+  89F4
 12+  89F4 3A B6 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  89F7 18 0C        	jr 1F
 14+  89F9 2A B4 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  89FC 22 A4 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  89FF CD 8E 8B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8A02              ;													; _la esquina superior izquierda de la pantalla.
 18+  8A02 CD FC 93     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8A05 3A CF 85     1 ld a,(Ctrl_0)
 20+  8A08 CB 6F        	bit 5,a
 21+  8A0A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8A0C
 23+  8A0C CD 24 8A     	call Comprueba_limite_horizontal
 24+  8A0F CD B4 8A     	call Comprueba_limite_vertical
 25+  8A12
 26+  8A12              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8A12
 28+  8A12 CD 01 8C     3 call calcula_CColumnass
 29+  8A15 CD 38 8C     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8A18 CD 8D 8C     	call Define_rutina_de_impresion
 31+  8A1B
 32+  8A1B 3A CF 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8A1E CB AF        	res 5,a											; _a ser de utilidad.
 34+  8A20 32 CF 85     	ld (Ctrl_0),a
 35+  8A23
 36+  8A23 C9           	ret
 37+  8A24
 38+  8A24              ; *******************************************************************************************************************************************************************************************
 39+  8A24              ;	21/01/23
 40+  8A24              ;
 41+  8A24              ; 	Comprueba_limite_horizontal.
 42+  8A24              ;
 43+  8A24              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8A24              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8A24              ;
 46+  8A24              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8A24              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8A24              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8A24              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8A24
 51+  8A24
 52+  8A24
 53+  8A24 3A CF 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8A27 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8A29 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8A2B E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8A2D 32 CF 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8A30 18 09            jr 6F
 59+  8A32 CB 5F        1 bit 3,a
 60+  8A34 28 0A            jr z,2F
 61+  8A36 E6 F7            and $f7
 62+  8A38 32 CF 85         ld (Ctrl_0),a
 63+  8A3B CD 8E 8B     6 call Inicializacion
 64+  8A3E 18 5B            jr 5F
 65+  8A40 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8A41
 67+  8A41              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8A41              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8A41
 70+  8A41 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8A42 2A D9 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8A45 CD 93 8F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8A48 67           	ld h,a
 74+  8A49 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8A4A CD 93 8F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8A4D 67           	ld h,a
 77+  8A4E A7           	and a
 78+  8A4F ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8A51 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8A52 3A B6 85     	ld a,(Cuad_objeto)
 81+  8A55 FE 02        	cp 2
 82+  8A57 38 1E        	jr c,3F
 83+  8A59 28 1C        	jr z,3F
 84+  8A5B 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8A5C 28 23            jr z,7F
 86+  8A5E 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8A60 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8A62 E1           	pop hl
 89+  8A63
 90+  8A63              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8A63              ; _para indicar con E="2" en caso necesario.
 92+  8A63
 93+  8A63 E5               push hl
 94+  8A64 C5               push bc
 95+  8A65 CD 93 8F     	call calcula_tercio
 96+  8A68 FE 01        	cp 1
 97+  8A6A 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8A6C CD 9C 8A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8A6F 28 26            jr z,9F
100+  8A71 38 24            jr c,9F
101+  8A73 1E 00        11 ld e,0
102+  8A75 18 22            jr 8F
103+  8A77 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8A78 28 07        	jr z, 7F
105+  8A7A 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8A7C 1E 00         	ld e,0
107+  8A7E E1           	pop hl
108+  8A7F 18 04        	jr 4F
109+  8A81 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8A83 18 15            jr 10F
111+  8A85
112+  8A85              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8A85              ; _para indicar con E="2" en caso necesario.
114+  8A85
115+  8A85 E5           4 push hl
116+  8A86 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8A87 CD 93 8F     	call calcula_tercio
118+  8A8A FE 01        	cp 1
119+  8A8C 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8A8E CD 9C 8A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8A91 28 04            jr z,9F
122+  8A93 30 02            jr nc,9F
123+  8A95 18 02        	jr 8F
124+  8A97 1E 02        9 ld e,2
125+  8A99 C1           8 pop bc
126+  8A9A E1           10 pop hl
127+  8A9B C9           5 ret
128+  8A9C
129+  8A9C              ; --------------------
130+  8A9C              ;
131+  8A9C              ; 25/08/22
132+  8A9C
133+  8A9C CD 93 8F     Comprueba_centro call calcula_tercio
134+  8A9F 67               ld h,a
135+  8AA0 08           	ex af,af
136+  8AA1 FE 02        	cp 2
137+  8AA3 38 07        	jr c,1F
138+  8AA5 28 05        	jr z,1F
139+  8AA7 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8AAA 18 03        	jr 2F
141+  8AAC 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8AAF 08           2 ex af,af
143+  8AB0 A7               and a
144+  8AB1 ED 42            sbc hl,bc
145+  8AB3 C9               ret
146+  8AB4
147+  8AB4              ; *********************************************************************************************************************************************************************************************
148+  8AB4              ;
149+  8AB4              ;   16/8/22
150+  8AB4              ;
151+  8AB4              ;	Comprueba_limite_vertical
152+  8AB4              ;
153+  8AB4              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8AB4              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8AB4              ;
156+  8AB4
157+  8AB4 2A A4 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8AB7 7D           	ld a,l
159+  8AB8 E6 1F        	and $1F
160+  8ABA 57           	ld d,a
161+  8ABB 3A DB 85     	ld a,(Limite_vertical)
162+  8ABE BA           	cp d 											; Límite - Posición.
163+  8ABF 08           	ex af,af 										; Resultado de CP d en F'.
164+  8AC0 3A B6 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8AC3 CB 47        	bit 0,a
166+  8AC5 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8AC7
168+  8AC7              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8AC7
170+  8AC7 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8AC8 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8ACA
173+  8ACA              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8ACA              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8ACA
176+  8ACA 3A A8 85         ld a,(Coordenada_X)
177+  8ACD 16 0F            ld d,Centro_izquierda
178+  8ACF A7               and a
179+  8AD0 92               sub d 											 ; Posición - Centro_izquierda.
180+  8AD1 28 1E            jr z,3F
181+  8AD3 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8AD5              ;                                                    ; _salimos sin modificar nada.
183+  8AD5 18 0E            jr 2F
184+  8AD7 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8AD8 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8ADA
187+  8ADA              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8ADA              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8ADA
190+  8ADA 3A A8 85         ld a,(Coordenada_X)
191+  8ADD 16 10            ld d,Centro_derecha
192+  8ADF A7               and a
193+  8AE0 92               sub d
194+  8AE1 28 0E            jr z,3F
195+  8AE3 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8AE5              ;                                                    ; _salimos sin modificar nada.
197+  8AE5 CB 43        2 bit 0,e
198+  8AE7 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8AE9 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8AEA CD 7E 8B         call Modificaccionne
201+  8AED C1           	pop bc
202+  8AEE CD 8E 8B         call Inicializacion
203+  8AF1 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8AF2
205+  8AF2              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8AF2
207+  8AF2 C5           4 push bc
208+  8AF3 01 A3 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8AF6 0A           	ld a,(bc)
210+  8AF7 3D           	dec a
211+  8AF8 47           	ld b,a 											 ; Columnas-1 en B.
212+  8AF9 7D           	ld a,l
213+  8AFA 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8AFB CB 47        	bit 0,a
215+  8AFD 28 03        	jr z,5F
216+  8AFF 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8B00 18 2E        	jr 7F
218+  8B02
219+  8B02              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8B02
221+  8B02 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8B03 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8B04 3A CF 85     	ld a,(Ctrl_0)
224+  8B07 CB 4F        	bit 1,a
225+  8B09 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8B0B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8B0C
228+  8B0C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8B0C
230+  8B0C 1C               inc e
231+  8B0D 1D               dec e
232+  8B0E 20 07            jr nz,12F
233+  8B10 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8B11 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8B12 22 A4 85     	ld (Posicion_actual),hl
236+  8B15 18 44        13 jr 9F
237+  8B17 CB 43        12 bit 0,e
238+  8B19 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8B1B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8B1B C1           	pop bc
241+  8B1C 18 D3        	jr 3B
242+  8B1E 80           14 add b
243+  8B1F 6F               ld l,a
244+  8B20 22 A4 85     	ld (Posicion_actual),hl
245+  8B23 CD 7E 8B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8B26 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8B28 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8B2A 32 CF 85         ld (Ctrl_0),a
249+  8B2D F1           	pop af
250+  8B2E 18 2B        	jr 9F
251+  8B30
252+  8B30              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8B30
254+  8B30 F5           7 push af
255+  8B31 3A CF 85     	ld a,(Ctrl_0)
256+  8B34 CB 47        	bit 0,a
257+  8B36 20 1D        	jr nz,8F
258+  8B38 F1           	pop af
259+  8B39
260+  8B39              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8B39
262+  8B39 1C           	inc e
263+  8B3A 1D               dec e
264+  8B3B 20 07            jr nz,10F
265+  8B3D 90           	sub b
266+  8B3E 6F               ld l,a
267+  8B3F 22 A4 85     	ld (Posicion_actual),hl
268+  8B42 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8B44              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8B44 CB 43        10 bit 0,e
271+  8B46 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8B48              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8B48 C1           	pop bc
274+  8B49 18 A6        	jr 3B
275+  8B4B 90           16 sub b
276+  8B4C 6F               ld l,a
277+  8B4D 22 A4 85     	ld (Posicion_actual),hl
278+  8B50 CD 7E 8B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8B53 18 06            jr 9F
280+  8B55 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8B57 32 CF 85         ld (Ctrl_0),a
282+  8B5A F1           	pop af
283+  8B5B C1           9 pop bc
284+  8B5C 1E 00        	ld e,0
285+  8B5E CD 8E 8B         call Inicializacion
286+  8B61 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8B62 08           	ex af,af
288+  8B63 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8B64 18 8B            jr 3B
290+  8B66
291+  8B66              ; --------------------
292+  8B66
293+  8B66 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8B68 CD E2 8C     1 call PreviousScan
295+  8B6B 10 FB            djnz 1B
296+  8B6D 22 A4 85     	ld (Posicion_actual),hl
297+  8B70 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8B71 C9           	ret
299+  8B72
300+  8B72              ; --------------------
301+  8B72
302+  8B72 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8B74 CD D3 8C     1 call NextScan
304+  8B77 10 FB            djnz 1B
305+  8B79 22 A4 85     	ld (Posicion_actual),hl
306+  8B7C AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8B7D C9           	ret
308+  8B7E
309+  8B7E              ; --------------------
310+  8B7E              ;
311+  8B7E              ;	22/01/23
312+  8B7E              ;
313+  8B7E              ;	E="1". Hemos cambiado de cuadrante.
314+  8B7E              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8B7E              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8B7E
317+  8B7E
318+  8B7E              Modificaccionne
319+  8B7E
320+  8B7E 3A B6 85     	ld a,(Cuad_objeto)
321+  8B81 FE 02        	cp 2
322+  8B83 CC 66 8B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8B86 DC 66 8B         call c,Modifica_Pos_actual
324+  8B89 C8           	ret z
325+  8B8A CD 72 8B         call Modifica_Pos_actual2
326+  8B8D C9               ret
327+  8B8E
328+  8B8E              ; *************************************************************************************************************************************************************************************************
329+  8B8E              ;
330+  8B8E              ;	13/8/22
331+  8B8E              ;
332+  8B8E              ;	Inicializacion
333+  8B8E              ;
334+  8B8E              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8B8E              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8B8E              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8B8E              ;
338+  8B8E              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8B8E              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8B8E              ;	_ desaparece/aparece.
341+  8B8E
342+  8B8E              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8B8E              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8B8E              ;
345+  8B8E              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8B8E              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8B8E              ; 		   [E] ="0"
348+  8B8E
349+  8B8E              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8B8E
351+  8B8E CD 93 8F     Inicializacion call calcula_tercio
352+  8B91 28 36        	jr z,primit
353+  8B93 E6 02        	and 2
354+  8B95 20 07        	jr nz,segmit
355+  8B97 7D           	ld a,l
356+  8B98 FE 7F        	cp $7f
357+  8B9A 38 2D        	jr c,primit
358+  8B9C 28 2B        	jr z,primit
359+  8B9E CD FB 8B     segmit call column
360+  8BA1 38 13        	jr c,tercuad
361+  8BA3 3E 04        cuarcuad ld a,4
362+  8BA5 32 B6 85     	ld (Cuad_objeto),a
363+  8BA8 21 20 48     	ld hl,$4820
364+  8BAB 22 D9 85     	ld (Limite_horizontal),hl
365+  8BAE 21 DB 85     	ld hl,Limite_vertical
366+  8BB1 36 0D        	ld (hl),$0d
367+  8BB3 08           	ex af,af
368+  8BB4 18 3C        	jr 1F
369+  8BB6              tercuad
370+  8BB6 3E 03        	ld a,3
371+  8BB8 32 B6 85     	ld (Cuad_objeto),a
372+  8BBB 21 20 48     	ld hl,$4820
373+  8BBE 22 D9 85     	ld (Limite_horizontal),hl
374+  8BC1 21 DB 85     	ld hl,Limite_vertical
375+  8BC4 36 12        	ld (hl),$12
376+  8BC6 08           	ex af,af
377+  8BC7 18 29        	jr 1F
378+  8BC9 CD FB 8B     primit call column
379+  8BCC 38 13        	jr c, primcuad
380+  8BCE              segcuad
381+  8BCE 3E 02        	ld a,2
382+  8BD0 32 B6 85     	ld (Cuad_objeto),a
383+  8BD3 21 C0 4F     	ld hl,$4fc0
384+  8BD6 22 D9 85     	ld (Limite_horizontal),hl
385+  8BD9 21 DB 85     	ld hl,Limite_vertical
386+  8BDC 36 0D        	ld (hl),$0d
387+  8BDE 08           	ex af,af
388+  8BDF 18 11        	jr 1F
389+  8BE1              primcuad
390+  8BE1 3E 01        	ld a,1
391+  8BE3 32 B6 85     	ld (Cuad_objeto),a
392+  8BE6 21 C0 4F     	ld hl,$4fc0
393+  8BE9 22 D9 85     	ld (Limite_horizontal),hl
394+  8BEC 21 DB 85     	ld hl,Limite_vertical
395+  8BEF 36 12        	ld (hl),$12
396+  8BF1 08           	ex af,af
397+  8BF2 CD C5 92     1 call Genera_coordenadas
398+  8BF5 21 CF 85     	ld hl,Ctrl_0
399+  8BF8 CB EE        	set 5,(hl)
400+  8BFA C9           	ret
401+  8BFB
402+  8BFB              ; ------------------------------------------------------------------------------------------------------------------
403+  8BFB
404+  8BFB              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8BFB              ;
406+  8BFB              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8BFB
408+  8BFB 7D           column ld a,l
409+  8BFC E6 1F        	and $1f
410+  8BFE FE 10         	cp $10
411+  8C00 C9            	ret
412+  8C01
413+  8C01              ; --------------------------------------------------------------------------------------------------------------------
414+  8C01              ;
415+  8C01              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8C01              ;
417+  8C01              ; 14/12/22
418+  8C01              ;
419+  8C01              ;	Modifica: A y BC.
420+  8C01
421+  8C01 3A B6 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8C04 E6 01        	and 1
423+  8C06 28 17        	jr z,1F
424+  8C08
425+  8C08              ; Nos encontramos en la parte izquierda de la pantalla
426+  8C08
427+  8C08 3A A8 85     	ld a,(Coordenada_X)
428+  8C0B 47           	ld b,a
429+  8C0C 04           	inc b											; (Coordenada_X)+1 en B.
430+  8C0D 79           	ld a,c
431+  8C0E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8C0F 38 08        	jr c,2F
433+  8C11 47           	ld b,a
434+  8C12 79           	ld a,c
435+  8C13 90           	sub b
436+  8C14 32 D8 85     	ld (Columnas),a
437+  8C17 18 1B        	jr 4F
438+  8C19 79           2 ld a,c
439+  8C1A 32 D8 85     	ld (Columnas),a
440+  8C1D 18 15        	jr 4F
441+  8C1F
442+  8C1F              ; Nos encontramos en la parte derecha de la pantalla.
443+  8C1F
444+  8C1F 3A A8 85     1 ld a,(Coordenada_X)
445+  8C22 81           	add c
446+  8C23 3D           	dec a
447+  8C24 D6 1F        	sub $1f
448+  8C26 38 08        	jr c,3F
449+  8C28 47           	ld b,a
450+  8C29 79           	ld a,c
451+  8C2A 90           	sub b
452+  8C2B 32 D8 85     	ld (Columnas),a
453+  8C2E 18 04        	jr 4F
454+  8C30 79           3 ld a,c
455+  8C31 32 D8 85     	ld (Columnas),a
456+  8C34 D9           4 exx
457+  8C35 4F           	ld c,a
458+  8C36 D9           	exx
459+  8C37 C9            ret
460+  8C38
461+  8C38              ; --------------------------------------------------------------------------------------------------------------------
462+  8C38              ;
463+  8C38              ; 7/1/23
464+  8C38              ;
465+  8C38              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8C38              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8C38              ;
468+  8C38              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8C38              ;	DESTRUYE: HL,B Y A.
470+  8C38
471+  8C38 3A B6 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8C3B FE 02        	cp 2
473+  8C3D 38 18        	jr c,1F
474+  8C3F 28 16        	jr z,1F
475+  8C41 E6 01        	and 1
476+  8C43 28 0D        	jr z,3F
477+  8C45
478+  8C45              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8C45
480+  8C45 CD 81 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8C48
482+  8C48 7D           9 ld a,l
483+  8C49 E6 1F        	and $1f
484+  8C4B 28 2A        	jr z,7F
485+  8C4D 2B           	dec hl
486+  8C4E 10 F8        	djnz 9B
487+  8C50 18 25        	jr 7F
488+  8C52
489+  8C52              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8C52
491+  8C52 2A A4 85     3 ld hl,(Posicion_actual)
492+  8C55 18 20        	jr 7F
493+  8C57
494+  8C57 28 14        1 jr z,2F
495+  8C59
496+  8C59              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8C59
498+  8C59 CD 81 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8C5C 7D           4 ld a,l
500+  8C5D E6 1F        	and $1f
501+  8C5F 28 03        	jr z,6F
502+  8C61 2B           	dec hl
503+  8C62 10 F8        	djnz 4B
504+  8C64 06 0F        6 ld b,15
505+  8C66 CD E2 8C     5 call PreviousScan
506+  8C69 10 FB        	djnz 5B
507+  8C6B 18 0A        	jr 7F
508+  8C6D
509+  8C6D              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8C6D
511+  8C6D CD 81 8C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8C70 06 0F        	ld b,15
513+  8C72 CD E2 8C     8 call PreviousScan
514+  8C75 10 FB        	djnz 8B
515+  8C77
516+  8C77 E5           7 push hl
517+  8C78 DD E1        	pop ix
518+  8C7A
519+  8C7A 2A A6 85     	ld hl,(Puntero_objeto)
520+  8C7D E5           	push hl
521+  8C7E FD E1        	pop iy
522+  8C80
523+  8C80 C9           	ret
524+  8C81
525+  8C81              ; --------------------------------------------------------------------------------------------------------------------
526+  8C81              ;
527+  8C81              ;	2/1/23
528+  8C81              ;
529+  8C81              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8C81              ;
531+  8C81              ;	Tras esta rutina tenemos:
532+  8C81              ;
533+  8C81              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8C81              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8C81              ;
536+  8C81              ;	DESTRUYE!!!!! HL,B y A.
537+  8C81
538+  8C81 2A A4 85     Operandos ld hl,(Posicion_actual)
539+  8C84 3A D8 85     	ld a,(Columnas)
540+  8C87 3D           	dec a
541+  8C88 20 01        	jr nz,1F
542+  8C8A 3C           	inc a
543+  8C8B 47           1 ld b,a
544+  8C8C C9           	ret
545+  8C8D
546+  8C8D              ; --------------------------------------------------------------------------------------------------------------------
547+  8C8D              ;
548+  8C8D              ;	3/1/23
549+  8C8D              ;
550+  8C8D              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8C8D              ;
552+  8C8D              ;	Destruye: A,B,HL y DE.
553+  8C8D
554+  8C8D              Define_rutina_de_impresion
555+  8C8D
556+  8C8D 3A A3 85     	ld a,(Columns)
557+  8C90 47           	ld b,a
558+  8C91 3A D8 85     	ld a,(Columnas)
559+  8C94 B8           	cp b
560+  8C95 20 0D        	jr nz,2f
561+  8C97
562+  8C97              ;	La entidad se imprime entera.
563+  8C97
564+  8C97 21 63 8D     	ld hl, Indice_entidades_completas
565+  8C9A E6 01        	and 1
566+  8C9C 28 02        	jr z,1F
567+  8C9E
568+  8C9E 23           	inc hl
569+  8C9F 23           	inc hl
570+  8CA0
571+  8CA0 CD A2 87     1 call Extrae_address
572+  8CA3 C9           	ret		;	ret
573+  8CA4
574+  8CA4              ;	La entidad no se imprime entera en pantalla.
575+  8CA4
576+  8CA4 3A B6 85     2 ld a,(Cuad_objeto)
577+  8CA7 E6 01        	and 1
578+  8CA9 28 17        	jr z,3F
579+  8CAB
580+  8CAB              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8CAB
582+  8CAB 21 67 8D     	ld hl, Indice_entidades_incompletas_izquierda
583+  8CAE 3A A3 85     4 ld a,(Columns)
584+  8CB1 E6 01        	and 1
585+  8CB3 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8CB5
587+  8CB5 23           	inc hl
588+  8CB6 23           	inc hl
589+  8CB7
590+  8CB7 3A D8 85     	ld a,(Columnas)
591+  8CBA E6 01        	and 1
592+  8CBC 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8CBE
594+  8CBE 23           	inc hl
595+  8CBF 23           	inc hl
596+  8CC0
597+  8CC0 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8CC2
599+  8CC2 21 6D 8D     3 ld hl, Indice_entidades_incompletas_derecha
600+  8CC5 18 E7        	jr 4B
601+  8CC7
602+  8CC7              ; --------------------------------------------------------------------------------------------------------------------
603+  8CC7              ;
604+  8CC7              ;	Prepara_draw
605+  8CC7              ;
606+  8CC7              ;	Es una rutina de carga.
607+  8CC7              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8CC7              ;
609+  8CC7              ;	FUNCIONAMIENTO:
610+  8CC7              ;
611+  8CC7              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8CC7              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8CC7              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8CC7              ;
615+  8CC7              ;	DESTRUYE:
616+  8CC7              ;
617+  8CC7              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8CC7
619+  8CC7 21 A2 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8CCA 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8CCB 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8CCC 4E           	ld c,(hl)
623+  8CCD 2A A4 85     	ld hl,(Posicion_actual)
624+  8CD0 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8CD2 C9           	ret
626+  8CD3
627+  8CD3              ;----------------------------------------------------------------------------------------------------------------
628+  8CD3              ;
629+  8CD3              ;	5/08/22
630+  8CD3              ;
631+  8CD3              ;   NextScan.
632+  8CD3              ;
633+  8CD3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8CD3              ;
635+  8CD3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8CD3              ;
637+  8CD3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8CD3              ;
639+  8CD3              ;       DESTRUIDOS: AF y HL !!!
640+  8CD3              ;
641+  8CD3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8CD3              ;
643+  8CD3
644+  8CD3 24           NextScan inc h          ; Incrementamos el scanline.
645+  8CD4 7C               ld a,h
646+  8CD5 E6 07            and 7
647+  8CD7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8CD8
649+  8CD8 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8CD9 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8CDB 6F               ld l,a
652+  8CDC D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8CDD
654+  8CDD 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8CDE D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8CE0 67               ld h,a
657+  8CE1 C9               ret
658+  8CE2
659+  8CE2              ;----------------------------------------------------------------------------------------------------------------
660+  8CE2              ;
661+  8CE2              ;	5/08/22
662+  8CE2              ;
663+  8CE2              ;   PreviousScan.
664+  8CE2              ;
665+  8CE2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8CE2              ;
667+  8CE2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8CE2              ;
669+  8CE2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8CE2              ;
671+  8CE2              ;       DESTRUIDOS: AF y HL !!!
672+  8CE2              ;
673+  8CE2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8CE2              ;
675+  8CE2
676+  8CE2 7C           PreviousScan ld a,h
677+  8CE3 25               dec h               ; Dec H.
678+  8CE4 E6 07            and 7
679+  8CE6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8CE7
681+  8CE7 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8CE8 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8CEA 6F               ld l,a
684+  8CEB D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8CEC
686+  8CEC 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8CED C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8CEF 67               ld h,a
689+  8CF0 C9               ret
690+  8CF1
691+  8CF1              ; -----------------------------------------------------------------------------------
692+  8CF1              ;
693+  8CF1              ;	28/2/23
694+  8CF1              ;
695+  8CF1              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8CF1              ;	Extrae fotos de Album_de_fotos.
697+  8CF1
698+  8CF1 3A E4 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8CF4 A7           	and a
700+  8CF5 C8           	ret z
701+  8CF6 ED 73 E5 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8CFA 31 00 70     	ld sp,Album_de_fotos
703+  8CFD
704+  8CFD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8CFF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8D00 D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8D01
708+  8D01 ED 73 E7 85  	ld (Stack_2),sp
709+  8D05 ED 7B E5 85  	ld sp,(Stack)
710+  8D09
711+  8D09              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8D09
713+  8D09 3E CD        	ld a,$cd
714+  8D0B 32 13 8D     	ld (Imprime),a
715+  8D0E EB           	ex de,hl
716+  8D0F 22 14 8D     	ld (Imprime+1),hl
717+  8D12 EB           	ex de,hl
718+  8D13
719+  8D13              ; Ejecuta la llamada:	CALL $xx,xx
720+  8D13
721+  8D13 00 00 00     Imprime db 0,0,0
722+  8D16
723+  8D16 3A E4 85     	ld a,(Numero_de_malotes)
724+  8D19 3D           	dec a
725+  8D1A 28 09        	jr z,1F
726+  8D1C 32 E4 85      	ld (Numero_de_malotes),a
727+  8D1F
728+  8D1F ED 7B E7 85   	ld sp,(Stack_2)
729+  8D23 18 D8        	jr 2B
730+  8D25
731+  8D25 AF           1 xor a
732+  8D26 32 E7 85     	ld (Stack_2),a
733+  8D29 C9           	ret
734+  8D2A
735+  8D2A              ; -----------------------------------------------------------------------------------
736+  8D2A              ;
737+  8D2A              ;	28/2/23
738+  8D2A              ;
739+  8D2A              ;	Rutina principal de pintado de disparos.
740+  8D2A
741+  8D2A              Extrae_foto_registros_disparos
742+  8D2A
743+  8D2A 3A ED 85     	ld a,(Numero_de_disparotes)
744+  8D2D A7           	and a
745+  8D2E C8           	ret z
746+  8D2F ED 73 E5 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8D33 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8D36
749+  8D36 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8D38 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8D39 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8D3A
753+  8D3A ED 73 E7 85  	ld (Stack_2),sp
754+  8D3E ED 7B E5 85  	ld sp,(Stack)
755+  8D42
756+  8D42              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8D42
758+  8D42 3E CD        	ld a,$cd
759+  8D44 32 4C 8D     	ld (Imprime2),a
760+  8D47 EB           	ex de,hl
761+  8D48 22 4D 8D     	ld (Imprime2+1),hl
762+  8D4B EB           	ex de,hl
763+  8D4C
764+  8D4C              ; Ejecuta la llamada:	CALL $xx,xx
765+  8D4C
766+  8D4C 00 00 00     Imprime2 db 0,0,0
767+  8D4F
768+  8D4F 3A ED 85     	ld a,(Numero_de_disparotes)
769+  8D52 3D           	dec a
770+  8D53 28 09        	jr z,1F
771+  8D55 32 ED 85      	ld (Numero_de_disparotes),a
772+  8D58
773+  8D58 ED 7B E7 85  	ld sp,(Stack_2)
774+  8D5C 18 D8        	jr 2B
775+  8D5E
776+  8D5E AF           1 xor a
777+  8D5F 32 E7 85     	ld (Stack_2),a
778+  8D62 C9           	ret
779+  8D63
# file closed: Draw_XOR.asm
852   8D63              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8D63              ;   índices de Rutinas de impresión.
  2+  8D63
  3+  8D63 73 8D        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8D65 A0 8D            defw Pinta_Amadeus_3x2
  5+  8D67
  6+  8D67 F6 8D        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8D69 96 8E            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8D6B 4A 8E            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8D6D
 10+  8D6D 20 8E        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8D6F 24 8F            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8D71 D8 8E            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8D73
 14+  8D73
 15+  8D73              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8D73              ;
 17+  8D73              ;   12/12/22
 18+  8D73              ;
 19+  8D73              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8D73              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8D73              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8D73              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8D73              ;
 24+  8D73              ;   Modifica: DE y HL.
 25+  8D73
 26+  8D73 ED 73 E5 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8D77 FD F9        	ld sp,iy
 28+  8D79 06 10            ld b,16
 29+  8D7B D1           1 pop de
 30+  8D7C 7B               ld a,e
 31+  8D7D AE               xor (hl)
 32+  8D7E 77           	ld (hl),a
 33+  8D7F 23           	inc hl
 34+  8D80 7A               ld a,d
 35+  8D81 AE               xor (hl)
 36+  8D82 77           	ld (hl),a
 37+  8D83 2B           	dec hl
 38+  8D84 24           	inc h
 39+  8D85 7C               ld a,h
 40+  8D86 E6 07            and 7
 41+  8D88 20 0A            jr nz,2F
 42+  8D8A 7D               ld a,l
 43+  8D8B C6 20            add a,$20
 44+  8D8D 6F               ld l,a
 45+  8D8E 38 04            jr c,2F
 46+  8D90 7C               ld a,h
 47+  8D91 D6 08            sub 8
 48+  8D93 67               ld h,a
 49+  8D94 7C           2 ld a,h
 50+  8D95 FE 58            cp $58
 51+  8D97 28 02            jr z,3F
 52+  8D99 10 E0            djnz 1B
 53+  8D9B ED 7B E5 85  3 ld sp,(Stack)
 54+  8D9F C9           	ret
 55+  8DA0
 56+  8DA0 ED 73 E5 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8DA4 FD F9        	ld sp,iy
 58+  8DA6 06 08            ld b,8
 59+  8DA8 D1           1 pop de
 60+  8DA9 7B               ld a,e
 61+  8DAA AE               xor (hl)
 62+  8DAB 77           	ld (hl),a
 63+  8DAC 23           	inc hl
 64+  8DAD 7A               ld a,d
 65+  8DAE AE               xor (hl)
 66+  8DAF 77           	ld (hl),a
 67+  8DB0 23           	inc hl
 68+  8DB1 D1           	pop de
 69+  8DB2 7B               ld a,e
 70+  8DB3 AE               xor (hl)
 71+  8DB4 77           	ld (hl),a
 72+  8DB5 2B           	dec hl
 73+  8DB6 2B           	dec hl
 74+  8DB7 24           	inc h
 75+  8DB8 7C               ld a,h
 76+  8DB9 E6 07            and 7
 77+  8DBB 20 0A            jr nz,2F
 78+  8DBD 7D               ld a,l
 79+  8DBE C6 20            add a,$20
 80+  8DC0 6F               ld l,a
 81+  8DC1 38 04            jr c,2F
 82+  8DC3 7C               ld a,h
 83+  8DC4 D6 08            sub 8
 84+  8DC6 67               ld h,a
 85+  8DC7 7C           2 ld a,h
 86+  8DC8 FE 58            cp $58
 87+  8DCA 28 25            jr z,4F
 88+  8DCC 7A               ld a,d
 89+  8DCD AE               xor (hl)
 90+  8DCE 77               ld (hl),a
 91+  8DCF D1           	pop de
 92+  8DD0 23           	inc hl
 93+  8DD1 7B               ld a,e
 94+  8DD2 AE               xor (hl)
 95+  8DD3 77           	ld (hl),a
 96+  8DD4 23           	inc hl
 97+  8DD5 7A               ld a,d
 98+  8DD6 AE               xor (hl)
 99+  8DD7 77           	ld (hl),a
100+  8DD8 2B           	dec hl
101+  8DD9 2B           	dec hl
102+  8DDA 24           	inc h
103+  8DDB 7C               ld a,h
104+  8DDC E6 07            and 7
105+  8DDE 20 0A            jr nz,3F
106+  8DE0 7D               ld a,l
107+  8DE1 C6 20            add a,$20
108+  8DE3 6F               ld l,a
109+  8DE4 38 04            jr c,3F
110+  8DE6 7C               ld a,h
111+  8DE7 D6 08            sub 8
112+  8DE9 67               ld h,a
113+  8DEA 7C           3 ld a,h
114+  8DEB FE 58            cp $58
115+  8DED 28 02            jr z,4F
116+  8DEF 10 B7            djnz 1B
117+  8DF1 ED 7B E5 85  4 ld sp,(Stack)
118+  8DF5 C9           	ret
119+  8DF6
120+  8DF6              ; ---------------------------------------------------
121+  8DF6
122+  8DF6 ED 73 E5 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8DFA FD F9        	ld sp,iy
124+  8DFC
125+  8DFC              ; >>>
126+  8DFC
127+  8DFC 06 10            ld b,16
128+  8DFE D1           1 pop de
129+  8DFF 7A           	ld a,d
130+  8E00 AE           	xor (hl)
131+  8E01 77           	ld (hl),a
132+  8E02 24           	inc h
133+  8E03 7C               ld a,h
134+  8E04 E6 07            and 7
135+  8E06 20 0C            jr nz,2F
136+  8E08 7D               ld a,l
137+  8E09 C6 20            add a,$20
138+  8E0B 6F               ld l,a
139+  8E0C 38 06            jr c,2F
140+  8E0E 7C               ld a,h
141+  8E0F D6 08            sub 8
142+  8E11 67               ld h,a
143+  8E12 18 00            jr 2F
144+  8E14 7C           2 ld a,h
145+  8E15 FE 58            cp $58
146+  8E17 28 02            jr z,3F
147+  8E19 10 E3            djnz 1B
148+  8E1B ED 7B E5 85  3 ld sp,(Stack)
149+  8E1F C9           	ret
150+  8E20
151+  8E20 ED 73 E5 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8E24 FD F9        	ld sp,iy
153+  8E26
154+  8E26              ; >>>
155+  8E26
156+  8E26 06 10            ld b,16
157+  8E28 D1           1 pop de
158+  8E29 7B           	ld a,e
159+  8E2A AE           	xor (hl)
160+  8E2B 77           	ld (hl),a
161+  8E2C 24           	inc h
162+  8E2D 7C               ld a,h
163+  8E2E E6 07            and 7
164+  8E30 20 0C            jr nz,2F
165+  8E32 7D               ld a,l
166+  8E33 C6 20            add a,$20
167+  8E35 6F               ld l,a
168+  8E36 38 06            jr c,2F
169+  8E38 7C               ld a,h
170+  8E39 D6 08            sub 8
171+  8E3B 67               ld h,a
172+  8E3C 18 00            jr 2F
173+  8E3E 7C           2 ld a,h
174+  8E3F FE 58            cp $58
175+  8E41 28 02            jr z,3F
176+  8E43 10 E3            djnz 1B
177+  8E45 ED 7B E5 85  3 ld sp,(Stack)
178+  8E49 C9           	ret
179+  8E4A
180+  8E4A              ; ---------------------------------------------------
181+  8E4A
182+  8E4A ED 73 E5 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8E4E FD F9        	ld sp,iy
184+  8E50 06 08            ld b,8
185+  8E52 D1           1 pop de
186+  8E53 7A           	ld a,d
187+  8E54 AE           	xor (hl)
188+  8E55 77           	ld (hl),a
189+  8E56 23           	inc hl
190+  8E57 D1           	pop de
191+  8E58 7B           	ld a,e
192+  8E59 AE           	xor (hl)
193+  8E5A 77           	ld (hl),a
194+  8E5B 2B           	dec hl
195+  8E5C 24            	inc h
196+  8E5D 7C               ld a,h
197+  8E5E E6 07            and 7
198+  8E60 20 0A            jr nz,2F
199+  8E62 7D               ld a,l
200+  8E63 C6 20            add a,$20
201+  8E65 6F               ld l,a
202+  8E66 38 04            jr c,2F
203+  8E68 7C               ld a,h
204+  8E69 D6 08            sub 8
205+  8E6B 67               ld h,a
206+  8E6C 7C           2 ld a,h
207+  8E6D FE 58            cp $58
208+  8E6F 28 20            jr z,4F
209+  8E71 D1               pop de
210+  8E72 7B           	ld a,e
211+  8E73 AE           	xor (hl)
212+  8E74 77           	ld (hl),a
213+  8E75 23           	inc hl
214+  8E76 7A           	ld a,d
215+  8E77 AE           	xor (hl)
216+  8E78 77           	ld (hl),a
217+  8E79 2B           	dec hl
218+  8E7A 24           	inc h
219+  8E7B 7C               ld a,h
220+  8E7C E6 07            and 7
221+  8E7E 20 0A            jr nz,3F
222+  8E80 7D               ld a,l
223+  8E81 C6 20            add a,$20
224+  8E83 6F               ld l,a
225+  8E84 38 04            jr c,3F
226+  8E86 7C               ld a,h
227+  8E87 D6 08            sub 8
228+  8E89 67               ld h,a
229+  8E8A 7C           3 ld a,h
230+  8E8B FE 58            cp $58
231+  8E8D 28 02            jr z,4F
232+  8E8F 10 C1            djnz 1B
233+  8E91 ED 7B E5 85  4 ld sp,(Stack)
234+  8E95 C9           	ret
235+  8E96
236+  8E96 ED 73 E5 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8E9A FD F9        	ld sp,iy
238+  8E9C 06 08            ld b,8
239+  8E9E D1           1 pop de
240+  8E9F D1           	pop de
241+  8EA0 7B           	ld a,e
242+  8EA1 AE           	xor (hl)
243+  8EA2 77           	ld (hl),a
244+  8EA3 24            	inc h
245+  8EA4 7C               ld a,h
246+  8EA5 E6 07            and 7
247+  8EA7 20 0A            jr nz,2F
248+  8EA9 7D               ld a,l
249+  8EAA C6 20            add a,$20
250+  8EAC 6F               ld l,a
251+  8EAD 38 04            jr c,2F
252+  8EAF 7C               ld a,h
253+  8EB0 D6 08            sub 8
254+  8EB2 67               ld h,a
255+  8EB3 7C           2 ld a,h
256+  8EB4 FE 58            cp $58
257+  8EB6 28 1B            jr z,4F
258+  8EB8 D1               pop de
259+  8EB9 7A           	ld a,d
260+  8EBA AE           	xor (hl)
261+  8EBB 77           	ld (hl),a
262+  8EBC 24           	inc h
263+  8EBD 7C               ld a,h
264+  8EBE E6 07            and 7
265+  8EC0 20 0A            jr nz,3F
266+  8EC2 7D               ld a,l
267+  8EC3 C6 20            add a,$20
268+  8EC5 6F               ld l,a
269+  8EC6 38 04            jr c,3F
270+  8EC8 7C               ld a,h
271+  8EC9 D6 08            sub 8
272+  8ECB 67               ld h,a
273+  8ECC 7C           3 ld a,h
274+  8ECD FE 58            cp $58
275+  8ECF 28 02            jr z,4F
276+  8ED1 10 CB            djnz 1B
277+  8ED3 ED 7B E5 85  4 ld sp,(Stack)
278+  8ED7 C9           	ret
279+  8ED8
280+  8ED8 ED 73 E5 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  8EDC FD F9        	ld sp,iy
282+  8EDE 06 08            ld b,8
283+  8EE0 D1           1 pop de
284+  8EE1 7B           	ld a,e
285+  8EE2 AE           	xor (hl)
286+  8EE3 77           	ld (hl),a
287+  8EE4 23           	inc hl
288+  8EE5 7A           	ld a,d
289+  8EE6 AE           	xor (hl)
290+  8EE7 77           	ld (hl),a
291+  8EE8 2B           	dec hl
292+  8EE9 24             	inc h
293+  8EEA 7C               ld a,h
294+  8EEB E6 07            and 7
295+  8EED 20 0A            jr nz,2F
296+  8EEF 7D               ld a,l
297+  8EF0 C6 20            add a,$20
298+  8EF2 6F               ld l,a
299+  8EF3 38 04            jr c,2F
300+  8EF5 7C               ld a,h
301+  8EF6 D6 08            sub 8
302+  8EF8 67               ld h,a
303+  8EF9 7C           2 ld a,h
304+  8EFA FE 58            cp $58
305+  8EFC 28 21            jr z,4F
306+  8EFE D1               pop de
307+  8EFF 7A           	ld a,d
308+  8F00 AE           	xor (hl)
309+  8F01 77           	ld (hl),a
310+  8F02 23           	inc hl
311+  8F03 D1               pop de
312+  8F04 7B           	ld a,e
313+  8F05 AE           	xor (hl)
314+  8F06 77           	ld (hl),a
315+  8F07 2B           	dec hl
316+  8F08 24           	inc h
317+  8F09 7C               ld a,h
318+  8F0A E6 07            and 7
319+  8F0C 20 0A            jr nz,3F
320+  8F0E 7D               ld a,l
321+  8F0F C6 20            add a,$20
322+  8F11 6F               ld l,a
323+  8F12 38 04            jr c,3F
324+  8F14 7C               ld a,h
325+  8F15 D6 08            sub 8
326+  8F17 67               ld h,a
327+  8F18 7C           3 ld a,h
328+  8F19 FE 58            cp $58
329+  8F1B 28 02            jr z,4F
330+  8F1D 10 C1            djnz 1B
331+  8F1F ED 7B E5 85  4 ld sp,(Stack)
332+  8F23 C9           	ret
333+  8F24
334+  8F24 ED 73 E5 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  8F28 FD F9        	ld sp,iy
336+  8F2A 06 08            ld b,8
337+  8F2C D1           1 pop de
338+  8F2D 7B           	ld a,e
339+  8F2E AE           	xor (hl)
340+  8F2F 77           	ld (hl),a
341+  8F30 24            	inc h
342+  8F31 7C               ld a,h
343+  8F32 E6 07            and 7
344+  8F34 20 0A            jr nz,2F
345+  8F36 7D               ld a,l
346+  8F37 C6 20            add a,$20
347+  8F39 6F               ld l,a
348+  8F3A 38 04            jr c,2F
349+  8F3C 7C               ld a,h
350+  8F3D D6 08            sub 8
351+  8F3F 67               ld h,a
352+  8F40 7C           2 ld a,h
353+  8F41 FE 58            cp $58
354+  8F43 28 1C            jr z,4F
355+  8F45 D1               pop de
356+  8F46 7A           	ld a,d
357+  8F47 AE           	xor (hl)
358+  8F48 77           	ld (hl),a
359+  8F49 24           	inc h
360+  8F4A 7C               ld a,h
361+  8F4B E6 07            and 7
362+  8F4D 20 0A            jr nz,3F
363+  8F4F 7D               ld a,l
364+  8F50 C6 20            add a,$20
365+  8F52 6F               ld l,a
366+  8F53 38 04            jr c,3F
367+  8F55 7C               ld a,h
368+  8F56 D6 08            sub 8
369+  8F58 67               ld h,a
370+  8F59 7C           3 ld a,h
371+  8F5A FE 58            cp $58
372+  8F5C 28 03            jr z,4F
373+  8F5E D1               pop de
374+  8F5F 10 CB            djnz 1B
375+  8F61 ED 7B E5 85  4 ld sp,(Stack)
376+  8F65 C9           	ret
377+  8F66
378+  8F66              ; ---------------------------------------------------
379+  8F66              ;
380+  8F66              ;   27/02/23
381+  8F66              ;
382+  8F66              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  8F66              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  8F66              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  8F66
386+  8F66 ED 73 E5 85  Pinta_Disparo ld (Stack),sp
387+  8F6A FD F9            ld sp,iy
388+  8F6C 06 02            ld b,2
389+  8F6E D1           1 pop de
390+  8F6F 7B               ld a,e
391+  8F70 AE               xor (hl)
392+  8F71 77               ld (hl),a
393+  8F72 23               inc hl
394+  8F73 7A               ld a,d
395+  8F74 AE               xor (hl)
396+  8F75 77               ld (hl),a
397+  8F76 2B               dec hl
398+  8F77 24               inc h
399+  8F78 7C               ld a,h
400+  8F79 E6 07            and 7
401+  8F7B 20 0A            jr nz,2F
402+  8F7D 7D               ld a,l
403+  8F7E C6 20            add a,$20
404+  8F80 6F               ld l,a
405+  8F81 38 04            jr c,2F
406+  8F83 7C               ld a,h
407+  8F84 D6 08            sub 8
408+  8F86 67               ld h,a
409+  8F87 7C           2 ld a,h
410+  8F88 FE 58            cp $58
411+  8F8A 28 02            jr z,3F
412+  8F8C 10 E0            djnz 1B
413+  8F8E ED 7B E5 85  3 ld sp,(Stack)
414+  8F92 C9               ret
415+  8F93
# file closed: Rutinas_de_impresion_sprites.asm
853   8F93              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  8F93              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  8F93              ;
  3+  8F93              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  8F93              ;
  5+  8F93              ; *****************************************************************************************************************************************************************************************
  6+  8F93              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  8F93
  8+  8F93 7C           calcula_tercio ld a,h
  9+  8F94 E6 18        	and $18
 10+  8F96 CB 2F        	sra a
 11+  8F98 CB 2F        	sra a
 12+  8F9A CB 2F        	sra a
 13+  8F9C C9           	ret
 14+  8F9D
# file closed: calcula_tercio.asm
854   8F9D              	include "Cls.asm"
# file opened: Cls.asm
  1+  8F9D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  8F9D              ;
  3+  8F9D              ;
  4+  8F9D              ;	CLS.
  5+  8F9D              ;
  6+  8F9D              ;	Limpia la pantalla y define sus atributos.
  7+  8F9D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  8F9D              ;
  9+  8F9D              ;	COLORES: 0 ..... NEGRO
 10+  8F9D              ;    		 1 ..... AZUL
 11+  8F9D              ; 			 2 ..... ROJO
 12+  8F9D              ;			 3 ..... MAGENTA
 13+  8F9D              ; 			 4 ..... VERDE
 14+  8F9D              ; 			 5 ..... CIAN
 15+  8F9D              ;			 6 ..... AMARILLO
 16+  8F9D              ; 			 7 ..... BLANCO
 17+  8F9D              ;
 18+  8F9D              ;	INPUT: A contiene los atributos de pantalla.
 19+  8F9D              ;
 20+  8F9D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  8F9D
 22+  8F9D
 23+  8F9D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  8FA0 11 01 40     	LD DE,$4001
 25+  8FA3 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  8FA6 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  8FA8 ED B0        	LDIR
 28+  8FAA 01 FF 02     	LD BC,767
 29+  8FAD 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  8FAE ED B0        	LDIR
 31+  8FB0 C9           	ret
 32+  8FB1
# file closed: Cls.asm
855   8FB1              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  8FB1              ; ******************************************************************************************************************************************************************************************
  2+  8FB1              ;
  3+  8FB1              ;   22/01/23
  4+  8FB1              ;
  5+  8FB1              ;	Mov_down
  6+  8FB1              ;
  7+  8FB1              ; 	Mueve el Sprite X px hacia abajo.
  8+  8FB1              ;
  9+  8FB1              ;
 10+  8FB1 21 CF 85     Mov_down ld hl,Ctrl_0
 11+  8FB4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  8FB6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  8FB6              ; 																	; _ en el caso de que no lo haya.
 14+  8FB6 3A BA 85     	ld a,(Vel_down)
 15+  8FB9 47           	ld b,a
 16+  8FBA 2A A4 85         ld hl,(Posicion_actual)
 17+  8FBD CD 93 8F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  8FC0 E6 02        	and 2
 19+  8FC2 28 0F        	jr z,1F
 20+  8FC4
 21+  8FC4              ; Nos encontramos en el último tercio de pantalla.
 22+  8FC4              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  8FC4
 24+  8FC4 7C           	ld a,h
 25+  8FC5 FE 57        	cp $57
 26+  8FC7 20 0A        	jr nz,1F
 27+  8FC9 7D           	ld a,l
 28+  8FCA C6 20        	add $20
 29+  8FCC 30 05        	jr nc,1F
 30+  8FCE
 31+  8FCE              ; ------------------------------
 32+  8FCE CD AF 92     	call Reaparece_arriba
 33+  8FD1              ;	call Reinicio
 34+  8FD1              ; ------------------------------
 35+  8FD1 18 08        	jr 3F
 36+  8FD3 CD D3 8C     1 call NextScan
 37+  8FD6 22 A4 85     	ld (Posicion_actual),hl
 38+  8FD9 10 E2            djnz 2B
 39+  8FDB CD C5 92     3 call Genera_coordenadas
 40+  8FDE C9           	ret
 41+  8FDF
 42+  8FDF
 43+  8FDF              ; ******************************************************************************************************************************************************************************************
 44+  8FDF              ;
 45+  8FDF              ;   22/01/23
 46+  8FDF              ;
 47+  8FDF              ;	Mov_up
 48+  8FDF              ;
 49+  8FDF              ; 	Mueve el Sprite hacia arriba.
 50+  8FDF              ;
 51+  8FDF              ;
 52+  8FDF 21 CF 85     Mov_up ld hl,Ctrl_0
 53+  8FE2 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  8FE4              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  8FE4              ; 																		; _ en el caso de que no lo haya.
 56+  8FE4 3A B9 85     	ld a,(Vel_up)
 57+  8FE7 47           	ld b,a
 58+  8FE8 2A A4 85     	ld hl,(Posicion_actual)
 59+  8FEB CD 93 8F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  8FEE A7           	and a
 61+  8FEF 20 10        	jr nz,1F
 62+  8FF1
 63+  8FF1              ; Nos encontramos en el 1er tercio de pantalla.
 64+  8FF1              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  8FF1
 66+  8FF1 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  8FF2 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  8FF4 20 0B            jr nz,1F
 69+  8FF6 7D               ld a,l
 70+  8FF7 D6 20            sub $20
 71+  8FF9 30 06            jr nc,1F
 72+  8FFB 25               dec h
 73+  8FFC
 74+  8FFC              ; -----------------------------
 75+  8FFC CD 9F 92         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  8FFF              ;	call Reinicio
 77+  8FFF              ; -----------------------------
 78+  8FFF
 79+  8FFF 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  9001 CD E2 8C     1 call PreviousScan
 81+  9004 22 A4 85     	ld (Posicion_actual),hl
 82+  9007 10 E2            djnz 3B
 83+  9009 CD C5 92     2 call Genera_coordenadas
 84+  900C C9           	ret
 85+  900D
 86+  900D              ; ******************************************************************************************************************************************************************************************
 87+  900D              ;
 88+  900D              ;	19/10/22
 89+  900D              ;
 90+  900D              ;	Mov_right.
 91+  900D              ;
 92+  900D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  900D              ;
 94+  900D
 95+  900D 21 CF 85     Mov_right ld hl,Ctrl_0
 96+  9010 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  9012              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  9012              ; 																	; _ en el caso de que no lo haya.
 99+  9012 3A CF 85     	ld a,(Ctrl_0)
100+  9015 CB 77        	bit 6,a
101+  9017 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9019
103+  9019 CD 4D 92     	call Stop_Amadeus_right
104+  901C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  901D 18 4D        	jr 8F
106+  901F
107+  901F 3A A8 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  9022 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  9024 20 46        	jr nz,8F
110+  9026
111+  9026 3A AA 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9029 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  902A 28 40        	jr z,8F
114+  902C
115+  902C              ; ---------- ---------- ----------
116+  902C              ;
117+  902C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  902C
119+  902C 3A B8 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  902F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  9031 28 11        	jr z,1F
122+  9033 38 06        	jr c,6F
123+  9035 FE 04        	cp 4
124+  9037 28 14        	jr z,7F
125+  9039 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  903B
127+  903B              ; ---------- ---------- ----------
128+  903B              ;
129+  903B              ; Perfiles de velocidad
130+  903B              ;
131+  903B
132+  903B 3A AA 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  903E FE FE        	cp $fe
134+  9040 20 2A        	jr nz,8F
135+  9042 18 10        	jr 3F
136+  9044 3A AA 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  9047 FE FD        	cp $fd
138+  9049 20 21        	jr nz,8F
139+  904B 18 07        	jr 3F
140+  904D 3A AA 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  9050 FE FB        	cp $fb
142+  9052 20 18        	jr nz,8F
143+  9054
144+  9054              ; ---------- ---------- ----------
145+  9054
146+  9054              3
147+  9054 CD 8D 92     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  9057              ;	call Reinicio
149+  9057
150+  9057              ; ---------- ---------- ----------
151+  9057              ;
152+  9057              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  9057
154+  9057 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  9059 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  905A CD 73 90     	call DESPLZ_DER
157+  905D C1           	pop bc
158+  905E 10 F9        	djnz 5B
159+  9060 2A A4 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  9063 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  9064 22 A4 85     	ld (Posicion_actual),hl
162+  9067 CD C5 92     	call Genera_coordenadas
163+  906A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  906C
165+  906C              ; ---------- ---------- ----------
166+  906C
167+  906C 2A A4 85     8 ld hl,(Posicion_actual)
168+  906F CD 73 90     	call DESPLZ_DER
169+  9072 C9           2 ret
170+  9073
171+  9073              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  9073              ;
173+  9073              ;	22/9/22
174+  9073              ;
175+  9073
176+  9073 CD 82 90     DESPLZ_DER call Desplaza_derecha
177+  9076 CD CE 90         call modifica_parametros_1er_DESPLZ_2
178+  9079 CD F7 90         call Ciclo_completo
179+  907C 21 CF 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  907F CB FE        	set 7,(hl)
181+  9081 C9           	ret
182+  9082
183+  9082              ; ******************************************************************************************************************************************************************************************
184+  9082              ;	15/02/23
185+  9082              ;
186+  9082
187+  9082 3A B8 85     Desplaza_derecha ld a,(Vel_right)
188+  9085 47           	ld b,a
189+  9086 2A B0 85     	ld hl,(Puntero_DESPLZ_der)
190+  9089 23           1 inc hl
191+  908A 23           	inc hl
192+  908B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  908D 22 B0 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  9090 CD A2 87     	call Extrae_address
195+  9093 22 A6 85     	ld (Puntero_objeto),hl
196+  9096
197+  9096              ; Modifica (Puntero_DESPLZ_izq).
198+  9096
199+  9096              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  9096              ; Cuántos movimientos hemos hecho ??
201+  9096              ; DE contiene (Puntero_DESPLZ_der).
202+  9096
203+  9096 2A AC 85     7 ld hl,(Indice_Sprite_der)
204+  9099 EB           	ex de,hl
205+  909A A7           	and a
206+  909B ED 52        	sbc hl,de
207+  909D CB 3D        	srl l
208+  909F 3E 08        6 ld a,8
209+  90A1 95           	sub l
210+  90A2 30 1E        	jr nc,3F
211+  90A4
212+  90A4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  90A4              ; B="0".
214+  90A4
215+  90A4 04           4 inc b
216+  90A5 3C           	inc a
217+  90A6 20 FC        	jr nz,4B
218+  90A8 78           	ld a,b
219+  90A9 08           	ex af,af
220+  90AA 2A AC 85     	ld hl,(Indice_Sprite_der)
221+  90AD 23           5 inc hl
222+  90AE 23           	inc hl
223+  90AF 10 FC        	djnz 5B
224+  90B1 22 B0 85     	ld (Puntero_DESPLZ_der),hl
225+  90B4 CD A2 87     	call Extrae_address
226+  90B7 22 A6 85     	ld (Puntero_objeto),hl
227+  90BA
228+  90BA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  90BA              ; _(Posicion_actual).
230+  90BA
231+  90BA 21 A4 85     	ld hl,Posicion_actual
232+  90BD 34           	inc (hl)
233+  90BE 08               ex af,af
234+  90BF 6F           	ld l,a
235+  90C0 18 DD        	jr 6B
236+  90C2
237+  90C2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  90C2
239+  90C2 47           3 ld b,a
240+  90C3 2A AE 85     	ld hl,(Indice_Sprite_izq)
241+  90C6 23           2 inc hl
242+  90C7 23           	inc hl
243+  90C8 10 FC        	djnz 2B
244+  90CA 22 B2 85     	ld (Puntero_DESPLZ_izq),hl
245+  90CD C9           8 ret
246+  90CE
247+  90CE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  90CE              ;
249+  90CE              ;	24/7/22
250+  90CE              ;
251+  90CE              ;	modifica_parametros_1er_DESPLZ_2
252+  90CE              ;
253+  90CE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  90CE              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  90CE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  90CE
257+  90CE 3A AA 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  90D1 A7           	and a
259+  90D2 20 1F        	jr nz,1F
260+  90D4 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  90D6 32 AA 85         ld (CTRL_DESPLZ),a
262+  90D9
263+  90D9 21 A3 85     	ld hl,Columns
264+  90DC 34           	inc (hl)
265+  90DD 3A B6 85     	ld a,(Cuad_objeto)
266+  90E0 E6 01        	and 1
267+  90E2 28 0F        	jr z,1F
268+  90E4 2A A4 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  90E7 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  90E8 22 A4 85     	ld (Posicion_actual),hl
271+  90EB CD C5 92     	call Genera_coordenadas
272+  90EE CD 59 92     	call Inc_CTRL_DESPLZ
273+  90F1 18 03        	jr 2F
274+  90F3 CD 59 92     1 call Inc_CTRL_DESPLZ
275+  90F6 C9           2 ret
276+  90F7
277+  90F7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  90F7              ;
279+  90F7              ;	24/7/22
280+  90F7              ;
281+  90F7              ;	Ciclo_completo.
282+  90F7              ;
283+  90F7              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  90F7              ;
285+  90F7              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  90F7              ; 	Decrementamos (Columns).
287+  90F7              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  90F7              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  90F7
290+  90F7
291+  90F7 3A AA 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  90FA FE FF        	cp $ff
293+  90FC 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  90FE E6 F0        	and $f0
295+  9100 20 28        	jr nz,3F
296+  9102
297+  9102              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  9102
299+  9102 3A AA 85     	ld a,(CTRL_DESPLZ)
300+  9105 47           	ld b,a
301+  9106 3E F8        	ld a,$f8
302+  9108 80           	add b
303+  9109 32 AA 85     	ld (CTRL_DESPLZ),a
304+  910C 18 1C        	jr 3F
305+  910E 21 A3 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  9111 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  9112 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  9113 32 AA 85     	ld (CTRL_DESPLZ),a
309+  9116 3A B6 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9119 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  911B 20 0A        	jr nz,2F
312+  911D 2A A4 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  9120 23           	inc hl
314+  9121 22 A4 85     	ld (Posicion_actual),hl
315+  9124 CD C5 92     	call Genera_coordenadas
316+  9127
317+  9127              ; Inicia el puntero de Sprite.
318+  9127
319+  9127 CD B9 87     2 call Inicia_puntero_objeto_der
320+  912A C9           3 ret
321+  912B
322+  912B              ; ******************************************************************************************************************************************************************************************
323+  912B              ;
324+  912B              ;	15/02/23
325+  912B              ;
326+  912B              ;	Mov_left.
327+  912B              ;
328+  912B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  912B              ;
330+  912B              Mov_left
331+  912B
332+  912B 21 CF 85     	ld hl,Ctrl_0
333+  912E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  9130              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  9130              ; 																	; _ en el caso de que no lo haya.
336+  9130 3A CF 85     	ld a,(Ctrl_0)
337+  9133 CB 77        	bit 6,a
338+  9135 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9137
340+  9137 CD 53 92     	call Stop_Amadeus_left
341+  913A C8           	ret z
342+  913B 20 50        	jr nz,8F
343+  913D
344+  913D 3A A8 85     11 ld a,(Coordenada_X)
345+  9140 A7           	and a
346+  9141 20 4A        	jr nz,8F
347+  9143
348+  9143 3A AA 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  9146 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  9147 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9149
352+  9149              ; ---------- ---------- ----------
353+  9149
354+  9149 3A B7 85     	ld a,(Vel_left)
355+  914C FE 02        	cp 2
356+  914E 28 0F        	jr z,1F
357+  9150 38 04        	jr c,6F
358+  9152 FE 04        	cp 4
359+  9154 28 12        	jr z,7F
360+  9156
361+  9156              ; ---------- ---------- ----------
362+  9156
363+  9156 3A AA 85     6 ld a,(CTRL_DESPLZ)
364+  9159 FE F9        	cp $f9
365+  915B 20 30        	jr nz,8F
366+  915D 18 10        	jr 4F
367+  915F 3A AA 85     1 ld a,(CTRL_DESPLZ)
368+  9162 FE FA        	cp $fa
369+  9164 20 27        	jr nz,8F
370+  9166 18 07        	jr 4F
371+  9168 3A AA 85     7 ld a,(CTRL_DESPLZ)
372+  916B FE FC        	cp $fc
373+  916D 20 1E        	jr nz,8F
374+  916F
375+  916F              ; ---------- ---------- ----------
376+  916F
377+  916F              4
378+  916F CD 7B 92     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  9172              ;	call Reinicio
380+  9172
381+  9172              ; ---------- ---------- ----------
382+  9172
383+  9172 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  9174 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  9175
386+  9175 2A AE 85     	ld hl,(Indice_Sprite_izq)
387+  9178 22 B2 85     	ld (Puntero_DESPLZ_izq),hl
388+  917B
389+  917B CD 94 91     	call DESPLZ_IZQ
390+  917E C1           	pop bc
391+  917F 10 F3        	djnz 5B
392+  9181 2A A4 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  9184 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  9185 22 A4 85     	ld (Posicion_actual),hl
395+  9188 CD C5 92     	call Genera_coordenadas
396+  918B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  918D
398+  918D              ; ---------- ---------- ----------
399+  918D              ; Movemos, no hay recolocación.
400+  918D
401+  918D 2A A4 85     8 ld hl,(Posicion_actual)
402+  9190 CD 94 91     	call DESPLZ_IZQ
403+  9193 C9           2 ret
404+  9194
405+  9194              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  9194              ;
407+  9194              ;	22/9/22
408+  9194
409+  9194              DESPLZ_IZQ
410+  9194
411+  9194 CD A3 91     	call Desplaza_izquierda
412+  9197 CD EF 91         call modifica_parametros_1er_DESPLZ
413+  919A CD 17 92     	call Ciclo_completo_2
414+  919D 21 CF 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  91A0 CB BE        	res 7,(hl)
416+  91A2 C9           	ret
417+  91A3
418+  91A3              Desplaza_izquierda
419+  91A3
420+  91A3 3A B7 85     	ld a,(Vel_left)
421+  91A6 47           	ld b,a
422+  91A7 2A B2 85     	ld hl,(Puntero_DESPLZ_izq)
423+  91AA 23           1 inc hl
424+  91AB 23           	inc hl
425+  91AC 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  91AE 22 B2 85     	ld (Puntero_DESPLZ_izq),hl
427+  91B1 CD A2 87     	call Extrae_address
428+  91B4 22 A6 85     	ld (Puntero_objeto),hl
429+  91B7
430+  91B7              ; Modifica (Puntero_DESPLZ_der).
431+  91B7
432+  91B7              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  91B7              ; Cuántos movimientos hemos hecho ??
434+  91B7              ; DE contiene (Puntero_DESPLZ_izq).
435+  91B7
436+  91B7 2A AE 85     7 ld hl,(Indice_Sprite_izq)
437+  91BA EB           	ex de,hl
438+  91BB A7           	and a
439+  91BC ED 52        	sbc hl,de
440+  91BE CB 3D        	srl l
441+  91C0 3E 08        6 ld a,8
442+  91C2 95           	sub l
443+  91C3 30 1E        	jr nc,3F
444+  91C5
445+  91C5              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  91C5              ; B="0".
447+  91C5
448+  91C5 04           4 inc b
449+  91C6 3C           	inc a
450+  91C7 20 FC        	jr nz,4B
451+  91C9 78           	ld a,b
452+  91CA 08           	ex af,af
453+  91CB 2A AE 85     	ld hl,(Indice_Sprite_izq)
454+  91CE 23           5 inc hl
455+  91CF 23           	inc hl
456+  91D0 10 FC        	djnz 5B
457+  91D2 22 B2 85     	ld (Puntero_DESPLZ_izq),hl
458+  91D5 CD A2 87     	call Extrae_address
459+  91D8 22 A6 85     	ld (Puntero_objeto),hl
460+  91DB
461+  91DB              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  91DB              ; _(Posicion_actual).
463+  91DB
464+  91DB 21 A4 85     	ld hl,Posicion_actual
465+  91DE 35           	dec (hl)
466+  91DF 08           	ex af,af
467+  91E0 6F           	ld l,a
468+  91E1 18 DD        	jr 6B
469+  91E3
470+  91E3              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  91E3
472+  91E3 47           3 ld b,a
473+  91E4 2A AC 85     	ld hl,(Indice_Sprite_der)
474+  91E7 23           2 inc hl
475+  91E8 23           	inc hl
476+  91E9 10 FC        	djnz 2B
477+  91EB 22 B0 85     	ld (Puntero_DESPLZ_der),hl
478+  91EE C9           8 ret
479+  91EF
480+  91EF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  91EF              ;
482+  91EF              ;	modifica_parametros_1er_DESPLZ
483+  91EF              ;
484+  91EF              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  91EF              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  91EF              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  91EF
488+  91EF 3A AA 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  91F2 A7           	and a
490+  91F3 20 1E        	jr nz,1F
491+  91F5 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  91F6 32 AA 85         ld (CTRL_DESPLZ),a
493+  91F9 21 A3 85     	ld hl,Columns
494+  91FC 34           	inc (hl)
495+  91FD 3A B6 85     	ld a,(Cuad_objeto)
496+  9200 E6 01        	and 1
497+  9202 20 0F        	jr nz,1F
498+  9204 2A A4 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  9207 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  9208 22 A4 85     	ld (Posicion_actual),hl
501+  920B CD C5 92     	call Genera_coordenadas
502+  920E CD 6A 92     	call Dec_CTRL_DESPLZ
503+  9211 18 03        	jr 2F
504+  9213 CD 6A 92     1 call Dec_CTRL_DESPLZ
505+  9216 C9           2 ret
506+  9217
507+  9217              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  9217
509+  9217 3A AA 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  921A FE F7        	cp $f7
511+  921C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  921E 30 2C        	jr nc,3F
513+  9220
514+  9220              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  9220
516+  9220 06 00        	ld b,0
517+  9222 04           4 inc b
518+  9223 3C           	inc a
519+  9224 FE F7        	cp $f7
520+  9226 20 FA        	jr nz,4B
521+  9228 3E FF        	ld a,$ff
522+  922A 90           	sub b
523+  922B 32 AA 85     	ld (CTRL_DESPLZ),a
524+  922E 18 1C        	jr 3F
525+  9230
526+  9230              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  9230
528+  9230 21 A3 85     1 ld hl,Columns
529+  9233 35           	dec (hl)
530+  9234 AF           	xor a
531+  9235 32 AA 85     	ld (CTRL_DESPLZ),a
532+  9238 3A B6 85     	ld a,(Cuad_objeto)
533+  923B E6 01        	and 1
534+  923D 28 0A        	jr z,2F
535+  923F 2A A4 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  9242 2B           	dec hl
537+  9243 22 A4 85     	ld (Posicion_actual),hl
538+  9246 CD C5 92     	call Genera_coordenadas
539+  9249
540+  9249              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  9249
542+  9249 CD CC 87     2 call Inicia_puntero_objeto_izq
543+  924C C9           3 ret
544+  924D
545+  924D              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  924D              ;
547+  924D              ;	19/10/22
548+  924D              ;
549+  924D              ;	(cp 29) para un Amadeus de 3 Columns.
550+  924D              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  924D
552+  924D 3A A8 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  9250 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  9252 C9           	ret
555+  9253
556+  9253              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  9253              ;
558+  9253              ;	19/10/22
559+  9253              ;
560+  9253              ;	(cp 2) para un Amadeus de 3 Columns.
561+  9253              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  9253
563+  9253 3A A8 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  9256 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  9258 C9           	ret
566+  9259
567+  9259              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  9259              ;
569+  9259              ;	24/7/22
570+  9259              ;
571+  9259              ;	Inc_CTRL_DESPLZ
572+  9259              ;
573+  9259              ;
574+  9259              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  9259
576+  9259 21 AA 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  925C 3A B8 85     	ld a,(Vel_right)
578+  925F A7           	and a
579+  9260 28 06        	jr z,1F
580+  9262 47           	ld b,a
581+  9263 34           3 inc (hl)
582+  9264 10 FD        	djnz 3B
583+  9266 18 01        	jr 2F
584+  9268 34           1 inc (hl)
585+  9269 C9           2 ret
586+  926A
587+  926A              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  926A              ;
589+  926A              ;	5/2/23
590+  926A              ;
591+  926A              ;	Dec_CTRL_DESPLZ
592+  926A              ;
593+  926A              ;
594+  926A              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  926A
596+  926A 21 AA 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  926D 3A B7 85     	ld a,(Vel_left)
598+  9270 A7           	and a
599+  9271 28 06        	jr z,1F
600+  9273 47           	ld b,a
601+  9274 35           3 dec (hl)
602+  9275 10 FD        	djnz 3B
603+  9277 18 01        	jr 2F
604+  9279 35           1 dec (hl)
605+  927A C9           2 ret
606+  927B
607+  927B              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  927B
609+  927B 2A A4 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  927E 01 1F 00     	ld bc,31
611+  9281 A7           	and a
612+  9282 ED 4A        	adc hl,bc
613+  9284 22 A4 85     	ld (Posicion_actual),hl
614+  9287 21 CF 85     	ld hl,Ctrl_0														; $xxx1
615+  928A CB C6        	set 0,(hl)
616+  928C C9           	ret
617+  928D
618+  928D              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  928D
620+  928D 2A A4 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  9290 01 1F 00     	ld bc,31
622+  9293 A7           	and a
623+  9294 ED 42        	sbc hl,bc
624+  9296 22 A4 85     	ld (Posicion_actual),hl 											; $xx1x
625+  9299 21 CF 85     	ld hl,Ctrl_0
626+  929C CB CE        	set 1,(hl)
627+  929E C9           	ret
628+  929F
629+  929F              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  929F
631+  929F 24           Reaparece_abajo inc h
632+  92A0 01 E0 17     	ld bc,$17e0
633+  92A3 A7           	and a
634+  92A4 ED 4A        	adc hl,bc
635+  92A6 22 A4 85     	ld (Posicion_actual),hl
636+  92A9 21 CF 85     	ld hl,Ctrl_0
637+  92AC CB D6        	set 2,(hl)
638+  92AE C9           	ret
639+  92AF
640+  92AF              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  92AF
642+  92AF 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  92B2 A7           	and a
644+  92B3 ED 42        	sbc hl,bc
645+  92B5 22 A4 85     	ld (Posicion_actual),hl
646+  92B8 21 CF 85     	ld hl,Ctrl_0
647+  92BB CB DE        	set 3,(hl)
648+  92BD C9           	ret
649+  92BE
650+  92BE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  92BE
652+  92BE 2A B4 85     Reinicio ld hl,(Posicion_inicio)
653+  92C1 22 A4 85     	ld (Posicion_actual),hl
654+  92C4 C9           	ret
# file closed: Direcciones.asm
856   92C5              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  92C5              ;	12/12/22
  2+  92C5              ;
  3+  92C5              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  92C5              ;	Fila superior "0", Columna izquierda "0".
  5+  92C5              ;
  6+  92C5              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  92C5              ;
  8+  92C5              ;	Modifica: A
  9+  92C5
 10+  92C5 C5           Genera_coordenadas push bc
 11+  92C6 E5           	push hl
 12+  92C7 2A A4 85     	ld hl,(Posicion_actual)
 13+  92CA 7D           	ld a,l
 14+  92CB E6 1F        	and $1f
 15+  92CD 32 A8 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  92D0 CD 93 8F     	call calcula_tercio
 17+  92D3 47           	ld b,a
 18+  92D4 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  92D5 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  92D7 7D           	ld a,l
 21+  92D8 E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  92DA 28 05        	jr z,2F
 23+  92DC 0C           1 inc c
 24+  92DD D6 20        	sub 32
 25+  92DF 20 FB        	jr nz,1B
 26+  92E1 0C           2 inc c
 27+  92E2 04           	inc b
 28+  92E3 05           	dec b
 29+  92E4 28 04        	jr z,3F
 30+  92E6 3E E0        	ld a,$e0
 31+  92E8 10 F2        	djnz 1B
 32+  92EA 79           3 ld a,c
 33+  92EB 3D           	dec a
 34+  92EC 32 A9 85     	ld (Coordenada_y),a
 35+  92EF E1           	pop hl
 36+  92F0 C1           	pop bc
 37+  92F1 C9           	ret
# file closed: Genera_coordenadas.asm
857   92F2              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  92F2
  2+  92F2
  3+  92F2              ;   11/8/22
  4+  92F2              ;
  5+  92F2              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  92F2              ;
  7+  92F2              ;   Mov_obj.asm
  8+  92F2              ;
  9+  92F2              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  92F2              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  92F2              ;
 12+  92F2              ;   Codificación:
 13+  92F2              ;
 14+  92F2              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  92F2
 16+  92F2              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  92F2
 18+  92F2 02 40 00     Arriba db 2,%01000000,0
 19+  92F5 02 80 00     Abajo db 2,%10000000,0
 20+  92F8 02 20 00     Derecha db 2,%00100000,0
 21+  92FB 02 10 00     Izquierda db 2,%00010000,0
 22+  92FE 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  9302 60 42 60 40
 22+  9306 63
 23+  9307 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  930B 22 A3 80 A0
 24+  930F 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  9313 84 A0 83 A0
 25+  9317 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  931B 80 A3 22 A0
 26+  931F 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  9323 40 60 42 60
 27+  9327 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  932B 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  932F 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  9333 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  9337 84
 31+  9338 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  933C 84 00
 32+  933E 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  9342 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  9346 1F 1F 1F 1F
 34+  934A 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  934E 1F 1F 1F 1F
 34+  9352 1F
 35+  9353 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  9357 2F 2F 2F 2F
 35+  935B 2F 2F
 36+  935D 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  9361 2F 2F 00
 37+  9364
 38+  9364
 39+  9364              ; ----- ----- ----- ----- -----
 40+  9364
 41+  9364 42 93        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  9366 3E 93        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  9368 FB 92        Indice_mov_Izquierda defw Izquierda
 44+  936A F8 92        Indice_mov_Derecha defw Derecha
 45+  936C F5 92        Indice_mov_Abajo defw Abajo
 46+  936E F2 92        Indice_mov_Arriba defw Arriba
 47+  9370 2F 93        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  9372 33 93        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  9374 2B 93        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  9376 38 93        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  9378 FE 92        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  937A              ; ----- ----- ----- ----- -----
 53+  937A
 54+  937A 3A D5 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  937D A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  937E 28 02            jr z,1F
 57+  9380 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  9382 3A D6 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  9385 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  9387 32 D6 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  938A              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  938A 2A D3 85         ld hl,(Puntero_mov)
 63+  938D 7E               ld a,(hl)
 64+  938E 32 D5 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  9391 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  9392 22 D3 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  9395
 68+  9395 3A D7 85     Decoder ld a,(Repetimos_db)
 69+  9398 A7               and a
 70+  9399 20 0C            jr nz,12F
 71+  939B 2A D3 85         ld hl,(Puntero_mov)
 72+  939E 7E               ld a,(hl)
 73+  939F A7               and a
 74+  93A0 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  93A2 E6 0F            and $0f
 76+  93A4 32 D7 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  93A7              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  93A7 2A D3 85     12 ld hl,(Puntero_mov)
 79+  93AA CB 7E            bit 7,(hl)
 80+  93AC 28 03            jr z,2F
 81+  93AE CD B1 8F         call Mov_down
 82+  93B1 2A D3 85     2 ld hl, (Puntero_mov)
 83+  93B4 CB 76            bit 6,(hl)
 84+  93B6 28 03            jr z,3F
 85+  93B8 CD DF 8F         call Mov_up
 86+  93BB 2A D3 85     3 ld hl, (Puntero_mov)
 87+  93BE CB 6E            bit 5,(hl)
 88+  93C0 28 03            jr z,4F
 89+  93C2 CD 0D 90         call Mov_right
 90+  93C5 2A D3 85     4 ld hl, (Puntero_mov)
 91+  93C8 CB 66            bit 4,(hl)
 92+  93CA 28 03            jr z,5F
 93+  93CC CD 2B 91         call Mov_left
 94+  93CF
 95+  93CF              ; ---------- --------- --------- ---------- ----------
 96+  93CF
 97+  93CF 3A D7 85     5 ld a,(Repetimos_db)
 98+  93D2 A7               and a
 99+  93D3 28 07            jr z,6F
100+  93D5 3D               dec a
101+  93D6 32 D7 85         ld (Repetimos_db),a
102+  93D9 28 01            jr z,6f
103+  93DB C9           11 ret
104+  93DC 21 D5 85     6 ld hl,Contador_db_mov
105+  93DF 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  93E0 2A D3 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  93E3 23               inc hl
108+  93E4 22 D3 85         ld (Puntero_mov),hl
109+  93E7 18 F2            jr 11B
110+  93E9 2A D1 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  93EC 3A D6 85         ld a,(Incrementa_puntero)
112+  93EF 47               ld b,a
113+  93F0 23           8 inc hl
114+  93F1 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  93F3 5E               ld e,(hl)
116+  93F4 23               inc hl
117+  93F5 56               ld d,(hl)
118+  93F6 EB               ex de,hl
119+  93F7 22 D3 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  93FA 18 DF            jr 11B
121+  93FC
122+  93FC              ; ---------- --------- --------- ---------- ----------
123+  93FC              ;
124+  93FC              ;   11/8/22
125+  93FC              ;
126+  93FC              ;   Prepara_Puntero_mov
127+  93FC
128+  93FC E5           Prepara_Puntero_mov push hl
129+  93FD D5               push de
130+  93FE 2A D1 85         ld hl,(Puntero_indice_mov)
131+  9401 5E               ld e,(hl)
132+  9402 23               inc hl
133+  9403 56               ld d,(hl)
134+  9404 EB               ex de,hl
135+  9405 22 D3 85         ld (Puntero_mov),hl
136+  9408 D1               pop de
137+  9409 E1               pop hl
138+  940A C9               ret
139+  940B
140+  940B              ; ---------- --------- --------- ---------- ----------
141+  940B              ;
142+  940B              ;   11/8/22
143+  940B              ;
144+  940B              ;   Reinicia_el_movimiento
145+  940B
146+  940B CD FC 93     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  940E AF               xor a
148+  940F 32 D5 85         ld (Contador_db_mov),a
149+  9412 32 D6 85         ld (Incrementa_puntero),a
150+  9415
151+  9415              ;    jr $
152+  9415
153+  9415 C3 7A 93         jp Movimiento
154+  9418 C9               ret
155+  9419              ; ---------- --------- --------- ---------- ----------
156+  9419
157+  9419
158+  9419
159+  9419
160+  9419
161+  9419
162+  9419
163+  9419
164+  9419
165+  9419
166+  9419
167+  9419
168+  9419
169+  9419
170+  9419
171+  9419
172+  9419
173+  9419
# file closed: Patrones_de_mov.asm
858   9419              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9419              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9419              ;
  3+  9419              ;	3/1/23
  4+  9419              ;
  5+  9419              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9419
  7+  9419              ;	ADC HL,SP	LD (addr),SP
  8+  9419              ;	ADD HL,SP	LD SP,(addr)
  9+  9419              ;	ADD IX,SP	LD SP,nn
 10+  9419              ; 	ADD IY,SP	LD SP,HL
 11+  9419              ;				LD SP,IX
 12+  9419              ;	DEC SP		LD SP,IY
 13+  9419
 14+  9419              ;	EX (SP),HL
 15+  9419              ;	EX (SP),IX
 16+  9419              ;	EX (SP),IY
 17+  9419
 18+  9419              ;	INC SP
 19+  9419
 20+  9419
 21+  9419                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 E5 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A DC 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A EB 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6 18 03            jr 4F
 43+  7FB8
 44+  7FB8 2A E9 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 45+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 46+  7FBD
 47+  7FBD D1           1 pop de
 48+  7FBE 73               ld (hl),e
 49+  7FBF 23               inc hl
 50+  7FC0 72               ld (hl),d
 51+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 52+  7FC2 10 F9            djnz 1B
 53+  7FC4
 54+  7FC4 A7               and a
 55+  7FC5 28 05            jr z,5F
 56+  7FC7
 57+  7FC7 22 EB 85         ld (Stack_snapshot_disparos),hl
 58+  7FCA 18 03            jr 6F
 59+  7FCC
 60+  7FCC 22 E9 85     5 ld (Stack_snapshot),hl
 61+  7FCF ED 7B E5 85  6 ld sp,(Stack)
 62+  7FD3
 63+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 64+  7FD4
 65+  7FD4
# file closed: Guarda_foto_registros.asm
859   7FD4
860   7FD4              	SAVESNA "Pruebas.sna", START
861   7FD4
862   7FD4
863   7FD4
# file closed: Banco_de_pruebas.asm
