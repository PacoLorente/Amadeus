# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 3F 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83E8              ;                  _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        	defw 0											; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
198+  84FA 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  84FC 02           	db 2											; (Cuad_objeto).
200+  84FD
201+  84FD 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
215+  8517 84 93 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  851E
218+  851E 00           	db 0 											; (Columnas).
219+  851F 00 00        	defw 0											; (Limite_horizontal).
220+  8521 00           	db 0											; (Limite_vertical).
221+  8522
222+  8522              ; ---------- ---------- ---------- ---------- ----------
223+  8522
224+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  8524 00 00        	defw 0                                          ; (Posicion_actual).
226+  8526 00 00        	defw 0											; (Puntero_objeto).
227+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  852B
229+  852B 04           	db %00000100									; (Attr).
230+  852C
231+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8530
234+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  8534
237+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  8536 01           	db 1											; (Cuad_objeto).
239+  8537
240+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  853B
242+  853B 00 00        	db 0,0											; Variables_de_borrado
243+  853D 00 00        	defw 0										 	;	" " " " " " "
244+  853F 00 00        	defw 0											;	" " " " " " "
245+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  8545
247+  8545 00 00        	db 0,0											; Variables_de_pintado
248+  8547 00 00        	defw 0											;	" " " " " " "
249+  8549 00 00        	defw 0											;	" " " " " " "
250+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  854F
252+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8551
254+  8551 86 93 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8558
257+  8558 00           	db 0 											; (Columnas).
258+  8559 00 00        	defw 0											; (Limite_horizontal).
259+  855B 00           	db 0											; (Limite_vertical).
260+  855C
261+  855C              ; ---------- ---------- ---------- ---------- ----------
262+  855C
263+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  855E 00 00        	defw 0                                          ; (Posicion_actual).
265+  8560 00 00        	defw 0 											; (Puntero_objeto).
266+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  8565
268+  8565 01           	db %00000001									; (Attr).
269+  8566
270+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  856A
273+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  856E
276+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8570 00           	db 0											; (Cuad_objeto).
278+  8571
279+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  8575
281+  8575 00 00        	db 0,0											; Variables_de_borrado
282+  8577 00 00        	defw 0										 	;	" " " " " " "
283+  8579 00 00        	defw 0											;	" " " " " " "
284+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  857F
286+  857F 00 00        	db 0,0											; Variables_de_pintado
287+  8581 00 00        	defw 0											;	" " " " " " "
288+  8583 00 00        	defw 0											;	" " " " " " "
289+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8589
291+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  858B
293+  858B 76 93 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  8592
296+  8592 00           	db 0 											; (Columnas).
297+  8593 00 00        	defw 0											; (Limite_horizontal).
298+  8595 00           	db 0											; (Limite_vertical).
299+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
135   85C5 72 93        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ; Gestión de ENTIDADES.
163   85D1
164   85D1 00 00        Puntero_store_entidades defw 0
165   85D3 00 00        Puntero_restore_entidades defw 0
166   85D5 00 00        Indice_restore defw 0
167   85D7 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
168   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
169   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
170   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
171   85D9              ;														; _ (Numero_de_malotes)="0".
172   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
173   85DB              ;														; _variable para almacenar lo posición del puntero_
174   85DB              ; 														; _de pila, SP.
175   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
176   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
177   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
178   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
179   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
180   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
181   85E1              ;														; _el snapshot de los registros del siguiente disparo.
182   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
183   85E1
184   85E1              ; Gestión de Disparos.
185   85E1
186   85E1              ;Puntero_extraccion_disparo_Amadeus defw 0
187   85E1              ;Puntero_extraccion_disparo_entidades defw 0
188   85E1 00           Numero_de_disparotes db 0
189   85E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
190   85E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
191   85E6
192   85E6              ; Gestión de FRAMES.
193   85E6
194   85E6 00           Switch db 0
195   85E7
196   85E7              ; Variables de Raster y localización en pantalla.
197   85E7
198   85E7 00 FF        Temp_Raster defw $ff00
199   85E9
200   85E9              ; Rutina principal *************************************************************************************************************************************************************************
201   85E9              ;
202   85E9              ;	14/11/22
203   85E9
204   85E9 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
205   85EC
206   85EC 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
207   85EE ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
208   85F0 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
209   85F2 F3           	DI
210   85F3
211   85F3 3E 01        	ld a,1
212   85F5 D3 FE        	out ($fe),a
213   85F7
214   85F7 3E 07        	ld a,%00000111
215   85F9 CD AB 8F     	call Cls
216   85FC
217   85FC              ;	call Pinta_FILAS
218   85FC
219   85FC CD 35 88     	call Pulsa_ENTER
220   85FF
221   85FF 21 D7 85     	ld hl,Numero_de_entidades
222   8602 46           	ld b,(hl)
223   8603 04           	inc b
224   8604 05           	dec b
225   8605 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
226   8607
227   8607              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
228   8607              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
229   8607              ;	Pintamos el resto de entidades:
230   8607
231   8607 CD 2E 87     	call Inicia_punteros_de_entidades
232   860A
233   860A              ;	INICIA ENTIDADES!!!!!
234   860A
235   860A C5           1 push bc  												; Guardo el contador de entidades.
236   860B CD 88 87      	call Inicia_Puntero_objeto
237   860E CD FB 89     	call Draw
238   8611 CD A0 7F     	call Guarda_foto_registros
239   8614 CD D0 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
240   8617 C1           	pop bc
241   8618 10 F0        	djnz 1B  											; Decremento el contador de entidades.
242   861A
243   861A              ; 	INICIA AMADEUS!!!!!
244   861A
245   861A CD 11 88     3 call Restore_Amadeus
246   861D CD 88 87     	call Inicia_Puntero_objeto
247   8620 CD FB 89     	call Draw
248   8623 CD A0 7F     	call Guarda_foto_registros
249   8626 CD 23 88     	call Store_Amadeus
250   8629
251   8629              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
252   8629
253   8629 CD 44 87     	call Inicia_Puntero_Disparo_Entidades
254   862C CD 4B 87     	call Inicia_Puntero_Disparo_Amadeus
255   862F
256   862F              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
257   862F
258   862F CD 2E 87     	call Inicia_punteros_de_entidades
259   8632 CD FF 87     	call Restore_Primera_entidad
260   8635
261   8635 3A D7 85     	ld a,(Numero_de_entidades)
262   8638 3C           	inc a
263   8639 32 D8 85     	ld (Numero_de_malotes),a
264   863C
265   863C FB           2 ei
266   863D 18 FD        	jr 2B
267   863F
268   863F              ; -----------------------------------------------------------------------------------
269   863F
270   863F              Frame
271   863F
272   863F              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
273   863F              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
274   863F
275   863F 3E 02            ld a,2
276   8641 D3 FE            out ($fe),a
277   8643 CD FF 8C     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
278   8646 CD 38 8D     	call Extrae_foto_disparos
279   8649 3E 01            ld a,1
280   864B D3 FE            out ($fe),a
281   864D
282   864D              ; ----------------------------------------------------------------------
283   864D
284   864D 21 00 70     	ld hl,Album_de_fotos
285   8650 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
286   8653              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
287   8653 3A D7 85         ld a,(Numero_de_entidades)
288   8656 47               ld b,a
289   8657 A7           	and a
290   8658 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
291   865A
292   865A C5           2 push bc
293   865B CD A7 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
294   865E 3A C3 85     	ld a,(Ctrl_0)
295   8661 CB 67        	bit 4,a
296   8663 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
297   8665
298   8665              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
299   8665              ; Las entidades sólo generan disparo cuando se mueven.
300   8665              ; 16/02/23.
301   8665              ; [[[
302   8665 CD 6C 88     	call Detecta_disparo_entidad
303   8668              ; ]]]
304   8668 CD F5 86     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
305   866B
306   866B 21 C3 85     1 ld hl,Ctrl_0
307   866E CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
308   8670 AF           	xor a
309   8671 32 C4 85     	ld (Obj_dibujado),a
310   8674 CD D0 87     	call Store_Restore_entidades
311   8677 C1           	pop bc
312   8678 10 E0        	djnz 2B
313   867A
314   867A              ; Tras la gestión de las entidades, ... AMADEUS.
315   867A
316   867A CD 11 88     4 call Restore_Amadeus
317   867D CD C6 86     	call Mov_Amadeus
318   8680 3A C3 85     	ld a,(Ctrl_0)
319   8683 CB 67        	bit 4,a
320   8685 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
321   8687 CD F5 86     	call Guarda_foto_entidad_a_pintar
322   868A
323   868A 21 C3 85     3 ld hl,Ctrl_0
324   868D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
325   868F AF           	xor a
326   8690 32 C4 85     	ld (Obj_dibujado),a
327   8693 CD 23 88     	call Store_Amadeus
328   8696
329   8696              ; -----
330   8696
331   8696 CD 2E 87     	call Inicia_punteros_de_entidades
332   8699 CD FF 87     	call Restore_Primera_entidad
333   869C
334   869C              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
335   869C
336   869C CD 52 87     	call Calcula_numero_de_malotes
337   869F CD 6A 87     	call Calcula_numero_de_disparotes
338   86A2
339   86A2 3E 04        	ld a,4
340   86A4 D3 FE        	out ($fe),a
341   86A6 C9           	ret
342   86A7
343   86A7              ; --------------------------------------------------------------------------------------------------------------
344   86A7              ;
345   86A7              ;	29/1/23
346   86A7
347   86A7              Mov_obj
348   86A7
349   86A7              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
350   86A7
351   86A7 AF           	xor a
352   86A8 32 C4 85     	ld (Obj_dibujado),a
353   86AB CD FF 86         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
354   86AE              ;														; Obj_dibujado="0".
355   86AE              ; Movemos Entidades malignas.
356   86AE
357   86AE CD 88 93     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
358   86B1 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
359   86B4 CB 67        	bit 4,a
360   86B6 C8           	ret z
361   86B7
362   86B7              ; ---------
363   86B7
364   86B7 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
365   86B9 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
366   86BC CD FF 86         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
367   86BF CD 16 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
368   86C2 CD E5 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
369   86C5 C9           	ret													; _de la misma.
370   86C6
371   86C6              ; --------------------------------------------------------------------------------------------------------------
372   86C6              ;
373   86C6              ;	29/1/23
374   86C6
375   86C6              Mov_Amadeus
376   86C6
377   86C6 AF           	xor a
378   86C7 32 C4 85     	ld (Obj_dibujado),a
379   86CA CD FF 86         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
380   86CD              ;														; Obj_dibujado="0".
381   86CD              ; Movemos Amadeus.
382   86CD
383   86CD CD 49 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
384   86D0 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
385   86D3 CB 67        	bit 4,a
386   86D5 C8           	ret z
387   86D6
388   86D6              ; ---------
389   86D6
390   86D6 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
391   86D8 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
392   86DB CD FF 86         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
393   86DE CD 16 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
394   86E1 CD E5 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
395   86E4 C9           	ret													; _de la nave.
396   86E5
397   86E5              ; --------------------------------------------------------------------------------------------------------------
398   86E5              ;
399   86E5              ;	31/01/23
400   86E5              ;
401   86E5              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
402   86E5
403   86E5              Guarda_foto_entidad_a_borrar
404   86E5
405   86E5 CD D5 8C     	call Prepara_draw
406   86E8 CD 0F 8C     	call calcula_CColumnass
407   86EB CD 46 8C     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
408   86EE CD 9B 8C     	call Define_rutina_de_impresion
409   86F1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
410   86F4 C9           	ret
411   86F5
412   86F5              ; --------------------------------------------------------------------------------------------------------------
413   86F5              ;
414   86F5              ;	31/01/23
415   86F5              ;
416   86F5              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
417   86F5              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
418   86F5
419   86F5              Guarda_foto_entidad_a_pintar
420   86F5
421   86F5 CD 22 87     	call Repone_pintar
422   86F8 CD FB 89     	call Draw
423   86FB CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
424   86FE C9           	ret
425   86FF
426   86FF              ; --------------------------------------------------------------------------------------------------------------
427   86FF              ;
428   86FF              ;
429   86FF
430   86FF 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
431   8702 3A C4 85     	ld a,(Obj_dibujado)
432   8705 A7           	and a
433   8706 28 05        	jr z,1F
434   8708 11 B9 85     	ld de,Variables_de_pintado
435   870B 18 03        	jr 2F
436   870D 11 AF 85     1 ld de,Variables_de_borrado
437   8710 01 08 00     2 ld bc,8
438   8713 ED B0        	ldir
439   8715 C9           	ret
440   8716
441   8716              ; --------------------------------------------------------------------------------------------------------------
442   8716
443   8716 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
444   8719 11 96 85     	ld de,Filas
445   871C 01 08 00     	ld bc,8
446   871F ED B0        	ldir
447   8721 C9           	ret
448   8722
449   8722 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
450   8725 11 96 85     	ld de,Filas
451   8728 01 08 00     	ld bc,8
452   872B ED B0        	ldir
453   872D C9           	ret
454   872E
455   872E              ; *************************************************************************************************************************************************************
456   872E              ;
457   872E              ; 8/1/23
458   872E              ;
459   872E              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
460   872E              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
461   872E              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
462   872E
463   872E              ; Destruye HL y DE !!!!!
464   872E
465   872E              Inicia_punteros_de_entidades
466   872E
467   872E 21 68 84     	ld hl,Indice_de_entidades
468   8731 CD 82 87         call Extrae_address
469   8734 22 D1 85         ld (Puntero_store_entidades),hl
470   8737 21 6A 84     	ld hl,Indice_de_entidades+2
471   873A 22 D5 85     	ld (Indice_restore),hl
472   873D CD 82 87     	call Extrae_address
473   8740 22 D3 85     	ld (Puntero_restore_entidades),hl
474   8743 C9               ret
475   8744
476   8744              ; *************************************************************************************************************************************************************
477   8744              ;
478   8744              ; 8/1/23
479   8744              ;
480   8744              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
481   8744
482   8744 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
483   8747 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
484   874A C9           	ret
485   874B 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
486   874E 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
487   8751 C9           	ret
488   8752
489   8752              ; -------------------------------------------------------------------------------------------------------------
490   8752              ;
491   8752              ; 28/2/23
492   8752              ;
493   8752
494   8752              Calcula_numero_de_malotes
495   8752
496   8752 21 00 70     	ld hl,Album_de_fotos
497   8755 EB           	ex de,hl
498   8756 2A DD 85     	ld hl,(Stack_snapshot)
499   8759
500   8759 06 00        	ld b,0
501   875B 7D           	ld a,l
502   875C 93           	sub e
503   875D 28 07        	jr z,1F
504   875F
505   875F              ; Nº de malotes no es "0".
506   875F
507   875F D6 06        2 sub 6
508   8761 04           	inc b
509   8762 A7           	and a
510   8763 20 FA        	jr nz,2B
511   8765 78           	ld a,b
512   8766
513   8766 32 D8 85     1 ld (Numero_de_malotes),a
514   8769 C9           	ret
515   876A
516   876A              ; -------------------------------------------------------------------------------------------------------------
517   876A              ;
518   876A              ; 28/2/23
519   876A              ;
520   876A
521   876A              Calcula_numero_de_disparotes
522   876A
523   876A 21 60 70     	ld hl,Album_de_fotos_disparos
524   876D EB           	ex de,hl
525   876E 2A DF 85     	ld hl,(Stack_snapshot_disparos)
526   8771
527   8771 06 00        	ld b,0
528   8773 7D           	ld a,l
529   8774 93           	sub e
530   8775 28 07        	jr z,1F
531   8777
532   8777              ; Nº de malotes no es "0".
533   8777
534   8777 D6 06        2 sub 6
535   8779 04           	inc b
536   877A A7           	and a
537   877B 20 FA        	jr nz,2B
538   877D 78           	ld a,b
539   877E
540   877E 32 E1 85     1 ld (Numero_de_disparotes),a
541   8781 C9           	ret
542   8782              ; *************************************************************************************************************************************************************
543   8782              ;
544   8782              ; 20/10/22
545   8782              ;
546   8782              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
547   8782              ;
548   8782              ; Destruye el puntero y DE !!!!!
549   8782
550   8782 5E           Extrae_address ld e,(hl)
551   8783 23           	inc hl
552   8784 56           	ld d,(hl)
553   8785 2B           	dec hl
554   8786 EB           	ex de,hl
555   8787 C9           	ret
556   8788
557   8788              ; *************************************************************************************************************************************************************
558   8788              ;
559   8788              ;	7/2/23
560   8788              ;
561   8788              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
562   8788              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
563   8788              ;
564   8788              ;   Destruye HL y BC !!!!!,
565   8788              ;
566   8788              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
567   8788              ;					"0" ..... Izquierda.
568   8788
569   8788              Inicia_Puntero_objeto
570   8788
571   8788 3A AA 85     	ld a,(Cuad_objeto)
572   878B E6 01        	and 1
573   878D F5           	push af
574   878E CC AC 87     	call z,Inicia_puntero_objeto_izq
575   8791 F1           	pop af
576   8792 28 2B        	jr z,1F
577   8794 CD 99 87     	call Inicia_puntero_objeto_der
578   8797 18 26        	jr 1F
579   8799
580   8799              ; Arrancamos desde la parte izquierda de la pantalla.
581   8799              ; Iniciamos (Indice_Sprite_der).
582   8799
583   8799 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
584   879C 22 A4 85     	ld (Puntero_DESPLZ_der),hl
585   879F CD 82 87     	call Extrae_address
586   87A2 22 9A 85     	ld (Puntero_objeto),hl
587   87A5
588   87A5 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
589   87A8              ;	call Extrae_address
590   87A8 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
591   87AB C9           	ret
592   87AC
593   87AC              ; Arrancamos desde la parte derecha de la pantalla.
594   87AC              ; Iniciamos (Indice_Sprite_izq).
595   87AC
596   87AC 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
597   87AF 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
598   87B2 CD 82 87     	call Extrae_address
599   87B5 22 9A 85     	ld (Puntero_objeto),hl
600   87B8
601   87B8 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
602   87BB              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
603   87BB 22 A4 85     	ld (Puntero_DESPLZ_der),hl
604   87BE C9           	ret
605   87BF
606   87BF              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
607   87BF
608   87BF 21 38 83     1 ld hl,Amadeus
609   87C2 ED 4B 9A 85  	ld bc,(Puntero_objeto)
610   87C6 B7 ED 42     	sub hl,bc
611   87C9 C0           	ret nz
612   87CA 21 C3 85     	ld hl,Ctrl_0
613   87CD CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
614   87CF C9           	ret 												; _de nuestra nave en los extremos.
615   87D0
616   87D0              ; *************************************************************************************************************************************************************
617   87D0              ;
618   87D0              ;	8/1/23
619   87D0              ;
620   87D0              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
621   87D0              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
622   87D0
623   87D0              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
624   87D0              ;	_de la 2ª y 3ª entidad respectivamente.
625   87D0
626   87D0              Store_Restore_entidades
627   87D0
628   87D0 E5           	push hl
629   87D1 D5           	push de
630   87D2 C5            	push bc
631   87D3
632   87D3              ;	STORE !!!!!
633   87D3              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
634   87D3
635   87D3 21 96 85     	ld hl,Filas
636   87D6 ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
637   87DA 01 3A 00     	ld bc,58
638   87DD ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
639   87DF
640   87DF              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
641   87DF
642   87DF 2A D3 85     	ld hl,(Puntero_restore_entidades)
643   87E2 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
644   87E5 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
645   87E8 01 3A 00     	ld bc,58
646   87EB ED B0        	ldir
647   87ED
648   87ED              ;	Incrementa RESTORE !!!!!
649   87ED
650   87ED 2A D5 85         ld hl,(Indice_restore)
651   87F0 23           	inc hl
652   87F1 23           	inc hl
653   87F2 22 D5 85     	ld (Indice_restore),hl
654   87F5 CD 82 87         call Extrae_address
655   87F8 22 D3 85         ld (Puntero_restore_entidades),hl
656   87FB C1           	pop bc
657   87FC D1           	pop de
658   87FD E1           	pop hl
659   87FE C9           	ret
660   87FF
661   87FF              ; **************************************************************************************************
662   87FF              ;
663   87FF              ;	29/10/22
664   87FF              ;
665   87FF              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
666   87FF
667   87FF E5           Restore_Primera_entidad push hl
668   8800 D5           	push de
669   8801 C5            	push bc
670   8802 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
671   8805 11 96 85     	ld de,Filas
672   8808 01 3A 00     	ld bc,58
673   880B ED B0        	ldir
674   880D C1           	pop bc
675   880E D1           	pop de
676   880F E1           	pop hl
677   8810 C9           	ret
678   8811
679   8811              ; **************************************************************************************************
680   8811              ;
681   8811              ;	25/01/23
682   8811              ;
683   8811              ;	Restore_Amadeus
684   8811              ;
685   8811              ;	Cargamos en DRAW los parámetros de Amadeus.
686   8811              ;
687   8811
688   8811 E5           Restore_Amadeus	push hl
689   8812 D5           	push de
690   8813 C5            	push bc
691   8814 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
692   8817 11 96 85     	ld de,Filas
693   881A 01 3A 00     	ld bc,58
694   881D ED B0        	ldir
695   881F C1           	pop bc
696   8820 D1           	pop de
697   8821 E1           	pop hl
698   8822 C9           	ret
699   8823
700   8823              ; *************************************************************************************************************************************************************
701   8823              ;
702   8823              ;	29/01/23
703   8823              ;
704   8823              ;	Store_Amadeus
705   8823              ;
706   8823              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
707   8823              ;
708   8823
709   8823 E5           Store_Amadeus push hl
710   8824 D5           	push de
711   8825 C5            	push bc
712   8826 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
713   8829 11 74 84     	ld de,Amadeus_db
714   882C 01 3A 00     	ld bc,58
715   882F ED B0        	ldir
716   8831 C1           	pop bc
717   8832 D1           	pop de
718   8833 E1           	pop hl
719   8834 C9           	ret
720   8835
721   8835              ; **************************************************************************************************
722   8835
723   8835              ; Teclado.
724   8835
725   8835 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
726   8837 DB FE        	in a,($fe)
727   8839 E6 01        	and $01
728   883B 28 02        	jr z,1f
729   883D 18 F6        	jr Pulsa_ENTER
730   883F C9           1 ret
731   8840
732   8840              ; **************************************************************************************************
733   8840              ;
734   8840              ; Temporización.
735   8840
736   8840              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
737   8840              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
738   8840              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
739   8840              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
740   8840
741   8840              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
742   8840              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
743   8840              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
744   8840
745   8840              ; A partir de $4f61 no hace falta DELAY.
746   8840
747   8840              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
748   8840
749   8840 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
750   8843 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
751   8844 78           	LD A,B
752   8845 A7           	AND A
753   8846 20 FB        	JR NZ,wait
754   8848 C9           	RET
755   8849
756   8849              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
757   8849              ;
758   8849              ;	5/3/23
759   8849              ;
760   8849              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
761   8849
762   8849              Movimiento_Amadeus
763   8849
764   8849              ; Disparo.
765   8849
766   8849 3E F7        	ld a,$f7												; "5" para disparar.
767   884B DB FE        	in a,($fe)
768   884D E6 10        	and $10
769   884F CC A0 88     	call z,Genera_disparo
770   8852
771   8852 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
772   8854 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
773   8856 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
774   8858 CC 39 91         call z,Mov_left											;			"			"			"			"			"			"			"			"
775   885B 3E F7        	ld a,$f7
776   885D DB FE        	in a,($fe)
777   885F E6 01        	and $01
778   8861 C8           	ret z
779   8862
780   8862 3E F7        	ld a,$f7
781   8864 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
782   8866 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
783   8868 CC 1B 90     	call z,Mov_right										;			"			"			"			"			"			"			"			"
784   886B C9           	ret
785   886C
786   886C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
787   886C              ;
788   886C              ;	Rutina provisional para que los malotes cagen balas.
789   886C
790   886C 3E 7F        Detecta_disparo_entidad ld a,$7f
791   886E DB FE        	in a,($fe)
792   8870 E6 01        	and 1
793   8872 C0           	ret nz
794   8873 CD A0 88     	call Genera_disparo
795   8876 C9           	ret
796   8877
797   8877              ; Pinta indicadores de FILAS. ------------------------------------------------------
798   8877
799   8877 21 10 40     Pinta_FILAS ld hl,$4010
800   887A              ;	ld b,9
801   887A              ;2 push hl
802   887A              ;	push bc
803   887A 06 BF        	ld b,$bf
804   887C 36 80        1 ld (hl),%10000000
805   887E CD E1 8C     	call NextScan
806   8881 10 F9        	djnz 1B
807   8883              ;	pop bc
808   8883              ;	pop hl
809   8883              ;	inc l
810   8883              ;	djnz 2B
811   8883 06 03        	ld b,3
812   8885 21 00 47         ld hl,$4700
813   8888 CD 8E 88     3 call Bucle_1
814   888B 10 FB            djnz 3B
815   888D C9               ret
816   888E
817   888E C5           Bucle_1 push bc
818   888F E5                   push hl
819   8890 D1                   pop de
820   8891 13                   inc de
821   8892 01 FF 00             ld bc,255
822   8895 36 FF                ld (hl),255
823   8897 ED B0                ldir
824   8899 23                   inc hl
825   889A 3E 07                ld a,7
826   889C 84                   add a,h
827   889D 67                   ld h,a
828   889E C1                   pop bc
829   889F C9                   ret
830   88A0
831   88A0              ; ---------------------------------------------------------------
832   88A0
833   88A0              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88A0              ; ******************************************************************************************************************************************************************************************
  2+  88A0              ;
  3+  88A0              ;   19/02/23
  4+  88A0              ;
  5+  88A0              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88A0              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88A0              ;
  8+  88A0              ;
  9+  88A0              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88A0              ;
 11+  88A0              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88A0              ;               _ hacen las entidades hacia abajo.
 13+  88A0              ;
 14+  88A0              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88A0              ;
 16+  88A0              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88A0              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88A0              ;
 19+  88A0              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88A0              ;           _ la bala.
 21+  88A0              ;
 22+  88A0              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88A0              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88A0              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88A0              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88A0              ;           _ en el momento de generarse la bala)).
 27+  88A0
 28+  88A0              Genera_disparo
 29+  88A0
 30+  88A0              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88A0              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88A0              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88A0              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88A0              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88A0              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88A0              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88A0
 38+  88A0 3A CC 85         ld a,(Columnas)
 39+  88A3 47               ld b,a
 40+  88A4 3A 97 85         ld a,(Columns)
 41+  88A7 B8               cp b
 42+  88A8 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 43+  88A9
 44+  88A9              ; ----- ----- -----
 45+  88A9
 46+  88A9 21 00 80         ld hl,Indice_disparo
 47+  88AC 3A 9E 85         ld a,(CTRL_DESPLZ)
 48+  88AF 4F               ld c,a
 49+  88B0 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 50+  88B2              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 51+  88B2              ;                                            ""        ""       "f9", B="1"
 52+  88B2              ;                                            ""        ""       "fb", B="2"
 53+  88B2              ;                                            ""        ""       "fb", B="3"
 54+  88B2 A7               and a
 55+  88B3 28 10            jr z,1F
 56+  88B5 E6 01            and 1
 57+  88B7 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 58+  88B8
 59+  88B8 79               ld a,c
 60+  88B9 16 F9            ld d,$f9
 61+  88BB 23           2 inc hl
 62+  88BC 23               inc hl
 63+  88BD 04               inc b
 64+  88BE BA               cp d
 65+  88BF 28 04            jr z,1F
 66+  88C1 14               inc d
 67+  88C2 14               inc d
 68+  88C3 18 F6            jr 2B
 69+  88C5
 70+  88C5 CD 82 87     1 call Extrae_address
 71+  88C8 E5               push hl
 72+  88C9 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 73+  88CB DD 21 74 8F  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 74+  88CF
 75+  88CF              ;	Se cumplen las condiciones necesarias para generar un disparo.
 76+  88CF              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 77+  88CF
 78+  88CF 3A AA 85     	ld a,(Cuad_objeto)
 79+  88D2 FE 02            cp 2
 80+  88D4 38 60            jr c,3F
 81+  88D6 28 5E            jr z,3F
 82+  88D8
 83+  88D8              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 84+  88D8
 85+  88D8 E6 01            and 1
 86+  88DA 28 2D            jr z,4F
 87+  88DC
 88+  88DC              ; 	Estamos en el 3er cuadrante de pantalla.
 89+  88DC              ; 	3er CUAD. ----- ----- ----- ----- -----
 90+  88DC              ;
 91+  88DC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 92+  88DC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 93+  88DC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 94+  88DC
 95+  88DC 2A 98 85     	ld hl,(Posicion_actual)
 96+  88DF
 97+  88DF              ;   Amadeus o entidad ???.
 98+  88DF
 99+  88DF 3A C3 85         ld a,(Ctrl_0)
100+  88E2 CB 77            bit 6,a
101+  88E4 28 0D            jr z,8F
102+  88E6
103+  88E6              ; 	Dispara Amadeus.
104+  88E6
105+  88E6 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
106+  88E8 CD F0 8C         call PreviousScan
107+  88EB CD F0 8C         call PreviousScan
108+  88EE
109+  88EE              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
110+  88EE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
111+  88EE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
112+  88EE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
113+  88EE
114+  88EE CD 60 89         call Ajusta_disparo_parte_izquierda
115+  88F1 18 0E            jr 10F
116+  88F3
117+  88F3              ; 	Dispara Entidad.
118+  88F3
119+  88F3 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
120+  88F5
121+  88F5              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
122+  88F5              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
123+  88F5
124+  88F5 C5               push bc
125+  88F6 06 10            ld b,16
126+  88F8 CD E1 8C     9 call NextScan
127+  88FB 10 FB            djnz 9B
128+  88FD C1               pop bc
129+  88FE
130+  88FE              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
131+  88FE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
132+  88FE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
133+  88FE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
134+  88FE
135+  88FE CD 60 89         call Ajusta_disparo_parte_izquierda
136+  8901
137+  8901 CD D5 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
138+  8904              ;                                                   ; _al generar el disparo.
139+  8904
140+  8904              ; 	LLegados a este punto tendremos:
141+  8904              ;
142+  8904              ;       Puntero_objeto_disparo en IY.
143+  8904              ;       Rutinas_de_impresion en IX.
144+  8904              ;       Puntero_de_impresion en HL.
145+  8904              ;       Impacto/Dirección en BC.
146+  8904
147+  8904 CD 68 89         call Almacena_disparo
148+  8907 18 4F            jr 6F                                           ; RET.
149+  8909
150+  8909
151+  8909              ; 	Estamos en el 4º cuadrante de pantalla.
152+  8909              ; 	4º CUAD. ----- ----- ----- ----- -----
153+  8909              ;
154+  8909              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
155+  8909              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
156+  8909              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
157+  8909
158+  8909 2A 98 85     4 ld hl,(Posicion_actual)
159+  890C
160+  890C              ;   Amadeus o entidad ???.
161+  890C
162+  890C 3A C3 85         ld a,(Ctrl_0)
163+  890F CB 77            bit 6,a
164+  8911 28 0D            jr z,11F
165+  8913
166+  8913              ; 	Dispara Amadeus.
167+  8913
168+  8913 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
169+  8915 CD F0 8C         call PreviousScan
170+  8918 CD F0 8C         call PreviousScan
171+  891B
172+  891B              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
173+  891B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
174+  891B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
175+  891B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
176+  891B
177+  891B CD 59 89         call Ajusta_disparo_parte_derecha
178+  891E 18 0E            jr 13F
179+  8920
180+  8920              ; 	Dispara Entidad.
181+  8920
182+  8920 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
183+  8922
184+  8922              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
185+  8922              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
186+  8922
187+  8922 C5               push bc
188+  8923
189+  8923 06 10            ld b,16
190+  8925 CD E1 8C     12 call NextScan
191+  8928 10 FB            djnz 12B
192+  892A
193+  892A C1               pop bc
194+  892B
195+  892B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
196+  892B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
197+  892B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
198+  892B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
199+  892B
200+  892B CD 59 89         call Ajusta_disparo_parte_derecha
201+  892E
202+  892E CD D5 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
203+  8931              ;                                                     ; _al generar el disparo.
204+  8931
205+  8931              ; LLegados a este punto tendremos:
206+  8931              ;
207+  8931              ;       Puntero_objeto_disparo en IY.
208+  8931              ;       Rutinas_de_impresion en IX.
209+  8931              ;       Puntero_de_impresion en HL.
210+  8931              ;       Impacto/Dirección en BC.
211+  8931
212+  8931 CD 68 89         call Almacena_disparo
213+  8934 18 22            jr 6F                                           ; RET.
214+  8936
215+  8936              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
216+  8936
217+  8936 28 11        3 jr z,5F
218+  8938
219+  8938              ; 	1er CUAD. ----- ----- ----- ----- -----
220+  8938              ;
221+  8938              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
222+  8938              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
223+  8938              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
224+  8938              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
225+  8938
226+  8938              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
227+  8938              ;	   ""        ""       "f9", B="1"
228+  8938              ;	   ""        ""       "fb", B="2"
229+  8938              ; 	   ""        ""       "fb", B="3"
230+  8938
231+  8938 2A 98 85     	ld hl,(Posicion_actual)
232+  893B CD E1 8C     	call NextScan
233+  893E
234+  893E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
235+  893E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
236+  893E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
237+  893E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
238+  893E
239+  893E CD 60 89         call Ajusta_disparo_parte_izquierda
240+  8941
241+  8941              ; 	No se produce impacto. B="$80"
242+  8941              ; 	Dirección del proyectil hacia abajo. C="$80"
243+  8941
244+  8941 01 80 80         ld bc,$8080
245+  8944
246+  8944              ; 	LLegados a este punto tendremos:
247+  8944              ;
248+  8944              ;       Puntero_objeto_disparo en IY.
249+  8944              ;       Rutinas_de_impresion en IX.
250+  8944              ;       Puntero_de_impresion en HL.
251+  8944              ;       Impacto/Dirección en BC.
252+  8944
253+  8944 CD 68 89         call Almacena_disparo
254+  8947 18 0F            jr 6F                                           ; RET.
255+  8949
256+  8949              ; 	Estamos en el 2º cuadrante de pantalla.
257+  8949              ; 	2º CUAD. ----- ----- ----- ----- -----
258+  8949              ;
259+  8949              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
260+  8949              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
261+  8949              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
262+  8949              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
263+  8949
264+  8949 2A 98 85     5 ld hl,(Posicion_actual)
265+  894C CD E1 8C     	call NextScan
266+  894F
267+  894F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
268+  894F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
269+  894F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
270+  894F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
271+  894F
272+  894F CD 59 89         call Ajusta_disparo_parte_derecha
273+  8952
274+  8952              ; 	No se produce impacto. B="$80"
275+  8952              ; 	Dirección del proyectil hacia abajo. C="80"
276+  8952
277+  8952 01 80 80     15 ld bc,$8080
278+  8955
279+  8955              ; 	LLegados a este punto tendremos:
280+  8955              ;
281+  8955              ;       Puntero_objeto_disparo en IY.
282+  8955              ;       Rutinas_de_impresion en IX.
283+  8955              ;       Puntero_de_impresion en HL.
284+  8955              ;       Impacto/Dirección en BC.
285+  8955
286+  8955 CD 68 89         call Almacena_disparo
287+  8958
288+  8958 C9           6 ret
289+  8959
290+  8959              ; ----------------------------------------------------------------
291+  8959              ;
292+  8959              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
293+  8959              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
294+  8959              ;	_ (lado izq. o derecho), de la entidad que lo genera.
295+  8959
296+  8959 78           Ajusta_disparo_parte_derecha ld a,b
297+  895A FE 02            cp 2
298+  895C 38 01            jr c,1F
299+  895E 23               inc hl
300+  895F C9           1 ret
301+  8960
302+  8960 78           Ajusta_disparo_parte_izquierda ld a,b
303+  8961 FE 01        	cp 1
304+  8963 20 01        	jr nz,1F
305+  8965 2B           	dec hl
306+  8966 2B           1 dec hl
307+  8967 C9               ret
308+  8968
309+  8968              ; ----------------------------------------------------------------
310+  8968              ;
311+  8968              ;   25/02/23
312+  8968              ;
313+  8968              ;   La Rutina va almacenando disparos en sus respectiva bases de datos.
314+  8968              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
315+  8968
316+  8968              Almacena_disparo
317+  8968
318+  8968 E5               push hl  										; HL contiene el puntero de impresión.
319+  8969 F1               pop af
320+  896A 08               ex af,af                                        ; Puntero_de_impresion en AF'.
321+  896B
322+  896B 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
323+  896C E6 01            and 1
324+  896E 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
325+  8970              ;                                                   ; _ es Amadeus o una entidad la que dispara.
326+  8970              ; 	Dispara AMADEUS.
327+  8970
328+  8970              ;	Comprobamos que a Amadeus aún le quedan disparos.
329+  8970              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
330+  8970              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
331+  8970              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
332+  8970
333+  8970 C5               push bc
334+  8971 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A
335+  8974 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
336+  8977 A7               and a
337+  8978 ED 42            sbc hl,bc
338+  897A CC 4B 87         call z,Inicia_Puntero_Disparo_Amadeus
339+  897D C1               pop bc
340+  897E 28 54            jr z,4F
341+  8980
342+  8980 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
343+  8983 23               inc hl
344+  8984 23               inc hl
345+  8985 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
346+  8988              ;                                                   ; _ Disparo_(+1).
347+  8988 18 18            jr 2F
348+  898A
349+  898A              ; Dispara una entidad.
350+  898A
351+  898A C5           1 push bc
352+  898B 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
353+  898E 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
354+  8991 A7               and a
355+  8992 ED 42            sbc hl,bc
356+  8994 CC 44 87         call z,Inicia_Puntero_Disparo_Entidades
357+  8997 C1               pop bc
358+  8998 28 3A            jr z,4F
359+  899A
360+  899A 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
361+  899D 23               inc hl
362+  899E 23               inc hl
363+  899F 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
364+  89A2              ;                                                   ; _ Disparo_(+1).
365+  89A2 CD 82 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
366+  89A5              ;                                                   ; _ los 8 bytes que definen el disparo:
367+  89A5              ;
368+  89A5              ;                                                     Puntero_objeto_disparo en IY.
369+  89A5              ;                                                     Rutinas_de_impresion en IX.
370+  89A5              ;                                                     Puntero_de_impresion en HL.
371+  89A5              ;                                                     Impacto/Dirección en BC.
372+  89A5
373+  89A5 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
374+  89A6 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
375+  89A7 23               inc hl                                          ; _ al siguiente.
376+  89A8 A7               and a
377+  89A9 20 C0            jr nz,3B
378+  89AB
379+  89AB 08               ex af,af
380+  89AC ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
381+  89B0 F9               ld sp,hl
382+  89B1
383+  89B1 DD E5            push ix                                         ; Rutina de impresión.
384+  89B3 F5               push af                                         ; Puntero de impresión.
385+  89B4 FD E5            push iy                                         ; Puntero objeto.
386+  89B6
387+  89B6 C5               push bc                                         ; Control.
388+  89B7
389+  89B7 ED 7B D9 85      ld sp,(Stack)
390+  89BB
391+  89BB              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
392+  89BB
393+  89BB 21 D0 85     	ld hl,Ctrl_1
394+  89BE CB C6        	set 0,(hl)
395+  89C0
396+  89C0 DD E5        	push ix
397+  89C2 E1               pop hl
398+  89C3 F5               push af
399+  89C4 DD E1            pop ix
400+  89C6
401+  89C6 CD A0 7F     	call Guarda_foto_registros
402+  89C9
403+  89C9 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
404+  89CC CB 86        	res 0,(hl)
405+  89CE
406+  89CE              ;   Preparamos los punteros de extraccion de disparos para utilizarlos más tarde en la rutina: Extrae_foto_registros_disparos.
407+  89CE
408+  89CE              ;    ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
409+  89CE              ;    ld (Puntero_extraccion_disparo_Amadeus),hl
410+  89CE              ;    ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
411+  89CE              ;    ld (Puntero_extraccion_disparo_entidades),hl
412+  89CE
413+  89CE              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
414+  89CE              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
415+  89CE
416+  89CE CD 4B 87         call Inicia_Puntero_Disparo_Amadeus
417+  89D1 CD 44 87         call Inicia_Puntero_Disparo_Entidades
418+  89D4
419+  89D4 C9           4 ret
420+  89D5
421+  89D5              ; ----------------------------------------------------------------
422+  89D5              ;
423+  89D5              ;   4/3/23
424+  89D5              ;
425+  89D5              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
426+  89D5              ;   _ al generarse el disparo.
427+  89D5              ;       "$80" ..... No se produce colisión.
428+  89D5              ;       "$81" ..... Se produce colisión.
429+  89D5
430+  89D5 E5           Comprueba_Colision push hl
431+  89D6 1E 80            ld e,$80                                       ; E,(Impacto)="0".
432+  89D8 CD ED 89         call Bucle_2                                   ; Comprobamos el 1er scanline.
433+  89DB
434+  89DB 7B               ld a,e
435+  89DC E6 01            and 1
436+  89DE 28 03            jr z,1F                                        ; Si no se produce impacto comprobamos el 2º scanline.
437+  89E0
438+  89E0              ; Hay impacto.
439+  89E0
440+  89E0 43           2 ld b,e
441+  89E1 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
442+  89E2 C9           3 ret
443+  89E3
444+  89E3 E1           1 pop hl
445+  89E4 E5               push hl
446+  89E5 CD E1 8C         call NextScan
447+  89E8 CD ED 89         call Bucle_2
448+  89EB 18 F3            jr 2B
449+  89ED
450+  89ED              ; ---------- ----------
451+  89ED
452+  89ED 06 02        Bucle_2 ld b,2
453+  89EF 7E           2 ld a,(hl)
454+  89F0 A7               and a
455+  89F1 20 04            jr nz,1F
456+  89F3 23               inc hl
457+  89F4 10 F9            djnz 2B
458+  89F6 C9           3 ret
459+  89F7 1E 81        1 ld e,$81
460+  89F9 18 FB            jr 3B
461+  89FB
462+  89FB              ; -------------------------------------------------------------------------------------------------------------
463+  89FB
464+  89FB
465+  89FB
466+  89FB
467+  89FB
# file closed: Disparo.asm
834   89FB              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  89FB              ; ******************************************************************************************************************************************************************************************
  2+  89FB              ;
  3+  89FB              ; 01/23
  4+  89FB              ;
  5+  89FB              ; DRAW. ************************************************************************************************************************************************************************************
  6+  89FB
  7+  89FB CD D5 8C     Draw call Prepara_draw
  8+  89FE 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  89FF A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8A00 28 05        	jr z,2F
 11+  8A02
 12+  8A02 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8A05 18 0C        	jr 1F
 14+  8A07 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8A0A 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8A0D CD 9C 8B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8A10              ;													; _la esquina superior izquierda de la pantalla.
 18+  8A10 CD 0A 94     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8A13 3A C3 85     1 ld a,(Ctrl_0)
 20+  8A16 CB 6F        	bit 5,a
 21+  8A18 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8A1A
 23+  8A1A CD 32 8A     	call Comprueba_limite_horizontal
 24+  8A1D CD C2 8A     	call Comprueba_limite_vertical
 25+  8A20
 26+  8A20              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8A20
 28+  8A20 CD 0F 8C     3 call calcula_CColumnass
 29+  8A23 CD 46 8C     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8A26 CD 9B 8C     	call Define_rutina_de_impresion
 31+  8A29
 32+  8A29 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8A2C CB AF        	res 5,a											; _a ser de utilidad.
 34+  8A2E 32 C3 85     	ld (Ctrl_0),a
 35+  8A31
 36+  8A31 C9           	ret
 37+  8A32
 38+  8A32              ; *******************************************************************************************************************************************************************************************
 39+  8A32              ;	21/01/23
 40+  8A32              ;
 41+  8A32              ; 	Comprueba_limite_horizontal.
 42+  8A32              ;
 43+  8A32              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8A32              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8A32              ;
 46+  8A32              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8A32              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8A32              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8A32              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8A32
 51+  8A32
 52+  8A32
 53+  8A32 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8A35 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8A37 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8A39 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8A3B 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8A3E 18 09            jr 6F
 59+  8A40 CB 5F        1 bit 3,a
 60+  8A42 28 0A            jr z,2F
 61+  8A44 E6 F7            and $f7
 62+  8A46 32 C3 85         ld (Ctrl_0),a
 63+  8A49 CD 9C 8B     6 call Inicializacion
 64+  8A4C 18 5B            jr 5F
 65+  8A4E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8A4F
 67+  8A4F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8A4F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8A4F
 70+  8A4F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8A50 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8A53 CD A1 8F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8A56 67           	ld h,a
 74+  8A57 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8A58 CD A1 8F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8A5B 67           	ld h,a
 77+  8A5C A7           	and a
 78+  8A5D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8A5F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8A60 3A AA 85     	ld a,(Cuad_objeto)
 81+  8A63 FE 02        	cp 2
 82+  8A65 38 1E        	jr c,3F
 83+  8A67 28 1C        	jr z,3F
 84+  8A69 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8A6A 28 23            jr z,7F
 86+  8A6C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8A6E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8A70 E1           	pop hl
 89+  8A71
 90+  8A71              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8A71              ; _para indicar con E="2" en caso necesario.
 92+  8A71
 93+  8A71 E5               push hl
 94+  8A72 C5               push bc
 95+  8A73 CD A1 8F     	call calcula_tercio
 96+  8A76 FE 01        	cp 1
 97+  8A78 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8A7A CD AA 8A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8A7D 28 26            jr z,9F
100+  8A7F 38 24            jr c,9F
101+  8A81 1E 00        11 ld e,0
102+  8A83 18 22            jr 8F
103+  8A85 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8A86 28 07        	jr z, 7F
105+  8A88 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8A8A 1E 00         	ld e,0
107+  8A8C E1           	pop hl
108+  8A8D 18 04        	jr 4F
109+  8A8F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8A91 18 15            jr 10F
111+  8A93
112+  8A93              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8A93              ; _para indicar con E="2" en caso necesario.
114+  8A93
115+  8A93 E5           4 push hl
116+  8A94 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8A95 CD A1 8F     	call calcula_tercio
118+  8A98 FE 01        	cp 1
119+  8A9A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8A9C CD AA 8A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8A9F 28 04            jr z,9F
122+  8AA1 30 02            jr nc,9F
123+  8AA3 18 02        	jr 8F
124+  8AA5 1E 02        9 ld e,2
125+  8AA7 C1           8 pop bc
126+  8AA8 E1           10 pop hl
127+  8AA9 C9           5 ret
128+  8AAA
129+  8AAA              ; --------------------
130+  8AAA              ;
131+  8AAA              ; 25/08/22
132+  8AAA
133+  8AAA CD A1 8F     Comprueba_centro call calcula_tercio
134+  8AAD 67               ld h,a
135+  8AAE 08           	ex af,af
136+  8AAF FE 02        	cp 2
137+  8AB1 38 07        	jr c,1F
138+  8AB3 28 05        	jr z,1F
139+  8AB5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8AB8 18 03        	jr 2F
141+  8ABA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8ABD 08           2 ex af,af
143+  8ABE A7               and a
144+  8ABF ED 42            sbc hl,bc
145+  8AC1 C9               ret
146+  8AC2
147+  8AC2              ; *********************************************************************************************************************************************************************************************
148+  8AC2              ;
149+  8AC2              ;   16/8/22
150+  8AC2              ;
151+  8AC2              ;	Comprueba_limite_vertical
152+  8AC2              ;
153+  8AC2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8AC2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8AC2              ;
156+  8AC2
157+  8AC2 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8AC5 7D           	ld a,l
159+  8AC6 E6 1F        	and $1F
160+  8AC8 57           	ld d,a
161+  8AC9 3A CF 85     	ld a,(Limite_vertical)
162+  8ACC BA           	cp d 											; Límite - Posición.
163+  8ACD 08           	ex af,af 										; Resultado de CP d en F'.
164+  8ACE 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8AD1 CB 47        	bit 0,a
166+  8AD3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8AD5
168+  8AD5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8AD5
170+  8AD5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8AD6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8AD8
173+  8AD8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8AD8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8AD8
176+  8AD8 3A 9C 85         ld a,(Coordenada_X)
177+  8ADB 16 0F            ld d,Centro_izquierda
178+  8ADD A7               and a
179+  8ADE 92               sub d 											 ; Posición - Centro_izquierda.
180+  8ADF 28 1E            jr z,3F
181+  8AE1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8AE3              ;                                                    ; _salimos sin modificar nada.
183+  8AE3 18 0E            jr 2F
184+  8AE5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8AE6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8AE8
187+  8AE8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8AE8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8AE8
190+  8AE8 3A 9C 85         ld a,(Coordenada_X)
191+  8AEB 16 10            ld d,Centro_derecha
192+  8AED A7               and a
193+  8AEE 92               sub d
194+  8AEF 28 0E            jr z,3F
195+  8AF1 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8AF3              ;                                                    ; _salimos sin modificar nada.
197+  8AF3 CB 43        2 bit 0,e
198+  8AF5 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8AF7 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8AF8 CD 8C 8B         call Modificaccionne
201+  8AFB C1           	pop bc
202+  8AFC CD 9C 8B         call Inicializacion
203+  8AFF C9           3 ret 				 								 ; Salimos de la rutina.
204+  8B00
205+  8B00              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8B00
207+  8B00 C5           4 push bc
208+  8B01 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8B04 0A           	ld a,(bc)
210+  8B05 3D           	dec a
211+  8B06 47           	ld b,a 											 ; Columnas-1 en B.
212+  8B07 7D           	ld a,l
213+  8B08 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8B09 CB 47        	bit 0,a
215+  8B0B 28 03        	jr z,5F
216+  8B0D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8B0E 18 2E        	jr 7F
218+  8B10
219+  8B10              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8B10
221+  8B10 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8B11 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8B12 3A C3 85     	ld a,(Ctrl_0)
224+  8B15 CB 4F        	bit 1,a
225+  8B17 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8B19 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8B1A
228+  8B1A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8B1A
230+  8B1A 1C               inc e
231+  8B1B 1D               dec e
232+  8B1C 20 07            jr nz,12F
233+  8B1E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8B1F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8B20 22 98 85     	ld (Posicion_actual),hl
236+  8B23 18 44        13 jr 9F
237+  8B25 CB 43        12 bit 0,e
238+  8B27 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8B29              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8B29 C1           	pop bc
241+  8B2A 18 D3        	jr 3B
242+  8B2C 80           14 add b
243+  8B2D 6F               ld l,a
244+  8B2E 22 98 85     	ld (Posicion_actual),hl
245+  8B31 CD 8C 8B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8B34 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8B36 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8B38 32 C3 85         ld (Ctrl_0),a
249+  8B3B F1           	pop af
250+  8B3C 18 2B        	jr 9F
251+  8B3E
252+  8B3E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8B3E
254+  8B3E F5           7 push af
255+  8B3F 3A C3 85     	ld a,(Ctrl_0)
256+  8B42 CB 47        	bit 0,a
257+  8B44 20 1D        	jr nz,8F
258+  8B46 F1           	pop af
259+  8B47
260+  8B47              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8B47
262+  8B47 1C           	inc e
263+  8B48 1D               dec e
264+  8B49 20 07            jr nz,10F
265+  8B4B 90           	sub b
266+  8B4C 6F               ld l,a
267+  8B4D 22 98 85     	ld (Posicion_actual),hl
268+  8B50 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8B52              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8B52 CB 43        10 bit 0,e
271+  8B54 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8B56              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8B56 C1           	pop bc
274+  8B57 18 A6        	jr 3B
275+  8B59 90           16 sub b
276+  8B5A 6F               ld l,a
277+  8B5B 22 98 85     	ld (Posicion_actual),hl
278+  8B5E CD 8C 8B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8B61 18 06            jr 9F
280+  8B63 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8B65 32 C3 85         ld (Ctrl_0),a
282+  8B68 F1           	pop af
283+  8B69 C1           9 pop bc
284+  8B6A 1E 00        	ld e,0
285+  8B6C CD 9C 8B         call Inicializacion
286+  8B6F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8B70 08           	ex af,af
288+  8B71 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8B72 18 8B            jr 3B
290+  8B74
291+  8B74              ; --------------------
292+  8B74
293+  8B74 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8B76 CD F0 8C     1 call PreviousScan
295+  8B79 10 FB            djnz 1B
296+  8B7B 22 98 85     	ld (Posicion_actual),hl
297+  8B7E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8B7F C9           	ret
299+  8B80
300+  8B80              ; --------------------
301+  8B80
302+  8B80 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8B82 CD E1 8C     1 call NextScan
304+  8B85 10 FB            djnz 1B
305+  8B87 22 98 85     	ld (Posicion_actual),hl
306+  8B8A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8B8B C9           	ret
308+  8B8C
309+  8B8C              ; --------------------
310+  8B8C              ;
311+  8B8C              ;	22/01/23
312+  8B8C              ;
313+  8B8C              ;	E="1". Hemos cambiado de cuadrante.
314+  8B8C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8B8C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8B8C
317+  8B8C
318+  8B8C              Modificaccionne
319+  8B8C
320+  8B8C 3A AA 85     	ld a,(Cuad_objeto)
321+  8B8F FE 02        	cp 2
322+  8B91 CC 74 8B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8B94 DC 74 8B         call c,Modifica_Pos_actual
324+  8B97 C8           	ret z
325+  8B98 CD 80 8B         call Modifica_Pos_actual2
326+  8B9B C9               ret
327+  8B9C
328+  8B9C              ; *************************************************************************************************************************************************************************************************
329+  8B9C              ;
330+  8B9C              ;	13/8/22
331+  8B9C              ;
332+  8B9C              ;	Inicializacion
333+  8B9C              ;
334+  8B9C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8B9C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8B9C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8B9C              ;
338+  8B9C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8B9C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8B9C              ;	_ desaparece/aparece.
341+  8B9C
342+  8B9C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8B9C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8B9C              ;
345+  8B9C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8B9C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8B9C              ; 		   [E] ="0"
348+  8B9C
349+  8B9C              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8B9C
351+  8B9C CD A1 8F     Inicializacion call calcula_tercio
352+  8B9F 28 36        	jr z,primit
353+  8BA1 E6 02        	and 2
354+  8BA3 20 07        	jr nz,segmit
355+  8BA5 7D           	ld a,l
356+  8BA6 FE 7F        	cp $7f
357+  8BA8 38 2D        	jr c,primit
358+  8BAA 28 2B        	jr z,primit
359+  8BAC CD 09 8C     segmit call column
360+  8BAF 38 13        	jr c,tercuad
361+  8BB1 3E 04        cuarcuad ld a,4
362+  8BB3 32 AA 85     	ld (Cuad_objeto),a
363+  8BB6 21 20 48     	ld hl,$4820
364+  8BB9 22 CD 85     	ld (Limite_horizontal),hl
365+  8BBC 21 CF 85     	ld hl,Limite_vertical
366+  8BBF 36 0D        	ld (hl),$0d
367+  8BC1 08           	ex af,af
368+  8BC2 18 3C        	jr 1F
369+  8BC4              tercuad
370+  8BC4 3E 03        	ld a,3
371+  8BC6 32 AA 85     	ld (Cuad_objeto),a
372+  8BC9 21 20 48     	ld hl,$4820
373+  8BCC 22 CD 85     	ld (Limite_horizontal),hl
374+  8BCF 21 CF 85     	ld hl,Limite_vertical
375+  8BD2 36 12        	ld (hl),$12
376+  8BD4 08           	ex af,af
377+  8BD5 18 29        	jr 1F
378+  8BD7 CD 09 8C     primit call column
379+  8BDA 38 13        	jr c, primcuad
380+  8BDC              segcuad
381+  8BDC 3E 02        	ld a,2
382+  8BDE 32 AA 85     	ld (Cuad_objeto),a
383+  8BE1 21 C0 4F     	ld hl,$4fc0
384+  8BE4 22 CD 85     	ld (Limite_horizontal),hl
385+  8BE7 21 CF 85     	ld hl,Limite_vertical
386+  8BEA 36 0D        	ld (hl),$0d
387+  8BEC 08           	ex af,af
388+  8BED 18 11        	jr 1F
389+  8BEF              primcuad
390+  8BEF 3E 01        	ld a,1
391+  8BF1 32 AA 85     	ld (Cuad_objeto),a
392+  8BF4 21 C0 4F     	ld hl,$4fc0
393+  8BF7 22 CD 85     	ld (Limite_horizontal),hl
394+  8BFA 21 CF 85     	ld hl,Limite_vertical
395+  8BFD 36 12        	ld (hl),$12
396+  8BFF 08           	ex af,af
397+  8C00 CD D3 92     1 call Genera_coordenadas
398+  8C03 21 C3 85     	ld hl,Ctrl_0
399+  8C06 CB EE        	set 5,(hl)
400+  8C08 C9           	ret
401+  8C09
402+  8C09              ; ------------------------------------------------------------------------------------------------------------------
403+  8C09
404+  8C09              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8C09              ;
406+  8C09              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8C09
408+  8C09 7D           column ld a,l
409+  8C0A E6 1F        	and $1f
410+  8C0C FE 10         	cp $10
411+  8C0E C9            	ret
412+  8C0F
413+  8C0F              ; --------------------------------------------------------------------------------------------------------------------
414+  8C0F              ;
415+  8C0F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8C0F              ;
417+  8C0F              ; 14/12/22
418+  8C0F              ;
419+  8C0F              ;	Modifica: A y BC.
420+  8C0F
421+  8C0F 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8C12 E6 01        	and 1
423+  8C14 28 17        	jr z,1F
424+  8C16
425+  8C16              ; Nos encontramos en la parte izquierda de la pantalla
426+  8C16
427+  8C16 3A 9C 85     	ld a,(Coordenada_X)
428+  8C19 47           	ld b,a
429+  8C1A 04           	inc b											; (Coordenada_X)+1 en B.
430+  8C1B 79           	ld a,c
431+  8C1C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8C1D 38 08        	jr c,2F
433+  8C1F 47           	ld b,a
434+  8C20 79           	ld a,c
435+  8C21 90           	sub b
436+  8C22 32 CC 85     	ld (Columnas),a
437+  8C25 18 1B        	jr 4F
438+  8C27 79           2 ld a,c
439+  8C28 32 CC 85     	ld (Columnas),a
440+  8C2B 18 15        	jr 4F
441+  8C2D
442+  8C2D              ; Nos encontramos en la parte derecha de la pantalla.
443+  8C2D
444+  8C2D 3A 9C 85     1 ld a,(Coordenada_X)
445+  8C30 81           	add c
446+  8C31 3D           	dec a
447+  8C32 D6 1F        	sub $1f
448+  8C34 38 08        	jr c,3F
449+  8C36 47           	ld b,a
450+  8C37 79           	ld a,c
451+  8C38 90           	sub b
452+  8C39 32 CC 85     	ld (Columnas),a
453+  8C3C 18 04        	jr 4F
454+  8C3E 79           3 ld a,c
455+  8C3F 32 CC 85     	ld (Columnas),a
456+  8C42 D9           4 exx
457+  8C43 4F           	ld c,a
458+  8C44 D9           	exx
459+  8C45 C9            ret
460+  8C46
461+  8C46              ; --------------------------------------------------------------------------------------------------------------------
462+  8C46              ;
463+  8C46              ; 7/1/23
464+  8C46              ;
465+  8C46              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8C46              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8C46              ;
468+  8C46              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8C46              ;	DESTRUYE: HL,B Y A.
470+  8C46
471+  8C46 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8C49 FE 02        	cp 2
473+  8C4B 38 18        	jr c,1F
474+  8C4D 28 16        	jr z,1F
475+  8C4F E6 01        	and 1
476+  8C51 28 0D        	jr z,3F
477+  8C53
478+  8C53              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8C53
480+  8C53 CD 8F 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8C56
482+  8C56 7D           9 ld a,l
483+  8C57 E6 1F        	and $1f
484+  8C59 28 2A        	jr z,7F
485+  8C5B 2B           	dec hl
486+  8C5C 10 F8        	djnz 9B
487+  8C5E 18 25        	jr 7F
488+  8C60
489+  8C60              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8C60
491+  8C60 2A 98 85     3 ld hl,(Posicion_actual)
492+  8C63 18 20        	jr 7F
493+  8C65
494+  8C65 28 14        1 jr z,2F
495+  8C67
496+  8C67              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8C67
498+  8C67 CD 8F 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8C6A 7D           4 ld a,l
500+  8C6B E6 1F        	and $1f
501+  8C6D 28 03        	jr z,6F
502+  8C6F 2B           	dec hl
503+  8C70 10 F8        	djnz 4B
504+  8C72 06 0F        6 ld b,15
505+  8C74 CD F0 8C     5 call PreviousScan
506+  8C77 10 FB        	djnz 5B
507+  8C79 18 0A        	jr 7F
508+  8C7B
509+  8C7B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8C7B
511+  8C7B CD 8F 8C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8C7E 06 0F        	ld b,15
513+  8C80 CD F0 8C     8 call PreviousScan
514+  8C83 10 FB        	djnz 8B
515+  8C85
516+  8C85 E5           7 push hl
517+  8C86 DD E1        	pop ix
518+  8C88
519+  8C88 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8C8B E5           	push hl
521+  8C8C FD E1        	pop iy
522+  8C8E
523+  8C8E C9           	ret
524+  8C8F
525+  8C8F              ; --------------------------------------------------------------------------------------------------------------------
526+  8C8F              ;
527+  8C8F              ;	2/1/23
528+  8C8F              ;
529+  8C8F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8C8F              ;
531+  8C8F              ;	Tras esta rutina tenemos:
532+  8C8F              ;
533+  8C8F              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8C8F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8C8F              ;
536+  8C8F              ;	DESTRUYE!!!!! HL,B y A.
537+  8C8F
538+  8C8F 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8C92 3A CC 85     	ld a,(Columnas)
540+  8C95 3D           	dec a
541+  8C96 20 01        	jr nz,1F
542+  8C98 3C           	inc a
543+  8C99 47           1 ld b,a
544+  8C9A C9           	ret
545+  8C9B
546+  8C9B              ; --------------------------------------------------------------------------------------------------------------------
547+  8C9B              ;
548+  8C9B              ;	3/1/23
549+  8C9B              ;
550+  8C9B              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8C9B              ;
552+  8C9B              ;	Destruye: A,B,HL y DE.
553+  8C9B
554+  8C9B              Define_rutina_de_impresion
555+  8C9B
556+  8C9B 3A 97 85     	ld a,(Columns)
557+  8C9E 47           	ld b,a
558+  8C9F 3A CC 85     	ld a,(Columnas)
559+  8CA2 B8           	cp b
560+  8CA3 20 0D        	jr nz,2f
561+  8CA5
562+  8CA5              ;	La entidad se imprime entera.
563+  8CA5
564+  8CA5 21 71 8D     	ld hl, Indice_entidades_completas
565+  8CA8 E6 01        	and 1
566+  8CAA 28 02        	jr z,1F
567+  8CAC
568+  8CAC 23           	inc hl
569+  8CAD 23           	inc hl
570+  8CAE
571+  8CAE CD 82 87     1 call Extrae_address
572+  8CB1 C9           	ret		;	ret
573+  8CB2
574+  8CB2              ;	La entidad no se imprime entera en pantalla.
575+  8CB2
576+  8CB2 3A AA 85     2 ld a,(Cuad_objeto)
577+  8CB5 E6 01        	and 1
578+  8CB7 28 17        	jr z,3F
579+  8CB9
580+  8CB9              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8CB9
582+  8CB9 21 75 8D     	ld hl, Indice_entidades_incompletas_izquierda
583+  8CBC 3A 97 85     4 ld a,(Columns)
584+  8CBF E6 01        	and 1
585+  8CC1 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8CC3
587+  8CC3 23           	inc hl
588+  8CC4 23           	inc hl
589+  8CC5
590+  8CC5 3A CC 85     	ld a,(Columnas)
591+  8CC8 E6 01        	and 1
592+  8CCA 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8CCC
594+  8CCC 23           	inc hl
595+  8CCD 23           	inc hl
596+  8CCE
597+  8CCE 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8CD0
599+  8CD0 21 7B 8D     3 ld hl, Indice_entidades_incompletas_derecha
600+  8CD3 18 E7        	jr 4B
601+  8CD5
602+  8CD5              ; --------------------------------------------------------------------------------------------------------------------
603+  8CD5              ;
604+  8CD5              ;	Prepara_draw
605+  8CD5              ;
606+  8CD5              ;	Es una rutina de carga.
607+  8CD5              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8CD5              ;
609+  8CD5              ;	FUNCIONAMIENTO:
610+  8CD5              ;
611+  8CD5              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8CD5              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8CD5              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8CD5              ;
615+  8CD5              ;	DESTRUYE:
616+  8CD5              ;
617+  8CD5              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8CD5
619+  8CD5 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8CD8 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8CD9 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8CDA 4E           	ld c,(hl)
623+  8CDB 2A 98 85     	ld hl,(Posicion_actual)
624+  8CDE 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8CE0 C9           	ret
626+  8CE1
627+  8CE1              ;----------------------------------------------------------------------------------------------------------------
628+  8CE1              ;
629+  8CE1              ;	5/08/22
630+  8CE1              ;
631+  8CE1              ;   NextScan.
632+  8CE1              ;
633+  8CE1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8CE1              ;
635+  8CE1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8CE1              ;
637+  8CE1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8CE1              ;
639+  8CE1              ;       DESTRUIDOS: AF y HL !!!
640+  8CE1              ;
641+  8CE1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8CE1              ;
643+  8CE1
644+  8CE1 24           NextScan inc h          ; Incrementamos el scanline.
645+  8CE2 7C               ld a,h
646+  8CE3 E6 07            and 7
647+  8CE5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8CE6
649+  8CE6 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8CE7 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8CE9 6F               ld l,a
652+  8CEA D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8CEB
654+  8CEB 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8CEC D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8CEE 67               ld h,a
657+  8CEF C9               ret
658+  8CF0
659+  8CF0              ;----------------------------------------------------------------------------------------------------------------
660+  8CF0              ;
661+  8CF0              ;	5/08/22
662+  8CF0              ;
663+  8CF0              ;   PreviousScan.
664+  8CF0              ;
665+  8CF0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8CF0              ;
667+  8CF0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8CF0              ;
669+  8CF0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8CF0              ;
671+  8CF0              ;       DESTRUIDOS: AF y HL !!!
672+  8CF0              ;
673+  8CF0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8CF0              ;
675+  8CF0
676+  8CF0 7C           PreviousScan ld a,h
677+  8CF1 25               dec h               ; Dec H.
678+  8CF2 E6 07            and 7
679+  8CF4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8CF5
681+  8CF5 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8CF6 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8CF8 6F               ld l,a
684+  8CF9 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8CFA
686+  8CFA 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8CFB C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8CFD 67               ld h,a
689+  8CFE C9               ret
690+  8CFF
691+  8CFF              ; -----------------------------------------------------------------------------------
692+  8CFF              ;
693+  8CFF              ;	28/2/23
694+  8CFF              ;
695+  8CFF              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8CFF              ;	Extrae fotos de Album_de_fotos.
697+  8CFF
698+  8CFF 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8D02 A7           	and a
700+  8D03 C8           	ret z
701+  8D04 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8D08 31 00 70     	ld sp,Album_de_fotos
703+  8D0B
704+  8D0B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8D0D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8D0E D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8D0F
708+  8D0F ED 73 DB 85  	ld (Stack_2),sp
709+  8D13 ED 7B D9 85  	ld sp,(Stack)
710+  8D17
711+  8D17              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8D17
713+  8D17 3E CD        	ld a,$cd
714+  8D19 32 21 8D     	ld (Imprime),a
715+  8D1C EB           	ex de,hl
716+  8D1D 22 22 8D     	ld (Imprime+1),hl
717+  8D20 EB           	ex de,hl
718+  8D21
719+  8D21              ; Ejecuta la llamada:	CALL $xx,xx
720+  8D21
721+  8D21 00 00 00     Imprime db 0,0,0
722+  8D24
723+  8D24 3A D8 85     	ld a,(Numero_de_malotes)
724+  8D27 3D           	dec a
725+  8D28 28 09        	jr z,1F
726+  8D2A 32 D8 85      	ld (Numero_de_malotes),a
727+  8D2D
728+  8D2D ED 7B DB 85   	ld sp,(Stack_2)
729+  8D31 18 D8        	jr 2B
730+  8D33
731+  8D33 AF           1 xor a
732+  8D34 32 DB 85     	ld (Stack_2),a
733+  8D37 C9           	ret
734+  8D38
735+  8D38              ; -----------------------------------------------------------------------------------
736+  8D38              ;
737+  8D38              ;	28/2/23
738+  8D38              ;
739+  8D38              ;	Pinta los disparos generados.
740+  8D38
741+  8D38              Extrae_foto_disparos
742+  8D38
743+  8D38 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8D3B A7           	and a
745+  8D3C C8           	ret z
746+  8D3D ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8D41 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8D44
749+  8D44 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8D46 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8D47 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8D48
753+  8D48 ED 73 DB 85  	ld (Stack_2),sp
754+  8D4C ED 7B D9 85  	ld sp,(Stack)
755+  8D50
756+  8D50              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8D50
758+  8D50 3E CD        	ld a,$cd
759+  8D52 32 5A 8D     	ld (Imprime2),a
760+  8D55 EB           	ex de,hl
761+  8D56 22 5B 8D     	ld (Imprime2+1),hl
762+  8D59 EB           	ex de,hl
763+  8D5A
764+  8D5A              ; Ejecuta la llamada:	CALL $xx,xx
765+  8D5A
766+  8D5A 00 00 00     Imprime2 db 0,0,0
767+  8D5D
768+  8D5D 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8D60 3D           	dec a
770+  8D61 28 09        	jr z,1F
771+  8D63 32 E1 85      	ld (Numero_de_disparotes),a
772+  8D66
773+  8D66 ED 7B DB 85  	ld sp,(Stack_2)
774+  8D6A 18 D8        	jr 2B
775+  8D6C
776+  8D6C AF           1 xor a
777+  8D6D 32 DB 85     	ld (Stack_2),a
778+  8D70 C9           	ret
779+  8D71
# file closed: Draw_XOR.asm
835   8D71              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8D71              ;   índices de Rutinas de impresión.
  2+  8D71
  3+  8D71 81 8D        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8D73 AE 8D            defw Pinta_Amadeus_3x2
  5+  8D75
  6+  8D75 04 8E        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8D77 A4 8E            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8D79 58 8E            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8D7B
 10+  8D7B 2E 8E        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8D7D 32 8F            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8D7F E6 8E            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8D81
 14+  8D81
 15+  8D81              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8D81              ;
 17+  8D81              ;   12/12/22
 18+  8D81              ;
 19+  8D81              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8D81              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8D81              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8D81              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8D81              ;
 24+  8D81              ;   Modifica: DE y HL.
 25+  8D81
 26+  8D81 ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8D85 FD F9        	ld sp,iy
 28+  8D87 06 10            ld b,16
 29+  8D89 D1           1 pop de
 30+  8D8A 7B               ld a,e
 31+  8D8B AE               xor (hl)
 32+  8D8C 77           	ld (hl),a
 33+  8D8D 23           	inc hl
 34+  8D8E 7A               ld a,d
 35+  8D8F AE               xor (hl)
 36+  8D90 77           	ld (hl),a
 37+  8D91 2B           	dec hl
 38+  8D92 24           	inc h
 39+  8D93 7C               ld a,h
 40+  8D94 E6 07            and 7
 41+  8D96 20 0A            jr nz,2F
 42+  8D98 7D               ld a,l
 43+  8D99 C6 20            add a,$20
 44+  8D9B 6F               ld l,a
 45+  8D9C 38 04            jr c,2F
 46+  8D9E 7C               ld a,h
 47+  8D9F D6 08            sub 8
 48+  8DA1 67               ld h,a
 49+  8DA2 7C           2 ld a,h
 50+  8DA3 FE 58            cp $58
 51+  8DA5 28 02            jr z,3F
 52+  8DA7 10 E0            djnz 1B
 53+  8DA9 ED 7B D9 85  3 ld sp,(Stack)
 54+  8DAD C9           	ret
 55+  8DAE
 56+  8DAE ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8DB2 FD F9        	ld sp,iy
 58+  8DB4 06 08            ld b,8
 59+  8DB6 D1           1 pop de
 60+  8DB7 7B               ld a,e
 61+  8DB8 AE               xor (hl)
 62+  8DB9 77           	ld (hl),a
 63+  8DBA 23           	inc hl
 64+  8DBB 7A               ld a,d
 65+  8DBC AE               xor (hl)
 66+  8DBD 77           	ld (hl),a
 67+  8DBE 23           	inc hl
 68+  8DBF D1           	pop de
 69+  8DC0 7B               ld a,e
 70+  8DC1 AE               xor (hl)
 71+  8DC2 77           	ld (hl),a
 72+  8DC3 2B           	dec hl
 73+  8DC4 2B           	dec hl
 74+  8DC5 24           	inc h
 75+  8DC6 7C               ld a,h
 76+  8DC7 E6 07            and 7
 77+  8DC9 20 0A            jr nz,2F
 78+  8DCB 7D               ld a,l
 79+  8DCC C6 20            add a,$20
 80+  8DCE 6F               ld l,a
 81+  8DCF 38 04            jr c,2F
 82+  8DD1 7C               ld a,h
 83+  8DD2 D6 08            sub 8
 84+  8DD4 67               ld h,a
 85+  8DD5 7C           2 ld a,h
 86+  8DD6 FE 58            cp $58
 87+  8DD8 28 25            jr z,4F
 88+  8DDA 7A               ld a,d
 89+  8DDB AE               xor (hl)
 90+  8DDC 77               ld (hl),a
 91+  8DDD D1           	pop de
 92+  8DDE 23           	inc hl
 93+  8DDF 7B               ld a,e
 94+  8DE0 AE               xor (hl)
 95+  8DE1 77           	ld (hl),a
 96+  8DE2 23           	inc hl
 97+  8DE3 7A               ld a,d
 98+  8DE4 AE               xor (hl)
 99+  8DE5 77           	ld (hl),a
100+  8DE6 2B           	dec hl
101+  8DE7 2B           	dec hl
102+  8DE8 24           	inc h
103+  8DE9 7C               ld a,h
104+  8DEA E6 07            and 7
105+  8DEC 20 0A            jr nz,3F
106+  8DEE 7D               ld a,l
107+  8DEF C6 20            add a,$20
108+  8DF1 6F               ld l,a
109+  8DF2 38 04            jr c,3F
110+  8DF4 7C               ld a,h
111+  8DF5 D6 08            sub 8
112+  8DF7 67               ld h,a
113+  8DF8 7C           3 ld a,h
114+  8DF9 FE 58            cp $58
115+  8DFB 28 02            jr z,4F
116+  8DFD 10 B7            djnz 1B
117+  8DFF ED 7B D9 85  4 ld sp,(Stack)
118+  8E03 C9           	ret
119+  8E04
120+  8E04              ; ---------------------------------------------------
121+  8E04
122+  8E04 ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8E08 FD F9        	ld sp,iy
124+  8E0A
125+  8E0A              ; >>>
126+  8E0A
127+  8E0A 06 10            ld b,16
128+  8E0C D1           1 pop de
129+  8E0D 7A           	ld a,d
130+  8E0E AE           	xor (hl)
131+  8E0F 77           	ld (hl),a
132+  8E10 24           	inc h
133+  8E11 7C               ld a,h
134+  8E12 E6 07            and 7
135+  8E14 20 0C            jr nz,2F
136+  8E16 7D               ld a,l
137+  8E17 C6 20            add a,$20
138+  8E19 6F               ld l,a
139+  8E1A 38 06            jr c,2F
140+  8E1C 7C               ld a,h
141+  8E1D D6 08            sub 8
142+  8E1F 67               ld h,a
143+  8E20 18 00            jr 2F
144+  8E22 7C           2 ld a,h
145+  8E23 FE 58            cp $58
146+  8E25 28 02            jr z,3F
147+  8E27 10 E3            djnz 1B
148+  8E29 ED 7B D9 85  3 ld sp,(Stack)
149+  8E2D C9           	ret
150+  8E2E
151+  8E2E ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8E32 FD F9        	ld sp,iy
153+  8E34
154+  8E34              ; >>>
155+  8E34
156+  8E34 06 10            ld b,16
157+  8E36 D1           1 pop de
158+  8E37 7B           	ld a,e
159+  8E38 AE           	xor (hl)
160+  8E39 77           	ld (hl),a
161+  8E3A 24           	inc h
162+  8E3B 7C               ld a,h
163+  8E3C E6 07            and 7
164+  8E3E 20 0C            jr nz,2F
165+  8E40 7D               ld a,l
166+  8E41 C6 20            add a,$20
167+  8E43 6F               ld l,a
168+  8E44 38 06            jr c,2F
169+  8E46 7C               ld a,h
170+  8E47 D6 08            sub 8
171+  8E49 67               ld h,a
172+  8E4A 18 00            jr 2F
173+  8E4C 7C           2 ld a,h
174+  8E4D FE 58            cp $58
175+  8E4F 28 02            jr z,3F
176+  8E51 10 E3            djnz 1B
177+  8E53 ED 7B D9 85  3 ld sp,(Stack)
178+  8E57 C9           	ret
179+  8E58
180+  8E58              ; ---------------------------------------------------
181+  8E58
182+  8E58 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8E5C FD F9        	ld sp,iy
184+  8E5E 06 08            ld b,8
185+  8E60 D1           1 pop de
186+  8E61 7A           	ld a,d
187+  8E62 AE           	xor (hl)
188+  8E63 77           	ld (hl),a
189+  8E64 23           	inc hl
190+  8E65 D1           	pop de
191+  8E66 7B           	ld a,e
192+  8E67 AE           	xor (hl)
193+  8E68 77           	ld (hl),a
194+  8E69 2B           	dec hl
195+  8E6A 24            	inc h
196+  8E6B 7C               ld a,h
197+  8E6C E6 07            and 7
198+  8E6E 20 0A            jr nz,2F
199+  8E70 7D               ld a,l
200+  8E71 C6 20            add a,$20
201+  8E73 6F               ld l,a
202+  8E74 38 04            jr c,2F
203+  8E76 7C               ld a,h
204+  8E77 D6 08            sub 8
205+  8E79 67               ld h,a
206+  8E7A 7C           2 ld a,h
207+  8E7B FE 58            cp $58
208+  8E7D 28 20            jr z,4F
209+  8E7F D1               pop de
210+  8E80 7B           	ld a,e
211+  8E81 AE           	xor (hl)
212+  8E82 77           	ld (hl),a
213+  8E83 23           	inc hl
214+  8E84 7A           	ld a,d
215+  8E85 AE           	xor (hl)
216+  8E86 77           	ld (hl),a
217+  8E87 2B           	dec hl
218+  8E88 24           	inc h
219+  8E89 7C               ld a,h
220+  8E8A E6 07            and 7
221+  8E8C 20 0A            jr nz,3F
222+  8E8E 7D               ld a,l
223+  8E8F C6 20            add a,$20
224+  8E91 6F               ld l,a
225+  8E92 38 04            jr c,3F
226+  8E94 7C               ld a,h
227+  8E95 D6 08            sub 8
228+  8E97 67               ld h,a
229+  8E98 7C           3 ld a,h
230+  8E99 FE 58            cp $58
231+  8E9B 28 02            jr z,4F
232+  8E9D 10 C1            djnz 1B
233+  8E9F ED 7B D9 85  4 ld sp,(Stack)
234+  8EA3 C9           	ret
235+  8EA4
236+  8EA4 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8EA8 FD F9        	ld sp,iy
238+  8EAA 06 08            ld b,8
239+  8EAC D1           1 pop de
240+  8EAD D1           	pop de
241+  8EAE 7B           	ld a,e
242+  8EAF AE           	xor (hl)
243+  8EB0 77           	ld (hl),a
244+  8EB1 24            	inc h
245+  8EB2 7C               ld a,h
246+  8EB3 E6 07            and 7
247+  8EB5 20 0A            jr nz,2F
248+  8EB7 7D               ld a,l
249+  8EB8 C6 20            add a,$20
250+  8EBA 6F               ld l,a
251+  8EBB 38 04            jr c,2F
252+  8EBD 7C               ld a,h
253+  8EBE D6 08            sub 8
254+  8EC0 67               ld h,a
255+  8EC1 7C           2 ld a,h
256+  8EC2 FE 58            cp $58
257+  8EC4 28 1B            jr z,4F
258+  8EC6 D1               pop de
259+  8EC7 7A           	ld a,d
260+  8EC8 AE           	xor (hl)
261+  8EC9 77           	ld (hl),a
262+  8ECA 24           	inc h
263+  8ECB 7C               ld a,h
264+  8ECC E6 07            and 7
265+  8ECE 20 0A            jr nz,3F
266+  8ED0 7D               ld a,l
267+  8ED1 C6 20            add a,$20
268+  8ED3 6F               ld l,a
269+  8ED4 38 04            jr c,3F
270+  8ED6 7C               ld a,h
271+  8ED7 D6 08            sub 8
272+  8ED9 67               ld h,a
273+  8EDA 7C           3 ld a,h
274+  8EDB FE 58            cp $58
275+  8EDD 28 02            jr z,4F
276+  8EDF 10 CB            djnz 1B
277+  8EE1 ED 7B D9 85  4 ld sp,(Stack)
278+  8EE5 C9           	ret
279+  8EE6
280+  8EE6 ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  8EEA FD F9        	ld sp,iy
282+  8EEC 06 08            ld b,8
283+  8EEE D1           1 pop de
284+  8EEF 7B           	ld a,e
285+  8EF0 AE           	xor (hl)
286+  8EF1 77           	ld (hl),a
287+  8EF2 23           	inc hl
288+  8EF3 7A           	ld a,d
289+  8EF4 AE           	xor (hl)
290+  8EF5 77           	ld (hl),a
291+  8EF6 2B           	dec hl
292+  8EF7 24             	inc h
293+  8EF8 7C               ld a,h
294+  8EF9 E6 07            and 7
295+  8EFB 20 0A            jr nz,2F
296+  8EFD 7D               ld a,l
297+  8EFE C6 20            add a,$20
298+  8F00 6F               ld l,a
299+  8F01 38 04            jr c,2F
300+  8F03 7C               ld a,h
301+  8F04 D6 08            sub 8
302+  8F06 67               ld h,a
303+  8F07 7C           2 ld a,h
304+  8F08 FE 58            cp $58
305+  8F0A 28 21            jr z,4F
306+  8F0C D1               pop de
307+  8F0D 7A           	ld a,d
308+  8F0E AE           	xor (hl)
309+  8F0F 77           	ld (hl),a
310+  8F10 23           	inc hl
311+  8F11 D1               pop de
312+  8F12 7B           	ld a,e
313+  8F13 AE           	xor (hl)
314+  8F14 77           	ld (hl),a
315+  8F15 2B           	dec hl
316+  8F16 24           	inc h
317+  8F17 7C               ld a,h
318+  8F18 E6 07            and 7
319+  8F1A 20 0A            jr nz,3F
320+  8F1C 7D               ld a,l
321+  8F1D C6 20            add a,$20
322+  8F1F 6F               ld l,a
323+  8F20 38 04            jr c,3F
324+  8F22 7C               ld a,h
325+  8F23 D6 08            sub 8
326+  8F25 67               ld h,a
327+  8F26 7C           3 ld a,h
328+  8F27 FE 58            cp $58
329+  8F29 28 02            jr z,4F
330+  8F2B 10 C1            djnz 1B
331+  8F2D ED 7B D9 85  4 ld sp,(Stack)
332+  8F31 C9           	ret
333+  8F32
334+  8F32 ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  8F36 FD F9        	ld sp,iy
336+  8F38 06 08            ld b,8
337+  8F3A D1           1 pop de
338+  8F3B 7B           	ld a,e
339+  8F3C AE           	xor (hl)
340+  8F3D 77           	ld (hl),a
341+  8F3E 24            	inc h
342+  8F3F 7C               ld a,h
343+  8F40 E6 07            and 7
344+  8F42 20 0A            jr nz,2F
345+  8F44 7D               ld a,l
346+  8F45 C6 20            add a,$20
347+  8F47 6F               ld l,a
348+  8F48 38 04            jr c,2F
349+  8F4A 7C               ld a,h
350+  8F4B D6 08            sub 8
351+  8F4D 67               ld h,a
352+  8F4E 7C           2 ld a,h
353+  8F4F FE 58            cp $58
354+  8F51 28 1C            jr z,4F
355+  8F53 D1               pop de
356+  8F54 7A           	ld a,d
357+  8F55 AE           	xor (hl)
358+  8F56 77           	ld (hl),a
359+  8F57 24           	inc h
360+  8F58 7C               ld a,h
361+  8F59 E6 07            and 7
362+  8F5B 20 0A            jr nz,3F
363+  8F5D 7D               ld a,l
364+  8F5E C6 20            add a,$20
365+  8F60 6F               ld l,a
366+  8F61 38 04            jr c,3F
367+  8F63 7C               ld a,h
368+  8F64 D6 08            sub 8
369+  8F66 67               ld h,a
370+  8F67 7C           3 ld a,h
371+  8F68 FE 58            cp $58
372+  8F6A 28 03            jr z,4F
373+  8F6C D1               pop de
374+  8F6D 10 CB            djnz 1B
375+  8F6F ED 7B D9 85  4 ld sp,(Stack)
376+  8F73 C9           	ret
377+  8F74
378+  8F74              ; ---------------------------------------------------
379+  8F74              ;
380+  8F74              ;   27/02/23
381+  8F74              ;
382+  8F74              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  8F74              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  8F74              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  8F74
386+  8F74 ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  8F78 FD F9            ld sp,iy
388+  8F7A 06 02            ld b,2
389+  8F7C D1           1 pop de
390+  8F7D 7B               ld a,e
391+  8F7E AE               xor (hl)
392+  8F7F 77               ld (hl),a
393+  8F80 23               inc hl
394+  8F81 7A               ld a,d
395+  8F82 AE               xor (hl)
396+  8F83 77               ld (hl),a
397+  8F84 2B               dec hl
398+  8F85 24               inc h
399+  8F86 7C               ld a,h
400+  8F87 E6 07            and 7
401+  8F89 20 0A            jr nz,2F
402+  8F8B 7D               ld a,l
403+  8F8C C6 20            add a,$20
404+  8F8E 6F               ld l,a
405+  8F8F 38 04            jr c,2F
406+  8F91 7C               ld a,h
407+  8F92 D6 08            sub 8
408+  8F94 67               ld h,a
409+  8F95 7C           2 ld a,h
410+  8F96 FE 58            cp $58
411+  8F98 28 02            jr z,3F
412+  8F9A 10 E0            djnz 1B
413+  8F9C ED 7B D9 85  3 ld sp,(Stack)
414+  8FA0 C9               ret
415+  8FA1
# file closed: Rutinas_de_impresion_sprites.asm
836   8FA1              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  8FA1              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  8FA1              ;
  3+  8FA1              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  8FA1              ;
  5+  8FA1              ; *****************************************************************************************************************************************************************************************
  6+  8FA1              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  8FA1
  8+  8FA1 7C           calcula_tercio ld a,h
  9+  8FA2 E6 18        	and $18
 10+  8FA4 CB 2F        	sra a
 11+  8FA6 CB 2F        	sra a
 12+  8FA8 CB 2F        	sra a
 13+  8FAA C9           	ret
 14+  8FAB
# file closed: calcula_tercio.asm
837   8FAB              	include "Cls.asm"
# file opened: Cls.asm
  1+  8FAB              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  8FAB              ;
  3+  8FAB              ;
  4+  8FAB              ;	CLS.
  5+  8FAB              ;
  6+  8FAB              ;	Limpia la pantalla y define sus atributos.
  7+  8FAB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  8FAB              ;
  9+  8FAB              ;	COLORES: 0 ..... NEGRO
 10+  8FAB              ;    		 1 ..... AZUL
 11+  8FAB              ; 			 2 ..... ROJO
 12+  8FAB              ;			 3 ..... MAGENTA
 13+  8FAB              ; 			 4 ..... VERDE
 14+  8FAB              ; 			 5 ..... CIAN
 15+  8FAB              ;			 6 ..... AMARILLO
 16+  8FAB              ; 			 7 ..... BLANCO
 17+  8FAB              ;
 18+  8FAB              ;	INPUT: A contiene los atributos de pantalla.
 19+  8FAB              ;
 20+  8FAB              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  8FAB
 22+  8FAB
 23+  8FAB 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  8FAE 11 01 40     	LD DE,$4001
 25+  8FB1 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  8FB4 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  8FB6 ED B0        	LDIR
 28+  8FB8 01 FF 02     	LD BC,767
 29+  8FBB 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  8FBC ED B0        	LDIR
 31+  8FBE C9           	ret
 32+  8FBF
# file closed: Cls.asm
838   8FBF              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  8FBF              ; ******************************************************************************************************************************************************************************************
  2+  8FBF              ;
  3+  8FBF              ;   22/01/23
  4+  8FBF              ;
  5+  8FBF              ;	Mov_down
  6+  8FBF              ;
  7+  8FBF              ; 	Mueve el Sprite X px hacia abajo.
  8+  8FBF              ;
  9+  8FBF              ;
 10+  8FBF 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  8FC2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  8FC4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  8FC4              ; 																	; _ en el caso de que no lo haya.
 14+  8FC4 3A AE 85     	ld a,(Vel_down)
 15+  8FC7 47           	ld b,a
 16+  8FC8 2A 98 85         ld hl,(Posicion_actual)
 17+  8FCB CD A1 8F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  8FCE E6 02        	and 2
 19+  8FD0 28 0F        	jr z,1F
 20+  8FD2
 21+  8FD2              ; Nos encontramos en el último tercio de pantalla.
 22+  8FD2              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  8FD2
 24+  8FD2 7C           	ld a,h
 25+  8FD3 FE 57        	cp $57
 26+  8FD5 20 0A        	jr nz,1F
 27+  8FD7 7D           	ld a,l
 28+  8FD8 C6 20        	add $20
 29+  8FDA 30 05        	jr nc,1F
 30+  8FDC
 31+  8FDC              ; ------------------------------
 32+  8FDC CD BD 92     	call Reaparece_arriba
 33+  8FDF              ;	call Reinicio
 34+  8FDF              ; ------------------------------
 35+  8FDF 18 08        	jr 3F
 36+  8FE1 CD E1 8C     1 call NextScan
 37+  8FE4 22 98 85     	ld (Posicion_actual),hl
 38+  8FE7 10 E2            djnz 2B
 39+  8FE9 CD D3 92     3 call Genera_coordenadas
 40+  8FEC C9           	ret
 41+  8FED
 42+  8FED
 43+  8FED              ; ******************************************************************************************************************************************************************************************
 44+  8FED              ;
 45+  8FED              ;   22/01/23
 46+  8FED              ;
 47+  8FED              ;	Mov_up
 48+  8FED              ;
 49+  8FED              ; 	Mueve el Sprite hacia arriba.
 50+  8FED              ;
 51+  8FED              ;
 52+  8FED 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  8FF0 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  8FF2              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  8FF2              ; 																		; _ en el caso de que no lo haya.
 56+  8FF2 3A AD 85     	ld a,(Vel_up)
 57+  8FF5 47           	ld b,a
 58+  8FF6 2A 98 85     	ld hl,(Posicion_actual)
 59+  8FF9 CD A1 8F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  8FFC A7           	and a
 61+  8FFD 20 10        	jr nz,1F
 62+  8FFF
 63+  8FFF              ; Nos encontramos en el 1er tercio de pantalla.
 64+  8FFF              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  8FFF
 66+  8FFF 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  9000 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  9002 20 0B            jr nz,1F
 69+  9004 7D               ld a,l
 70+  9005 D6 20            sub $20
 71+  9007 30 06            jr nc,1F
 72+  9009 25               dec h
 73+  900A
 74+  900A              ; -----------------------------
 75+  900A CD AD 92         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  900D              ;	call Reinicio
 77+  900D              ; -----------------------------
 78+  900D
 79+  900D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  900F CD F0 8C     1 call PreviousScan
 81+  9012 22 98 85     	ld (Posicion_actual),hl
 82+  9015 10 E2            djnz 3B
 83+  9017 CD D3 92     2 call Genera_coordenadas
 84+  901A C9           	ret
 85+  901B
 86+  901B              ; ******************************************************************************************************************************************************************************************
 87+  901B              ;
 88+  901B              ;	19/10/22
 89+  901B              ;
 90+  901B              ;	Mov_right.
 91+  901B              ;
 92+  901B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  901B              ;
 94+  901B
 95+  901B 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  901E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  9020              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  9020              ; 																	; _ en el caso de que no lo haya.
 99+  9020 3A C3 85     	ld a,(Ctrl_0)
100+  9023 CB 77        	bit 6,a
101+  9025 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9027
103+  9027 CD 5B 92     	call Stop_Amadeus_right
104+  902A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  902B 18 4D        	jr 8F
106+  902D
107+  902D 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  9030 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  9032 20 46        	jr nz,8F
110+  9034
111+  9034 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9037 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  9038 28 40        	jr z,8F
114+  903A
115+  903A              ; ---------- ---------- ----------
116+  903A              ;
117+  903A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  903A
119+  903A 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  903D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  903F 28 11        	jr z,1F
122+  9041 38 06        	jr c,6F
123+  9043 FE 04        	cp 4
124+  9045 28 14        	jr z,7F
125+  9047 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9049
127+  9049              ; ---------- ---------- ----------
128+  9049              ;
129+  9049              ; Perfiles de velocidad
130+  9049              ;
131+  9049
132+  9049 3A 9E 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  904C FE FE        	cp $fe
134+  904E 20 2A        	jr nz,8F
135+  9050 18 10        	jr 3F
136+  9052 3A 9E 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  9055 FE FD        	cp $fd
138+  9057 20 21        	jr nz,8F
139+  9059 18 07        	jr 3F
140+  905B 3A 9E 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  905E FE FB        	cp $fb
142+  9060 20 18        	jr nz,8F
143+  9062
144+  9062              ; ---------- ---------- ----------
145+  9062
146+  9062              3
147+  9062 CD 9B 92     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  9065              ;	call Reinicio
149+  9065
150+  9065              ; ---------- ---------- ----------
151+  9065              ;
152+  9065              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  9065
154+  9065 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  9067 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  9068 CD 81 90     	call DESPLZ_DER
157+  906B C1           	pop bc
158+  906C 10 F9        	djnz 5B
159+  906E 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  9071 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  9072 22 98 85     	ld (Posicion_actual),hl
162+  9075 CD D3 92     	call Genera_coordenadas
163+  9078 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  907A
165+  907A              ; ---------- ---------- ----------
166+  907A
167+  907A 2A 98 85     8 ld hl,(Posicion_actual)
168+  907D CD 81 90     	call DESPLZ_DER
169+  9080 C9           2 ret
170+  9081
171+  9081              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  9081              ;
173+  9081              ;	22/9/22
174+  9081              ;
175+  9081
176+  9081 CD 90 90     DESPLZ_DER call Desplaza_derecha
177+  9084 CD DC 90         call modifica_parametros_1er_DESPLZ_2
178+  9087 CD 05 91         call Ciclo_completo
179+  908A 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  908D CB FE        	set 7,(hl)
181+  908F C9           	ret
182+  9090
183+  9090              ; ******************************************************************************************************************************************************************************************
184+  9090              ;	15/02/23
185+  9090              ;
186+  9090
187+  9090 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  9093 47           	ld b,a
189+  9094 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  9097 23           1 inc hl
191+  9098 23           	inc hl
192+  9099 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  909B 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  909E CD 82 87     	call Extrae_address
195+  90A1 22 9A 85     	ld (Puntero_objeto),hl
196+  90A4
197+  90A4              ; Modifica (Puntero_DESPLZ_izq).
198+  90A4
199+  90A4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  90A4              ; Cuántos movimientos hemos hecho ??
201+  90A4              ; DE contiene (Puntero_DESPLZ_der).
202+  90A4
203+  90A4 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  90A7 EB           	ex de,hl
205+  90A8 A7           	and a
206+  90A9 ED 52        	sbc hl,de
207+  90AB CB 3D        	srl l
208+  90AD 3E 08        6 ld a,8
209+  90AF 95           	sub l
210+  90B0 30 1E        	jr nc,3F
211+  90B2
212+  90B2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  90B2              ; B="0".
214+  90B2
215+  90B2 04           4 inc b
216+  90B3 3C           	inc a
217+  90B4 20 FC        	jr nz,4B
218+  90B6 78           	ld a,b
219+  90B7 08           	ex af,af
220+  90B8 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  90BB 23           5 inc hl
222+  90BC 23           	inc hl
223+  90BD 10 FC        	djnz 5B
224+  90BF 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  90C2 CD 82 87     	call Extrae_address
226+  90C5 22 9A 85     	ld (Puntero_objeto),hl
227+  90C8
228+  90C8              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  90C8              ; _(Posicion_actual).
230+  90C8
231+  90C8 21 98 85     	ld hl,Posicion_actual
232+  90CB 34           	inc (hl)
233+  90CC 08               ex af,af
234+  90CD 6F           	ld l,a
235+  90CE 18 DD        	jr 6B
236+  90D0
237+  90D0              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  90D0
239+  90D0 47           3 ld b,a
240+  90D1 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  90D4 23           2 inc hl
242+  90D5 23           	inc hl
243+  90D6 10 FC        	djnz 2B
244+  90D8 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  90DB C9           8 ret
246+  90DC
247+  90DC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  90DC              ;
249+  90DC              ;	24/7/22
250+  90DC              ;
251+  90DC              ;	modifica_parametros_1er_DESPLZ_2
252+  90DC              ;
253+  90DC              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  90DC              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  90DC              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  90DC
257+  90DC 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  90DF A7           	and a
259+  90E0 20 1F        	jr nz,1F
260+  90E2 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  90E4 32 9E 85         ld (CTRL_DESPLZ),a
262+  90E7
263+  90E7 21 97 85     	ld hl,Columns
264+  90EA 34           	inc (hl)
265+  90EB 3A AA 85     	ld a,(Cuad_objeto)
266+  90EE E6 01        	and 1
267+  90F0 28 0F        	jr z,1F
268+  90F2 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  90F5 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  90F6 22 98 85     	ld (Posicion_actual),hl
271+  90F9 CD D3 92     	call Genera_coordenadas
272+  90FC CD 67 92     	call Inc_CTRL_DESPLZ
273+  90FF 18 03        	jr 2F
274+  9101 CD 67 92     1 call Inc_CTRL_DESPLZ
275+  9104 C9           2 ret
276+  9105
277+  9105              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  9105              ;
279+  9105              ;	24/7/22
280+  9105              ;
281+  9105              ;	Ciclo_completo.
282+  9105              ;
283+  9105              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  9105              ;
285+  9105              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  9105              ; 	Decrementamos (Columns).
287+  9105              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  9105              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  9105
290+  9105
291+  9105 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  9108 FE FF        	cp $ff
293+  910A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  910C E6 F0        	and $f0
295+  910E 20 28        	jr nz,3F
296+  9110
297+  9110              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  9110
299+  9110 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  9113 47           	ld b,a
301+  9114 3E F8        	ld a,$f8
302+  9116 80           	add b
303+  9117 32 9E 85     	ld (CTRL_DESPLZ),a
304+  911A 18 1C        	jr 3F
305+  911C 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  911F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  9120 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  9121 32 9E 85     	ld (CTRL_DESPLZ),a
309+  9124 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9127 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9129 20 0A        	jr nz,2F
312+  912B 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  912E 23           	inc hl
314+  912F 22 98 85     	ld (Posicion_actual),hl
315+  9132 CD D3 92     	call Genera_coordenadas
316+  9135
317+  9135              ; Inicia el puntero de Sprite.
318+  9135
319+  9135 CD 99 87     2 call Inicia_puntero_objeto_der
320+  9138 C9           3 ret
321+  9139
322+  9139              ; ******************************************************************************************************************************************************************************************
323+  9139              ;
324+  9139              ;	15/02/23
325+  9139              ;
326+  9139              ;	Mov_left.
327+  9139              ;
328+  9139              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9139              ;
330+  9139              Mov_left
331+  9139
332+  9139 21 C3 85     	ld hl,Ctrl_0
333+  913C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  913E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  913E              ; 																	; _ en el caso de que no lo haya.
336+  913E 3A C3 85     	ld a,(Ctrl_0)
337+  9141 CB 77        	bit 6,a
338+  9143 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9145
340+  9145 CD 61 92     	call Stop_Amadeus_left
341+  9148 C8           	ret z
342+  9149 20 50        	jr nz,8F
343+  914B
344+  914B 3A 9C 85     11 ld a,(Coordenada_X)
345+  914E A7           	and a
346+  914F 20 4A        	jr nz,8F
347+  9151
348+  9151 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  9154 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  9155 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9157
352+  9157              ; ---------- ---------- ----------
353+  9157
354+  9157 3A AB 85     	ld a,(Vel_left)
355+  915A FE 02        	cp 2
356+  915C 28 0F        	jr z,1F
357+  915E 38 04        	jr c,6F
358+  9160 FE 04        	cp 4
359+  9162 28 12        	jr z,7F
360+  9164
361+  9164              ; ---------- ---------- ----------
362+  9164
363+  9164 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  9167 FE F9        	cp $f9
365+  9169 20 30        	jr nz,8F
366+  916B 18 10        	jr 4F
367+  916D 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  9170 FE FA        	cp $fa
369+  9172 20 27        	jr nz,8F
370+  9174 18 07        	jr 4F
371+  9176 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  9179 FE FC        	cp $fc
373+  917B 20 1E        	jr nz,8F
374+  917D
375+  917D              ; ---------- ---------- ----------
376+  917D
377+  917D              4
378+  917D CD 89 92     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  9180              ;	call Reinicio
380+  9180
381+  9180              ; ---------- ---------- ----------
382+  9180
383+  9180 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  9182 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  9183
386+  9183 2A A2 85     	ld hl,(Indice_Sprite_izq)
387+  9186 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
388+  9189
389+  9189 CD A2 91     	call DESPLZ_IZQ
390+  918C C1           	pop bc
391+  918D 10 F3        	djnz 5B
392+  918F 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  9192 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  9193 22 98 85     	ld (Posicion_actual),hl
395+  9196 CD D3 92     	call Genera_coordenadas
396+  9199 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  919B
398+  919B              ; ---------- ---------- ----------
399+  919B              ; Movemos, no hay recolocación.
400+  919B
401+  919B 2A 98 85     8 ld hl,(Posicion_actual)
402+  919E CD A2 91     	call DESPLZ_IZQ
403+  91A1 C9           2 ret
404+  91A2
405+  91A2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  91A2              ;
407+  91A2              ;	22/9/22
408+  91A2
409+  91A2              DESPLZ_IZQ
410+  91A2
411+  91A2 CD B1 91     	call Desplaza_izquierda
412+  91A5 CD FD 91         call modifica_parametros_1er_DESPLZ
413+  91A8 CD 25 92     	call Ciclo_completo_2
414+  91AB 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  91AE CB BE        	res 7,(hl)
416+  91B0 C9           	ret
417+  91B1
418+  91B1              Desplaza_izquierda
419+  91B1
420+  91B1 3A AB 85     	ld a,(Vel_left)
421+  91B4 47           	ld b,a
422+  91B5 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
423+  91B8 23           1 inc hl
424+  91B9 23           	inc hl
425+  91BA 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  91BC 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
427+  91BF CD 82 87     	call Extrae_address
428+  91C2 22 9A 85     	ld (Puntero_objeto),hl
429+  91C5
430+  91C5              ; Modifica (Puntero_DESPLZ_der).
431+  91C5
432+  91C5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  91C5              ; Cuántos movimientos hemos hecho ??
434+  91C5              ; DE contiene (Puntero_DESPLZ_izq).
435+  91C5
436+  91C5 2A A2 85     7 ld hl,(Indice_Sprite_izq)
437+  91C8 EB           	ex de,hl
438+  91C9 A7           	and a
439+  91CA ED 52        	sbc hl,de
440+  91CC CB 3D        	srl l
441+  91CE 3E 08        6 ld a,8
442+  91D0 95           	sub l
443+  91D1 30 1E        	jr nc,3F
444+  91D3
445+  91D3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  91D3              ; B="0".
447+  91D3
448+  91D3 04           4 inc b
449+  91D4 3C           	inc a
450+  91D5 20 FC        	jr nz,4B
451+  91D7 78           	ld a,b
452+  91D8 08           	ex af,af
453+  91D9 2A A2 85     	ld hl,(Indice_Sprite_izq)
454+  91DC 23           5 inc hl
455+  91DD 23           	inc hl
456+  91DE 10 FC        	djnz 5B
457+  91E0 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
458+  91E3 CD 82 87     	call Extrae_address
459+  91E6 22 9A 85     	ld (Puntero_objeto),hl
460+  91E9
461+  91E9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  91E9              ; _(Posicion_actual).
463+  91E9
464+  91E9 21 98 85     	ld hl,Posicion_actual
465+  91EC 35           	dec (hl)
466+  91ED 08           	ex af,af
467+  91EE 6F           	ld l,a
468+  91EF 18 DD        	jr 6B
469+  91F1
470+  91F1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  91F1
472+  91F1 47           3 ld b,a
473+  91F2 2A A0 85     	ld hl,(Indice_Sprite_der)
474+  91F5 23           2 inc hl
475+  91F6 23           	inc hl
476+  91F7 10 FC        	djnz 2B
477+  91F9 22 A4 85     	ld (Puntero_DESPLZ_der),hl
478+  91FC C9           8 ret
479+  91FD
480+  91FD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  91FD              ;
482+  91FD              ;	modifica_parametros_1er_DESPLZ
483+  91FD              ;
484+  91FD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  91FD              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  91FD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  91FD
488+  91FD 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  9200 A7           	and a
490+  9201 20 1E        	jr nz,1F
491+  9203 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  9204 32 9E 85         ld (CTRL_DESPLZ),a
493+  9207 21 97 85     	ld hl,Columns
494+  920A 34           	inc (hl)
495+  920B 3A AA 85     	ld a,(Cuad_objeto)
496+  920E E6 01        	and 1
497+  9210 20 0F        	jr nz,1F
498+  9212 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  9215 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  9216 22 98 85     	ld (Posicion_actual),hl
501+  9219 CD D3 92     	call Genera_coordenadas
502+  921C CD 78 92     	call Dec_CTRL_DESPLZ
503+  921F 18 03        	jr 2F
504+  9221 CD 78 92     1 call Dec_CTRL_DESPLZ
505+  9224 C9           2 ret
506+  9225
507+  9225              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  9225
509+  9225 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  9228 FE F7        	cp $f7
511+  922A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  922C 30 2C        	jr nc,3F
513+  922E
514+  922E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  922E
516+  922E 06 00        	ld b,0
517+  9230 04           4 inc b
518+  9231 3C           	inc a
519+  9232 FE F7        	cp $f7
520+  9234 20 FA        	jr nz,4B
521+  9236 3E FF        	ld a,$ff
522+  9238 90           	sub b
523+  9239 32 9E 85     	ld (CTRL_DESPLZ),a
524+  923C 18 1C        	jr 3F
525+  923E
526+  923E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  923E
528+  923E 21 97 85     1 ld hl,Columns
529+  9241 35           	dec (hl)
530+  9242 AF           	xor a
531+  9243 32 9E 85     	ld (CTRL_DESPLZ),a
532+  9246 3A AA 85     	ld a,(Cuad_objeto)
533+  9249 E6 01        	and 1
534+  924B 28 0A        	jr z,2F
535+  924D 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  9250 2B           	dec hl
537+  9251 22 98 85     	ld (Posicion_actual),hl
538+  9254 CD D3 92     	call Genera_coordenadas
539+  9257
540+  9257              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  9257
542+  9257 CD AC 87     2 call Inicia_puntero_objeto_izq
543+  925A C9           3 ret
544+  925B
545+  925B              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  925B              ;
547+  925B              ;	19/10/22
548+  925B              ;
549+  925B              ;	(cp 29) para un Amadeus de 3 Columns.
550+  925B              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  925B
552+  925B 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  925E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  9260 C9           	ret
555+  9261
556+  9261              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  9261              ;
558+  9261              ;	19/10/22
559+  9261              ;
560+  9261              ;	(cp 2) para un Amadeus de 3 Columns.
561+  9261              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  9261
563+  9261 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  9264 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  9266 C9           	ret
566+  9267
567+  9267              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  9267              ;
569+  9267              ;	24/7/22
570+  9267              ;
571+  9267              ;	Inc_CTRL_DESPLZ
572+  9267              ;
573+  9267              ;
574+  9267              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  9267
576+  9267 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  926A 3A AC 85     	ld a,(Vel_right)
578+  926D A7           	and a
579+  926E 28 06        	jr z,1F
580+  9270 47           	ld b,a
581+  9271 34           3 inc (hl)
582+  9272 10 FD        	djnz 3B
583+  9274 18 01        	jr 2F
584+  9276 34           1 inc (hl)
585+  9277 C9           2 ret
586+  9278
587+  9278              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  9278              ;
589+  9278              ;	5/2/23
590+  9278              ;
591+  9278              ;	Dec_CTRL_DESPLZ
592+  9278              ;
593+  9278              ;
594+  9278              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  9278
596+  9278 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  927B 3A AB 85     	ld a,(Vel_left)
598+  927E A7           	and a
599+  927F 28 06        	jr z,1F
600+  9281 47           	ld b,a
601+  9282 35           3 dec (hl)
602+  9283 10 FD        	djnz 3B
603+  9285 18 01        	jr 2F
604+  9287 35           1 dec (hl)
605+  9288 C9           2 ret
606+  9289
607+  9289              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  9289
609+  9289 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  928C 01 1F 00     	ld bc,31
611+  928F A7           	and a
612+  9290 ED 4A        	adc hl,bc
613+  9292 22 98 85     	ld (Posicion_actual),hl
614+  9295 21 C3 85     	ld hl,Ctrl_0														; $xxx1
615+  9298 CB C6        	set 0,(hl)
616+  929A C9           	ret
617+  929B
618+  929B              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  929B
620+  929B 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  929E 01 1F 00     	ld bc,31
622+  92A1 A7           	and a
623+  92A2 ED 42        	sbc hl,bc
624+  92A4 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
625+  92A7 21 C3 85     	ld hl,Ctrl_0
626+  92AA CB CE        	set 1,(hl)
627+  92AC C9           	ret
628+  92AD
629+  92AD              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  92AD
631+  92AD 24           Reaparece_abajo inc h
632+  92AE 01 E0 17     	ld bc,$17e0
633+  92B1 A7           	and a
634+  92B2 ED 4A        	adc hl,bc
635+  92B4 22 98 85     	ld (Posicion_actual),hl
636+  92B7 21 C3 85     	ld hl,Ctrl_0
637+  92BA CB D6        	set 2,(hl)
638+  92BC C9           	ret
639+  92BD
640+  92BD              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  92BD
642+  92BD 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  92C0 A7           	and a
644+  92C1 ED 42        	sbc hl,bc
645+  92C3 22 98 85     	ld (Posicion_actual),hl
646+  92C6 21 C3 85     	ld hl,Ctrl_0
647+  92C9 CB DE        	set 3,(hl)
648+  92CB C9           	ret
649+  92CC
650+  92CC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  92CC
652+  92CC 2A A8 85     Reinicio ld hl,(Posicion_inicio)
653+  92CF 22 98 85     	ld (Posicion_actual),hl
654+  92D2 C9           	ret
# file closed: Direcciones.asm
839   92D3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  92D3              ;	12/12/22
  2+  92D3              ;
  3+  92D3              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  92D3              ;	Fila superior "0", Columna izquierda "0".
  5+  92D3              ;
  6+  92D3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  92D3              ;
  8+  92D3              ;	Modifica: A
  9+  92D3
 10+  92D3 C5           Genera_coordenadas push bc
 11+  92D4 E5           	push hl
 12+  92D5 2A 98 85     	ld hl,(Posicion_actual)
 13+  92D8 7D           	ld a,l
 14+  92D9 E6 1F        	and $1f
 15+  92DB 32 9C 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  92DE CD A1 8F     	call calcula_tercio
 17+  92E1 47           	ld b,a
 18+  92E2 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  92E3 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  92E5 7D           	ld a,l
 21+  92E6 E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  92E8 28 05        	jr z,2F
 23+  92EA 0C           1 inc c
 24+  92EB D6 20        	sub 32
 25+  92ED 20 FB        	jr nz,1B
 26+  92EF 0C           2 inc c
 27+  92F0 04           	inc b
 28+  92F1 05           	dec b
 29+  92F2 28 04        	jr z,3F
 30+  92F4 3E E0        	ld a,$e0
 31+  92F6 10 F2        	djnz 1B
 32+  92F8 79           3 ld a,c
 33+  92F9 3D           	dec a
 34+  92FA 32 9D 85     	ld (Coordenada_y),a
 35+  92FD E1           	pop hl
 36+  92FE C1           	pop bc
 37+  92FF C9           	ret
# file closed: Genera_coordenadas.asm
840   9300              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  9300
  2+  9300
  3+  9300              ;   11/8/22
  4+  9300              ;
  5+  9300              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  9300              ;
  7+  9300              ;   Mov_obj.asm
  8+  9300              ;
  9+  9300              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  9300              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  9300              ;
 12+  9300              ;   Codificación:
 13+  9300              ;
 14+  9300              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  9300
 16+  9300              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  9300
 18+  9300 02 40 00     Arriba db 2,%01000000,0
 19+  9303 02 80 00     Abajo db 2,%10000000,0
 20+  9306 02 20 00     Derecha db 2,%00100000,0
 21+  9309 02 10 00     Izquierda db 2,%00010000,0
 22+  930C 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  9310 60 42 60 40
 22+  9314 63
 23+  9315 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9319 22 A3 80 A0
 24+  931D 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  9321 84 A0 83 A0
 25+  9325 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9329 80 A3 22 A0
 26+  932D 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  9331 40 60 42 60
 27+  9335 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9339 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  933D 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  9341 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  9345 84
 31+  9346 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  934A 84 00
 32+  934C 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  9350 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  9354 1F 1F 1F 1F
 34+  9358 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  935C 1F 1F 1F 1F
 34+  9360 1F
 35+  9361 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  9365 2F 2F 2F 2F
 35+  9369 2F 2F
 36+  936B 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  936F 2F 2F 00
 37+  9372
 38+  9372
 39+  9372              ; ----- ----- ----- ----- -----
 40+  9372
 41+  9372 50 93        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  9374 4C 93        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  9376 09 93        Indice_mov_Izquierda defw Izquierda
 44+  9378 06 93        Indice_mov_Derecha defw Derecha
 45+  937A 03 93        Indice_mov_Abajo defw Abajo
 46+  937C 00 93        Indice_mov_Arriba defw Arriba
 47+  937E 3D 93        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  9380 41 93        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  9382 39 93        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  9384 46 93        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  9386 0C 93        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  9388              ; ----- ----- ----- ----- -----
 53+  9388
 54+  9388 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  938B A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  938C 28 02            jr z,1F
 57+  938E 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  9390 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  9393 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  9395 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  9398              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  9398 2A C7 85         ld hl,(Puntero_mov)
 63+  939B 7E               ld a,(hl)
 64+  939C 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  939F 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  93A0 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  93A3
 68+  93A3 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  93A6 A7               and a
 70+  93A7 20 0C            jr nz,12F
 71+  93A9 2A C7 85         ld hl,(Puntero_mov)
 72+  93AC 7E               ld a,(hl)
 73+  93AD A7               and a
 74+  93AE 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  93B0 E6 0F            and $0f
 76+  93B2 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  93B5              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  93B5 2A C7 85     12 ld hl,(Puntero_mov)
 79+  93B8 CB 7E            bit 7,(hl)
 80+  93BA 28 03            jr z,2F
 81+  93BC CD BF 8F         call Mov_down
 82+  93BF 2A C7 85     2 ld hl, (Puntero_mov)
 83+  93C2 CB 76            bit 6,(hl)
 84+  93C4 28 03            jr z,3F
 85+  93C6 CD ED 8F         call Mov_up
 86+  93C9 2A C7 85     3 ld hl, (Puntero_mov)
 87+  93CC CB 6E            bit 5,(hl)
 88+  93CE 28 03            jr z,4F
 89+  93D0 CD 1B 90         call Mov_right
 90+  93D3 2A C7 85     4 ld hl, (Puntero_mov)
 91+  93D6 CB 66            bit 4,(hl)
 92+  93D8 28 03            jr z,5F
 93+  93DA CD 39 91         call Mov_left
 94+  93DD
 95+  93DD              ; ---------- --------- --------- ---------- ----------
 96+  93DD
 97+  93DD 3A CB 85     5 ld a,(Repetimos_db)
 98+  93E0 A7               and a
 99+  93E1 28 07            jr z,6F
100+  93E3 3D               dec a
101+  93E4 32 CB 85         ld (Repetimos_db),a
102+  93E7 28 01            jr z,6f
103+  93E9 C9           11 ret
104+  93EA 21 C9 85     6 ld hl,Contador_db_mov
105+  93ED 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  93EE 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  93F1 23               inc hl
108+  93F2 22 C7 85         ld (Puntero_mov),hl
109+  93F5 18 F2            jr 11B
110+  93F7 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  93FA 3A CA 85         ld a,(Incrementa_puntero)
112+  93FD 47               ld b,a
113+  93FE 23           8 inc hl
114+  93FF 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  9401 5E               ld e,(hl)
116+  9402 23               inc hl
117+  9403 56               ld d,(hl)
118+  9404 EB               ex de,hl
119+  9405 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9408 18 DF            jr 11B
121+  940A
122+  940A              ; ---------- --------- --------- ---------- ----------
123+  940A              ;
124+  940A              ;   11/8/22
125+  940A              ;
126+  940A              ;   Prepara_Puntero_mov
127+  940A
128+  940A E5           Prepara_Puntero_mov push hl
129+  940B D5               push de
130+  940C 2A C5 85         ld hl,(Puntero_indice_mov)
131+  940F 5E               ld e,(hl)
132+  9410 23               inc hl
133+  9411 56               ld d,(hl)
134+  9412 EB               ex de,hl
135+  9413 22 C7 85         ld (Puntero_mov),hl
136+  9416 D1               pop de
137+  9417 E1               pop hl
138+  9418 C9               ret
139+  9419
140+  9419              ; ---------- --------- --------- ---------- ----------
141+  9419              ;
142+  9419              ;   11/8/22
143+  9419              ;
144+  9419              ;   Reinicia_el_movimiento
145+  9419
146+  9419 CD 0A 94     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  941C AF               xor a
148+  941D 32 C9 85         ld (Contador_db_mov),a
149+  9420 32 CA 85         ld (Incrementa_puntero),a
150+  9423
151+  9423              ;    jr $
152+  9423
153+  9423 C3 88 93         jp Movimiento
154+  9426 C9               ret
155+  9427              ; ---------- --------- --------- ---------- ----------
156+  9427
157+  9427
158+  9427
159+  9427
160+  9427
161+  9427
162+  9427
163+  9427
164+  9427
165+  9427
166+  9427
167+  9427
168+  9427
169+  9427
170+  9427
171+  9427
172+  9427
173+  9427
# file closed: Patrones_de_mov.asm
841   9427              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9427              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9427              ;
  3+  9427              ;	3/1/23
  4+  9427              ;
  5+  9427              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9427
  7+  9427              ;	ADC HL,SP	LD (addr),SP
  8+  9427              ;	ADD HL,SP	LD SP,(addr)
  9+  9427              ;	ADD IX,SP	LD SP,nn
 10+  9427              ; 	ADD IY,SP	LD SP,HL
 11+  9427              ;				LD SP,IX
 12+  9427              ;	DEC SP		LD SP,IY
 13+  9427
 14+  9427              ;	EX (SP),HL
 15+  9427              ;	EX (SP),IX
 16+  9427              ;	EX (SP),IY
 17+  9427
 18+  9427              ;	INC SP
 19+  9427
 20+  9427
 21+  9427                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
842   7FD4
843   7FD4              	SAVESNA "Pruebas.sna", START
844   7FD4
845   7FD4
846   7FD4
# file closed: Banco_de_pruebas.asm
