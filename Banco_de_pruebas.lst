# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              FRAME
  14  AA01
  15  AA01 08           	ex af,af'
  16  AA02 F5           	push af	;af'
  17  AA03 D9           	exx
  18  AA04 E5           	push hl	;hl'
  19  AA05 D5           	push de	;de'
  20  AA06 C5           	push bc	;bc'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl
  23  AA09 D5           	push de	;de
  24  AA0A C5           	push bc	;bc
  25  AA0B 08           	ex af,af'
  26  AA0C F5           	push af	;af
  27  AA0D DD E5        	push ix
  28  AA0F FD E5        	push iy
  29  AA11
  30  AA11 3E 02        	ld a,2
  31  AA13 D3 FE        	out ($fe),a
  32  AA15
  33  AA15 3A 08 8A     	ld a,(Ctrl_3)
  34  AA18 CB 47        	bit 0,a
  35  AA1A 28 2C        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  36  AA1C CB 57        	bit 2,a
  37  AA1E 28 28        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  38  AA20
  39  AA20              Borrando
  40  AA20
  41  AA20 2A 02 8A     	ld hl,(Scanlines_album_SP)
  42  AA23 CD 17 8D     	call Extrae_address
  43  AA26
  44  AA26 24           	inc h
  45  AA27 25           	dec h
  46  AA28 28 05        	jr z,Pintando
  47  AA2A
  48  AA2A CD 19 91     	call Pinta_Sprites
  49  AA2D
  50  AA2D 18 F1        	jr Borrando
  51  AA2F
  52  AA2F              Pintando
  53  AA2F
  54  AA2F 2A 04 8A     	ld hl,(India_SP)
  55  AA32 2C           	inc l
  56  AA33 CD 17 8D     	call Extrae_address
  57  AA36
  58  AA36 24           	inc h
  59  AA37 25           	dec h
  60  AA38 28 0E        	jr z,1F
  61  AA3A
  62  AA3A 1C           	inc e
  63  AA3B 1C           	inc e
  64  AA3C
  65  AA3C ED 53 04 8A  	ld (India_SP),de
  66  AA40
  67  AA40 CD 17 8D     	call Extrae_address
  68  AA43
  69  AA43 CD 19 91     	call Pinta_Sprites
  70  AA46
  71  AA46 18 E7        	jr Pintando
  72  AA48
  73  AA48              ; Posible colisión Entidad-Amadeus ???
  74  AA48
  75  AA48              ;	ld a,(Impacto2)
  76  AA48              ;	bit 2,a
  77  AA48              ;	jr z,1F
  78  AA48
  79  AA48              ;	call Detecta_colision_nave_entidad
  80  AA48
  81  AA48              ;1 ld a,4
  82  AA48              ;	out ($fe),a
  83  AA48              ;	call Gestiona_Amadeus
  84  AA48
  85  AA48              ;	ld a,7
  86  AA48              ;	out ($fe),a											; Borde blanco.
  87  AA48              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  88  AA48              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  89  AA48
  90  AA48              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  91  AA48
  92  AA48              ;	call Recupera_parametros_DRAW
  93  AA48
  94  AA48 3A 08 8A     1 ld a,(Ctrl_3)
  95  AA4B CB 47        	bit 0,a
  96  AA4D 28 03        	jr z,2F 											; No actualizamos FRAMES si el último cuadro no se completó.
  97  AA4F
  98  AA4F CD 38 00     	call ROM_keyboard									; Actualiza FRAMES y ejecuta las rutinas de teclado de la ROM.
  99  AA52
 100  AA52 21 08 8A     2 ld hl,Ctrl_3
 101  AA55 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
 102  AA57 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
 103  AA59
 104  AA59              ;	call Recupera_todos_los_registros
 105  AA59
 106  AA59 FD E1            pop iy
 107  AA5B DD E1        	pop ix
 108  AA5D F1           	pop af
 109  AA5E C1           	pop bc
 110  AA5F D1           	pop de
 111  AA60 E1           	pop hl
 112  AA61 D9           	exx
 113  AA62 C1           	pop bc
 114  AA63 D1           	pop de
 115  AA64 E1           	pop hl
 116  AA65 08           	ex af,af'
 117  AA66 F1           	pop af
 118  AA67 08           	ex af,af'
 119  AA68 D9           	exx
 120  AA69
 121  AA69 FB           	ei
 122  AA6A
 123  AA6A 3E 01        	ld a,1												; Borde azul.
 124  AA6C D3 FE        	out ($fe),a
 125  AA6E
 126  AA6E C9           	ret
 127  AA6F
 128  AA6F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 129  AA6F
 130  AA6F              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA6F              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA6F              ;
   3+ AA6F              ;	17/02/23
   4+ AA6F              ;
   5+ AA6F              ;	Sprites e índices.
   6+ AA6F
   7+ AA6F              	org $8120
   8+ 8120
   9+ 8120              ; Disparo.
  10+ 8120
  11+ 8120 28 81        Indice_disparo defw Disparo_0
  12+ 8122 2E 81        	defw Disparo_f9
  13+ 8124 34 81        	defw Disparo_fb
  14+ 8126 3A 81        	defw Disparo_fd
  15+ 8128
  16+ 8128              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8128 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 812C 01 80
  18+ 812E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 812E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8132 00 60
  20+ 8134              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8134 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8138 18 00
  22+ 813A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 813A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 813E 06 00
  24+ 8140
  25+ 8140              ; ----------------------------------------------------------------------------------------
  26+ 8140
  27+ 8140              ; Badsat_izq. 2x2.
  28+ 8140
  29+ 8140 50 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8142 C0 82        	defw Badsat_izq_fe
  31+ 8144 90 82        	defw Badsat_izq_fd
  32+ 8146 60 82        	defw Badsat_izq_fc
  33+ 8148 30 82        	defw Badsat_izq_fb
  34+ 814A 00 82        	defw Badsat_izq_fa
  35+ 814C B0 81        	defw Badsat_izq_f9
  36+ 814E 80 81        	defw Badsat_izq_f8
  37+ 8150
  38+ 8150 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8153 02 14 00     	DEFB 	$02,$14,$00
  40+ 8156 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8159 02 55 00     	DEFB 	$02,$55,$00
  42+ 815C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 815F 02 54 00     	DEFB 	$02,$54,$00
  44+ 8162 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 8165 03 60 00     	DEFB 	$03,$60,$00
  46+ 8168 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 816B 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 816E 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 8171 54 40 00     	DEFB 	$54,$40,$00
  50+ 8174 AA 60 00     	DEFB	$AA,$60,$00
  51+ 8177 54 00 00     	DEFB 	$54,$00,$00
  52+ 817A 28 00 00     	DEFB 	$28,$00,$00
  53+ 817D 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 8180
  55+ 8180 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 8184 0A 00 01 15
  56+ 8188 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 818C 01 55 00 01
  57+ 8190 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 8194 00 01 B0 00
  58+ 8198 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 819C FC 00 15 F4
  59+ 81A0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 81A4 55 30 00 2A
  60+ 81A8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 81AC 00 08 00 00
  61+ 81B0
  62+ 81B0 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  62+ 81B4 85 00 00 8A
  63+ 81B8 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  63+ 81BC 00 AA 80 00
  64+ 81C0 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  64+ 81C4 00 00 D8 00
  65+ 81C8 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  65+ 81CC FE 00 0A FA
  66+ 81D0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  66+ 81D4 2A 98 00 15
  67+ 81D8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  67+ 81DC 00 04 00 00
  68+ 81E0
  69+ 81E0
  70+ 81E0              ;! 39 bytes libres aquí !!!!!
  71+ 81E0
  72+ 81E0              	org $8200
  73+ 8200
  74+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  74+ 8204 42 80 00 45
  75+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  75+ 820C 00 55 40 00
  76+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  76+ 8214 00 00 6C 00
  77+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  77+ 821C FF 00 05 7D
  78+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  78+ 8224 15 4C 00 0A
  79+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  79+ 822C 00 02 00 00
  80+ 8230
  81+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  81+ 8234 21 40 00 22
  82+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  82+ 823C 00 2A A0 00
  83+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  83+ 8244 80 00 36 00
  84+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  84+ 824C 7F 80 02 BE
  85+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  85+ 8254 0A A6 00 05
  86+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  86+ 825C 00 01 00 00
  87+ 8260
  88+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  88+ 8264 10 A0 00 11
  89+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  89+ 826C 00 15 50 00
  90+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  90+ 8274 40 00 1B 00
  91+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  91+ 827C BF C0 01 5F
  92+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  92+ 8284 05 53 00 02
  93+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  93+ 828C 00 00 80 00
  94+ 8290
  95+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  95+ 8294 08 50 00 08
  96+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  96+ 829C 00 0A A8 00
  97+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  97+ 82A4 A0 00 0D 80
  98+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  98+ 82AC 5F F8 00 AF
  99+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  99+ 82B4 02 A9 00 01
 100+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 100+ 82BC 00 00 40 00
 101+ 82C0
 102+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 102+ 82C4 04 28 00 04
 103+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 103+ 82CC 00 05 54 00
 104+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 104+ 82D4 D0 00 06 C0
 105+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 105+ 82DC 2F FC 00 57
 106+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 106+ 82E4 01 54 80 00
 107+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 107+ 82EC 00 00 20 00
 108+ 82F0
 109+ 82F0
 110+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
 111+ 82F2 30 83        	defw Badsat_der_f8
 112+ 82F4 60 83        	defw Badsat_der_f9
 113+ 82F6 90 83        	defw Badsat_der_fa
 114+ 82F8 C0 83        	defw Badsat_der_fb
 115+ 82FA 00 84        	defw Badsat_der_fc
 116+ 82FC 30 84        	defw Badsat_der_fd
 117+ 82FE 60 84        	defw Badsat_der_fe
 118+ 8300
 119+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 120+ 8303 28 40 00     	DEFB    $28,$40,$00
 121+ 8306 54 40 00     	DEFB	$54,$40,$00
 122+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 123+ 830C 55 40 00     	DEFB	$55,$40,$00
 124+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 125+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 126+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 127+ 8318 07 50 00     	DEFB	$07,$50,$00
 128+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 129+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 130+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 131+ 8324 06 55 00     	DEFB	$06,$55,$00
 132+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 133+ 832A 00 14 00     	DEFB	$00,$14,$00
 134+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 135+ 8330
 136+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 136+ 8334 20 00 2A 20
 137+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 137+ 833C 2A A0 00 15
 138+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 138+ 8344 00 03 60 00
 139+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 139+ 834C F4 00 0B EA
 140+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 140+ 8354 03 2A 80 00
 141+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 141+ 835C 00 00 04 00
 142+ 8360
 143+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 143+ 8364 10 00 15 10
 144+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 144+ 836C 15 50 00 0A
 145+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 145+ 8374 80 01 B0 00
 146+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 146+ 837C FA 00 05 F5
 147+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 147+ 8384 01 95 40 00
 148+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 148+ 838C 00 00 02 00
 149+ 8390
 150+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 150+ 8394 08 00 0A 88
 151+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 151+ 839C 0A A8 00 05
 152+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 152+ 83A4 C0 00 D8 00
 153+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 153+ 83AC FD 00 02 FA
 154+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 154+ 83B4 00 CA A0 00
 155+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 155+ 83BC 80 00 01 00
 156+ 83C0
 157+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 157+ 83C4 84 00 05 44
 158+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 158+ 83CC 05 54 00 02
 159+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 159+ 83D4 E0 00 6C 00
 160+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 160+ 83DC FE 80 01 7D
 161+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 161+ 83E4 00 65 50 00
 162+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 162+ 83EC 40 00 00 80
 163+ 83F0
 164+ 83F0              ;! 16 bytes libres aquí !!!!!
 165+ 83F0
 166+ 83F0              	org $8400
 167+ 8400
 168+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 168+ 8404 42 00 02 A2
 169+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 169+ 840C 02 AA 00 01
 170+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 170+ 8414 F0 00 36 00
 171+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 171+ 841C FF 40 00 BE
 172+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 172+ 8424 00 32 A8 00
 173+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 173+ 842C A0 00 00 40
 174+ 8430
 175+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 175+ 8434 A1 00 01 51
 176+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 176+ 843C 01 55 00 00
 177+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 177+ 8444 F8 00 1B 00
 178+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 178+ 844C FF A0 00 1F
 179+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 179+ 8454 00 09 54 00
 180+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 180+ 845C 50 00 00 20
 181+ 8460
 182+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 182+ 8464 50 80 00 A8
 183+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 183+ 846C 00 AA 80 00
 184+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 184+ 8474 FC 00 0D 80
 185+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 185+ 847C FF D0 00 0F
 186+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 186+ 8484 00 04 AA 00
 187+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 187+ 848C 28 00 00 10
 188+ 8490
 189+ 8490              ; ----------------------------------------------------------------------------------------
 190+ 8490
 191+ 8490              ; Amadeus. 2x2.
 192+ 8490
 193+ 8490              ;	org $8119
 194+ 8490
 195+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 196+ 8492 00 00        	defw 0
 197+ 8494 E0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 8496 00 00        	defw 0
 199+ 8498 10 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 849A 00 00        	defw 0
 201+ 849C 40 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 849E 00 00        	defw 0	 								; (Fín de índice).
 203+ 84A0
 204+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 205+ 84A2 00 00        	defw 0
 206+ 84A4 40 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 84A6 00 00        	defw 0
 208+ 84A8 10 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 84AA 00 00        	defw 0
 210+ 84AC E0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 212+ 84B0
 213+ 84B0 01 80 00     Amadeus DEFB $01,$80,0
 214+ 84B3 23 C4 00     	DEFB	$23,$C4,0
 215+ 84B6 26 64 00     	DEFB	$26,$64,0
 216+ 84B9 24 24 00     	DEFB	$24,$24,0
 217+ 84BC 2C 34 00     	DEFB	$2C,$34,0
 218+ 84BF 6D B6 00     	DEFB	$6D,$B6,0
 219+ 84C2 6F F6 00     	DEFB	$6F,$F6,0
 220+ 84C5 67 E6 00     	DEFB	$67,$E6,0
 221+ 84C8 E7 E7 00     	DEFB	$E7,$E7,0
 222+ 84CB F3 CF 00     	DEFB	$F3,$CF,0
 223+ 84CE F7 EF 00     	DEFB	$F7,$EF,0
 224+ 84D1 FF FF 00     	DEFB	$FF,$FF,0
 225+ 84D4 FB DF 00     	DEFB	$FB,$DF,0
 226+ 84D7 FB DF 00     	DEFB	$FB,$DF,0
 227+ 84DA 8B D1 00     	DEFB	$8B,$D1,0
 228+ 84DD 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 229+ 84E0
 230+ 84E0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 230+ 84E4 F1 00 09 99
 231+ 84E8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 231+ 84EC 0B 0D 00 1B
 232+ 84F0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 232+ 84F4 80 19 F9 80
 233+ 84F8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 233+ 84FC F3 C0 3D FB
 234+ 8500 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 234+ 8504 3E F7 C0 3E
 235+ 8508 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 235+ 850C 40 1C 63 80
 236+ 8510
 237+ 8510 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 237+ 8514 3C 40 02 66
 238+ 8518 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 238+ 851C 02 C3 40 06
 239+ 8520 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 239+ 8524 60 06 7E 60
 240+ 8528 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 240+ 852C 3C F0 0F 7E
 241+ 8530 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 241+ 8534 0F BD F0 0F
 242+ 8538 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 242+ 853C 10 07 18 E0
 243+ 8540
 244+ 8540 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 244+ 8544 8F 10 00 99
 245+ 8548 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 245+ 854C 00 B0 D0 01
 246+ 8550 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 246+ 8554 D8 01 9F 98
 247+ 8558 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 247+ 855C CF 3C 03 DF
 248+ 8560 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 248+ 8564 03 EF 7C 03
 249+ 8568 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 249+ 856C 44 01 C6 38
 250+ 8570
 251+ 8570              ; ----------------------------------------------------------------------------------------
 252+ 8570
 253+ 8570              ;	org $8690
 254+ 8570
 255+ 8570 76 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 256+ 8572 A6 85        	defw Explosion_2x3_2
 257+ 8574 D6 85        	defw Explosion_2x3_3
 258+ 8576
 259+ 8576 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 259+ 857A 10 00 04 38
 260+ 857E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 260+ 8582 02 E6 80 01
 261+ 8586 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 261+ 858A 00 03 DD 80
 262+ 858E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 262+ 8592 3B 80 01 9D
 263+ 8596 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 263+ 859A 02 FD 80 03
 264+ 859E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 264+ 85A2 00 08 00 00
 265+ 85A6
 266+ 85A6 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 266+ 85AA 38 10 03 BC
 267+ 85AE 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 267+ 85B2 04 06 C0 00
 268+ 85B6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 268+ 85BA 00 03 DD 80
 269+ 85BE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 269+ 85C2 3A 70 01 9C
 270+ 85C6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 270+ 85CA 04 F8 80 06
 271+ 85CE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 271+ 85D2 00 00 00 00
 272+ 85D6
 273+ 85D6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 273+ 85DA 00 20 08 00
 274+ 85DE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 274+ 85E2 00 06 00 00
 275+ 85E6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 275+ 85EA 00 00 14 30
 276+ 85EE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 276+ 85F2 38 00 01 08
 277+ 85F6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 277+ 85FA 00 80 00 04
 278+ 85FE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 278+ 8602 10 08 00 20
 279+ 8606
 280+ 8606              ; ------------------------------------------
 281+ 8606
 282+ 8606 0C 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 283+ 8608 2C 86        	defw Explosion_2x2_2
 284+ 860A 4C 86        	defw Explosion_2x2_3
 285+ 860C
 286+ 860C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 286+ 8610 43 84 37 D8
 287+ 8614 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 287+ 8618 17 F0 3D D8
 288+ 861C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 288+ 8620 19 D0 1F 60
 289+ 8624 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 289+ 8628 40 00 80 00
 290+ 862C
 291+ 862C
 292+ 862C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 292+ 8630 3B C2 60 0C
 293+ 8634 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 293+ 8638 07 F0 3D D8
 294+ 863C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 294+ 8640 19 C6 1F 64
 295+ 8644 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 295+ 8648 80 00 00 00
 296+ 864C
 297+ 864C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 297+ 8650 88 04 10 0C
 298+ 8654 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 298+ 8658 81 E0 01 43
 299+ 865C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 299+ 8660 10 80 18 00
 300+ 8664 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 300+ 8668 60 01 80 02
 301+ 866C
 302+ 866C
 303+ 866C
 304+ 866C
 305+ 866C
# file closed: Sprites_e_indices.asm
 131  866C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 866C              ; ---------------------------------------------------------------------
   2+ 866C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 866C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 866C              ; ---------------------------------------------------------------------
   5+ 866C
   6+ 866C              ; 27/03/24
   7+ 866C              ;
   8+ 866C              ;	En esta tabla iremos almacenando:
   9+ 866C              ;
  10+ 866C              ;	(Columna_Y),(mem.address de los scanlines masticados en el Scanlines_album) de cada entidad en curso.
  11+ 866C
  12+ 866C 00 00 00...  Numeros_aleatorios ds 7
  13+ 8673
  14+ 8673 00 00 00...  Tabla_de_pintado ds 24
  15+ 868B
  16+ 868B              ;	db 0, defw 0
  17+ 868B              ;	db 0, defw 0
  18+ 868B              ;	db 0, defw 0
  19+ 868B              ;	db 0, defw 0
  20+ 868B              ;	db 0, defw 0
  21+ 868B              ;	db 0, defw 0
  22+ 868B              ;	db 0, defw 0
  23+ 868B
  24+ 868B E4 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  25+ 868D              ;	defw ...
  26+ 868D              ; 	defw ...
  27+ 868D 00 00        	defw 0
  28+ 868F
  29+ 868F              ; Control. %00000001 00000001
  30+ 868F              ;
  31+ 868F              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  32+ 868F              ;                    _ hacen las entidades hacia abajo.
  33+ 868F              ;
  34+ 868F              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  35+ 868F
  36+ 868F 95 86        Indice_de_disparos_Amadeus defw Disparo_1A
  37+ 8691 9D 86        	defw Disparo_2A
  38+ 8693 A5 86        	defw Disparo_3A
  39+ 8695
  40+ 8695 00 00        Disparo_1A defw 0									; Control.
  41+ 8697 00 00        	defw 0											; Puntero objeto.
  42+ 8699 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  43+ 869B 00 00        	defw 0											; Rutina de impresión.
  44+ 869D
  45+ 869D 00 00        Disparo_2A defw 0									; Control.
  46+ 869F 00 00        	defw 0											; Puntero objeto.
  47+ 86A1 00 00        	defw 0											; Puntero de impresión.
  48+ 86A3 00 00        	defw 0											; Rutina de impresión.
  49+ 86A5
  50+ 86A5 00 00        Disparo_3A defw 0
  51+ 86A7
  52+ 86A7 BD 86        Indice_de_disparos_entidades defw Disparo_1
  53+ 86A9 C5 86        	defw Disparo_2
  54+ 86AB CD 86        	defw Disparo_3
  55+ 86AD D5 86        	defw Disparo_4
  56+ 86AF DD 86        	defw Disparo_5
  57+ 86B1 E5 86        	defw Disparo_6
  58+ 86B3 ED 86        	defw Disparo_7
  59+ 86B5 F5 86        	defw Disparo_8
  60+ 86B7 FD 86        	defw Disparo_9
  61+ 86B9 05 87        	defw Disparo_10
  62+ 86BB 0D 87        	defw Disparo_11
  63+ 86BD
  64+ 86BD 00 00        Disparo_1 defw 0									; Control.
  65+ 86BF 00 00        	defw 0											; Puntero objeto.
  66+ 86C1 00 00        	defw 0											; Puntero de impresión.
  67+ 86C3 00 00        	defw 0											; Rutina de impresión.
  68+ 86C5
  69+ 86C5 00 00        Disparo_2 defw 0									; Control.
  70+ 86C7 00 00        	defw 0											; Puntero objeto.
  71+ 86C9 00 00        	defw 0											; Puntero de impresión.
  72+ 86CB 00 00        	defw 0											; Rutina de impresión.
  73+ 86CD
  74+ 86CD 00 00        Disparo_3 defw 0									; Control.
  75+ 86CF 00 00        	defw 0											; Puntero objeto.
  76+ 86D1 00 00        	defw 0											; Puntero de impresión.
  77+ 86D3 00 00        	defw 0											; Rutina de impresión.
  78+ 86D5
  79+ 86D5 00 00        Disparo_4 defw 0									; Control.
  80+ 86D7 00 00        	defw 0											; Puntero objeto.
  81+ 86D9 00 00        	defw 0											; Puntero de impresión.
  82+ 86DB 00 00        	defw 0											; Rutina de impresión.
  83+ 86DD
  84+ 86DD 00 00        Disparo_5 defw 0									; Control.
  85+ 86DF 00 00        	defw 0											; Puntero objeto.
  86+ 86E1 00 00        	defw 0											; Puntero de impresión.
  87+ 86E3 00 00        	defw 0											; Rutina de impresión.
  88+ 86E5
  89+ 86E5 00 00        Disparo_6 defw 0									; Control.
  90+ 86E7 00 00        	defw 0											; Puntero objeto.
  91+ 86E9 00 00        	defw 0											; Puntero de impresión.
  92+ 86EB 00 00        	defw 0											; Rutina de impresión.
  93+ 86ED
  94+ 86ED 00 00        Disparo_7 defw 0									; Control.
  95+ 86EF 00 00        	defw 0											; Puntero objeto.
  96+ 86F1 00 00        	defw 0											; Puntero de impresión.
  97+ 86F3 00 00        	defw 0											; Rutina de impresión.
  98+ 86F5
  99+ 86F5 00 00        Disparo_8 defw 0									; Control.
 100+ 86F7 00 00        	defw 0											; Puntero objeto.
 101+ 86F9 00 00        	defw 0											; Puntero de impresión.
 102+ 86FB 00 00        	defw 0											; Rutina de impresión.
 103+ 86FD
 104+ 86FD 00 00        Disparo_9 defw 0									; Control.
 105+ 86FF 00 00        	defw 0											; Puntero objeto.
 106+ 8701 00 00        	defw 0											; Puntero de impresión.
 107+ 8703 00 00        	defw 0											; Rutina de impresión.
 108+ 8705
 109+ 8705 00 00        Disparo_10 defw 0									; Control.
 110+ 8707 00 00        	defw 0											; Puntero objeto.
 111+ 8709 00 00        	defw 0											; Puntero de impresión.
 112+ 870B 00 00        	defw 0											; Rutina de impresión.
 113+ 870D
 114+ 870D 00 00        Disparo_11 defw 0
 115+ 870F
 116+ 870F              ; -------------------------------------------------------------------------------------
 117+ 870F              ;
 118+ 870F              ;	Índice de cajas de entidades.
 119+ 870F              ;
 120+ 870F              ;	18/1/24
 121+ 870F              ;
 122+ 870F
 123+ 870F              Indice_de_cajas_de_entidades
 124+ 870F
 125+ 870F 57 87        	defw Caja_1
 126+ 8711 65 87        	defw Caja_2
 127+ 8713 73 87        	defw Caja_3
 128+ 8715 81 87        	defw Caja_4
 129+ 8717 8F 87        	defw Caja_5
 130+ 8719 9D 87        	defw Caja_6
 131+ 871B AB 87        	defw Caja_7
 132+ 871D
 133+ 871D 00 00        	defw 0
 134+ 871F 00 00        	defw 0
 135+ 8721
 136+ 8721              ; ---------- ---------- ---------- ---------- ----------
 137+ 8721
 138+ 8721 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 139+ 8724 00 00        	defw 0		 										; (Posicion_actual).
 140+ 8726 00 00        	defw 0	 											; (Puntero_objeto).
 141+ 8728 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 142+ 872A
 143+ 872A 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 144+ 872B 05           	db %00000101										; (Attr).
 145+ 872C 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 146+ 872E A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 147+ 8730 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 148+ 8732 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 149+ 8734 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 150+ 8736 04           	db 4 												; (Cuad_objeto).
 151+ 8737 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 152+ 8738 00 00 00...  	ds 6												; Variables_de_borrado
 153+ 873E
 154+ 873E 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 155+ 8740
 156+ 8740              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 157+ 8740 00 00        	defw 0
 158+ 8742 00 00        	defw 0 												; Contador_de_mov_masticados
 159+ 8744 40           	db $40												; (Ctrl_0).
 160+ 8745 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 160+ 8749 00 00
 161+ 874B 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 162+ 874E 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 163+ 8750 00           	db 0												; (Cola_de_desplazamiento).
 164+ 8751 00           	db 0 												; (Columnas).
 165+ 8752 00 00        	defw 0												; (Limite_horizontal).
 166+ 8754 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 167+ 8757
 168+ 8757              ; ---------- ---------- ---------- ---------- ----------
 169+ 8757              ;
 170+ 8757              ;	22/01/24
 171+ 8757              ;
 172+ 8757              ; 	Cada caja tiene 14 bytes !!!
 173+ 8757
 174+ 8757 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 175+ 875A 00           	db 0												; (Contador_de_vueltas).
 176+ 875B 00           	db 0												; (Impacto).
 177+ 875C 00 00        	defw 0												; (Puntero_de_impresion).
 178+ 875E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 179+ 8760 00 00        	defw 0 												; (Contador_de_mov_masticados).
 180+ 8762 00           	db 0												; (Ctrl_0).
 181+ 8763 00           	db 0												; (Ctrl_2).
 182+ 8764 00           	db 0												; (Velocidad).
 183+ 8765
 184+ 8765              ; ---------- ---------- ---------- ---------- ----------
 185+ 8765
 186+ 8765 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 187+ 8768 00           	db 0 												; (Contador_de_vueltas).
 188+ 8769 00           	db 0												; (Impacto).
 189+ 876A 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 876C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 876E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 8770 00           	db 0												; (Ctrl_0).
 193+ 8771 00           	db 0												; (Ctrl_2).
 194+ 8772 00           	db 0												; (Velocidad).
 195+ 8773
 196+ 8773              ; ---------- ---------- ---------- ---------- ----------
 197+ 8773
 198+ 8773 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 199+ 8776 00           	db 0 												; (Contador_de_vueltas).
 200+ 8777 00           	db 0												; (Impacto).
 201+ 8778 00 00        	defw 0												; (Puntero_de_impresion).
 202+ 877A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 203+ 877C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 204+ 877E 00           	db 0												; (Ctrl_0).
 205+ 877F 00           	db 0												; (Ctrl_2).
 206+ 8780 00           	db 0												; (Velocidad).
 207+ 8781
 208+ 8781              ; ---------- ---------- ---------- ---------- ----------
 209+ 8781
 210+ 8781 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 8784 00           	db 0 												; (Contador_de_vueltas).
 212+ 8785 00           	db 0												; (Impacto).
 213+ 8786 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8788 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 878A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 878C 00           	db 0												; (Ctrl_0).
 217+ 878D 00           	db 0												; (Ctrl_2).
 218+ 878E 00           	db 0												; (Velocidad).
 219+ 878F
 220+ 878F              ; ---------- ---------- ---------- ---------- ----------
 221+ 878F
 222+ 878F 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 223+ 8792 00           	db 0 												; (Contador_de_vueltas).
 224+ 8793 00           	db 0												; (Impacto).
 225+ 8794 00 00        	defw 0												; (Puntero_de_impresion).
 226+ 8796 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 227+ 8798 00 00        	defw 0 												; (Contador_de_mov_masticados).
 228+ 879A 00           	db 0												; (Ctrl_0).
 229+ 879B 00           	db 0												; (Ctrl_2).
 230+ 879C 00           	db 0												; (Velocidad).
 231+ 879D
 232+ 879D              ; ---------- ---------- ---------- ---------- ----------
 233+ 879D
 234+ 879D 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 87A0 00           	db 0 												; (Contador_de_vueltas).
 236+ 87A1 00           	db 0												; (Impacto).
 237+ 87A2 00 00        	defw 0												; (Puntero_de_impresion).
 238+ 87A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 239+ 87A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 240+ 87A8 00           	db 0												; (Ctrl_0).
 241+ 87A9 00           	db 0												; (Ctrl_2).
 242+ 87AA 00           	db 0												; (Velocidad).
 243+ 87AB
 244+ 87AB              ; ---------- ---------- ---------- ---------- ----------
 245+ 87AB
 246+ 87AB 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 87AE 00           	db 0 												; (Contador_de_vueltas).
 248+ 87AF 00           	db 0												; (Impacto).
 249+ 87B0 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 87B2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 87B4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 87B6 00           	db 0												; (Ctrl_0).
 253+ 87B7 00           	db 0												; (Ctrl_2).
 254+ 87B8 00           	db 0												; (Velocidad).
 255+ 87B9
 256+ 87B9              ; -------------------------------------------------------------------------------------
 257+ 87B9              ;
 258+ 87B9              ;	11/1/24
 259+ 87B9              ;
 260+ 87B9              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 261+ 87B9              ;
 262+ 87B9              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 263+ 87B9              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 264+ 87B9              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 265+ 87B9              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 266+ 87B9
 267+ 87B9              Indice_de_definiciones_de_entidades
 268+ 87B9
 269+ 87B9 BD 87        	defw Entidad_1
 270+ 87BB CA 87        	defw Entidad_2
 271+ 87BD
 272+ 87BD              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 273+ 87BD
 274+ 87BD              ;	BADSAT, (Satélite malvado).
 275+ 87BD
 276+ 87BD 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 277+ 87C0 01           	db 1												; (Contador_de_vueltas).
 278+ 87C1 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 279+ 87C3 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 280+ 87C5 03 40        	defw $4003	                                     	; (Posicion_inicio).
 281+ 87C7 01           	db 1												; (Cuad_objeto).
 282+ 87C8 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 283+ 87CA
 284+ 87CA 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 285+ 87CD 01           	db 1												; (Contador_de_vueltas).
 286+ 87CE F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 87D0 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 87D2 40 50        	defw $5040                                      	; (Posicion_inicio).
 289+ 87D4 01           	db 1												; (Cuad_objeto).
 290+ 87D5 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 291+ 87D7
 292+ 87D7              ; -------------------------------------------------------------------------------------
 293+ 87D7              ;
 294+ 87D7              ;	14/05/24
 295+ 87D7              ;
 296+ 87D7              ;	Definición de Amadeus.
 297+ 87D7              ;
 298+ 87D7              ;	Amadeus no utiliza los parámetros: (Tipo) y (Contador_de_vueltas). Los colocamos a "0".
 299+ 87D7              ;	Inicialmente situamos a Amadeus en el extremo izquierdo de la pantalla.
 300+ 87D7
 301+ 87D7 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 302+ 87DA 00           	db 0												; (Contador_de_vueltas).
 303+ 87DB 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 304+ 87DD A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 305+ 87DF C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 306+ 87E1 03           	db 3												; (Cuad_objeto).
 307+ 87E2 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 132  87E4              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87E4
   2+ 87E4
   3+ 87E4              ;   07/07/23
   4+ 87E4              ;
   5+ 87E4              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87E4              ;
   7+ 87E4              ;   Codificación:
   8+ 87E4              ;
   9+ 87E4              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87E4              ;
  11+ 87E4              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87E4              ;
  13+ 87E4              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87E4              ;
  15+ 87E4              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87E4              ;
  17+ 87E4              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87E4              ;                               ..... %01000010 Vel_up 4
  19+ 87E4              ;                                               Vel_down 2
  20+ 87E4              ;                               ..... $42
  21+ 87E4              ;
  22+ 87E4              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87E4              ;
  24+ 87E4              ;                               ..... %01000010 Vel_left 4
  25+ 87E4              ;                                               Vel_right 2
  26+ 87E4              ;                               ..... $42
  27+ 87E4              ;
  28+ 87E4              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87E4              ;
  30+ 87E4              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87E4              ;
  32+ 87E4              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87E4              ;
  34+ 87E4              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87E4              ;                                     $53
  36+ 87E4              ;
  37+ 87E4              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87E4              ;
  39+ 87E4              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87E4              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87E4              ;
  42+ 87E4              ;                       Arriba ..... $81
  43+ 87E4              ;                       Arriba - izquierda ..... $a1
  44+ 87E4              ;                       Arriba - derecha ..... $91
  45+ 87E4              ;
  46+ 87E4              ;                       Abajo ..... $41
  47+ 87E4              ;                       Abajo - izquierda ..... $61
  48+ 87E4              ;                       Abajo - derecha ..... $51
  49+ 87E4              ;
  50+ 87E4              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87E4              ;
  52+ 87E4              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87E4              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87E4              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87E4              ;
  56+ 87E4              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87E4              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87E4              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87E4              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87E4              ;
  61+ 87E4              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87E4              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87E4              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87E4              ;
  65+ 87E4              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87E4              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87E4              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87E4              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87E4
  70+ 87E4              ; ----- ----- ----- ----- -----
  71+ 87E4
  72+ 87E4 10 88        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87E6 18 88            defw F_1
  74+ 87E8 22 88            defw F_2
  75+ 87EA 2C 88            defw Codo_abajo_derecha
  76+ 87EC 60 88            defw Derecha_y_subiendo
  77+ 87EE 6A 88            defw Derecha_y_subiendo_1
  78+ 87F0 74 88            defw F_3
  79+ 87F2 7E 88            defw F_4
  80+ 87F4 88 88            defw Derecha_y_bajando
  81+ 87F6 92 88            defw Derecha_y_bajando_1
  82+ 87F8 9C 88            defw Derecha_y_bajando_2
  83+ 87FA A6 88            defw Codo_derecha_abajo
  84+ 87FC D6 88            defw Codo_abajo_izq.
  85+ 87FE 0A 89            defw Izquierda_y_subiendo
  86+ 8800 14 89            defw Izquierda_y_subiendo_1
  87+ 8802 1E 89            defw F_5
  88+ 8804 28 89            defw F_6
  89+ 8806 32 89            defw Izquierda_y_bajando
  90+ 8808 3C 89            defw Izquierda_y_bajando_1
  91+ 880A 46 89            defw Izquierda_y_bajando_2
  92+ 880C 50 89            defw Codo_izquierda_abajo
  93+ 880E 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8810
  95+ 8810 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8814 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8818
  98+ 8818 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 881C 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8820 08 00
 100+ 8822
 101+ 8822 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8826 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 882A 0F FE
 103+ 882C
 104+ 882C 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8830 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8834 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8838 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 883C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8840 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8844 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8848 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 884C 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8850 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8854 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8858 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 885C 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8860
 118+ 8860 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8864 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8868 06 00
 120+ 886A
 121+ 886A 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 886E 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8872 02 00
 123+ 8874
 124+ 8874 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8878 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 887C 04 00
 126+ 887E
 127+ 887E 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8882 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8886 08 00
 129+ 8888
 130+ 8888 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 888C 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8890 02 00
 132+ 8892
 133+ 8892 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8896 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 889A 06 00
 135+ 889C
 136+ 889C 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 88A0 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 88A4 06 00
 138+ 88A6
 139+ 88A6              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 88A6
 141+ 88A6 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 88AA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 88AE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 88B2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88B6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88BA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88BE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88C2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88C6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88CA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88CE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88D2 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88D6
 154+ 88D6 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88DA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88DE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88E2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88E6 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88EA 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88EE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88F2 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88F6 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88FA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88FE 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8902 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8906 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 890A
 168+ 890A 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 890E 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8912 06 00
 170+ 8914
 171+ 8914 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8918 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 891C 02 00
 173+ 891E
 174+ 891E 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8922 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8926 04 00
 176+ 8928
 177+ 8928 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 892C 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8930 08 00
 179+ 8932
 180+ 8932 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8936 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 893A 02 00
 182+ 893C
 183+ 893C 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8940 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8944 06 00
 185+ 8946
 186+ 8946 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 894A 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 894E 06 00
 188+ 8950
 189+ 8950 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8954 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8958 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 895C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8960 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8964 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8968 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 896C 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8970 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8974 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8978 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 897C 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8980
 202+ 8980
 203+ 8980
 204+ 8980
 205+ 8980
 206+ 8980
 207+ 8980
 208+ 8980
 209+ 8980
 210+ 8980
# file closed: Patrones_de_mov.asm
 133  8980              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8980              ; 19/1/24
   2+ 8980
   3+ 8980              Indice_de_niveles
   4+ 8980
   5+ 8980 88 89        	defw Nivel_1
   6+ 8982 94 89        	defw Nivel_2
   7+ 8984
   8+ 8984              ;	...
   9+ 8984              ;	...
  10+ 8984              ;	+ Niveles ...
  11+ 8984
  12+ 8984 00 00        	defw 0
  13+ 8986 00 00        	defw 0
  14+ 8988
  15+ 8988 07           Nivel_1 db 7									; Nº de entidades.
  16+ 8989 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 898D 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8991 01 01 01
  18+ 8994
  19+ 8994 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8995 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8999 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 899D 01 02
  22+ 899F 02 01 01 01  	db 2,1,1,1,1,2
  22+ 89A3 01 02
  23+ 89A5
# file closed: Niveles.asm
 134  89A5
 135  89A5              ; ******************************************************************************************************************************************************************************************
 136  89A5              ; Constantes.
 137  89A5              ; ******************************************************************************************************************************************************************************************
 138  89A5              ;
 139  89A5              ; 09/03/24
 140  89A5
 141  89A5              ;
 142  89A5              ; Constantes.
 143  89A5              ;
 144  89A5
 145  89A5              ROM_keyboard equ $0038 									; Rutina de ROM. Actualiza FRAMES y escanea el teclado.
 146  89A5              FRAMES equ $5c78										; Variable de 16 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
 147  89A5
 148  89A5              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
 149  89A5
 150  89A5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 151  89A5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 152  89A5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 153  89A5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 154  89A5
 155  89A5              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb20 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 156  89A5              Almacen_de_movimientos_masticados_Amadeus equ $e000		; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
 157  89A5
 158  89A5              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
 159  89A5
 160  89A5              ;                                                       ; 35 bytes por entidad.
 161  89A5              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 162  89A5              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 163  89A5              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 164  89A5              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 165  89A5
 166  89A5              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
 167  89A5
 168  89A5
 169  89A5              ; ******************************************************************************************************************************************************************************************
 170  89A5              ; Variables.
 171  89A5              ; ******************************************************************************************************************************************************************************************
 172  89A5
 173  89A5              ;
 174  89A5              ; 12/05/24
 175  89A5              ;
 176  89A5              ; Variables de DRAW. (Motor principal).	44 Bytes.
 177  89A5              ;
 178  89A5
 179  89A5              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 180  89A5
 181  89A5 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 182  89A6              ;															- Patrón de movimiento.
 183  89A6              ;															- Aspecto
 184  89A6 00           Filas db 0												; Filas. [DRAW]
 185  89A7 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 186  89A8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 187  89AA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 188  89AC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 189  89AD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 190  89AE
 191  89AE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 192  89AE
 193  89AE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 194  89AF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 195  89AF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 196  89AF 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 197  89B0              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 198  89B0
 199  89B0              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 200  89B0              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 201  89B0              ; Ejemplos.
 202  89B0
 203  89B0              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 204  89B0              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 205  89B0              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 206  89B0              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 207  89B0              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 208  89B0
 209  89B0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 210  89B0
 211  89B0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 212  89B0              ;
 213  89B0              ;	COLORES: 0 ..... NEGRO
 214  89B0              ;    		 1 ..... AZUL
 215  89B0              ; 			 2 ..... ROJO
 216  89B0              ;			 3 ..... MAGENTA
 217  89B0              ; 			 4 ..... VERDE
 218  89B0              ; 			 5 ..... CIAN
 219  89B0              ;			 6 ..... AMARILLO
 220  89B0              ; 			 7 ..... BLANCO
 221  89B0
 222  89B0 00 00        Indice_Sprite_der defw 0
 223  89B2 00 00        Indice_Sprite_izq defw 0
 224  89B4 00 00        Puntero_DESPLZ_der defw 0
 225  89B6 00 00        Puntero_DESPLZ_izq defw 0
 226  89B8
 227  89B8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 228  89BA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 229  89BB
 230  89BB              ; Variables de objeto. (Características).
 231  89BB
 232  89BB 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 233  89BC              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 234  89BC              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 235  89BC              ; Variables_de_borrado ds 6
 236  89BC
 237  89BC 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 238  89BE              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 239  89BE
 240  89BE 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 241  89C0
 242  89C0              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 243  89C0              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 244  89C0
 245  89C0 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 246  89C2              ;														; _palabras que componen el "movimiento_masticado".
 247  89C2
 248  89C2              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 249  89C2
 250  89C2 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 251  89C3              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 252  89C3              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 253  89C3              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 254  89C3              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 255  89C3              ;
 256  89C3              ; 														DESCRIPCIÖN:
 257  89C3              ;
 258  89C3              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 259  89C3              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 260  89C3              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 261  89C3              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 262  89C3              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 263  89C3              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 264  89C3              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 265  89C3              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 266  89C3              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 267  89C3              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 268  89C3              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 269  89C3              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 270  89C3              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 271  89C3              ;
 272  89C3              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 273  89C3              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 274  89C3              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 275  89C3
 276  89C3              ; Variables de funcionamiento. [DRAW].
 277  89C3
 278  89C3 00           Columnas db 0
 279  89C4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 280  89C6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 281  89C6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 282  89C7
 283  89C7              ; variables de control general.
 284  89C7
 285  89C7 00           Ctrl_2 db 0
 286  89C8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 287  89C8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 288  89C8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 289  89C8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 290  89C8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 291  89C8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 292  89C8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 293  89C8              ;
 294  89C8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 295  89C8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 296  89C8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 297  89C8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 298  89C8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 299  89C8              ;														BIT 4, ???
 300  89C8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 301  89C8
 302  89C8 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 303  89C9              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 304  89C9              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 305  89C9              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 306  89C9              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 307  89C9
 308  89C9 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 309  89CA
 310  89CA              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 311  89CA
 312  89CA              ;					         		---------;      ;---------
 313  89CA
 314  89CA              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 315  89CA
 316  89CA              Perfiles_de_velocidad
 317  89CA
 318  89CA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 319  89CB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 320  89CC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 321  89CD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 322  89CE
 323  89CE              ; Contadores de 16 bits.
 324  89CE
 325  89CE 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 326  89D0 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 327  89D2 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 328  89D4 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 329  89D6
 330  89D6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 331  89D6
 332  89D6 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 333  89D8 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 334  89DA 00 00        Puntero_indice_mov_bucle defw 0							;
 335  89DC              ;
 336  89DC              ;
 337  89DC 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 338  89DD              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 339  89DD              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 340  89DD 00           Incrementa_puntero_backup db 0
 341  89DE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 342  89DF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 343  89DF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 344  89E0 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 345  89E1 00           Cola_de_desplazamiento db 0								; Este byte indica:
 346  89E2              ;
 347  89E2              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 348  89E2              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 349  89E2              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 350  89E2              ;
 351  89E2              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 352  89E2              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 353  89E2              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 354  89E2              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 355  89E2              ;
 356  89E2              ;														;	"$ff" ..... Bucle infinito de repetición.
 357  89E2              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 358  89E2              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 359  89E2              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 360  89E2
 361  89E2 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 362  89E3
 363  89E3              ;														DESCRIPCIÓN:
 364  89E3              ;
 365  89E3              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 366  89E3              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 367  89E3              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 368  89E3              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 369  89E3              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 370  89E3              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 371  89E3
 372  89E3              ;														BIT 3, Recarga de nueva oleada.
 373  89E3              ;														BIT 4, Recarga de nueva oleada.
 374  89E3              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 375  89E3              ;														BIT 6, **** Frame completo.
 376  89E3              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 377  89E3
 378  89E3 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 379  89E5              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 380  89E5              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 381  89E5              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 382  89E5
 383  89E5              ; Gestión de ENTIDADES y CAJAS.
 384  89E5
 385  89E5 00 00        Puntero_store_caja defw 0
 386  89E7 00 00        Puntero_restore_caja defw 0
 387  89E9 00 00        Indice_restore_caja defw 0
 388  89EB 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 389  89EC 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 390  89ED 00           Entidades_en_curso db 0									; ..... ..... .....
 391  89EE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 392  89EF              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 393  89EF              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 394  89EF              ;														; _ (Numero_de_malotes)="0".
 395  89EF 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 396  89F1 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 397  89F3              ;														; _ puntero (Indice_entidades).
 398  89F3
 399  89F3              ;---------------------------------------------------------------------------------------------------------------
 400  89F3              ;
 401  89F3              ;	11/01/24
 402  89F3              ;
 403  89F3              ;	Álbumes.
 404  89F3
 405  89F3 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 406  89F5              ;														; _variable para almacenar lo posición del puntero_
 407  89F5              ; 														; _de pila, SP.
 408  89F5 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 409  89F7              ;														; La utiliza la rutina [Extrae_foto_registros].
 410  89F7
 411  89F7              ; Impresión. ----------------------------------------------------------------------------------------------------
 412  89F7
 413  89F7 00 00        Album_de_pintado defw 0
 414  89F9 00 00        Album_de_borrado defw 0
 415  89FB 00 00        Techo_Scanlines_album defw 0
 416  89FD 00 00        Techo_Scanlines_album_2 defw 0
 417  89FF 00           Switch db 0
 418  8A00 00 00        Techo defw 0
 419  8A02 00 00        Scanlines_album_SP defw 0
 420  8A04 73 86        India_SP defw Tabla_de_pintado
 421  8A06 76 86        India_2_SP defw Tabla_de_pintado+3
 422  8A08
 423  8A08 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 424  8A09              ;
 425  8A09              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 426  8A09              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 427  8A09              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 428  8A09              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 429  8A09              ;																Habilita el borrado/pintado de sprites.
 430  8A09              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 431  8A09              ;																_ a la baja.
 432  8A09              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 433  8A09
 434  8A09
 435  8A09
 436  8A09 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 437  8A0A              ;
 438  8A0A              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 439  8A0A              ;
 440  8A0A              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 441  8A0A              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 442  8A0A              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 443  8A0A              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 444  8A0A              ;
 445  8A0A              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 446  8A0A              ;															_ masticados ya generados.
 447  8A0A              ;
 448  8A0A              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 449  8A0A              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 450  8A0A              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 451  8A0A              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 452  8A0A
 453  8A0A
 454  8A0A              ; Gestión de Disparos.
 455  8A0A
 456  8A0A              ;;Numero_de_disparotes db 0
 457  8A0A              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 458  8A0A              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 459  8A0A              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 460  8A0A              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 461  8A0A              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 462  8A0A              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 463  8A0A              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 464  8A0A              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 465  8A0A              ;														; _produzca colisión.
 466  8A0A              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 467  8A0A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 468  8A0A              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 469  8A0A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 470  8A0A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 471  8A0D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 472  8A0D              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 473  8A0D
 474  8A0D              ;---------------------------------------------------------------------------------------------------------------
 475  8A0D
 476  8A0D              ; Relojes y temporizaciones.
 477  8A0D
 478  8A0D              ;Clock_explosion db 4
 479  8A0D
 480  8A0D 6C 86        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 481  8A0F
 482  8A0F 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 483  8A11 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 484  8A12              ;														; Repite la oleada de entidades.
 485  8A12              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 486  8A12              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 487  8A12              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 488  8A12
 489  8A12              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 490  8A12              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 491  8A12              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 492  8A12
 493  8A12              ;---------------------------------------------------------------------------------------------------------------
 494  8A12
 495  8A12              ; Gestión de NIVELES.
 496  8A12
 497  8A12 00           Nivel db 0												; Nivel actual del juego.
 498  8A13 00 00        Puntero_indice_NIVELES defw 0
 499  8A15 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 500  8A17              ; 														; _ que definen el NIVEL.
 501  8A17              ; Y todo comienza aquí .....
 502  8A17              ;
 503  8A17              ; 	INICIO  *************************************************************************************************************************************************************************
 504  8A17              ;
 505  8A17              ;	5/1/24
 506  8A17
 507  8A17              START
 508  8A17
 509  8A17 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 510  8A1A 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 511  8A1C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 512  8A1E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 513  8A20 F3           	DI
 514  8A21
 515  8A21              ;	ld a,%00000111
 516  8A21              ;	call Cls
 517  8A21 CD 8D 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8A24
 519  8A24              ; INICIALIZACIÓN.
 520  8A24
 521  8A24 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8A26 CD 7F AA     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8A29 CD 2B 8B     	call Extrae_numero_aleatorio_y_avanza
 524  8A2C
 525  8A2C 6F           	ld l,a
 526  8A2D 26 00        	ld h,0
 527  8A2F 22 0F 8A     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8A32
 529  8A32              ;	Inicializa 1er Nivel.
 530  8A32
 531  8A32 21 80 89     	ld hl,Indice_de_niveles
 532  8A35 22 13 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 533  8A38 CD AF AA     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 534  8A3B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 535  8A3B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 536  8A3B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 537  8A3B              	;	Provisional, (para desarrollo).
 538  8A3B              	;-
 539  8A3B              ;	ld hl,Numero_parcial_de_entidades
 540  8A3B              ;	ld b,(hl)
 541  8A3B              ;	inc b
 542  8A3B              ;	dec b
 543  8A3B              ;	jr z,3F	;-									   		 				; Si no hay entidades, cargamos AMADEUS.
 544  8A3B
 545  8A3B CD F1 8C     	call Inicia_albumes_de_lineas
 546  8A3E
 547  8A3E CD F4 AA     4 call Inicia_Entidades
 548  8A41 CD 4F AB     	call Inicia_Amadeus
 549  8A44
 550  8A44              ;																		; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 551  8A44              ;																		; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 552  8A44              ;																		; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 553  8A44
 554  8A44              ;	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 555  8A44
 556  8A44 CD 9B AB     	call Limpiamos_bandeja_DRAW
 557  8A47
 558  8A47
 559  8A47              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 560  8A47
 561  8A47 CD 01 8D     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 562  8A4A              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 563  8A4A              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 564  8A4A              ; (Esto se dá cuando se inicia una nueva oleada).
 565  8A4A
 566  8A4A              ;	ld a,(Ctrl_1)
 567  8A4A              ;	bit 3,a
 568  8A4A              ;	jr nz,5F											 ; Loop
 569  8A4A
 570  8A4A              ;	ld de,Amadeus_db
 571  8A4A              ;	call Store_Amadeus
 572  8A4A
 573  8A4A              ; 	INICIA DISPAROS !!!!!
 574  8A4A
 575  8A4A              ;	call Inicia_Puntero_Disparo_Entidades
 576  8A4A              ;	call Inicia_Puntero_Disparo_Amadeus
 577  8A4A
 578  8A4A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 579  8A4A
 580  8A4A              ;5 call Inicia_punteros_de_cajas
 581  8A4A              ;	call Restore_entidad
 582  8A4A
 583  8A4A              ;	ld a,(Ctrl_1)
 584  8A4A              ;	bit 3,a
 585  8A4A              ;	jr z,6F
 586  8A4A
 587  8A4A              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 588  8A4A
 589  8A4A              ;	ld hl,Ctrl_1
 590  8A4A              ;	res 3,(hl)
 591  8A4A              ;	jr Main
 592  8A4A
 593  8A4A              ; Damos por concluida la construcción del FRAME.
 594  8A4A              ;
 595  8A4A
 596  8A4A 2A 02 8A     6 ld hl,(Scanlines_album_SP)
 597  8A4D 22 FB 89     	ld (Techo_Scanlines_album),hl
 598  8A50
 599  8A50 2A F9 89     	ld hl,(Album_de_borrado)
 600  8A53 22 02 8A     	ld (Scanlines_album_SP),hl
 601  8A56
 602  8A56 21 73 86     	ld hl,Tabla_de_pintado
 603  8A59 22 04 8A     	ld (India_SP),hl
 604  8A5C
 605  8A5C 21 08 8A     	ld hl,Ctrl_3
 606  8A5F CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 607  8A61 CB D6        	set 2,(hl)
 608  8A63
 609  8A63 FB           	ei
 610  8A64 76           	halt
 611  8A65
 612  8A65              ; ------------------------------------
 613  8A65
 614  8A65              Main
 615  8A65              ;
 616  8A65              ; 13/05/24
 617  8A65
 618  8A65              ; Aparece nueva entidad ???
 619  8A65
 620  8A65              ; 														; (Clock_next_entity) define cuando aparecen las entidades en pantalla.
 621  8A65              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 622  8A65              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializará _;
 623  8A65              ;														; _un 2º bloque.
 624  8A65
 625  8A65 2A 0F 8A     	ld hl,(Clock_next_entity)
 626  8A68 ED 4B 78 5C  	ld bc,(FRAMES)
 627  8A6C A7           	and a
 628  8A6D ED 42        	sbc hl,bc
 629  8A6F 20 16        	jr nz,13F
 630  8A71
 631  8A71              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 632  8A71              ; _ (Clock_next_entity) para la siguiente entidad.
 633  8A71
 634  8A71 3A EC 89     21 ld a,(Numero_parcial_de_entidades)
 635  8A74 47           	ld b,a
 636  8A75 3A ED 89     	ld a,(Entidades_en_curso)
 637  8A78 B8           	cp b
 638  8A79 28 0C        	jr z,13F
 639  8A7B 30 0A        	jr nc,13F
 640  8A7D
 641  8A7D 3C           	inc a
 642  8A7E 32 ED 89     	ld (Entidades_en_curso),a
 643  8A81
 644  8A81              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 645  8A81
 646  8A81 CD 2B 8B     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 647  8A84 CD 47 8B     	call Define_Clock_next_entity
 648  8A87
 649  8A87              ; -------------------------------------------------------------------------------------------------------------
 650  8A87
 651  8A87              ; Habilita disparos.
 652  8A87
 653  8A87              13
 654  8A87
 655  8A87              ;	ld hl,Disparo_Amadeus
 656  8A87              ;	ld de,CLOCK_repone_disparo_Amadeus
 657  8A87              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 658  8A87
 659  8A87              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 660  8A87              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 661  8A87              ;	call Habilita_disparos
 662  8A87
 663  8A87              ; COLISIONES.
 664  8A87
 665  8A87              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 666  8A87
 667  8A87              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 668  8A87              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 669  8A87              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 670  8A87
 671  8A87              ;	xor a
 672  8A87              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 673  8A87
 674  8A87              ;	call Inicia_punteros_de_cajas
 675  8A87              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 676  8A87              ; 														; _ en DRAW.
 677  8A87
 678  8A87              ;	ld a,(Filas)
 679  8A87              ;	and a
 680  8A87              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 681  8A87              ;	call Incrementa_punteros_de_cajas
 682  8A87              ;	jr 12B
 683  8A87
 684  8A87              ; ---------------------------------------------------------------------------------------
 685  8A87
 686  8A87 3A EC 89     10 ld a,(Numero_parcial_de_entidades)
 687  8A8A 47               ld b,a
 688  8A8B A7           	and a
 689  8A8C 20 00        	jr nz,11F
 690  8A8E
 691  8A8E              ;	ld hl,Ctrl_1;
 692  8A8E              ;	bit 4,(hl)
 693  8A8E              ;	jp nz,16F
 694  8A8E
 695  8A8E              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 696  8A8E
 697  8A8E              ;	ld hl,Ctrl_1
 698  8A8E              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 699  8A8E
 700  8A8E              ;	ld a,(Contador_de_frames)
 701  8A8E              ;	inc a
 702  8A8E              ;	ld (Activa_recarga_cajas),a
 703  8A8E
 704  8A8E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 705  8A8E
 706  8A8E 3A ED 89     11 ld a,(Entidades_en_curso)
 707  8A91 A7           	and a
 708  8A92 28 45        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 709  8A94 47           	ld b,a												; No hay entidades que gestionar.
 710  8A95
 711  8A95              ; ( Código que ejecutamos con cada entidad: ).
 712  8A95
 713  8A95              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 714  8A95              ;
 715  8A95              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 716  8A95
 717  8A95 21 73 86     	ld hl,Tabla_de_pintado
 718  8A98 22 04 8A     	ld (India_SP),hl
 719  8A9B
 720  8A9B 21 08 8A     	ld hl,Ctrl_3
 721  8A9E CB D6        	set 2,(hl)
 722  8AA0 CD 10 8B     	call Change
 723  8AA3
 724  8AA3 C5           15 push bc 												; Nº de entidades en curso.
 725  8AA4
 726  8AA4 CD 52 8D     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 727  8AA7 CD 8B 8B     	call Recauda_informacion_de_entidad_en_curso		; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 728  8AAA
 729  8AAA              ; Existe "Entidad_guía" ???.
 730  8AAA              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 731  8AAA
 732  8AAA              ;	ld a,(Ctrl_3)
 733  8AAA              ;	bit 1,a
 734  8AAA              ;	jr nz,22F
 735  8AAA
 736  8AAA              ; Almacén de "Movimientos_masticados" lleno ???
 737  8AAA              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 738  8AAA              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 739  8AAA
 740  8AAA              ;;	ld a,(Ctrl_3)
 741  8AAA              ;;	bit 3,a
 742  8AAA              ;;	jr nz,22F
 743  8AAA
 744  8AAA              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 745  8AAA
 746  8AAA              ;	ld hl,Ctrl_2
 747  8AAA              ;	set 5,(hl)
 748  8AAA              ;	ld hl,Ctrl_3
 749  8AAA              ;	set 1,(hl)
 750  8AAA
 751  8AAA              ; Impacto ???
 752  8AAA
 753  8AAA              ;22 ld a,(Impacto)
 754  8AAA              ;	and a
 755  8AAA              ;	jr z,8F
 756  8AAA
 757  8AAA              ; Hay Impacto en esta entidad.
 758  8AAA
 759  8AAA              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 760  8AAA              ;	dec (hl)
 761  8AAA              ;	jp nz,17F
 762  8AAA
 763  8AAA              ;! Velocidad de la animación de la explosión.
 764  8AAA
 765  8AAA              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 766  8AAA              ;														; _,(velocidad de la explosión).
 767  8AAA              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 768  8AAA
 769  8AAA              ;	call Repone_datos_de_borrado
 770  8AAA              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 771  8AAA
 772  8AAA              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 773  8AAA
 774  8AAA              ;	ld a,(Ctrl_2)
 775  8AAA              ;	bit 1,a
 776  8AAA              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 777  8AAA
 778  8AAA              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 779  8AAA
 780  8AAA              ;	ld a,(CTRL_DESPLZ)
 781  8AAA              ;	and a
 782  8AAA              ;	jr nz,18F
 783  8AAA
 784  8AAA              ;	ld hl,Indice_Explosion_2x2-2
 785  8AAA              ;	ld (Puntero_DESPLZ_der),hl
 786  8AAA              ;	jr 19F
 787  8AAA
 788  8AAA              ;18 ld hl,Indice_Explosion_2x3-2
 789  8AAA              ;	ld (Puntero_DESPLZ_der),hl
 790  8AAA
 791  8AAA              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 792  8AAA              ;	set 1,(hl)
 793  8AAA              ;	jr 7F
 794  8AAA
 795  8AAA              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 796  8AAA              ; _con las coordenadas de la entidad almacenada en DRAW.
 797  8AAA
 798  8AAA              ;8 ld a,(Ctrl_1)
 799  8AAA              ;	bit 2,a
 800  8AAA              ;	jr z,7F
 801  8AAA
 802  8AAA              ;	ld hl,(Coordenadas_disparo_certero)
 803  8AAA              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 804  8AAA              ;														; E contiene la coordenada_X del disparo.
 805  8AAA              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 806  8AAA              ;														; H FILA, (Coordenada_y de la entidad).
 807  8AAA              ;	and a
 808  8AAA              ;	sbc hl,de
 809  8AAA
 810  8AAA              ;	call Determina_resultado_comparativa
 811  8AAA
 812  8AAA              ;	ld a,b
 813  8AAA              ;	and a
 814  8AAA              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 815  8AAA
 816  8AAA              ; ----- ----- -----
 817  8AAA
 818  8AAA              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 819  8AAA              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 820  8AAA
 821  8AAA              ;	ld hl,Ctrl_1
 822  8AAA              ;	res 2,(hl)
 823  8AAA
 824  8AAA              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 825  8AAA
 826  8AAA              ;	ld a,(Ctrl_0)
 827  8AAA              ;	bit 4,a
 828  8AAA              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 829  8AAA
 830  8AAA              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 831  8AAA              ; [[[
 832  8AAA              ;	call Detecta_disparo_entidad
 833  8AAA              ; ]]]
 834  8AAA
 835  8AAA              ; -------------------------------------------
 836  8AAA
 837  8AAA CD F0 8A     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 838  8AAD CD 7B 8C     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 839  8AB0 CD 42 AD     	call Genera_datos_de_impresion
 840  8AB3              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 841  8AB3              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 842  8AB3              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 843  8AB3              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 844  8AB3
 845  8AB3 CD A6 AB     	call Decrementa_Contador_de_mov_masticados
 846  8AB6
 847  8AB6              ; -------------------------------------------
 848  8AB6
 849  8AB6              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 850  8AB6
 851  8AB6 2A BC 89     	ld hl,(Puntero_de_impresion)
 852  8AB9 CD EF AC     	call Genera_coordenadas
 853  8ABC
 854  8ABC              ;	ld hl,Ctrl_0
 855  8ABC              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 856  8ABC
 857  8ABC CD 91 AB     17 call Store_Restore_cajas
 858  8ABF
 859  8ABF C1           	pop bc
 860  8AC0
 861  8AC0 10 E1        	djnz 15B
 862  8AC2
 863  8AC2              ; Hemos terminado de gestionar TODAS las ENTIDADES.
 864  8AC2
 865  8AC2 CD 9F 8B     	call Inicializa_India_y_limpia_Tabla_de_impresion 	; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 866  8AC5 CD B6 8B     	call Ordena_tabla_de_impresion
 867  8AC8 CD 01 8D     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 868  8ACB
 869  8ACB              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 870  8ACB              ; Hemos gestionado todas las unidades.
 871  8ACB              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 872  8ACB
 873  8ACB              ;	ld hl,Ctrl_1
 874  8ACB              ;	res 2,(hl)
 875  8ACB
 876  8ACB CD 5C 8B     	call Borra_diferencia
 877  8ACE
 878  8ACE 3A 08 8A     	ld a,(Ctrl_3)
 879  8AD1 CB 5F        	bit 3,a
 880  8AD3 20 04        	jr nz,16F
 881  8AD5
 882  8AD5 EB           	ex de,hl
 883  8AD6 71           	ld (hl),c
 884  8AD7 2C           	inc l
 885  8AD8 70           	ld (hl),b											; Nuevo techo, mayor que el anterior.
 886  8AD9
 887  8AD9              ; Aquí situaremos la rutina que ordena el índice Masa.
 888  8AD9
 889  8AD9 2A F9 89     16 ld hl,(Album_de_borrado)
 890  8ADC 22 02 8A     	ld (Scanlines_album_SP),hl
 891  8ADF
 892  8ADF 21 08 8A     	ld hl,Ctrl_3
 893  8AE2 CB C6        	set 0,(hl) 											; Indica Frame completo.
 894  8AE4
 895  8AE4 CB 9E        	res 3,(hl)
 896  8AE6 CB A6        	res 4,(hl)
 897  8AE8
 898  8AE8 AF           	xor a
 899  8AE9 D3 FE        	out ($fe),a
 900  8AEB 76           	halt
 901  8AEC
 902  8AEC              ; ----------------------------------------
 903  8AEC
 904  8AEC              ;	ld a,(Ctrl_1) 										; Existe Loop?
 905  8AEC              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 906  8AEC CA 65 8A     	jp z,Main
 907  8AEF
 908  8AEF              ; RECARGA DE NUEVA OLEADA.
 909  8AEF
 910  8AEF              ;	ld a,(Contador_de_frames)
 911  8AEF              ;	ld b,a
 912  8AEF              ;	ld a,(Activa_recarga_cajas)
 913  8AEF              ;	cp b
 914  8AEF              ;	jr z,20F
 915  8AEF
 916  8AEF              ;	ld hl,Ctrl_1
 917  8AEF              ;	set 4,(hl)
 918  8AEF              ;	jp Main
 919  8AEF
 920  8AEF              ;20 ld hl,Ctrl_1
 921  8AEF              ;	res 4,(hl)
 922  8AEF
 923  8AEF              ;	ld a,(Contador_de_frames)
 924  8AEF
 925  8AEF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 926  8AEF              ;! _ IMPREDECIBLE !!!!
 927  8AEF
 928  8AEF              ;	add 10
 929  8AEF              ;	ld (Clock_next_entity),a
 930  8AEF
 931  8AEF              ;	jp 4B
 932  8AEF
 933  8AEF C9           	ret
 934  8AF0
 935  8AF0              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 936  8AF0              ;
 937  8AF0              ;	16/11/23
 938  8AF0
 939  8AF0              ;;Gestiona_Amadeus
 940  8AF0
 941  8AF0              ;! Activa/desactiva impacto con Amadeus.
 942  8AF0
 943  8AF0              ;	ld a,(Impacto)
 944  8AF0              ;	and a
 945  8AF0              ;	jr nz,2F
 946  8AF0
 947  8AF0              ;;	call Mov_Amadeus
 948  8AF0
 949  8AF0              ;;2 ld a,(Ctrl_0)
 950  8AF0              ;;	bit 4,a
 951  8AF0              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 952  8AF0
 953  8AF0              ;;	call Guarda_foto_entidad_a_pintar
 954  8AF0              ;;	call Guarda_datos_de_borrado_Amadeus
 955  8AF0
 956  8AF0              ;;1 ld hl,Ctrl_0
 957  8AF0              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 958  8AF0
 959  8AF0              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 960  8AF0
 961  8AF0              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 962  8AF0
 963  8AF0              ;	call Calcula_numero_de_disparotes
 964  8AF0
 965  8AF0              ;;	ret
 966  8AF0
 967  8AF0              ; -----------------------------
 968  8AF0              ;
 969  8AF0              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 970  8AF0              ;
 971  8AF0              ;	INPUTS: B a de estar a "0".
 972  8AF0
 973  8AF0              ;Prepara_Borra_sprites
 974  8AF0
 975  8AF0              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 976  8AF0              ;	ld a,l
 977  8AF0              ;	ret z
 978  8AF0
 979  8AF0              ;	srl a
 980  8AF0
 981  8AF0              ;2 sub 16
 982  8AF0              ;	jr z,1F
 983  8AF0              ;	inc b
 984  8AF0              ;	jr 2B
 985  8AF0
 986  8AF0              ;1 inc b
 987  8AF0
 988  8AF0              ;	exx
 989  8AF0              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 990  8AF0              ;	exx
 991  8AF0
 992  8AF0              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 993  8AF0              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 994  8AF0
 995  8AF0              ;	ret
 996  8AF0
 997  8AF0              ; --------------------------------------------------------------------------------------------------------------
 998  8AF0              ;
 999  8AF0              ;	15/12/23
1000  8AF0
1001  8AF0              ;Mov_obj
1002  8AF0
1003  8AF0              ;	ld a,(Ctrl_2)
1004  8AF0              ;	bit 1,a
1005  8AF0              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1006  8AF0
1007  8AF0              ; Explosión:
1008  8AF0
1009  8AF0              ;	ld a,(Frames_explosion)
1010  8AF0              ;	and a
1011  8AF0              ;	jr nz,4F
1012  8AF0
1013  8AF0              ;!  Una alimaña menos!!!!!!!!!1
1014  8AF0
1015  8AF0              ; Se trataba de una Entidad_guía ???
1016  8AF0
1017  8AF0              ;	ld a,(Ctrl_2)
1018  8AF0              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1019  8AF0              ;	jr z,5F
1020  8AF0
1021  8AF0              ;	ld hl,Ctrl_3
1022  8AF0              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1023  8AF0
1024  8AF0              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1025  8AF0              ;!! _generado puede ser distinto, (aletoriedad).
1026  8AF0
1027  8AF0              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1028  8AF0              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1029  8AF0              ;	dec (hl)
1030  8AF0              ;	ld hl,Entidades_en_curso
1031  8AF0              ;	dec (hl)
1032  8AF0              ;	ld hl,Numero_de_entidades
1033  8AF0              ;	dec (hl)
1034  8AF0              ;	jr 3F
1035  8AF0
1036  8AF0              ; -----
1037  8AF0
1038  8AF0              ;	`Movemos´ la explosión.
1039  8AF0
1040  8AF0              ;4 ld hl,(Puntero_DESPLZ_der)
1041  8AF0              ;	inc hl
1042  8AF0              ;	inc hl
1043  8AF0              ;	call Extrae_address
1044  8AF0              ;;	ld (Puntero_objeto),hl
1045  8AF0
1046  8AF0              ;;	ld hl,Frames_explosion
1047  8AF0              ;;	dec (hl)
1048  8AF0
1049  8AF0              ;;	ld hl,Ctrl_0
1050  8AF0              ;;	set 4,(hl);;
1051  8AF0
1052  8AF0              ;;	jr 3F
1053  8AF0
1054  8AF0              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1055  8AF0
1056  8AF0              ;2 xor a
1057  8AF0              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1058  8AF0
1059  8AF0              ; Movemos Entidades malignas.
1060  8AF0              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1061  8AF0
1062  8AF0              ;	ld a,(Ctrl_2)
1063  8AF0              ;	bit 5,a
1064  8AF0              ;	jr nz,8F
1065  8AF0
1066  8AF0              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1067  8AF0              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1068  8AF0              ;	jr 7F
1069  8AF0
1070  8AF0              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1071  8AF0
1072  8AF0              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1073  8AF0              ;	bit 4,a
1074  8AF0              ;	ret z
1075  8AF0
1076  8AF0              ; Ha habido desplazamiento de la entidad maligna.
1077  8AF0              ; Ha llegado a zona de AMADEUS ???
1078  8AF0
1079  8AF0              ;7 ld a,(Coordenada_y)
1080  8AF0              ;	cp $14
1081  8AF0              ;	jr c,1F
1082  8AF0
1083  8AF0              ; ---------
1084  8AF0
1085  8AF0              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1086  8AF0              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1087  8AF0
1088  8AF0              ;	di
1089  8AF0              ;	call Genera_coordenadas_X
1090  8AF0              ;	call Compara_coordenadas_X
1091  8AF0              ;	ei
1092  8AF0
1093  8AF0              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1094  8AF0
1095  8AF0              ; ---------
1096  8AF0
1097  8AF0              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1098  8AF0              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1099  8AF0              ;	call Limpia_Variables_de_borrado
1100  8AF0
1101  8AF0              ;3 ret
1102  8AF0
1103  8AF0              ; --------------------------------------------------------------------------------------------------------------
1104  8AF0              ;
1105  8AF0              ;	29/1/23
1106  8AF0
1107  8AF0              ;Mov_Amadeus
1108  8AF0
1109  8AF0              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1110  8AF0
1111  8AF0              ;	call Mov_right
1112  8AF0
1113  8AF0              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1114  8AF0              ;	bit 4,a
1115  8AF0              ;	ret z
1116  8AF0
1117  8AF0              ; ---------
1118  8AF0
1119  8AF0              ;   call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1120  8AF0              ;	call Repone_datos_de_borrado_Amadeus
1121  8AF0              ;	call Limpia_Variables_de_borrado
1122  8AF0
1123  8AF0              ;	ret
1124  8AF0
1125  8AF0              ; --------------------------------------------------------------------------------------------------------------
1126  8AF0              ;
1127  8AF0              ;	12/05/24
1128  8AF0
1129  8AF0 3A C8 89     Ajusta_velocidad_entidad ld a,(Velocidad)
1130  8AF3 CB 27        	sla a
1131  8AF5 32 C8 89     	ld (Velocidad),a
1132  8AF8 E6 10        	and $10
1133  8AFA C8           	ret z
1134  8AFB
1135  8AFB              ; Restaura (Velocidad) a razón del nº de vueltas.
1136  8AFB
1137  8AFB 3A AF 89     	ld a,(Contador_de_vueltas)
1138  8AFE CB 2F        	sra a
1139  8B00 CB 2F        	sra a
1140  8B02 32 C8 89     	ld (Velocidad),a
1141  8B05
1142  8B05 2A BE 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1143  8B08 23           	inc hl
1144  8B09 23           	inc hl
1145  8B0A 23           	inc hl
1146  8B0B 23           	inc hl
1147  8B0C 22 BE 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1148  8B0F
1149  8B0F C9           	ret
1150  8B10
1151  8B10              ; --------------------------------------------------------------------------------------------------------------
1152  8B10              ;
1153  8B10              ;	17/3/24
1154  8B10
1155  8B10              Change
1156  8B10
1157  8B10 3A FF 89     	ld a,(Switch)
1158  8B13 EE 01        	xor 1
1159  8B15 32 FF 89     	ld (Switch),a
1160  8B18
1161  8B18 2A F7 89     	ld hl,(Album_de_pintado)
1162  8B1B ED 5B F9 89  	ld de,(Album_de_borrado)
1163  8B1F EB           	ex de,hl
1164  8B20 22 F7 89     	ld (Album_de_pintado),hl
1165  8B23 22 02 8A     	ld (Scanlines_album_SP),hl
1166  8B26
1167  8B26 ED 53 F9 89  	ld (Album_de_borrado),de
1168  8B2A
1169  8B2A C9           	ret
1170  8B2B
1171  8B2B              ; ------------------------------------
1172  8B2B              ;
1173  8B2B              ; 1/05/24
1174  8B2B
1175  8B2B              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1176  8B2B              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1177  8B2B
1178  8B2B              ;	DESTRUYE: HL,DE,A
1179  8B2B              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1180  8B2B
1181  8B2B              ;	Variables implicadas: (RND_SP).
1182  8B2B
1183  8B2B              Extrae_numero_aleatorio_y_avanza
1184  8B2B
1185  8B2B 21 73 86     	ld hl,Tabla_de_pintado
1186  8B2E EB           	ex de,hl
1187  8B2F 2A 0D 8A     	ld hl,(RND_SP)
1188  8B32 EB           	ex de,hl
1189  8B33 A7           	and a
1190  8B34 ED 52        	sbc hl,de
1191  8B36
1192  8B36 2A 0D 8A     	ld hl,(RND_SP)
1193  8B39 20 06        	jr nz,1F
1194  8B3B
1195  8B3B              ; Sitúa HL al principio de la tabla de nº aleatorios.
1196  8B3B
1197  8B3B 21 6C 86     	ld hl,Numeros_aleatorios
1198  8B3E 22 0D 8A     	ld (RND_SP),HL
1199  8B41
1200  8B41              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1201  8B41
1202  8B41 7E           1 ld a,(hl)
1203  8B42 23           	inc hl
1204  8B43 22 0D 8A     	ld (RND_SP),hl
1205  8B46 C9           	ret
1206  8B47
1207  8B47              ; ------------------------------------
1208  8B47              ;
1209  8B47              ; 1/05/24
1210  8B47
1211  8B47              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1212  8B47              ; (1 a 4 segundos).
1213  8B47              ; Actualizamos (Clock_next_entity) con A.
1214  8B47
1215  8B47              ;	DESTRUYE: A y B.
1216  8B47              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1217  8B47              ;			 Actualiza (Clock_next_entity) con A.
1218  8B47
1219  8B47              ;	Variables implicadas: (Clock_next_entity).
1220  8B47
1221  8B47              ; Notas:
1222  8B47
1223  8B47              ; 	$32 1 seg.
1224  8B47              ; 	$64 2 seg.
1225  8B47              ; 	$96 3 seg.
1226  8B47              ; 	$c8 4 seg.
1227  8B47              ; 	$fa 5 seg.
1228  8B47
1229  8B47              ; $ffff 1310,7 seg, 22 minutos.
1230  8B47
1231  8B47              ;	$0100  5 seg. aproximadamente.
1232  8B47              ;	$0200 10 seg. aproximadamente.
1233  8B47              ;	$0300 15 seg. aproximadamente.
1234  8B47              ;	$0400 20 seg. aproximadamente.
1235  8B47              ;	$0500 25 seg. aproximadamente.
1236  8B47              ;	$0600 30 seg. aproximadamente.
1237  8B47
1238  8B47              Define_Clock_next_entity
1239  8B47
1240  8B47 FE 34        	cp $34
1241  8B49 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1242  8B4B
1243  8B4B              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1244  8B4B
1245  8B4B 4F           3 ld c,a
1246  8B4C 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1247  8B4E 2A 78 5C     	ld hl,(FRAMES)
1248  8B51 A7           	and a
1249  8B52 ED 4A        	adc hl,bc
1250  8B54 22 0F 8A     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1251  8B57 C9           	ret
1252  8B58
1253  8B58 3E 34        1 ld a,$34
1254  8B5A 18 EF        	jr 3B
1255  8B5C
1256  8B5C              ; ------------------------------------
1257  8B5C              ;
1258  8B5C              ; 18/03/24
1259  8B5C
1260  8B5C              Borra_diferencia
1261  8B5C
1262  8B5C ED 4B 02 8A  	ld bc,(Scanlines_album_SP)
1263  8B60
1264  8B60 3A FF 89     	ld a,(Switch)
1265  8B63 A7           	and a
1266  8B64 28 08        	jr z,2F
1267  8B66
1268  8B66 2A FD 89     	ld hl,(Techo_Scanlines_album_2)
1269  8B69 11 FD 89     	ld de,Techo_Scanlines_album_2
1270  8B6C 18 06        	jr 3F
1271  8B6E
1272  8B6E 2A FB 89     2 ld hl,(Techo_Scanlines_album)
1273  8B71 11 FB 89     	ld de,Techo_Scanlines_album
1274  8B74
1275  8B74              ; Diferencia.
1276  8B74
1277  8B74 ED 42        3 sbc hl,bc
1278  8B76
1279  8B76 C8           	ret z
1280  8B77 D8           	ret c
1281  8B78
1282  8B78              ; Nuevo techo, (más bajo que el anterior).
1283  8B78              ; Fijamos nuevo techo y borramos bytes sobrantes.
1284  8B78
1285  8B78 EB           	ex de,hl
1286  8B79
1287  8B79 71           	ld (hl),c
1288  8B7A 2C           	inc l
1289  8B7B 70           	ld (hl),b
1290  8B7C
1291  8B7C AF           	xor a
1292  8B7D 43           	ld b,e
1293  8B7E
1294  8B7E 2A 02 8A     	ld hl,(Scanlines_album_SP)
1295  8B81
1296  8B81 77           1 ld (hl),a
1297  8B82 23           	inc hl
1298  8B83 10 FC        	djnz 1B
1299  8B85
1300  8B85              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1301  8B85
1302  8B85 21 08 8A     	ld hl,Ctrl_3
1303  8B88 CB DE        	set 3,(hl)
1304  8B8A
1305  8B8A C9           	ret
1306  8B8B
1307  8B8B              ; --------------------------------------------------------------------------------------------------------------
1308  8B8B              ;
1309  8B8B              ;	26/3/24
1310  8B8B
1311  8B8B              Recauda_informacion_de_entidad_en_curso
1312  8B8B
1313  8B8B              ; Almacena la Coordenada Y de la entidad en curso.
1314  8B8B
1315  8B8B              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1316  8B8B
1317  8B8B 3A AD 89     	ld a,(Coordenada_y)
1318  8B8E 2A 04 8A     	ld hl,(India_SP)
1319  8B91 77           	ld (hl),a
1320  8B92 2C           	inc l
1321  8B93
1322  8B93              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1323  8B93
1324  8B93 ED 5B 02 8A  	ld de,(Scanlines_album_SP)
1325  8B97
1326  8B97 73           	ld (hl),e
1327  8B98 2C           	inc l
1328  8B99 72           	ld (hl),d
1329  8B9A 2C           	inc l
1330  8B9B
1331  8B9B 22 04 8A     	ld (India_SP),hl
1332  8B9E
1333  8B9E C9           	ret
1334  8B9F
1335  8B9F              ; --------------------------------------------------------------------------------------------------------------
1336  8B9F              ;
1337  8B9F              ;	27/03/24
1338  8B9F              ;
1339  8B9F
1340  8B9F              Inicializa_India_y_limpia_Tabla_de_impresion
1341  8B9F
1342  8B9F 2A 04 8A     	ld hl,(India_SP)
1343  8BA2 01 8B 86     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1344  8BA5
1345  8BA5 79           	ld a,c
1346  8BA6 95           	sub l
1347  8BA7 28 06        	jr z,2F
1348  8BA9 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1349  8BAA              ;														; _ y pasamos a inicializar (India_SP).
1350  8BAA AF           	xor a
1351  8BAB
1352  8BAB 77           1 ld (hl),a
1353  8BAC 2C           	inc l
1354  8BAD 10 FC        	djnz 1B												; Limpia Tabla.
1355  8BAF
1356  8BAF 21 73 86     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1357  8BB2 22 04 8A     	ld (India_SP),hl
1358  8BB5
1359  8BB5 C9           	ret
1360  8BB6
1361  8BB6              ; --------------------------------------------------------------------------------------------------------------
1362  8BB6              ;
1363  8BB6              ;	31/3/24
1364  8BB6
1365  8BB6              Ordena_tabla_de_impresion
1366  8BB6
1367  8BB6              ; 5794 T/states.
1368  8BB6              ; 6278 T/states.
1369  8BB6              ; 5310 T/states.
1370  8BB6
1371  8BB6              ; Inicializamos punteros (India_SP) e (India_2_SP).
1372  8BB6              ; Inicializamos contador de comparaciones, [C].
1373  8BB6              ; Cargamos los registros A y B para efectuar comparación.
1374  8BB6
1375  8BB6 FD 2E 00     	ld iyl,0
1376  8BB9
1377  8BB9 3A ED 89     	ld a,(Entidades_en_curso)
1378  8BBC FE 04        	cp 4 	;	4
1379  8BBE D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1380  8BBF
1381  8BBF 3D           	dec a
1382  8BC0 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1383  8BC1 51           	ld d,c 										; Copia de respaldo.
1384  8BC2
1385  8BC2 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1386  8BC3
1387  8BC3 21 76 86     	ld hl,Tabla_de_pintado+3
1388  8BC6 46           	ld b,(hl)
1389  8BC7 22 06 8A     	ld (India_2_SP),hl
1390  8BCA
1391  8BCA B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1392  8BCB DC F3 8B     	call c, Avanza_India_2_SP
1393  8BCE CC F3 8B     	call z, Avanza_India_2_SP
1394  8BD1
1395  8BD1 FD 2D        	dec iyl
1396  8BD3 28 18        	jr z,2F
1397  8BD5
1398  8BD5
1399  8BD5              ; --------------------------------------------------------------------------------------------------------------
1400  8BD5              ;
1401  8BD5              ;	7/4/24
1402  8BD5
1403  8BD5              Trueque
1404  8BD5
1405  8BD5              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1406  8BD5              ;  			A contiene en nº de fila de (India_SP).
1407  8BD5              ;			HL contiene (India_2_SP).
1408  8BD5
1409  8BD5 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1410  8BD6 E5           	push hl										; Preservo (India_2_SP).
1411  8BD7
1412  8BD7 ED 5B 04 8A  	ld de,(India_SP)
1413  8BDB EB           	ex de,hl
1414  8BDC 70           	ld (hl),b
1415  8BDD 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1416  8BDE
1417  8BDE CD 1F 8C     	call Intercambia_1_byte
1418  8BE1 CD 1F 8C     	call Intercambia_1_byte
1419  8BE4
1420  8BE4
1421  8BE4              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1422  8BE4              ; Recuperamos (India_2_SP) en HL.
1423  8BE4
1424  8BE4 2A 04 8A     	ld hl,(India_SP)
1425  8BE7 7E           	ld a,(hl)
1426  8BE8
1427  8BE8 E1           	pop hl
1428  8BE9 D1           	pop de
1429  8BEA
1430  8BEA              ; --------------------------------------------------------------------------------------------------------------
1431  8BEA
1432  8BEA CD F3 8B     	call Avanza_India_2_SP
1433  8BED
1434  8BED 14           2 inc d
1435  8BEE 15           	dec d
1436  8BEF C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1437  8BF0 18 D8        	jr 1B
1438  8BF2
1439  8BF2 C9           	ret
1440  8BF3
1441  8BF3              ; ----- ----- ----- ----- -----
1442  8BF3
1443  8BF3              Avanza_India_2_SP
1444  8BF3
1445  8BF3 0D           	dec c
1446  8BF4 28 0A        	jr z,Avanza_punteros_indios
1447  8BF6
1448  8BF6 FD 2C        	inc iyl
1449  8BF8
1450  8BF8 2C           	inc l
1451  8BF9 2C           	inc l
1452  8BFA 2C           	inc l
1453  8BFB
1454  8BFB 46           	ld b,(hl)
1455  8BFC 22 06 8A     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1456  8BFF
1457  8BFF C9           	ret
1458  8C00
1459  8C00              ; ----- ----- ----- ----- -----
1460  8C00
1461  8C00              Avanza_punteros_indios
1462  8C00
1463  8C00 15           	dec d
1464  8C01 28 15        	jr z,Prepara_salida
1465  8C03
1466  8C03 4A           	ld c,d
1467  8C04
1468  8C04 2A 04 8A     	ld hl,(India_SP)
1469  8C07 2C           	inc l
1470  8C08 2C           	inc l
1471  8C09 2C           	inc l
1472  8C0A 7E           	ld a,(hl)
1473  8C0B 22 04 8A     	ld (India_SP),hl
1474  8C0E
1475  8C0E 2C           	inc l
1476  8C0F 2C           	inc l
1477  8C10 2C           	inc l
1478  8C11 46           	ld b,(hl)
1479  8C12 22 06 8A     	ld (India_2_SP),hl
1480  8C15
1481  8C15 FD 2C        	inc iyl
1482  8C17
1483  8C17 C9           	ret
1484  8C18
1485  8C18              Prepara_salida
1486  8C18
1487  8C18 21 73 86     	ld hl,Tabla_de_pintado
1488  8C1B 22 04 8A     	ld (India_SP),hl
1489  8C1E C9           	ret
1490  8C1F
1491  8C1F
1492  8C1F 2C           Intercambia_1_byte inc l
1493  8C20 1C           	inc e
1494  8C21 46           	ld b,(hl)
1495  8C22 1A           	ld a,(de)
1496  8C23 EB           	ex de,hl
1497  8C24 70           	ld (hl),b
1498  8C25 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1499  8C26 C9           	ret
1500  8C27
1501  8C27              ; -----------------------------------------------------------------------------------
1502  8C27              ;
1503  8C27              ;	20/01/24
1504  8C27              ;
1505  8C27              ;
1506  8C27
1507  8C27              Construye_movimientos_masticados_entidad
1508  8C27
1509  8C27 2A BE 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1510  8C2A E5           	push hl
1511  8C2B CD 6E 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1512  8C2E              ;															; _ el (Contador_de_mov_masticados).
1513  8C2E CD 1D 8D     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1514  8C31              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1515  8C31 CD 16 95     	call Recompone_posicion_inicio
1516  8C34
1517  8C34 CD 3C 92     1 call Draw
1518  8C37 CD 53 8C     	call Guarda_movimiento_masticado
1519  8C3A
1520  8C3A CD AB 98     	call Movimiento
1521  8C3D
1522  8C3D 3A 08 8A     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1523  8C40 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1524  8C42 28 F0        	jr z,1B
1525  8C44
1526  8C44              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1527  8C44              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1528  8C44
1529  8C44 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1530  8C45 22 BE 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1531  8C48
1532  8C48              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1533  8C48
1534  8C48 CD 0F 9A     	call Situa_en_contador_general_de_mov_masticados
1535  8C4B
1536  8C4B              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1537  8C4B              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1538  8C4B
1539  8C4B ED 4B C0 89  	ld bc,(Contador_de_mov_masticados)
1540  8C4F
1541  8C4F 71           	ld (hl),c
1542  8C50 23           	inc hl
1543  8C51 70           	ld (hl),b
1544  8C52
1545  8C52 C9           	ret
1546  8C53
1547  8C53              ; -----------------------------------------------------------------------------------
1548  8C53              ;
1549  8C53              ;	28/12/23
1550  8C53              ;
1551  8C53              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1552  8C53              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1553  8C53
1554  8C53              Guarda_movimiento_masticado
1555  8C53
1556  8C53 ED 73 F3 89  	ld (Stack),sp
1557  8C57 ED 7B BE 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1558  8C5B
1559  8C5B              ;	push hl
1560  8C5B DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1561  8C5D FD E5            push iy 												; Pushea Puntero_objeto.
1562  8C5F
1563  8C5F ED 7B F3 89      ld sp,(Stack)
1564  8C63
1565  8C63 2A C0 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1566  8C66 23           	inc hl
1567  8C67 22 C0 89     	ld (Contador_de_mov_masticados),hl
1568  8C6A
1569  8C6A CD 6E 8C         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1570  8C6D              ;															; _ el (Contador_de_mov_masticados).
1571  8C6D C9               ret
1572  8C6E
1573  8C6E              ; --------------------------------------------------------------------------------------------------------------
1574  8C6E              ;
1575  8C6E              ;	12/1/24
1576  8C6E              ;
1577  8C6E              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1578  8C6E
1579  8C6E              Actualiza_Puntero_de_almacen_de_mov_masticados
1580  8C6E
1581  8C6E 2A BE 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1582  8C71 01 04 00     	ld bc,4
1583  8C74 A7           	and a
1584  8C75 ED 4A        	adc hl,bc
1585  8C77 22 BE 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1586  8C7A C9           	ret
1587  8C7B
1588  8C7B              ; --------------------------------------------------------------------------------------------------------------
1589  8C7B              ;
1590  8C7B              ;	24/03/24
1591  8C7B              ;
1592  8C7B              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1593  8C7B              ;
1594  8C7B              ;	IX contiene el puntero de impresión.
1595  8C7B              ;	DE contiene (Puntero_objeto).
1596  8C7B
1597  8C7B
1598  8C7B              Cargamos_registros_con_mov_masticado
1599  8C7B
1600  8C7B ED 73 F3 89  	ld (Stack),sp
1601  8C7F ED 7B BE 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1602  8C83
1603  8C83 D1           	pop de 															; DE contiene Puntero_objeto
1604  8C84 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1605  8C86
1606  8C86 ED 73 BE 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1607  8C8A ED 7B F3 89  	ld sp,(Stack)
1608  8C8E
1609  8C8E 7B           	ld a,e
1610  8C8F 82           	add d															; Comprueba si ya no hay datos en el almacén.
1611  8C90
1612  8C90 CC AE AB     	call z,Reinicia_entidad_maliciosa
1613  8C93
1614  8C93 C9           	ret
1615  8C94
1616  8C94              ; --------------------------------------------------------------------------------------------------------------
1617  8C94              ;
1618  8C94              ;	27/5/24
1619  8C94              ;
1620  8C94              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1621  8C94              ;
1622  8C94              ;	IX contiene el puntero de impresión.
1623  8C94              ;	DE contiene (Puntero_objeto).
1624  8C94
1625  8C94
1626  8C94              Cargamos_registros_con_mov_masticado_Amadeus
1627  8C94
1628  8C94 ED 73 F3 89  	ld (Stack),sp
1629  8C98 ED 7B BE 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1630  8C9C D1           	pop de 															; DE contiene Puntero_objeto
1631  8C9D DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1632  8C9F ED 7B F3 89  	ld sp,(Stack)
1633  8CA3 C9           	ret
1634  8CA4
1635  8CA4              ; --------------------------------------------------------------------------------------------------------------
1636  8CA4              ;
1637  8CA4              ;	28/12/23
1638  8CA4              ;
1639  8CA4              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1640  8CA4              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1641  8CA4
1642  8CA4              Guarda_foto_entidad_a_pintar
1643  8CA4
1644  8CA4 3A C2 89     	ld a,(Ctrl_0)
1645  8CA7 CB 77        	bit 6,a
1646  8CA9 28 04        	jr z,5F
1647  8CAB
1648  8CAB              ;	Guarda la foto de Amadeus.
1649  8CAB
1650  8CAB              ;	call Draw
1651  8CAB              ;	call Guarda_movimiento_masticado	;! Provisional
1652  8CAB CD 42 AD     	call Genera_datos_de_impresion
1653  8CAE C9           	ret
1654  8CAF
1655  8CAF              ; ENTIDADES!
1656  8CAF              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1657  8CAF
1658  8CAF 3A 08 8A     5 ld a,(Ctrl_3)
1659  8CB2 CB 5F        	bit 3,a
1660  8CB4 28 01        	jr z,1F
1661  8CB6
1662  8CB6              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1663  8CB6
1664  8CB6              4
1665  8CB6              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1666  8CB6 C9           	ret
1667  8CB7
1668  8CB7              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1669  8CB7
1670  8CB7 3A 08 8A     1 ld a,(Ctrl_3)
1671  8CBA CB 57        	bit 2,a
1672  8CBC 20 10        	jr nz,6F
1673  8CBE
1674  8CBE              ; Entidad guía o fantasma ???
1675  8CBE
1676  8CBE 3A C7 89     	ld a,(Ctrl_2)
1677  8CC1 CB 6F        	bit 5,a
1678  8CC3 20 10        	jr nz,3F
1679  8CC5
1680  8CC5              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1681  8CC5
1682  8CC5 18 EF        	jr 4B
1683  8CC7
1684  8CC7              ; ENTIDAD_GUÍA:
1685  8CC7              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1686  8CC7              ; _guardando "movimientos_masticados".
1687  8CC7
1688  8CC7 3A 08 8A     2 ld a,(Ctrl_3)
1689  8CCA CB 57        	bit 2,a
1690  8CCC 28 07        	jr z,3F
1691  8CCE
1692  8CCE              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1693  8CCE              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1694  8CCE
1695  8CCE CB 97        6 res 2,a
1696  8CD0 CB DF        	set 3,a
1697  8CD2 32 08 8A     	ld (Ctrl_3),a
1698  8CD5
1699  8CD5
1700  8CD5              ;	Esto sólo lo ejecuta una entidad guía.
1701  8CD5
1702  8CD5 CD 3C 92     3 	call Draw
1703  8CD8 CD 53 8C     	call Guarda_movimiento_masticado
1704  8CDB CD 42 AD     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1705  8CDE
1706  8CDE              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1707  8CDE              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1708  8CDE
1709  8CDE              ;	call Convierte_guia_en_fantasma
1710  8CDE C9           	ret
1711  8CDF
1712  8CDF              ; ---------------------------------------------------------------------------------------------------------------------
1713  8CDF              ;
1714  8CDF              ;	27/05/24
1715  8CDF              ;
1716  8CDF
1717  8CDF CD 94 8C     Pinta_Amadeus call Cargamos_registros_con_mov_masticado_Amadeus			; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
1718  8CE2 DD E5        	push ix
1719  8CE4 E1           	pop hl 																; (Puntero_de_impresion) en HL.
1720  8CE5 D5           	push de
1721  8CE6 CD EF AC     	call Genera_coordenadas
1722  8CE9 CD 8B 8B     	call Recauda_informacion_de_entidad_en_curso						; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
1723  8CEC D1           	pop de
1724  8CED CD 42 AD     	call Genera_datos_de_impresion
1725  8CF0 C9           	ret
1726  8CF1
1727  8CF1              ; ---------------------------------------------------------------------------------------------------------------------
1728  8CF1              ;
1729  8CF1              ;	13/03/24
1730  8CF1              ;
1731  8CF1
1732  8CF1              Inicia_albumes_de_lineas
1733  8CF1
1734  8CF1 21 00 80     	ld hl,Scanlines_album
1735  8CF4 22 F7 89     	ld (Album_de_pintado),hl
1736  8CF7 22 02 8A     	ld (Scanlines_album_SP),hl
1737  8CFA
1738  8CFA 21 00 90     	ld hl,Scanlines_album_2
1739  8CFD 22 F9 89     	ld (Album_de_borrado),hl
1740  8D00
1741  8D00 C9           	ret
1742  8D01
1743  8D01
1744  8D01
1745  8D01              ; ---------------------------------------------------------------------------------------------------------------------
1746  8D01              ;
1747  8D01              ; 8/1/23
1748  8D01              ;
1749  8D01              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1750  8D01              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1751  8D01              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1752  8D01
1753  8D01              ; Destruye HL y DE !!!!!
1754  8D01
1755  8D01              Inicia_punteros_de_cajas
1756  8D01
1757  8D01 21 0F 87     	ld hl,Indice_de_cajas_de_entidades
1758  8D04 CD 17 8D         call Extrae_address
1759  8D07 22 E5 89         ld (Puntero_store_caja),hl
1760  8D0A 21 11 87     	ld hl,Indice_de_cajas_de_entidades+2
1761  8D0D 22 E9 89     	ld (Indice_restore_caja),hl
1762  8D10 CD 17 8D     	call Extrae_address
1763  8D13 22 E7 89     	ld (Puntero_restore_caja),hl
1764  8D16 C9               ret
1765  8D17
1766  8D17              ; *************************************************************************************************************************************************************
1767  8D17              ;
1768  8D17              ; 8/1/23
1769  8D17              ;
1770  8D17              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1771  8D17
1772  8D17              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1773  8D17              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1774  8D17              ;	ret
1775  8D17              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1776  8D17              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1777  8D17              ;	ret
1778  8D17
1779  8D17              ; -------------------------------------------------------------------------------------------------------------
1780  8D17              ;
1781  8D17              ; 21/9/23
1782  8D17              ;
1783  8D17
1784  8D17              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1785  8D17
1786  8D17              ;;Limpia_album_Amadeus
1787  8D17              ;
1788  8D17              ;;	ld hl,Scanlines_album_Amadeus
1789  8D17              ;;	ld a,(hl)
1790  8D17              ;;	and a
1791  8D17              ;;	ret z
1792  8D17
1793  8D17              ;;	ld hl,Scanlines_album_Amadeus;
1794  8D17              ;;	ld de,Scanlines_album_Amadeus+1
1795  8D17              ;;	ld bc,11
1796  8D17              ;;	xor a
1797  8D17              ;;	ld (hl),a
1798  8D17              ;;	ldir
1799  8D17
1800  8D17              ;;	ld hl,Scanlines_album_Amadeus
1801  8D17              ;;	ld (End_Snapshot_Amadeus),hl
1802  8D17
1803  8D17              ;;	ret
1804  8D17
1805  8D17              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1806  8D17              ;	ld de,Variables_de_borrado+1
1807  8D17              ;	ld bc,5
1808  8D17              ;	xor a
1809  8D17              ;	ld (hl),a
1810  8D17              ;	ldir
1811  8D17              ;	ret
1812  8D17
1813  8D17              ; *************************************************************************************************************************************************************
1814  8D17              ;
1815  8D17              ; 20/10/22
1816  8D17              ;
1817  8D17              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1818  8D17              ;
1819  8D17              ; Destruye el puntero y DE !!!!!
1820  8D17
1821  8D17 5E           Extrae_address ld e,(hl)
1822  8D18 23           	inc hl
1823  8D19 56           	ld d,(hl)
1824  8D1A 2B           	dec hl
1825  8D1B EB           	ex de,hl
1826  8D1C C9           	ret
1827  8D1D
1828  8D1D              ; *************************************************************************************************************************************************************
1829  8D1D              ;
1830  8D1D              ;	20/1/24
1831  8D1D              ;
1832  8D1D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1833  8D1D              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1834  8D1D              ;
1835  8D1D              ;   Destruye HL y BC !!!!!,
1836  8D1D              ;
1837  8D1D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1838  8D1D              ;					"0" ..... Izquierda.
1839  8D1D
1840  8D1D              Inicia_Puntero_objeto
1841  8D1D
1842  8D1D 3A BA 89     	ld a,(Cuad_objeto)
1843  8D20 E6 01        	and 1
1844  8D22 F5           	push af
1845  8D23 CC 3F 8D     	call z,Inicia_puntero_objeto_izq
1846  8D26 F1           	pop af
1847  8D27 C8           	ret z
1848  8D28 CD 2C 8D     	call Inicia_puntero_objeto_der
1849  8D2B C9           	ret
1850  8D2C
1851  8D2C              ; Arrancamos desde la parte izquierda de la pantalla.
1852  8D2C              ; Iniciamos (Indice_Sprite_der).
1853  8D2C
1854  8D2C 2A B0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1855  8D2F 22 B4 89     	ld (Puntero_DESPLZ_der),hl
1856  8D32 CD 17 8D     	call Extrae_address
1857  8D35 22 AA 89     	ld (Puntero_objeto),hl
1858  8D38
1859  8D38 2A B2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1860  8D3B 22 B6 89     	ld (Puntero_DESPLZ_izq),hl
1861  8D3E C9           	ret
1862  8D3F
1863  8D3F              ; Arrancamos desde la parte derecha de la pantalla.
1864  8D3F              ; Iniciamos (Indice_Sprite_izq).
1865  8D3F
1866  8D3F 2A B2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1867  8D42 22 B6 89     	ld (Puntero_DESPLZ_izq),hl
1868  8D45 CD 17 8D     	call Extrae_address
1869  8D48 22 AA 89     	ld (Puntero_objeto),hl
1870  8D4B
1871  8D4B 2A B0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1872  8D4E 22 B4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1873  8D51 C9           	ret
1874  8D52
1875  8D52              ; **************************************************************************************************
1876  8D52              ;
1877  8D52              ;	12/5/24
1878  8D52              ;
1879  8D52              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1880  8D52
1881  8D52              Restore_entidad
1882  8D52
1883  8D52 2A E5 89     	ld hl,(Puntero_store_caja)
1884  8D55 11 A5 89     	ld de,Bandeja_DRAW
1885  8D58 7E           	ld a,(hl)
1886  8D59 12           	ld (de),a
1887  8D5A 23           	inc hl 											; (Tipo).
1888  8D5B
1889  8D5B 11 AC 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1890  8D5E 01 02 00     	ld bc,2
1891  8D61 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1892  8D63
1893  8D63 13           	inc de
1894  8D64 7E           	ld a,(hl)
1895  8D65 12           	ld (de),a 										; Transferimos (Contador_de_vueltas).
1896  8D66 23           	inc hl
1897  8D67
1898  8D67 11 BB 89     	ld de,Impacto
1899  8D6A 01 08 00     	ld bc,8
1900  8D6D ED B0        	ldir 											; Transferimos (Impacto), (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1901  8D6F              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1902  8D6F 11 C7 89     	ld de,Ctrl_2
1903  8D72 01 02 00     	ld bc,2
1904  8D75 ED B0        	ldir											; Transferimos (Ctrl_2) y (Velocidad).
1905  8D77
1906  8D77 C9           	ret
1907  8D78
1908  8D78              ; **************************************************************************************************
1909  8D78              ;
1910  8D78              ;	08/05/23
1911  8D78              ;
1912  8D78              ;	Incrementamos los dos punteros de entidades. (+1).
1913  8D78
1914  8D78              Incrementa_punteros_de_cajas
1915  8D78
1916  8D78 2A E7 89     	ld hl,(Puntero_restore_caja)
1917  8D7B 22 E5 89     	ld (Puntero_store_caja),hl
1918  8D7E 2A E9 89     	ld hl,(Indice_restore_caja)
1919  8D81 23           	inc hl
1920  8D82 23           	inc hl
1921  8D83 22 E9 89     	ld (Indice_restore_caja),hl
1922  8D86 CD 17 8D         call Extrae_address
1923  8D89 22 E7 89         ld (Puntero_restore_caja),hl
1924  8D8C C9               ret
1925  8D8D
1926  8D8D              ; **************************************************************************************************
1927  8D8D              ;
1928  8D8D              ;	21/12/23
1929  8D8D              ;
1930  8D8D              ;	Restore_Amadeus
1931  8D8D              ;
1932  8D8D              ;	Cargamos en DRAW los parámetros de Amadeus.
1933  8D8D              ;
1934  8D8D
1935  8D8D              ;Restore_Amadeus	push hl
1936  8D8D              ;	push de
1937  8D8D              ; 	push bc
1938  8D8D              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1939  8D8D              ;	ld de,Bandeja_DRAW
1940  8D8D              ;	ld bc,42
1941  8D8D              ;	ldir
1942  8D8D              ;	pop bc
1943  8D8D              ;	pop de
1944  8D8D              ;	pop hl
1945  8D8D              ;	ret
1946  8D8D
1947  8D8D              ; *************************************************************************************************************************************************************
1948  8D8D              ;
1949  8D8D              ;	21/12/23
1950  8D8D              ;
1951  8D8D              ;	Store_Amadeus
1952  8D8D              ;
1953  8D8D              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1954  8D8D              ;
1955  8D8D              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1956  8D8D              ;
1957  8D8D              ;	DESTRUYE: HL y BC y DE.
1958  8D8D
1959  8D8D              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1960  8D8D              ;	ld bc,42
1961  8D8D              ;	ldir
1962  8D8D              ;	ret
1963  8D8D
1964  8D8D              ; -----------------------------------------------------------
1965  8D8D              ;
1966  8D8D              ;	21/12/23
1967  8D8D              ;
1968  8D8D              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1969  8D8D              ;
1970  8D8D              ;	Destruye: HL,BC,DE,A
1971  8D8D
1972  8D8D              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1973  8D8D              ;	ld bc,41
1974  8D8D              ;	xor a
1975  8D8D              ;	ld (hl),a;
1976  8D8D              ;	ld de,Bandeja_DRAW+1
1977  8D8D              ;	ldir
1978  8D8D              ;	ret
1979  8D8D
1980  8D8D              ; -----------------------------------------------------------
1981  8D8D
1982  8D8D              ; Teclado.
1983  8D8D
1984  8D8D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1985  8D8F DB FE        	in a,($fe)
1986  8D91 E6 01        	and $01
1987  8D93 28 02        	jr z,1f
1988  8D95 18 F6        	jr Pulsa_ENTER
1989  8D97 C9           1 ret
1990  8D98
1991  8D98              ; **************************************************************************************************
1992  8D98              ;
1993  8D98              ; Temporización.
1994  8D98
1995  8D98              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1996  8D98              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1997  8D98              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1998  8D98              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1999  8D98
2000  8D98              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
2001  8D98              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
2002  8D98              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
2003  8D98
2004  8D98              ; A partir de $4f61 no hace falta DELAY.
2005  8D98
2006  8D98              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
2007  8D98
2008  8D98 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
2009  8D9B 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
2010  8D9C 78           	LD A,B
2011  8D9D A7           	AND A
2012  8D9E 20 FB        	JR NZ,wait
2013  8DA0 C9           	RET
2014  8DA1
2015  8DA1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2016  8DA1              ;
2017  8DA1              ;	5/3/23
2018  8DA1              ;
2019  8DA1              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
2020  8DA1
2021  8DA1              ;Movimiento_Amadeus
2022  8DA1
2023  8DA1              ; Disparo.
2024  8DA1
2025  8DA1              ;	ld a,(Disparo_Amadeus)
2026  8DA1              ;	and a
2027  8DA1              ;	jr nz,1F
2028  8DA1              ;	jr 2F
2029  8DA1
2030  8DA1              ;1 ld a,$f7													; "5" para disparar.
2031  8DA1              ;	in a,($fe)
2032  8DA1              ;	and $10
2033  8DA1
2034  8DA1              ;	push af
2035  8DA1              ;	call z,Genera_disparo
2036  8DA1              ;	pop af
2037  8DA1              ;	jr nz,2F
2038  8DA1
2039  8DA1              ;	ld a,(Disparo_Amadeus)
2040  8DA1              ;	xor 1
2041  8DA1              ;	ld (Disparo_Amadeus),a
2042  8DA1              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2043  8DA1              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2044  8DA1              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2045  8DA1              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
2046  8DA1
2047  8DA1              ;	ld a,$f7
2048  8DA1              ;	in a,($fe)
2049  8DA1              ;	and $01
2050  8DA1              ;	ret z
2051  8DA1
2052  8DA1              ;	ld a,$f7
2053  8DA1              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2054  8DA1              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2055  8DA1              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
2056  8DA1              ;	ret
2057  8DA1
2058  8DA1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2059  8DA1              ;
2060  8DA1              ;	Rutina provisional para que los malotes cagen balas.
2061  8DA1
2062  8DA1              ;Detecta_disparo_entidad
2063  8DA1
2064  8DA1              ;	ld a,(Disparo_entidad)
2065  8DA1              ;	and a
2066  8DA1              ;	ret z
2067  8DA1
2068  8DA1              ;! Aquí hemos de implementar la rutina/s que generan disparo...
2069  8DA1
2070  8DA1              ;	ld a,$7f				; Detecta SPACE.
2071  8DA1              ;	in a,($fe)
2072  8DA1              ;	and 1
2073  8DA1              ;	ret nz
2074  8DA1
2075  8DA1              ;	call Genera_disparo
2076  8DA1              ;	ret
2077  8DA1
2078  8DA1              ; ----------------------------------------------------------------------
2079  8DA1              ;
2080  8DA1              ;	8/9/23
2081  8DA1
2082  8DA1              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
2083  8DA1              ; 	dec hl
2084  8DA1              ;	ld a,(hl)
2085  8DA1              ;	and a
2086  8DA1              ;	ret z										; Salimos si es álbum está vacío.
2087  8DA1
2088  8DA1              ;	ld de,Variables_de_borrado+5
2089  8DA1              ;	ld bc,6
2090  8DA1              ;	lddr
2091  8DA1              ;	ret
2092  8DA1
2093  8DA1              ; ----------------------------------------------------------------------
2094  8DA1              ;
2095  8DA1              ;	9/9/23
2096  8DA1
2097  8DA1              ;Repone_datos_de_borrado_Amadeus
2098  8DA1
2099  8DA1              ;	ld hl,Variables_de_borrado
2100  8DA1              ;	ld de,Scanlines_album_Amadeus
2101  8DA1              ;	ld bc,6
2102  8DA1              ;	ldir
2103  8DA1
2104  8DA1              ;	ex de,hl
2105  8DA1              ;	ld (End_Snapshot_Amadeus),hl
2106  8DA1
2107  8DA1              ;	ret
2108  8DA1
2109  8DA1              ; ----------------------------------------------------------------------
2110  8DA1              ;
2111  8DA1              ;	27/10/23
2112  8DA1              ;
2113  8DA1
2114  8DA1              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
2115  8DA1              ;	_ Scanlines_album correspondiente.
2116  8DA1
2117  8DA1              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
2118  8DA1              ;	_ durante el proceso de escritura.
2119  8DA1
2120  8DA1              ;Repone_datos_de_borrado
2121  8DA1
2122  8DA1              ;	ld de,(Scanlines_album_SP)
2123  8DA1              ;	ld hl,Variables_de_borrado
2124  8DA1              ;	ld bc,6
2125  8DA1              ;	ldir
2126  8DA1
2127  8DA1              ;	ex de,hl
2128  8DA1              ;	ld (Scanlines_album_SP),hl
2129  8DA1
2130  8DA1              ;	ret
2131  8DA1
2132  8DA1              ; --------------------------------------------------------------------------------------
2133  8DA1
2134  8DA1              ;Pinta_Amadeus
2135  8DA1
2136  8DA1              ;   call Calcula_malotes_Amadeus
2137  8DA1              ;	call Extrae_foto_Amadeus
2138  8DA1              ;	call Limpia_album_Amadeus
2139  8DA1
2140  8DA1              ;	ret
2141  8DA1
2142  8DA1              ; ---------------------------------------------------------------
2143  8DA1
2144  8DA1              	org $aa7f
2145  AA7F
2146  AA7F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ AA7F              ; ******************************************************************************************************************************************************************************************
   2+ AA7F              ;
   3+ AA7F              ;   21/04/24
   4+ AA7F              ;
   5+ AA7F              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ AA7F              ;   (XOR) bit a bit.
   7+ AA7F              ;
   8+ AA7F              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ AA7F
  10+ AA7F              Derivando_RND
  11+ AA7F
  12+ AA7F 21 6C 86         ld hl,Numeros_aleatorios
  13+ AA82
  14+ AA82 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ AA84 C5               push bc
  16+ AA85              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ AA85 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ AA88              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ AA88
  20+ AA88 A7           6 and a                                 ; Carry a "0".
  21+ AA89 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ AA8B 30 02            jr nc,1F
  23+ AA8D
  24+ AA8D CB C1            set 0,c
  25+ AA8F
  26+ AA8F 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ AA90 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ AA92 5F               ld e,a
  29+ AA93
  30+ AA93 7A               ld a,d
  31+ AA94 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ AA96 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ AA98
  34+ AA98 CB 3F            srl a
  35+ AA9A
  36+ AA9A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ AA9B
  38+ AA9B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ AA9C 28 04            jr z,4F
  40+ AA9E
  41+ AA9E CB FF            set 7,a
  42+ AAA0 18 02            jr 5F
  43+ AAA2
  44+ AAA2 CB BF        4 res 7,a
  45+ AAA4
  46+ AAA4 CB 21        5 sla c
  47+ AAA6 10 E0            djnz 6B
  48+ AAA8
  49+ AAA8 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ AAA9
  51+ AAA9 77               ld (hl),a
  52+ AAAA 23               inc hl
  53+ AAAB C1               pop bc
  54+ AAAC 10 D4            djnz 3B
  55+ AAAE
  56+ AAAE C9               ret
  57+ AAAF
  58+ AAAF
  59+ AAAF
# file closed: RND_Derivando.asm
2147  AAAF              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ AAAF              ;---------------------------------------------------------------------------------------------------------------
   2+ AAAF              ;
   3+ AAAF              ;   8/3/24
   4+ AAAF              ;
   5+ AAAF              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ AAAF              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ AAAF              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ AAAF              ;	_ de la 1ª entidad del Nivel.
   9+ AAAF              ;
  10+ AAAF              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ AAAF
  12+ AAAF              ;	MODIFICA: HL,DE y A.
  13+ AAAF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ AAAF
  15+ AAAF              Inicializa_Nivel
  16+ AAAF
  17+ AAAF 2A 13 8A     	ld hl,(Puntero_indice_NIVELES)
  18+ AAB2 CD 17 8D     	call Extrae_address
  19+ AAB5 7E           	ld a,(hl)
  20+ AAB6 32 EB 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ AAB9 23           	inc hl
  22+ AABA CD C7 AA     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ AABD 22 15 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ AAC0 CD D0 AA     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ AAC3
  26+ AAC3 CD E1 AA     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ AAC6 C9           	ret
  28+ AAC7
  29+ AAC7              ; ----------------------
  30+ AAC7
  31+ AAC7 11 CA 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ AACA 01 04 00     	ld bc,4
  33+ AACD ED B0        	ldir
  34+ AACF C9           	ret
  35+ AAD0
  36+ AAD0 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ AAD1 CD 54 AC         call Calcula_salto_en_BC
  38+ AAD4 21 8B 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ AAD7 A7               and a
  40+ AAD8 ED 4A            adc hl,bc
  41+ AADA CD 17 8D         call Extrae_address
  42+ AADD 22 D6 89         ld (Puntero_indice_mov),hl
  43+ AAE0 C9               ret
  44+ AAE1
  45+ AAE1 3A A5 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ AAE4 CD 54 AC     	call Calcula_salto_en_BC
  47+ AAE7 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ AAEA A7               and a
  49+ AAEB ED 4A            adc hl,bc
  50+ AAED CD 17 8D         call Extrae_address
  51+ AAF0 22 BE 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ AAF3 C9           	ret
  53+ AAF4
  54+ AAF4              ;---------------------------------------------------------------------------------------------------------------
  55+ AAF4              ;
  56+ AAF4              ;   5/1/24
  57+ AAF4              ;
  58+ AAF4              ;	Destruye A,BC,HL,DE
  59+ AAF4
  60+ AAF4              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ AAF4              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ AAF4
  63+ AAF4              Inicia_Entidades
  64+ AAF4
  65+ AAF4              ; Preparamos los punteros de las cajas de entidades:
  66+ AAF4
  67+ AAF4 CD 01 8D     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ AAF7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ AAF7 CD B4 AC     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ AAFA
  71+ AAFA 2A 15 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ AAFD
  73+ AAFD 22 15 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ AB00
  75+ AB00 CD 02 AC     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ AB03
  77+ AB03 2A 15 8A     	ld hl,(Datos_de_nivel)
  78+ AB06
  79+ AB06              ; En este punto:
  80+ AB06              ;
  81+ AB06              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ AB06              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ AB06
  84+ AB06 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ AB07
  86+ AB07 7E           	ld a,(hl)
  87+ AB08 CD 87 AB     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ AB0B
  89+ AB0B CD 66 AC     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ AB0E
  91+ AB0E              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ AB0E
  93+ AB0E CD 24 AC     	call Busca_mov_masticados_segun_tipo
  94+ AB11
  95+ AB11 A7           	and a
  96+ AB12 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ AB14
  98+ AB14              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ AB14
 100+ AB14              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ AB14              ;	_ de este tipo de entidad.
 102+ AB14
 103+ AB14 CD 0F 9A     	call Situa_en_contador_general_de_mov_masticados
 104+ AB17 CD 1C 9A     	call Transfiere_datos_de_contadores
 105+ AB1A
 106+ AB1A 18 06        	jr 4F
 107+ AB1C
 108+ AB1C CD 27 8C     3 call Construye_movimientos_masticados_entidad
 109+ AB1F
 110+ AB1F              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ AB1F              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ AB1F              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ AB1F              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ AB1F              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ AB1F
 116+ AB1F CD E2 AB     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ AB22              ;																; _ Mov_masticados ya generados.
 118+ AB22
 119+ AB22 CD 7B 8C     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ AB25
 121+ AB25 DD E5        	push ix
 122+ AB27 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ AB28
 124+ AB28 D5           	push de
 125+ AB29 CD EF AC     	call Genera_coordenadas
 126+ AB2C CD 8B 8B     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 127+ AB2F D1           	pop de
 128+ AB30
 129+ AB30 CD 42 AD     	call Genera_datos_de_impresion
 130+ AB33              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 131+ AB33              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 132+ AB33              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 133+ AB33              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 134+ AB33
 135+ AB33 CD A6 AB     	call Decrementa_Contador_de_mov_masticados
 136+ AB36
 137+ AB36              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 138+ AB36
 139+ AB36 CD 8D AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 140+ AB39 CD 9B AB     	call Limpiamos_bandeja_DRAW
 141+ AB3C CD 78 8D     	call Incrementa_punteros_de_cajas
 142+ AB3F
 143+ AB3F              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 144+ AB3F              ; _ entidad del Nivel.
 145+ AB3F
 146+ AB3F 3A 09 8A     	ld a,(Ctrl_4)
 147+ AB42 E6 F0        	and $f0
 148+ AB44 32 09 8A     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 149+ AB47
 150+ AB47              ; Siguiente entidad del Nivel.
 151+ AB47
 152+ AB47 2A 15 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 153+ AB4A 23           	inc hl 														; _ entidad del Nivel.
 154+ AB4B
 155+ AB4B C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 156+ AB4C
 157+ AB4C 10 AF        	djnz 2B
 158+ AB4E
 159+ AB4E C9           	ret
 160+ AB4F
 161+ AB4F              ; -------------------------------------------------------------------------------------------------------------------
 162+ AB4F              ;
 163+ AB4F              ;	27/5/24
 164+ AB4F              ;
 165+ AB4F              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 166+ AB4F              ;
 167+ AB4F
 168+ AB4F              ; 	Cargamos la definición de Amadeus en DRAW.
 169+ AB4F              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 170+ AB4F
 171+ AB4F 21 D7 87     Inicia_Amadeus ld hl,Definicion_Amadeus
 172+ AB52 CD 66 AC     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 173+ AB55
 174+ AB55
 175+ AB55              Construye_movimientos_masticados_Amadeus
 176+ AB55
 177+ AB55 2A BE 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 178+ AB58 CD 6E 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 179+ AB5B              ;															; _ el (Contador_de_mov_masticados).
 180+ AB5B CD 1D 8D     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 181+ AB5E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 182+ AB5E
 183+ AB5E              ; Generamos movimientos masticados de Amadeus.
 184+ AB5E
 185+ AB5E 06 79        	ld b,121												; $0079, 121d.
 186+ AB60
 187+ AB60 C5           1 push bc
 188+ AB61 CD 3C 92     	call Draw
 189+ AB64 CD 53 8C     	call Guarda_movimiento_masticado
 190+ AB67
 191+ AB67 CD BA 95     	call Mov_right
 192+ AB6A CD BA 95     	call Mov_right											; Amadeus se mueve x2 pixel.
 193+ AB6D
 194+ AB6D C1           	pop bc
 195+ AB6E 10 F0        	djnz 1B
 196+ AB70
 197+ AB70              ; Todos los movimientos masticados de Amadeus se han creado.
 198+ AB70
 199+ AB70              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 200+ AB70              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 201+ AB70
 202+ AB70 2A BE 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 203+ AB73 01 08 00     	ld bc,8
 204+ AB76 A7           	and a
 205+ AB77 ED 42        	sbc hl,bc
 206+ AB79 22 BE 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 207+ AB7C
 208+ AB7C              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 209+ AB7C
 210+ AB7C 06 3C        	ld b,60
 211+ AB7E CD 90 98     2 call Amadeus_a_izquierda
 212+ AB81 10 FB        	djnz 2B
 213+ AB83
 214+ AB83 CD DF 8C     	call Pinta_Amadeus
 215+ AB86
 216+ AB86 C9           	ret
 217+ AB87
 218+ AB87              ; ---------------------------------------------------------------------
 219+ AB87              ;
 220+ AB87              ;	10/02/24
 221+ AB87              ;
 222+ AB87              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 223+ AB87              ;
 224+ AB87              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 225+ AB87
 226+ AB87              Definicion_segun_tipo
 227+ AB87
 228+ AB87 CD 54 AC     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 229+ AB8A 21 B9 87     	ld hl,Indice_de_definiciones_de_entidades
 230+ AB8D CD 5C AC     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 231+ AB90 C9           	ret
 232+ AB91
 233+ AB91              ; ---------------------------------------------------------------------
 234+ AB91              ;
 235+ AB91              ;	27/03/24
 236+ AB91
 237+ AB91
 238+ AB91              Store_Restore_cajas
 239+ AB91
 240+ AB91 CD 8D AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 241+ AB94 CD 9B AB     	call Limpiamos_bandeja_DRAW
 242+ AB97
 243+ AB97              ; 	Entidad_sospechosa. 20/4/23
 244+ AB97
 245+ AB97              ;	ld a,(Impacto)
 246+ AB97              ;	and a
 247+ AB97              ;	jr z,1F
 248+ AB97
 249+ AB97              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 250+ AB97              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 251+ AB97              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 252+ AB97              ;	adc hl,bc 											; _ "0" más adelante.
 253+ AB97              ;	ld (Entidad_sospechosa_de_colision),hl
 254+ AB97
 255+ AB97
 256+ AB97              ;1 ld hl,(Puntero_restore_caja)
 257+ AB97              ;	ld a,(hl)
 258+ AB97              ;	and a
 259+ AB97              ;	push af
 260+ AB97              ;	jr z,2F
 261+ AB97
 262+ AB97              ;	di
 263+ AB97              ;	ld de,Bandeja_DRAW
 264+ AB97              ;	ld bc,42
 265+ AB97              ;	ldir
 266+ AB97              ;	ei
 267+ AB97
 268+ AB97 CD 78 8D     2 call Incrementa_punteros_de_cajas
 269+ AB9A C9           	ret
 270+ AB9B
 271+ AB9B              ; ---------------------------------------------------------------------
 272+ AB9B              ;
 273+ AB9B              ;	12/05/24
 274+ AB9B
 275+ AB9B 21 A5 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 276+ AB9E 06 25        	ld b,37
 277+ ABA0 AF           	xor a
 278+ ABA1 77           1 ld (hl),a
 279+ ABA2 23           	inc hl
 280+ ABA3 10 FC        	djnz 1B
 281+ ABA5 C9           	ret
 282+ ABA6
 283+ ABA6              ; ---------------------------------------------------------------------
 284+ ABA6              ;
 285+ ABA6              ;	24/03/24
 286+ ABA6
 287+ ABA6 2A C0 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 288+ ABA9 2B           	dec hl
 289+ ABAA
 290+ ABAA              ; debug 6/5/24
 291+ ABAA
 292+ ABAA
 293+ ABAA 22 C0 89     	ld (Contador_de_mov_masticados),hl
 294+ ABAD C9           	ret
 295+ ABAE
 296+ ABAE              ; ---------------------------------------------------------------------
 297+ ABAE              ;
 298+ ABAE              ;	8/5/24
 299+ ABAE
 300+ ABAE              Reinicia_entidad_maliciosa
 301+ ABAE
 302+ ABAE              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 303+ ABAE
 304+ ABAE CD 0F 9A     	call Situa_en_contador_general_de_mov_masticados
 305+ ABB1 CD 1C 9A     	call Transfiere_datos_de_contadores
 306+ ABB4
 307+ ABB4              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 308+ ABB4
 309+ ABB4 3A A5 89     	ld a,(Tipo)
 310+ ABB7 CD 87 AB     	call Definicion_segun_tipo
 311+ ABBA
 312+ ABBA E5           	push hl
 313+ ABBB DD E1        	pop ix
 314+ ABBD
 315+ ABBD DD 6E 0B     	ld l,(ix+11)
 316+ ABC0 DD 66 0C     	ld h,(ix+12)
 317+ ABC3
 318+ ABC3 22 BE 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 319+ ABC6
 320+ ABC6 CD 7B 8C     	call Cargamos_registros_con_mov_masticado
 321+ ABC9
 322+ ABC9              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 323+ ABC9              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 324+ ABC9              ; Ejemplos.
 325+ ABC9
 326+ ABC9              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 327+ ABC9              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 328+ ABC9              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 329+ ABC9              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 330+ ABC9              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 331+ ABC9
 332+ ABC9 21 AF 89     	ld hl,Contador_de_vueltas
 333+ ABCC CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 334+ ABCE
 335+ ABCE 7E           	ld a,(hl)
 336+ ABCF CB 2F        	sra a
 337+ ABD1 CB 2F        	sra a
 338+ ABD3
 339+ ABD3 32 C8 89     	ld (Velocidad),a
 340+ ABD6
 341+ ABD6 3E 40        	ld a,$40
 342+ ABD8 BE           	cp (hl)
 343+ ABD9 C0           	ret nz
 344+ ABDA
 345+ ABDA              ; Límitador.
 346+ ABDA
 347+ ABDA              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 348+ ABDA
 349+ ABDA CB 2E        	sra (hl)
 350+ ABDC 21 C8 89     	ld hl,Velocidad
 351+ ABDF CB 2E        	sra (hl)
 352+ ABE1
 353+ ABE1 C9           	ret
 354+ ABE2
 355+ ABE2              ; ---------------------------------------------------------------------
 356+ ABE2              ;
 357+ ABE2              ;	22/01/24
 358+ ABE2
 359+ ABE2 21 09 8A     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 360+ ABE5 CB 46        	bit 0,(hl)
 361+ ABE7 20 0D        	jr nz,1F
 362+ ABE9 CB 4E        	bit 1,(hl)
 363+ ABEB 20 0C        	jr nz,2F
 364+ ABED CB 56        	bit 2,(hl)
 365+ ABEF 20 0B        	jr nz,3F
 366+ ABF1 CB 5E        	bit 3,(hl)
 367+ ABF3 20 0A        	jr nz,4F
 368+ ABF5 C9           	ret
 369+ ABF6
 370+ ABF6 CB E6        1 set 4,(hl)
 371+ ABF8 C9           	ret
 372+ ABF9 CB EE        2 set 5,(hl)
 373+ ABFB C9           	ret
 374+ ABFC CB F6        3 set 6,(hl)
 375+ ABFE C9           	ret
 376+ ABFF CB FE        4 set 7,(hl)
 377+ AC01 C9           	ret
 378+ AC02
 379+ AC02              ; ---------------------------------------------------------------------
 380+ AC02              ;
 381+ AC02              ;	23/01/24
 382+ AC02              ;
 383+ AC02              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 384+ AC02              ;
 385+ AC02              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 386+ AC02              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 387+ AC02              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 388+ AC02              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 389+ AC02
 390+ AC02              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 391+ AC02
 392+ AC02 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 393+ AC03 3D           	dec a
 394+ AC04 20 06        	jr nz,1F
 395+ AC06
 396+ AC06              ; --- Tipo_1
 397+ AC06
 398+ AC06 21 09 8A     	ld hl,Ctrl_4
 399+ AC09 CB C6        	set 0,(hl)
 400+ AC0B C9           	ret
 401+ AC0C
 402+ AC0C 3D           1 dec a
 403+ AC0D 20 06        	jr nz,2F
 404+ AC0F
 405+ AC0F              ; --- Tipo_2
 406+ AC0F
 407+ AC0F 21 09 8A     	ld hl,Ctrl_4
 408+ AC12 CB CE        	set 1,(hl)
 409+ AC14 C9           	ret
 410+ AC15
 411+ AC15 3D           2 dec a
 412+ AC16 20 06        	jr nz,3F
 413+ AC18
 414+ AC18              ; --- Tipo_3
 415+ AC18
 416+ AC18 21 09 8A     	ld hl,Ctrl_4
 417+ AC1B CB D6        	set 2,(hl)
 418+ AC1D C9           	ret
 419+ AC1E
 420+ AC1E              ; --- Tipo_3
 421+ AC1E
 422+ AC1E 21 09 8A     3 ld hl,Ctrl_4
 423+ AC21 CB D6        	set 2,(hl)
 424+ AC23 C9           	ret
 425+ AC24
 426+ AC24              ; ---------------------------------------------------------------------
 427+ AC24              ;
 428+ AC24              ;	22/01/24
 429+ AC24
 430+ AC24 21 09 8A     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 431+ AC27 CB 46        	bit 0,(hl)
 432+ AC29 20 0E        	jr nz,1F
 433+ AC2B
 434+ AC2B CB 4E        	bit 1,(hl)
 435+ AC2D 20 10        	jr nz,2F
 436+ AC2F
 437+ AC2F CB 56        	bit 2,(hl)
 438+ AC31 20 12        	jr nz,3F
 439+ AC33
 440+ AC33 CB 5E        	bit 3,(hl)
 441+ AC35 20 14        	jr nz,4F
 442+ AC37 18 19        	jr 6F
 443+ AC39
 444+ AC39              ; Entidad_de_Tipo_1.
 445+ AC39
 446+ AC39 CB 66        1 bit 4,(hl)
 447+ AC3B 28 15        	jr z,6F
 448+ AC3D 18 10        	jr 5F
 449+ AC3F
 450+ AC3F              ; Entidad_de_Tipo_2.
 451+ AC3F
 452+ AC3F CB 6E        2 bit 5,(hl)
 453+ AC41 28 0F        	jr z,6F
 454+ AC43 18 0A        	jr 5F
 455+ AC45
 456+ AC45              ; Entidad_de_Tipo_3.
 457+ AC45
 458+ AC45 CB 76        3 bit 6,(hl)
 459+ AC47 28 09        	jr z,6F
 460+ AC49 18 04        	jr 5F
 461+ AC4B
 462+ AC4B              ; Entidad_de_Tipo_4.
 463+ AC4B
 464+ AC4B CB 7E        4 bit 7,(hl)
 465+ AC4D 28 03        	jr z,6F
 466+ AC4F
 467+ AC4F              ; Esta entidad TIENE MOV_MASTICADOS.
 468+ AC4F
 469+ AC4F AF           5 xor a
 470+ AC50 3C           	inc a
 471+ AC51 C9           	ret
 472+ AC52
 473+ AC52              ; Esta entidad NO TIENE MOV_MASTICADOS.
 474+ AC52
 475+ AC52 AF           6 xor a
 476+ AC53 C9           	ret
 477+ AC54
 478+ AC54              ;	------------------------------------------------------------------------------------
 479+ AC54              ;
 480+ AC54              ;	12/01/24
 481+ AC54              ;
 482+ AC54              ;	INPUTS:	A contiene el (Tipo) de entidad.
 483+ AC54              ;
 484+ AC54              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 485+ AC54              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 486+ AC54
 487+ AC54 CB 27        Calcula_salto_en_BC sla a
 488+ AC56 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 489+ AC58 4F           	ld c,a
 490+ AC59 06 00        	ld b,0
 491+ AC5B C9           	ret
 492+ AC5C
 493+ AC5C              ; ------------------------------------------------------------------
 494+ AC5C              ;
 495+ AC5C              ;	19/1/24
 496+ AC5C              ;
 497+ AC5C              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 498+ AC5C              ;	Actualiza (Datos_de_entidad) con esa dirección.
 499+ AC5C
 500+ AC5C A7           Situa_en_datos_de_definicion and a
 501+ AC5D ED 4A        	adc hl,bc
 502+ AC5F CD 17 8D     	call Extrae_address
 503+ AC62 22 F1 89         ld (Datos_de_entidad),hl
 504+ AC65 C9           	ret
 505+ AC66
 506+ AC66              ; ------------------------------------------------------------------
 507+ AC66
 508+ AC66              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 509+ AC66              ; 	inc de
 510+ AC66              ; 	inc de
 511+ AC66              ; 	ex de,hl
 512+ AC66              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 513+ AC66              ; 	ret
 514+ AC66
 515+ AC66              ; ----------------------------------------------------------------------------------------------------------
 516+ AC66              ;
 517+ AC66              ;	12/05/24
 518+ AC66              ;
 519+ AC66              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 520+ AC66              ;	_ de entidad.
 521+ AC66              ;
 522+ AC66              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 523+ AC66              ;
 524+ AC66              ;
 525+ AC66              ;	MODIFICA: HL,DE y BC
 526+ AC66
 527+ AC66
 528+ AC66              Definicion_de_entidad_a_bandeja_DRAW
 529+ AC66
 530+ AC66 11 A5 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 531+ AC69 01 03 00     	ld bc,3
 532+ AC6C ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 533+ AC6E              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 534+ AC6E 11 AF 89     	ld de,Contador_de_vueltas					; DE en (Attr).
 535+ AC71 01 05 00     	ld bc,5
 536+ AC74 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 537+ AC76              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 538+ AC76 11 B8 89     	ld de,Posicion_inicio
 539+ AC79 01 03 00     	ld bc,3
 540+ AC7C ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 541+ AC7E              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 542+ AC7E 11 BE 89     	ld de,Puntero_de_almacen_de_mov_masticados
 543+ AC81 01 02 00     	ld bc,2
 544+ AC84 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 545+ AC86
 546+ AC86 11 C9 89     	ld de,Frames_explosion
 547+ AC89 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 548+ AC8B 12           	ld (de),a 									; Vuelco (Frames_explosion).
 549+ AC8C
 550+ AC8C C9           	ret
 551+ AC8D
 552+ AC8D              ; ----------------------------------------------------------------------------------------------------------
 553+ AC8D              ;
 554+ AC8D              ;	12/5/24
 555+ AC8D              ;
 556+ AC8D              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 557+ AC8D              ;
 558+ AC8D              ;	Las cajas contienen entidades iniciadas:
 559+ AC8D              ;
 560+ AC8D              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 561+ AC8D              ;
 562+ AC8D              ;	OUTPUT: HL apunta al .db (Frames_explosion) de la bandeja DRAW.
 563+ AC8D              ;			DE apunta al 1er .db (Tipo) de la siguiente caja de entidades.
 564+ AC8D              ;
 565+ AC8D              ;	MODIFICA: HL,DE y BC
 566+ AC8D
 567+ AC8D              Parametros_de_bandeja_DRAW_a_caja
 568+ AC8D
 569+ AC8D 21 A5 89     	ld hl,Bandeja_DRAW
 570+ AC90 ED 5B E5 89  	ld de,(Puntero_store_caja)
 571+ AC94 7E           	ld a,(hl)
 572+ AC95 12           	ld (de),a
 573+ AC96 13           	inc de 													; (Tipo).
 574+ AC97
 575+ AC97 21 AC 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 576+ AC9A 01 02 00     	ld bc,2
 577+ AC9D ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 578+ AC9F              ;															; DE apunta ahora a (Contador_de_vueltas) de la caja de entidades. Hemos de recolocar HL.
 579+ AC9F 23           	inc hl
 580+ ACA0 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Contador_de_vueltas).
 581+ ACA1 12           	ld (de),a
 582+ ACA2 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 583+ ACA3
 584+ ACA3 21 BB 89     	ld hl,Impacto
 585+ ACA6 01 08 00     	ld bc,8
 586+ ACA9 ED B0        	ldir													; Hemos volcado (Impacto), (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 587+ ACAB              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 588+ ACAB              ;															; HL apunta ahora a (Columnas).
 589+ ACAB 21 C7 89     	ld hl,Ctrl_2
 590+ ACAE 01 02 00     	ld bc,2
 591+ ACB1 ED B0        	ldir													; Hemos volcado (Ctrl_2) y (Velocidad).
 592+ ACB3
 593+ ACB3 C9           	ret
 594+ ACB4
 595+ ACB4              ;---------------------------------------------------------------------------------------------------------------
 596+ ACB4              ;
 597+ ACB4              ;	5/1/24
 598+ ACB4              ;
 599+ ACB4              ;	INICIALIZA (Numero_parcial_de_entidades).
 600+ ACB4              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 601+ ACB4              ;
 602+ ACB4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 603+ ACB4              ;
 604+ ACB4              ;	(Numero_parcial_de_entidades)="7".
 605+ ACB4              ;
 606+ ACB4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 607+ ACB4              ;
 608+ ACB4              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 609+ ACB4              ;
 610+ ACB4              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 611+ ACB4              ;	MODIFICA: A y B.
 612+ ACB4              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 613+ ACB4
 614+ ACB4              Inicializa_Numero_parcial_de_entidades
 615+ ACB4
 616+ ACB4              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 617+ ACB4
 618+ ACB4 3A EB 89     	ld a,(Numero_de_entidades)
 619+ ACB7 A7           	and a
 620+ ACB8
 621+ ACB8              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 622+ ACB8              ;	jr z,$
 623+ ACB8              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 624+ ACB8
 625+ ACB8 20 03        	jr nz,3F
 626+ ACBA
 627+ ACBA              ; ---------- ---------- ----------
 628+ ACBA
 629+ ACBA              ;! RESET para pruebas. Omitir esta línea en modo normal.
 630+ ACBA              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 631+ ACBA
 632+ ACBA CD AF AA     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 633+ ACBD
 634+ ACBD              ; ---------- ---------- ----------
 635+ ACBD
 636+ ACBD 3A EB 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 637+ ACC0 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 638+ ACC2 38 08        	jr c,1F
 639+ ACC4
 640+ ACC4              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 641+ ACC4              ; Actualizamos variables.
 642+ ACC4
 643+ ACC4 3E 07        	ld a,7
 644+ ACC6 32 EC 89     	ld (Numero_parcial_de_entidades),a
 645+ ACC9 47           	ld b,a
 646+ ACCA 18 04        	jr 2F
 647+ ACCC
 648+ ACCC              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 649+ ACCC              ; (Numero_de_entidades)="0".
 650+ ACCC
 651+ ACCC 32 EC 89     1 ld (Numero_parcial_de_entidades),a
 652+ ACCF 47           	ld b,a
 653+ ACD0 C9           2 ret
 654+ ACD1
# file closed: Rutinas_de_inicio_y_niveles.asm
2148  ACD1              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ ACD1              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ ACD1              ;
   3+ ACD1              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ ACD1              ;
   5+ ACD1              ; *****************************************************************************************************************************************************************************************
   6+ ACD1              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ ACD1
   8+ ACD1 7C           calcula_tercio ld a,h
   9+ ACD2 E6 18        	and $18
  10+ ACD4 CB 2F        	sra a
  11+ ACD6 CB 2F        	sra a
  12+ ACD8 CB 2F        	sra a
  13+ ACDA C9           	ret
  14+ ACDB
# file closed: calcula_tercio.asm
2149  ACDB              	include "Cls.asm"
# file opened: Cls.asm
   1+ ACDB              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ ACDB              ;
   3+ ACDB              ;
   4+ ACDB              ;	CLS.
   5+ ACDB              ;
   6+ ACDB              ;	Limpia la pantalla y define sus atributos.
   7+ ACDB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ ACDB              ;
   9+ ACDB              ;	COLORES: 0 ..... NEGRO
  10+ ACDB              ;    		 1 ..... AZUL
  11+ ACDB              ; 			 2 ..... ROJO
  12+ ACDB              ;			 3 ..... MAGENTA
  13+ ACDB              ; 			 4 ..... VERDE
  14+ ACDB              ; 			 5 ..... CIAN
  15+ ACDB              ;			 6 ..... AMARILLO
  16+ ACDB              ; 			 7 ..... BLANCO
  17+ ACDB              ;
  18+ ACDB              ;	INPUT: A contiene los atributos de pantalla.
  19+ ACDB              ;
  20+ ACDB              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ ACDB
  22+ ACDB
  23+ ACDB 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ ACDE 11 01 40     	LD DE,$4001
  25+ ACE1 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ ACE4 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ ACE6 ED B0        	LDIR
  28+ ACE8 01 FF 02     	LD BC,767
  29+ ACEB 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ ACEC ED B0        	LDIR
  31+ ACEE C9           	ret
  32+ ACEF
# file closed: Cls.asm
2150  ACEF              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ ACEF              ; ------------------------------------------------------------------------
   2+ ACEF              ;
   3+ ACEF              ;	30/1/24
   4+ ACEF              ;
   5+ ACEF              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ ACEF              ;	Fila superior "0", Columna izquierda "0".
   7+ ACEF              ;
   8+ ACEF              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ ACEF              ;
  10+ ACEF              ;	Modifica: A,BC y DE.
  11+ ACEF
  12+ ACEF 7D           Genera_coordenadas ld a,l
  13+ ACF0 E6 1F        	and $1f
  14+ ACF2 32 AC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ ACF5
  16+ ACF5 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ ACF6 FE 40        	cp $40
  18+ ACF8 38 1C        	jr c,4F
  19+ ACFA
  20+ ACFA CD D1 AC     	call calcula_tercio
  21+ ACFD 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ ACFE
  23+ ACFE 1E 00        	ld e,0
  24+ AD00 7D           	ld a,l
  25+ AD01 E6 E0        	and $e0
  26+ AD03 28 01        	jr z,1F
  27+ AD05 04           	inc b
  28+ AD06
  29+ AD06 04           1 inc b
  30+ AD07 05           	dec b
  31+ AD08 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ AD0A              ;														; _ , salimos.
  33+ AD0A 1C           3 inc e
  34+ AD0B D6 20        	sub 32
  35+ AD0D 20 FB        	jr nz,3B
  36+ AD0F 10 F5        	djnz 1B
  37+ AD11
  38+ AD11 7B           2 ld a,e
  39+ AD12 32 AD 89     	ld (Coordenada_y),a
  40+ AD15 C9           	ret
  41+ AD16
  42+ AD16 AF           4 xor a
  43+ AD17 32 AD 89     	ld (Coordenada_y),a
  44+ AD1A C9           	ret
  45+ AD1B
  46+ AD1B              ; ------------------------------------------------------------------------
  47+ AD1B              ;	28/05/23
  48+ AD1B              ;
  49+ AD1B              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ AD1B              ;	Fila superior "0", Columna izquierda "0".
  51+ AD1B              ;
  52+ AD1B              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ AD1B              ;	Output: DE contendrá las coordenadas del disparo:
  54+ AD1B              ;
  55+ AD1B              ;		DE="$120d"
  56+ AD1B              ;
  57+ AD1B              ;		D, (Coordenada_X), Columnas, $12
  58+ AD1B              ;		E, (Coordenada_y), Filas, $0d
  59+ AD1B              ;
  60+ AD1B              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ AD1B
  62+ AD1B              ;	Modifica: A,BC y DE.
  63+ AD1B
  64+ AD1B
  65+ AD1B              Genera_coordenadas_disparo
  66+ AD1B
  67+ AD1B              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ AD1B
  69+ AD1B 7D           	ld a,l
  70+ AD1C E6 1F        	and $1f
  71+ AD1E 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ AD1F CD D1 AC     	call calcula_tercio
  73+ AD22 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ AD23 1E 00        	ld e,0
  75+ AD25 7D           	ld a,l
  76+ AD26 E6 E0        	and $e0
  77+ AD28 28 01        	jr z,1F
  78+ AD2A 04           	inc b
  79+ AD2B 1C           1 inc e
  80+ AD2C D6 20        	sub 32
  81+ AD2E 20 FB        	jr nz,1B
  82+ AD30 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ AD32 C9           	ret
  84+ AD33
# file closed: Genera_coordenadas.asm
2151  AD33              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ AD33              ; Relojes y temporizaciones.
   2+ AD33
   3+ AD33              ; ------------------------------------------------------
   4+ AD33              ;
   5+ AD33              ;	16/7/23
   6+ AD33              ;
   7+ AD33              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ AD33              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ AD33              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ AD33              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ AD33              ;
  12+ AD33              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ AD33              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ AD33
  15+ AD33              ; Disparo_entidad db 1
  16+ AD33              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ AD33              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ AD33
  19+ AD33              Habilita_disparos
  20+ AD33
  21+ AD33 7E           	ld a,(hl)
  22+ AD34 A7           	and a
  23+ AD35 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ AD36
  25+ AD36 EB           	ex de,hl
  26+ AD37
  27+ AD37 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ AD38 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ AD39
  30+ AD39              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ AD39
  32+ AD39 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ AD3A 7E           	ld a,(hl)
  34+ AD3B 23           	inc hl
  35+ AD3C 77           	ld (hl),a
  36+ AD3D
  37+ AD3D EB           	ex de,hl						; Habilitamos disparo.
  38+ AD3E 3E 01        	ld a,1
  39+ AD40 77           	ld (hl),a
  40+ AD41 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
2152  AD42              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ AD42              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AD42              ;
   3+ AD42              ;	11/03/24
   4+ AD42              ;
   5+ AD42              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ AD42              ;   DE contiene Puntero_objeto.
   7+ AD42              ;   IX contiene el Puntero de impresión.
   8+ AD42
   9+ AD42              Genera_datos_de_impresion
  10+ AD42
  11+ AD42 ED 73 F3 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ AD46 31 BE 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ AD49 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ AD4B
  15+ AD4B 2A 02 8A         ld hl,(Scanlines_album_SP)
  16+ AD4E
  17+ AD4E 3E 05            ld a,5
  18+ AD50 85               add l
  19+ AD51 6F               ld l,a
  20+ AD52
  21+ AD52 F9               ld sp,hl
  22+ AD53 22 02 8A         ld (Scanlines_album_SP),hl
  23+ AD56
  24+ AD56 21 00 00         ld hl,0
  25+ AD59
  26+ AD59 DD E5            push ix
  27+ AD5B 3B               dec sp
  28+ AD5C ED 7A            adc hl,sp
  29+ AD5E D5               push de
  30+ AD5F
  31+ AD5F              ; Recuperamos SP.
  32+ AD5F
  33+ AD5F ED 7B F3 89      ld sp,(Stack)
  34+ AD63
  35+ AD63 E5               push hl
  36+ AD64 F1               pop af
  37+ AD65 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ AD66
  39+ AD66              ; Tenemos el encabezado listo.
  40+ AD66              ; Preparamos registros para generar los scanlines.
  41+ AD66
  42+ AD66 DD E5            push ix
  43+ AD68 E1               pop hl                                          ; 1er scanline en HL.
  44+ AD69
  45+ AD69 ED 5B 02 8A      ld de,(Scanlines_album_SP)
  46+ AD6D
  47+ AD6D              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ AD6D              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ AD6D
  50+ AD6D 7C               ld a,h
  51+ AD6E FE 50            cp $50
  52+ AD70 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ AD72
  54+ AD72 20 05            jr nz,2F
  55+ AD74
  56+ AD74 7D               ld a,l
  57+ AD75 FE E0            cp $e0
  58+ AD77 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ AD79
  60+ AD79 7D           2 ld a,l
  61+ AD7A FE C0            cp $c0
  62+ AD7C D2 0E AE         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ AD7F
  64+ AD7F              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ AD7F
  66+ AD7F CD F8 94         call NextScan
  67+ AD82 EB               ex de,hl
  68+ AD83
  69+ AD83 73               ld (hl),e
  70+ AD84 23               inc hl
  71+ AD85 72               ld (hl),d
  72+ AD86 23               inc hl
  73+ AD87
  74+ AD87 EB               ex de,hl
  75+ AD88
  76+ AD88 CD F8 94         call NextScan
  77+ AD8B EB               ex de,hl
  78+ AD8C
  79+ AD8C 73               ld (hl),e
  80+ AD8D 23               inc hl
  81+ AD8E 72               ld (hl),d
  82+ AD8F 23               inc hl
  83+ AD90
  84+ AD90 EB               ex de,hl
  85+ AD91
  86+ AD91 CD F8 94         call NextScan
  87+ AD94 EB               ex de,hl
  88+ AD95
  89+ AD95 73               ld (hl),e
  90+ AD96 23               inc hl
  91+ AD97 72               ld (hl),d
  92+ AD98 23               inc hl
  93+ AD99
  94+ AD99 EB               ex de,hl
  95+ AD9A
  96+ AD9A CD F8 94         call NextScan
  97+ AD9D EB               ex de,hl
  98+ AD9E
  99+ AD9E 73               ld (hl),e
 100+ AD9F 23               inc hl
 101+ ADA0 72               ld (hl),d
 102+ ADA1 23               inc hl
 103+ ADA2
 104+ ADA2 EB               ex de,hl
 105+ ADA3
 106+ ADA3 CD F8 94         call NextScan
 107+ ADA6 EB               ex de,hl
 108+ ADA7
 109+ ADA7 73               ld (hl),e
 110+ ADA8 23               inc hl
 111+ ADA9 72               ld (hl),d
 112+ ADAA 23               inc hl
 113+ ADAB
 114+ ADAB EB               ex de,hl
 115+ ADAC
 116+ ADAC CD F8 94         call NextScan
 117+ ADAF EB               ex de,hl
 118+ ADB0
 119+ ADB0 73               ld (hl),e
 120+ ADB1 23               inc hl
 121+ ADB2 72               ld (hl),d
 122+ ADB3 23               inc hl
 123+ ADB4
 124+ ADB4 EB               ex de,hl
 125+ ADB5
 126+ ADB5 CD F8 94         call NextScan
 127+ ADB8 EB               ex de,hl
 128+ ADB9
 129+ ADB9 73               ld (hl),e
 130+ ADBA 23               inc hl
 131+ ADBB 72               ld (hl),d
 132+ ADBC 23               inc hl
 133+ ADBD
 134+ ADBD EB               ex de,hl
 135+ ADBE
 136+ ADBE CD F8 94         call NextScan
 137+ ADC1 EB               ex de,hl
 138+ ADC2
 139+ ADC2 73               ld (hl),e
 140+ ADC3 23               inc hl
 141+ ADC4 72               ld (hl),d
 142+ ADC5 23               inc hl
 143+ ADC6
 144+ ADC6 EB               ex de,hl
 145+ ADC7
 146+ ADC7 CD F8 94         call NextScan
 147+ ADCA EB               ex de,hl
 148+ ADCB
 149+ ADCB 73               ld (hl),e
 150+ ADCC 23               inc hl
 151+ ADCD 72               ld (hl),d
 152+ ADCE 23               inc hl
 153+ ADCF
 154+ ADCF EB               ex de,hl
 155+ ADD0
 156+ ADD0 CD F8 94         call NextScan
 157+ ADD3 EB               ex de,hl
 158+ ADD4
 159+ ADD4 73               ld (hl),e
 160+ ADD5 23               inc hl
 161+ ADD6 72               ld (hl),d
 162+ ADD7 23               inc hl
 163+ ADD8
 164+ ADD8 EB               ex de,hl
 165+ ADD9
 166+ ADD9 CD F8 94         call NextScan
 167+ ADDC EB               ex de,hl
 168+ ADDD
 169+ ADDD 73               ld (hl),e
 170+ ADDE 23               inc hl
 171+ ADDF 72               ld (hl),d
 172+ ADE0 23               inc hl
 173+ ADE1
 174+ ADE1 EB               ex de,hl
 175+ ADE2
 176+ ADE2 CD F8 94         call NextScan
 177+ ADE5 EB               ex de,hl
 178+ ADE6
 179+ ADE6 73               ld (hl),e
 180+ ADE7 23               inc hl
 181+ ADE8 72               ld (hl),d
 182+ ADE9 23               inc hl
 183+ ADEA
 184+ ADEA EB               ex de,hl
 185+ ADEB
 186+ ADEB CD F8 94         call NextScan
 187+ ADEE EB               ex de,hl
 188+ ADEF
 189+ ADEF 73               ld (hl),e
 190+ ADF0 23               inc hl
 191+ ADF1 72               ld (hl),d
 192+ ADF2 23               inc hl
 193+ ADF3
 194+ ADF3 EB               ex de,hl
 195+ ADF4
 196+ ADF4 CD F8 94         call NextScan
 197+ ADF7 EB               ex de,hl
 198+ ADF8
 199+ ADF8 73               ld (hl),e
 200+ ADF9 23               inc hl
 201+ ADFA 72               ld (hl),d
 202+ ADFB 23               inc hl
 203+ ADFC
 204+ ADFC EB               ex de,hl
 205+ ADFD
 206+ ADFD CD F8 94         call NextScan
 207+ AE00 EB               ex de,hl
 208+ AE01
 209+ AE01 73               ld (hl),e
 210+ AE02 23               inc hl
 211+ AE03 72               ld (hl),d
 212+ AE04 23               inc hl
 213+ AE05
 214+ AE05              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ AE05
 216+ AE05 22 02 8A         ld (Scanlines_album_SP),hl
 217+ AE08
 218+ AE08              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ AE08
 220+ AE08 08               ex af,af
 221+ AE09
 222+ AE09 F5               push af
 223+ AE0A E1               pop hl
 224+ AE0B
 225+ AE0B 36 10            ld (hl),16
 226+ AE0D
 227+ AE0D C9               ret
 228+ AE0E
 229+ AE0E              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ AE0E
 231+ AE0E              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ AE0E
 233+ AE0E 3E 57            ld a,$57
 234+ AE10 94               sub h
 235+ AE11 47               ld b,a
 236+ AE12
 237+ AE12 3E DF            ld a,$df
 238+ AE14 BD               cp l
 239+ AE15 38 04            jr c,1F
 240+ AE17
 241+ AE17 3E 08            ld a,8
 242+ AE19 80               add b
 243+ AE1A 47               ld b,a
 244+ AE1B
 245+ AE1B              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 246+ AE1B              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 247+ AE1B
 248+ AE1B 48           1 ld c,b
 249+ AE1C 0C               inc c
 250+ AE1D
 251+ AE1D 04               inc b
 252+ AE1E 05               dec b
 253+ AE1F 20 02            jr nz,3F
 254+ AE21
 255+ AE21 18 0B            jr 6F
 256+ AE23
 257+ AE23 CD F8 94     3 call NextScan
 258+ AE26 EB               ex de,hl
 259+ AE27
 260+ AE27 73               ld (hl),e
 261+ AE28 23               inc hl
 262+ AE29 72               ld (hl),d
 263+ AE2A 23               inc hl
 264+ AE2B
 265+ AE2B EB               ex de,hl
 266+ AE2C 10 F5            djnz 3B
 267+ AE2E
 268+ AE2E ED 53 02 8A  6 ld (Scanlines_album_SP),de
 269+ AE32
 270+ AE32 08           5 ex af,af
 271+ AE33 F5               push af
 272+ AE34 E1               pop hl
 273+ AE35
 274+ AE35 71               ld (hl),c
 275+ AE36
 276+ AE36 C9               ret
 277+ AE37
# file closed: Genera_datos_de_impresion.asm
2153  AE37
2154  AE37              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ AE37              ; -----------------------------------------------------------------------------
   2+ AE37              ;
   3+ AE37              ;   11/03/24
   4+ AE37              ;
   5+ AE37
   6+ AE37                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119              ;    ld hl,(Scanlines_album_SP)
  11+ 9119              ;    call Extrae_address
  12+ 9119
  13+ 9119              ;    inc h
  14+ 9119              ;    dec h
  15+ 9119              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9119
  17+ 9119 ED 73 F3 89      ld (Stack),sp
  18+ 911D
  19+ 911D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 911E              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 911E 2C               inc l
  22+ 911F 2C               inc l
  23+ 9120
  24+ 9120 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 9121
  26+ 9121 2C               inc l
  27+ 9122 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 9123
  29+ 9123              ;   Seleccionamos rutina de impresión:
  30+ 9123
  31+ 9123 3E 10            ld a,16
  32+ 9125 B8               cp b
  33+ 9126 C2 22 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9129
  35+ 9129              ;   Rutinas:
  36+ 9129
  37+ 9129              Pinta_rapido    ;   1520 t/states.
  38+ 9129
  39+ 9129 E1               pop hl
  40+ 912A
  41+ 912A 1A               ld a,(de)
  42+ 912B AE               xor (hl)
  43+ 912C 77               ld (hl),a
  44+ 912D 2C               inc l
  45+ 912E 1C               inc e
  46+ 912F 1A               ld a,(de)
  47+ 9130 AE               xor (hl)
  48+ 9131 77               ld (hl),a
  49+ 9132 2C               inc l
  50+ 9133 1C               inc e
  51+ 9134 1A               ld a,(de)
  52+ 9135 AE               xor (hl)
  53+ 9136 77               ld (hl),a
  54+ 9137 13               inc de
  55+ 9138
  56+ 9138 E1               pop hl
  57+ 9139
  58+ 9139 1A               ld a,(de)
  59+ 913A AE               xor (hl)
  60+ 913B 77               ld (hl),a
  61+ 913C 2C               inc l
  62+ 913D 1C               inc e
  63+ 913E 1A               ld a,(de)
  64+ 913F AE               xor (hl)
  65+ 9140 77               ld (hl),a
  66+ 9141 2C               inc l
  67+ 9142 1C               inc e
  68+ 9143 1A               ld a,(de)
  69+ 9144 AE               xor (hl)
  70+ 9145 77               ld (hl),a
  71+ 9146 13               inc de
  72+ 9147
  73+ 9147 E1               pop hl
  74+ 9148
  75+ 9148 1A               ld a,(de)
  76+ 9149 AE               xor (hl)
  77+ 914A 77               ld (hl),a
  78+ 914B 2C               inc l
  79+ 914C 1C               inc e
  80+ 914D 1A               ld a,(de)
  81+ 914E AE               xor (hl)
  82+ 914F 77               ld (hl),a
  83+ 9150 2C               inc l
  84+ 9151 1C               inc e
  85+ 9152 1A               ld a,(de)
  86+ 9153 AE               xor (hl)
  87+ 9154 77               ld (hl),a
  88+ 9155 13               inc de
  89+ 9156
  90+ 9156 E1               pop hl
  91+ 9157
  92+ 9157 1A               ld a,(de)
  93+ 9158 AE               xor (hl)
  94+ 9159 77               ld (hl),a
  95+ 915A 2C               inc l
  96+ 915B 1C               inc e
  97+ 915C 1A               ld a,(de)
  98+ 915D AE               xor (hl)
  99+ 915E 77               ld (hl),a
 100+ 915F 2C               inc l
 101+ 9160 1C               inc e
 102+ 9161 1A               ld a,(de)
 103+ 9162 AE               xor (hl)
 104+ 9163 77               ld (hl),a
 105+ 9164 13               inc de
 106+ 9165
 107+ 9165 E1               pop hl
 108+ 9166
 109+ 9166 1A               ld a,(de)
 110+ 9167 AE               xor (hl)
 111+ 9168 77               ld (hl),a
 112+ 9169 2C               inc l
 113+ 916A 1C               inc e
 114+ 916B 1A               ld a,(de)
 115+ 916C AE               xor (hl)
 116+ 916D 77               ld (hl),a
 117+ 916E 2C               inc l
 118+ 916F 1C               inc e
 119+ 9170 1A               ld a,(de)
 120+ 9171 AE               xor (hl)
 121+ 9172 77               ld (hl),a
 122+ 9173 13               inc de
 123+ 9174
 124+ 9174 E1               pop hl
 125+ 9175
 126+ 9175 1A               ld a,(de)
 127+ 9176 AE               xor (hl)
 128+ 9177 77               ld (hl),a
 129+ 9178 2C               inc l
 130+ 9179 1C               inc e
 131+ 917A 1A               ld a,(de)
 132+ 917B AE               xor (hl)
 133+ 917C 77               ld (hl),a
 134+ 917D 2C               inc l
 135+ 917E 1C               inc e
 136+ 917F 1A               ld a,(de)
 137+ 9180 AE               xor (hl)
 138+ 9181 77               ld (hl),a
 139+ 9182 13               inc de
 140+ 9183
 141+ 9183 E1               pop hl
 142+ 9184
 143+ 9184 1A               ld a,(de)
 144+ 9185 AE               xor (hl)
 145+ 9186 77               ld (hl),a
 146+ 9187 2C               inc l
 147+ 9188 1C               inc e
 148+ 9189 1A               ld a,(de)
 149+ 918A AE               xor (hl)
 150+ 918B 77               ld (hl),a
 151+ 918C 2C               inc l
 152+ 918D 1C               inc e
 153+ 918E 1A               ld a,(de)
 154+ 918F AE               xor (hl)
 155+ 9190 77               ld (hl),a
 156+ 9191 13               inc de
 157+ 9192
 158+ 9192 E1               pop hl
 159+ 9193
 160+ 9193 1A               ld a,(de)
 161+ 9194 AE               xor (hl)
 162+ 9195 77               ld (hl),a
 163+ 9196 2C               inc l
 164+ 9197 1C               inc e
 165+ 9198 1A               ld a,(de)
 166+ 9199 AE               xor (hl)
 167+ 919A 77               ld (hl),a
 168+ 919B 2C               inc l
 169+ 919C 1C               inc e
 170+ 919D 1A               ld a,(de)
 171+ 919E AE               xor (hl)
 172+ 919F 77               ld (hl),a
 173+ 91A0 13               inc de
 174+ 91A1
 175+ 91A1 E1               pop hl
 176+ 91A2
 177+ 91A2 1A               ld a,(de)
 178+ 91A3 AE               xor (hl)
 179+ 91A4 77               ld (hl),a
 180+ 91A5 2C               inc l
 181+ 91A6 1C               inc e
 182+ 91A7 1A               ld a,(de)
 183+ 91A8 AE               xor (hl)
 184+ 91A9 77               ld (hl),a
 185+ 91AA 2C               inc l
 186+ 91AB 1C               inc e
 187+ 91AC 1A               ld a,(de)
 188+ 91AD AE               xor (hl)
 189+ 91AE 77               ld (hl),a
 190+ 91AF 13               inc de
 191+ 91B0
 192+ 91B0 E1               pop hl
 193+ 91B1
 194+ 91B1 1A               ld a,(de)
 195+ 91B2 AE               xor (hl)
 196+ 91B3 77               ld (hl),a
 197+ 91B4 2C               inc l
 198+ 91B5 1C               inc e
 199+ 91B6 1A               ld a,(de)
 200+ 91B7 AE               xor (hl)
 201+ 91B8 77               ld (hl),a
 202+ 91B9 2C               inc l
 203+ 91BA 1C               inc e
 204+ 91BB 1A               ld a,(de)
 205+ 91BC AE               xor (hl)
 206+ 91BD 77               ld (hl),a
 207+ 91BE 13               inc de
 208+ 91BF
 209+ 91BF E1               pop hl
 210+ 91C0
 211+ 91C0 1A               ld a,(de)
 212+ 91C1 AE               xor (hl)
 213+ 91C2 77               ld (hl),a
 214+ 91C3 2C               inc l
 215+ 91C4 1C               inc e
 216+ 91C5 1A               ld a,(de)
 217+ 91C6 AE               xor (hl)
 218+ 91C7 77               ld (hl),a
 219+ 91C8 2C               inc l
 220+ 91C9 1C               inc e
 221+ 91CA 1A               ld a,(de)
 222+ 91CB AE               xor (hl)
 223+ 91CC 77               ld (hl),a
 224+ 91CD 13               inc de
 225+ 91CE
 226+ 91CE E1               pop hl
 227+ 91CF
 228+ 91CF 1A               ld a,(de)
 229+ 91D0 AE               xor (hl)
 230+ 91D1 77               ld (hl),a
 231+ 91D2 2C               inc l
 232+ 91D3 1C               inc e
 233+ 91D4 1A               ld a,(de)
 234+ 91D5 AE               xor (hl)
 235+ 91D6 77               ld (hl),a
 236+ 91D7 2C               inc l
 237+ 91D8 1C               inc e
 238+ 91D9 1A               ld a,(de)
 239+ 91DA AE               xor (hl)
 240+ 91DB 77               ld (hl),a
 241+ 91DC 13               inc de
 242+ 91DD
 243+ 91DD E1               pop hl
 244+ 91DE
 245+ 91DE 1A               ld a,(de)
 246+ 91DF AE               xor (hl)
 247+ 91E0 77               ld (hl),a
 248+ 91E1 2C               inc l
 249+ 91E2 1C               inc e
 250+ 91E3 1A               ld a,(de)
 251+ 91E4 AE               xor (hl)
 252+ 91E5 77               ld (hl),a
 253+ 91E6 2C               inc l
 254+ 91E7 1C               inc e
 255+ 91E8 1A               ld a,(de)
 256+ 91E9 AE               xor (hl)
 257+ 91EA 77               ld (hl),a
 258+ 91EB 13               inc de
 259+ 91EC
 260+ 91EC E1               pop hl
 261+ 91ED
 262+ 91ED 1A               ld a,(de)
 263+ 91EE AE               xor (hl)
 264+ 91EF 77               ld (hl),a
 265+ 91F0 2C               inc l
 266+ 91F1 1C               inc e
 267+ 91F2 1A               ld a,(de)
 268+ 91F3 AE               xor (hl)
 269+ 91F4 77               ld (hl),a
 270+ 91F5 2C               inc l
 271+ 91F6 1C               inc e
 272+ 91F7 1A               ld a,(de)
 273+ 91F8 AE               xor (hl)
 274+ 91F9 77               ld (hl),a
 275+ 91FA 13               inc de
 276+ 91FB
 277+ 91FB E1               pop hl
 278+ 91FC
 279+ 91FC 1A               ld a,(de)
 280+ 91FD AE               xor (hl)
 281+ 91FE 77               ld (hl),a
 282+ 91FF 2C               inc l
 283+ 9200 1C               inc e
 284+ 9201 1A               ld a,(de)
 285+ 9202 AE               xor (hl)
 286+ 9203 77               ld (hl),a
 287+ 9204 2C               inc l
 288+ 9205 1C               inc e
 289+ 9206 1A               ld a,(de)
 290+ 9207 AE               xor (hl)
 291+ 9208 77               ld (hl),a
 292+ 9209 13               inc de
 293+ 920A
 294+ 920A E1               pop hl
 295+ 920B
 296+ 920B 1A               ld a,(de)
 297+ 920C AE               xor (hl)
 298+ 920D 77               ld (hl),a
 299+ 920E 2C               inc l
 300+ 920F 1C               inc e
 301+ 9210 1A               ld a,(de)
 302+ 9211 AE               xor (hl)
 303+ 9212 77               ld (hl),a
 304+ 9213 2C               inc l
 305+ 9214 1C               inc e
 306+ 9215 1A               ld a,(de)
 307+ 9216 AE               xor (hl)
 308+ 9217 77               ld (hl),a
 309+ 9218 13               inc de
 310+ 9219
 311+ 9219 ED 73 02 8A      ld (Scanlines_album_SP),sp
 312+ 921D ED 7B F3 89      ld sp,(Stack)
 313+ 9221 C9               ret
 314+ 9222
 315+ 9222              Pinta_lento
 316+ 9222
 317+ 9222 E1           1 pop hl
 318+ 9223
 319+ 9223 1A               ld a,(de)
 320+ 9224 AE               xor (hl)
 321+ 9225 77               ld (hl),a
 322+ 9226 2C               inc l
 323+ 9227 1C               inc e
 324+ 9228 1A               ld a,(de)
 325+ 9229 AE               xor (hl)
 326+ 922A 77               ld (hl),a
 327+ 922B 2C               inc l
 328+ 922C 1C               inc e
 329+ 922D 1A               ld a,(de)
 330+ 922E AE               xor (hl)
 331+ 922F 77               ld (hl),a
 332+ 9230 13               inc de
 333+ 9231
 334+ 9231 10 EF            djnz 1B
 335+ 9233
 336+ 9233 ED 73 02 8A      ld (Scanlines_album_SP),sp
 337+ 9237 ED 7B F3 89      ld sp,(Stack)
 338+ 923B C9               ret
# file closed: Pinta_Sprites.asm
2155  923C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 923C              ; ******************************************************************************************************************************************************************************************
   2+ 923C              ;
   3+ 923C              ; 26/06/23
   4+ 923C              ;
   5+ 923C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 923C
   7+ 923C              Draw
   8+ 923C
   9+ 923C CD EC 94     	call Prepara_draw
  10+ 923F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9240 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9241 28 05        	jr z,2F
  13+ 9243
  14+ 9243 3A BA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9246 18 0C        	jr 1F
  16+ 9248
  17+ 9248 2A B8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 924B 22 A8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 924E CD DA 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9251              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9251
  22+ 9251 CD 73 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9254
  24+ 9254 3A C2 89     1 ld a,(Ctrl_0)
  25+ 9257 CB 6F        	bit 5,a
  26+ 9259 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 925B
  28+ 925B CD 70 92     	call Comprueba_limite_horizontal
  29+ 925E CD 00 93     	call Comprueba_limite_vertical
  30+ 9261
  31+ 9261              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9261              ; -----------------------
  33+ 9261              ; -----------------------
  34+ 9261              ; -----------------------
  35+ 9261
  36+ 9261 CD 56 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9264 CD 8D 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9267
  39+ 9267 3A C2 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 926A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 926C 32 C2 89     	ld (Ctrl_0),a
  42+ 926F
  43+ 926F C9           	ret
  44+ 9270
  45+ 9270              ; *******************************************************************************************************************************************************************************************
  46+ 9270              ;	21/01/23
  47+ 9270              ;
  48+ 9270              ; 	Comprueba_limite_horizontal.
  49+ 9270              ;
  50+ 9270              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9270              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9270              ;
  53+ 9270              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9270              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9270              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9270              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9270
  58+ 9270
  59+ 9270
  60+ 9270 3A C2 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9273 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9275 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9277 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9279 32 C2 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 927C 18 09            jr 6F
  66+ 927E CB 5F        1 bit 3,a
  67+ 9280 28 0A            jr z,2F
  68+ 9282 E6 F7            and $f7
  69+ 9284 32 C2 89         ld (Ctrl_0),a
  70+ 9287 CD DA 93     6 call Inicializacion
  71+ 928A 18 5B            jr 5F
  72+ 928C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 928D
  74+ 928D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 928D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 928D
  77+ 928D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 928E 2A C4 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9291 CD D1 AC     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9294 67           	ld h,a
  81+ 9295 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9296 CD D1 AC     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9299 67           	ld h,a
  84+ 929A A7           	and a
  85+ 929B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 929D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 929E 3A BA 89     	ld a,(Cuad_objeto)
  88+ 92A1 FE 02        	cp 2
  89+ 92A3 38 1E        	jr c,3F
  90+ 92A5 28 1C        	jr z,3F
  91+ 92A7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92A8 28 23            jr z,7F
  93+ 92AA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92AC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92AE E1           	pop hl
  96+ 92AF
  97+ 92AF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92AF              ; _para indicar con E="2" en caso necesario.
  99+ 92AF
 100+ 92AF E5               push hl
 101+ 92B0 C5               push bc
 102+ 92B1 CD D1 AC     	call calcula_tercio
 103+ 92B4 FE 01        	cp 1
 104+ 92B6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92B8 CD E8 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92BB 28 26            jr z,9F
 107+ 92BD 38 24            jr c,9F
 108+ 92BF 1E 00        11 ld e,0
 109+ 92C1 18 22            jr 8F
 110+ 92C3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92C4 28 07        	jr z, 7F
 112+ 92C6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92C8 1E 00         	ld e,0
 114+ 92CA E1           	pop hl
 115+ 92CB 18 04        	jr 4F
 116+ 92CD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92CF 18 15            jr 10F
 118+ 92D1
 119+ 92D1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92D1              ; _para indicar con E="2" en caso necesario.
 121+ 92D1
 122+ 92D1 E5           4 push hl
 123+ 92D2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92D3 CD D1 AC     	call calcula_tercio
 125+ 92D6 FE 01        	cp 1
 126+ 92D8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92DA CD E8 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92DD 28 04            jr z,9F
 129+ 92DF 30 02            jr nc,9F
 130+ 92E1 18 02        	jr 8F
 131+ 92E3 1E 02        9 ld e,2
 132+ 92E5 C1           8 pop bc
 133+ 92E6 E1           10 pop hl
 134+ 92E7 C9           5 ret
 135+ 92E8
 136+ 92E8              ; --------------------
 137+ 92E8              ;
 138+ 92E8              ; 25/08/22
 139+ 92E8
 140+ 92E8 CD D1 AC     Comprueba_centro call calcula_tercio
 141+ 92EB 67               ld h,a
 142+ 92EC 08           	ex af,af
 143+ 92ED FE 02        	cp 2
 144+ 92EF 38 07        	jr c,1F
 145+ 92F1 28 05        	jr z,1F
 146+ 92F3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92F6 18 03        	jr 2F
 148+ 92F8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92FB 08           2 ex af,af
 150+ 92FC A7               and a
 151+ 92FD ED 42            sbc hl,bc
 152+ 92FF C9               ret
 153+ 9300
 154+ 9300              ; *********************************************************************************************************************************************************************************************
 155+ 9300              ;
 156+ 9300              ;   16/8/22
 157+ 9300              ;
 158+ 9300              ;	Comprueba_limite_vertical
 159+ 9300              ;
 160+ 9300              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9300              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9300              ;
 163+ 9300
 164+ 9300 2A A8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9303 7D           	ld a,l
 166+ 9304 E6 1F        	and $1F
 167+ 9306 57           	ld d,a
 168+ 9307 3A C6 89     	ld a,(Limite_vertical)
 169+ 930A BA           	cp d 											; Límite - Posición.
 170+ 930B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 930C 3A BA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 930F CB 47        	bit 0,a
 173+ 9311 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9313
 175+ 9313              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9313
 177+ 9313 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9314 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9316
 180+ 9316              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9316              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9316
 183+ 9316 3A AC 89         ld a,(Coordenada_X)
 184+ 9319 16 0F            ld d,Centro_izquierda
 185+ 931B A7               and a
 186+ 931C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 931D 28 1E            jr z,3F
 188+ 931F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9321              ;                                                    ; _salimos sin modificar nada.
 190+ 9321 18 0E            jr 2F
 191+ 9323 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9324 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9326
 194+ 9326              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9326              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9326
 197+ 9326 3A AC 89         ld a,(Coordenada_X)
 198+ 9329 16 10            ld d,Centro_derecha
 199+ 932B A7               and a
 200+ 932C 92               sub d
 201+ 932D 28 0E            jr z,3F
 202+ 932F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9331              ;                                                    ; _salimos sin modificar nada.
 204+ 9331 CB 43        2 bit 0,e
 205+ 9333 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9335 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9336 CD CA 93         call Modificaccionne
 208+ 9339 C1           	pop bc
 209+ 933A CD DA 93         call Inicializacion
 210+ 933D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 933E
 212+ 933E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 933E
 214+ 933E C5           4 push bc
 215+ 933F 01 A7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9342 0A           	ld a,(bc)
 217+ 9343 3D           	dec a
 218+ 9344 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9345 7D           	ld a,l
 220+ 9346 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9347 CB 47        	bit 0,a
 222+ 9349 28 03        	jr z,5F
 223+ 934B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 934C 18 2E        	jr 7F
 225+ 934E
 226+ 934E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 934E
 228+ 934E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 934F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9350 3A C2 89     	ld a,(Ctrl_0)
 231+ 9353 CB 4F        	bit 1,a
 232+ 9355 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9357 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9358
 235+ 9358              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9358
 237+ 9358 1C               inc e
 238+ 9359 1D               dec e
 239+ 935A 20 07            jr nz,12F
 240+ 935C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 935D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 935E 22 A8 89     	ld (Posicion_actual),hl
 243+ 9361 18 44        13 jr 9F
 244+ 9363 CB 43        12 bit 0,e
 245+ 9365 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9367              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9367 C1           	pop bc
 248+ 9368 18 D3        	jr 3B
 249+ 936A 80           14 add b
 250+ 936B 6F               ld l,a
 251+ 936C 22 A8 89     	ld (Posicion_actual),hl
 252+ 936F CD CA 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9372 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9374 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9376 32 C2 89         ld (Ctrl_0),a
 256+ 9379 F1           	pop af
 257+ 937A 18 2B        	jr 9F
 258+ 937C
 259+ 937C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 937C
 261+ 937C F5           7 push af
 262+ 937D 3A C2 89     	ld a,(Ctrl_0)
 263+ 9380 CB 47        	bit 0,a
 264+ 9382 20 1D        	jr nz,8F
 265+ 9384 F1           	pop af
 266+ 9385
 267+ 9385              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9385
 269+ 9385 1C           	inc e
 270+ 9386 1D               dec e
 271+ 9387 20 07            jr nz,10F
 272+ 9389 90           	sub b
 273+ 938A 6F               ld l,a
 274+ 938B 22 A8 89     	ld (Posicion_actual),hl
 275+ 938E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9390              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9390 CB 43        10 bit 0,e
 278+ 9392 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9394              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9394 C1           	pop bc
 281+ 9395 18 A6        	jr 3B
 282+ 9397 90           16 sub b
 283+ 9398 6F               ld l,a
 284+ 9399 22 A8 89     	ld (Posicion_actual),hl
 285+ 939C CD CA 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 939F 18 06            jr 9F
 287+ 93A1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 93A3 32 C2 89         ld (Ctrl_0),a
 289+ 93A6 F1           	pop af
 290+ 93A7 C1           9 pop bc
 291+ 93A8 1E 00        	ld e,0
 292+ 93AA CD DA 93         call Inicializacion
 293+ 93AD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93AE 08           	ex af,af
 295+ 93AF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93B0 18 8B            jr 3B
 297+ 93B2
 298+ 93B2              ; --------------------
 299+ 93B2
 300+ 93B2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93B4 CD 07 95     1 call PreviousScan
 302+ 93B7 10 FB            djnz 1B
 303+ 93B9 22 A8 89     	ld (Posicion_actual),hl
 304+ 93BC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93BD C9           	ret
 306+ 93BE
 307+ 93BE              ; --------------------
 308+ 93BE
 309+ 93BE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93C0 CD F8 94     1 call NextScan
 311+ 93C3 10 FB            djnz 1B
 312+ 93C5 22 A8 89     	ld (Posicion_actual),hl
 313+ 93C8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93C9 C9           	ret
 315+ 93CA
 316+ 93CA              ; --------------------
 317+ 93CA              ;
 318+ 93CA              ;	22/01/23
 319+ 93CA              ;
 320+ 93CA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93CA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93CA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93CA
 324+ 93CA
 325+ 93CA              Modificaccionne
 326+ 93CA
 327+ 93CA 3A BA 89     	ld a,(Cuad_objeto)
 328+ 93CD FE 02        	cp 2
 329+ 93CF CC B2 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93D2 DC B2 93         call c,Modifica_Pos_actual
 331+ 93D5 C8           	ret z
 332+ 93D6 CD BE 93         call Modifica_Pos_actual2
 333+ 93D9 C9               ret
 334+ 93DA
 335+ 93DA              ; *************************************************************************************************************************************************************************************************
 336+ 93DA              ;
 337+ 93DA              ;	13/8/22
 338+ 93DA              ;
 339+ 93DA              ;	Inicializacion
 340+ 93DA              ;
 341+ 93DA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93DA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93DA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93DA              ;
 345+ 93DA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93DA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93DA              ;	_ desaparece/aparece.
 348+ 93DA
 349+ 93DA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93DA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93DA              ;
 352+ 93DA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93DA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93DA              ; 		   [E] ="0"
 355+ 93DA
 356+ 93DA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93DA
 358+ 93DA CD D1 AC     Inicializacion call calcula_tercio
 359+ 93DD 28 36        	jr z,primit
 360+ 93DF E6 02        	and 2
 361+ 93E1 20 07        	jr nz,segmit
 362+ 93E3 7D           	ld a,l
 363+ 93E4 FE 7F        	cp $7f
 364+ 93E6 38 2D        	jr c,primit
 365+ 93E8 28 2B        	jr z,primit
 366+ 93EA CD 50 94     segmit call column
 367+ 93ED 38 13        	jr c,tercuad
 368+ 93EF 3E 04        cuarcuad ld a,4
 369+ 93F1 32 BA 89     	ld (Cuad_objeto),a
 370+ 93F4 21 20 48     	ld hl,$4820
 371+ 93F7 22 C4 89     	ld (Limite_horizontal),hl
 372+ 93FA 21 C6 89     	ld hl,Limite_vertical
 373+ 93FD 36 0D        	ld (hl),$0d
 374+ 93FF 08           	ex af,af
 375+ 9400 18 3C        	jr 1F
 376+ 9402              tercuad
 377+ 9402 3E 03        	ld a,3
 378+ 9404 32 BA 89     	ld (Cuad_objeto),a
 379+ 9407 21 20 48     	ld hl,$4820
 380+ 940A 22 C4 89     	ld (Limite_horizontal),hl
 381+ 940D 21 C6 89     	ld hl,Limite_vertical
 382+ 9410 36 12        	ld (hl),$12
 383+ 9412 08           	ex af,af
 384+ 9413 18 29        	jr 1F
 385+ 9415 CD 50 94     primit call column
 386+ 9418 38 13        	jr c, primcuad
 387+ 941A              segcuad
 388+ 941A 3E 02        	ld a,2
 389+ 941C 32 BA 89     	ld (Cuad_objeto),a
 390+ 941F 21 C0 4F     	ld hl,$4fc0
 391+ 9422 22 C4 89     	ld (Limite_horizontal),hl
 392+ 9425 21 C6 89     	ld hl,Limite_vertical
 393+ 9428 36 0D        	ld (hl),$0d
 394+ 942A 08           	ex af,af
 395+ 942B 18 11        	jr 1F
 396+ 942D              primcuad
 397+ 942D 3E 01        	ld a,1
 398+ 942F 32 BA 89     	ld (Cuad_objeto),a
 399+ 9432 21 C0 4F     	ld hl,$4fc0
 400+ 9435 22 C4 89     	ld (Limite_horizontal),hl
 401+ 9438 21 C6 89     	ld hl,Limite_vertical
 402+ 943B 36 12        	ld (hl),$12
 403+ 943D 08           	ex af,af
 404+ 943E
 405+ 943E C5           1 push bc
 406+ 943F E5           	push hl
 407+ 9440 D5           	push de
 408+ 9441
 409+ 9441 2A A8 89     	ld hl,(Posicion_actual)
 410+ 9444 CD EF AC     	call Genera_coordenadas
 411+ 9447
 412+ 9447 D1           	pop de
 413+ 9448 E1           	pop hl
 414+ 9449 C1           	pop bc
 415+ 944A
 416+ 944A 21 C2 89     	ld hl,Ctrl_0
 417+ 944D CB EE        	set 5,(hl)
 418+ 944F C9           	ret
 419+ 9450
 420+ 9450              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9450
 422+ 9450              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9450              ;
 424+ 9450              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9450
 426+ 9450 7D           column ld a,l
 427+ 9451 E6 1F        	and $1f
 428+ 9453 FE 10         	cp $10
 429+ 9455 C9            	ret
 430+ 9456
 431+ 9456              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9456              ;
 433+ 9456              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9456              ;
 435+ 9456              ; 14/12/22
 436+ 9456              ;
 437+ 9456              ;	Modifica: A y BC.
 438+ 9456
 439+ 9456 3A BA 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9459 E6 01        	and 1
 441+ 945B 28 17        	jr z,1F
 442+ 945D
 443+ 945D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 945D
 445+ 945D 3A AC 89     	ld a,(Coordenada_X)
 446+ 9460 47           	ld b,a
 447+ 9461 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9462 79           	ld a,c
 449+ 9463 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9464 38 08        	jr c,2F
 451+ 9466 47           	ld b,a
 452+ 9467 79           	ld a,c
 453+ 9468 90           	sub b
 454+ 9469 32 C3 89     	ld (Columnas),a
 455+ 946C 18 1B        	jr 4F
 456+ 946E 79           2 ld a,c
 457+ 946F 32 C3 89     	ld (Columnas),a
 458+ 9472 18 15        	jr 4F
 459+ 9474
 460+ 9474              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9474
 462+ 9474 3A AC 89     1 ld a,(Coordenada_X)
 463+ 9477 81           	add c
 464+ 9478 3D           	dec a
 465+ 9479 D6 1F        	sub $1f
 466+ 947B 38 08        	jr c,3F
 467+ 947D 47           	ld b,a
 468+ 947E 79           	ld a,c
 469+ 947F 90           	sub b
 470+ 9480 32 C3 89     	ld (Columnas),a
 471+ 9483 18 04        	jr 4F
 472+ 9485 79           3 ld a,c
 473+ 9486 32 C3 89     	ld (Columnas),a
 474+ 9489 D9           4 exx
 475+ 948A 4F           	ld c,a
 476+ 948B D9           	exx
 477+ 948C C9            ret
 478+ 948D
 479+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 948D              ;
 481+ 948D              ;   19/7/23
 482+ 948D              ;
 483+ 948D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 948D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 948D              ;
 486+ 948D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 948D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 948D              ;
 489+ 948D              ;	DESTRUYE: HL,B Y A.
 490+ 948D
 491+ 948D 3A BA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9490 FE 02        	cp 2
 493+ 9492 38 18        	jr c,1F
 494+ 9494 28 16        	jr z,1F
 495+ 9496 E6 01        	and 1
 496+ 9498 28 0D        	jr z,3F
 497+ 949A
 498+ 949A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 949A
 500+ 949A CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 949D
 502+ 949D 7D           9 ld a,l
 503+ 949E E6 1F        	and $1f
 504+ 94A0 28 2A        	jr z,7F
 505+ 94A2 2B           	dec hl
 506+ 94A3 10 F8        	djnz 9B
 507+ 94A5 18 25        	jr 7F
 508+ 94A7
 509+ 94A7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 94A7
 511+ 94A7 2A A8 89     3 ld hl,(Posicion_actual)
 512+ 94AA 18 20        	jr 7F
 513+ 94AC
 514+ 94AC 28 14        1 jr z,2F
 515+ 94AE
 516+ 94AE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94AE
 518+ 94AE CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94B1
 520+ 94B1 7D           4 ld a,l
 521+ 94B2 E6 1F        	and $1f
 522+ 94B4 28 03        	jr z,6F
 523+ 94B6 2B           	dec hl
 524+ 94B7 10 F8        	djnz 4B
 525+ 94B9 06 0F        6 ld b,15
 526+ 94BB CD 07 95     5 call PreviousScan
 527+ 94BE 10 FB        	djnz 5B
 528+ 94C0 18 0A        	jr 7F
 529+ 94C2
 530+ 94C2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94C2
 532+ 94C2 CD E0 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94C5 06 0F        	ld b,15
 534+ 94C7 CD 07 95     8 call PreviousScan
 535+ 94CA 10 FB        	djnz 8B
 536+ 94CC
 537+ 94CC E5           7 push hl
 538+ 94CD DD E1        	pop ix
 539+ 94CF
 540+ 94CF 2A AA 89     	ld hl,(Puntero_objeto)
 541+ 94D2 E5           	push hl
 542+ 94D3 FD E1        	pop iy
 543+ 94D5
 544+ 94D5              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 545+ 94D5
 546+ 94D5 3A C2 89     	ld a,(Ctrl_0)
 547+ 94D8 CB 77        	bit 6,a
 548+ 94DA C8           	ret z
 549+ 94DB
 550+ 94DB              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 551+ 94DB              ; _ entidad / Amadeus´.
 552+ 94DB
 553+ 94DB DD 22 3E 87  	ld (p.imp.amadeus),ix
 554+ 94DF
 555+ 94DF C9           	ret
 556+ 94E0
 557+ 94E0              ; --------------------------------------------------------------------------------------------------------------------
 558+ 94E0              ;
 559+ 94E0              ;	2/1/23
 560+ 94E0              ;
 561+ 94E0              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 562+ 94E0              ;
 563+ 94E0              ;	Tras esta rutina tenemos:
 564+ 94E0              ;
 565+ 94E0              ;	OUTPUT: HL contiene (Posicion_actual).
 566+ 94E0              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 567+ 94E0              ;
 568+ 94E0              ;	DESTRUYE!!!!! HL,B y A.
 569+ 94E0
 570+ 94E0 2A A8 89     Operandos ld hl,(Posicion_actual)
 571+ 94E3 3A C3 89     	ld a,(Columnas)
 572+ 94E6 3D           	dec a
 573+ 94E7 20 01        	jr nz,1F
 574+ 94E9 3C           	inc a
 575+ 94EA 47           1 ld b,a
 576+ 94EB C9           	ret
 577+ 94EC
 578+ 94EC              ; --------------------------------------------------------------------------------------------------------------------
 579+ 94EC              ;
 580+ 94EC              ;	Prepara_draw
 581+ 94EC              ;
 582+ 94EC              ;	Es una rutina de carga.
 583+ 94EC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 584+ 94EC              ;
 585+ 94EC              ;	FUNCIONAMIENTO:
 586+ 94EC              ;
 587+ 94EC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 588+ 94EC              ;	- LD (Posicion_actual) del objeto en [HL].
 589+ 94EC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 590+ 94EC              ;
 591+ 94EC              ;	DESTRUYE:
 592+ 94EC              ;
 593+ 94EC              ;	Logicamente, BC,HL y E quedan destruidos.
 594+ 94EC
 595+ 94EC 21 A6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 596+ 94EF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 597+ 94F0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 598+ 94F1 4E           	ld c,(hl)
 599+ 94F2 2A A8 89     	ld hl,(Posicion_actual)
 600+ 94F5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 601+ 94F7 C9           	ret
 602+ 94F8
 603+ 94F8              ;----------------------------------------------------------------------------------------------------------------
 604+ 94F8              ;
 605+ 94F8              ;	5/08/22
 606+ 94F8              ;
 607+ 94F8              ;   NextScan.
 608+ 94F8              ;
 609+ 94F8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 610+ 94F8              ;
 611+ 94F8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 612+ 94F8              ;
 613+ 94F8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 614+ 94F8              ;
 615+ 94F8              ;       DESTRUIDOS: AF y HL !!!
 616+ 94F8              ;
 617+ 94F8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 618+ 94F8              ;
 619+ 94F8
 620+ 94F8 24           NextScan inc h          ; Incrementamos el scanline.
 621+ 94F9 7C               ld a,h
 622+ 94FA E6 07            and 7
 623+ 94FC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 624+ 94FD
 625+ 94FD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 626+ 94FE C6 20            add a,$20           ; Vamos a comprobarlo...
 627+ 9500 6F               ld l,a
 628+ 9501 D8               ret c               ; Salimos si se produce el cambio de tercio.
 629+ 9502
 630+ 9502 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 631+ 9503 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 632+ 9505 67               ld h,a
 633+ 9506 C9               ret
 634+ 9507
 635+ 9507              ;----------------------------------------------------------------------------------------------------------------
 636+ 9507              ;
 637+ 9507              ;	5/08/22
 638+ 9507              ;
 639+ 9507              ;   PreviousScan.
 640+ 9507              ;
 641+ 9507              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 642+ 9507              ;
 643+ 9507              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 644+ 9507              ;
 645+ 9507              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 646+ 9507              ;
 647+ 9507              ;       DESTRUIDOS: AF y HL !!!
 648+ 9507              ;
 649+ 9507              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 650+ 9507              ;
 651+ 9507
 652+ 9507 7C           PreviousScan ld a,h
 653+ 9508 25               dec h               ; Dec H.
 654+ 9509 E6 07            and 7
 655+ 950B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 656+ 950C
 657+ 950C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 658+ 950D D6 20            sub $20             ; Vamos a comprobarlo...
 659+ 950F 6F               ld l,a
 660+ 9510 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 661+ 9511
 662+ 9511 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 663+ 9512 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 664+ 9514 67               ld h,a
 665+ 9515 C9               ret
 666+ 9516
 667+ 9516
 668+ 9516
 669+ 9516
 670+ 9516
 671+ 9516
 672+ 9516
 673+ 9516
 674+ 9516
 675+ 9516
 676+ 9516
 677+ 9516
# file closed: Draw_XOR.asm
2156  9516              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9516
   2+ 9516              ; ******************************************************************************************************************************************************************************************
   3+ 9516              ;
   4+ 9516              ;   20/05/23
   5+ 9516              ;
   6+ 9516              ;	Recompone_posicion_inicio
   7+ 9516              ;
   8+ 9516              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9516              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9516              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9516              ;	_ a una u otra rutina.
  12+ 9516
  13+ 9516              Recompone_posicion_inicio
  14+ 9516
  15+ 9516 2A B8 89     	ld hl,(Posicion_inicio)
  16+ 9519 7D           	ld a,l
  17+ 951A E6 1F        	and $1f
  18+ 951C 28 16        	jr z,1F
  19+ 951E
  20+ 951E FE 1F        	cp $1f
  21+ 9520 28 0D        	jr z,3F
  22+ 9522
  23+ 9522 21 C7 89     	ld hl,Ctrl_2
  24+ 9525 CB C6        	set 0,(hl)
  25+ 9527 2A AA 89     	ld hl,(Puntero_objeto)
  26+ 952A 22 E3 89     	ld (Repone_puntero_objeto),hl
  27+ 952D 18 08        	jr 2F
  28+ 952F
  29+ 952F CD DD 96     3 call Mov_left
  30+ 9532 18 03        	jr 2F
  31+ 9534
  32+ 9534 CD BA 95     1 call Mov_right
  33+ 9537 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 953A 22 AA 89     	ld (Puntero_objeto),hl
  35+ 953D C9           	ret
  36+ 953E
  37+ 953E              ; ******************************************************************************************************************************************************************************************
  38+ 953E              ;
  39+ 953E              ;   27/05/23
  40+ 953E              ;
  41+ 953E              ;	Mov_down
  42+ 953E              ;
  43+ 953E              ; 	Mueve el Sprite X px hacia abajo.
  44+ 953E              ;
  45+ 953E              ;
  46+ 953E              Mov_down
  47+ 953E
  48+ 953E CD A8 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9541              ;																	; _ repone (Puntero_objeto).
  50+ 9541 21 C2 89     	ld hl,Ctrl_0
  51+ 9544 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9546              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9546              ; 																	; _ en el caso de que no lo haya.
  54+ 9546 3A CD 89     	ld a,(Vel_down)
  55+ 9549 47           	ld b,a
  56+ 954A 2A A8 89         ld hl,(Posicion_actual)
  57+ 954D CD D1 AC     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9550 E6 02        	and 2
  59+ 9552 28 17        	jr z,1F
  60+ 9554
  61+ 9554              ; Nos encontramos en el último tercio de pantalla.
  62+ 9554              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9554
  64+ 9554 7C           	ld a,h
  65+ 9555 FE 57        	cp $57
  66+ 9557 20 12        	jr nz,1F
  67+ 9559
  68+ 9559 7D           	ld a,l
  69+ 955A C6 20        	add $20
  70+ 955C 30 0D        	jr nc,1F
  71+ 955E
  72+ 955E              ; ------------------------------
  73+ 955E              ;
  74+ 955E              ;	12/01/24
  75+ 955E
  76+ 955E              ;	call Reaparece_arriba
  77+ 955E CD 6A 98     	call Reinicio
  78+ 9561
  79+ 9561              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9561
  81+ 9561 3A 08 8A     	ld a,(Ctrl_3)
  82+ 9564 CB CF        	set 1,a
  83+ 9566 32 08 8A     	ld (Ctrl_3),a
  84+ 9569
  85+ 9569 18 08        	jr 3F
  86+ 956B              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 956B              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 956B              ; ------------------------------
  89+ 956B
  90+ 956B CD F8 94     1 call NextScan
  91+ 956E 22 A8 89     	ld (Posicion_actual),hl
  92+ 9571 10 DA            djnz 2B
  93+ 9573 CD EF AC     3 call Genera_coordenadas
  94+ 9576 C9           	ret
  95+ 9577
  96+ 9577              ; ******************************************************************************************************************************************************************************************
  97+ 9577              ;
  98+ 9577              ;   27/05/23
  99+ 9577              ;
 100+ 9577              ;	Mov_up
 101+ 9577              ;
 102+ 9577              ; 	Mueve el Sprite hacia arriba.
 103+ 9577              ;
 104+ 9577              ;
 105+ 9577              Mov_up
 106+ 9577
 107+ 9577 CD A8 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 957A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 957A 21 C2 89     	ld hl,Ctrl_0
 110+ 957D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 957F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 957F              ; 																		; _ en el caso de que no lo haya.
 113+ 957F 3A CC 89     	ld a,(Vel_up)
 114+ 9582 47           	ld b,a
 115+ 9583 2A A8 89     	ld hl,(Posicion_actual)
 116+ 9586 CD D1 AC     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9589 A7           	and a
 118+ 958A 20 10        	jr nz,1F
 119+ 958C
 120+ 958C              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 958C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 958C
 123+ 958C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 958D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 958F 20 0B            jr nz,1F
 126+ 9591 7D               ld a,l
 127+ 9592 D6 20            sub $20
 128+ 9594 30 06            jr nc,1F
 129+ 9596 25               dec h
 130+ 9597
 131+ 9597              ; -----------------------------
 132+ 9597 CD 4B 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 959A              ;	call Reinicio
 134+ 959A              ; -----------------------------
 135+ 959A
 136+ 959A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 959C CD 07 95     1 call PreviousScan
 138+ 959F 22 A8 89     	ld (Posicion_actual),hl
 139+ 95A2 10 E2            djnz 3B
 140+ 95A4 CD EF AC     2 call Genera_coordenadas
 141+ 95A7 C9           	ret
 142+ 95A8
 143+ 95A8              ; -----------------------------
 144+ 95A8              ;
 145+ 95A8              ;	27/5/23
 146+ 95A8              ;
 147+ 95A8              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95A8              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95A8              ;
 150+ 95A8              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95A8              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95A8              ;
 153+ 95A8              ;	Modifica: A y (Puntero_objeto).
 154+ 95A8
 155+ 95A8 3A C7 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95AB CB 47        	bit 0,a
 157+ 95AD C8           	ret z
 158+ 95AE CB 87        	res 0,a
 159+ 95B0 32 C7 89     	ld (Ctrl_2),a
 160+ 95B3 2A E3 89     	ld hl,(Repone_puntero_objeto)
 161+ 95B6 22 AA 89     	ld (Puntero_objeto),hl
 162+ 95B9 C9           	ret
 163+ 95BA
 164+ 95BA              ; ******************************************************************************************************************************************************************************************
 165+ 95BA              ;
 166+ 95BA              ;	19/10/22
 167+ 95BA              ;
 168+ 95BA              ;	Mov_right.
 169+ 95BA              ;
 170+ 95BA              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95BA              ;
 172+ 95BA
 173+ 95BA 3A C2 89     Mov_right ld a,(Ctrl_0)
 174+ 95BD CB 77        	bit 6,a
 175+ 95BF 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95C1
 177+ 95C1 CD F9 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95C4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95C5
 180+ 95C5 21 C2 89     	ld hl,Ctrl_0
 181+ 95C8 CB E6        	set 4,(hl)
 182+ 95CA 18 52        	jr 8F
 183+ 95CC
 184+ 95CC 21 C2 89     10 ld hl,Ctrl_0
 185+ 95CF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95D1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95D1              ; 																	; _ en el caso de que no lo haya.
 188+ 95D1 3A AC 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95D4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95D6 20 46        	jr nz,8F
 191+ 95D8
 192+ 95D8 3A AE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95DB A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95DC 28 40        	jr z,8F
 195+ 95DE
 196+ 95DE              ; ---------- ---------- ----------
 197+ 95DE              ;
 198+ 95DE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95DE
 200+ 95DE 3A CB 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95E1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95E3 28 11        	jr z,1F
 203+ 95E5 38 06        	jr c,6F
 204+ 95E7 FE 04        	cp 4
 205+ 95E9 28 14        	jr z,7F
 206+ 95EB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95ED
 208+ 95ED              ; ---------- ---------- ----------
 209+ 95ED              ;
 210+ 95ED              ; Perfiles de velocidad
 211+ 95ED              ;
 212+ 95ED
 213+ 95ED 3A AE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95F0 FE FE        	cp $fe
 215+ 95F2 20 2A        	jr nz,8F
 216+ 95F4 18 10        	jr 3F
 217+ 95F6 3A AE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95F9 FE FD        	cp $fd
 219+ 95FB 20 21        	jr nz,8F
 220+ 95FD 18 07        	jr 3F
 221+ 95FF 3A AE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9602 FE FB        	cp $fb
 223+ 9604 20 18        	jr nz,8F
 224+ 9606
 225+ 9606              ; ---------- ---------- ----------
 226+ 9606
 227+ 9606              3
 228+ 9606 CD 39 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9609              ;	call Reinicio
 230+ 9609
 231+ 9609              ; ---------- ---------- ----------
 232+ 9609              ;
 233+ 9609              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9609
 235+ 9609 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 960B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 960C CD 25 96     	call DESPLZ_DER
 238+ 960F C1           	pop bc
 239+ 9610 10 F9        	djnz 5B
 240+ 9612 2A A8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9615 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9616 22 A8 89     	ld (Posicion_actual),hl
 243+ 9619 CD EF AC     	call Genera_coordenadas
 244+ 961C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 961E
 246+ 961E              ; ---------- ---------- ----------
 247+ 961E
 248+ 961E 2A A8 89     8 ld hl,(Posicion_actual)
 249+ 9621 CD 25 96     	call DESPLZ_DER
 250+ 9624 C9           2 ret
 251+ 9625
 252+ 9625              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9625              ;
 254+ 9625              ;	22/9/22
 255+ 9625              ;
 256+ 9625
 257+ 9625 CD 34 96     DESPLZ_DER call Desplaza_derecha
 258+ 9628 CD 80 96         call modifica_parametros_1er_DESPLZ_2
 259+ 962B CD A9 96         call Ciclo_completo
 260+ 962E 21 C2 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9631 CB FE        	set 7,(hl)
 262+ 9633 C9           	ret
 263+ 9634
 264+ 9634              ; ******************************************************************************************************************************************************************************************
 265+ 9634              ;	15/02/23
 266+ 9634              ;
 267+ 9634
 268+ 9634 3A CB 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9637 47           	ld b,a
 270+ 9638 2A B4 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 963B 23           1 inc hl
 272+ 963C 23           	inc hl
 273+ 963D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 963F 22 B4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9642 CD 17 8D     	call Extrae_address
 276+ 9645 22 AA 89     	ld (Puntero_objeto),hl
 277+ 9648
 278+ 9648              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9648
 280+ 9648              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9648              ; Cuántos movimientos hemos hecho ??
 282+ 9648              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9648
 284+ 9648 2A B0 89     7 ld hl,(Indice_Sprite_der)
 285+ 964B EB           	ex de,hl
 286+ 964C A7           	and a
 287+ 964D ED 52        	sbc hl,de
 288+ 964F CB 3D        	srl l
 289+ 9651 3E 08        6 ld a,8
 290+ 9653 95           	sub l
 291+ 9654 30 1E        	jr nc,3F
 292+ 9656
 293+ 9656              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9656              ; B="0".
 295+ 9656
 296+ 9656 04           4 inc b
 297+ 9657 3C           	inc a
 298+ 9658 20 FC        	jr nz,4B
 299+ 965A 78           	ld a,b
 300+ 965B 08           	ex af,af
 301+ 965C 2A B0 89     	ld hl,(Indice_Sprite_der)
 302+ 965F 23           5 inc hl
 303+ 9660 23           	inc hl
 304+ 9661 10 FC        	djnz 5B
 305+ 9663 22 B4 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9666 CD 17 8D     	call Extrae_address
 307+ 9669 22 AA 89     	ld (Puntero_objeto),hl
 308+ 966C
 309+ 966C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 966C              ; _(Posicion_actual).
 311+ 966C
 312+ 966C 21 A8 89     	ld hl,Posicion_actual
 313+ 966F 34           	inc (hl)
 314+ 9670 08               ex af,af
 315+ 9671 6F           	ld l,a
 316+ 9672 18 DD        	jr 6B
 317+ 9674
 318+ 9674              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9674
 320+ 9674 47           3 ld b,a
 321+ 9675 2A B2 89     	ld hl,(Indice_Sprite_izq)
 322+ 9678 23           2 inc hl
 323+ 9679 23           	inc hl
 324+ 967A 10 FC        	djnz 2B
 325+ 967C 22 B6 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 967F C9           8 ret
 327+ 9680
 328+ 9680              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9680              ;
 330+ 9680              ;	24/7/22
 331+ 9680              ;
 332+ 9680              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9680              ;
 334+ 9680              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9680              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9680              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9680
 338+ 9680 3A AE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9683 A7           	and a
 340+ 9684 20 1F        	jr nz,1F
 341+ 9686 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9688 32 AE 89         ld (CTRL_DESPLZ),a
 343+ 968B
 344+ 968B 21 A7 89     	ld hl,Columns
 345+ 968E 34           	inc (hl)
 346+ 968F 3A BA 89     	ld a,(Cuad_objeto)
 347+ 9692 E6 01        	and 1
 348+ 9694 28 0F        	jr z,1F
 349+ 9696 2A A8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9699 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 969A 22 A8 89     	ld (Posicion_actual),hl
 352+ 969D CD EF AC     	call Genera_coordenadas
 353+ 96A0 CD 05 98     	call Inc_CTRL_DESPLZ
 354+ 96A3 18 03        	jr 2F
 355+ 96A5 CD 05 98     1 call Inc_CTRL_DESPLZ
 356+ 96A8 C9           2 ret
 357+ 96A9
 358+ 96A9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96A9              ;
 360+ 96A9              ;	24/7/22
 361+ 96A9              ;
 362+ 96A9              ;	Ciclo_completo.
 363+ 96A9              ;
 364+ 96A9              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96A9              ;
 366+ 96A9              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96A9              ; 	Decrementamos (Columns).
 368+ 96A9              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96A9              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96A9
 371+ 96A9
 372+ 96A9 3A AE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96AC FE FF        	cp $ff
 374+ 96AE 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96B0 E6 F0        	and $f0
 376+ 96B2 20 28        	jr nz,3F
 377+ 96B4
 378+ 96B4              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96B4
 380+ 96B4 3A AE 89     	ld a,(CTRL_DESPLZ)
 381+ 96B7 47           	ld b,a
 382+ 96B8 3E F8        	ld a,$f8
 383+ 96BA 80           	add b
 384+ 96BB 32 AE 89     	ld (CTRL_DESPLZ),a
 385+ 96BE 18 1C        	jr 3F
 386+ 96C0 21 A7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96C3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96C4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96C5 32 AE 89     	ld (CTRL_DESPLZ),a
 390+ 96C8 3A BA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96CB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96CD 20 0A        	jr nz,2F
 393+ 96CF 2A A8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96D2 23           	inc hl
 395+ 96D3 22 A8 89     	ld (Posicion_actual),hl
 396+ 96D6 CD EF AC     	call Genera_coordenadas
 397+ 96D9
 398+ 96D9              ; Inicia el puntero de Sprite.
 399+ 96D9
 400+ 96D9 CD 2C 8D     2 call Inicia_puntero_objeto_der
 401+ 96DC C9           3 ret
 402+ 96DD
 403+ 96DD              ; ******************************************************************************************************************************************************************************************
 404+ 96DD              ;
 405+ 96DD              ;	15/02/23
 406+ 96DD              ;
 407+ 96DD              ;	Mov_left.
 408+ 96DD              ;
 409+ 96DD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96DD              ;
 411+ 96DD              Mov_left
 412+ 96DD
 413+ 96DD 21 C2 89     	ld hl,Ctrl_0
 414+ 96E0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96E2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96E2              ; 																	; _ en el caso de que no lo haya.
 417+ 96E2 3A C2 89     	ld a,(Ctrl_0)
 418+ 96E5 CB 77        	bit 6,a
 419+ 96E7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96E9
 421+ 96E9 CD FF 97     	call Stop_Amadeus_left
 422+ 96EC C8           	ret z
 423+ 96ED 20 4A        	jr nz,8F
 424+ 96EF
 425+ 96EF 3A AC 89     11 ld a,(Coordenada_X)
 426+ 96F2 A7           	and a
 427+ 96F3 20 44        	jr nz,8F
 428+ 96F5
 429+ 96F5 3A AE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96F8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96F9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96FB
 433+ 96FB              ; ---------- ---------- ----------
 434+ 96FB
 435+ 96FB 3A CA 89     	ld a,(Vel_left)
 436+ 96FE FE 02        	cp 2
 437+ 9700 28 0F        	jr z,1F
 438+ 9702 38 04        	jr c,6F
 439+ 9704 FE 04        	cp 4
 440+ 9706 28 12        	jr z,7F
 441+ 9708
 442+ 9708              ; ---------- ---------- ----------
 443+ 9708
 444+ 9708 3A AE 89     6 ld a,(CTRL_DESPLZ)
 445+ 970B FE F8        	cp $f8
 446+ 970D 20 2A        	jr nz,8F
 447+ 970F 18 10        	jr 4F
 448+ 9711 3A AE 89     1 ld a,(CTRL_DESPLZ)
 449+ 9714 FE F9        	cp $f9
 450+ 9716 20 21        	jr nz,8F
 451+ 9718 18 07        	jr 4F
 452+ 971A 3A AE 89     7 ld a,(CTRL_DESPLZ)
 453+ 971D FE FB        	cp $fb
 454+ 971F 20 18        	jr nz,8F
 455+ 9721
 456+ 9721              ; ---------- ---------- ----------
 457+ 9721
 458+ 9721              4
 459+ 9721 CD 27 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9724              ;	call Reinicio
 461+ 9724
 462+ 9724              ; ---------- ---------- ----------
 463+ 9724
 464+ 9724 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9726 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9727
 467+ 9727              ;	ld hl,(Indice_Sprite_izq)
 468+ 9727              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9727
 470+ 9727 CD 40 97     	call DESPLZ_IZQ
 471+ 972A C1           	pop bc
 472+ 972B 10 F9        	djnz 5B
 473+ 972D 2A A8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9730 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9731 22 A8 89     	ld (Posicion_actual),hl
 476+ 9734 CD EF AC     	call Genera_coordenadas
 477+ 9737 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9739
 479+ 9739              ; ---------- ---------- ----------
 480+ 9739
 481+ 9739              ; Movemos, no hay recolocación.
 482+ 9739
 483+ 9739 2A A8 89     8 ld hl,(Posicion_actual)
 484+ 973C CD 40 97     	call DESPLZ_IZQ
 485+ 973F C9           2 ret
 486+ 9740
 487+ 9740              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9740              ;
 489+ 9740              ;	22/9/22
 490+ 9740
 491+ 9740              DESPLZ_IZQ
 492+ 9740
 493+ 9740 CD 4F 97     	call Desplaza_izquierda
 494+ 9743 CD 9B 97         call modifica_parametros_1er_DESPLZ
 495+ 9746 CD C3 97     	call Ciclo_completo_2
 496+ 9749 21 C2 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 974C CB BE        	res 7,(hl)
 498+ 974E C9           	ret
 499+ 974F
 500+ 974F              Desplaza_izquierda
 501+ 974F
 502+ 974F 3A CA 89     	ld a,(Vel_left)
 503+ 9752 47           	ld b,a
 504+ 9753 2A B6 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9756 23           1 inc hl
 506+ 9757 23           	inc hl
 507+ 9758 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 975A 22 B6 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 975D CD 17 8D     	call Extrae_address
 510+ 9760 22 AA 89     	ld (Puntero_objeto),hl
 511+ 9763
 512+ 9763              ; Modifica (Puntero_DESPLZ_der).
 513+ 9763
 514+ 9763              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9763              ; Cuántos movimientos hemos hecho ??
 516+ 9763              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9763
 518+ 9763 2A B2 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9766 EB           	ex de,hl
 520+ 9767 A7           	and a
 521+ 9768 ED 52        	sbc hl,de
 522+ 976A CB 3D        	srl l
 523+ 976C 3E 08        6 ld a,8
 524+ 976E 95           	sub l
 525+ 976F 30 1E        	jr nc,3F
 526+ 9771
 527+ 9771              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9771              ; B="0".
 529+ 9771
 530+ 9771 04           4 inc b
 531+ 9772 3C           	inc a
 532+ 9773 20 FC        	jr nz,4B
 533+ 9775 78           	ld a,b
 534+ 9776 08           	ex af,af
 535+ 9777 2A B2 89     	ld hl,(Indice_Sprite_izq)
 536+ 977A 23           5 inc hl
 537+ 977B 23           	inc hl
 538+ 977C 10 FC        	djnz 5B
 539+ 977E 22 B6 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9781 CD 17 8D     	call Extrae_address
 541+ 9784 22 AA 89     	ld (Puntero_objeto),hl
 542+ 9787
 543+ 9787              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9787              ; _(Posicion_actual).
 545+ 9787
 546+ 9787 21 A8 89     	ld hl,Posicion_actual
 547+ 978A 35           	dec (hl)
 548+ 978B 08           	ex af,af
 549+ 978C 6F           	ld l,a
 550+ 978D 18 DD        	jr 6B
 551+ 978F
 552+ 978F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 978F
 554+ 978F 47           3 ld b,a
 555+ 9790 2A B0 89     	ld hl,(Indice_Sprite_der)
 556+ 9793 23           2 inc hl
 557+ 9794 23           	inc hl
 558+ 9795 10 FC        	djnz 2B
 559+ 9797 22 B4 89     	ld (Puntero_DESPLZ_der),hl
 560+ 979A C9           8 ret
 561+ 979B
 562+ 979B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 979B              ;
 564+ 979B              ;	modifica_parametros_1er_DESPLZ
 565+ 979B              ;
 566+ 979B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 979B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 979B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 979B
 570+ 979B 3A AE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 979E A7           	and a
 572+ 979F 20 1E        	jr nz,1F
 573+ 97A1 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 97A2 32 AE 89         ld (CTRL_DESPLZ),a
 575+ 97A5 21 A7 89     	ld hl,Columns
 576+ 97A8 34           	inc (hl)
 577+ 97A9 3A BA 89     	ld a,(Cuad_objeto)
 578+ 97AC E6 01        	and 1
 579+ 97AE 20 0F        	jr nz,1F
 580+ 97B0 2A A8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97B3 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97B4 22 A8 89     	ld (Posicion_actual),hl
 583+ 97B7 CD EF AC     	call Genera_coordenadas
 584+ 97BA CD 16 98     	call Dec_CTRL_DESPLZ
 585+ 97BD 18 03        	jr 2F
 586+ 97BF CD 16 98     1 call Dec_CTRL_DESPLZ
 587+ 97C2 C9           2 ret
 588+ 97C3
 589+ 97C3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97C3
 591+ 97C3 3A AE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97C6 FE F7        	cp $f7
 593+ 97C8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97CA 30 2C        	jr nc,3F
 595+ 97CC
 596+ 97CC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97CC
 598+ 97CC 06 00        	ld b,0
 599+ 97CE 04           4 inc b
 600+ 97CF 3C           	inc a
 601+ 97D0 FE F7        	cp $f7
 602+ 97D2 20 FA        	jr nz,4B
 603+ 97D4 3E FF        	ld a,$ff
 604+ 97D6 90           	sub b
 605+ 97D7 32 AE 89     	ld (CTRL_DESPLZ),a
 606+ 97DA 18 1C        	jr 3F
 607+ 97DC
 608+ 97DC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97DC
 610+ 97DC 21 A7 89     1 ld hl,Columns
 611+ 97DF 35           	dec (hl)
 612+ 97E0 AF           	xor a
 613+ 97E1 32 AE 89     	ld (CTRL_DESPLZ),a
 614+ 97E4 3A BA 89     	ld a,(Cuad_objeto)
 615+ 97E7 E6 01        	and 1
 616+ 97E9 28 0A        	jr z,2F
 617+ 97EB 2A A8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97EE 2B           	dec hl
 619+ 97EF 22 A8 89     	ld (Posicion_actual),hl
 620+ 97F2 CD EF AC     	call Genera_coordenadas
 621+ 97F5
 622+ 97F5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97F5
 624+ 97F5 CD 3F 8D     2 call Inicia_puntero_objeto_izq
 625+ 97F8 C9           3 ret
 626+ 97F9
 627+ 97F9              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97F9              ;
 629+ 97F9              ;	19/10/22
 630+ 97F9              ;
 631+ 97F9              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97F9              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97F9
 634+ 97F9 3A AC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97FC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97FE C9           	ret
 637+ 97FF
 638+ 97FF              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97FF              ;
 640+ 97FF              ;	19/10/22
 641+ 97FF              ;
 642+ 97FF              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97FF              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97FF
 645+ 97FF 3A AC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9802 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9804 C9           	ret
 648+ 9805
 649+ 9805              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9805              ;
 651+ 9805              ;	24/7/22
 652+ 9805              ;
 653+ 9805              ;	Inc_CTRL_DESPLZ
 654+ 9805              ;
 655+ 9805              ;
 656+ 9805              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9805
 658+ 9805 21 AE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9808 3A CB 89     	ld a,(Vel_right)
 660+ 980B A7           	and a
 661+ 980C 28 06        	jr z,1F
 662+ 980E 47           	ld b,a
 663+ 980F 34           3 inc (hl)
 664+ 9810 10 FD        	djnz 3B
 665+ 9812 18 01        	jr 2F
 666+ 9814 34           1 inc (hl)
 667+ 9815 C9           2 ret
 668+ 9816
 669+ 9816              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9816              ;
 671+ 9816              ;	5/2/23
 672+ 9816              ;
 673+ 9816              ;	Dec_CTRL_DESPLZ
 674+ 9816              ;
 675+ 9816              ;
 676+ 9816              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9816
 678+ 9816 21 AE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9819 3A CA 89     	ld a,(Vel_left)
 680+ 981C A7           	and a
 681+ 981D 28 06        	jr z,1F
 682+ 981F 47           	ld b,a
 683+ 9820 35           3 dec (hl)
 684+ 9821 10 FD        	djnz 3B
 685+ 9823 18 01        	jr 2F
 686+ 9825 35           1 dec (hl)
 687+ 9826 C9           2 ret
 688+ 9827
 689+ 9827              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9827
 691+ 9827 2A A8 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 982A 01 1F 00     	ld bc,31
 693+ 982D A7           	and a
 694+ 982E ED 4A        	adc hl,bc
 695+ 9830 22 A8 89     	ld (Posicion_actual),hl
 696+ 9833 21 C2 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9836 CB C6        	set 0,(hl)
 698+ 9838 C9           	ret
 699+ 9839
 700+ 9839              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9839
 702+ 9839 2A A8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 983C 01 1F 00     	ld bc,31
 704+ 983F A7           	and a
 705+ 9840 ED 42        	sbc hl,bc
 706+ 9842 22 A8 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9845 21 C2 89     	ld hl,Ctrl_0
 708+ 9848 CB CE        	set 1,(hl)
 709+ 984A C9           	ret
 710+ 984B
 711+ 984B              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 984B
 713+ 984B 24           Reaparece_abajo inc h
 714+ 984C 01 E0 17     	ld bc,$17e0
 715+ 984F A7           	and a
 716+ 9850 ED 4A        	adc hl,bc
 717+ 9852 22 A8 89     	ld (Posicion_actual),hl
 718+ 9855 21 C2 89     	ld hl,Ctrl_0
 719+ 9858 CB D6        	set 2,(hl)
 720+ 985A C9           	ret
 721+ 985B
 722+ 985B              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 985B
 724+ 985B 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 985E A7           	and a
 726+ 985F ED 42        	sbc hl,bc
 727+ 9861 22 A8 89     	ld (Posicion_actual),hl
 728+ 9864 21 C2 89     	ld hl,Ctrl_0
 729+ 9867 CB DE        	set 3,(hl)
 730+ 9869 C9           	ret
 731+ 986A
 732+ 986A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 986A              ;
 734+ 986A              ;	15/07/23
 735+ 986A
 736+ 986A              Reinicio
 737+ 986A
 738+ 986A              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 986A
 740+ 986A AF           	xor a
 741+ 986B 21 DA 89     	ld hl,Puntero_indice_mov_bucle
 742+ 986E CD 8C 98     	call Limpia_contenido_hl
 743+ 9871
 744+ 9871 21 A8 89     	ld hl,Posicion_actual
 745+ 9874 CD 8C 98     	call Limpia_contenido_hl
 746+ 9877
 747+ 9877 CD D0 AA     	call Inicializa_Puntero_indice_mov
 748+ 987A CD 73 99     	call Inicia_Puntero_mov
 749+ 987D
 750+ 987D 21 DC 89     	ld hl,Incrementa_puntero
 751+ 9880 06 05        	ld b,5
 752+ 9882 77           1 ld (hl),a
 753+ 9883 23           	inc hl
 754+ 9884 10 FC        	djnz 1B
 755+ 9886
 756+ 9886 21 C7 89     	ld hl,Ctrl_2
 757+ 9889 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 988B
 759+ 988B C9           	ret
 760+ 988C
 761+ 988C 77           Limpia_contenido_hl	ld (hl),a
 762+ 988D 23           	inc hl
 763+ 988E 77           	ld (hl),a
 764+ 988F C9           	ret
 765+ 9890
 766+ 9890              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9890              ;
 768+ 9890              ;	27/5/24
 769+ 9890              ;
 770+ 9890
 771+ 9890              ;	Actualiza movimiento.
 772+ 9890
 773+ 9890 2A BE 89     Amadeus_a_izquierda ld hl,(Puntero_de_almacen_de_mov_masticados)	;	Actualiza variable de 16 bits.
 774+ 9893 2B           	dec hl
 775+ 9894 2B           	dec hl
 776+ 9895 2B           	dec hl
 777+ 9896 2B           	dec hl
 778+ 9897 22 BE 89     	ld (Puntero_de_almacen_de_mov_masticados),hl					;	Actualiza variable de 8 bits.
 779+ 989A
 780+ 989A              ;	Actualiza contador de movimientos.
 781+ 989A
 782+ 989A 21 C0 89     	ld hl,Contador_de_mov_masticados
 783+ 989D 35           	dec (hl)
 784+ 989E
 785+ 989E C9           	ret
 786+ 989F
 787+ 989F              ; ----------------------------------------------------------------------------------------------------------------
 788+ 989F              ;
 789+ 989F              ;	27/5/24
 790+ 989F              ;
 791+ 989F
 792+ 989F 21 BE 89     Amadeus_a_derecha ld hl,Puntero_de_almacen_de_mov_masticados
 793+ 98A2 34           	inc (hl)
 794+ 98A3 34           	inc (hl)
 795+ 98A4 34           	inc (hl)
 796+ 98A5 34           	inc (hl)
 797+ 98A6
 798+ 98A6 21 C0 89     	ld hl,Contador_de_mov_masticados
 799+ 98A9 34           	inc (hl)
 800+ 98AA
 801+ 98AA C9           	ret
 802+ 98AB
# file closed: Direcciones.asm
2157  98AB              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 98AB              ; ----- ----- ----- ----- -----
   2+ 98AB              ;
   3+ 98AB              ;   28/12/23
   4+ 98AB
   5+ 98AB              Movimiento
   6+ 98AB
   7+ 98AB              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 98AB
   9+ 98AB 3A C7 89         ld a,(Ctrl_2)
  10+ 98AE CB 57            bit 2,a
  11+ 98B0 20 1B            jr nz, Desplazamiento_iniciado
  12+ 98B2
  13+ 98B2 2A D8 89         ld hl,(Puntero_mov)
  14+ 98B5 7E               ld a,(hl)
  15+ 98B6
  16+ 98B6              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 98B6
  18+ 98B6              Inicia_desplazamiento.
  19+ 98B6
  20+ 98B6              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 98B6
  22+ 98B6 CD A9 99         call Ajusta_velocidad_desplazamiento
  23+ 98B9
  24+ 98B9              ; Iniciamos (Repetimos_mov).
  25+ 98B9
  26+ 98B9 7E               ld a,(hl)
  27+ 98BA E6 0F            and $0f
  28+ 98BC 32 DE 89         ld (Repetimos_desplazamiento),a
  29+ 98BF 32 DF 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98C2
  31+ 98C2              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98C2
  33+ 98C2 23               inc hl
  34+ 98C3 7E               ld a,(hl)
  35+ 98C4 32 E1 89         ld (Cola_de_desplazamiento),a
  36+ 98C7 2B               dec hl
  37+ 98C8
  38+ 98C8 21 C7 89         ld hl,Ctrl_2
  39+ 98CB CB D6            set 2,(hl)
  40+ 98CD
  41+ 98CD              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98CD              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98CD
  44+ 98CD              Desplazamiento_iniciado
  45+ 98CD
  46+ 98CD CD 7D 99         call Aplica_desplazamiento
  47+ 98D0
  48+ 98D0              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98D0
  50+ 98D0 3A 08 8A         ld a,(Ctrl_3)
  51+ 98D3 CB 4F            bit 1,a
  52+ 98D5 C0               ret nz
  53+ 98D6
  54+ 98D6 21 DE 89     3 ld hl,Repetimos_desplazamiento
  55+ 98D9 35               dec (hl)
  56+ 98DA C0               ret nz
  57+ 98DB
  58+ 98DB              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98DB              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98DB              ; Analiza (Cola_de_desplazamiento).
  61+ 98DB
  62+ 98DB 3A E1 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98DE A7               and a
  64+ 98DF CC D2 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98E2 28 30            jr z,Reinicia_el_movimiento
  66+ 98E4
  67+ 98E4 FE FF            cp $ff
  68+ 98E6 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98E8
  70+ 98E8 FE FE            cp $fe
  71+ 98EA CC 57 99         call z,Fijamos_bucle
  72+ 98ED 28 25            jr z,Reinicia_el_movimiento
  73+ 98EF
  74+ 98EF FE FD            cp $fd
  75+ 98F1 20 11            jr nz,1F
  76+ 98F3
  77+ 98F3              ; ---
  78+ 98F3              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98F3
  80+ 98F3 3A C7 89         ld a,(Ctrl_2)
  81+ 98F6 CB 5F            bit 3,a
  82+ 98F8 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98FA
  84+ 98FA              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98FA
  86+ 98FA 21 C7 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98FD CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98FF
  89+ 98FF CD 68 99         call Inicia_Repetimos_movimiento
  90+ 9902 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9904              ; ---
  92+ 9904
  93+ 9904 FE 01        1 cp 1
  94+ 9906 CA 41 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9909
  96+ 9909 3D               dec a
  97+ 990A 32 E1 89         ld (Cola_de_desplazamiento),a
  98+ 990D
  99+ 990D 3A DF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9910 32 DE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9913              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9913 C9               ret
 103+ 9914
 104+ 9914              Reinicia_el_movimiento
 105+ 9914
 106+ 9914 3A C7 89         ld a,(Ctrl_2)
 107+ 9917 CB 5F            bit 3,a
 108+ 9919 28 1B            jr z,2F
 109+ 991B
 110+ 991B              ; (Cola_de_desplazamiento)="254".
 111+ 991B
 112+ 991B 21 E0 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 991E 35               dec (hl)
 114+ 991F 20 15            jr nz,2F
 115+ 9921
 116+ 9921              ; Fin de las repeticiones del último movimiento.
 117+ 9921
 118+ 9921 21 C7 89         ld hl,Ctrl_2
 119+ 9924 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9926
 121+ 9926 2A D8 89         ld hl,(Puntero_mov)
 122+ 9929 23               inc hl
 123+ 992A 23               inc hl
 124+ 992B 23               inc hl
 125+ 992C 22 D8 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 992F              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 992F 7E               ld a,(hl)
 128+ 9930 32 E1 89         ld (Cola_de_desplazamiento),a
 129+ 9933
 130+ 9933 C3 DB 98         jp Cola
 131+ 9936
 132+ 9936 CD 73 99     2 call Inicia_Puntero_mov
 133+ 9939
 134+ 9939 21 C7 89         ld hl,Ctrl_2
 135+ 993C CB 96            res 2,(hl)
 136+ 993E
 137+ 993E C3 AB 98         jp Movimiento
 138+ 9941
 139+ 9941              Siguiente_desplazamiento
 140+ 9941
 141+ 9941              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9941              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9941
 144+ 9941 21 C7 89         ld hl,Ctrl_2
 145+ 9944 CB 96            res 2,(hl)
 146+ 9946
 147+ 9946 2A D8 89         ld hl,(Puntero_mov)
 148+ 9949 23               inc hl
 149+ 994A 23               inc hl
 150+ 994B 22 D8 89         ld (Puntero_mov),hl
 151+ 994E
 152+ 994E 7E               ld a,(hl)
 153+ 994F A7               and a
 154+ 9950 CC D2 99         call z,Incrementa_Puntero_indice_mov
 155+ 9953 CA 14 99         jp z,Reinicia_el_movimiento
 156+ 9956
 157+ 9956 C9               ret
 158+ 9957
 159+ 9957              ; Subrutinas -----------------------------------------
 160+ 9957              ; ---------- --------- --------- ---------- ----------
 161+ 9957              ;
 162+ 9957              ;   24/07/23
 163+ 9957              ;
 164+ 9957              ;   Fijamos_bucle
 165+ 9957              ;
 166+ 9957              ;
 167+ 9957
 168+ 9957              Fijamos_bucle
 169+ 9957
 170+ 9957 3A DC 89         ld a,(Incrementa_puntero)
 171+ 995A 3C               inc a
 172+ 995B 32 DD 89         ld (Incrementa_puntero_backup),a
 173+ 995E
 174+ 995E CD D2 99         call Incrementa_Puntero_indice_mov
 175+ 9961 2A D6 89         ld hl,(Puntero_indice_mov)
 176+ 9964 22 DA 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9967 C9               ret
 178+ 9968
 179+ 9968              ; ---------- --------- --------- ---------- ----------
 180+ 9968              ;
 181+ 9968              ;   07/7/23
 182+ 9968              ;
 183+ 9968              ;   Inicia_Repetimos_movimiento
 184+ 9968              ;
 185+ 9968              ;
 186+ 9968
 187+ 9968              Inicia_Repetimos_movimiento
 188+ 9968
 189+ 9968              ; Iniciamos (Repetimos_movimiento).
 190+ 9968
 191+ 9968 DD 2A D8 89      ld ix,(Puntero_mov)
 192+ 996C DD 7E 02         ld a,(ix+2)
 193+ 996F 32 E0 89         ld (Repetimos_movimiento),a
 194+ 9972
 195+ 9972 C9               ret
 196+ 9973
 197+ 9973              ; ---------- --------- --------- ---------- ----------
 198+ 9973              ;
 199+ 9973              ;   26/6/23
 200+ 9973              ;
 201+ 9973              ;   Inicia_Puntero_mov
 202+ 9973              ;
 203+ 9973              ;
 204+ 9973
 205+ 9973 2A D6 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9976 CD 17 8D         call Extrae_address
 207+ 9979 22 D8 89         ld (Puntero_mov),hl
 208+ 997C C9               ret
 209+ 997D
 210+ 997D              ; ---------- --------- --------- ---------- ----------
 211+ 997D              ;
 212+ 997D              ;   27/06/23
 213+ 997D              ;
 214+ 997D              ;   Aplica_movimiento.
 215+ 997D
 216+ 997D              Aplica_desplazamiento
 217+ 997D
 218+ 997D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 997D
 220+ 997D 2A D8 89         ld hl, (Puntero_mov)
 221+ 9980
 222+ 9980 7E               ld a,(hl)
 223+ 9981 E6 F0            and $f0
 224+ 9983 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9984
 226+ 9984 CB 7E            bit 7,(hl)
 227+ 9986 28 03            jr z,1F
 228+ 9988 CD 77 95         call Mov_up
 229+ 998B 2A D8 89     1 ld hl, (Puntero_mov)
 230+ 998E CB 76            bit 6,(hl)
 231+ 9990 28 03            jr z,2F
 232+ 9992 CD 3E 95         call Mov_down
 233+ 9995
 234+ 9995              ; Se ha aplicado reinicio ???
 235+ 9995              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9995
 237+ 9995              ;    ld a,(Ctrl_3)
 238+ 9995              ;    bit 1,a
 239+ 9995              ;    ret nz
 240+ 9995
 241+ 9995 2A D8 89     2 ld hl, (Puntero_mov)
 242+ 9998 CB 6E            bit 5,(hl)
 243+ 999A 28 03            jr z,3F
 244+ 999C CD DD 96         call Mov_left
 245+ 999F 2A D8 89     3 ld hl, (Puntero_mov)
 246+ 99A2 CB 66            bit 4,(hl)
 247+ 99A4 C8               ret z
 248+ 99A5 CD BA 95         call Mov_right
 249+ 99A8 C9               ret
 250+ 99A9
 251+ 99A9              ; ---------- --------- --------- ---------- ----------
 252+ 99A9              ;
 253+ 99A9              ;   26/06/23
 254+ 99A9              ;
 255+ 99A9              ;   Ajusta_velocidad_desplazamiento.
 256+ 99A9
 257+ 99A9              Ajusta_velocidad_desplazamiento
 258+ 99A9
 259+ 99A9              ; 1er byte de la cadena de movimiento.
 260+ 99A9              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 99A9
 262+ 99A9 CD C7 99         call Extrae_nibble_alto
 263+ 99AC
 264+ 99AC 32 CC 89         ld (Vel_up),a
 265+ 99AF 79               ld a,c
 266+ 99B0 E6 0F            and $0f
 267+ 99B2 32 CD 89         ld (Vel_down),a
 268+ 99B5
 269+ 99B5              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 99B5              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 99B5
 272+ 99B5 23               inc hl
 273+ 99B6 CD C7 99         call Extrae_nibble_alto
 274+ 99B9
 275+ 99B9 32 CA 89         ld (Vel_left),a
 276+ 99BC 79               ld a,c
 277+ 99BD E6 0F            and $0f
 278+ 99BF 32 CB 89         ld (Vel_right),a
 279+ 99C2
 280+ 99C2              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99C2
 282+ 99C2 23               inc hl
 283+ 99C3 22 D8 89         ld (Puntero_mov),hl
 284+ 99C6 C9               ret
 285+ 99C7
 286+ 99C7 06 04        Extrae_nibble_alto ld b,4
 287+ 99C9 7E               ld a,(hl)
 288+ 99CA 4F               ld c,a
 289+ 99CB E6 F0            and $f0
 290+ 99CD CB 3F        1 srl a
 291+ 99CF 10 FC            djnz 1B
 292+ 99D1 C9               ret
 293+ 99D2
 294+ 99D2              ; ---------- --------- --------- ---------- ----------
 295+ 99D2              ;
 296+ 99D2              ;   5/7/23
 297+ 99D2              ;
 298+ 99D2              ;   Incrementa_Puntero_indice_mov
 299+ 99D2
 300+ 99D2              Incrementa_Puntero_indice_mov
 301+ 99D2
 302+ 99D2 21 DC 89         ld hl,Incrementa_puntero
 303+ 99D5 34               inc (hl)
 304+ 99D6
 305+ 99D6 2A D6 89         ld hl,(Puntero_indice_mov)
 306+ 99D9 01 02 00         ld bc,2
 307+ 99DC A7               and a
 308+ 99DD 09               add hl,bc
 309+ 99DE 22 D6 89         ld (Puntero_indice_mov),hl
 310+ 99E1
 311+ 99E1 7E               ld a,(hl)
 312+ 99E2 A7               and a
 313+ 99E3
 314+ 99E3              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99E3
 316+ 99E3              ;    jr z,$
 317+ 99E3
 318+ 99E3              ;! Reinicia el Patrón de movimiento.
 319+ 99E3
 320+ 99E3 CC E8 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99E6
 322+ 99E6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99E7
 324+ 99E7 C9               ret
 325+ 99E8
 326+ 99E8              ; ---------- --------- --------- ---------- ----------
 327+ 99E8              ;
 328+ 99E8              ;   15/01/24
 329+ 99E8              ;
 330+ 99E8              ;   Inicializa_Puntero_indice_mov
 331+ 99E8
 332+ 99E8              Inicializa_Puntero_indice_mov_2
 333+ 99E8
 334+ 99E8              ; Existe etiqueta de bucle principal???
 335+ 99E8
 336+ 99E8 2A DA 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99EB 24               inc h
 338+ 99EC 25               dec h
 339+ 99ED 28 05            jr z,2F
 340+ 99EF
 341+ 99EF 22 D6 89         ld (Puntero_indice_mov),hl
 342+ 99F2 18 14            jr 3F
 343+ 99F4
 344+ 99F4              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99F4
 346+ 99F4 3A DC 89     2 ld a,(Incrementa_puntero)
 347+ 99F7 47               ld b,a
 348+ 99F8
 349+ 99F8 2A D6 89         ld hl,(Puntero_indice_mov)
 350+ 99FB 2B           1 dec hl
 351+ 99FC 2B               dec hl
 352+ 99FD 10 FC            djnz 1B
 353+ 99FF 22 D6 89         ld (Puntero_indice_mov),hl
 354+ 9A02
 355+ 9A02 AF               xor a
 356+ 9A03 32 DC 89         ld (Incrementa_puntero),a
 357+ 9A06 18 06            jr 4F
 358+ 9A08
 359+ 9A08 3A DD 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9A0B 32 DC 89         ld (Incrementa_puntero),a
 361+ 9A0E C9           4 ret
 362+ 9A0F
 363+ 9A0F              ; ----------------------------------------------------------------------
 364+ 9A0F              ;
 365+ 9A0F              ;   30/01/24
 366+ 9A0F              ;
 367+ 9A0F              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9A0F
 369+ 9A0F 3A A5 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9A12 CD 54 AC         call Calcula_salto_en_BC
 371+ 9A15 21 CE 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A18 A7               and a
 373+ 9A19 ED 4A            adc hl,bc
 374+ 9A1B C9               ret
 375+ 9A1C
 376+ 9A1C              ; ----------------------------------------------------------------------
 377+ 9A1C              ;
 378+ 9A1C              ;   30/01/24
 379+ 9A1C              ;
 380+ 9A1C              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A1C              ;
 382+ 9A1C              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A1C
 384+ 9A1C 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A1D 23               inc hl
 386+ 9A1E 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A1F 69               ld l,c
 388+ 9A20 60               ld h,b
 389+ 9A21 22 C0 89         ld (Contador_de_mov_masticados),hl
 390+ 9A24 C9               ret
 391+ 9A25
# file closed: Movimiento.asm
2158  9A25
2159  9A25
2160  9A25              ;	include "Disparo.asm"
2161  9A25
2162  9A25
2163  9A25              	SAVESNA "Pruebas.sna", START
2164  9A25
2165  9A25
2166  9A25
2167  9A25
# file closed: Banco_de_pruebas.asm
