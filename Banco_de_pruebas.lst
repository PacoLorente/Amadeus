# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 9E 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD CC 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD DC 8C     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 A8 89     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B 9E 89  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D 8C 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 878C
   2+ 878C
   3+ 878C              ;   07/07/23
   4+ 878C              ;
   5+ 878C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 878C              ;
   7+ 878C              ;   Codificación:
   8+ 878C              ;
   9+ 878C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 878C              ;
  11+ 878C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 878C              ;
  13+ 878C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 878C              ;
  15+ 878C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 878C              ;
  17+ 878C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 878C              ;                               ..... %01000010 Vel_up 4
  19+ 878C              ;                                               Vel_down 2
  20+ 878C              ;                               ..... $42
  21+ 878C              ;
  22+ 878C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 878C              ;
  24+ 878C              ;                               ..... %01000010 Vel_left 4
  25+ 878C              ;                                               Vel_right 2
  26+ 878C              ;                               ..... $42
  27+ 878C              ;
  28+ 878C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 878C              ;
  30+ 878C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 878C              ;
  32+ 878C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 878C              ;
  34+ 878C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 878C              ;                                     $53
  36+ 878C              ;
  37+ 878C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 878C              ;
  39+ 878C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 878C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 878C              ;
  42+ 878C              ;                       Arriba ..... $81
  43+ 878C              ;                       Arriba - izquierda ..... $a1
  44+ 878C              ;                       Arriba - derecha ..... $91
  45+ 878C              ;
  46+ 878C              ;                       Abajo ..... $41
  47+ 878C              ;                       Abajo - izquierda ..... $61
  48+ 878C              ;                       Abajo - derecha ..... $51
  49+ 878C              ;
  50+ 878C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 878C              ;
  52+ 878C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 878C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 878C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 878C              ;
  56+ 878C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 878C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 878C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 878C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 878C              ;
  61+ 878C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 878C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 878C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 878C              ;
  65+ 878C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 878C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 878C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 878C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 878C
  70+ 878C              ; ----- ----- ----- ----- -----
  71+ 878C
  72+ 878C B8 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 878E C0 87            defw F_1
  74+ 8790 CA 87            defw F_2
  75+ 8792 D4 87            defw Codo_abajo_derecha
  76+ 8794 08 88            defw Derecha_y_subiendo
  77+ 8796 12 88            defw Derecha_y_subiendo_1
  78+ 8798 1C 88            defw F_3
  79+ 879A 26 88            defw F_4
  80+ 879C 30 88            defw Derecha_y_bajando
  81+ 879E 3A 88            defw Derecha_y_bajando_1
  82+ 87A0 44 88            defw Derecha_y_bajando_2
  83+ 87A2 4E 88            defw Codo_derecha_abajo
  84+ 87A4 7E 88            defw Codo_abajo_izq.
  85+ 87A6 B2 88            defw Izquierda_y_subiendo
  86+ 87A8 BC 88            defw Izquierda_y_subiendo_1
  87+ 87AA C6 88            defw F_5
  88+ 87AC D0 88            defw F_6
  89+ 87AE DA 88            defw Izquierda_y_bajando
  90+ 87B0 E4 88            defw Izquierda_y_bajando_1
  91+ 87B2 EE 88            defw Izquierda_y_bajando_2
  92+ 87B4 F8 88            defw Codo_izquierda_abajo
  93+ 87B6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87B8
  95+ 87B8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87BC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87C0
  98+ 87C0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87C4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87C8 08 00
 100+ 87CA
 101+ 87CA 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87CE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87D2 0F FE
 103+ 87D4
 104+ 87D4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 87D8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 87DC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 87E0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 87E4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 87E8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 87EC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 87F0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 87F4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 87F8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 87FC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8800 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8804 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8808
 118+ 8808 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 880C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8810 06 00
 120+ 8812
 121+ 8812 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8816 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 881A 02 00
 123+ 881C
 124+ 881C 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8820 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8824 04 00
 126+ 8826
 127+ 8826 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 882A 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 882E 08 00
 129+ 8830
 130+ 8830 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8834 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8838 02 00
 132+ 883A
 133+ 883A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 883E 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8842 06 00
 135+ 8844
 136+ 8844 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8848 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 884C 06 00
 138+ 884E
 139+ 884E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 884E
 141+ 884E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8852 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8856 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 885A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 885E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8862 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8866 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 886A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 886E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8872 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8876 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 887A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 887E
 154+ 887E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8882 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8886 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 888A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 888E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8892 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8896 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 889A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 889E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88A2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88A6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88AA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88AE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88B2
 168+ 88B2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88B6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88BA 06 00
 170+ 88BC
 171+ 88BC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88C0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88C4 02 00
 173+ 88C6
 174+ 88C6 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88CA 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88CE 04 00
 176+ 88D0
 177+ 88D0 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 88D4 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 88D8 08 00
 179+ 88DA
 180+ 88DA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 88DE 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 88E2 02 00
 182+ 88E4
 183+ 88E4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 88E8 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 88EC 06 00
 185+ 88EE
 186+ 88EE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 88F2 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 88F6 06 00
 188+ 88F8
 189+ 88F8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 88FC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8900 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8904 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8908 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 890C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8910 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8914 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8918 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 891C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8920 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8924 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8928
 202+ 8928
 203+ 8928
 204+ 8928
 205+ 8928
 206+ 8928
 207+ 8928
 208+ 8928
 209+ 8928
 210+ 8928
# file closed: Patrones_de_mov.asm
 107  8928              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8928              ; 19/1/24
   2+ 8928
   3+ 8928              Indice_de_niveles
   4+ 8928
   5+ 8928 30 89        	defw Nivel_1
   6+ 892A 36 89        	defw Nivel_2
   7+ 892C
   8+ 892C              ;	...
   9+ 892C              ;	...
  10+ 892C              ;	+ Niveles ...
  11+ 892C
  12+ 892C 00 00        	defw 0
  13+ 892E 00 00        	defw 0
  14+ 8930
  15+ 8930 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8931 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8935 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8936
  19+ 8936 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8937 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 893B 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 893F 01 02
  22+ 8941 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8945 01 02
  23+ 8947
# file closed: Niveles.asm
 108  8947
 109  8947              ; ******************************************************************************************************************************************************************************************
 110  8947              ; Constantes.
 111  8947              ; ******************************************************************************************************************************************************************************************
 112  8947              ;
 113  8947              ; 25/12/23
 114  8947
 115  8947              ;
 116  8947              ; Constantes.
 117  8947              ;
 118  8947
 119  8947              Sprite_vacio equ $eae0
 120  8947              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 121  8947              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 122  8947              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 123  8947              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 124  8947
 125  8947              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 126  8947              ;														;
 127  8947              Almacen_de_movimientos_masticados_Amadeus equ $e700
 128  8947
 129  8947              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 130  8947              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 131  8947              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 132  8947              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 133  8947              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 134  8947              ;														; 55 Bytes.
 135  8947
 136  8947              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 137  8947              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 138  8947
 139  8947              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 140  8947
 141  8947              ; ******************************************************************************************************************************************************************************************
 142  8947              ; Variables.
 143  8947              ; ******************************************************************************************************************************************************************************************
 144  8947              ;
 145  8947              ; 18/01/24
 146  8947              ;
 147  8947              ; Variables de DRAW. (Motor principal).	42 Bytes.
 148  8947              ;
 149  8947
 150  8947              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 151  8947
 152  8947 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 153  8948              ;															- Patrón de movimiento.
 154  8948              ;															- Aspecto
 155  8948 00           Filas db 0												; Filas. [DRAW]
 156  8949 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 157  894A 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 158  894C 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 159  894E 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 160  894F 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 161  8950
 162  8950              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 163  8950
 164  8950 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 165  8951              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 166  8951              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 167  8951 00           Attr db 0												; Atributos de la entidad:
 168  8952
 169  8952              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 170  8952              ;
 171  8952              ;	COLORES: 0 ..... NEGRO
 172  8952              ;    		 1 ..... AZUL
 173  8952              ; 			 2 ..... ROJO
 174  8952              ;			 3 ..... MAGENTA
 175  8952              ; 			 4 ..... VERDE
 176  8952              ; 			 5 ..... CIAN
 177  8952              ;			 6 ..... AMARILLO
 178  8952              ; 			 7 ..... BLANCO
 179  8952
 180  8952 00 00        Indice_Sprite_der defw 0
 181  8954 00 00        Indice_Sprite_izq defw 0
 182  8956 00 00        Puntero_DESPLZ_der defw 0
 183  8958 00 00        Puntero_DESPLZ_izq defw 0
 184  895A
 185  895A 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 186  895C 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 187  895D
 188  895D              ; Variables de objeto. (Características).
 189  895D
 190  895D 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 191  895E              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 192  895E              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 193  895E 00 00 00...  Variables_de_borrado ds 6
 194  8964
 195  8964 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 196  8966              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 197  8966
 198  8966 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 199  8968
 200  8968              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 201  8968              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 202  8968
 203  8968 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 204  896A              ;														; _palabras que componen el "movimiento_masticado".
 205  896A
 206  896A              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 207  896A
 208  896A 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 209  896B              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 210  896B              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 211  896B              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 212  896B              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 213  896B              ;
 214  896B              ; 														DESCRIPCIÖN:
 215  896B              ;
 216  896B              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 217  896B              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 218  896B              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 219  896B              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 220  896B              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 221  896B              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 222  896B              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 223  896B              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 224  896B              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 225  896B              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 226  896B              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 227  896B              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 228  896B              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 229  896B              ;
 230  896B              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 231  896B              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 232  896B              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 233  896B
 234  896B              ; Variables de funcionamiento. [DRAW].
 235  896B
 236  896B 00           Columnas db 0
 237  896C 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 238  896E              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  896E 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 240  896F
 241  896F              ; variables de control general.
 242  896F
 243  896F 00           Ctrl_2 db 0
 244  8970              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 245  8970              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 246  8970              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 247  8970              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 248  8970              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 249  8970              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 250  8970              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 251  8970              ;
 252  8970              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 253  8970              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 254  8970              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 255  8970              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 256  8970              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 257  8970              ;														BIT 4, ???
 258  8970              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 259  8970
 260  8970 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 261  8971
 262  8971              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 263  8971
 264  8971              ;					         		---------;      ;---------
 265  8971
 266  8971              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 267  8971
 268  8971              Perfiles_de_velocidad
 269  8971
 270  8971 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 271  8972 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 272  8973 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 273  8974 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 274  8975
 275  8975              ; Contadores de 16 bits.
 276  8975
 277  8975 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 278  8977 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 279  8979 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 280  897B 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 281  897D
 282  897D              ; Movimiento. ------------------------------------------------------------------------------------------------------
 283  897D
 284  897D 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 285  897F 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 286  8981 00 00        Puntero_indice_mov_bucle defw 0							;
 287  8983              ;
 288  8983              ;
 289  8983 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 290  8984              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 291  8984              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 292  8984 00           Incrementa_puntero_backup db 0
 293  8985 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 294  8986              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 295  8986 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 296  8987 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 297  8988 00           Cola_de_desplazamiento db 0								; Este byte indica:
 298  8989              ;
 299  8989              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 300  8989              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 301  8989              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 302  8989              ;
 303  8989              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 304  8989              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 305  8989              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 306  8989              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 307  8989              ;
 308  8989              ;														;	"$ff" ..... Bucle infinito de repetición.
 309  8989              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 310  8989              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 311  8989              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 312  8989
 313  8989 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 314  898A
 315  898A              ;														DESCRIPCIÓN:
 316  898A              ;
 317  898A              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 318  898A              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 319  898A              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 320  898A              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 321  898A              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 322  898A              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 323  898A
 324  898A              ;														BIT 3, Recarga de nueva oleada.
 325  898A              ;														BIT 4, Recarga de nueva oleada.
 326  898A              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 327  898A              ;														BIT 6, **** Frame completo.
 328  898A              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 329  898A
 330  898A 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 331  898C              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 332  898C              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 333  898C              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 334  898C
 335  898C              ; Gestión de ENTIDADES y CAJAS.
 336  898C
 337  898C 00 00        Puntero_store_caja defw 0
 338  898E 00 00        Puntero_restore_caja defw 0
 339  8990 00 00        Indice_restore_caja defw 0
 340  8992 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 341  8993 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 342  8994 00           Entidades_en_curso db 0									; ..... ..... .....
 343  8995 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 344  8996              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 345  8996              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 346  8996              ;														; _ (Numero_de_malotes)="0".
 347  8996 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 348  8998 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 349  899A              ;														; _ puntero (Indice_entidades).
 350  899A
 351  899A              ;---------------------------------------------------------------------------------------------------------------
 352  899A              ;
 353  899A              ;	11/01/24
 354  899A              ;
 355  899A              ;	Álbumes.
 356  899A
 357  899A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 358  899C              ;														; _variable para almacenar lo posición del puntero_
 359  899C              ; 														; _de pila, SP.
 360  899C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 361  899E              ;														; La utiliza la rutina [Extrae_foto_registros].
 362  899E 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 363  89A0 00 80        Stack_snapshot defw Album_de_fotos
 364  89A2 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 365  89A4
 366  89A4              ;End_Snapshot defw Album_de_fotos
 367  89A4              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 368  89A4 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 369  89A6              ;														; _el snapshot de los registros del siguiente disparo.
 370  89A6              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 371  89A6 AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 372  89A8
 373  89A8 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 374  89A9              ;
 375  89A9              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 376  89A9              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 377  89A9              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 378  89A9
 379  89A9 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 380  89AA              ;
 381  89AA              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 382  89AA              ;
 383  89AA              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 384  89AA              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 385  89AA              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 386  89AA              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 387  89AA              ;
 388  89AA              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 389  89AA              ;															_ masticados ya generados.
 390  89AA              ;
 391  89AA              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 392  89AA              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 393  89AA              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 394  89AA              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 395  89AA
 396  89AA
 397  89AA              ; Gestión de Disparos.
 398  89AA
 399  89AA 00           Numero_de_disparotes db 0
 400  89AB 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 401  89AD 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 402  89AF 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 403  89B0              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 404  89B0              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 405  89B0 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 406  89B2              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 407  89B2              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 408  89B2              ;														; _produzca colisión.
 409  89B2 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 410  89B4              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 411  89B4 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 412  89B7              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 413  89B7 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 414  89BA              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 415  89BA 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 416  89BB
 417  89BB              ;---------------------------------------------------------------------------------------------------------------
 418  89BB
 419  89BB              ; Relojes y temporizaciones.
 420  89BB
 421  89BB 00           Contador_de_frames db 0
 422  89BC 00           Contador_de_frames_2 db 0
 423  89BD
 424  89BD 04           Clock_explosion db 4
 425  89BE 14           Clock_Entidades_en_curso db 20
 426  89BF 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 427  89C0              ;														; Repite la oleada de entidades.
 428  89C0 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 429  89C1 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 430  89C2 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 431  89C3
 432  89C3 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 433  89C4 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 434  89C5 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 435  89C6
 436  89C6              ;---------------------------------------------------------------------------------------------------------------
 437  89C6
 438  89C6              ; Gestión de NIVELES.
 439  89C6
 440  89C6 00           Nivel db 0												; Nivel actual del juego.
 441  89C7 00 00        Puntero_indice_NIVELES defw 0
 442  89C9 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 443  89CB              ; 														; _ que definen el NIVEL.
 444  89CB              ; Y todo comienza aquí .....
 445  89CB              ;
 446  89CB              ; 	INICIO  *************************************************************************************************************************************************************************
 447  89CB              ;
 448  89CB              ;	5/1/24
 449  89CB
 450  89CB              START
 451  89CB
 452  89CB 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 453  89CE 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 454  89D0 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 455  89D2 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 456  89D4 F3           	DI
 457  89D5
 458  89D5 3E 07        	ld a,%00000111
 459  89D7 CD A9 9E     	call Cls
 460  89DA CD 3D 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 461  89DD
 462  89DD              ; INICIALIZACIÓN.
 463  89DD
 464  89DD              ;	Inicializa 1er Nivel.
 465  89DD
 466  89DD 21 28 89     	ld hl,Indice_de_niveles
 467  89E0 22 C7 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 468  89E3 CD EE 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 469  89E6
 470  89E6              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 471  89E6              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 472  89E6              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 473  89E6
 474  89E6              ;	Provisional, (para desarrollo).
 475  89E6
 476  89E6              	;-
 477  89E6              ;	ld hl,Numero_parcial_de_entidades
 478  89E6              ;	ld b,(hl)
 479  89E6              ;	inc b
 480  89E6              ;	dec b
 481  89E6              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 482  89E6
 483  89E6 CD 1D 8D     4 call Inicia_Entidades
 484  89E9
 485  89E9 CD 00 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 486  89EC
 487  89EC              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 488  89EC              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 489  89EC              ; (Esto se dá cuando se inicia una nueva oleada).
 490  89EC
 491  89EC              ;	ld a,(Ctrl_1)
 492  89EC              ;	bit 3,a
 493  89EC              ;	jr nz,5F											; Loop
 494  89EC
 495  89EC              ; 	INICIA AMADEUS !!!!!
 496  89EC
 497  89EC              ;3 call Restore_Amadeus
 498  89EC              ;	call Inicia_Puntero_objeto
 499  89EC              ;	call Draw
 500  89EC
 501  89EC              ;	call Guarda_movimiento_masticado	;! Provisional
 502  89EC
 503  89EC              ;	call Guarda_foto_registros
 504  89EC              ;	call Guarda_datos_de_borrado_Amadeus
 505  89EC
 506  89EC              ;	ld de,Amadeus_db
 507  89EC              ;	call Store_Amadeus
 508  89EC
 509  89EC              ; 	INICIA DISPAROS !!!!!
 510  89EC
 511  89EC              ;	call Inicia_Puntero_Disparo_Entidades
 512  89EC              ;	call Inicia_Puntero_Disparo_Amadeus
 513  89EC
 514  89EC              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 515  89EC
 516  89EC              ;5 call Inicia_punteros_de_cajas
 517  89EC              ;	call Restore_entidad
 518  89EC
 519  89EC              ;	ld a,(Ctrl_1)
 520  89EC              ;	bit 3,a
 521  89EC              ;	jr z,6F
 522  89EC
 523  89EC              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 524  89EC
 525  89EC              ;	ld hl,Ctrl_1
 526  89EC              ;	res 3,(hl)
 527  89EC              ;	jr Main
 528  89EC
 529  89EC              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 530  89EC
 531  89EC 21 A8 89     6 ld hl,Ctrl_3
 532  89EF CB C6        	set 0,(hl)											; Frame completo.
 533  89F1 FB           	ei
 534  89F2 76           	halt
 535  89F3
 536  89F3              ; ------------------------------------
 537  89F3
 538  89F3              Main
 539  89F3              ;
 540  89F3              ;	11/12/23
 541  89F3
 542  89F3              ; Aparece nueva entidad ???
 543  89F3
 544  89F3              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 545  89F3              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 546  89F3              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 547  89F3              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 548  89F3              ;														; _un 2º bloque.
 549  89F3
 550  89F3              ;	ld a,1
 551  89F3              ;	out ($fe),a
 552  89F3
 553  89F3 3A BE 89     	ld a,(Clock_Entidades_en_curso)
 554  89F6 47           	ld b,a
 555  89F7 3A BB 89     	ld a,(Contador_de_frames)
 556  89FA B8           	cp b
 557  89FB 20 18        	jr nz,13F
 558  89FD
 559  89FD              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 560  89FD              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 561  89FD
 562  89FD 3A 93 89     21 ld a,(Numero_parcial_de_entidades)
 563  8A00 47           	ld b,a
 564  8A01 3A 94 89     	ld a,(Entidades_en_curso)
 565  8A04 B8           	cp b
 566  8A05 28 0E        	jr z,13F
 567  8A07 30 0C        	jr nc,13F
 568  8A09
 569  8A09 3C           	inc a
 570  8A0A 32 94 89     	ld (Entidades_en_curso),a
 571  8A0D
 572  8A0D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 573  8A0D
 574  8A0D 3A BE 89     	ld a,(Clock_Entidades_en_curso)
 575  8A10              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 576  8A10              ;! _ IMPREDECIBLE !!!!
 577  8A10 C6 64        	add 100
 578  8A12 32 BE 89     	ld (Clock_Entidades_en_curso),a
 579  8A15
 580  8A15              ; -------------------------------------------------------------------------------------------------------------
 581  8A15
 582  8A15              ; Habilita disparos.
 583  8A15
 584  8A15              13
 585  8A15
 586  8A15              ;	ld hl,Disparo_Amadeus
 587  8A15              ;	ld de,CLOCK_repone_disparo_Amadeus
 588  8A15              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 589  8A15
 590  8A15              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 591  8A15              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 592  8A15              ;	call Habilita_disparos
 593  8A15
 594  8A15              ; COLISIONES.
 595  8A15
 596  8A15              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 597  8A15
 598  8A15              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 599  8A15              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 600  8A15              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 601  8A15
 602  8A15              ;	xor a
 603  8A15              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 604  8A15
 605  8A15              ;	call Inicia_punteros_de_cajas
 606  8A15              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 607  8A15              ; 														; _ en DRAW.
 608  8A15
 609  8A15              ;	ld a,(Filas)
 610  8A15              ;	and a
 611  8A15              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 612  8A15              ;	call Incrementa_punteros_de_cajas
 613  8A15              ;	jr 12B
 614  8A15
 615  8A15              ; ---------------------------------------------------------------------------------------
 616  8A15
 617  8A15 3A 93 89     10 ld a,(Numero_parcial_de_entidades)
 618  8A18 47               ld b,a
 619  8A19 A7           	and a
 620  8A1A 20 00        	jr nz,11F
 621  8A1C
 622  8A1C              ;	ld hl,Ctrl_1;
 623  8A1C              ;	bit 4,(hl)
 624  8A1C              ;	jp nz,16F
 625  8A1C
 626  8A1C              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 627  8A1C
 628  8A1C              ;	ld hl,Ctrl_1
 629  8A1C              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 630  8A1C
 631  8A1C              ;	ld a,(Contador_de_frames)
 632  8A1C              ;	inc a
 633  8A1C              ;	ld (Activa_recarga_cajas),a
 634  8A1C
 635  8A1C              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 636  8A1C
 637  8A1C 3A 94 89     11 ld a,(Entidades_en_curso)
 638  8A1F A7           	and a
 639  8A20 28 14        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 640  8A22 47           	ld b,a												; No hay entidades que gestionar.
 641  8A23
 642  8A23              ; ( Código que ejecutamos con cada entidad: ).
 643  8A23
 644  8A23              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 645  8A23
 646  8A23 C5           15 push bc 												; Nº de entidades en curso.
 647  8A24
 648  8A24 CD D3 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 649  8A27
 650  8A27              ; Existe "Entidad_guía" ???.
 651  8A27              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 652  8A27
 653  8A27              ;	ld a,(Ctrl_3)
 654  8A27              ;	bit 1,a
 655  8A27              ;	jr nz,22F
 656  8A27
 657  8A27              ; Almacén de "Movimientos_masticados" lleno ???
 658  8A27              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 659  8A27              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 660  8A27
 661  8A27              ;;	ld a,(Ctrl_3)
 662  8A27              ;;	bit 3,a
 663  8A27              ;;	jr nz,22F
 664  8A27
 665  8A27              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 666  8A27
 667  8A27              ;	ld hl,Ctrl_2
 668  8A27              ;	set 5,(hl)
 669  8A27              ;	ld hl,Ctrl_3
 670  8A27              ;	set 1,(hl)
 671  8A27
 672  8A27              ; Impacto ???
 673  8A27
 674  8A27              ;22 ld a,(Impacto)
 675  8A27              ;	and a
 676  8A27              ;	jr z,8F
 677  8A27
 678  8A27              ; Hay Impacto en esta entidad.
 679  8A27
 680  8A27              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 681  8A27              ;	dec (hl)
 682  8A27              ;	jp nz,17F
 683  8A27
 684  8A27              ;! Velocidad de la animación de la explosión.
 685  8A27
 686  8A27              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 687  8A27              ;														; _,(velocidad de la explosión).
 688  8A27              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 689  8A27
 690  8A27              ;	call Repone_datos_de_borrado
 691  8A27              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 692  8A27
 693  8A27              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 694  8A27
 695  8A27              ;	ld a,(Ctrl_2)
 696  8A27              ;	bit 1,a
 697  8A27              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 698  8A27
 699  8A27              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 700  8A27
 701  8A27              ;	ld a,(CTRL_DESPLZ)
 702  8A27              ;	and a
 703  8A27              ;	jr nz,18F
 704  8A27
 705  8A27              ;	ld hl,Indice_Explosion_2x2-2
 706  8A27              ;	ld (Puntero_DESPLZ_der),hl
 707  8A27              ;	jr 19F
 708  8A27
 709  8A27              ;18 ld hl,Indice_Explosion_2x3-2
 710  8A27              ;	ld (Puntero_DESPLZ_der),hl
 711  8A27
 712  8A27              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 713  8A27              ;	set 1,(hl)
 714  8A27              ;	jr 7F
 715  8A27
 716  8A27              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 717  8A27              ; _con las coordenadas de la entidad almacenada en DRAW.
 718  8A27
 719  8A27              ;8 ld a,(Ctrl_1)
 720  8A27              ;	bit 2,a
 721  8A27              ;	jr z,7F
 722  8A27
 723  8A27              ;	ld hl,(Coordenadas_disparo_certero)
 724  8A27              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 725  8A27              ;														; E contiene la coordenada_X del disparo.
 726  8A27              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 727  8A27              ;														; H FILA, (Coordenada_y de la entidad).
 728  8A27              ;	and a
 729  8A27              ;	sbc hl,de
 730  8A27
 731  8A27              ;	call Determina_resultado_comparativa
 732  8A27
 733  8A27              ;	ld a,b
 734  8A27              ;	and a
 735  8A27              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 736  8A27
 737  8A27              ; ----- ----- -----
 738  8A27
 739  8A27              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 740  8A27              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 741  8A27
 742  8A27              ;	ld hl,Ctrl_1
 743  8A27              ;	res 2,(hl)
 744  8A27
 745  8A27 CD 43 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 746  8A2A
 747  8A2A              ;	ld a,(Ctrl_0)
 748  8A2A              ;	bit 4,a
 749  8A2A              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 750  8A2A
 751  8A2A              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 752  8A2A              ; [[[
 753  8A2A              ;	call Detecta_disparo_entidad
 754  8A2A              ; ]]]
 755  8A2A
 756  8A2A CD 87 8D     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 757  8A2D
 758  8A2D              ;	ld hl,Ctrl_0
 759  8A2D              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 760  8A2D
 761  8A2D CD 77 8D     17 call Store_Restore_cajas
 762  8A30
 763  8A30 C1           	pop bc
 764  8A31
 765  8A31 10 F0        	djnz 15B
 766  8A33
 767  8A33 CD 00 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 768  8A36
 769  8A36              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 770  8A36              ; Hemos gestionado todas las unidades.
 771  8A36              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 772  8A36
 773  8A36              ;	ld hl,Ctrl_1
 774  8A36              ;	res 2,(hl)
 775  8A36
 776  8A36 21 A8 89     16 ld hl,Ctrl_3
 777  8A39 CB C6        	set 0,(hl)											; Frame completo.
 778  8A3B
 779  8A3B AF           	xor a
 780  8A3C D3 FE        	out ($fe),a
 781  8A3E
 782  8A3E 76           	halt
 783  8A3F
 784  8A3F              ; ----------------------------------------
 785  8A3F
 786  8A3F              ;	ld a,(Ctrl_1) 										; Existe Loop?
 787  8A3F              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 788  8A3F CA F3 89     	jp z,Main
 789  8A42
 790  8A42              ; RECARGA DE NUEVA OLEADA.
 791  8A42
 792  8A42              ;	ld a,(Contador_de_frames)
 793  8A42              ;	ld b,a
 794  8A42              ;	ld a,(Activa_recarga_cajas)
 795  8A42              ;	cp b
 796  8A42              ;	jr z,20F
 797  8A42
 798  8A42              ;	ld hl,Ctrl_1
 799  8A42              ;	set 4,(hl)
 800  8A42              ;	jp Main
 801  8A42
 802  8A42              ;20 ld hl,Ctrl_1
 803  8A42              ;	res 4,(hl)
 804  8A42
 805  8A42              ;	ld a,(Contador_de_frames)
 806  8A42
 807  8A42              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 808  8A42              ;! _ IMPREDECIBLE !!!!
 809  8A42
 810  8A42              ;	add 10
 811  8A42              ;	ld (Clock_Entidades_en_curso),a
 812  8A42
 813  8A42              ;	jp 4B
 814  8A42
 815  8A42 C9           	ret
 816  8A43
 817  8A43              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 818  8A43              ;
 819  8A43              ;	16/11/23
 820  8A43
 821  8A43              ;;Gestiona_Amadeus
 822  8A43
 823  8A43              ;! Activa/desactiva impacto con Amadeus.
 824  8A43
 825  8A43              ;	ld a,(Impacto)
 826  8A43              ;	and a
 827  8A43              ;	jr nz,2F
 828  8A43
 829  8A43              ;;	call Mov_Amadeus
 830  8A43
 831  8A43              ;;2 ld a,(Ctrl_0)
 832  8A43              ;;	bit 4,a
 833  8A43              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 834  8A43
 835  8A43              ;;	call Guarda_foto_entidad_a_pintar
 836  8A43              ;;	call Guarda_datos_de_borrado_Amadeus
 837  8A43
 838  8A43              ;;1 ld hl,Ctrl_0
 839  8A43              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 840  8A43
 841  8A43              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 842  8A43
 843  8A43              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 844  8A43
 845  8A43              ;	call Calcula_numero_de_disparotes
 846  8A43
 847  8A43              ;;	ret
 848  8A43
 849  8A43              ; --------------------------------------------------------------------------------------------------------------
 850  8A43              ;
 851  8A43              ;	15/12/23
 852  8A43
 853  8A43              Mov_obj
 854  8A43
 855  8A43              ;	ld a,(Ctrl_2)
 856  8A43              ;	bit 1,a
 857  8A43              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 858  8A43
 859  8A43              ; Explosión:
 860  8A43
 861  8A43              ;	ld a,(Frames_explosion)
 862  8A43              ;	and a
 863  8A43              ;	jr nz,4F
 864  8A43
 865  8A43              ;!  Una alimaña menos!!!!!!!!!1
 866  8A43
 867  8A43              ; Se trataba de una Entidad_guía ???
 868  8A43
 869  8A43              ;	ld a,(Ctrl_2)
 870  8A43              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 871  8A43              ;	jr z,5F
 872  8A43
 873  8A43              ;	ld hl,Ctrl_3
 874  8A43              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 875  8A43
 876  8A43              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 877  8A43              ;!! _generado puede ser distinto, (aletoriedad).
 878  8A43
 879  8A43              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 880  8A43              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 881  8A43              ;	dec (hl)
 882  8A43              ;	ld hl,Entidades_en_curso
 883  8A43              ;	dec (hl)
 884  8A43              ;	ld hl,Numero_de_entidades
 885  8A43              ;	dec (hl)
 886  8A43              ;	jr 3F
 887  8A43
 888  8A43              ; -----
 889  8A43
 890  8A43              ;	`Movemos´ la explosión.
 891  8A43
 892  8A43              ;4 ld hl,(Puntero_DESPLZ_der)
 893  8A43              ;	inc hl
 894  8A43              ;	inc hl
 895  8A43              ;	call Extrae_address
 896  8A43              ;;	ld (Puntero_objeto),hl
 897  8A43
 898  8A43              ;;	ld hl,Frames_explosion
 899  8A43              ;;	dec (hl)
 900  8A43
 901  8A43              ;;	ld hl,Ctrl_0
 902  8A43              ;;	set 4,(hl);;
 903  8A43
 904  8A43              ;;	jr 3F
 905  8A43
 906  8A43              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 907  8A43
 908  8A43              ;2 xor a
 909  8A43              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 910  8A43
 911  8A43              ; Movemos Entidades malignas.
 912  8A43              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 913  8A43
 914  8A43              ;	ld a,(Ctrl_2)
 915  8A43              ;	bit 5,a
 916  8A43              ;	jr nz,8F
 917  8A43
 918  8A43              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 919  8A43              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 920  8A43              ;	jr 7F
 921  8A43
 922  8A43              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 923  8A43
 924  8A43              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 925  8A43              ;	bit 4,a
 926  8A43              ;	ret z
 927  8A43
 928  8A43              ; Ha habido desplazamiento de la entidad maligna.
 929  8A43              ; Ha llegado a zona de AMADEUS ???
 930  8A43
 931  8A43              ;7 ld a,(Coordenada_y)
 932  8A43              ;	cp $14
 933  8A43              ;	jr c,1F
 934  8A43
 935  8A43              ; ---------
 936  8A43
 937  8A43              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 938  8A43              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 939  8A43
 940  8A43              ;	di
 941  8A43              ;	call Genera_coordenadas_X
 942  8A43              ;	call Compara_coordenadas_X
 943  8A43              ;	ei
 944  8A43
 945  8A43              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 946  8A43
 947  8A43              ; ---------
 948  8A43
 949  8A43              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 950  8A43 CD B1 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 951  8A46 CD 3E 8B     	call Limpia_Variables_de_borrado
 952  8A49
 953  8A49 C9           3 ret
 954  8A4A
 955  8A4A              ; --------------------------------------------------------------------------------------------------------------
 956  8A4A              ;
 957  8A4A              ;	29/1/23
 958  8A4A
 959  8A4A              Mov_Amadeus
 960  8A4A
 961  8A4A              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 962  8A4A
 963  8A4A CD 6C 95     	call Mov_right
 964  8A4D
 965  8A4D 3A 6A 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 966  8A50 CB 67        	bit 4,a
 967  8A52 C8           	ret z
 968  8A53
 969  8A53              ; ---------
 970  8A53
 971  8A53              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 972  8A53 CD A1 8C     	call Repone_datos_de_borrado_Amadeus
 973  8A56 CD 3E 8B     	call Limpia_Variables_de_borrado
 974  8A59
 975  8A59 C9           	ret
 976  8A5A
 977  8A5A              ; -----------------------------------------------------------------------------------
 978  8A5A              ;
 979  8A5A              ;	20/01/24
 980  8A5A              ;
 981  8A5A              ;
 982  8A5A
 983  8A5A              Construye_movimientos_masticados_entidad
 984  8A5A
 985  8A5A 2A 66 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 986  8A5D E5           	push hl
 987  8A5E CD A2 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 988  8A61              ;															; _ el (Contador_de_mov_masticados).
 989  8A61 CD 9E 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 990  8A64              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 991  8A64 CD C8 94     	call Recompone_posicion_inicio
 992  8A67
 993  8A67 CD BC 8E     1 call Draw
 994  8A6A CD 86 8A     	call Guarda_movimiento_masticado
 995  8A6D
 996  8A6D CD 42 98     	call Movimiento
 997  8A70
 998  8A70 3A A8 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 999  8A73 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1000  8A75 28 F0        	jr z,1B
1001  8A77
1002  8A77              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1003  8A77              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1004  8A77
1005  8A77 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1006  8A78 22 66 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1007  8A7B
1008  8A7B              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1009  8A7B
1010  8A7B CD A6 99     	call Situa_en_contador_general_de_mov_masticados
1011  8A7E
1012  8A7E              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1013  8A7E              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1014  8A7E
1015  8A7E ED 4B 68 89  	ld bc,(Contador_de_mov_masticados)
1016  8A82 71           	ld (hl),c
1017  8A83 23           	inc hl
1018  8A84 70           	ld (hl),b
1019  8A85
1020  8A85 C9           	ret
1021  8A86
1022  8A86              ; -----------------------------------------------------------------------------------
1023  8A86              ;
1024  8A86              ;	28/12/23
1025  8A86              ;
1026  8A86              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1027  8A86              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1028  8A86
1029  8A86              Guarda_movimiento_masticado
1030  8A86
1031  8A86 ED 73 9A 89  	ld (Stack),sp
1032  8A8A ED 7B 66 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1033  8A8E
1034  8A8E E5           	push hl
1035  8A8F DD E5            push ix
1036  8A91 FD E5            push iy
1037  8A93
1038  8A93 ED 7B 9A 89      ld sp,(Stack)
1039  8A97
1040  8A97 2A 68 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1041  8A9A 23           	inc hl
1042  8A9B 22 68 89     	ld (Contador_de_mov_masticados),hl
1043  8A9E
1044  8A9E CD A2 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1045  8AA1              ;															; _ el (Contador_de_mov_masticados).
1046  8AA1 C9               ret
1047  8AA2
1048  8AA2              ; --------------------------------------------------------------------------------------------------------------
1049  8AA2              ;
1050  8AA2              ;	12/1/24
1051  8AA2              ;
1052  8AA2              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1053  8AA2
1054  8AA2              Actualiza_Puntero_de_almacen_de_mov_masticados
1055  8AA2
1056  8AA2 2A 66 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1057  8AA5 01 06 00     	ld bc,6
1058  8AA8 A7           	and a
1059  8AA9 ED 4A        	adc hl,bc
1060  8AAB 22 66 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1061  8AAE C9           	ret
1062  8AAF
1063  8AAF              ; --------------------------------------------------------------------------------------------------------------
1064  8AAF              ;
1065  8AAF              ;	15/01/24
1066  8AAF              ;
1067  8AAF              ;	Cargamos los registros_
1068  8AAF              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1069  8AAF              ;
1070  8AAF              ;	HL contiene la dirección de la rutina de impresión.
1071  8AAF              ;	IX contiene el puntero de impresión.
1072  8AAF              ;	IY contiene (Puntero_objeto).
1073  8AAF
1074  8AAF
1075  8AAF ED 73 9A 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1076  8AB3 ED 7B 66 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1077  8AB7
1078  8AB7 FD E1        	pop iy
1079  8AB9 DD E1        	pop ix
1080  8ABB E1           	pop hl
1081  8ABC
1082  8ABC ED 73 66 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1083  8AC0
1084  8AC0 ED 7B 9A 89  	ld sp,(Stack)
1085  8AC4
1086  8AC4 C9           	ret
1087  8AC5
1088  8AC5              ; --------------------------------------------------------------------------------------------------------------
1089  8AC5              ;
1090  8AC5              ;	28/12/23
1091  8AC5              ;
1092  8AC5              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1093  8AC5              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1094  8AC5
1095  8AC5              Guarda_foto_entidad_a_pintar
1096  8AC5
1097  8AC5 3A 6A 89     	ld a,(Ctrl_0)
1098  8AC8 CB 77        	bit 6,a
1099  8ACA 28 04        	jr z,5F
1100  8ACC
1101  8ACC              ;	Guarda la foto de Amadeus.
1102  8ACC
1103  8ACC              ;	call Draw
1104  8ACC              ;	call Guarda_movimiento_masticado	;! Provisional
1105  8ACC CD BF 80     	call Guarda_foto_registros
1106  8ACF C9           	ret
1107  8AD0
1108  8AD0              ; ENTIDADES!
1109  8AD0              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1110  8AD0
1111  8AD0 3A A8 89     5 ld a,(Ctrl_3)
1112  8AD3 CB 5F        	bit 3,a
1113  8AD5 28 01        	jr z,1F
1114  8AD7
1115  8AD7              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1116  8AD7
1117  8AD7              4
1118  8AD7              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1119  8AD7 C9           	ret
1120  8AD8
1121  8AD8              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1122  8AD8
1123  8AD8 3A A8 89     1 ld a,(Ctrl_3)
1124  8ADB CB 57        	bit 2,a
1125  8ADD 20 10        	jr nz,6F
1126  8ADF
1127  8ADF              ; Entidad guía o fantasma ???
1128  8ADF
1129  8ADF 3A 6F 89     	ld a,(Ctrl_2)
1130  8AE2 CB 6F        	bit 5,a
1131  8AE4 20 10        	jr nz,3F
1132  8AE6
1133  8AE6              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1134  8AE6
1135  8AE6 18 EF        	jr 4B
1136  8AE8
1137  8AE8              ; ENTIDAD_GUÍA:
1138  8AE8              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1139  8AE8              ; _guardando "movimientos_masticados".
1140  8AE8
1141  8AE8 3A A8 89     2 ld a,(Ctrl_3)
1142  8AEB CB 57        	bit 2,a
1143  8AED 28 07        	jr z,3F
1144  8AEF
1145  8AEF              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1146  8AEF              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1147  8AEF
1148  8AEF CB 97        6 res 2,a
1149  8AF1 CB DF        	set 3,a
1150  8AF3 32 A8 89     	ld (Ctrl_3),a
1151  8AF6
1152  8AF6
1153  8AF6              ;	Esto sólo lo ejecuta una entidad guía.
1154  8AF6
1155  8AF6 CD BC 8E     3 	call Draw
1156  8AF9 CD 86 8A     	call Guarda_movimiento_masticado
1157  8AFC CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1158  8AFF
1159  8AFF              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1160  8AFF              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1161  8AFF
1162  8AFF              ;	call Convierte_guia_en_fantasma
1163  8AFF C9           	ret
1164  8B00
1165  8B00              ; *************************************************************************************************************************************************************
1166  8B00              ;
1167  8B00              ; 8/1/23
1168  8B00              ;
1169  8B00              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1170  8B00              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1171  8B00              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1172  8B00
1173  8B00              ; Destruye HL y DE !!!!!
1174  8B00
1175  8B00              Inicia_punteros_de_cajas
1176  8B00
1177  8B00 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1178  8B03 CD 98 8B         call Extrae_address
1179  8B06 22 8C 89         ld (Puntero_store_caja),hl
1180  8B09 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1181  8B0C 22 90 89     	ld (Indice_restore_caja),hl
1182  8B0F CD 98 8B     	call Extrae_address
1183  8B12 22 8E 89     	ld (Puntero_restore_caja),hl
1184  8B15 C9               ret
1185  8B16
1186  8B16              ; *************************************************************************************************************************************************************
1187  8B16              ;
1188  8B16              ; 8/1/23
1189  8B16              ;
1190  8B16              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1191  8B16
1192  8B16 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1193  8B19 22 AB 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1194  8B1C C9           	ret
1195  8B1D 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1196  8B20 22 AD 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1197  8B23 C9           	ret
1198  8B24
1199  8B24              ; -------------------------------------------------------------------------------------------------------------
1200  8B24              ;
1201  8B24              ; 21/9/23
1202  8B24              ;
1203  8B24
1204  8B24              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1205  8B24
1206  8B24              Limpia_album_Amadeus
1207  8B24
1208  8B24 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1209  8B27 7E           	ld a,(hl)
1210  8B28 A7           	and a
1211  8B29 C8           	ret z
1212  8B2A
1213  8B2A 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1214  8B2D 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1215  8B30 01 0B 00     	ld bc,11
1216  8B33 AF           	xor a
1217  8B34 77           	ld (hl),a
1218  8B35 ED B0        	ldir
1219  8B37
1220  8B37 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1221  8B3A 22 A6 89     	ld (End_Snapshot_Amadeus),hl
1222  8B3D
1223  8B3D C9           	ret
1224  8B3E
1225  8B3E 21 5E 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1226  8B41 11 5F 89     	ld de,Variables_de_borrado+1
1227  8B44 01 05 00     	ld bc,5
1228  8B47 AF           	xor a
1229  8B48 77           	ld (hl),a
1230  8B49 ED B0        	ldir
1231  8B4B C9           	ret
1232  8B4C
1233  8B4C              ; -------------------------------------------------------------------------------------------------------------
1234  8B4C              ;
1235  8B4C              ; 8/9/23
1236  8B4C              ;
1237  8B4C
1238  8B4C              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1239  8B4C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1240  8B4C
1241  8B4C              Calcula_numero_de_malotes
1242  8B4C
1243  8B4C 21 00 80     	ld hl,Album_de_fotos
1244  8B4F EB           	ex de,hl
1245  8B50 2A A0 89     	ld hl,(Stack_snapshot)
1246  8B53
1247  8B53 06 00        	ld b,0
1248  8B55 7D           	ld a,l
1249  8B56 93           	sub e
1250  8B57 28 07        	jr z,1F
1251  8B59
1252  8B59              ; Nº de malotes no es "0".
1253  8B59
1254  8B59 D6 06        2 sub 6
1255  8B5B 04           	inc b
1256  8B5C A7           	and a
1257  8B5D 20 FA        	jr nz,2B
1258  8B5F 78           	ld a,b
1259  8B60
1260  8B60 32 95 89     1 ld (Numero_de_malotes),a
1261  8B63 C9           	ret
1262  8B64
1263  8B64              ; -------------------------------------------------------------------------------------------------------------
1264  8B64              ;
1265  8B64              ; 8/9/23
1266  8B64              ;
1267  8B64
1268  8B64              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1269  8B64              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1270  8B64
1271  8B64              Calcula_malotes_Amadeus
1272  8B64
1273  8B64 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1274  8B67 EB           	ex de,hl
1275  8B68 2A A6 89     	ld hl,(End_Snapshot_Amadeus)
1276  8B6B
1277  8B6B 7C           	ld a,h
1278  8B6C A7           	and a
1279  8B6D 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1280  8B6F
1281  8B6F 06 00        	ld b,0
1282  8B71 7D           	ld a,l
1283  8B72 93           	sub e
1284  8B73 28 07        	jr z,1F
1285  8B75
1286  8B75              ; Nº de malotes no es "0".
1287  8B75
1288  8B75 D6 06        2 sub 6
1289  8B77 04           	inc b
1290  8B78 A7           	and a
1291  8B79 20 FA        	jr nz,2B
1292  8B7B 78           	ld a,b
1293  8B7C
1294  8B7C 32 95 89     1 ld (Numero_de_malotes),a
1295  8B7F C9           	ret
1296  8B80
1297  8B80              ; -------------------------------------------------------------------------------------------------------------
1298  8B80              ;
1299  8B80              ; 28/2/23
1300  8B80              ;
1301  8B80
1302  8B80              Calcula_numero_de_disparotes
1303  8B80
1304  8B80 21 56 80     	ld hl,Album_de_fotos_disparos
1305  8B83 EB           	ex de,hl
1306  8B84 2A A4 89     	ld hl,(End_Snapshot_disparos)
1307  8B87
1308  8B87 06 00        	ld b,0
1309  8B89 7D           	ld a,l
1310  8B8A 93           	sub e
1311  8B8B 28 07        	jr z,1F
1312  8B8D
1313  8B8D              ; Nº de malotes no es "0".
1314  8B8D
1315  8B8D D6 06        2 sub 6
1316  8B8F 04           	inc b
1317  8B90 A7           	and a
1318  8B91 20 FA        	jr nz,2B
1319  8B93 78           	ld a,b
1320  8B94
1321  8B94 32 AA 89     1 ld (Numero_de_disparotes),a
1322  8B97 C9           	ret
1323  8B98
1324  8B98              ; *************************************************************************************************************************************************************
1325  8B98              ;
1326  8B98              ; 20/10/22
1327  8B98              ;
1328  8B98              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1329  8B98              ;
1330  8B98              ; Destruye el puntero y DE !!!!!
1331  8B98
1332  8B98 5E           Extrae_address ld e,(hl)
1333  8B99 23           	inc hl
1334  8B9A 56           	ld d,(hl)
1335  8B9B 2B           	dec hl
1336  8B9C EB           	ex de,hl
1337  8B9D C9           	ret
1338  8B9E
1339  8B9E              ; *************************************************************************************************************************************************************
1340  8B9E              ;
1341  8B9E              ;	20/1/24
1342  8B9E              ;
1343  8B9E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1344  8B9E              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1345  8B9E              ;
1346  8B9E              ;   Destruye HL y BC !!!!!,
1347  8B9E              ;
1348  8B9E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1349  8B9E              ;					"0" ..... Izquierda.
1350  8B9E
1351  8B9E              Inicia_Puntero_objeto
1352  8B9E
1353  8B9E 3A 5C 89     	ld a,(Cuad_objeto)
1354  8BA1 E6 01        	and 1
1355  8BA3 F5           	push af
1356  8BA4 CC C0 8B     	call z,Inicia_puntero_objeto_izq
1357  8BA7 F1           	pop af
1358  8BA8 C8           	ret z
1359  8BA9 CD AD 8B     	call Inicia_puntero_objeto_der
1360  8BAC C9           	ret
1361  8BAD
1362  8BAD              ; Arrancamos desde la parte izquierda de la pantalla.
1363  8BAD              ; Iniciamos (Indice_Sprite_der).
1364  8BAD
1365  8BAD 2A 52 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1366  8BB0 22 56 89     	ld (Puntero_DESPLZ_der),hl
1367  8BB3 CD 98 8B     	call Extrae_address
1368  8BB6 22 4C 89     	ld (Puntero_objeto),hl
1369  8BB9
1370  8BB9 2A 54 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1371  8BBC 22 58 89     	ld (Puntero_DESPLZ_izq),hl
1372  8BBF C9           	ret
1373  8BC0
1374  8BC0              ; Arrancamos desde la parte derecha de la pantalla.
1375  8BC0              ; Iniciamos (Indice_Sprite_izq).
1376  8BC0
1377  8BC0 2A 54 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1378  8BC3 22 58 89     	ld (Puntero_DESPLZ_izq),hl
1379  8BC6 CD 98 8B     	call Extrae_address
1380  8BC9 22 4C 89     	ld (Puntero_objeto),hl
1381  8BCC
1382  8BCC 2A 52 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1383  8BCF 22 56 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1384  8BD2 C9           	ret
1385  8BD3
1386  8BD3              ; **************************************************************************************************
1387  8BD3              ;
1388  8BD3              ;	31/01/24
1389  8BD3              ;
1390  8BD3              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1391  8BD3
1392  8BD3              Restore_entidad
1393  8BD3
1394  8BD3 2A 8C 89     	ld hl,(Puntero_store_caja)
1395  8BD6 11 47 89     	ld de,Bandeja_DRAW
1396  8BD9 7E           	ld a,(hl)
1397  8BDA 12           	ld (de),a
1398  8BDB 23           	inc hl 											; (Tipo).
1399  8BDC
1400  8BDC 11 4E 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1401  8BDF 01 02 00     	ld bc,2
1402  8BE2 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1403  8BE4
1404  8BE4 13           	inc de
1405  8BE5 7E           	ld a,(hl)
1406  8BE6 12           	ld (de),a 										; Transferimos (Attr).
1407  8BE7 23           	inc hl
1408  8BE8
1409  8BE8 11 5D 89     	ld de,Impacto
1410  8BEB
1411  8BEB 7E           	ld a,(hl)
1412  8BEC 12           	ld (de),a 										; Transferimos (Impacto).
1413  8BED 23           	inc hl
1414  8BEE
1415  8BEE 13           	inc de
1416  8BEF
1417  8BEF 01 06 00     	ld bc,6
1418  8BF2 ED B0        	ldir
1419  8BF4
1420  8BF4 01 07 00     	ld bc,7
1421  8BF7 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1422  8BF9              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1423  8BF9 11 6F 89     	ld de,Ctrl_2
1424  8BFC
1425  8BFC 7E           	ld a,(hl)
1426  8BFD 12           	ld (de),a 										; Transferimos (Ctrl_2).
1427  8BFE
1428  8BFE C9           	ret
1429  8BFF
1430  8BFF              ; **************************************************************************************************
1431  8BFF              ;
1432  8BFF              ;	08/05/23
1433  8BFF              ;
1434  8BFF              ;	Incrementamos los dos punteros de entidades. (+1).
1435  8BFF
1436  8BFF              Incrementa_punteros_de_cajas
1437  8BFF
1438  8BFF 2A 8E 89     	ld hl,(Puntero_restore_caja)
1439  8C02 22 8C 89     	ld (Puntero_store_caja),hl
1440  8C05 2A 90 89     	ld hl,(Indice_restore_caja)
1441  8C08 23           	inc hl
1442  8C09 23           	inc hl
1443  8C0A 22 90 89     	ld (Indice_restore_caja),hl
1444  8C0D CD 98 8B         call Extrae_address
1445  8C10 22 8E 89         ld (Puntero_restore_caja),hl
1446  8C13 C9               ret
1447  8C14
1448  8C14              ; **************************************************************************************************
1449  8C14              ;
1450  8C14              ;	21/12/23
1451  8C14              ;
1452  8C14              ;	Restore_Amadeus
1453  8C14              ;
1454  8C14              ;	Cargamos en DRAW los parámetros de Amadeus.
1455  8C14              ;
1456  8C14
1457  8C14 E5           Restore_Amadeus	push hl
1458  8C15 D5           	push de
1459  8C16 C5            	push bc
1460  8C17 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1461  8C1A 11 47 89     	ld de,Bandeja_DRAW
1462  8C1D 01 2A 00     	ld bc,42
1463  8C20 ED B0        	ldir
1464  8C22 C1           	pop bc
1465  8C23 D1           	pop de
1466  8C24 E1           	pop hl
1467  8C25 C9           	ret
1468  8C26
1469  8C26              ; *************************************************************************************************************************************************************
1470  8C26              ;
1471  8C26              ;	21/12/23
1472  8C26              ;
1473  8C26              ;	Store_Amadeus
1474  8C26              ;
1475  8C26              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1476  8C26              ;
1477  8C26              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1478  8C26              ;
1479  8C26              ;	DESTRUYE: HL y BC y DE.
1480  8C26
1481  8C26 21 47 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1482  8C29 01 2A 00     	ld bc,42
1483  8C2C ED B0        	ldir
1484  8C2E C9           	ret
1485  8C2F
1486  8C2F              ; -----------------------------------------------------------
1487  8C2F              ;
1488  8C2F              ;	21/12/23
1489  8C2F              ;
1490  8C2F              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1491  8C2F              ;
1492  8C2F              ;	Destruye: HL,BC,DE,A
1493  8C2F
1494  8C2F 21 47 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1495  8C32 01 29 00     	ld bc,41
1496  8C35 AF           	xor a
1497  8C36 77           	ld (hl),a
1498  8C37 11 48 89     	ld de,Bandeja_DRAW+1
1499  8C3A ED B0        	ldir
1500  8C3C C9           	ret
1501  8C3D
1502  8C3D              ; -----------------------------------------------------------
1503  8C3D
1504  8C3D              ; Teclado.
1505  8C3D
1506  8C3D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1507  8C3F DB FE        	in a,($fe)
1508  8C41 E6 01        	and $01
1509  8C43 28 02        	jr z,1f
1510  8C45 18 F6        	jr Pulsa_ENTER
1511  8C47 C9           1 ret
1512  8C48
1513  8C48              ; **************************************************************************************************
1514  8C48              ;
1515  8C48              ; Temporización.
1516  8C48
1517  8C48              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1518  8C48              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1519  8C48              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1520  8C48              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1521  8C48
1522  8C48              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1523  8C48              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1524  8C48              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1525  8C48
1526  8C48              ; A partir de $4f61 no hace falta DELAY.
1527  8C48
1528  8C48              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1529  8C48
1530  8C48 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1531  8C4B 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1532  8C4C 78           	LD A,B
1533  8C4D A7           	AND A
1534  8C4E 20 FB        	JR NZ,wait
1535  8C50 C9           	RET
1536  8C51
1537  8C51              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1538  8C51              ;
1539  8C51              ;	5/3/23
1540  8C51              ;
1541  8C51              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1542  8C51
1543  8C51              Movimiento_Amadeus
1544  8C51
1545  8C51              ; Disparo.
1546  8C51
1547  8C51 3A C0 89     	ld a,(Disparo_Amadeus)
1548  8C54 A7           	and a
1549  8C55 20 02        	jr nz,1F
1550  8C57 18 15        	jr 2F
1551  8C59
1552  8C59 3E F7        1 ld a,$f7													; "5" para disparar.
1553  8C5B DB FE        	in a,($fe)
1554  8C5D E6 10        	and $10
1555  8C5F
1556  8C5F F5           	push af
1557  8C60 CC BC 99     	call z,Genera_disparo
1558  8C63 F1           	pop af
1559  8C64 20 08        	jr nz,2F
1560  8C66
1561  8C66 3A C0 89     	ld a,(Disparo_Amadeus)
1562  8C69 EE 01        	xor 1
1563  8C6B 32 C0 89     	ld (Disparo_Amadeus),a
1564  8C6E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1565  8C70 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1566  8C72 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1567  8C74 CC 8F 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1568  8C77
1569  8C77 3E F7        	ld a,$f7
1570  8C79 DB FE        	in a,($fe)
1571  8C7B E6 01        	and $01
1572  8C7D C8           	ret z
1573  8C7E
1574  8C7E 3E F7        	ld a,$f7
1575  8C80 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1576  8C82 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1577  8C84 CC 6C 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1578  8C87 C9           	ret
1579  8C88
1580  8C88              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1581  8C88              ;
1582  8C88              ;	Rutina provisional para que los malotes cagen balas.
1583  8C88
1584  8C88              Detecta_disparo_entidad
1585  8C88
1586  8C88 3A C3 89     	ld a,(Disparo_entidad)
1587  8C8B A7           	and a
1588  8C8C C8           	ret z
1589  8C8D
1590  8C8D              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1591  8C8D
1592  8C8D              ;	ld a,$7f				; Detecta SPACE.
1593  8C8D              ;	in a,($fe)
1594  8C8D              ;	and 1
1595  8C8D              ;	ret nz
1596  8C8D
1597  8C8D CD BC 99     	call Genera_disparo
1598  8C90 C9           	ret
1599  8C91
1600  8C91              ; ----------------------------------------------------------------------
1601  8C91              ;
1602  8C91              ;	8/9/23
1603  8C91
1604  8C91 2A A6 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1605  8C94 2B            	dec hl
1606  8C95 7E           	ld a,(hl)
1607  8C96 A7           	and a
1608  8C97 C8           	ret z										; Salimos si es álbum está vacío.
1609  8C98
1610  8C98 11 63 89     	ld de,Variables_de_borrado+5
1611  8C9B 01 06 00     	ld bc,6
1612  8C9E ED B8        	lddr
1613  8CA0 C9           	ret
1614  8CA1
1615  8CA1              ; ----------------------------------------------------------------------
1616  8CA1              ;
1617  8CA1              ;	9/9/23
1618  8CA1
1619  8CA1              Repone_datos_de_borrado_Amadeus
1620  8CA1
1621  8CA1 21 5E 89     	ld hl,Variables_de_borrado
1622  8CA4 11 AC 80     	ld de,Album_de_fotos_Amadeus
1623  8CA7 01 06 00     	ld bc,6
1624  8CAA ED B0        	ldir
1625  8CAC
1626  8CAC EB           	ex de,hl
1627  8CAD 22 A6 89     	ld (End_Snapshot_Amadeus),hl
1628  8CB0
1629  8CB0 C9           	ret
1630  8CB1
1631  8CB1              ; ----------------------------------------------------------------------
1632  8CB1              ;
1633  8CB1              ;	27/10/23
1634  8CB1              ;
1635  8CB1
1636  8CB1              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1637  8CB1              ;	_ Album_de_fotos correspondiente.
1638  8CB1
1639  8CB1              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1640  8CB1              ;	_ durante el proceso de escritura.
1641  8CB1
1642  8CB1              Repone_datos_de_borrado
1643  8CB1
1644  8CB1 ED 5B A0 89  	ld de,(Stack_snapshot)
1645  8CB5 21 5E 89     	ld hl,Variables_de_borrado
1646  8CB8 01 06 00     	ld bc,6
1647  8CBB ED B0        	ldir
1648  8CBD
1649  8CBD EB           	ex de,hl
1650  8CBE 22 A0 89     	ld (Stack_snapshot),hl
1651  8CC1
1652  8CC1 C9           	ret
1653  8CC2
1654  8CC2              ; --------------------------------------------------------------------------------------
1655  8CC2
1656  8CC2              Pinta_Amadeus
1657  8CC2
1658  8CC2 CD 64 8B        	call Calcula_malotes_Amadeus
1659  8CC5 CD 55 92     	call Extrae_foto_Amadeus
1660  8CC8 CD 24 8B     	call Limpia_album_Amadeus
1661  8CCB
1662  8CCB C9           	ret
1663  8CCC
1664  8CCC              Pinta_entidades
1665  8CCC
1666  8CCC              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1667  8CCC
1668  8CCC 3A A8 89     	ld a,(Ctrl_3)
1669  8CCF CB 47        	bit 0,a
1670  8CD1 C8           	ret z
1671  8CD2
1672  8CD2 CD 4C 8B     	call Calcula_numero_de_malotes
1673  8CD5 CD D3 91     	call Extrae_foto_entidades
1674  8CD8 CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1675  8CDB
1676  8CDB C9           	ret
1677  8CDC
1678  8CDC              ; -----------------------------------------------------------------------------------
1679  8CDC              ;
1680  8CDC              ;	10/12/23
1681  8CDC              ;
1682  8CDC              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1683  8CDC
1684  8CDC              Actualiza_relojes
1685  8CDC
1686  8CDC 3A A8 89     	ld a,(Ctrl_3)
1687  8CDF CB 47        	bit 0,a
1688  8CE1 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1689  8CE2
1690  8CE2 21 BB 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1691  8CE5 34           	inc (hl)
1692  8CE6
1693  8CE6 34           	inc (hl)
1694  8CE7 35           	dec (hl)
1695  8CE8 C0           	ret nz
1696  8CE9
1697  8CE9 21 BC 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1698  8CEC 34           	inc (hl)
1699  8CED C9           	ret
1700  8CEE
1701  8CEE              ; ---------------------------------------------------------------
1702  8CEE
1703  8CEE              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8CEE              ;---------------------------------------------------------------------------------------------------------------
   2+ 8CEE              ;
   3+ 8CEE              ;   19/1/24
   4+ 8CEE              ;
   5+ 8CEE              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8CEE              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8CEE              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8CEE              ;	_ de la 1ª entidad del Nivel.
   9+ 8CEE              ;
  10+ 8CEE              ;	MODIFICA: HL,DE y A.
  11+ 8CEE              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8CEE
  13+ 8CEE              Inicializa_Nivel
  14+ 8CEE
  15+ 8CEE 2A C7 89     	ld hl,(Puntero_indice_NIVELES)
  16+ 8CF1 CD 98 8B     	call Extrae_address
  17+ 8CF4 7E           	ld a,(hl)
  18+ 8CF5 32 92 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8CF8 23           	inc hl
  20+ 8CF9 CD 03 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8CFC 22 C9 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8CFF CD 0C 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8D02 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D03
  25+ 8D03              ; ----------------------
  26+ 8D03
  27+ 8D03 11 71 89     Fija_velocidades ld de,Perfiles_de_velocidad
  28+ 8D06 01 04 00     	ld bc,4
  29+ 8D09 ED B0        	ldir
  30+ 8D0B C9           	ret
  31+ 8D0C
  32+ 8D0C 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  33+ 8D0D CD 38 8E         call Calcula_salto_en_BC
  34+ 8D10 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  35+ 8D13 A7               and a
  36+ 8D14 ED 4A            adc hl,bc
  37+ 8D16 CD 98 8B         call Extrae_address
  38+ 8D19 22 7D 89         ld (Puntero_indice_mov),hl
  39+ 8D1C C9               ret
  40+ 8D1D
  41+ 8D1D              ;---------------------------------------------------------------------------------------------------------------
  42+ 8D1D              ;
  43+ 8D1D              ;   5/1/24
  44+ 8D1D              ;
  45+ 8D1D              ;	Destruye A,BC,HL,DE
  46+ 8D1D
  47+ 8D1D              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  48+ 8D1D              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  49+ 8D1D
  50+ 8D1D              Inicia_Entidades
  51+ 8D1D
  52+ 8D1D              ; Preparamos los punteros de las cajas de entidades:
  53+ 8D1D
  54+ 8D1D CD 00 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  55+ 8D20              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  56+ 8D20 CD 9F 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  57+ 8D23
  58+ 8D23 2A C9 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  59+ 8D26
  60+ 8D26 22 C9 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  61+ 8D29
  62+ 8D29 CD E6 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  63+ 8D2C
  64+ 8D2C 2A C9 89     	ld hl,(Datos_de_nivel)
  65+ 8D2F
  66+ 8D2F              ; En este punto:
  67+ 8D2F              ;
  68+ 8D2F              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  69+ 8D2F              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  70+ 8D2F
  71+ 8D2F C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  72+ 8D30
  73+ 8D30 7E           	ld a,(hl)
  74+ 8D31 CD 6D 8D     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  75+ 8D34
  76+ 8D34 CD 4A 8E     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  77+ 8D37
  78+ 8D37              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  79+ 8D37
  80+ 8D37 CD 08 8E     	call Busca_mov_masticados_segun_tipo
  81+ 8D3A
  82+ 8D3A A7           	and a
  83+ 8D3B 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  84+ 8D3D
  85+ 8D3D              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  86+ 8D3D
  87+ 8D3D              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  88+ 8D3D              ;	_ de este tipo de entidad.
  89+ 8D3D
  90+ 8D3D CD A6 99     	call Situa_en_contador_general_de_mov_masticados
  91+ 8D40 CD B3 99     	call Transfiere_datos_de_contadores
  92+ 8D43
  93+ 8D43 18 06        	jr 4F
  94+ 8D45
  95+ 8D45 CD 5A 8A     3 call Construye_movimientos_masticados_entidad
  96+ 8D48
  97+ 8D48              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
  98+ 8D48              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
  99+ 8D48              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 100+ 8D48              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 101+ 8D48              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 102+ 8D48
 103+ 8D48 CD C6 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 104+ 8D4B              ;																; _ Mov_masticados ya generados.
 105+ 8D4B CD 87 8D     4 call Guarda_foto_de_mov_masticado
 106+ 8D4E
 107+ 8D4E              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 108+ 8D4E
 109+ 8D4E 2A 64 89     	ld hl,(Puntero_de_impresion)
 110+ 8D51 CD BD 9E     	call Genera_coordenadas
 111+ 8D54 CD 71 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 112+ 8D57 CD 91 8D     	call Limpiamos_bandeja_DRAW
 113+ 8D5A CD FF 8B     	call Incrementa_punteros_de_cajas
 114+ 8D5D
 115+ 8D5D              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 116+ 8D5D              ; _ entidad del Nivel.
 117+ 8D5D
 118+ 8D5D 3A A9 89     	ld a,(Ctrl_4)
 119+ 8D60 E6 F0        	and $f0
 120+ 8D62 32 A9 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 121+ 8D65
 122+ 8D65              ; Siguiente entidad del Nivel.
 123+ 8D65
 124+ 8D65 2A C9 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 125+ 8D68 23           	inc hl 														; _ entidad del Nivel.
 126+ 8D69
 127+ 8D69 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 128+ 8D6A
 129+ 8D6A 10 BA        	djnz 2B
 130+ 8D6C
 131+ 8D6C C9           	ret
 132+ 8D6D
 133+ 8D6D              ; ---------------------------------------------------------------------
 134+ 8D6D              ;
 135+ 8D6D              ;	10/02/24
 136+ 8D6D              ;
 137+ 8D6D              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 138+ 8D6D              ;
 139+ 8D6D              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 140+ 8D6D
 141+ 8D6D              Definicion_segun_tipo
 142+ 8D6D
 143+ 8D6D CD 38 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 144+ 8D70 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 145+ 8D73 CD 40 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 146+ 8D76 C9           	ret
 147+ 8D77
 148+ 8D77              ; ---------------------------------------------------------------------
 149+ 8D77              ;
 150+ 8D77              ;	30/01/24
 151+ 8D77
 152+ 8D77
 153+ 8D77              Store_Restore_cajas
 154+ 8D77
 155+ 8D77              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 156+ 8D77
 157+ 8D77 2A 64 89     	ld hl,(Puntero_de_impresion)
 158+ 8D7A CD BD 9E     	call Genera_coordenadas
 159+ 8D7D
 160+ 8D7D CD 71 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 161+ 8D80 CD 91 8D     	call Limpiamos_bandeja_DRAW
 162+ 8D83
 163+ 8D83              ; 	Entidad_sospechosa. 20/4/23
 164+ 8D83
 165+ 8D83              ;	ld a,(Impacto)
 166+ 8D83              ;	and a
 167+ 8D83              ;	jr z,1F
 168+ 8D83
 169+ 8D83              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 170+ 8D83              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 171+ 8D83              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 172+ 8D83              ;	adc hl,bc 											; _ "0" más adelante.
 173+ 8D83              ;	ld (Entidad_sospechosa_de_colision),hl
 174+ 8D83
 175+ 8D83
 176+ 8D83              ;1 ld hl,(Puntero_restore_caja)
 177+ 8D83              ;	ld a,(hl)
 178+ 8D83              ;	and a
 179+ 8D83              ;	push af
 180+ 8D83              ;	jr z,2F
 181+ 8D83
 182+ 8D83              ;	di
 183+ 8D83              ;	ld de,Bandeja_DRAW
 184+ 8D83              ;	ld bc,42
 185+ 8D83              ;	ldir
 186+ 8D83              ;	ei
 187+ 8D83
 188+ 8D83 CD FF 8B     2 call Incrementa_punteros_de_cajas
 189+ 8D86 C9           	ret
 190+ 8D87
 191+ 8D87
 192+ 8D87              ; ---------------------------------------------------------------------
 193+ 8D87              ;
 194+ 8D87              ;	29/01/24
 195+ 8D87
 196+ 8D87 CD AF 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 197+ 8D8A CD BF 80     	call Guarda_foto_registros
 198+ 8D8D              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 199+ 8D8D              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 200+ 8D8D              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 201+ 8D8D              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 202+ 8D8D
 203+ 8D8D CD 9C 8D     	call Decrementa_Contador_de_mov_masticados
 204+ 8D90 C9           	ret
 205+ 8D91
 206+ 8D91              ; ---------------------------------------------------------------------
 207+ 8D91              ;
 208+ 8D91              ;	25/01/24
 209+ 8D91
 210+ 8D91 21 47 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 211+ 8D94 06 2A        	ld b,42
 212+ 8D96 AF           	xor a
 213+ 8D97
 214+ 8D97 77           1 ld (hl),a
 215+ 8D98 23           	inc hl
 216+ 8D99 10 FC        	djnz 1B
 217+ 8D9B
 218+ 8D9B C9           	ret
 219+ 8D9C
 220+ 8D9C              ; ---------------------------------------------------------------------
 221+ 8D9C              ;
 222+ 8D9C              ;	22/01/24
 223+ 8D9C
 224+ 8D9C 2A 68 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 225+ 8D9F 2B           	dec hl
 226+ 8DA0
 227+ 8DA0 24           	inc h
 228+ 8DA1 25           	dec h
 229+ 8DA2 20 05        	jr nz,1F
 230+ 8DA4
 231+ 8DA4 7D           	ld a,l
 232+ 8DA5 A7           	and a
 233+ 8DA6 CC AD 8D     	call z,Reinicia_entidad_maliciosa
 234+ 8DA9
 235+ 8DA9 22 68 89     1 ld (Contador_de_mov_masticados),hl
 236+ 8DAC C9           	ret
 237+ 8DAD
 238+ 8DAD              ; ---------------------------------------------------------------------
 239+ 8DAD              ;
 240+ 8DAD              ;	10/2/24
 241+ 8DAD
 242+ 8DAD              Reinicia_entidad_maliciosa
 243+ 8DAD
 244+ 8DAD              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 245+ 8DAD
 246+ 8DAD CD A6 99     	call Situa_en_contador_general_de_mov_masticados
 247+ 8DB0 CD B3 99     	call Transfiere_datos_de_contadores
 248+ 8DB3
 249+ 8DB3              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 250+ 8DB3
 251+ 8DB3 3A 47 89     	ld a,(Tipo)
 252+ 8DB6 CD 6D 8D     	call Definicion_segun_tipo
 253+ 8DB9
 254+ 8DB9 E5           	push hl
 255+ 8DBA DD E1        	pop ix
 256+ 8DBC
 257+ 8DBC DD 6E 0B     	ld l,(ix+11)
 258+ 8DBF DD 66 0C     	ld h,(ix+12)
 259+ 8DC2
 260+ 8DC2 22 66 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 261+ 8DC5
 262+ 8DC5 C9           	ret
 263+ 8DC6
 264+ 8DC6              ; ---------------------------------------------------------------------
 265+ 8DC6              ;
 266+ 8DC6              ;	22/01/24
 267+ 8DC6
 268+ 8DC6 21 A9 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 269+ 8DC9 CB 46        	bit 0,(hl)
 270+ 8DCB 20 0D        	jr nz,1F
 271+ 8DCD CB 4E        	bit 1,(hl)
 272+ 8DCF 20 0C        	jr nz,2F
 273+ 8DD1 CB 56        	bit 2,(hl)
 274+ 8DD3 20 0B        	jr nz,3F
 275+ 8DD5 CB 5E        	bit 3,(hl)
 276+ 8DD7 20 0A        	jr nz,4F
 277+ 8DD9 C9           	ret
 278+ 8DDA
 279+ 8DDA CB E6        1 set 4,(hl)
 280+ 8DDC C9           	ret
 281+ 8DDD CB EE        2 set 5,(hl)
 282+ 8DDF C9           	ret
 283+ 8DE0 CB F6        3 set 6,(hl)
 284+ 8DE2 C9           	ret
 285+ 8DE3 CB FE        4 set 7,(hl)
 286+ 8DE5 C9           	ret
 287+ 8DE6
 288+ 8DE6              ; ---------------------------------------------------------------------
 289+ 8DE6              ;
 290+ 8DE6              ;	23/01/24
 291+ 8DE6              ;
 292+ 8DE6              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 293+ 8DE6              ;
 294+ 8DE6              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 295+ 8DE6              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 296+ 8DE6              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 297+ 8DE6              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 298+ 8DE6
 299+ 8DE6              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 300+ 8DE6
 301+ 8DE6 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 302+ 8DE7 3D           	dec a
 303+ 8DE8 20 06        	jr nz,1F
 304+ 8DEA
 305+ 8DEA              ; --- Tipo_1
 306+ 8DEA
 307+ 8DEA 21 A9 89     	ld hl,Ctrl_4
 308+ 8DED CB C6        	set 0,(hl)
 309+ 8DEF C9           	ret
 310+ 8DF0
 311+ 8DF0 3D           1 dec a
 312+ 8DF1 20 06        	jr nz,2F
 313+ 8DF3
 314+ 8DF3              ; --- Tipo_2
 315+ 8DF3
 316+ 8DF3 21 A9 89     	ld hl,Ctrl_4
 317+ 8DF6 CB CE        	set 1,(hl)
 318+ 8DF8 C9           	ret
 319+ 8DF9
 320+ 8DF9 3D           2 dec a
 321+ 8DFA 20 06        	jr nz,3F
 322+ 8DFC
 323+ 8DFC              ; --- Tipo_3
 324+ 8DFC
 325+ 8DFC 21 A9 89     	ld hl,Ctrl_4
 326+ 8DFF CB D6        	set 2,(hl)
 327+ 8E01 C9           	ret
 328+ 8E02
 329+ 8E02              ; --- Tipo_3
 330+ 8E02
 331+ 8E02 21 A9 89     3 ld hl,Ctrl_4
 332+ 8E05 CB D6        	set 2,(hl)
 333+ 8E07 C9           	ret
 334+ 8E08
 335+ 8E08              ; ---------------------------------------------------------------------
 336+ 8E08              ;
 337+ 8E08              ;	22/01/24
 338+ 8E08
 339+ 8E08 21 A9 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 340+ 8E0B CB 46        	bit 0,(hl)
 341+ 8E0D 20 0E        	jr nz,1F
 342+ 8E0F
 343+ 8E0F CB 4E        	bit 1,(hl)
 344+ 8E11 20 10        	jr nz,2F
 345+ 8E13
 346+ 8E13 CB 56        	bit 2,(hl)
 347+ 8E15 20 12        	jr nz,3F
 348+ 8E17
 349+ 8E17 CB 5E        	bit 3,(hl)
 350+ 8E19 20 14        	jr nz,4F
 351+ 8E1B 18 19        	jr 6F
 352+ 8E1D
 353+ 8E1D              ; Entidad_de_Tipo_1.
 354+ 8E1D
 355+ 8E1D CB 66        1 bit 4,(hl)
 356+ 8E1F 28 15        	jr z,6F
 357+ 8E21 18 10        	jr 5F
 358+ 8E23
 359+ 8E23              ; Entidad_de_Tipo_2.
 360+ 8E23
 361+ 8E23 CB 6E        2 bit 5,(hl)
 362+ 8E25 28 0F        	jr z,6F
 363+ 8E27 18 0A        	jr 5F
 364+ 8E29
 365+ 8E29              ; Entidad_de_Tipo_3.
 366+ 8E29
 367+ 8E29 CB 76        3 bit 6,(hl)
 368+ 8E2B 28 09        	jr z,6F
 369+ 8E2D 18 04        	jr 5F
 370+ 8E2F
 371+ 8E2F              ; Entidad_de_Tipo_4.
 372+ 8E2F
 373+ 8E2F CB 7E        4 bit 7,(hl)
 374+ 8E31 28 03        	jr z,6F
 375+ 8E33
 376+ 8E33              ; Esta entidad TIENE MOV_MASTICADOS.
 377+ 8E33
 378+ 8E33 AF           5 xor a
 379+ 8E34 3C           	inc a
 380+ 8E35 C9           	ret
 381+ 8E36
 382+ 8E36              ; Esta entidad NO TIENE MOV_MASTICADOS.
 383+ 8E36
 384+ 8E36 AF           6 xor a
 385+ 8E37 C9           	ret
 386+ 8E38
 387+ 8E38              ;	------------------------------------------------------------------------------------
 388+ 8E38              ;
 389+ 8E38              ;	12/01/24
 390+ 8E38              ;
 391+ 8E38              ;	INPUTS:	A contiene el (Tipo) de entidad.
 392+ 8E38              ;
 393+ 8E38              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 394+ 8E38              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 395+ 8E38
 396+ 8E38 CB 27        Calcula_salto_en_BC sla a
 397+ 8E3A D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 398+ 8E3C 4F           	ld c,a
 399+ 8E3D 06 00        	ld b,0
 400+ 8E3F C9           	ret
 401+ 8E40
 402+ 8E40              ; ------------------------------------------------------------------
 403+ 8E40              ;
 404+ 8E40              ;	19/1/24
 405+ 8E40              ;
 406+ 8E40              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 407+ 8E40              ;	Actualiza (Datos_de_entidad) con esa dirección.
 408+ 8E40
 409+ 8E40 A7           Situa_en_datos_de_definicion and a
 410+ 8E41 ED 4A        	adc hl,bc
 411+ 8E43 CD 98 8B     	call Extrae_address
 412+ 8E46 22 98 89         ld (Datos_de_entidad),hl
 413+ 8E49 C9           	ret
 414+ 8E4A
 415+ 8E4A              ; ------------------------------------------------------------------
 416+ 8E4A
 417+ 8E4A              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 418+ 8E4A              ; 	inc de
 419+ 8E4A              ; 	inc de
 420+ 8E4A              ; 	ex de,hl
 421+ 8E4A              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 422+ 8E4A              ; 	ret
 423+ 8E4A
 424+ 8E4A              ; ----------------------------------------------------------------------------------------------------------
 425+ 8E4A              ;
 426+ 8E4A              ;	31/1/24
 427+ 8E4A              ;
 428+ 8E4A              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 429+ 8E4A              ;	_ de entidad.
 430+ 8E4A              ;
 431+ 8E4A              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 432+ 8E4A              ;
 433+ 8E4A              ;
 434+ 8E4A              ;	MODIFICA: HL,DE y BC
 435+ 8E4A
 436+ 8E4A
 437+ 8E4A              Definicion_de_entidad_a_bandeja_DRAW
 438+ 8E4A
 439+ 8E4A 11 47 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 440+ 8E4D 01 03 00     	ld bc,3
 441+ 8E50 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 442+ 8E52              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 443+ 8E52 11 51 89     	ld de,Attr									; DE en (Attr).
 444+ 8E55 01 05 00     	ld bc,5
 445+ 8E58 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 446+ 8E5A              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 447+ 8E5A 11 5A 89     	ld de,Posicion_inicio
 448+ 8E5D 01 03 00     	ld bc,3
 449+ 8E60 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 450+ 8E62              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 451+ 8E62 11 66 89     	ld de,Puntero_de_almacen_de_mov_masticados
 452+ 8E65 01 02 00     	ld bc,2
 453+ 8E68 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 454+ 8E6A
 455+ 8E6A 11 70 89     	ld de,Frames_explosion
 456+ 8E6D 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 457+ 8E6F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 458+ 8E70
 459+ 8E70 C9           	ret
 460+ 8E71
 461+ 8E71              ; ----------------------------------------------------------------------------------------------------------
 462+ 8E71              ;
 463+ 8E71              ;	22/01/24
 464+ 8E71              ;
 465+ 8E71              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 466+ 8E71              ;
 467+ 8E71              ;	Las cajas contienen entidades iniciadas:
 468+ 8E71              ;
 469+ 8E71              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 470+ 8E71              ;
 471+ 8E71              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 472+ 8E71              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 473+ 8E71              ;
 474+ 8E71              ;	MODIFICA: HL,DE y BC
 475+ 8E71
 476+ 8E71 21 47 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 477+ 8E74 ED 5B 8C 89  	ld de,(Puntero_store_caja)
 478+ 8E78 7E           	ld a,(hl)
 479+ 8E79 12           	ld (de),a
 480+ 8E7A 13           	inc de 													; (Tipo).
 481+ 8E7B
 482+ 8E7B 21 4E 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 483+ 8E7E 01 02 00     	ld bc,2
 484+ 8E81 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 485+ 8E83              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 486+ 8E83 23           	inc hl
 487+ 8E84 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 488+ 8E85 12           	ld (de),a
 489+ 8E86 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 490+ 8E87
 491+ 8E87 21 5D 89     	ld hl,Impacto
 492+ 8E8A 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 493+ 8E8B 12           	ld (de),a
 494+ 8E8C 13           	inc de 													; (Impacto), volcado a la caja.
 495+ 8E8D              ;															; DE situado ahora en (Variables_de_borrado).
 496+ 8E8D 23           	inc hl
 497+ 8E8E 01 06 00     	ld bc,6
 498+ 8E91 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 499+ 8E93              ; 															; DE situado ahora en (Puntero_de_impresión).
 500+ 8E93 01 07 00     	ld bc,7
 501+ 8E96 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 502+ 8E98              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 503+ 8E98              ;															; HL apunta ahora a (Columnas).
 504+ 8E98 21 6F 89     	ld hl,Ctrl_2
 505+ 8E9B 7E           	ld a,(hl)
 506+ 8E9C 12           	ld (de),a 												; Volcamos (Ctrl_2).
 507+ 8E9D 13           	inc de
 508+ 8E9E
 509+ 8E9E C9           	ret
 510+ 8E9F
 511+ 8E9F              ;---------------------------------------------------------------------------------------------------------------
 512+ 8E9F              ;
 513+ 8E9F              ;	5/1/24
 514+ 8E9F              ;
 515+ 8E9F              ;	INICIALIZA (Numero_parcial_de_entidades).
 516+ 8E9F              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 517+ 8E9F              ;
 518+ 8E9F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 519+ 8E9F              ;
 520+ 8E9F              ;	(Numero_parcial_de_entidades)="7".
 521+ 8E9F              ;
 522+ 8E9F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 523+ 8E9F              ;
 524+ 8E9F              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 525+ 8E9F              ;
 526+ 8E9F              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 527+ 8E9F              ;	MODIFICA: A y B.
 528+ 8E9F              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 529+ 8E9F
 530+ 8E9F              Inicializa_Numero_parcial_de_entidades
 531+ 8E9F
 532+ 8E9F              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 533+ 8E9F
 534+ 8E9F 3A 92 89     	ld a,(Numero_de_entidades)
 535+ 8EA2 A7           	and a
 536+ 8EA3
 537+ 8EA3              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 538+ 8EA3              ;	jr z,$
 539+ 8EA3              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 540+ 8EA3
 541+ 8EA3 20 03        	jr nz,3F
 542+ 8EA5
 543+ 8EA5              ; ---------- ---------- ----------
 544+ 8EA5
 545+ 8EA5              ;! RESET para pruebas. Omitir esta línea en modo normal.
 546+ 8EA5              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 547+ 8EA5
 548+ 8EA5 CD EE 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 549+ 8EA8
 550+ 8EA8              ; ---------- ---------- ----------
 551+ 8EA8
 552+ 8EA8 3A 92 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 553+ 8EAB FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 554+ 8EAD 38 08        	jr c,1F
 555+ 8EAF
 556+ 8EAF              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 557+ 8EAF              ; Actualizamos variables.
 558+ 8EAF
 559+ 8EAF 3E 07        	ld a,7
 560+ 8EB1 32 93 89     	ld (Numero_parcial_de_entidades),a
 561+ 8EB4 47           	ld b,a
 562+ 8EB5 18 04        	jr 2F
 563+ 8EB7
 564+ 8EB7              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 565+ 8EB7              ; (Numero_de_entidades)="0".
 566+ 8EB7
 567+ 8EB7 32 93 89     1 ld (Numero_parcial_de_entidades),a
 568+ 8EBA 47           	ld b,a
 569+ 8EBB C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1704  8EBC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8EBC              ; ******************************************************************************************************************************************************************************************
   2+ 8EBC              ;
   3+ 8EBC              ; 26/06/23
   4+ 8EBC              ;
   5+ 8EBC              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8EBC
   7+ 8EBC              Draw
   8+ 8EBC
   9+ 8EBC CD A9 91     	call Prepara_draw
  10+ 8EBF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8EC0 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8EC1 28 05        	jr z,2F
  13+ 8EC3
  14+ 8EC3 3A 5C 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8EC6 18 0C        	jr 1F
  16+ 8EC8
  17+ 8EC8 2A 5A 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8ECB 22 4A 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8ECE CD 5D 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8ED1              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8ED1
  22+ 8ED1 CD 0A 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8ED4
  24+ 8ED4 3A 6A 89     1 ld a,(Ctrl_0)
  25+ 8ED7 CB 6F        	bit 5,a
  26+ 8ED9 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8EDB
  28+ 8EDB CD F3 8E     	call Comprueba_limite_horizontal
  29+ 8EDE CD 83 8F     	call Comprueba_limite_vertical
  30+ 8EE1
  31+ 8EE1              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8EE1              ; -----------------------
  33+ 8EE1              ; -----------------------
  34+ 8EE1              ; -----------------------
  35+ 8EE1
  36+ 8EE1 CD D9 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8EE4 CD 10 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8EE7 CD 6F 91     	call Define_rutina_de_impresion
  39+ 8EEA
  40+ 8EEA 3A 6A 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8EED CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8EEF 32 6A 89     	ld (Ctrl_0),a
  43+ 8EF2
  44+ 8EF2 C9           	ret
  45+ 8EF3
  46+ 8EF3              ; *******************************************************************************************************************************************************************************************
  47+ 8EF3              ;	21/01/23
  48+ 8EF3              ;
  49+ 8EF3              ; 	Comprueba_limite_horizontal.
  50+ 8EF3              ;
  51+ 8EF3              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8EF3              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8EF3              ;
  54+ 8EF3              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8EF3              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8EF3              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8EF3              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8EF3
  59+ 8EF3
  60+ 8EF3
  61+ 8EF3 3A 6A 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8EF6 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8EF8 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8EFA E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8EFC 32 6A 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8EFF 18 09            jr 6F
  67+ 8F01 CB 5F        1 bit 3,a
  68+ 8F03 28 0A            jr z,2F
  69+ 8F05 E6 F7            and $f7
  70+ 8F07 32 6A 89         ld (Ctrl_0),a
  71+ 8F0A CD 5D 90     6 call Inicializacion
  72+ 8F0D 18 5B            jr 5F
  73+ 8F0F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8F10
  75+ 8F10              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8F10              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8F10
  78+ 8F10 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8F11 2A 6C 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8F14 CD 9F 9E     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8F17 67           	ld h,a
  82+ 8F18 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8F19 CD 9F 9E     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8F1C 67           	ld h,a
  85+ 8F1D A7           	and a
  86+ 8F1E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8F20 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8F21 3A 5C 89     	ld a,(Cuad_objeto)
  89+ 8F24 FE 02        	cp 2
  90+ 8F26 38 1E        	jr c,3F
  91+ 8F28 28 1C        	jr z,3F
  92+ 8F2A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8F2B 28 23            jr z,7F
  94+ 8F2D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8F2F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8F31 E1           	pop hl
  97+ 8F32
  98+ 8F32              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8F32              ; _para indicar con E="2" en caso necesario.
 100+ 8F32
 101+ 8F32 E5               push hl
 102+ 8F33 C5               push bc
 103+ 8F34 CD 9F 9E     	call calcula_tercio
 104+ 8F37 FE 01        	cp 1
 105+ 8F39 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8F3B CD 6B 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8F3E 28 26            jr z,9F
 108+ 8F40 38 24            jr c,9F
 109+ 8F42 1E 00        11 ld e,0
 110+ 8F44 18 22            jr 8F
 111+ 8F46 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8F47 28 07        	jr z, 7F
 113+ 8F49 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8F4B 1E 00         	ld e,0
 115+ 8F4D E1           	pop hl
 116+ 8F4E 18 04        	jr 4F
 117+ 8F50 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8F52 18 15            jr 10F
 119+ 8F54
 120+ 8F54              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8F54              ; _para indicar con E="2" en caso necesario.
 122+ 8F54
 123+ 8F54 E5           4 push hl
 124+ 8F55 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8F56 CD 9F 9E     	call calcula_tercio
 126+ 8F59 FE 01        	cp 1
 127+ 8F5B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8F5D CD 6B 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8F60 28 04            jr z,9F
 130+ 8F62 30 02            jr nc,9F
 131+ 8F64 18 02        	jr 8F
 132+ 8F66 1E 02        9 ld e,2
 133+ 8F68 C1           8 pop bc
 134+ 8F69 E1           10 pop hl
 135+ 8F6A C9           5 ret
 136+ 8F6B
 137+ 8F6B              ; --------------------
 138+ 8F6B              ;
 139+ 8F6B              ; 25/08/22
 140+ 8F6B
 141+ 8F6B CD 9F 9E     Comprueba_centro call calcula_tercio
 142+ 8F6E 67               ld h,a
 143+ 8F6F 08           	ex af,af
 144+ 8F70 FE 02        	cp 2
 145+ 8F72 38 07        	jr c,1F
 146+ 8F74 28 05        	jr z,1F
 147+ 8F76 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8F79 18 03        	jr 2F
 149+ 8F7B 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8F7E 08           2 ex af,af
 151+ 8F7F A7               and a
 152+ 8F80 ED 42            sbc hl,bc
 153+ 8F82 C9               ret
 154+ 8F83
 155+ 8F83              ; *********************************************************************************************************************************************************************************************
 156+ 8F83              ;
 157+ 8F83              ;   16/8/22
 158+ 8F83              ;
 159+ 8F83              ;	Comprueba_limite_vertical
 160+ 8F83              ;
 161+ 8F83              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8F83              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8F83              ;
 164+ 8F83
 165+ 8F83 2A 4A 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8F86 7D           	ld a,l
 167+ 8F87 E6 1F        	and $1F
 168+ 8F89 57           	ld d,a
 169+ 8F8A 3A 6E 89     	ld a,(Limite_vertical)
 170+ 8F8D BA           	cp d 											; Límite - Posición.
 171+ 8F8E 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8F8F 3A 5C 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8F92 CB 47        	bit 0,a
 174+ 8F94 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8F96
 176+ 8F96              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8F96
 178+ 8F96 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8F97 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8F99
 181+ 8F99              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8F99              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8F99
 184+ 8F99 3A 4E 89         ld a,(Coordenada_X)
 185+ 8F9C 16 0F            ld d,Centro_izquierda
 186+ 8F9E A7               and a
 187+ 8F9F 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8FA0 28 1E            jr z,3F
 189+ 8FA2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8FA4              ;                                                    ; _salimos sin modificar nada.
 191+ 8FA4 18 0E            jr 2F
 192+ 8FA6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8FA7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8FA9
 195+ 8FA9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8FA9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8FA9
 198+ 8FA9 3A 4E 89         ld a,(Coordenada_X)
 199+ 8FAC 16 10            ld d,Centro_derecha
 200+ 8FAE A7               and a
 201+ 8FAF 92               sub d
 202+ 8FB0 28 0E            jr z,3F
 203+ 8FB2 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8FB4              ;                                                    ; _salimos sin modificar nada.
 205+ 8FB4 CB 43        2 bit 0,e
 206+ 8FB6 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8FB8 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8FB9 CD 4D 90         call Modificaccionne
 209+ 8FBC C1           	pop bc
 210+ 8FBD CD 5D 90         call Inicializacion
 211+ 8FC0 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8FC1
 213+ 8FC1              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8FC1
 215+ 8FC1 C5           4 push bc
 216+ 8FC2 01 49 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8FC5 0A           	ld a,(bc)
 218+ 8FC6 3D           	dec a
 219+ 8FC7 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8FC8 7D           	ld a,l
 221+ 8FC9 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8FCA CB 47        	bit 0,a
 223+ 8FCC 28 03        	jr z,5F
 224+ 8FCE 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8FCF 18 2E        	jr 7F
 226+ 8FD1
 227+ 8FD1              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8FD1
 229+ 8FD1 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8FD2 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8FD3 3A 6A 89     	ld a,(Ctrl_0)
 232+ 8FD6 CB 4F        	bit 1,a
 233+ 8FD8 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8FDA F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8FDB
 236+ 8FDB              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8FDB
 238+ 8FDB 1C               inc e
 239+ 8FDC 1D               dec e
 240+ 8FDD 20 07            jr nz,12F
 241+ 8FDF 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8FE0 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8FE1 22 4A 89     	ld (Posicion_actual),hl
 244+ 8FE4 18 44        13 jr 9F
 245+ 8FE6 CB 43        12 bit 0,e
 246+ 8FE8 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8FEA              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8FEA C1           	pop bc
 249+ 8FEB 18 D3        	jr 3B
 250+ 8FED 80           14 add b
 251+ 8FEE 6F               ld l,a
 252+ 8FEF 22 4A 89     	ld (Posicion_actual),hl
 253+ 8FF2 CD 4D 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8FF5 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8FF7 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8FF9 32 6A 89         ld (Ctrl_0),a
 257+ 8FFC F1           	pop af
 258+ 8FFD 18 2B        	jr 9F
 259+ 8FFF
 260+ 8FFF              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 8FFF
 262+ 8FFF F5           7 push af
 263+ 9000 3A 6A 89     	ld a,(Ctrl_0)
 264+ 9003 CB 47        	bit 0,a
 265+ 9005 20 1D        	jr nz,8F
 266+ 9007 F1           	pop af
 267+ 9008
 268+ 9008              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9008
 270+ 9008 1C           	inc e
 271+ 9009 1D               dec e
 272+ 900A 20 07            jr nz,10F
 273+ 900C 90           	sub b
 274+ 900D 6F               ld l,a
 275+ 900E 22 4A 89     	ld (Posicion_actual),hl
 276+ 9011 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9013              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9013 CB 43        10 bit 0,e
 279+ 9015 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9017              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9017 C1           	pop bc
 282+ 9018 18 A6        	jr 3B
 283+ 901A 90           16 sub b
 284+ 901B 6F               ld l,a
 285+ 901C 22 4A 89     	ld (Posicion_actual),hl
 286+ 901F CD 4D 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9022 18 06            jr 9F
 288+ 9024 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9026 32 6A 89         ld (Ctrl_0),a
 290+ 9029 F1           	pop af
 291+ 902A C1           9 pop bc
 292+ 902B 1E 00        	ld e,0
 293+ 902D CD 5D 90         call Inicializacion
 294+ 9030 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9031 08           	ex af,af
 296+ 9032 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9033 18 8B            jr 3B
 298+ 9035
 299+ 9035              ; --------------------
 300+ 9035
 301+ 9035 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9037 CD C4 91     1 call PreviousScan
 303+ 903A 10 FB            djnz 1B
 304+ 903C 22 4A 89     	ld (Posicion_actual),hl
 305+ 903F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9040 C9           	ret
 307+ 9041
 308+ 9041              ; --------------------
 309+ 9041
 310+ 9041 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9043 CD B5 91     1 call NextScan
 312+ 9046 10 FB            djnz 1B
 313+ 9048 22 4A 89     	ld (Posicion_actual),hl
 314+ 904B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 904C C9           	ret
 316+ 904D
 317+ 904D              ; --------------------
 318+ 904D              ;
 319+ 904D              ;	22/01/23
 320+ 904D              ;
 321+ 904D              ;	E="1". Hemos cambiado de cuadrante.
 322+ 904D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 904D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 904D
 325+ 904D
 326+ 904D              Modificaccionne
 327+ 904D
 328+ 904D 3A 5C 89     	ld a,(Cuad_objeto)
 329+ 9050 FE 02        	cp 2
 330+ 9052 CC 35 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9055 DC 35 90         call c,Modifica_Pos_actual
 332+ 9058 C8           	ret z
 333+ 9059 CD 41 90         call Modifica_Pos_actual2
 334+ 905C C9               ret
 335+ 905D
 336+ 905D              ; *************************************************************************************************************************************************************************************************
 337+ 905D              ;
 338+ 905D              ;	13/8/22
 339+ 905D              ;
 340+ 905D              ;	Inicializacion
 341+ 905D              ;
 342+ 905D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 905D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 905D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 905D              ;
 346+ 905D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 905D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 905D              ;	_ desaparece/aparece.
 349+ 905D
 350+ 905D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 905D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 905D              ;
 353+ 905D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 905D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 905D              ; 		   [E] ="0"
 356+ 905D
 357+ 905D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 905D
 359+ 905D CD 9F 9E     Inicializacion call calcula_tercio
 360+ 9060 28 36        	jr z,primit
 361+ 9062 E6 02        	and 2
 362+ 9064 20 07        	jr nz,segmit
 363+ 9066 7D           	ld a,l
 364+ 9067 FE 7F        	cp $7f
 365+ 9069 38 2D        	jr c,primit
 366+ 906B 28 2B        	jr z,primit
 367+ 906D CD D3 90     segmit call column
 368+ 9070 38 13        	jr c,tercuad
 369+ 9072 3E 04        cuarcuad ld a,4
 370+ 9074 32 5C 89     	ld (Cuad_objeto),a
 371+ 9077 21 20 48     	ld hl,$4820
 372+ 907A 22 6C 89     	ld (Limite_horizontal),hl
 373+ 907D 21 6E 89     	ld hl,Limite_vertical
 374+ 9080 36 0D        	ld (hl),$0d
 375+ 9082 08           	ex af,af
 376+ 9083 18 3C        	jr 1F
 377+ 9085              tercuad
 378+ 9085 3E 03        	ld a,3
 379+ 9087 32 5C 89     	ld (Cuad_objeto),a
 380+ 908A 21 20 48     	ld hl,$4820
 381+ 908D 22 6C 89     	ld (Limite_horizontal),hl
 382+ 9090 21 6E 89     	ld hl,Limite_vertical
 383+ 9093 36 12        	ld (hl),$12
 384+ 9095 08           	ex af,af
 385+ 9096 18 29        	jr 1F
 386+ 9098 CD D3 90     primit call column
 387+ 909B 38 13        	jr c, primcuad
 388+ 909D              segcuad
 389+ 909D 3E 02        	ld a,2
 390+ 909F 32 5C 89     	ld (Cuad_objeto),a
 391+ 90A2 21 C0 4F     	ld hl,$4fc0
 392+ 90A5 22 6C 89     	ld (Limite_horizontal),hl
 393+ 90A8 21 6E 89     	ld hl,Limite_vertical
 394+ 90AB 36 0D        	ld (hl),$0d
 395+ 90AD 08           	ex af,af
 396+ 90AE 18 11        	jr 1F
 397+ 90B0              primcuad
 398+ 90B0 3E 01        	ld a,1
 399+ 90B2 32 5C 89     	ld (Cuad_objeto),a
 400+ 90B5 21 C0 4F     	ld hl,$4fc0
 401+ 90B8 22 6C 89     	ld (Limite_horizontal),hl
 402+ 90BB 21 6E 89     	ld hl,Limite_vertical
 403+ 90BE 36 12        	ld (hl),$12
 404+ 90C0 08           	ex af,af
 405+ 90C1
 406+ 90C1 C5           1 push bc
 407+ 90C2 E5           	push hl
 408+ 90C3 D5           	push de
 409+ 90C4
 410+ 90C4 2A 4A 89     	ld hl,(Posicion_actual)
 411+ 90C7 CD BD 9E     	call Genera_coordenadas
 412+ 90CA
 413+ 90CA D1           	pop de
 414+ 90CB E1           	pop hl
 415+ 90CC C1           	pop bc
 416+ 90CD
 417+ 90CD 21 6A 89     	ld hl,Ctrl_0
 418+ 90D0 CB EE        	set 5,(hl)
 419+ 90D2 C9           	ret
 420+ 90D3
 421+ 90D3              ; ------------------------------------------------------------------------------------------------------------------
 422+ 90D3
 423+ 90D3              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 90D3              ;
 425+ 90D3              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 90D3
 427+ 90D3 7D           column ld a,l
 428+ 90D4 E6 1F        	and $1f
 429+ 90D6 FE 10         	cp $10
 430+ 90D8 C9            	ret
 431+ 90D9
 432+ 90D9              ; --------------------------------------------------------------------------------------------------------------------
 433+ 90D9              ;
 434+ 90D9              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 90D9              ;
 436+ 90D9              ; 14/12/22
 437+ 90D9              ;
 438+ 90D9              ;	Modifica: A y BC.
 439+ 90D9
 440+ 90D9 3A 5C 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 90DC E6 01        	and 1
 442+ 90DE 28 17        	jr z,1F
 443+ 90E0
 444+ 90E0              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 90E0
 446+ 90E0 3A 4E 89     	ld a,(Coordenada_X)
 447+ 90E3 47           	ld b,a
 448+ 90E4 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 90E5 79           	ld a,c
 450+ 90E6 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 90E7 38 08        	jr c,2F
 452+ 90E9 47           	ld b,a
 453+ 90EA 79           	ld a,c
 454+ 90EB 90           	sub b
 455+ 90EC 32 6B 89     	ld (Columnas),a
 456+ 90EF 18 1B        	jr 4F
 457+ 90F1 79           2 ld a,c
 458+ 90F2 32 6B 89     	ld (Columnas),a
 459+ 90F5 18 15        	jr 4F
 460+ 90F7
 461+ 90F7              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 90F7
 463+ 90F7 3A 4E 89     1 ld a,(Coordenada_X)
 464+ 90FA 81           	add c
 465+ 90FB 3D           	dec a
 466+ 90FC D6 1F        	sub $1f
 467+ 90FE 38 08        	jr c,3F
 468+ 9100 47           	ld b,a
 469+ 9101 79           	ld a,c
 470+ 9102 90           	sub b
 471+ 9103 32 6B 89     	ld (Columnas),a
 472+ 9106 18 04        	jr 4F
 473+ 9108 79           3 ld a,c
 474+ 9109 32 6B 89     	ld (Columnas),a
 475+ 910C D9           4 exx
 476+ 910D 4F           	ld c,a
 477+ 910E D9           	exx
 478+ 910F C9            ret
 479+ 9110
 480+ 9110              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9110              ;
 482+ 9110              ;   19/7/23
 483+ 9110              ;
 484+ 9110              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9110              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9110              ;
 487+ 9110              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9110              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9110              ;
 490+ 9110              ;	DESTRUYE: HL,B Y A.
 491+ 9110
 492+ 9110 3A 5C 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9113 FE 02        	cp 2
 494+ 9115 38 18        	jr c,1F
 495+ 9117 28 16        	jr z,1F
 496+ 9119 E6 01        	and 1
 497+ 911B 28 0D        	jr z,3F
 498+ 911D
 499+ 911D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 911D
 501+ 911D CD 63 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9120
 503+ 9120 7D           9 ld a,l
 504+ 9121 E6 1F        	and $1f
 505+ 9123 28 2A        	jr z,7F
 506+ 9125 2B           	dec hl
 507+ 9126 10 F8        	djnz 9B
 508+ 9128 18 25        	jr 7F
 509+ 912A
 510+ 912A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 912A
 512+ 912A 2A 4A 89     3 ld hl,(Posicion_actual)
 513+ 912D 18 20        	jr 7F
 514+ 912F
 515+ 912F 28 14        1 jr z,2F
 516+ 9131
 517+ 9131              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9131
 519+ 9131 CD 63 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9134
 521+ 9134 7D           4 ld a,l
 522+ 9135 E6 1F        	and $1f
 523+ 9137 28 03        	jr z,6F
 524+ 9139 2B           	dec hl
 525+ 913A 10 F8        	djnz 4B
 526+ 913C 06 0F        6 ld b,15
 527+ 913E CD C4 91     5 call PreviousScan
 528+ 9141 10 FB        	djnz 5B
 529+ 9143 18 0A        	jr 7F
 530+ 9145
 531+ 9145              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9145
 533+ 9145 CD 63 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9148 06 0F        	ld b,15
 535+ 914A CD C4 91     8 call PreviousScan
 536+ 914D 10 FB        	djnz 8B
 537+ 914F
 538+ 914F E5           7 push hl
 539+ 9150 DD E1        	pop ix
 540+ 9152
 541+ 9152 2A 4C 89     	ld hl,(Puntero_objeto)
 542+ 9155 E5           	push hl
 543+ 9156 FD E1        	pop iy
 544+ 9158
 545+ 9158              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9158
 547+ 9158 3A 6A 89     	ld a,(Ctrl_0)
 548+ 915B CB 77        	bit 6,a
 549+ 915D C8           	ret z
 550+ 915E
 551+ 915E              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 915E              ; _ entidad / Amadeus´.
 553+ 915E
 554+ 915E DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 9162
 556+ 9162 C9           	ret
 557+ 9163
 558+ 9163              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9163              ;
 560+ 9163              ;	2/1/23
 561+ 9163              ;
 562+ 9163              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9163              ;
 564+ 9163              ;	Tras esta rutina tenemos:
 565+ 9163              ;
 566+ 9163              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9163              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9163              ;
 569+ 9163              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9163
 571+ 9163 2A 4A 89     Operandos ld hl,(Posicion_actual)
 572+ 9166 3A 6B 89     	ld a,(Columnas)
 573+ 9169 3D           	dec a
 574+ 916A 20 01        	jr nz,1F
 575+ 916C 3C           	inc a
 576+ 916D 47           1 ld b,a
 577+ 916E C9           	ret
 578+ 916F
 579+ 916F              ; --------------------------------------------------------------------------------------------------------------------
 580+ 916F              ;
 581+ 916F              ;	3/1/23
 582+ 916F              ;
 583+ 916F              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 916F              ;
 585+ 916F              ;	Destruye: A,B,HL y DE.
 586+ 916F
 587+ 916F              Define_rutina_de_impresion
 588+ 916F
 589+ 916F 3A 49 89     	ld a,(Columns)
 590+ 9172 47           	ld b,a
 591+ 9173 3A 6B 89     	ld a,(Columnas)
 592+ 9176 B8           	cp b
 593+ 9177 20 0D        	jr nz,2f
 594+ 9179
 595+ 9179              ;	La entidad se imprime entera.
 596+ 9179
 597+ 9179 21 98 92     	ld hl, Indice_entidades_completas
 598+ 917C E6 01        	and 1
 599+ 917E 28 02        	jr z,1F
 600+ 9180
 601+ 9180 23           	inc hl
 602+ 9181 23           	inc hl
 603+ 9182
 604+ 9182 CD 98 8B     1 call Extrae_address
 605+ 9185 C9           	ret		;	ret
 606+ 9186
 607+ 9186              ;	La entidad no se imprime entera en pantalla.
 608+ 9186
 609+ 9186 3A 5C 89     2 ld a,(Cuad_objeto)
 610+ 9189 E6 01        	and 1
 611+ 918B 28 17        	jr z,3F
 612+ 918D
 613+ 918D              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 918D
 615+ 918D 21 9C 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9190 3A 49 89     4 ld a,(Columns)
 617+ 9193 E6 01        	and 1
 618+ 9195 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 9197
 620+ 9197 23           	inc hl
 621+ 9198 23           	inc hl
 622+ 9199
 623+ 9199 3A 6B 89     	ld a,(Columnas)
 624+ 919C E6 01        	and 1
 625+ 919E 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 91A0
 627+ 91A0 23           	inc hl
 628+ 91A1 23           	inc hl
 629+ 91A2
 630+ 91A2 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 91A4
 632+ 91A4 21 A2 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 91A7 18 E7        	jr 4B
 634+ 91A9
 635+ 91A9              ; --------------------------------------------------------------------------------------------------------------------
 636+ 91A9              ;
 637+ 91A9              ;	Prepara_draw
 638+ 91A9              ;
 639+ 91A9              ;	Es una rutina de carga.
 640+ 91A9              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 91A9              ;
 642+ 91A9              ;	FUNCIONAMIENTO:
 643+ 91A9              ;
 644+ 91A9              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 91A9              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 91A9              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 91A9              ;
 648+ 91A9              ;	DESTRUYE:
 649+ 91A9              ;
 650+ 91A9              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 91A9
 652+ 91A9 21 48 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 91AC 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 91AD 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 91AE 4E           	ld c,(hl)
 656+ 91AF 2A 4A 89     	ld hl,(Posicion_actual)
 657+ 91B2 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 91B4 C9           	ret
 659+ 91B5
 660+ 91B5              ;----------------------------------------------------------------------------------------------------------------
 661+ 91B5              ;
 662+ 91B5              ;	5/08/22
 663+ 91B5              ;
 664+ 91B5              ;   NextScan.
 665+ 91B5              ;
 666+ 91B5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 91B5              ;
 668+ 91B5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 91B5              ;
 670+ 91B5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 91B5              ;
 672+ 91B5              ;       DESTRUIDOS: AF y HL !!!
 673+ 91B5              ;
 674+ 91B5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 91B5              ;
 676+ 91B5
 677+ 91B5 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 91B6 7C               ld a,h
 679+ 91B7 E6 07            and 7
 680+ 91B9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 91BA
 682+ 91BA 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 91BB C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 91BD 6F               ld l,a
 685+ 91BE D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 91BF
 687+ 91BF 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 91C0 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 91C2 67               ld h,a
 690+ 91C3 C9               ret
 691+ 91C4
 692+ 91C4              ;----------------------------------------------------------------------------------------------------------------
 693+ 91C4              ;
 694+ 91C4              ;	5/08/22
 695+ 91C4              ;
 696+ 91C4              ;   PreviousScan.
 697+ 91C4              ;
 698+ 91C4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 91C4              ;
 700+ 91C4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 91C4              ;
 702+ 91C4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 91C4              ;
 704+ 91C4              ;       DESTRUIDOS: AF y HL !!!
 705+ 91C4              ;
 706+ 91C4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 91C4              ;
 708+ 91C4
 709+ 91C4 7C           PreviousScan ld a,h
 710+ 91C5 25               dec h               ; Dec H.
 711+ 91C6 E6 07            and 7
 712+ 91C8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 91C9
 714+ 91C9 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 91CA D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 91CC 6F               ld l,a
 717+ 91CD D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 91CE
 719+ 91CE 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 91CF C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 91D1 67               ld h,a
 722+ 91D2 C9               ret
 723+ 91D3
 724+ 91D3              ; -----------------------------------------------------------------------------------
 725+ 91D3              ;
 726+ 91D3              ;	31/7/23
 727+ 91D3              ;
 728+ 91D3              ;	Rutina principal de pintado de entidades.
 729+ 91D3              ;	Extrae la foto del frame, (entidades).
 730+ 91D3
 731+ 91D3              Extrae_foto_entidades
 732+ 91D3
 733+ 91D3 21 01 80     	ld hl,Album_de_fotos+1
 734+ 91D6 7E           	ld a,(hl)
 735+ 91D7 A7           	and a
 736+ 91D8 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 91D9
 738+ 91D9              ;	No hay datos, (entidades para pintar en este frame).
 739+ 91D9
 740+ 91D9 3A 95 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 91DC A7           	and a
 742+ 91DD C8           	ret z
 743+ 91DE
 744+ 91DE              ; -----------------------------------
 745+ 91DE
 746+ 91DE ED 73 9A 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 91E2 31 00 80     	ld sp,Album_de_fotos
 748+ 91E5
 749+ 91E5 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 91E7 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 91E8 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 91E9
 753+ 91E9 ED 73 9C 89  	ld (Stack_2),sp
 754+ 91ED ED 7B 9A 89  	ld sp,(Stack)
 755+ 91F1
 756+ 91F1              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 91F1
 758+ 91F1 3E CD        	ld a,$cd
 759+ 91F3 32 FB 91     	ld (Imprime),a
 760+ 91F6 EB           	ex de,hl
 761+ 91F7 22 FC 91     	ld (Imprime+1),hl
 762+ 91FA EB           	ex de,hl
 763+ 91FB
 764+ 91FB              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 91FB
 766+ 91FB 00 00 00     Imprime db 0,0,0
 767+ 91FE
 768+ 91FE ED 73 9A 89  	ld (Stack),sp
 769+ 9202
 770+ 9202 3A 95 89     	ld a,(Numero_de_malotes)
 771+ 9205 3D           	dec a
 772+ 9206 28 09        	jr z,1F
 773+ 9208 32 95 89      	ld (Numero_de_malotes),a
 774+ 920B
 775+ 920B ED 7B 9C 89  	ld sp,(Stack_2)
 776+ 920F 18 D4        	jr 2B
 777+ 9211
 778+ 9211 AF           1 xor a
 779+ 9212 32 9C 89     	ld (Stack_2),a
 780+ 9215
 781+ 9215 C9           	ret
 782+ 9216
 783+ 9216              ; -----------------------------------------------------------------------------------
 784+ 9216              ;
 785+ 9216              ;	28/2/23
 786+ 9216              ;
 787+ 9216              ;	Pinta los disparos generados.
 788+ 9216
 789+ 9216              Extrae_foto_disparos
 790+ 9216
 791+ 9216 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9219 7E               ld a,(hl)
 793+ 921A A7               and a
 794+ 921B C8               ret z
 795+ 921C
 796+ 921C 3A AA 89     	ld a,(Numero_de_disparotes)
 797+ 921F A7           	and a
 798+ 9220 C8           	ret z
 799+ 9221 ED 73 9A 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9225 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 9228
 802+ 9228 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 922A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 922B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 922C
 806+ 922C ED 73 9C 89  	ld (Stack_2),sp
 807+ 9230 ED 7B 9A 89  	ld sp,(Stack)
 808+ 9234
 809+ 9234              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9234
 811+ 9234 3E CD        	ld a,$cd
 812+ 9236 32 3E 92     	ld (Imprime2),a
 813+ 9239 EB           	ex de,hl
 814+ 923A 22 3F 92     	ld (Imprime2+1),hl
 815+ 923D EB           	ex de,hl
 816+ 923E
 817+ 923E              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 923E
 819+ 923E 00 00 00     Imprime2 db 0,0,0
 820+ 9241
 821+ 9241 3A AA 89     	ld a,(Numero_de_disparotes)
 822+ 9244 3D           	dec a
 823+ 9245 28 09        	jr z,1F
 824+ 9247 32 AA 89      	ld (Numero_de_disparotes),a
 825+ 924A
 826+ 924A ED 7B 9C 89  	ld sp,(Stack_2)
 827+ 924E 18 D8        	jr 2B
 828+ 9250
 829+ 9250 AF           1 xor a
 830+ 9251 32 9C 89     	ld (Stack_2),a
 831+ 9254 C9           	ret
 832+ 9255
 833+ 9255              ; -----------------------------------------------------------------------------------
 834+ 9255              ;
 835+ 9255              ;	4/9/23
 836+ 9255              ;
 837+ 9255              ;	Rutina principal de pintado de Amadeus.
 838+ 9255              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9255
 840+ 9255 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9258 7E           	ld a,(hl)
 842+ 9259 A7           	and a
 843+ 925A C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 925B
 845+ 925B 3A 95 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 925E A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 925F C8           	ret z
 848+ 9260
 849+ 9260              ; -----------------------------------
 850+ 9260
 851+ 9260 ED 73 9A 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9264 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 9267
 854+ 9267 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9269 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 926A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 926B
 858+ 926B ED 73 9C 89  	ld (Stack_2),sp
 859+ 926F ED 7B 9A 89  	ld sp,(Stack)
 860+ 9273
 861+ 9273              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9273
 863+ 9273 3E CD        	ld a,$cd
 864+ 9275 32 7D 92     	ld (Imprime_Amadeus),a
 865+ 9278 EB           	ex de,hl
 866+ 9279 22 7E 92     	ld (Imprime_Amadeus+1),hl
 867+ 927C EB           	ex de,hl
 868+ 927D
 869+ 927D              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 927D
 871+ 927D 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 9280
 873+ 9280 ED 73 9A 89  	ld (Stack),sp
 874+ 9284
 875+ 9284 3A 95 89     	ld a,(Numero_de_malotes)
 876+ 9287 3D           	dec a
 877+ 9288 28 09        	jr z,1F
 878+ 928A 32 95 89      	ld (Numero_de_malotes),a
 879+ 928D
 880+ 928D ED 7B 9C 89  	ld sp,(Stack_2)
 881+ 9291 18 D4        	jr 2B
 882+ 9293
 883+ 9293 AF           1 xor a
 884+ 9294 32 9C 89     	ld (Stack_2),a
 885+ 9297
 886+ 9297 C9           	ret
# file closed: Draw_XOR.asm
1705  9298              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9298              ;   índices de Rutinas de impresión.
   2+ 9298
   3+ 9298 A8 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 929A D5 92            defw Pinta_Amadeus_3x2
   5+ 929C
   6+ 929C 2B 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 929E CB 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92A0 7F 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92A2
  10+ 92A2 55 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92A4 59 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92A6 0D 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92A8
  14+ 92A8
  15+ 92A8              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92A8              ;
  17+ 92A8              ;   12/12/22
  18+ 92A8              ;
  19+ 92A8              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 92A8              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92A8              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 92A8              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 92A8              ;
  24+ 92A8              ;   Modifica: DE y HL.
  25+ 92A8
  26+ 92A8 ED 73 9A 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 92AC FD F9        	ld sp,iy
  28+ 92AE 06 10            ld b,16
  29+ 92B0 D1           1 pop de
  30+ 92B1 7B               ld a,e
  31+ 92B2 AE               xor (hl)
  32+ 92B3 77           	ld (hl),a
  33+ 92B4 23           	inc hl
  34+ 92B5 7A               ld a,d
  35+ 92B6 AE               xor (hl)
  36+ 92B7 77           	ld (hl),a
  37+ 92B8 2B           	dec hl
  38+ 92B9 24           	inc h
  39+ 92BA 7C               ld a,h
  40+ 92BB E6 07            and 7
  41+ 92BD 20 0A            jr nz,2F
  42+ 92BF 7D               ld a,l
  43+ 92C0 C6 20            add a,$20
  44+ 92C2 6F               ld l,a
  45+ 92C3 38 04            jr c,2F
  46+ 92C5 7C               ld a,h
  47+ 92C6 D6 08            sub 8
  48+ 92C8 67               ld h,a
  49+ 92C9 7C           2 ld a,h
  50+ 92CA FE 58            cp $58
  51+ 92CC 28 02            jr z,3F
  52+ 92CE 10 E0            djnz 1B
  53+ 92D0 ED 7B 9A 89  3 ld sp,(Stack)
  54+ 92D4 C9           	ret
  55+ 92D5
  56+ 92D5 ED 73 9A 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 92D9 FD F9        	ld sp,iy
  58+ 92DB 06 08            ld b,8
  59+ 92DD D1           1 pop de
  60+ 92DE 7B               ld a,e
  61+ 92DF AE               xor (hl)
  62+ 92E0 77           	ld (hl),a
  63+ 92E1 23           	inc hl
  64+ 92E2 7A               ld a,d
  65+ 92E3 AE               xor (hl)
  66+ 92E4 77           	ld (hl),a
  67+ 92E5 23           	inc hl
  68+ 92E6 D1           	pop de
  69+ 92E7 7B               ld a,e
  70+ 92E8 AE               xor (hl)
  71+ 92E9 77           	ld (hl),a
  72+ 92EA 2B           	dec hl
  73+ 92EB 2B           	dec hl
  74+ 92EC 24           	inc h
  75+ 92ED 7C               ld a,h
  76+ 92EE E6 07            and 7
  77+ 92F0 20 0A            jr nz,2F
  78+ 92F2 7D               ld a,l
  79+ 92F3 C6 20            add a,$20
  80+ 92F5 6F               ld l,a
  81+ 92F6 38 04            jr c,2F
  82+ 92F8 7C               ld a,h
  83+ 92F9 D6 08            sub 8
  84+ 92FB 67               ld h,a
  85+ 92FC 7C           2 ld a,h
  86+ 92FD FE 58            cp $58
  87+ 92FF 28 25            jr z,4F
  88+ 9301 7A               ld a,d
  89+ 9302 AE               xor (hl)
  90+ 9303 77               ld (hl),a
  91+ 9304 D1           	pop de
  92+ 9305 23           	inc hl
  93+ 9306 7B               ld a,e
  94+ 9307 AE               xor (hl)
  95+ 9308 77           	ld (hl),a
  96+ 9309 23           	inc hl
  97+ 930A 7A               ld a,d
  98+ 930B AE               xor (hl)
  99+ 930C 77           	ld (hl),a
 100+ 930D 2B           	dec hl
 101+ 930E 2B           	dec hl
 102+ 930F 24           	inc h
 103+ 9310 7C               ld a,h
 104+ 9311 E6 07            and 7
 105+ 9313 20 0A            jr nz,3F
 106+ 9315 7D               ld a,l
 107+ 9316 C6 20            add a,$20
 108+ 9318 6F               ld l,a
 109+ 9319 38 04            jr c,3F
 110+ 931B 7C               ld a,h
 111+ 931C D6 08            sub 8
 112+ 931E 67               ld h,a
 113+ 931F 7C           3 ld a,h
 114+ 9320 FE 58            cp $58
 115+ 9322 28 02            jr z,4F
 116+ 9324 10 B7            djnz 1B
 117+ 9326 ED 7B 9A 89  4 ld sp,(Stack)
 118+ 932A C9           	ret
 119+ 932B
 120+ 932B              ; ---------------------------------------------------
 121+ 932B
 122+ 932B ED 73 9A 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 932F FD F9        	ld sp,iy
 124+ 9331
 125+ 9331              ; >>>
 126+ 9331
 127+ 9331 06 10            ld b,16
 128+ 9333 D1           1 pop de
 129+ 9334 7A           	ld a,d
 130+ 9335 AE           	xor (hl)
 131+ 9336 77           	ld (hl),a
 132+ 9337 24           	inc h
 133+ 9338 7C               ld a,h
 134+ 9339 E6 07            and 7
 135+ 933B 20 0C            jr nz,2F
 136+ 933D 7D               ld a,l
 137+ 933E C6 20            add a,$20
 138+ 9340 6F               ld l,a
 139+ 9341 38 06            jr c,2F
 140+ 9343 7C               ld a,h
 141+ 9344 D6 08            sub 8
 142+ 9346 67               ld h,a
 143+ 9347 18 00            jr 2F
 144+ 9349 7C           2 ld a,h
 145+ 934A FE 58            cp $58
 146+ 934C 28 02            jr z,3F
 147+ 934E 10 E3            djnz 1B
 148+ 9350 ED 7B 9A 89  3 ld sp,(Stack)
 149+ 9354 C9           	ret
 150+ 9355
 151+ 9355 ED 73 9A 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9359 FD F9        	ld sp,iy
 153+ 935B
 154+ 935B              ; >>>
 155+ 935B
 156+ 935B 06 10            ld b,16
 157+ 935D D1           1 pop de
 158+ 935E 7B           	ld a,e
 159+ 935F AE           	xor (hl)
 160+ 9360 77           	ld (hl),a
 161+ 9361 24           	inc h
 162+ 9362 7C               ld a,h
 163+ 9363 E6 07            and 7
 164+ 9365 20 0C            jr nz,2F
 165+ 9367 7D               ld a,l
 166+ 9368 C6 20            add a,$20
 167+ 936A 6F               ld l,a
 168+ 936B 38 06            jr c,2F
 169+ 936D 7C               ld a,h
 170+ 936E D6 08            sub 8
 171+ 9370 67               ld h,a
 172+ 9371 18 00            jr 2F
 173+ 9373 7C           2 ld a,h
 174+ 9374 FE 58            cp $58
 175+ 9376 28 02            jr z,3F
 176+ 9378 10 E3            djnz 1B
 177+ 937A ED 7B 9A 89  3 ld sp,(Stack)
 178+ 937E C9           	ret
 179+ 937F
 180+ 937F              ; ---------------------------------------------------
 181+ 937F
 182+ 937F ED 73 9A 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9383 FD F9        	ld sp,iy
 184+ 9385 06 08            ld b,8
 185+ 9387 D1           1 pop de
 186+ 9388 7A           	ld a,d
 187+ 9389 AE           	xor (hl)
 188+ 938A 77           	ld (hl),a
 189+ 938B 23           	inc hl
 190+ 938C D1           	pop de
 191+ 938D 7B           	ld a,e
 192+ 938E AE           	xor (hl)
 193+ 938F 77           	ld (hl),a
 194+ 9390 2B           	dec hl
 195+ 9391 24            	inc h
 196+ 9392 7C               ld a,h
 197+ 9393 E6 07            and 7
 198+ 9395 20 0A            jr nz,2F
 199+ 9397 7D               ld a,l
 200+ 9398 C6 20            add a,$20
 201+ 939A 6F               ld l,a
 202+ 939B 38 04            jr c,2F
 203+ 939D 7C               ld a,h
 204+ 939E D6 08            sub 8
 205+ 93A0 67               ld h,a
 206+ 93A1 7C           2 ld a,h
 207+ 93A2 FE 58            cp $58
 208+ 93A4 28 20            jr z,4F
 209+ 93A6 D1               pop de
 210+ 93A7 7B           	ld a,e
 211+ 93A8 AE           	xor (hl)
 212+ 93A9 77           	ld (hl),a
 213+ 93AA 23           	inc hl
 214+ 93AB 7A           	ld a,d
 215+ 93AC AE           	xor (hl)
 216+ 93AD 77           	ld (hl),a
 217+ 93AE 2B           	dec hl
 218+ 93AF 24           	inc h
 219+ 93B0 7C               ld a,h
 220+ 93B1 E6 07            and 7
 221+ 93B3 20 0A            jr nz,3F
 222+ 93B5 7D               ld a,l
 223+ 93B6 C6 20            add a,$20
 224+ 93B8 6F               ld l,a
 225+ 93B9 38 04            jr c,3F
 226+ 93BB 7C               ld a,h
 227+ 93BC D6 08            sub 8
 228+ 93BE 67               ld h,a
 229+ 93BF 7C           3 ld a,h
 230+ 93C0 FE 58            cp $58
 231+ 93C2 28 02            jr z,4F
 232+ 93C4 10 C1            djnz 1B
 233+ 93C6 ED 7B 9A 89  4 ld sp,(Stack)
 234+ 93CA C9           	ret
 235+ 93CB
 236+ 93CB ED 73 9A 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 93CF FD F9        	ld sp,iy
 238+ 93D1 06 08            ld b,8
 239+ 93D3 D1           1 pop de
 240+ 93D4 D1           	pop de
 241+ 93D5 7B           	ld a,e
 242+ 93D6 AE           	xor (hl)
 243+ 93D7 77           	ld (hl),a
 244+ 93D8 24            	inc h
 245+ 93D9 7C               ld a,h
 246+ 93DA E6 07            and 7
 247+ 93DC 20 0A            jr nz,2F
 248+ 93DE 7D               ld a,l
 249+ 93DF C6 20            add a,$20
 250+ 93E1 6F               ld l,a
 251+ 93E2 38 04            jr c,2F
 252+ 93E4 7C               ld a,h
 253+ 93E5 D6 08            sub 8
 254+ 93E7 67               ld h,a
 255+ 93E8 7C           2 ld a,h
 256+ 93E9 FE 58            cp $58
 257+ 93EB 28 1B            jr z,4F
 258+ 93ED D1               pop de
 259+ 93EE 7A           	ld a,d
 260+ 93EF AE           	xor (hl)
 261+ 93F0 77           	ld (hl),a
 262+ 93F1 24           	inc h
 263+ 93F2 7C               ld a,h
 264+ 93F3 E6 07            and 7
 265+ 93F5 20 0A            jr nz,3F
 266+ 93F7 7D               ld a,l
 267+ 93F8 C6 20            add a,$20
 268+ 93FA 6F               ld l,a
 269+ 93FB 38 04            jr c,3F
 270+ 93FD 7C               ld a,h
 271+ 93FE D6 08            sub 8
 272+ 9400 67               ld h,a
 273+ 9401 7C           3 ld a,h
 274+ 9402 FE 58            cp $58
 275+ 9404 28 02            jr z,4F
 276+ 9406 10 CB            djnz 1B
 277+ 9408 ED 7B 9A 89  4 ld sp,(Stack)
 278+ 940C C9           	ret
 279+ 940D
 280+ 940D ED 73 9A 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9411 FD F9        	ld sp,iy
 282+ 9413 06 08            ld b,8
 283+ 9415 D1           1 pop de
 284+ 9416 7B           	ld a,e
 285+ 9417 AE           	xor (hl)
 286+ 9418 77           	ld (hl),a
 287+ 9419 23           	inc hl
 288+ 941A 7A           	ld a,d
 289+ 941B AE           	xor (hl)
 290+ 941C 77           	ld (hl),a
 291+ 941D 2B           	dec hl
 292+ 941E 24             	inc h
 293+ 941F 7C               ld a,h
 294+ 9420 E6 07            and 7
 295+ 9422 20 0A            jr nz,2F
 296+ 9424 7D               ld a,l
 297+ 9425 C6 20            add a,$20
 298+ 9427 6F               ld l,a
 299+ 9428 38 04            jr c,2F
 300+ 942A 7C               ld a,h
 301+ 942B D6 08            sub 8
 302+ 942D 67               ld h,a
 303+ 942E 7C           2 ld a,h
 304+ 942F FE 58            cp $58
 305+ 9431 28 21            jr z,4F
 306+ 9433 D1               pop de
 307+ 9434 7A           	ld a,d
 308+ 9435 AE           	xor (hl)
 309+ 9436 77           	ld (hl),a
 310+ 9437 23           	inc hl
 311+ 9438 D1               pop de
 312+ 9439 7B           	ld a,e
 313+ 943A AE           	xor (hl)
 314+ 943B 77           	ld (hl),a
 315+ 943C 2B           	dec hl
 316+ 943D 24           	inc h
 317+ 943E 7C               ld a,h
 318+ 943F E6 07            and 7
 319+ 9441 20 0A            jr nz,3F
 320+ 9443 7D               ld a,l
 321+ 9444 C6 20            add a,$20
 322+ 9446 6F               ld l,a
 323+ 9447 38 04            jr c,3F
 324+ 9449 7C               ld a,h
 325+ 944A D6 08            sub 8
 326+ 944C 67               ld h,a
 327+ 944D 7C           3 ld a,h
 328+ 944E FE 58            cp $58
 329+ 9450 28 02            jr z,4F
 330+ 9452 10 C1            djnz 1B
 331+ 9454 ED 7B 9A 89  4 ld sp,(Stack)
 332+ 9458 C9           	ret
 333+ 9459
 334+ 9459 ED 73 9A 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 945D FD F9        	ld sp,iy
 336+ 945F 06 08            ld b,8
 337+ 9461 D1           1 pop de
 338+ 9462 7B           	ld a,e
 339+ 9463 AE           	xor (hl)
 340+ 9464 77           	ld (hl),a
 341+ 9465 24            	inc h
 342+ 9466 7C               ld a,h
 343+ 9467 E6 07            and 7
 344+ 9469 20 0A            jr nz,2F
 345+ 946B 7D               ld a,l
 346+ 946C C6 20            add a,$20
 347+ 946E 6F               ld l,a
 348+ 946F 38 04            jr c,2F
 349+ 9471 7C               ld a,h
 350+ 9472 D6 08            sub 8
 351+ 9474 67               ld h,a
 352+ 9475 7C           2 ld a,h
 353+ 9476 FE 58            cp $58
 354+ 9478 28 1C            jr z,4F
 355+ 947A D1               pop de
 356+ 947B 7A           	ld a,d
 357+ 947C AE           	xor (hl)
 358+ 947D 77           	ld (hl),a
 359+ 947E 24           	inc h
 360+ 947F 7C               ld a,h
 361+ 9480 E6 07            and 7
 362+ 9482 20 0A            jr nz,3F
 363+ 9484 7D               ld a,l
 364+ 9485 C6 20            add a,$20
 365+ 9487 6F               ld l,a
 366+ 9488 38 04            jr c,3F
 367+ 948A 7C               ld a,h
 368+ 948B D6 08            sub 8
 369+ 948D 67               ld h,a
 370+ 948E 7C           3 ld a,h
 371+ 948F FE 58            cp $58
 372+ 9491 28 03            jr z,4F
 373+ 9493 D1               pop de
 374+ 9494 10 CB            djnz 1B
 375+ 9496 ED 7B 9A 89  4 ld sp,(Stack)
 376+ 949A C9           	ret
 377+ 949B
 378+ 949B              ; ---------------------------------------------------
 379+ 949B              ;
 380+ 949B              ;   27/02/23
 381+ 949B              ;
 382+ 949B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 949B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 949B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 949B
 386+ 949B ED 73 9A 89  Pinta_Disparo ld (Stack),sp
 387+ 949F FD F9            ld sp,iy
 388+ 94A1 06 03            ld b,3
 389+ 94A3 D1           1 pop de
 390+ 94A4 7B               ld a,e
 391+ 94A5 AE               xor (hl)
 392+ 94A6 77               ld (hl),a
 393+ 94A7 23               inc hl
 394+ 94A8 7A               ld a,d
 395+ 94A9 AE               xor (hl)
 396+ 94AA 77               ld (hl),a
 397+ 94AB 2B               dec hl
 398+ 94AC
 399+ 94AC 24               inc h
 400+ 94AD 7C               ld a,h
 401+ 94AE E6 07            and 7
 402+ 94B0 20 0A            jr nz,2F
 403+ 94B2 7D               ld a,l
 404+ 94B3 C6 20            add a,$20
 405+ 94B5 6F               ld l,a
 406+ 94B6 38 04            jr c,2F
 407+ 94B8 7C               ld a,h
 408+ 94B9 D6 08            sub 8
 409+ 94BB 67               ld h,a
 410+ 94BC 7C           2 ld a,h
 411+ 94BD FE 58            cp $58
 412+ 94BF 28 02            jr z,3F
 413+ 94C1
 414+ 94C1 10 E0            djnz 1B
 415+ 94C3 ED 7B 9A 89  3 ld sp,(Stack)
 416+ 94C7 C9               ret
 417+ 94C8
# file closed: Rutinas_de_impresion_sprites.asm
1706  94C8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 94C8
   2+ 94C8              ; ******************************************************************************************************************************************************************************************
   3+ 94C8              ;
   4+ 94C8              ;   20/05/23
   5+ 94C8              ;
   6+ 94C8              ;	Recompone_posicion_inicio
   7+ 94C8              ;
   8+ 94C8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 94C8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 94C8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 94C8              ;	_ a una u otra rutina.
  12+ 94C8
  13+ 94C8              Recompone_posicion_inicio
  14+ 94C8
  15+ 94C8 2A 5A 89     	ld hl,(Posicion_inicio)
  16+ 94CB 7D           	ld a,l
  17+ 94CC E6 1F        	and $1f
  18+ 94CE 28 16        	jr z,1F
  19+ 94D0
  20+ 94D0 FE 1F        	cp $1f
  21+ 94D2 28 0D        	jr z,3F
  22+ 94D4
  23+ 94D4 21 6F 89     	ld hl,Ctrl_2
  24+ 94D7 CB C6        	set 0,(hl)
  25+ 94D9 2A 4C 89     	ld hl,(Puntero_objeto)
  26+ 94DC 22 8A 89     	ld (Repone_puntero_objeto),hl
  27+ 94DF 18 08        	jr 2F
  28+ 94E1
  29+ 94E1 CD 8F 96     3 call Mov_left
  30+ 94E4 18 03        	jr 2F
  31+ 94E6
  32+ 94E6 CD 6C 95     1 call Mov_right
  33+ 94E9 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 94EC 22 4C 89     	ld (Puntero_objeto),hl
  35+ 94EF C9           	ret
  36+ 94F0
  37+ 94F0              ; ******************************************************************************************************************************************************************************************
  38+ 94F0              ;
  39+ 94F0              ;   27/05/23
  40+ 94F0              ;
  41+ 94F0              ;	Mov_down
  42+ 94F0              ;
  43+ 94F0              ; 	Mueve el Sprite X px hacia abajo.
  44+ 94F0              ;
  45+ 94F0              ;
  46+ 94F0              Mov_down
  47+ 94F0
  48+ 94F0 CD 5A 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 94F3              ;																	; _ repone (Puntero_objeto).
  50+ 94F3 21 6A 89     	ld hl,Ctrl_0
  51+ 94F6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 94F8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 94F8              ; 																	; _ en el caso de que no lo haya.
  54+ 94F8 3A 74 89     	ld a,(Vel_down)
  55+ 94FB 47           	ld b,a
  56+ 94FC 2A 4A 89         ld hl,(Posicion_actual)
  57+ 94FF CD 9F 9E     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9502 E6 02        	and 2
  59+ 9504 28 17        	jr z,1F
  60+ 9506
  61+ 9506              ; Nos encontramos en el último tercio de pantalla.
  62+ 9506              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9506
  64+ 9506 7C           	ld a,h
  65+ 9507 FE 57        	cp $57
  66+ 9509 20 12        	jr nz,1F
  67+ 950B
  68+ 950B 7D           	ld a,l
  69+ 950C C6 20        	add $20
  70+ 950E 30 0D        	jr nc,1F
  71+ 9510
  72+ 9510              ; ------------------------------
  73+ 9510              ;
  74+ 9510              ;	12/01/24
  75+ 9510
  76+ 9510              ;	call Reaparece_arriba
  77+ 9510 CD 1C 98     	call Reinicio
  78+ 9513
  79+ 9513              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9513
  81+ 9513 3A A8 89     	ld a,(Ctrl_3)
  82+ 9516 CB CF        	set 1,a
  83+ 9518 32 A8 89     	ld (Ctrl_3),a
  84+ 951B
  85+ 951B 18 08        	jr 3F
  86+ 951D              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 951D              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 951D              ; ------------------------------
  89+ 951D
  90+ 951D CD B5 91     1 call NextScan
  91+ 9520 22 4A 89     	ld (Posicion_actual),hl
  92+ 9523 10 DA            djnz 2B
  93+ 9525 CD BD 9E     3 call Genera_coordenadas
  94+ 9528 C9           	ret
  95+ 9529
  96+ 9529              ; ******************************************************************************************************************************************************************************************
  97+ 9529              ;
  98+ 9529              ;   27/05/23
  99+ 9529              ;
 100+ 9529              ;	Mov_up
 101+ 9529              ;
 102+ 9529              ; 	Mueve el Sprite hacia arriba.
 103+ 9529              ;
 104+ 9529              ;
 105+ 9529              Mov_up
 106+ 9529
 107+ 9529 CD 5A 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 952C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 952C 21 6A 89     	ld hl,Ctrl_0
 110+ 952F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9531              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9531              ; 																		; _ en el caso de que no lo haya.
 113+ 9531 3A 73 89     	ld a,(Vel_up)
 114+ 9534 47           	ld b,a
 115+ 9535 2A 4A 89     	ld hl,(Posicion_actual)
 116+ 9538 CD 9F 9E     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 953B A7           	and a
 118+ 953C 20 10        	jr nz,1F
 119+ 953E
 120+ 953E              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 953E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 953E
 123+ 953E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 953F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9541 20 0B            jr nz,1F
 126+ 9543 7D               ld a,l
 127+ 9544 D6 20            sub $20
 128+ 9546 30 06            jr nc,1F
 129+ 9548 25               dec h
 130+ 9549
 131+ 9549              ; -----------------------------
 132+ 9549 CD FD 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 954C              ;	call Reinicio
 134+ 954C              ; -----------------------------
 135+ 954C
 136+ 954C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 954E CD C4 91     1 call PreviousScan
 138+ 9551 22 4A 89     	ld (Posicion_actual),hl
 139+ 9554 10 E2            djnz 3B
 140+ 9556 CD BD 9E     2 call Genera_coordenadas
 141+ 9559 C9           	ret
 142+ 955A
 143+ 955A              ; -----------------------------
 144+ 955A              ;
 145+ 955A              ;	27/5/23
 146+ 955A              ;
 147+ 955A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 955A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 955A              ;
 150+ 955A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 955A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 955A              ;
 153+ 955A              ;	Modifica: A y (Puntero_objeto).
 154+ 955A
 155+ 955A 3A 6F 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 955D CB 47        	bit 0,a
 157+ 955F C8           	ret z
 158+ 9560 CB 87        	res 0,a
 159+ 9562 32 6F 89     	ld (Ctrl_2),a
 160+ 9565 2A 8A 89     	ld hl,(Repone_puntero_objeto)
 161+ 9568 22 4C 89     	ld (Puntero_objeto),hl
 162+ 956B C9           	ret
 163+ 956C
 164+ 956C              ; ******************************************************************************************************************************************************************************************
 165+ 956C              ;
 166+ 956C              ;	19/10/22
 167+ 956C              ;
 168+ 956C              ;	Mov_right.
 169+ 956C              ;
 170+ 956C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 956C              ;
 172+ 956C
 173+ 956C 3A 6A 89     Mov_right ld a,(Ctrl_0)
 174+ 956F CB 77        	bit 6,a
 175+ 9571 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9573
 177+ 9573 CD AB 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9576 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9577
 180+ 9577 21 6A 89     	ld hl,Ctrl_0
 181+ 957A CB E6        	set 4,(hl)
 182+ 957C 18 52        	jr 8F
 183+ 957E
 184+ 957E 21 6A 89     10 ld hl,Ctrl_0
 185+ 9581 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9583              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9583              ; 																	; _ en el caso de que no lo haya.
 188+ 9583 3A 4E 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9586 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9588 20 46        	jr nz,8F
 191+ 958A
 192+ 958A 3A 50 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 958D A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 958E 28 40        	jr z,8F
 195+ 9590
 196+ 9590              ; ---------- ---------- ----------
 197+ 9590              ;
 198+ 9590              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9590
 200+ 9590 3A 72 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9593 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9595 28 11        	jr z,1F
 203+ 9597 38 06        	jr c,6F
 204+ 9599 FE 04        	cp 4
 205+ 959B 28 14        	jr z,7F
 206+ 959D 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 959F
 208+ 959F              ; ---------- ---------- ----------
 209+ 959F              ;
 210+ 959F              ; Perfiles de velocidad
 211+ 959F              ;
 212+ 959F
 213+ 959F 3A 50 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95A2 FE FE        	cp $fe
 215+ 95A4 20 2A        	jr nz,8F
 216+ 95A6 18 10        	jr 3F
 217+ 95A8 3A 50 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95AB FE FD        	cp $fd
 219+ 95AD 20 21        	jr nz,8F
 220+ 95AF 18 07        	jr 3F
 221+ 95B1 3A 50 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 95B4 FE FB        	cp $fb
 223+ 95B6 20 18        	jr nz,8F
 224+ 95B8
 225+ 95B8              ; ---------- ---------- ----------
 226+ 95B8
 227+ 95B8              3
 228+ 95B8 CD EB 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 95BB              ;	call Reinicio
 230+ 95BB
 231+ 95BB              ; ---------- ---------- ----------
 232+ 95BB              ;
 233+ 95BB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 95BB
 235+ 95BB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 95BD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 95BE CD D7 95     	call DESPLZ_DER
 238+ 95C1 C1           	pop bc
 239+ 95C2 10 F9        	djnz 5B
 240+ 95C4 2A 4A 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 95C7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 95C8 22 4A 89     	ld (Posicion_actual),hl
 243+ 95CB CD BD 9E     	call Genera_coordenadas
 244+ 95CE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 95D0
 246+ 95D0              ; ---------- ---------- ----------
 247+ 95D0
 248+ 95D0 2A 4A 89     8 ld hl,(Posicion_actual)
 249+ 95D3 CD D7 95     	call DESPLZ_DER
 250+ 95D6 C9           2 ret
 251+ 95D7
 252+ 95D7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 95D7              ;
 254+ 95D7              ;	22/9/22
 255+ 95D7              ;
 256+ 95D7
 257+ 95D7 CD E6 95     DESPLZ_DER call Desplaza_derecha
 258+ 95DA CD 32 96         call modifica_parametros_1er_DESPLZ_2
 259+ 95DD CD 5B 96         call Ciclo_completo
 260+ 95E0 21 6A 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 95E3 CB FE        	set 7,(hl)
 262+ 95E5 C9           	ret
 263+ 95E6
 264+ 95E6              ; ******************************************************************************************************************************************************************************************
 265+ 95E6              ;	15/02/23
 266+ 95E6              ;
 267+ 95E6
 268+ 95E6 3A 72 89     Desplaza_derecha ld a,(Vel_right)
 269+ 95E9 47           	ld b,a
 270+ 95EA 2A 56 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 95ED 23           1 inc hl
 272+ 95EE 23           	inc hl
 273+ 95EF 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 95F1 22 56 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 95F4 CD 98 8B     	call Extrae_address
 276+ 95F7 22 4C 89     	ld (Puntero_objeto),hl
 277+ 95FA
 278+ 95FA              ; Modifica (Puntero_DESPLZ_izq).
 279+ 95FA
 280+ 95FA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 95FA              ; Cuántos movimientos hemos hecho ??
 282+ 95FA              ; DE contiene (Puntero_DESPLZ_der).
 283+ 95FA
 284+ 95FA 2A 52 89     7 ld hl,(Indice_Sprite_der)
 285+ 95FD EB           	ex de,hl
 286+ 95FE A7           	and a
 287+ 95FF ED 52        	sbc hl,de
 288+ 9601 CB 3D        	srl l
 289+ 9603 3E 08        6 ld a,8
 290+ 9605 95           	sub l
 291+ 9606 30 1E        	jr nc,3F
 292+ 9608
 293+ 9608              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9608              ; B="0".
 295+ 9608
 296+ 9608 04           4 inc b
 297+ 9609 3C           	inc a
 298+ 960A 20 FC        	jr nz,4B
 299+ 960C 78           	ld a,b
 300+ 960D 08           	ex af,af
 301+ 960E 2A 52 89     	ld hl,(Indice_Sprite_der)
 302+ 9611 23           5 inc hl
 303+ 9612 23           	inc hl
 304+ 9613 10 FC        	djnz 5B
 305+ 9615 22 56 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9618 CD 98 8B     	call Extrae_address
 307+ 961B 22 4C 89     	ld (Puntero_objeto),hl
 308+ 961E
 309+ 961E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 961E              ; _(Posicion_actual).
 311+ 961E
 312+ 961E 21 4A 89     	ld hl,Posicion_actual
 313+ 9621 34           	inc (hl)
 314+ 9622 08               ex af,af
 315+ 9623 6F           	ld l,a
 316+ 9624 18 DD        	jr 6B
 317+ 9626
 318+ 9626              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9626
 320+ 9626 47           3 ld b,a
 321+ 9627 2A 54 89     	ld hl,(Indice_Sprite_izq)
 322+ 962A 23           2 inc hl
 323+ 962B 23           	inc hl
 324+ 962C 10 FC        	djnz 2B
 325+ 962E 22 58 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9631 C9           8 ret
 327+ 9632
 328+ 9632              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9632              ;
 330+ 9632              ;	24/7/22
 331+ 9632              ;
 332+ 9632              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9632              ;
 334+ 9632              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9632              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9632              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9632
 338+ 9632 3A 50 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9635 A7           	and a
 340+ 9636 20 1F        	jr nz,1F
 341+ 9638 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 963A 32 50 89         ld (CTRL_DESPLZ),a
 343+ 963D
 344+ 963D 21 49 89     	ld hl,Columns
 345+ 9640 34           	inc (hl)
 346+ 9641 3A 5C 89     	ld a,(Cuad_objeto)
 347+ 9644 E6 01        	and 1
 348+ 9646 28 0F        	jr z,1F
 349+ 9648 2A 4A 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 964B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 964C 22 4A 89     	ld (Posicion_actual),hl
 352+ 964F CD BD 9E     	call Genera_coordenadas
 353+ 9652 CD B7 97     	call Inc_CTRL_DESPLZ
 354+ 9655 18 03        	jr 2F
 355+ 9657 CD B7 97     1 call Inc_CTRL_DESPLZ
 356+ 965A C9           2 ret
 357+ 965B
 358+ 965B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 965B              ;
 360+ 965B              ;	24/7/22
 361+ 965B              ;
 362+ 965B              ;	Ciclo_completo.
 363+ 965B              ;
 364+ 965B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 965B              ;
 366+ 965B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 965B              ; 	Decrementamos (Columns).
 368+ 965B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 965B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 965B
 371+ 965B
 372+ 965B 3A 50 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 965E FE FF        	cp $ff
 374+ 9660 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9662 E6 F0        	and $f0
 376+ 9664 20 28        	jr nz,3F
 377+ 9666
 378+ 9666              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9666
 380+ 9666 3A 50 89     	ld a,(CTRL_DESPLZ)
 381+ 9669 47           	ld b,a
 382+ 966A 3E F8        	ld a,$f8
 383+ 966C 80           	add b
 384+ 966D 32 50 89     	ld (CTRL_DESPLZ),a
 385+ 9670 18 1C        	jr 3F
 386+ 9672 21 49 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9675 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9676 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9677 32 50 89     	ld (CTRL_DESPLZ),a
 390+ 967A 3A 5C 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 967D E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 967F 20 0A        	jr nz,2F
 393+ 9681 2A 4A 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9684 23           	inc hl
 395+ 9685 22 4A 89     	ld (Posicion_actual),hl
 396+ 9688 CD BD 9E     	call Genera_coordenadas
 397+ 968B
 398+ 968B              ; Inicia el puntero de Sprite.
 399+ 968B
 400+ 968B CD AD 8B     2 call Inicia_puntero_objeto_der
 401+ 968E C9           3 ret
 402+ 968F
 403+ 968F              ; ******************************************************************************************************************************************************************************************
 404+ 968F              ;
 405+ 968F              ;	15/02/23
 406+ 968F              ;
 407+ 968F              ;	Mov_left.
 408+ 968F              ;
 409+ 968F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 968F              ;
 411+ 968F              Mov_left
 412+ 968F
 413+ 968F 21 6A 89     	ld hl,Ctrl_0
 414+ 9692 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9694              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9694              ; 																	; _ en el caso de que no lo haya.
 417+ 9694 3A 6A 89     	ld a,(Ctrl_0)
 418+ 9697 CB 77        	bit 6,a
 419+ 9699 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 969B
 421+ 969B CD B1 97     	call Stop_Amadeus_left
 422+ 969E C8           	ret z
 423+ 969F 20 4A        	jr nz,8F
 424+ 96A1
 425+ 96A1 3A 4E 89     11 ld a,(Coordenada_X)
 426+ 96A4 A7           	and a
 427+ 96A5 20 44        	jr nz,8F
 428+ 96A7
 429+ 96A7 3A 50 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96AA A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96AB 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96AD
 433+ 96AD              ; ---------- ---------- ----------
 434+ 96AD
 435+ 96AD 3A 71 89     	ld a,(Vel_left)
 436+ 96B0 FE 02        	cp 2
 437+ 96B2 28 0F        	jr z,1F
 438+ 96B4 38 04        	jr c,6F
 439+ 96B6 FE 04        	cp 4
 440+ 96B8 28 12        	jr z,7F
 441+ 96BA
 442+ 96BA              ; ---------- ---------- ----------
 443+ 96BA
 444+ 96BA 3A 50 89     6 ld a,(CTRL_DESPLZ)
 445+ 96BD FE F8        	cp $f8
 446+ 96BF 20 2A        	jr nz,8F
 447+ 96C1 18 10        	jr 4F
 448+ 96C3 3A 50 89     1 ld a,(CTRL_DESPLZ)
 449+ 96C6 FE F9        	cp $f9
 450+ 96C8 20 21        	jr nz,8F
 451+ 96CA 18 07        	jr 4F
 452+ 96CC 3A 50 89     7 ld a,(CTRL_DESPLZ)
 453+ 96CF FE FB        	cp $fb
 454+ 96D1 20 18        	jr nz,8F
 455+ 96D3
 456+ 96D3              ; ---------- ---------- ----------
 457+ 96D3
 458+ 96D3              4
 459+ 96D3 CD D9 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 96D6              ;	call Reinicio
 461+ 96D6
 462+ 96D6              ; ---------- ---------- ----------
 463+ 96D6
 464+ 96D6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 96D8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 96D9
 467+ 96D9              ;	ld hl,(Indice_Sprite_izq)
 468+ 96D9              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 96D9
 470+ 96D9 CD F2 96     	call DESPLZ_IZQ
 471+ 96DC C1           	pop bc
 472+ 96DD 10 F9        	djnz 5B
 473+ 96DF 2A 4A 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 96E2 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 96E3 22 4A 89     	ld (Posicion_actual),hl
 476+ 96E6 CD BD 9E     	call Genera_coordenadas
 477+ 96E9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 96EB
 479+ 96EB              ; ---------- ---------- ----------
 480+ 96EB
 481+ 96EB              ; Movemos, no hay recolocación.
 482+ 96EB
 483+ 96EB 2A 4A 89     8 ld hl,(Posicion_actual)
 484+ 96EE CD F2 96     	call DESPLZ_IZQ
 485+ 96F1 C9           2 ret
 486+ 96F2
 487+ 96F2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 96F2              ;
 489+ 96F2              ;	22/9/22
 490+ 96F2
 491+ 96F2              DESPLZ_IZQ
 492+ 96F2
 493+ 96F2 CD 01 97     	call Desplaza_izquierda
 494+ 96F5 CD 4D 97         call modifica_parametros_1er_DESPLZ
 495+ 96F8 CD 75 97     	call Ciclo_completo_2
 496+ 96FB 21 6A 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 96FE CB BE        	res 7,(hl)
 498+ 9700 C9           	ret
 499+ 9701
 500+ 9701              Desplaza_izquierda
 501+ 9701
 502+ 9701 3A 71 89     	ld a,(Vel_left)
 503+ 9704 47           	ld b,a
 504+ 9705 2A 58 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9708 23           1 inc hl
 506+ 9709 23           	inc hl
 507+ 970A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 970C 22 58 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 970F CD 98 8B     	call Extrae_address
 510+ 9712 22 4C 89     	ld (Puntero_objeto),hl
 511+ 9715
 512+ 9715              ; Modifica (Puntero_DESPLZ_der).
 513+ 9715
 514+ 9715              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9715              ; Cuántos movimientos hemos hecho ??
 516+ 9715              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9715
 518+ 9715 2A 54 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9718 EB           	ex de,hl
 520+ 9719 A7           	and a
 521+ 971A ED 52        	sbc hl,de
 522+ 971C CB 3D        	srl l
 523+ 971E 3E 08        6 ld a,8
 524+ 9720 95           	sub l
 525+ 9721 30 1E        	jr nc,3F
 526+ 9723
 527+ 9723              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9723              ; B="0".
 529+ 9723
 530+ 9723 04           4 inc b
 531+ 9724 3C           	inc a
 532+ 9725 20 FC        	jr nz,4B
 533+ 9727 78           	ld a,b
 534+ 9728 08           	ex af,af
 535+ 9729 2A 54 89     	ld hl,(Indice_Sprite_izq)
 536+ 972C 23           5 inc hl
 537+ 972D 23           	inc hl
 538+ 972E 10 FC        	djnz 5B
 539+ 9730 22 58 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9733 CD 98 8B     	call Extrae_address
 541+ 9736 22 4C 89     	ld (Puntero_objeto),hl
 542+ 9739
 543+ 9739              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9739              ; _(Posicion_actual).
 545+ 9739
 546+ 9739 21 4A 89     	ld hl,Posicion_actual
 547+ 973C 35           	dec (hl)
 548+ 973D 08           	ex af,af
 549+ 973E 6F           	ld l,a
 550+ 973F 18 DD        	jr 6B
 551+ 9741
 552+ 9741              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9741
 554+ 9741 47           3 ld b,a
 555+ 9742 2A 52 89     	ld hl,(Indice_Sprite_der)
 556+ 9745 23           2 inc hl
 557+ 9746 23           	inc hl
 558+ 9747 10 FC        	djnz 2B
 559+ 9749 22 56 89     	ld (Puntero_DESPLZ_der),hl
 560+ 974C C9           8 ret
 561+ 974D
 562+ 974D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 974D              ;
 564+ 974D              ;	modifica_parametros_1er_DESPLZ
 565+ 974D              ;
 566+ 974D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 974D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 974D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 974D
 570+ 974D 3A 50 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9750 A7           	and a
 572+ 9751 20 1E        	jr nz,1F
 573+ 9753 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9754 32 50 89         ld (CTRL_DESPLZ),a
 575+ 9757 21 49 89     	ld hl,Columns
 576+ 975A 34           	inc (hl)
 577+ 975B 3A 5C 89     	ld a,(Cuad_objeto)
 578+ 975E E6 01        	and 1
 579+ 9760 20 0F        	jr nz,1F
 580+ 9762 2A 4A 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9765 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9766 22 4A 89     	ld (Posicion_actual),hl
 583+ 9769 CD BD 9E     	call Genera_coordenadas
 584+ 976C CD C8 97     	call Dec_CTRL_DESPLZ
 585+ 976F 18 03        	jr 2F
 586+ 9771 CD C8 97     1 call Dec_CTRL_DESPLZ
 587+ 9774 C9           2 ret
 588+ 9775
 589+ 9775              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9775
 591+ 9775 3A 50 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9778 FE F7        	cp $f7
 593+ 977A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 977C 30 2C        	jr nc,3F
 595+ 977E
 596+ 977E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 977E
 598+ 977E 06 00        	ld b,0
 599+ 9780 04           4 inc b
 600+ 9781 3C           	inc a
 601+ 9782 FE F7        	cp $f7
 602+ 9784 20 FA        	jr nz,4B
 603+ 9786 3E FF        	ld a,$ff
 604+ 9788 90           	sub b
 605+ 9789 32 50 89     	ld (CTRL_DESPLZ),a
 606+ 978C 18 1C        	jr 3F
 607+ 978E
 608+ 978E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 978E
 610+ 978E 21 49 89     1 ld hl,Columns
 611+ 9791 35           	dec (hl)
 612+ 9792 AF           	xor a
 613+ 9793 32 50 89     	ld (CTRL_DESPLZ),a
 614+ 9796 3A 5C 89     	ld a,(Cuad_objeto)
 615+ 9799 E6 01        	and 1
 616+ 979B 28 0A        	jr z,2F
 617+ 979D 2A 4A 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97A0 2B           	dec hl
 619+ 97A1 22 4A 89     	ld (Posicion_actual),hl
 620+ 97A4 CD BD 9E     	call Genera_coordenadas
 621+ 97A7
 622+ 97A7              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97A7
 624+ 97A7 CD C0 8B     2 call Inicia_puntero_objeto_izq
 625+ 97AA C9           3 ret
 626+ 97AB
 627+ 97AB              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97AB              ;
 629+ 97AB              ;	19/10/22
 630+ 97AB              ;
 631+ 97AB              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97AB              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97AB
 634+ 97AB 3A 4E 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97AE FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97B0 C9           	ret
 637+ 97B1
 638+ 97B1              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97B1              ;
 640+ 97B1              ;	19/10/22
 641+ 97B1              ;
 642+ 97B1              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97B1              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97B1
 645+ 97B1 3A 4E 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 97B4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 97B6 C9           	ret
 648+ 97B7
 649+ 97B7              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 97B7              ;
 651+ 97B7              ;	24/7/22
 652+ 97B7              ;
 653+ 97B7              ;	Inc_CTRL_DESPLZ
 654+ 97B7              ;
 655+ 97B7              ;
 656+ 97B7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 97B7
 658+ 97B7 21 50 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 97BA 3A 72 89     	ld a,(Vel_right)
 660+ 97BD A7           	and a
 661+ 97BE 28 06        	jr z,1F
 662+ 97C0 47           	ld b,a
 663+ 97C1 34           3 inc (hl)
 664+ 97C2 10 FD        	djnz 3B
 665+ 97C4 18 01        	jr 2F
 666+ 97C6 34           1 inc (hl)
 667+ 97C7 C9           2 ret
 668+ 97C8
 669+ 97C8              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 97C8              ;
 671+ 97C8              ;	5/2/23
 672+ 97C8              ;
 673+ 97C8              ;	Dec_CTRL_DESPLZ
 674+ 97C8              ;
 675+ 97C8              ;
 676+ 97C8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 97C8
 678+ 97C8 21 50 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 97CB 3A 71 89     	ld a,(Vel_left)
 680+ 97CE A7           	and a
 681+ 97CF 28 06        	jr z,1F
 682+ 97D1 47           	ld b,a
 683+ 97D2 35           3 dec (hl)
 684+ 97D3 10 FD        	djnz 3B
 685+ 97D5 18 01        	jr 2F
 686+ 97D7 35           1 dec (hl)
 687+ 97D8 C9           2 ret
 688+ 97D9
 689+ 97D9              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 97D9
 691+ 97D9 2A 4A 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 97DC 01 1F 00     	ld bc,31
 693+ 97DF A7           	and a
 694+ 97E0 ED 4A        	adc hl,bc
 695+ 97E2 22 4A 89     	ld (Posicion_actual),hl
 696+ 97E5 21 6A 89     	ld hl,Ctrl_0														; $xxx1
 697+ 97E8 CB C6        	set 0,(hl)
 698+ 97EA C9           	ret
 699+ 97EB
 700+ 97EB              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 97EB
 702+ 97EB 2A 4A 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 97EE 01 1F 00     	ld bc,31
 704+ 97F1 A7           	and a
 705+ 97F2 ED 42        	sbc hl,bc
 706+ 97F4 22 4A 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 97F7 21 6A 89     	ld hl,Ctrl_0
 708+ 97FA CB CE        	set 1,(hl)
 709+ 97FC C9           	ret
 710+ 97FD
 711+ 97FD              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 97FD
 713+ 97FD 24           Reaparece_abajo inc h
 714+ 97FE 01 E0 17     	ld bc,$17e0
 715+ 9801 A7           	and a
 716+ 9802 ED 4A        	adc hl,bc
 717+ 9804 22 4A 89     	ld (Posicion_actual),hl
 718+ 9807 21 6A 89     	ld hl,Ctrl_0
 719+ 980A CB D6        	set 2,(hl)
 720+ 980C C9           	ret
 721+ 980D
 722+ 980D              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 980D
 724+ 980D 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9810 A7           	and a
 726+ 9811 ED 42        	sbc hl,bc
 727+ 9813 22 4A 89     	ld (Posicion_actual),hl
 728+ 9816 21 6A 89     	ld hl,Ctrl_0
 729+ 9819 CB DE        	set 3,(hl)
 730+ 981B C9           	ret
 731+ 981C
 732+ 981C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 981C              ;
 734+ 981C              ;	15/07/23
 735+ 981C
 736+ 981C              Reinicio
 737+ 981C
 738+ 981C              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 981C
 740+ 981C AF           	xor a
 741+ 981D 21 81 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9820 CD 3E 98     	call Limpia_contenido_hl
 743+ 9823
 744+ 9823 21 4A 89     	ld hl,Posicion_actual
 745+ 9826 CD 3E 98     	call Limpia_contenido_hl
 746+ 9829
 747+ 9829 CD 0C 8D     	call Inicializa_Puntero_indice_mov
 748+ 982C CD 0A 99     	call Inicia_Puntero_mov
 749+ 982F
 750+ 982F 21 83 89     	ld hl,Incrementa_puntero
 751+ 9832 06 05        	ld b,5
 752+ 9834 77           1 ld (hl),a
 753+ 9835 23           	inc hl
 754+ 9836 10 FC        	djnz 1B
 755+ 9838
 756+ 9838 21 6F 89     	ld hl,Ctrl_2
 757+ 983B CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 983D
 759+ 983D C9           	ret
 760+ 983E
 761+ 983E 77           Limpia_contenido_hl	ld (hl),a
 762+ 983F 23           	inc hl
 763+ 9840 77           	ld (hl),a
 764+ 9841 C9           	ret
 765+ 9842
 766+ 9842
# file closed: Direcciones.asm
1707  9842              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9842              ; ----- ----- ----- ----- -----
   2+ 9842              ;
   3+ 9842              ;   28/12/23
   4+ 9842
   5+ 9842              Movimiento
   6+ 9842
   7+ 9842              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9842
   9+ 9842 3A 6F 89         ld a,(Ctrl_2)
  10+ 9845 CB 57            bit 2,a
  11+ 9847 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9849
  13+ 9849 2A 7F 89         ld hl,(Puntero_mov)
  14+ 984C 7E               ld a,(hl)
  15+ 984D
  16+ 984D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 984D
  18+ 984D              Inicia_desplazamiento.
  19+ 984D
  20+ 984D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 984D
  22+ 984D CD 40 99         call Ajusta_velocidad_desplazamiento
  23+ 9850
  24+ 9850              ; Iniciamos (Repetimos_mov).
  25+ 9850
  26+ 9850 7E               ld a,(hl)
  27+ 9851 E6 0F            and $0f
  28+ 9853 32 85 89         ld (Repetimos_desplazamiento),a
  29+ 9856 32 86 89         ld (Repetimos_desplazamiento_backup),a
  30+ 9859
  31+ 9859              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9859
  33+ 9859 23               inc hl
  34+ 985A 7E               ld a,(hl)
  35+ 985B 32 88 89         ld (Cola_de_desplazamiento),a
  36+ 985E 2B               dec hl
  37+ 985F
  38+ 985F 21 6F 89         ld hl,Ctrl_2
  39+ 9862 CB D6            set 2,(hl)
  40+ 9864
  41+ 9864              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9864              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9864
  44+ 9864              Desplazamiento_iniciado
  45+ 9864
  46+ 9864 CD 14 99         call Aplica_desplazamiento
  47+ 9867
  48+ 9867              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9867
  50+ 9867 3A A8 89         ld a,(Ctrl_3)
  51+ 986A CB 4F            bit 1,a
  52+ 986C C0               ret nz
  53+ 986D
  54+ 986D 21 85 89     3 ld hl,Repetimos_desplazamiento
  55+ 9870 35               dec (hl)
  56+ 9871 C0               ret nz
  57+ 9872
  58+ 9872              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9872              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9872              ; Analiza (Cola_de_desplazamiento).
  61+ 9872
  62+ 9872 3A 88 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 9875 A7               and a
  64+ 9876 CC 69 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9879 28 30            jr z,Reinicia_el_movimiento
  66+ 987B
  67+ 987B FE FF            cp $ff
  68+ 987D 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 987F
  70+ 987F FE FE            cp $fe
  71+ 9881 CC EE 98         call z,Fijamos_bucle
  72+ 9884 28 25            jr z,Reinicia_el_movimiento
  73+ 9886
  74+ 9886 FE FD            cp $fd
  75+ 9888 20 11            jr nz,1F
  76+ 988A
  77+ 988A              ; ---
  78+ 988A              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 988A
  80+ 988A 3A 6F 89         ld a,(Ctrl_2)
  81+ 988D CB 5F            bit 3,a
  82+ 988F 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9891
  84+ 9891              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9891
  86+ 9891 21 6F 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9894 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9896
  89+ 9896 CD FF 98         call Inicia_Repetimos_movimiento
  90+ 9899 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 989B              ; ---
  92+ 989B
  93+ 989B FE 01        1 cp 1
  94+ 989D CA D8 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98A0
  96+ 98A0 3D               dec a
  97+ 98A1 32 88 89         ld (Cola_de_desplazamiento),a
  98+ 98A4
  99+ 98A4 3A 86 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98A7 32 85 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98AA              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98AA C9               ret
 103+ 98AB
 104+ 98AB              Reinicia_el_movimiento
 105+ 98AB
 106+ 98AB 3A 6F 89         ld a,(Ctrl_2)
 107+ 98AE CB 5F            bit 3,a
 108+ 98B0 28 1B            jr z,2F
 109+ 98B2
 110+ 98B2              ; (Cola_de_desplazamiento)="254".
 111+ 98B2
 112+ 98B2 21 87 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 98B5 35               dec (hl)
 114+ 98B6 20 15            jr nz,2F
 115+ 98B8
 116+ 98B8              ; Fin de las repeticiones del último movimiento.
 117+ 98B8
 118+ 98B8 21 6F 89         ld hl,Ctrl_2
 119+ 98BB CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 98BD
 121+ 98BD 2A 7F 89         ld hl,(Puntero_mov)
 122+ 98C0 23               inc hl
 123+ 98C1 23               inc hl
 124+ 98C2 23               inc hl
 125+ 98C3 22 7F 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 98C6              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 98C6 7E               ld a,(hl)
 128+ 98C7 32 88 89         ld (Cola_de_desplazamiento),a
 129+ 98CA
 130+ 98CA C3 72 98         jp Cola
 131+ 98CD
 132+ 98CD CD 0A 99     2 call Inicia_Puntero_mov
 133+ 98D0
 134+ 98D0 21 6F 89         ld hl,Ctrl_2
 135+ 98D3 CB 96            res 2,(hl)
 136+ 98D5
 137+ 98D5 C3 42 98         jp Movimiento
 138+ 98D8
 139+ 98D8              Siguiente_desplazamiento
 140+ 98D8
 141+ 98D8              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 98D8              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 98D8
 144+ 98D8 21 6F 89         ld hl,Ctrl_2
 145+ 98DB CB 96            res 2,(hl)
 146+ 98DD
 147+ 98DD 2A 7F 89         ld hl,(Puntero_mov)
 148+ 98E0 23               inc hl
 149+ 98E1 23               inc hl
 150+ 98E2 22 7F 89         ld (Puntero_mov),hl
 151+ 98E5
 152+ 98E5 7E               ld a,(hl)
 153+ 98E6 A7               and a
 154+ 98E7 CC 69 99         call z,Incrementa_Puntero_indice_mov
 155+ 98EA CA AB 98         jp z,Reinicia_el_movimiento
 156+ 98ED
 157+ 98ED C9               ret
 158+ 98EE
 159+ 98EE              ; Subrutinas -----------------------------------------
 160+ 98EE              ; ---------- --------- --------- ---------- ----------
 161+ 98EE              ;
 162+ 98EE              ;   24/07/23
 163+ 98EE              ;
 164+ 98EE              ;   Fijamos_bucle
 165+ 98EE              ;
 166+ 98EE              ;
 167+ 98EE
 168+ 98EE              Fijamos_bucle
 169+ 98EE
 170+ 98EE 3A 83 89         ld a,(Incrementa_puntero)
 171+ 98F1 3C               inc a
 172+ 98F2 32 84 89         ld (Incrementa_puntero_backup),a
 173+ 98F5
 174+ 98F5 CD 69 99         call Incrementa_Puntero_indice_mov
 175+ 98F8 2A 7D 89         ld hl,(Puntero_indice_mov)
 176+ 98FB 22 81 89         ld (Puntero_indice_mov_bucle),hl
 177+ 98FE C9               ret
 178+ 98FF
 179+ 98FF              ; ---------- --------- --------- ---------- ----------
 180+ 98FF              ;
 181+ 98FF              ;   07/7/23
 182+ 98FF              ;
 183+ 98FF              ;   Inicia_Repetimos_movimiento
 184+ 98FF              ;
 185+ 98FF              ;
 186+ 98FF
 187+ 98FF              Inicia_Repetimos_movimiento
 188+ 98FF
 189+ 98FF              ; Iniciamos (Repetimos_movimiento).
 190+ 98FF
 191+ 98FF DD 2A 7F 89      ld ix,(Puntero_mov)
 192+ 9903 DD 7E 02         ld a,(ix+2)
 193+ 9906 32 87 89         ld (Repetimos_movimiento),a
 194+ 9909
 195+ 9909 C9               ret
 196+ 990A
 197+ 990A              ; ---------- --------- --------- ---------- ----------
 198+ 990A              ;
 199+ 990A              ;   26/6/23
 200+ 990A              ;
 201+ 990A              ;   Inicia_Puntero_mov
 202+ 990A              ;
 203+ 990A              ;
 204+ 990A
 205+ 990A 2A 7D 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 990D CD 98 8B         call Extrae_address
 207+ 9910 22 7F 89         ld (Puntero_mov),hl
 208+ 9913 C9               ret
 209+ 9914
 210+ 9914              ; ---------- --------- --------- ---------- ----------
 211+ 9914              ;
 212+ 9914              ;   27/06/23
 213+ 9914              ;
 214+ 9914              ;   Aplica_movimiento.
 215+ 9914
 216+ 9914              Aplica_desplazamiento
 217+ 9914
 218+ 9914              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9914
 220+ 9914 2A 7F 89         ld hl, (Puntero_mov)
 221+ 9917
 222+ 9917 7E               ld a,(hl)
 223+ 9918 E6 F0            and $f0
 224+ 991A C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 991B
 226+ 991B CB 7E            bit 7,(hl)
 227+ 991D 28 03            jr z,1F
 228+ 991F CD 29 95         call Mov_up
 229+ 9922 2A 7F 89     1 ld hl, (Puntero_mov)
 230+ 9925 CB 76            bit 6,(hl)
 231+ 9927 28 03            jr z,2F
 232+ 9929 CD F0 94         call Mov_down
 233+ 992C
 234+ 992C              ; Se ha aplicado reinicio ???
 235+ 992C              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 992C
 237+ 992C              ;    ld a,(Ctrl_3)
 238+ 992C              ;    bit 1,a
 239+ 992C              ;    ret nz
 240+ 992C
 241+ 992C 2A 7F 89     2 ld hl, (Puntero_mov)
 242+ 992F CB 6E            bit 5,(hl)
 243+ 9931 28 03            jr z,3F
 244+ 9933 CD 8F 96         call Mov_left
 245+ 9936 2A 7F 89     3 ld hl, (Puntero_mov)
 246+ 9939 CB 66            bit 4,(hl)
 247+ 993B C8               ret z
 248+ 993C CD 6C 95         call Mov_right
 249+ 993F C9               ret
 250+ 9940
 251+ 9940              ; ---------- --------- --------- ---------- ----------
 252+ 9940              ;
 253+ 9940              ;   26/06/23
 254+ 9940              ;
 255+ 9940              ;   Ajusta_velocidad_desplazamiento.
 256+ 9940
 257+ 9940              Ajusta_velocidad_desplazamiento
 258+ 9940
 259+ 9940              ; 1er byte de la cadena de movimiento.
 260+ 9940              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9940
 262+ 9940 CD 5E 99         call Extrae_nibble_alto
 263+ 9943
 264+ 9943 32 73 89         ld (Vel_up),a
 265+ 9946 79               ld a,c
 266+ 9947 E6 0F            and $0f
 267+ 9949 32 74 89         ld (Vel_down),a
 268+ 994C
 269+ 994C              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 994C              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 994C
 272+ 994C 23               inc hl
 273+ 994D CD 5E 99         call Extrae_nibble_alto
 274+ 9950
 275+ 9950 32 71 89         ld (Vel_left),a
 276+ 9953 79               ld a,c
 277+ 9954 E6 0F            and $0f
 278+ 9956 32 72 89         ld (Vel_right),a
 279+ 9959
 280+ 9959              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9959
 282+ 9959 23               inc hl
 283+ 995A 22 7F 89         ld (Puntero_mov),hl
 284+ 995D C9               ret
 285+ 995E
 286+ 995E 06 04        Extrae_nibble_alto ld b,4
 287+ 9960 7E               ld a,(hl)
 288+ 9961 4F               ld c,a
 289+ 9962 E6 F0            and $f0
 290+ 9964 CB 3F        1 srl a
 291+ 9966 10 FC            djnz 1B
 292+ 9968 C9               ret
 293+ 9969
 294+ 9969              ; ---------- --------- --------- ---------- ----------
 295+ 9969              ;
 296+ 9969              ;   5/7/23
 297+ 9969              ;
 298+ 9969              ;   Incrementa_Puntero_indice_mov
 299+ 9969
 300+ 9969              Incrementa_Puntero_indice_mov
 301+ 9969
 302+ 9969 21 83 89         ld hl,Incrementa_puntero
 303+ 996C 34               inc (hl)
 304+ 996D
 305+ 996D 2A 7D 89         ld hl,(Puntero_indice_mov)
 306+ 9970 01 02 00         ld bc,2
 307+ 9973 A7               and a
 308+ 9974 09               add hl,bc
 309+ 9975 22 7D 89         ld (Puntero_indice_mov),hl
 310+ 9978
 311+ 9978 7E               ld a,(hl)
 312+ 9979 A7               and a
 313+ 997A
 314+ 997A              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 997A
 316+ 997A              ;    jr z,$
 317+ 997A
 318+ 997A              ;! Reinicia el Patrón de movimiento.
 319+ 997A
 320+ 997A CC 7F 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 997D
 322+ 997D AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 997E
 324+ 997E C9               ret
 325+ 997F
 326+ 997F              ; ---------- --------- --------- ---------- ----------
 327+ 997F              ;
 328+ 997F              ;   15/01/24
 329+ 997F              ;
 330+ 997F              ;   Inicializa_Puntero_indice_mov
 331+ 997F
 332+ 997F              Inicializa_Puntero_indice_mov_2
 333+ 997F
 334+ 997F              ; Existe etiqueta de bucle principal???
 335+ 997F
 336+ 997F 2A 81 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9982 24               inc h
 338+ 9983 25               dec h
 339+ 9984 28 05            jr z,2F
 340+ 9986
 341+ 9986 22 7D 89         ld (Puntero_indice_mov),hl
 342+ 9989 18 14            jr 3F
 343+ 998B
 344+ 998B              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 998B
 346+ 998B 3A 83 89     2 ld a,(Incrementa_puntero)
 347+ 998E 47               ld b,a
 348+ 998F
 349+ 998F 2A 7D 89         ld hl,(Puntero_indice_mov)
 350+ 9992 2B           1 dec hl
 351+ 9993 2B               dec hl
 352+ 9994 10 FC            djnz 1B
 353+ 9996 22 7D 89         ld (Puntero_indice_mov),hl
 354+ 9999
 355+ 9999 AF               xor a
 356+ 999A 32 83 89         ld (Incrementa_puntero),a
 357+ 999D 18 06            jr 4F
 358+ 999F
 359+ 999F 3A 84 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99A2 32 83 89         ld (Incrementa_puntero),a
 361+ 99A5 C9           4 ret
 362+ 99A6
 363+ 99A6              ; ----------------------------------------------------------------------
 364+ 99A6              ;
 365+ 99A6              ;   30/01/24
 366+ 99A6              ;
 367+ 99A6              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99A6
 369+ 99A6 3A 47 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99A9 CD 38 8E         call Calcula_salto_en_BC
 371+ 99AC 21 75 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99AF A7               and a
 373+ 99B0 ED 4A            adc hl,bc
 374+ 99B2 C9               ret
 375+ 99B3
 376+ 99B3              ; ----------------------------------------------------------------------
 377+ 99B3              ;
 378+ 99B3              ;   30/01/24
 379+ 99B3              ;
 380+ 99B3              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 99B3              ;
 382+ 99B3              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 99B3
 384+ 99B3 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 99B4 23               inc hl
 386+ 99B5 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 99B6 69               ld l,c
 388+ 99B7 60               ld h,b
 389+ 99B8 22 68 89         ld (Contador_de_mov_masticados),hl
 390+ 99BB C9               ret
 391+ 99BC
# file closed: Movimiento.asm
1708  99BC              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 99BC              ; ******************************************************************************************************************************************************************************************
   2+ 99BC              ;
   3+ 99BC              ;   21/07/23
   4+ 99BC              ;
   5+ 99BC              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 99BC              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 99BC              ;
   8+ 99BC              ;
   9+ 99BC              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 99BC              ;
  11+ 99BC              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 99BC              ;               _ hacen las entidades hacia abajo.
  13+ 99BC              ;
  14+ 99BC              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 99BC              ;
  16+ 99BC              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 99BC              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 99BC              ;
  19+ 99BC              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 99BC              ;           _ la bala.
  21+ 99BC              ;
  22+ 99BC              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 99BC              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 99BC              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 99BC              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 99BC              ;           _ en el momento de generarse la bala)).
  27+ 99BC
  28+ 99BC              Genera_disparo
  29+ 99BC
  30+ 99BC              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 99BC              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 99BC              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 99BC              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 99BC              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 99BC              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 99BC              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 99BC
  38+ 99BC              ; Exclusiones:
  39+ 99BC
  40+ 99BC 3A 74 89         ld a,(Vel_down)
  41+ 99BF 47               ld b,a
  42+ 99C0 3A BA 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 99C3 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 99C4 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 99C5 3A 6B 89         ld a,(Columnas)
  46+ 99C8 47               ld b,a
  47+ 99C9 3A 49 89         ld a,(Columns)
  48+ 99CC B8               cp b
  49+ 99CD C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 99CE
  51+ 99CE              ; ----- ----- -----
  52+ 99CE
  53+ 99CE 3A 6A 89         ld a,(Ctrl_0)
  54+ 99D1 CB 77            bit 6,a
  55+ 99D3 20 06            jr nz,14F
  56+ 99D5
  57+ 99D5 3A 4F 89         ld a,(Coordenada_y)
  58+ 99D8 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 99DA D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 99DB
  61+ 99DB 21 31 81     14 ld hl,Indice_disparo
  62+ 99DE 3A 50 89         ld a,(CTRL_DESPLZ)
  63+ 99E1 4F               ld c,a
  64+ 99E2 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 99E4              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 99E4              ;                                            ""        ""       "f9", B="1"
  67+ 99E4              ;                                            ""        ""       "fb", B="2"
  68+ 99E4              ;                                            ""        ""       "fb", B="3"
  69+ 99E4 A7               and a
  70+ 99E5 28 10            jr z,1F
  71+ 99E7 E6 01            and 1
  72+ 99E9 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 99EA
  74+ 99EA 79               ld a,c
  75+ 99EB 16 F9            ld d,$f9
  76+ 99ED 23           2 inc hl
  77+ 99EE 23               inc hl
  78+ 99EF 04               inc b
  79+ 99F0 BA               cp d
  80+ 99F1 28 04            jr z,1F
  81+ 99F3 14               inc d
  82+ 99F4 14               inc d
  83+ 99F5 18 F6            jr 2B
  84+ 99F7
  85+ 99F7 CD 98 8B     1 call Extrae_address
  86+ 99FA E5               push hl
  87+ 99FB FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 99FD DD 21 9B 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9A01
  90+ 9A01              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9A01              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9A01
  93+ 9A01 3A 6A 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9A04 CB 77            bit 6,a
  95+ 9A06 20 04            jr nz,19F
  96+ 9A08
  97+ 9A08 AF               xor a
  98+ 9A09 32 C3 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9A0C
 100+ 9A0C 3A 5C 89     19 ld a,(Cuad_objeto)
 101+ 9A0F FE 02            cp 2
 102+ 9A11 38 66            jr c,3F
 103+ 9A13 28 64            jr z,3F
 104+ 9A15
 105+ 9A15              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9A15
 107+ 9A15 E6 01            and 1
 108+ 9A17 28 30            jr z,4F
 109+ 9A19
 110+ 9A19              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9A19              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9A19              ;
 113+ 9A19              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9A19              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9A19              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9A19
 117+ 9A19 2A 4A 89     	ld hl,(Posicion_actual)
 118+ 9A1C
 119+ 9A1C              ;   Amadeus o entidad ???.
 120+ 9A1C
 121+ 9A1C 3A 6A 89         ld a,(Ctrl_0)
 122+ 9A1F CB 77            bit 6,a
 123+ 9A21 28 0A            jr z,8F
 124+ 9A23
 125+ 9A23              ; 	Dispara Amadeus.
 126+ 9A23
 127+ 9A23 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9A25 CD C4 91         call PreviousScan
 129+ 9A28 CD C4 91         call PreviousScan
 130+ 9A2B
 131+ 9A2B              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9A2B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9A2B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9A2B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9A2B
 136+ 9A2B 18 11            jr 10F
 137+ 9A2D
 138+ 9A2D              ; 	Dispara Entidad.
 139+ 9A2D
 140+ 9A2D 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9A30              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9A30
 143+ 9A30              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9A30              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9A30
 146+ 9A30 C5               push bc
 147+ 9A31 06 10            ld b,16
 148+ 9A33 CD B5 91     9 call NextScan
 149+ 9A36 10 FB            djnz 9B
 150+ 9A38 C1               pop bc
 151+ 9A39 CD A3 9A         call Ajusta_disparo_parte_izquierda
 152+ 9A3C 18 06            jr 17F
 153+ 9A3E
 154+ 9A3E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9A3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9A3E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9A3E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9A3E
 159+ 9A3E CD A3 9A     10 call Ajusta_disparo_parte_izquierda
 160+ 9A41 CD 18 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9A44              ;                                                      ; _al generar el disparo.
 162+ 9A44
 163+ 9A44              ; 	LLegados a este punto tendremos:
 164+ 9A44              ;
 165+ 9A44              ;       Puntero_objeto_disparo en IY.
 166+ 9A44              ;       Rutinas_de_impresion en IX.
 167+ 9A44              ;       Puntero_de_impresion en HL.
 168+ 9A44              ;       Impacto/Dirección en BC.
 169+ 9A44
 170+ 9A44 CD AB 9A     17 call Almacena_disparo
 171+ 9A47 18 52            jr 6F                                             ; RET.
 172+ 9A49
 173+ 9A49              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9A49              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9A49              ;
 176+ 9A49              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9A49              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9A49              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9A49
 180+ 9A49 2A 4A 89     4 ld hl,(Posicion_actual)
 181+ 9A4C
 182+ 9A4C              ;   Amadeus o entidad ???.
 183+ 9A4C
 184+ 9A4C 3A 6A 89         ld a,(Ctrl_0)
 185+ 9A4F CB 77            bit 6,a
 186+ 9A51 28 0A            jr z,11F
 187+ 9A53
 188+ 9A53              ; 	Dispara Amadeus.
 189+ 9A53
 190+ 9A53 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9A55 CD C4 91         call PreviousScan
 192+ 9A58 CD C4 91         call PreviousScan
 193+ 9A5B
 194+ 9A5B              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9A5B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9A5B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9A5B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9A5B
 199+ 9A5B 18 11            jr 13F
 200+ 9A5D
 201+ 9A5D              ; 	Dispara Entidad.
 202+ 9A5D
 203+ 9A5D 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9A60              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9A60
 206+ 9A60              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9A60              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9A60
 209+ 9A60 C5               push bc
 210+ 9A61 06 10            ld b,16
 211+ 9A63 CD B5 91     12 call NextScan
 212+ 9A66 10 FB            djnz 12B
 213+ 9A68 C1               pop bc
 214+ 9A69
 215+ 9A69 CD 9C 9A         call Ajusta_disparo_parte_derecha
 216+ 9A6C 18 06            jr 18F
 217+ 9A6E
 218+ 9A6E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9A6E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9A6E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9A6E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9A6E
 223+ 9A6E CD 9C 9A     13 call Ajusta_disparo_parte_derecha
 224+ 9A71 CD 18 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9A74              ;                                                       ; _al generar el disparo.
 226+ 9A74
 227+ 9A74              ; LLegados a este punto tendremos:
 228+ 9A74              ;
 229+ 9A74              ;       Puntero_objeto_disparo en IY.
 230+ 9A74              ;       Rutinas_de_impresion en IX.
 231+ 9A74              ;       Puntero_de_impresion en HL.
 232+ 9A74              ;       Impacto/Dirección en BC.
 233+ 9A74
 234+ 9A74 CD AB 9A     18 call Almacena_disparo
 235+ 9A77 18 22            jr 6F                                               ; RET.
 236+ 9A79
 237+ 9A79              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9A79
 239+ 9A79 28 11        3 jr z,5F
 240+ 9A7B
 241+ 9A7B              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9A7B              ;
 243+ 9A7B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9A7B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9A7B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9A7B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9A7B
 248+ 9A7B              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9A7B              ;	   ""        ""       "f9", B="1"
 250+ 9A7B              ;	   ""        ""       "fb", B="2"
 251+ 9A7B              ; 	   ""        ""       "fb", B="3"
 252+ 9A7B
 253+ 9A7B 2A 4A 89     	ld hl,(Posicion_actual)
 254+ 9A7E CD B5 91     	call NextScan
 255+ 9A81
 256+ 9A81              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9A81              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9A81              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9A81              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9A81
 261+ 9A81 CD A3 9A         call Ajusta_disparo_parte_izquierda
 262+ 9A84
 263+ 9A84              ; 	No se produce impacto. B="$80"
 264+ 9A84              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9A84
 266+ 9A84 01 80 80         ld bc,$8080
 267+ 9A87
 268+ 9A87              ; 	LLegados a este punto tendremos:
 269+ 9A87              ;
 270+ 9A87              ;       Puntero_objeto_disparo en IY.
 271+ 9A87              ;       Rutinas_de_impresion en IX.
 272+ 9A87              ;       Puntero_de_impresion en HL.
 273+ 9A87              ;       Impacto/Dirección en BC.
 274+ 9A87
 275+ 9A87 CD AB 9A         call Almacena_disparo
 276+ 9A8A 18 0F            jr 6F                                           ; RET.
 277+ 9A8C
 278+ 9A8C              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9A8C              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9A8C              ;
 281+ 9A8C              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9A8C              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9A8C              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9A8C              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9A8C
 286+ 9A8C 2A 4A 89     5 ld hl,(Posicion_actual)
 287+ 9A8F CD B5 91     	call NextScan
 288+ 9A92
 289+ 9A92              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9A92              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9A92              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9A92              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9A92
 294+ 9A92 CD 9C 9A         call Ajusta_disparo_parte_derecha
 295+ 9A95
 296+ 9A95              ; 	No se produce impacto. B="$80"
 297+ 9A95              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9A95
 299+ 9A95 01 80 80     15 ld bc,$8080
 300+ 9A98
 301+ 9A98              ; 	LLegados a este punto tendremos:
 302+ 9A98              ;
 303+ 9A98              ;       Puntero_objeto_disparo en IY.
 304+ 9A98              ;       Rutinas_de_impresion en IX.
 305+ 9A98              ;       Puntero_de_impresion en HL.
 306+ 9A98              ;       Impacto/Dirección en BC.
 307+ 9A98
 308+ 9A98 CD AB 9A         call Almacena_disparo
 309+ 9A9B
 310+ 9A9B C9           6 ret
 311+ 9A9C
 312+ 9A9C              ; ----------------------------------------------------------------
 313+ 9A9C              ;
 314+ 9A9C              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9A9C              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9A9C              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9A9C
 318+ 9A9C 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9A9D FE 02            cp 2
 320+ 9A9F 38 01            jr c,1F
 321+ 9AA1 23               inc hl
 322+ 9AA2 C9           1 ret
 323+ 9AA3
 324+ 9AA3 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9AA4 FE 01        	cp 1
 326+ 9AA6 20 01        	jr nz,1F
 327+ 9AA8 2B           	dec hl
 328+ 9AA9 2B           1 dec hl
 329+ 9AAA C9               ret
 330+ 9AAB
 331+ 9AAB              ; ----------------------------------------------------------------
 332+ 9AAB              ;
 333+ 9AAB              ;   25/02/23
 334+ 9AAB              ;
 335+ 9AAB              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9AAB              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9AAB              ;
 338+ 9AAB              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9AAB              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9AAB
 341+ 9AAB              Almacena_disparo
 342+ 9AAB
 343+ 9AAB E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9AAC F1               pop af
 345+ 9AAD 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9AAE
 347+ 9AAE 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9AAF E6 01            and 1
 349+ 9AB1 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9AB3              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9AB3              ; 	Dispara AMADEUS.
 352+ 9AB3
 353+ 9AB3              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9AB3              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9AB3              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9AB3              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9AB3
 358+ 9AB3 C5               push bc
 359+ 9AB4 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9AB7 2A AD 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9ABA A7               and a
 362+ 9ABB ED 42            sbc hl,bc
 363+ 9ABD CC 1D 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9AC0 C1               pop bc
 365+ 9AC1 28 54            jr z,4F
 366+ 9AC3
 367+ 9AC3 2A AD 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9AC6 23               inc hl
 369+ 9AC7 23               inc hl
 370+ 9AC8 22 AD 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9ACB              ;                                                   ; _ Disparo_(+1).
 372+ 9ACB 18 18            jr 2F
 373+ 9ACD
 374+ 9ACD              ; Dispara una entidad.
 375+ 9ACD
 376+ 9ACD C5           1 push bc
 377+ 9ACE 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9AD1 2A AB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9AD4 A7               and a
 380+ 9AD5 ED 42            sbc hl,bc
 381+ 9AD7 CC 16 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9ADA C1               pop bc
 383+ 9ADB 28 3A            jr z,4F
 384+ 9ADD
 385+ 9ADD 2A AB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9AE0 23               inc hl
 387+ 9AE1 23               inc hl
 388+ 9AE2 22 AB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9AE5              ;                                                   ; _ Disparo_(+1).
 390+ 9AE5 CD 98 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9AE8              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9AE8              ;
 393+ 9AE8              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9AE8              ;                                                     Rutinas_de_impresion en IX.
 395+ 9AE8              ;                                                     Puntero_de_impresion en HL.
 396+ 9AE8              ;                                                     Impacto/Dirección en BC.
 397+ 9AE8
 398+ 9AE8 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9AE9 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9AEA 23               inc hl                                          ; _ al siguiente.
 401+ 9AEB A7               and a
 402+ 9AEC 20 C0            jr nz,3B
 403+ 9AEE
 404+ 9AEE 08               ex af,af
 405+ 9AEF ED 73 9A 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9AF3 F9               ld sp,hl
 407+ 9AF4
 408+ 9AF4 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9AF6 F5               push af                                         ; Puntero de impresión.
 410+ 9AF7 FD E5            push iy                                         ; Puntero objeto.
 411+ 9AF9 C5               push bc                                         ; Control.
 412+ 9AFA
 413+ 9AFA ED 7B 9A 89      ld sp,(Stack)
 414+ 9AFE
 415+ 9AFE              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9AFE
 417+ 9AFE 21 89 89     	ld hl,Ctrl_1
 418+ 9B01 CB C6        	set 0,(hl)
 419+ 9B03
 420+ 9B03 DD E5        	push ix
 421+ 9B05 E1               pop hl
 422+ 9B06 F5               push af
 423+ 9B07 DD E1            pop ix
 424+ 9B09
 425+ 9B09 CD BF 80     	call Guarda_foto_registros
 426+ 9B0C
 427+ 9B0C 21 89 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9B0F CB 86        	res 0,(hl)
 429+ 9B11
 430+ 9B11              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9B11              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9B11
 433+ 9B11 CD 1D 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9B14 CD 16 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9B17
 436+ 9B17 C9           4 ret
 437+ 9B18
 438+ 9B18              ; ----------------------------------------------------------------
 439+ 9B18              ;
 440+ 9B18              ;   4/3/23
 441+ 9B18              ;
 442+ 9B18              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9B18              ;   _ al generarse el disparo.
 444+ 9B18              ;
 445+ 9B18              ;       "$80" ..... No se produce colisión.
 446+ 9B18              ;       "$81" ..... Se produce colisión.
 447+ 9B18              ;
 448+ 9B18              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9B18              ;         _ que forman el disparo.
 450+ 9B18
 451+ 9B18
 452+ 9B18              Comprueba_Colision
 453+ 9B18
 454+ 9B18              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9B18
 456+ 9B18 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9B1A E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9B1B
 459+ 9B1B CD 51 9B         call Modifica_H_Velocidad_disparo
 460+ 9B1E
 461+ 9B1E 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9B1F FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9B21 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9B23
 465+ 9B23 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9B25 CD 41 9B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9B28
 468+ 9B28 7B               ld a,e
 469+ 9B29 E6 01            and 1
 470+ 9B2B 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9B2D              ;                                                  ; _ para activar IMPACTO.
 472+ 9B2D E1               pop hl
 473+ 9B2E E5               push hl
 474+ 9B2F CD B5 91         call NextScan
 475+ 9B32
 476+ 9B32 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9B33 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9B35 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9B37              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9B37 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9B39 CD 41 9B         call Bucle_2
 482+ 9B3C
 483+ 9B3C 43           1 ld b,e
 484+ 9B3D E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9B3E FD E1            pop iy
 486+ 9B40 C9               ret
 487+ 9B41
 488+ 9B41              ; ---------- ----------
 489+ 9B41
 490+ 9B41 06 02        Bucle_2 ld b,2
 491+ 9B43 FD 7E 00     2 ld a,(iy)
 492+ 9B46 A6               and (hl)
 493+ 9B47 28 02            jr z,1F
 494+ 9B49 1E 81            ld e,$81
 495+ 9B4B 23           1 inc hl
 496+ 9B4C FD 23            inc iy
 497+ 9B4E 10 F3            djnz 2B
 498+ 9B50 C9               ret
 499+ 9B51
 500+ 9B51              ; ---------- ----------
 501+ 9B51              ;
 502+ 9B51              ;   21/7/23
 503+ 9B51
 504+ 9B51              Modifica_H_Velocidad_disparo
 505+ 9B51
 506+ 9B51 3A BA 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9B54 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9B56 D0               ret nc                                         ; _ incrementamos H.
 509+ 9B57 24               inc h
 510+ 9B58
 511+ 9B58 C9               ret
 512+ 9B59
 513+ 9B59              ; -------------------------------------------------------------------------------------------------------------
 514+ 9B59              ;
 515+ 9B59              ;   04/12/23
 516+ 9B59              ;
 517+ 9B59              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9B59              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9B59              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9B59              ;
 521+ 9B59              ;   MODIFICA: HL,DE,B y A.
 522+ 9B59
 523+ 9B59              Genera_coordenadas_X
 524+ 9B59
 525+ 9B59              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9B59              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9B59
 528+ 9B59              ;   Limpiamos almacenes.
 529+ 9B59
 530+ 9B59 CD 8A 9B         call Limpia_Coordenadas_X
 531+ 9B5C
 532+ 9B5C              ;   Almacenamos coordenadas X.
 533+ 9B5C
 534+ 9B5C              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9B5C
 536+ 9B5C 2A 64 89         ld hl,(Puntero_de_impresion)
 537+ 9B5F 11 B7 89         ld de,Coordenadas_X_Entidad
 538+ 9B62 06 02            ld b,2
 539+ 9B64
 540+ 9B64 3A 50 89         ld a,(CTRL_DESPLZ)
 541+ 9B67 A7               and a
 542+ 9B68 28 01            jr z,1F
 543+ 9B6A 04               inc b
 544+ 9B6B
 545+ 9B6B CD 81 9B     1 call Guarda_coordenadas_X
 546+ 9B6E
 547+ 9B6E              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9B6E
 549+ 9B6E 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 9B71 11 B4 89         ld de,Coordenadas_X_Amadeus
 551+ 9B74 06 02            ld b,2
 552+ 9B76
 553+ 9B76 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 9B79 A7               and a
 555+ 9B7A 28 01            jr z,2F
 556+ 9B7C 04               inc b
 557+ 9B7D
 558+ 9B7D CD 81 9B     2 call Guarda_coordenadas_X
 559+ 9B80
 560+ 9B80              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9B80
 562+ 9B80 C9               ret
 563+ 9B81
 564+ 9B81              ; ----- ----- ----- ----- -----
 565+ 9B81
 566+ 9B81 7D           Guarda_coordenadas_X  ld a,l
 567+ 9B82 E6 1F            and $1f
 568+ 9B84 12           1 ld (de),a
 569+ 9B85 3C               inc a
 570+ 9B86 13               inc de
 571+ 9B87 10 FB            djnz 1B
 572+ 9B89 C9               ret
 573+ 9B8A
 574+ 9B8A AF           Limpia_Coordenadas_X xor a
 575+ 9B8B 06 06            ld b,6
 576+ 9B8D 21 B4 89         ld hl,Coordenadas_X_Amadeus
 577+ 9B90 77           1 ld (hl),a
 578+ 9B91 23               inc hl
 579+ 9B92 10 FC            djnz 1B
 580+ 9B94 C9               ret
 581+ 9B95
 582+ 9B95              ; ----- ----- ----- ----- -----
 583+ 9B95
 584+ 9B95              Compara_coordenadas_X
 585+ 9B95
 586+ 9B95 06 03            ld b,3
 587+ 9B97 11 B9 89         ld de,Coordenadas_X_Entidad+2
 588+ 9B9A
 589+ 9B9A 1A               ld a,(de)
 590+ 9B9B A7               and a
 591+ 9B9C 20 01            jr nz,2F
 592+ 9B9E 05               dec b
 593+ 9B9F
 594+ 9B9F 1B           2 dec de
 595+ 9BA0 1B               dec de
 596+ 9BA1 21 B4 89         ld hl,Coordenadas_X_Amadeus
 597+ 9BA4
 598+ 9BA4 D5           1 push de
 599+ 9BA5 E5               push hl
 600+ 9BA6 C5               push bc
 601+ 9BA7
 602+ 9BA7 CD B1 9B         call Comparando
 603+ 9BAA
 604+ 9BAA C1               pop bc
 605+ 9BAB E1               pop hl
 606+ 9BAC D1               pop de
 607+ 9BAD
 608+ 9BAD 13               inc de
 609+ 9BAE 10 F4            djnz 1B
 610+ 9BB0
 611+ 9BB0 C9               ret
 612+ 9BB1
 613+ 9BB1              ; ----- ----- ----- ----- -----
 614+ 9BB1              ;
 615+ 9BB1              ;   4/12/23
 616+ 9BB1              ;
 617+ 9BB1              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9BB1
 619+ 9BB1 06 03        Comparando ld b,3
 620+ 9BB3 1A               ld a,(de)
 621+ 9BB4 4E           2 ld c,(hl)
 622+ 9BB5 B9               cp c
 623+ 9BB6 28 04            jr z,1F
 624+ 9BB8 23               inc hl
 625+ 9BB9 10 F9            djnz 2B
 626+ 9BBB C9               ret
 627+ 9BBC
 628+ 9BBC 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9BBE 32 5D 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9BC1 21 AF 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9BC4 CB D6            set 2,(hl)
 632+ 9BC6 C9               ret
 633+ 9BC7
 634+ 9BC7              ; -----------------------------------------------------------------------
 635+ 9BC7              ;
 636+ 9BC7              ;   7/12/23
 637+ 9BC7              ;
 638+ 9BC7
 639+ 9BC7              Detecta_colision_nave_entidad
 640+ 9BC7
 641+ 9BC7              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9BC7
 643+ 9BC7 FD 2A 4C 89      ld iy,(Puntero_objeto)
 644+ 9BCB 2A 64 89         ld hl,(Puntero_de_impresion)
 645+ 9BCE
 646+ 9BCE E5               push hl
 647+ 9BCF
 648+ 9BCF              ; ----- ----- -----
 649+ 9BCF 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9BD1 06 0A            ld b,10
 651+ 9BD3 CD 03 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9BD6 7B               ld a,e
 653+ 9BD7 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9BD9 38 0E            jr c,3F
 655+ 9BDB
 656+ 9BDB              ; LLegados a este punto:
 657+ 9BDB              ;
 658+ 9BDB              ;   HAY COLISIÓN !!!!!.
 659+ 9BDB              ;
 660+ 9BDB              ;   .db (Impacto) de Amadeus a "1".
 661+ 9BDB              ;   SET el bit3 de (Impacto2).
 662+ 9BDB              ;
 663+ 9BDB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9BDB
 665+ 9BDB 21 5D 89         ld hl,Impacto
 666+ 9BDE 36 01            ld (hl),1
 667+ 9BE0 21 AF 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9BE3 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9BE5 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9BE7
 671+ 9BE7 18 18            jr 1F
 672+ 9BE9
 673+ 9BE9              ; -----
 674+ 9BE9
 675+ 9BE9 E1           3 pop hl
 676+ 9BEA CD B5 91         call NextScan
 677+ 9BED E5               push hl
 678+ 9BEE 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9BEF FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9BF1 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9BF3 30 0C            jr nc,1F
 682+ 9BF5              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9BF5 10 DC            djnz 2B
 684+ 9BF7
 685+ 9BF7              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9BF7
 687+ 9BF7              ; LLegados a este punto:
 688+ 9BF7              ;
 689+ 9BF7              ;   NO HAY COLISIÓN !!!!!.
 690+ 9BF7              ;
 691+ 9BF7              ;   .db (Impacto) de Amadeus a "0".
 692+ 9BF7              ;   RES el bit2 de (Impacto2).
 693+ 9BF7              ;
 694+ 9BF7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9BF7              ;   Lo colocamos a "0".
 696+ 9BF7
 697+ 9BF7 21 AF 89         ld hl,Impacto2
 698+ 9BFA CB 96            res 2,(hl)
 699+ 9BFC 2A B0 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9BFF 36 00            ld (hl),0
 701+ 9C01
 702+ 9C01 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9C02 C9               ret
 704+ 9C03
 705+ 9C03               ; ---------- ----------
 706+ 9C03
 707+ 9C03 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9C04 3A 49 89         ld a,(Columns)
 709+ 9C07 47               ld b,a
 710+ 9C08 FD 7E 00     2 ld a,(iy)
 711+ 9C0B BE               cp (hl)
 712+ 9C0C 28 01            jr z,1F
 713+ 9C0E
 714+ 9C0E 1C               inc e
 715+ 9C0F
 716+ 9C0F 23           1 inc hl
 717+ 9C10 FD 23            inc iy
 718+ 9C12 10 F4            djnz 2B
 719+ 9C14 C1               pop bc
 720+ 9C15 C9               ret
 721+ 9C16
 722+ 9C16              ; -------------------------------------------------------------------------------------------------------------
 723+ 9C16              ;
 724+ 9C16              ;   13/03/23
 725+ 9C16              ;
 726+ 9C16              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9C16              ;
 728+ 9C16              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9C16
 730+ 9C16 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9C19 7E               ld a,(hl)
 732+ 9C1A A7               and a
 733+ 9C1B C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9C1C
 735+ 9C1C 44               ld b,h
 736+ 9C1D 4D               ld c,l
 737+ 9C1E 2A A2 89         ld hl,(Stack_snapshot_disparos)
 738+ 9C21 E5               push hl
 739+ 9C22 A7               and a
 740+ 9C23 ED 42            sbc hl,bc
 741+ 9C25 E5               push hl
 742+ 9C26 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9C27
 744+ 9C27 E1               pop hl
 745+ 9C28 54               ld d,h
 746+ 9C29 5D               ld e,l
 747+ 9C2A 1B               dec de
 748+ 9C2B ED B8            lddr                                                ; Limpiamos.
 749+ 9C2D
 750+ 9C2D 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9C30 22 A2 89         ld (Stack_snapshot_disparos),hl
 752+ 9C33
 753+ 9C33 C9               ret
 754+ 9C34
 755+ 9C34              ; -------------------------------------------------------------------------------------------------------------
 756+ 9C34              ;
 757+ 9C34              ;   18/07/23
 758+ 9C34              ;
 759+ 9C34
 760+ 9C34              Motor_de_disparos
 761+ 9C34
 762+ 9C34              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9C34
 764+ 9C34 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9C37 2A AD 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9C3A
 767+ 9C3A CD 98 8B     2 call Extrae_address
 768+ 9C3D 7E               ld a,(hl)
 769+ 9C3E A7               and a
 770+ 9C3F 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9C41
 772+ 9C41              ; ----- ----- ----- ----- ----- -----
 773+ 9C41
 774+ 9C41 C5               push bc
 775+ 9C42 CD 06 9D         call foto_disparo_a_borrar
 776+ 9C45
 777+ 9C45              ; Existe colisión con este disparo???
 778+ 9C45
 779+ 9C45 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9C46 7E               ld a,(hl)
 781+ 9C47 2B               dec hl
 782+ 9C48 E6 01            and 1
 783+ 9C4A 28 1D            jr z,9F
 784+ 9C4C
 785+ 9C4C              ;   En este punto:
 786+ 9C4C              ;
 787+ 9C4C              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9C4C              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9C4C              ;   _con la entidad).
 790+ 9C4C              ;
 791+ 9C4C              ;   Disparo_2A defw 0                                ; Control.
 792+ 9C4C              ;    defw 0                                          ; Puntero objeto.
 793+ 9C4C              ;    defw 0                                          ; Puntero de impresión.
 794+ 9C4C              ;    defw 0                                          ; Rutina de impresión.
 795+ 9C4C
 796+ 9C4C E5               push hl
 797+ 9C4D
 798+ 9C4D 06 04            ld b,4
 799+ 9C4F 23           19 inc hl
 800+ 9C50 10 FD            djnz 19B
 801+ 9C52
 802+ 9C52 CD 98 8B         call Extrae_address
 803+ 9C55 CD E9 9E         call Genera_coordenadas_disparo
 804+ 9C58
 805+ 9C58              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9C58
 807+ 9C58 21 B2 89         ld hl,Coordenadas_disparo_certero
 808+ 9C5B 72               ld (hl),d
 809+ 9C5C 23               inc hl
 810+ 9C5D 73               ld (hl),e
 811+ 9C5E
 812+ 9C5E              ; Elimino el disparo de la base de datos.
 813+ 9C5E
 814+ 9C5E E1               pop hl
 815+ 9C5F CD 85 9D         call Elimina_disparo_de_base_de_datos
 816+ 9C62 21 AF 89         ld hl,Impacto2
 817+ 9C65 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9C67
 819+ 9C67 18 06            jr 11F
 820+ 9C69
 821+ 9C69 CD 2F 9D     9 call Mueve_disparo
 822+ 9C6C CD 06 9D         call foto_disparo_a_borrar
 823+ 9C6F
 824+ 9C6F C1           11 pop bc
 825+ 9C70 18 04            jr 7F
 826+ 9C72
 827+ 9C72              ; ----- ----- ----- ----- ----- -----
 828+ 9C72
 829+ 9C72 ED 42        1 sbc hl,bc
 830+ 9C74 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9C76
 832+ 9C76 2A AD 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9C79 23               inc hl
 834+ 9C7A 23               inc hl
 835+ 9C7B 22 AD 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9C7E 18 BA            jr 2B
 837+ 9C80
 838+ 9C80 CD 1D 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9C83              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9C83
 841+ 9C83              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9C83
 843+ 9C83 01 9F 86         ld bc,Disparo_11
 844+ 9C86 2A AB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9C89
 846+ 9C89 CD 98 8B     5 call Extrae_address
 847+ 9C8C 7E               ld a,(hl)
 848+ 9C8D A7               and a
 849+ 9C8E 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9C90
 851+ 9C90              ; ----- ----- ----- ----- ----- -----
 852+ 9C90
 853+ 9C90 C5               push bc
 854+ 9C91 CD 06 9D         call foto_disparo_a_borrar
 855+ 9C94
 856+ 9C94              ; Existe colisión con este disparo???
 857+ 9C94
 858+ 9C94 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9C95 7E               ld a,(hl)
 860+ 9C96 2B               dec hl
 861+ 9C97 E6 01            and 1
 862+ 9C99 28 4D            jr z,10F
 863+ 9C9B
 864+ 9C9B              ;! La colisión se produce con Amadeus???
 865+ 9C9B              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9C9B
 867+ 9C9B E5               push hl
 868+ 9C9C
 869+ 9C9C 06 04            ld b,4
 870+ 9C9E 23           16 inc hl
 871+ 9C9F 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9CA1
 873+ 9CA1 CD 98 8B         call Extrae_address
 874+ 9CA4 CD E9 9E         call Genera_coordenadas_disparo
 875+ 9CA7
 876+ 9CA7 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9CA8 FE 16            cp $16
 878+ 9CAA 38 2A            jr c,15F
 879+ 9CAC
 880+ 9CAC
 881+ 9CAC              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9CAC
 883+ 9CAC D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9CAD
 885+ 9CAD              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9CAD
 887+ 9CAD 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 9CB0
 889+ 9CB0              ; Coordenada X de Amadeus en D.
 890+ 9CB0
 891+ 9CB0 7D               ld a,l
 892+ 9CB1 E6 1F            and $1F
 893+ 9CB3 57               ld d,a
 894+ 9CB4
 895+ 9CB4 21 BB 86         ld hl,Amadeus_db+8
 896+ 9CB7 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9CB8
 898+ 9CB8 21 B4 89         ld hl,Coordenadas_X_Amadeus
 899+ 9CBB CD 81 9B         call Guarda_coordenadas_X
 900+ 9CBE
 901+ 9CBE D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9CBF
 903+ 9CBF              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9CBF
 905+ 9CBF 06 02            ld b,2
 906+ 9CC1 C5           20 push bc
 907+ 9CC2
 908+ 9CC2 06 03            ld b,3
 909+ 9CC4 21 B4 89         ld hl,Coordenadas_X_Amadeus
 910+ 9CC7 7E           18 ld a,(hl)
 911+ 9CC8 BA               cp d
 912+ 9CC9 20 04            jr nz,17F
 913+ 9CCB
 914+ 9CCB              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9CCB
 916+ 9CCB C1               pop bc
 917+ 9CCC E1               pop hl
 918+ 9CCD 18 0D            jr 14F
 919+ 9CCF
 920+ 9CCF 23           17 inc hl
 921+ 9CD0 10 F5            djnz 18B
 922+ 9CD2
 923+ 9CD2 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9CD3
 925+ 9CD3 C1               pop bc
 926+ 9CD4 10 EB            djnz 20B
 927+ 9CD6
 928+ 9CD6
 929+ 9CD6              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9CD6              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9CD6
 932+ 9CD6 E1           15 pop hl
 933+ 9CD7 23               inc hl
 934+ 9CD8 35               dec (hl)
 935+ 9CD9 2B               dec hl
 936+ 9CDA 18 0C            jr 10F
 937+ 9CDC
 938+ 9CDC              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9CDC              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9CDC
 941+ 9CDC E5           14 push hl
 942+ 9CDD CD 85 9D         call Elimina_disparo_de_base_de_datos
 943+ 9CE0 21 AF 89         ld hl,Impacto2
 944+ 9CE3 CB CE            set 1,(hl)
 945+ 9CE5 E1               pop hl
 946+ 9CE6 18 06            jr 12F
 947+ 9CE8
 948+ 9CE8              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9CE8
 950+ 9CE8 CD 2F 9D     10 call Mueve_disparo
 951+ 9CEB CD 06 9D         call foto_disparo_a_borrar
 952+ 9CEE C1           12 pop bc
 953+ 9CEF
 954+ 9CEF 18 04            jr 8F
 955+ 9CF1
 956+ 9CF1              ; ----- ----- ----- ----- ----- -----
 957+ 9CF1
 958+ 9CF1 ED 42        4 sbc hl,bc
 959+ 9CF3 28 0A            jr z,6F
 960+ 9CF5
 961+ 9CF5 2A AB 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9CF8 23               inc hl
 963+ 9CF9 23               inc hl
 964+ 9CFA 22 AB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9CFD 18 8A            jr 5B
 966+ 9CFF
 967+ 9CFF CD 16 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9D02 CD 8A 9B         call Limpia_Coordenadas_X
 969+ 9D05 C9               ret
 970+ 9D06
 971+ 9D06              ; ------------------------------------------------------------------
 972+ 9D06
 973+ 9D06              foto_disparo_a_borrar
 974+ 9D06
 975+ 9D06 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9D07 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9D08 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9D09
 979+ 9D09 E5               push hl
 980+ 9D0A 23               inc hl
 981+ 9D0B 23               inc hl
 982+ 9D0C ED 73 9A 89      ld (Stack),sp
 983+ 9D10 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9D11 FD E1            pop iy
 985+ 9D13 DD E1            pop ix
 986+ 9D15 E1               pop hl
 987+ 9D16 ED 7B 9A 89      ld sp,(Stack)
 988+ 9D1A 3A 89 89         ld a,(Ctrl_1)
 989+ 9D1D CB C7            set 0,a
 990+ 9D1F 32 89 89         ld (Ctrl_1),a
 991+ 9D22 CD BF 80         call Guarda_foto_registros
 992+ 9D25 3A 89 89         ld a,(Ctrl_1)
 993+ 9D28 CB 87            res 0,a
 994+ 9D2A 32 89 89         ld (Ctrl_1),a
 995+ 9D2D E1               pop hl
 996+ 9D2E C9               ret
 997+ 9D2F
 998+ 9D2F              ;---------------------------------------------------
 999+ 9D2F              ;
1000+ 9D2F              ;   18/07/23
1001+ 9D2F              ;
1002+ 9D2F
1003+ 9D2F              Mueve_disparo
1004+ 9D2F
1005+ 9D2F              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9D2F              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9D2F              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9D2F
1009+ 9D2F E5               push hl
1010+ 9D30
1011+ 9D30 7E               ld a,(hl)
1012+ 9D31
1013+ 9D31 06 04            ld b,4
1014+ 9D33 23           1 inc hl
1015+ 9D34 10 FD            djnz 1B
1016+ 9D36
1017+ 9D36              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9D36
1019+ 9D36 CD 98 8B         call Extrae_address
1020+ 9D39
1021+ 9D39 E6 01            and 1
1022+ 9D3B 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9D3D
1024+ 9D3D              ; Disparo hacia arriba, (Amadeus).
1025+ 9D3D
1026+ 9D3D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9D3D              ; _ de la dificultad.
1028+ 9D3D
1029+ 9D3D CD C4 91         call PreviousScan
1030+ 9D40 CD C4 91         call PreviousScan
1031+ 9D43 CD C4 91         call PreviousScan
1032+ 9D46 CD C4 91         call PreviousScan
1033+ 9D49
1034+ 9D49              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9D49
1036+ 9D49 7C               ld a,h
1037+ 9D4A FE 40            cp $40
1038+ 9D4C 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9D4E
1040+ 9D4E              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9D4E
1042+ 9D4E EB               ex de,hl
1043+ 9D4F 06 04            ld b,4
1044+ 9D51 2B           6 dec hl
1045+ 9D52 10 FD            djnz 6B
1046+ 9D54
1047+ 9D54 CD 85 9D         call Elimina_disparo_de_base_de_datos
1048+ 9D57 E1               pop hl
1049+ 9D58 18 10            jr 7F
1050+ 9D5A
1051+ 9D5A              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9D5A              ; HL contiene el puntero de impresión del disparo.
1053+ 9D5A              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9D5A
1055+ 9D5A D5           3 push de
1056+ 9D5B C5               push bc
1057+ 9D5C
1058+ 9D5C CD 18 9B         call Comprueba_Colision
1059+ 9D5F
1060+ 9D5F              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9D5F
1062+ 9D5F 78               ld a,b
1063+ 9D60
1064+ 9D60 C1               pop bc
1065+ 9D61 D1               pop de
1066+ 9D62
1067+ 9D62 EB               ex de,hl
1068+ 9D63
1069+ 9D63 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9D64 23               inc hl                                      ; _ movimiento.
1071+ 9D65 72               ld (hl),d
1072+ 9D66
1073+ 9D66 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9D67
1075+ 9D67 23               inc hl                                      ; _ en curso.
1076+ 9D68 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9D69 2B               dec hl
1078+ 9D6A
1079+ 9D6A C9           7 ret
1080+ 9D6B
1081+ 9D6B              ; Disparo hacia abajo, (Entidad).
1082+ 9D6B
1083+ 9D6B 3A BA 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9D6E 47               ld b,a
1085+ 9D6F
1086+ 9D6F CD B5 91     4 call NextScan
1087+ 9D72 10 FB            djnz 4B
1088+ 9D74
1089+ 9D74              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9D74
1091+ 9D74 7C               ld a,h
1092+ 9D75 FE 58            cp $58
1093+ 9D77 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9D79
1095+ 9D79 EB               ex de,hl
1096+ 9D7A 06 04            ld b,4
1097+ 9D7C 2B           5 dec hl
1098+ 9D7D 10 FD            djnz 5B
1099+ 9D7F
1100+ 9D7F CD 85 9D         call Elimina_disparo_de_base_de_datos
1101+ 9D82 E1               pop hl
1102+ 9D83 18 E5            jr 7B
1103+ 9D85
1104+ 9D85              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9D85
1106+ 9D85 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9D88 AF               xor a
1108+ 9D89 77               ld (hl),a
1109+ 9D8A 54               ld d,h
1110+ 9D8B 5D               ld e,l
1111+ 9D8C 13               inc de
1112+ 9D8D ED B0            ldir
1113+ 9D8F C9               ret
1114+ 9D90
1115+ 9D90              ; -----------------------------------------------------------------
1116+ 9D90              ;
1117+ 9D90              ;   7/12/23
1118+ 9D90              ;
1119+ 9D90
1120+ 9D90 3A AF 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9D93 A7               and a
1122+ 9D94 C8               ret z
1123+ 9D95
1124+ 9D95              ; Analizamos si hay impacto por disparos.
1125+ 9D95
1126+ 9D95              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9D95
1128+ 9D95 CB 4F            bit 1,a
1129+ 9D97 28 07            jr z,1F
1130+ 9D99
1131+ 9D99 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9D9C 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9D9E 18 08            jr 2F
1134+ 9DA0
1135+ 9DA0 CB 47        1 bit 0,a
1136+ 9DA2 C8               ret z
1137+ 9DA3
1138+ 9DA3              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9DA3
1140+ 9DA3 21 89 89         ld hl,Ctrl_1
1141+ 9DA6 CB D6            set 2,(hl)
1142+ 9DA8
1143+ 9DA8 C9           2 ret
1144+ 9DA9
1145+ 9DA9              ; -----------------------------------------------------------------
1146+ 9DA9              ;
1147+ 9DA9              ;   25/04/23
1148+ 9DA9              ;
1149+ 9DA9
1150+ 9DA9              Determina_resultado_comparativa
1151+ 9DA9
1152+ 9DA9              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9DA9              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9DA9              ;
1155+ 9DA9              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9DA9              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9DA9              ;
1158+ 9DA9              ;   SBC HL,DE
1159+ 9DA9
1160+ 9DA9              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9DA9              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9DA9
1163+ 9DA9              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9DA9              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9DA9
1166+ 9DA9
1167+ 9DA9 3A 5C 89         ld a,(Cuad_objeto)
1168+ 9DAC FE 02            cp 2
1169+ 9DAE 28 26            jr z,2F
1170+ 9DB0 38 24            jr c,2F
1171+ 9DB2
1172+ 9DB2              ; Cuadrantes 3º y 4º
1173+ 9DB2
1174+ 9DB2 E6 01            and 1
1175+ 9DB4 28 10            jr z,4F
1176+ 9DB6
1177+ 9DB6              ; Cuadrante 3º
1178+ 9DB6
1179+ 9DB6 7C               ld a,h
1180+ 9DB7 06 00            ld b,0
1181+ 9DB9
1182+ 9DB9 CD 44 9E         call Compara_cositas_H3
1183+ 9DBC
1184+ 9DBC 04               inc b
1185+ 9DBD 05               dec b
1186+ 9DBE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9DBF
1188+ 9DBF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9DC0 06 00            ld b,0
1190+ 9DC2
1191+ 9DC2 CD 56 9E         call Compara_cositas_L3
1192+ 9DC5 C9               ret
1193+ 9DC6
1194+ 9DC6              ; Cuadrante 4º
1195+ 9DC6
1196+ 9DC6 7C           4 ld a,h
1197+ 9DC7 06 00            ld b,0
1198+ 9DC9
1199+ 9DC9 CD 68 9E         call Compara_cositas_H4
1200+ 9DCC
1201+ 9DCC 04               inc b
1202+ 9DCD 05               dec b
1203+ 9DCE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9DCF
1205+ 9DCF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9DD0 06 00            ld b,0
1207+ 9DD2
1208+ 9DD2 CD 7E 9E         call Compara_cositas_L4
1209+ 9DD5 C9               ret
1210+ 9DD6
1211+ 9DD6              ; Cuadrantes 1º y 2º.
1212+ 9DD6
1213+ 9DD6 28 10        2 jr z,3F
1214+ 9DD8
1215+ 9DD8              ; 1er Cuadrante
1216+ 9DD8
1217+ 9DD8 7C               ld a,h
1218+ 9DD9 06 00            ld b,0
1219+ 9DDB
1220+ 9DDB CD 1C 9E         call Compara_cositas_H1
1221+ 9DDE
1222+ 9DDE 04               inc b
1223+ 9DDF 05               dec b
1224+ 9DE0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9DE1
1226+ 9DE1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9DE2 06 00            ld b,0
1228+ 9DE4
1229+ 9DE4 CD 32 9E         call Compara_cositas_L1
1230+ 9DE7 C9               ret
1231+ 9DE8
1232+ 9DE8
1233+ 9DE8              ; 2º Cuadrante
1234+ 9DE8
1235+ 9DE8 7C           3 ld a,h
1236+ 9DE9 06 00            ld b,0
1237+ 9DEB
1238+ 9DEB CD F8 9D         call Compara_cositas_H2
1239+ 9DEE
1240+ 9DEE 04               inc b
1241+ 9DEF 05               dec b
1242+ 9DF0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9DF1
1244+ 9DF1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9DF2 06 00            ld b,0
1246+ 9DF4
1247+ 9DF4 CD 0A 9E         call Compara_cositas_L2
1248+ 9DF7 C9               ret
1249+ 9DF8
1250+ 9DF8 A7           Compara_cositas_H2 and a
1251+ 9DF9 28 0D            jr z,1F
1252+ 9DFB              ;    cp $fd
1253+ 9DFB              ;    jr z,1F
1254+ 9DFB              ;    cp $fe
1255+ 9DFB              ;    jr z,1F
1256+ 9DFB FE FF            cp $ff
1257+ 9DFD 28 09            jr z,1F
1258+ 9DFF FE 01            cp $01
1259+ 9E01 28 05            jr z,1F
1260+ 9E03 FE 02            cp $02
1261+ 9E05 28 01            jr z,1F
1262+ 9E07 C0               ret nz
1263+ 9E08 04           1 inc b
1264+ 9E09 C9               ret
1265+ 9E0A
1266+ 9E0A A7           Compara_cositas_L2 and a
1267+ 9E0B 28 0D            jr z,1F
1268+ 9E0D              ;    cp $fd
1269+ 9E0D              ;    jr z,1F
1270+ 9E0D FE FE            cp $fe
1271+ 9E0F 28 09            jr z,1F
1272+ 9E11 FE FF            cp $ff
1273+ 9E13 28 05            jr z,1F
1274+ 9E15 FE 01            cp $01
1275+ 9E17 28 01            jr z,1F
1276+ 9E19              ;    cp $02
1277+ 9E19              ;    jr z,1F
1278+ 9E19 C0               ret nz
1279+ 9E1A 04           1 inc b
1280+ 9E1B C9               ret
1281+ 9E1C
1282+ 9E1C A7           Compara_cositas_H1 and a
1283+ 9E1D 28 11            jr z,1F
1284+ 9E1F              ;    cp $fd
1285+ 9E1F              ;    jr z,1F
1286+ 9E1F              ;    cp $fe
1287+ 9E1F              ;    jr z,1F
1288+ 9E1F FE FF            cp $ff
1289+ 9E21 28 0D            jr z,1F
1290+ 9E23 FE 01            cp $01
1291+ 9E25 28 09            jr z,1F
1292+ 9E27 FE 02            cp $02
1293+ 9E29 28 05            jr z,1F
1294+ 9E2B FE 03            cp $03
1295+ 9E2D 28 01            jr z,1F
1296+ 9E2F C0               ret nz
1297+ 9E30 04           1 inc b
1298+ 9E31 C9               ret
1299+ 9E32
1300+ 9E32 A7           Compara_cositas_L1 and a
1301+ 9E33 28 0D            jr z,1F
1302+ 9E35              ;    cp $fd
1303+ 9E35              ;    jr z,1F
1304+ 9E35              ;    cp $fe
1305+ 9E35              ;    jr z,1F
1306+ 9E35              ;    cp $ff
1307+ 9E35              ;    jr z,1F
1308+ 9E35 FE 01            cp $01
1309+ 9E37 28 09            jr z,1F
1310+ 9E39 FE 02            cp $02
1311+ 9E3B 28 05            jr z,1F
1312+ 9E3D FE 03            cp $03
1313+ 9E3F 28 01            jr z,1F
1314+ 9E41 C0               ret nz
1315+ 9E42 04           1 inc b
1316+ 9E43 C9               ret
1317+ 9E44
1318+ 9E44 A7           Compara_cositas_H3 and a
1319+ 9E45 28 0D            jr z,1F
1320+ 9E47              ;    cp $fd
1321+ 9E47              ;    jr z,1F
1322+ 9E47 FE FE            cp $fe
1323+ 9E49 28 09            jr z,1F
1324+ 9E4B FE FF            cp $ff
1325+ 9E4D 28 05            jr z,1F
1326+ 9E4F FE 01            cp $01
1327+ 9E51 28 01            jr z,1F
1328+ 9E53              ;    cp $02
1329+ 9E53              ;    jr z,1F
1330+ 9E53              ;    cp $03
1331+ 9E53              ;    jr z,1F
1332+ 9E53 C0               ret nz
1333+ 9E54 04           1 inc b
1334+ 9E55 C9               ret
1335+ 9E56
1336+ 9E56 A7           Compara_cositas_L3 and a
1337+ 9E57 28 0D            jr z,1F
1338+ 9E59              ;    cp $fd
1339+ 9E59              ;    jr z,1F
1340+ 9E59              ;    cp $fe
1341+ 9E59              ;    jr z,1F
1342+ 9E59              ;    cp $ff
1343+ 9E59              ;    jr z,1F
1344+ 9E59 FE 01            cp $01
1345+ 9E5B 28 09            jr z,1F
1346+ 9E5D FE 02            cp $02
1347+ 9E5F 28 05            jr z,1F
1348+ 9E61 FE 03            cp $03
1349+ 9E63 28 01            jr z,1F
1350+ 9E65 C0               ret nz
1351+ 9E66 04           1 inc b
1352+ 9E67 C9               ret
1353+ 9E68
1354+ 9E68 A7           Compara_cositas_H4 and a
1355+ 9E69 28 11            jr z,1F
1356+ 9E6B FE FD            cp $fd
1357+ 9E6D 28 0D            jr z,1F
1358+ 9E6F FE FE            cp $fe
1359+ 9E71 28 09            jr z,1F
1360+ 9E73 FE FF            cp $ff
1361+ 9E75 28 05            jr z,1F
1362+ 9E77 FE 01            cp $01
1363+ 9E79 28 01            jr z,1F
1364+ 9E7B              ;    cp $02
1365+ 9E7B              ;    jr z,1F
1366+ 9E7B              ;    cp $03
1367+ 9E7B              ;    jr z,1F
1368+ 9E7B C0               ret nz
1369+ 9E7C 04           1 inc b
1370+ 9E7D C9               ret
1371+ 9E7E
1372+ 9E7E A7           Compara_cositas_L4 and a
1373+ 9E7F 28 0D            jr z,1F
1374+ 9E81              ;    cp $fd
1375+ 9E81              ;    jr z,1F
1376+ 9E81 FE FE            cp $fe
1377+ 9E83 28 09            jr z,1F
1378+ 9E85 FE FF            cp $ff
1379+ 9E87 28 05            jr z,1F
1380+ 9E89 FE 01            cp $01
1381+ 9E8B 28 01            jr z,1F
1382+ 9E8D              ;    cp $02
1383+ 9E8D              ;    jr z,1F
1384+ 9E8D              ;    cp $03
1385+ 9E8D              ;    jr z,1F
1386+ 9E8D C0               ret nz
1387+ 9E8E 04           1 inc b
1388+ 9E8F C9               ret
# file closed: Disparo.asm
1709  9E90              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9E90              ; Relojes y temporizaciones.
   2+ 9E90
   3+ 9E90              ; ------------------------------------------------------
   4+ 9E90              ;
   5+ 9E90              ;	16/7/23
   6+ 9E90              ;
   7+ 9E90              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9E90              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9E90              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9E90              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9E90              ;
  12+ 9E90              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9E90              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9E90
  15+ 9E90              ; Disparo_entidad db 1
  16+ 9E90              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9E90              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9E90
  19+ 9E90              Habilita_disparos
  20+ 9E90
  21+ 9E90 7E           	ld a,(hl)
  22+ 9E91 A7           	and a
  23+ 9E92 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9E93
  25+ 9E93 EB           	ex de,hl
  26+ 9E94
  27+ 9E94 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9E95 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9E96
  30+ 9E96              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9E96
  32+ 9E96 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9E97 7E           	ld a,(hl)
  34+ 9E98 23           	inc hl
  35+ 9E99 77           	ld (hl),a
  36+ 9E9A
  37+ 9E9A EB           	ex de,hl						; Habilitamos disparo.
  38+ 9E9B 3E 01        	ld a,1
  39+ 9E9D 77           	ld (hl),a
  40+ 9E9E C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1710  9E9F              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9E9F              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9E9F              ;
   3+ 9E9F              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9E9F              ;
   5+ 9E9F              ; *****************************************************************************************************************************************************************************************
   6+ 9E9F              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9E9F
   8+ 9E9F 7C           calcula_tercio ld a,h
   9+ 9EA0 E6 18        	and $18
  10+ 9EA2 CB 2F        	sra a
  11+ 9EA4 CB 2F        	sra a
  12+ 9EA6 CB 2F        	sra a
  13+ 9EA8 C9           	ret
  14+ 9EA9
# file closed: calcula_tercio.asm
1711  9EA9              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9EA9              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9EA9              ;
   3+ 9EA9              ;
   4+ 9EA9              ;	CLS.
   5+ 9EA9              ;
   6+ 9EA9              ;	Limpia la pantalla y define sus atributos.
   7+ 9EA9              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9EA9              ;
   9+ 9EA9              ;	COLORES: 0 ..... NEGRO
  10+ 9EA9              ;    		 1 ..... AZUL
  11+ 9EA9              ; 			 2 ..... ROJO
  12+ 9EA9              ;			 3 ..... MAGENTA
  13+ 9EA9              ; 			 4 ..... VERDE
  14+ 9EA9              ; 			 5 ..... CIAN
  15+ 9EA9              ;			 6 ..... AMARILLO
  16+ 9EA9              ; 			 7 ..... BLANCO
  17+ 9EA9              ;
  18+ 9EA9              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9EA9              ;
  20+ 9EA9              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9EA9
  22+ 9EA9
  23+ 9EA9 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9EAC 11 01 40     	LD DE,$4001
  25+ 9EAF 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9EB2 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9EB4 ED B0        	LDIR
  28+ 9EB6 01 FF 02     	LD BC,767
  29+ 9EB9 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9EBA ED B0        	LDIR
  31+ 9EBC C9           	ret
  32+ 9EBD
# file closed: Cls.asm
1712  9EBD              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9EBD              ; ------------------------------------------------------------------------
   2+ 9EBD              ;
   3+ 9EBD              ;	30/1/24
   4+ 9EBD              ;
   5+ 9EBD              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9EBD              ;	Fila superior "0", Columna izquierda "0".
   7+ 9EBD              ;
   8+ 9EBD              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9EBD              ;
  10+ 9EBD              ;	Modifica: A,BC y DE.
  11+ 9EBD
  12+ 9EBD 7D           Genera_coordenadas ld a,l
  13+ 9EBE E6 1F        	and $1f
  14+ 9EC0 32 4E 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9EC3
  16+ 9EC3 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9EC4 FE 40        	cp $40
  18+ 9EC6 38 1C        	jr c,4F
  19+ 9EC8
  20+ 9EC8 CD 9F 9E     	call calcula_tercio
  21+ 9ECB 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9ECC
  23+ 9ECC 1E 00        	ld e,0
  24+ 9ECE 7D           	ld a,l
  25+ 9ECF E6 E0        	and $e0
  26+ 9ED1 28 01        	jr z,1F
  27+ 9ED3 04           	inc b
  28+ 9ED4
  29+ 9ED4 04           1 inc b
  30+ 9ED5 05           	dec b
  31+ 9ED6 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9ED8              ;														; _ , salimos.
  33+ 9ED8 1C           3 inc e
  34+ 9ED9 D6 20        	sub 32
  35+ 9EDB 20 FB        	jr nz,3B
  36+ 9EDD 10 F5        	djnz 1B
  37+ 9EDF
  38+ 9EDF 7B           2 ld a,e
  39+ 9EE0 32 4F 89     	ld (Coordenada_y),a
  40+ 9EE3 C9           	ret
  41+ 9EE4
  42+ 9EE4 AF           4 xor a
  43+ 9EE5 32 4F 89     	ld (Coordenada_y),a
  44+ 9EE8 C9           	ret
  45+ 9EE9
  46+ 9EE9              ; ------------------------------------------------------------------------
  47+ 9EE9              ;	28/05/23
  48+ 9EE9              ;
  49+ 9EE9              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9EE9              ;	Fila superior "0", Columna izquierda "0".
  51+ 9EE9              ;
  52+ 9EE9              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9EE9              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9EE9              ;
  55+ 9EE9              ;		DE="$120d"
  56+ 9EE9              ;
  57+ 9EE9              ;		D, (Coordenada_X), Columnas, $12
  58+ 9EE9              ;		E, (Coordenada_y), Filas, $0d
  59+ 9EE9              ;
  60+ 9EE9              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9EE9
  62+ 9EE9              ;	Modifica: A,BC y DE.
  63+ 9EE9
  64+ 9EE9
  65+ 9EE9              Genera_coordenadas_disparo
  66+ 9EE9
  67+ 9EE9              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9EE9
  69+ 9EE9 7D           	ld a,l
  70+ 9EEA E6 1F        	and $1f
  71+ 9EEC 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9EED CD 9F 9E     	call calcula_tercio
  73+ 9EF0 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9EF1 1E 00        	ld e,0
  75+ 9EF3 7D           	ld a,l
  76+ 9EF4 E6 E0        	and $e0
  77+ 9EF6 28 01        	jr z,1F
  78+ 9EF8 04           	inc b
  79+ 9EF9 1C           1 inc e
  80+ 9EFA D6 20        	sub 32
  81+ 9EFC 20 FB        	jr nz,1B
  82+ 9EFE 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9F00 C9           	ret
  84+ 9F01
# file closed: Genera_coordenadas.asm
1713  9F01              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F01              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F01              ;
   3+ 9F01              ;	12/12/23
   4+ 9F01              ;
   5+ 9F01              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F01
   7+ 9F01              ;	ADC HL,SP	LD (addr),SP
   8+ 9F01              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F01              ;	ADD IX,SP	LD SP,nn
  10+ 9F01              ; 	ADD IY,SP	LD SP,HL
  11+ 9F01              ;				LD SP,IX
  12+ 9F01              ;	DEC SP		LD SP,IY
  13+ 9F01
  14+ 9F01              ;	EX (SP),HL
  15+ 9F01              ;	EX (SP),IX
  16+ 9F01              ;	EX (SP),IY
  17+ 9F01
  18+ 9F01              ;	INC SP
  19+ 9F01
  20+ 9F01                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 9A 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 64 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 66 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A 89 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A A2 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 6A 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A A6 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A A0 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A 89 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 A2 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 6A 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 A6 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B 9A 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 A0 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B 9A 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A A0 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 A0 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1714  8131
1715  8131              	SAVESNA "Pruebas.sna", START
1716  8131
1717  8131
1718  8131
1719  8131
# file closed: Banco_de_pruebas.asm
