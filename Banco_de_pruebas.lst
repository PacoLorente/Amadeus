# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 66 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 6A A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 3B 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 90 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 8F 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8E 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8E 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 91 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 9F 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	10/11/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas).
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6B
  98+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A73 08 00
 100+ 8A75
 101+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7D 0F FE
 103+ 8A7F
 104+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB3
 118+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABB 06 00
 120+ 8ABD
 121+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC5 02 00
 123+ 8AC7
 124+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACF 04 00
 126+ 8AD1
 127+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD9 08 00
 129+ 8ADB
 130+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE3 02 00
 132+ 8AE5
 133+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AED 06 00
 135+ 8AEF
 136+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF7 06 00
 138+ 8AF9
 139+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF9
 141+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B29
 154+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5D
 168+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B65 06 00
 170+ 8B67
 171+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6F 02 00
 173+ 8B71
 174+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B79 04 00
 176+ 8B7B
 177+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B83 08 00
 179+ 8B85
 180+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8D 02 00
 182+ 8B8F
 183+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B97 06 00
 185+ 8B99
 186+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA1 06 00
 188+ 8BA3
 189+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD3
 202+ 8BD3
 203+ 8BD3
 204+ 8BD3
 205+ 8BD3
 206+ 8BD3
 207+ 8BD3
 208+ 8BD3
 209+ 8BD3
 210+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 E2 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDC 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BE0 01 01
  17+ 8BE2
  18+ 8BE2 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE3 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE7 01 02
  20+ 8BE9 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BED 01 02
  21+ 8BEF
# file closed: Niveles.asm
 150  8BEF
 151  8BEF              ; --------------------------------------------------------------------------------
 152  8BEF              ;
 153  8BEF              ; 12/05/24
 154  8BEF              ;
 155  8BEF              ; Parámetros DRAW.
 156  8BEF              ;
 157  8BEF
 158  8BEF              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEF
 160  8BEF 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BF0              ;															- Patrón de movimiento.
 162  8BF0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF2
 165  8BF2 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF3              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF3
 168  8BF3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF3              ; Ejemplos.
 171  8BF3
 172  8BF3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF3
 178  8BF3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF4
 182  8BF4 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF6              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF6
 185  8BF6 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF8
 187  8BF8              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF8
 189  8BF8 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BFA              ;														; _palabras que componen el "movimiento_masticado".
 191  8BFA
 192  8BFA              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BFA
 194  8BFA 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFB              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFB              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFB              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFB              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFB
 200  8BFB 00           Ctrl_2 db 0
 201  8BFC              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFC              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFC              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFC              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFC              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFC              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFC              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFC              ;
 209  8BFC              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFC              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFC              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFC              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFC              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFC              ;														BIT 4, ???
 215  8BFC              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFC
 217  8BFC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFD              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFD              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFD              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFD              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFD              ;
 223  8BFD              ; 														DESCRIPCIÖN:
 224  8BFD              ;
 225  8BFD              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFD              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFD              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFD              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFD              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFD              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFD              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFD              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFD              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFD              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFD              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFD              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFD              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFD              ;
 239  8BFD              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFD              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFD              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFD
 243  8BFD              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFD
 245  8BFD 00           Filas db 0												; Filas. [DRAW]
 246  8BFE 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C01 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C03
 250  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C03
 252  8C03 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C04              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C04              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C04
 256  8C04              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C04
 258  8C04              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C04              ;
 260  8C04              ;	COLORES: 0 ..... NEGRO
 261  8C04              ;    		 1 ..... AZUL
 262  8C04              ; 			 2 ..... ROJO
 263  8C04              ;			 3 ..... MAGENTA
 264  8C04              ; 			 4 ..... VERDE
 265  8C04              ; 			 5 ..... CIAN
 266  8C04              ;			 6 ..... AMARILLO
 267  8C04              ; 			 7 ..... BLANCO
 268  8C04
 269  8C04 00 00        Indice_Sprite_der defw 0
 270  8C06 00 00        Indice_Sprite_izq defw 0
 271  8C08 00 00        Puntero_DESPLZ_der defw 0
 272  8C0A 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0C
 274  8C0C 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0E 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0F 00           Columnas db 0
 277  8C10 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C12              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C12 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C13
 281  8C13              ; variables de control general.
 282  8C13
 283  8C13 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C14
 285  8C14              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C14
 287  8C14              Perfiles_de_velocidad
 288  8C14
 289  8C14 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C15 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C16 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C17 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C18
 294  8C18              ; Contadores de 16 bits.
 295  8C18
 296  8C18 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C1A 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1C 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1E 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C20
 301  8C20              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C20
 303  8C20 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C22 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C24 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C26              ;
 307  8C26              ;
 308  8C26 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C27              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C27              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C27 00           Incrementa_puntero_backup db 0
 312  8C28 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C29              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C29 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C2A 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2B 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2C              ;
 318  8C2C              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2C              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2C              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2C              ;
 322  8C2C              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2C              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2C              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2C              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2C              ;
 327  8C2C              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2C              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2C              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2C
 331  8C2C 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2D
 333  8C2D              ;														DESCRIPCIÓN:
 334  8C2D              ;
 335  8C2D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2D              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2D              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2D
 342  8C2D              ;														BIT 3, Recarga de nueva oleada.
 343  8C2D              ;														BIT 4, Recarga de nueva oleada.
 344  8C2D              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2D              ;														BIT 6, **** Frame completo.
 346  8C2D              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2D
 348  8C2D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2F
 353  8C2F              ; Gestión de ENTIDADES y CAJAS.
 354  8C2F
 355  8C2F 00 00        Puntero_store_caja defw 0
 356  8C31 00 00        Puntero_restore_caja defw 0
 357  8C33 00 00        Indice_restore_caja defw 0
 358  8C35 00 00        Puntero_indice_master defw 0
 359  8C37
 360  8C37 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C38 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C39 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C3A
 364  8C3A 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3C 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3E              ;														; _ puntero (Indice_entidades).
 367  8C3E
 368  8C3E              ;---------------------------------------------------------------------------------------------------------------
 369  8C3E              ;
 370  8C3E              ;	13/10/24
 371  8C3E              ;
 372  8C3E              ;	Álbumes.
 373  8C3E
 374  8C3E 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C40              ;														; _variable para almacenar lo posición del puntero_
 376  8C40              ; 														; _de pila, SP.
 377  8C40 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C42              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C42
 380  8C42              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C42
 382  8C42 00 00        Album_de_pintado defw 0
 383  8C44 00 00        Album_de_borrado defw 0
 384  8C46 00 00        Album_de_pintado_Amadeus defw 0
 385  8C48 00 00        Album_de_borrado_Amadeus defw 0
 386  8C4A
 387  8C4A 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4C 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4E
 390  8C4E 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C50 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C52
 393  8C52
 394  8C52 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C54
 396  8C54 00           Num_de_bytes_album_de_disparos db 0
 397  8C55 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C56
 399  8C56 07           Numero_de_disparos_de_entidades db 7
 400  8C57
 401  8C57 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C58 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C59
 404  8C59 00 00        Techo_Scanlines_album defw 0
 405  8C5B 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5D 00           Switch db 0
 407  8C5E 00 00        Techo defw 0
 408  8C60 00 00        Scanlines_album_SP defw 0
 409  8C62 00 89        India_SP defw Tabla_de_pintado
 410  8C64 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C66
 412  8C66 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C67              ;
 414  8C67              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C67              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C67              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C67              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C67              ;																Habilita el borrado/pintado de sprites.
 419  8C67              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C67              ;																_ a la baja.
 421  8C67              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C67              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C67              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C67              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C67              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C67              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C67
 428  8C67 00           Ctrl_4 db 0
 429  8C68 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C69              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C69              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C69
 433  8C69              ; Gestión de Disparos.
 434  8C69
 435  8C69 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6B 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6D 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6E
 439  8C6E              ;
 440  8C6E              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6E              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6E              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6E              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6E
 445  8C6E
 446  8C6E
 447  8C6E
 448  8C6E
 449  8C6E
 450  8C6E
 451  8C6E 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C70              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C70              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C70
 455  8C70 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C72              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C72 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C75              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C75 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C78              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C78
 462  8C78              ;---------------------------------------------------------------------------------------------------------------
 463  8C78
 464  8C78              ; Relojes y temporizaciones.
 465  8C78
 466  8C78 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C79 05           Clock_explosion_Amadeus db 5
 468  8C7A 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7B
 470  8C7B F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7D F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7F 00           Numero_rnd_disparos db 0
 473  8C80
 474  8C80 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C82 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C83              ;																		; Repite la oleada de entidades.
 477  8C83 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C84 A0           CLOCK_disparos_de_entidades db $a0
 479  8C85
 480  8C85              ;---------------------------------------------------------------------------------------------------------------
 481  8C85
 482  8C85              ; Gestión de NIVELES.
 483  8C85
 484  8C85 00           Nivel db 0												; Nivel actual del juego.
 485  8C86 00 00        Puntero_indice_NIVELES defw 0
 486  8C88 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C8A              ; 														; _ que definen el NIVEL.
 488  8C8A
 489  8C8A              ; ---------------------------------------------------------------------------------------------------------------
 490  8C8A
 491  8C8A              ; Temporizaciones Shield.
 492  8C8A
 493  8C8A 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8E 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C90 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C91 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C92 00           Shield_3 db 0
 498  8C93
 499  8C93 07           Lives db 7
 500  8C94
 501  8C94              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C94              ;
 503  8C94              ;	13/11/24
 504  8C94
 505  8C94              START
 506  8C94
 507  8C94 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C97 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C99 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9B ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9D F3           	DI
 512  8C9E
 513  8C9E              ; Limpiamos pantalla.
 514  8C9E
 515  8C9E 3E 07        	ld a,%00000111
 516  8CA0 CD EC 94     	call Cls
 517  8CA3 CD 84 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA6
 519  8CA6              INICIALIZACION
 520  8CA6
 521  8CA6 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA8 CD E5 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAB CD 03 8F     	call Extrae_numero_aleatorio_y_avanza
 524  8CAE 6F           	ld l,a
 525  8CAF 26 00        	ld h,0
 526  8CB1 22 80 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB4
 528  8CB4              ;	Inicia los álbumes de líneas.
 529  8CB4
 530  8CB4 CD D6 90     	call Inicia_albumes_de_lineas
 531  8CB7 CD E6 90     	call Inicia_albumes_de_lineas_Amadeus
 532  8CBA CD F3 90     	call Inicia_albumes_de_disparos
 533  8CBD
 534  8CBD              ;	Inicia 1er Nivel.
 535  8CBD
 536  8CBD CD 47 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CC0 CD 15 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CC3              ;														   _reponiendo entidades eliminadas.
 539  8CC3 CD 7B 93     	call Prepara_Cajas_de_Entidades
 540  8CC6
 541  8CC6              4
 542  8CC6
 543  8CC6              ;	call Inicia_Entidades
 544  8CC6 CD CC 93     	call Inicia_Amadeus
 545  8CC9
 546  8CC9              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC9              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC9              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC9
 550  8CC9 11 AE 89     	ld de,Amadeus_BOX
 551  8CCC CD BB 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCF CD 0F 94     	call Limpiamos_bandeja_DRAW
 553  8CD2
 554  8CD2              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD2
 556  8CD2 06 3C        	ld b,60
 557  8CD4 CD 8D 9D     2 call Amadeus_a_izquierda
 558  8CD7 10 FB        	djnz 2B
 559  8CD9
 560  8CD9 CD B4 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDC
 562  8CDC              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDC
 564  8CDC CD 0F 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDF
 566  8CDF CD 8F 91     	call Inicia_Shield
 567  8CE2
 568  8CE2 2A 60 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE5 22 59 8C     	ld (Techo_Scanlines_album),hl
 570  8CE8
 571  8CE8 2A 44 8C     	ld hl,(Album_de_borrado)
 572  8CEB 22 60 8C     	ld (Scanlines_album_SP),hl
 573  8CEE
 574  8CEE 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF1 22 62 8C     	ld (India_SP),hl
 576  8CF4
 577  8CF4 21 66 8C     	ld hl,Ctrl_3
 578  8CF7 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF9 CB D6        	set 2,(hl)
 580  8CFB CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFD
 582  8CFD FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFE
 584  8CFE 76           	halt
 585  8CFF
 586  8CFF              ; ------------------------------------
 587  8CFF
 588  8CFF              Main
 589  8CFF              ;
 590  8CFF              ; 07/11/24.
 591  8CFF
 592  8CFF              ; Gestión de disparos.
 593  8CFF
 594  8CFF CD D8 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8D02 CD 81 9F     	call Motor_de_disparos_entidades
 596  8D05 CD 16 A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D08
 598  8D08              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D08              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D08              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D08
 602  8D08 CD B7 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D0B
 604  8D0B              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D0B
 606  8D0B 21 84 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D0E 35           	dec (hl)
 608  8D0F CC 19 8E     	call z,Autoriza_disparo_de_entidades
 609  8D12
 610  8D12 2A 80 8C     	ld hl,(Clock_next_entity)
 611  8D15 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D19 A7           	and a
 613  8D1A ED 42        	sbc hl,bc
 614  8D1C 20 16        	jr nz,1F
 615  8D1E
 616  8D1E              ; GESTIÓN DE ENTIDADES.
 617  8D1E
 618  8D1E              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D1E              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D1E
 621  8D1E              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D1E              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D1E              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D1E
 625  8D1E 21 38 8C     	ld hl,Numero_parcial_de_entidades
 626  8D21 46           	ld b,(hl)
 627  8D22 3A 39 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D25 B8           	cp b
 629  8D26 28 0C        	jr z,1F
 630  8D28 30 0A        	jr nc,1F
 631  8D2A
 632  8D2A              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D2A
 634  8D2A 3C           	inc a
 635  8D2B 32 39 8C     	ld (Entidades_en_curso),a
 636  8D2E
 637  8D2E              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D2E
 639  8D2E CD 03 8F     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D31 CD 1F 8F     	call Define_Clock_next_entity
 641  8D34
 642  8D34 3A 39 8C     1 ld a,(Entidades_en_curso)
 643  8D37 A7           	and a
 644  8D38 CA C4 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D3B 47           	ld b,a												; No hay entidades que gestionar.
 646  8D3C
 647  8D3C              ; ( Código que ejecutamos con cada entidad: ).
 648  8D3C
 649  8D3C              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D3C              ;
 651  8D3C              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D3C
 653  8D3C 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3F 22 62 8C     	ld (India_SP),hl
 655  8D42
 656  8D42 21 66 8C     	ld hl,Ctrl_3
 657  8D45 CB D6        	set 2,(hl)
 658  8D47 CD AD 8E     	call Change
 659  8D4A
 660  8D4A C5           2 push bc 												; Nº de entidades en curso.
 661  8D4B
 662  8D4B DD 2A 2F 8C  	ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 663  8D4F CD 60 91     	call Salta_caja_de_entidades_vacia
 664  8D52
 665  8D52              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 666  8D52              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 667  8D52
 668  8D52 3A 6D 8C     	ld a,(Impacto2)
 669  8D55 CB 5F        	bit 3,a
 670  8D57 C4 AD A1     	call nz,Compara_con_coordenadas_de_disparo
 671  8D5A
 672  8D5A              ; Existe colisión entre esta entidad y Amadeus ???
 673  8D5A
 674  8D5A DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 675  8D5D CB 4F        	bit 1,a
 676  8D5F C4 6C 92     	call nz,Genera_explosion
 677  8D62 20 43        	jr nz,Gestiona_siguiente_entidad
 678  8D64
 679  8D64 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 680  8D67 A7           	and a
 681  8D68 28 0C        	jr z,3F
 682  8D6A
 683  8D6A              ; IMPACTO en entidad por colisión con Amadeus.
 684  8D6A
 685  8D6A              ; 5/7/24
 686  8D6A              ; Nota importante:
 687  8D6A              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 688  8D6A              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 689  8D6A              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 690  8D6A
 691  8D6A 3A B2 89     	ld a,(Impacto_Amadeus)
 692  8D6D A7           	and a
 693  8D6E C4 6C 92     	call nz,Genera_explosion
 694  8D71 20 34        	jr nz,Gestiona_siguiente_entidad
 695  8D73
 696  8D73              ; Falsa colisión !!!
 697  8D73
 698  8D73 32 F3 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 699  8D76
 700  8D76              ; -------------------------------------------
 701  8D76
 702  8D76 CD 63 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 703  8D79 CD 85 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 704  8D7C CD 53 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 705  8D7F
 706  8D7F DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 707  8D81 DD 2A F4 8B  	ld ix,(Puntero_de_impresion)
 708  8D85 CD 2C 95     	call Genera_datos_de_impresion
 709  8D88 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 710  8D8A
 711  8D8A CD 32 94     	call Decrementa_Contador_de_mov_masticados
 712  8D8D
 713  8D8D              ; -------------------------------------------
 714  8D8D
 715  8D8D              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 716  8D8D
 717  8D8D 2A F4 8B     	ld hl,(Puntero_de_impresion)
 718  8D90 CD 00 95     	call Genera_coordenadas
 719  8D93
 720  8D93 ED 4B F0 8B  	ld bc,(Coordenada_X)
 721  8D97
 722  8D97 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 723  8D9A DD 70 02     	ld (ix+2),b
 724  8D9D
 725  8D9D              ; TODO: Generamos disparo ???
 726  8D9D
 727  8D9D 3A 58 8C     	ld a,(Permiso_de_disparo_Entidades)
 728  8DA0 A7           	and a
 729  8DA1 C4 2E 8E     	call nz,Entidad_genera_disparo_si_procede
 730  8DA4
 731  8DA4 CD 31 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 732  8DA7
 733  8DA7              Gestiona_siguiente_entidad
 734  8DA7
 735  8DA7 CD 6F 91     	call Incrementa_punteros_de_cajas
 736  8DAA
 737  8DAA C1           	pop bc
 738  8DAB 10 9D        	djnz 2B
 739  8DAD
 740  8DAD              ; Hemos gestionado todas las entidades.
 741  8DAD              ; ----- ----- -----
 742  8DAD
 743  8DAD CD 77 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 744  8DB0 CD 8E 8F     	call Ordena_tabla_de_impresion
 745  8DB3 CD 0F 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 746  8DB6
 747  8DB6 CD 34 8F     	call Borra_diferencia
 748  8DB9
 749  8DB9 3A 66 8C     	ld a,(Ctrl_3)
 750  8DBC CB 5F        	bit 3,a
 751  8DBE 20 04        	jr nz,Gestion_de_Amadeus
 752  8DC0
 753  8DC0 EB           	ex de,hl
 754  8DC1 71           	ld (hl),c
 755  8DC2 2C           	inc l
 756  8DC3 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 757  8DC4
 758  8DC4              ;! GESTIONA AMADEUS !!!!!!!!!!
 759  8DC4
 760  8DC4              Gestion_de_Amadeus
 761  8DC4
 762  8DC4 21 66 8C     	ld hl,Ctrl_3
 763  8DC7 CB 76        	bit 6,(hl)
 764  8DC9 28 13        	jr z,Amadeus_vivo
 765  8DCB
 766  8DCB              ; Amadeus ha sido destruido.
 767  8DCB              ; Decrementa (Temp_new_live).
 768  8DCB
 769  8DCB 21 7A 8C     	ld hl,Temp_new_live
 770  8DCE 35           	dec (hl)
 771  8DCF 20 26        	jr nz,End_frame
 772  8DD1
 773  8DD1              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 774  8DD1
 775  8DD1 21 93 8C     	ld hl,Lives
 776  8DD4 35           	dec (hl)
 777  8DD5
 778  8DD5              ;! Fin del juego
 779  8DD5
 780  8DD5 F3           	di
 781  8DD6 28 FE        	jr z,$
 782  8DD8 FB           	ei
 783  8DD9
 784  8DD9              ; Nueva nave.
 785  8DD9
 786  8DD9 CD 4B 8E     	call Reinicia_Amadeus
 787  8DDC 18 19        	jr End_frame
 788  8DDE
 789  8DDE              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 790  8DDE
 791  8DDE              Amadeus_vivo
 792  8DDE
 793  8DDE 3A B2 89     	ld a,(Impacto_Amadeus)
 794  8DE1 A7           	and a
 795  8DE2 C4 B0 92     	call nz, Genera_explosion_Amadeus
 796  8DE5 20 10        	jr nz, End_frame
 797  8DE7
 798  8DE7 CD 49 92     	call Teclado
 799  8DEA 21 66 8C     	ld hl,Ctrl_3
 800  8DED
 801  8DED CB 6E        	bit 5,(hl)
 802  8DEF 28 06        	jr z,End_frame
 803  8DF1
 804  8DF1              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 805  8DF1
 806  8DF1 CD C8 8E     	call Change_Amadeus
 807  8DF4 CD B4 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 808  8DF7
 809  8DF7              End_frame
 810  8DF7
 811  8DF7              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 812  8DF7              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 813  8DF7
 814  8DF7 CD D8 A0     	call Genera_datos_de_impresion_disparos_Entidades
 815  8DFA CD 9C A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 816  8DFD CD F2 A1     	call Calcula_bytes_pintado_disparos
 817  8E00 CD FF A1     	call Limpia_album_de_pintado_disparos_entidades
 818  8E03
 819  8E03              ; ------------ ------------- --------------
 820  8E03
 821  8E03 2A 44 8C     	ld hl,(Album_de_borrado)
 822  8E06 22 60 8C     	ld (Scanlines_album_SP),hl
 823  8E09
 824  8E09 21 66 8C     	ld hl,Ctrl_3
 825  8E0C CB C6        	set 0,(hl) 											; Indica Frame completo.
 826  8E0E CB 9E        	res 3,(hl)
 827  8E10 CB A6        	res 4,(hl)
 828  8E12
 829  8E12 AF           	xor a
 830  8E13 D3 FE        	out ($fe),a
 831  8E15
 832  8E15 76           	halt
 833  8E16
 834  8E16              ; ----------------------------------------
 835  8E16
 836  8E16              ;	ld a,(Ctrl_1) 										; Existe Loop?
 837  8E16              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 838  8E16 CA FF 8C     	jp z,Main
 839  8E19
 840  8E19              ;------------------------------------------
 841  8E19              ;
 842  8E19              ;	07/11/24
 843  8E19
 844  8E19              Autoriza_disparo_de_entidades
 845  8E19
 846  8E19 3E 01        	ld a,1
 847  8E1B 32 58 8C     	ld (Permiso_de_disparo_Entidades),a
 848  8E1E
 849  8E1E 3A 83 8C     	ld a,(Repone_CLOCK_disparos)
 850  8E21 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 851  8E23 38 02        	jr c,1F
 852  8E25
 853  8E25              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 854  8E25              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 855  8E25              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 856  8E25
 857  8E25 D6 03        	sub 3
 858  8E27
 859  8E27 32 83 8C     1 ld (Repone_CLOCK_disparos),a
 860  8E2A 32 84 8C     	ld (CLOCK_disparos_de_entidades),a
 861  8E2D
 862  8E2D C9           	ret
 863  8E2E
 864  8E2E              ;------------------------------------------
 865  8E2E              ;
 866  8E2E              ;	14/09/24
 867  8E2E              ;
 868  8E2E              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 869  8E2E
 870  8E2E              Entidad_genera_disparo_si_procede
 871  8E2E
 872  8E2E 2A 7D 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 873  8E31 CB 06        	rlc (hl)
 874  8E33
 875  8E33 DC 28 A1     	call c,Genera_disparo_de_entidad_maldosa
 876  8E36
 877  8E36 C9           	ret
 878  8E37
 879  8E37              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 880  8E37              ;
 881  8E37              ;	30/09/24
 882  8E37
 883  8E37              Actuaiza_sp_de_disparos_de_entidades
 884  8E37
 885  8E37 2A 7D 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 886  8E3A 23           	inc hl
 887  8E3B 22 7D 8C     	ld (Puntero_num_aleatorios_disparos),hl
 888  8E3E
 889  8E3E 11 FD 88     	ld de,Numeros_aleatorios+7
 890  8E41 7B           	ld a,e
 891  8E42 95           	sub l
 892  8E43 C0           	ret nz
 893  8E44
 894  8E44 21 F6 88     1 ld hl,Numeros_aleatorios
 895  8E47 22 7D 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 896  8E4A C9           	ret
 897  8E4B
 898  8E4B              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 899  8E4B              ;
 900  8E4B              ;	24/07/24
 901  8E4B
 902  8E4B              Reinicia_Amadeus
 903  8E4B
 904  8E4B              ;	Reinicia posición y estado.
 905  8E4B
 906  8E4B 21 CF 50     	ld hl,$50cf
 907  8E4E 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 908  8E51 21 CC DC     	ld hl,$dccc
 909  8E54 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 910  8E57 21 3D 00     	ld hl,$003d
 911  8E5A 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 912  8E5D
 913  8E5D              ;	limpiamos el álbum de borrado.
 914  8E5D
 915  8E5D 2A 48 8C     	ld hl,(Album_de_borrado_Amadeus)
 916  8E60
 917  8E60 AF           	xor a
 918  8E61 77           	ld (hl),a
 919  8E62
 920  8E62 E5           	push hl
 921  8E63 D1           	pop de
 922  8E64 13           	inc de
 923  8E65
 924  8E65 01 23 00     	ld bc,35
 925  8E68 ED B0        	ldir
 926  8E6A
 927  8E6A CD B4 90     	call Genera_datos_de_impresion_Amadeus
 928  8E6D
 929  8E6D              ;	Reinicia temporizaciones.
 930  8E6D
 931  8E6D CD 8F 91     	call Inicia_Shield
 932  8E70
 933  8E70 3E 5A        	ld a,90
 934  8E72 32 90 8C     	ld (Shield),a
 935  8E75
 936  8E75 3E 64        	ld a,100
 937  8E77 32 7A 8C     	ld (Temp_new_live),a
 938  8E7A
 939  8E7A              ; 	Restauramos el FLAG: Amadeus vivo.
 940  8E7A
 941  8E7A 21 66 8C     	ld hl,Ctrl_3
 942  8E7D CB B6        	res 6,(hl)
 943  8E7F
 944  8E7F              ;	Fuerza la impresión de la nave en el siguiente frame.
 945  8E7F
 946  8E7F 21 66 8C      	ld hl,Ctrl_3
 947  8E82 CB EE        	set 5,(hl)
 948  8E84
 949  8E84 C9           	ret
 950  8E85
 951  8E85              ; --------------------------------------------------------------------------------------------------------------
 952  8E85              ;
 953  8E85              ;	23/11/24
 954  8E85
 955  8E85              Ajusta_velocidad_entidad
 956  8E85
 957  8E85 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 958  8E88 A7           	and a
 959  8E89 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 960  8E8A              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 961  8E8A              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 962  8E8A
 963  8E8A
 964  8E8A              ; Incrementa (Contador_de_vueltas)x2.
 965  8E8A              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 966  8E8A
 967  8E8A              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 968  8E8A              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 969  8E8A              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 970  8E8A              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 971  8E8A              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 972  8E8A
 973  8E8A
 974  8E8A CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
 975  8E8C DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
 976  8E8F E6 10        	and $10
 977  8E91 C8           	ret z
 978  8E92
 979  8E92              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 980  8E92
 981  8E92 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
 982  8E95 CB 2F        	sra a
 983  8E97 CB 2F        	sra a
 984  8E99 DD 77 0B     	ld (ix+11),a
 985  8E9C
 986  8E9C DD 6E 07     	ld l,(ix+7)
 987  8E9F DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
 988  8EA2
 989  8EA2              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
 990  8EA2 23           	inc hl
 991  8EA3 23           	inc hl
 992  8EA4 23           	inc hl
 993  8EA5 23           	inc hl
 994  8EA6              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
 995  8EA6
 996  8EA6 DD 75 07     	ld (ix+7),l
 997  8EA9 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
 998  8EAC
 999  8EAC C9           	ret
1000  8EAD
1001  8EAD              ; --------------------------------------------------------------------------------------------------------------
1002  8EAD              ;
1003  8EAD              ;	25/08/24
1004  8EAD
1005  8EAD              Change
1006  8EAD
1007  8EAD 3A 5D 8C     	ld a,(Switch)
1008  8EB0 EE 01        	xor 1
1009  8EB2 32 5D 8C     	ld (Switch),a
1010  8EB5 2A 42 8C     	ld hl,(Album_de_pintado)
1011  8EB8 ED 5B 44 8C  	ld de,(Album_de_borrado)
1012  8EBC EB           	ex de,hl
1013  8EBD 22 42 8C     	ld (Album_de_pintado),hl
1014  8EC0 22 60 8C     	ld (Scanlines_album_SP),hl
1015  8EC3 ED 53 44 8C  	ld (Album_de_borrado),de
1016  8EC7 C9           	ret
1017  8EC8
1018  8EC8              Change_Amadeus
1019  8EC8
1020  8EC8 2A 46 8C     	ld hl,(Album_de_pintado_Amadeus)
1021  8ECB ED 5B 48 8C  	ld de,(Album_de_borrado_Amadeus)
1022  8ECF EB           	ex de,hl
1023  8ED0 22 46 8C     	ld (Album_de_pintado_Amadeus),hl
1024  8ED3 ED 53 48 8C  	ld (Album_de_borrado_Amadeus),de
1025  8ED7 C9           	ret
1026  8ED8
1027  8ED8              Change_Disparos
1028  8ED8
1029  8ED8              ; Álbumes de Amadeus.
1030  8ED8
1031  8ED8 2A 4A 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1032  8EDB ED 5B 4C 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1033  8EDF EB           	ex de,hl
1034  8EE0 22 4A 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1035  8EE3 ED 53 4C 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1036  8EE7 CD E7 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1037  8EEA
1038  8EEA              ; Álbumes de entidades.
1039  8EEA
1040  8EEA 2A 4E 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1041  8EED ED 5B 50 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1042  8EF1 EB           	ex de,hl
1043  8EF2 22 4E 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1044  8EF5 ED 53 50 8C  	ld (Album_de_borrado_disparos_Entidades),de
1045  8EF9 22 52 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1046  8EFC
1047  8EFC 3A 54 8C     	ld a,(Num_de_bytes_album_de_disparos)
1048  8EFF 32 55 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1049  8F02
1050  8F02 C9           	ret
1051  8F03
1052  8F03              ; ------------------------------------
1053  8F03              ;
1054  8F03              ; 1/05/24
1055  8F03
1056  8F03              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1057  8F03              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1058  8F03
1059  8F03              ;	DESTRUYE: HL,DE,A
1060  8F03              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1061  8F03
1062  8F03              ;	Variables implicadas: (RND_SP).
1063  8F03
1064  8F03              Extrae_numero_aleatorio_y_avanza
1065  8F03
1066  8F03 21 00 89     	ld hl,Tabla_de_pintado
1067  8F06 EB           	ex de,hl
1068  8F07 2A 7B 8C     	ld hl,(RND_SP)
1069  8F0A EB           	ex de,hl
1070  8F0B A7           	and a
1071  8F0C ED 52        	sbc hl,de
1072  8F0E
1073  8F0E 2A 7B 8C     	ld hl,(RND_SP)
1074  8F11 20 06        	jr nz,1F
1075  8F13
1076  8F13              ; Sitúa HL al principio de la tabla de nº aleatorios.
1077  8F13
1078  8F13 21 F6 88     	ld hl,Numeros_aleatorios
1079  8F16 22 7B 8C     	ld (RND_SP),HL
1080  8F19
1081  8F19              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1082  8F19
1083  8F19 7E           1 ld a,(hl)
1084  8F1A 23           	inc hl
1085  8F1B 22 7B 8C     	ld (RND_SP),hl
1086  8F1E C9           	ret
1087  8F1F
1088  8F1F              ; ------------------------------------
1089  8F1F              ;
1090  8F1F              ; 1/05/24
1091  8F1F
1092  8F1F              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1093  8F1F              ; (1 a 4 segundos).
1094  8F1F              ; Actualizamos (Clock_next_entity) con A.
1095  8F1F
1096  8F1F              ;	DESTRUYE: A y B.
1097  8F1F              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1098  8F1F              ;			 Actualiza (Clock_next_entity) con A.
1099  8F1F
1100  8F1F              ;	Variables implicadas: (Clock_next_entity).
1101  8F1F
1102  8F1F              ; Notas:
1103  8F1F
1104  8F1F              ; 	$32 1 seg.
1105  8F1F              ; 	$64 2 seg.
1106  8F1F              ; 	$96 3 seg.
1107  8F1F              ; 	$c8 4 seg.
1108  8F1F              ; 	$fa 5 seg.
1109  8F1F
1110  8F1F              ; $ffff 1310,7 seg, 22 minutos.
1111  8F1F
1112  8F1F              ;	$0100  5 seg. aproximadamente.
1113  8F1F              ;	$0200 10 seg. aproximadamente.
1114  8F1F              ;	$0300 15 seg. aproximadamente.
1115  8F1F              ;	$0400 20 seg. aproximadamente.
1116  8F1F              ;	$0500 25 seg. aproximadamente.
1117  8F1F              ;	$0600 30 seg. aproximadamente.
1118  8F1F
1119  8F1F              Define_Clock_next_entity
1120  8F1F
1121  8F1F FE 34        	cp $34
1122  8F21 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1123  8F23
1124  8F23              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1125  8F23
1126  8F23 4F           3 ld c,a
1127  8F24 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1128  8F26 2A 78 5C     	ld hl,(FRAMES)
1129  8F29 A7           	and a
1130  8F2A ED 4A        	adc hl,bc
1131  8F2C 22 80 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1132  8F2F C9           	ret
1133  8F30
1134  8F30 3E 34        1 ld a,$34
1135  8F32 18 EF        	jr 3B
1136  8F34
1137  8F34              ; ------------------------------------
1138  8F34              ;
1139  8F34              ; 18/03/24
1140  8F34
1141  8F34              Borra_diferencia
1142  8F34
1143  8F34 ED 4B 60 8C  	ld bc,(Scanlines_album_SP)
1144  8F38
1145  8F38 3A 5D 8C     	ld a,(Switch)
1146  8F3B A7           	and a
1147  8F3C 28 08        	jr z,2F
1148  8F3E
1149  8F3E 2A 5B 8C     	ld hl,(Techo_Scanlines_album_2)
1150  8F41 11 5B 8C     	ld de,Techo_Scanlines_album_2
1151  8F44 18 06        	jr 3F
1152  8F46
1153  8F46 2A 59 8C     2 ld hl,(Techo_Scanlines_album)
1154  8F49 11 59 8C     	ld de,Techo_Scanlines_album
1155  8F4C
1156  8F4C              ; Diferencia.
1157  8F4C
1158  8F4C ED 42        3 sbc hl,bc
1159  8F4E
1160  8F4E C8           	ret z
1161  8F4F D8           	ret c
1162  8F50
1163  8F50              ; Nuevo techo, (más bajo que el anterior).
1164  8F50              ; Fijamos nuevo techo y borramos bytes sobrantes.
1165  8F50
1166  8F50 EB           	ex de,hl
1167  8F51
1168  8F51 71           	ld (hl),c
1169  8F52 2C           	inc l
1170  8F53 70           	ld (hl),b
1171  8F54
1172  8F54 AF           	xor a
1173  8F55 43           	ld b,e
1174  8F56
1175  8F56 2A 60 8C     	ld hl,(Scanlines_album_SP)
1176  8F59
1177  8F59 77           1 ld (hl),a
1178  8F5A 23           	inc hl
1179  8F5B 10 FC        	djnz 1B
1180  8F5D
1181  8F5D              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1182  8F5D
1183  8F5D 21 66 8C     	ld hl,Ctrl_3
1184  8F60 CB DE        	set 3,(hl)
1185  8F62
1186  8F62 C9           	ret
1187  8F63
1188  8F63              ; --------------------------------------------------------------------------------------------------------------
1189  8F63              ;
1190  8F63              ;	23/11/24
1191  8F63              ;
1192  8F63              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1193  8F63
1194  8F63              Entidad_a_Tabla_de_pintado
1195  8F63
1196  8F63              ; Almacena la Coordenada Y de la entidad en curso.
1197  8F63
1198  8F63              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1199  8F63
1200  8F63 DD 7E 02     	ld a,(ix+2)
1201  8F66 2A 62 8C     	ld hl,(India_SP)
1202  8F69 77           	ld (hl),a
1203  8F6A 2C           	inc l
1204  8F6B
1205  8F6B              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1206  8F6B
1207  8F6B ED 5B 60 8C  	ld de,(Scanlines_album_SP)
1208  8F6F
1209  8F6F 73           	ld (hl),e
1210  8F70 2C           	inc l
1211  8F71 72           	ld (hl),d
1212  8F72 2C           	inc l
1213  8F73
1214  8F73 22 62 8C     	ld (India_SP),hl
1215  8F76
1216  8F76 C9           	ret
1217  8F77
1218  8F77              ; --------------------------------------------------------------------------------------------------------------
1219  8F77              ;
1220  8F77              ;	27/03/24
1221  8F77              ;
1222  8F77
1223  8F77              Inicializa_India_y_limpia_Tabla_de_impresion
1224  8F77
1225  8F77 2A 62 8C     	ld hl,(India_SP)
1226  8F7A 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1227  8F7D
1228  8F7D 79           	ld a,c
1229  8F7E 95           	sub l
1230  8F7F 28 06        	jr z,2F
1231  8F81 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1232  8F82              ;														; _ y pasamos a inicializar (India_SP).
1233  8F82 AF           	xor a
1234  8F83
1235  8F83 77           1 ld (hl),a
1236  8F84 2C           	inc l
1237  8F85 10 FC        	djnz 1B												; Limpia Tabla.
1238  8F87
1239  8F87 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1240  8F8A 22 62 8C     	ld (India_SP),hl
1241  8F8D
1242  8F8D C9           	ret
1243  8F8E
1244  8F8E              ; --------------------------------------------------------------------------------------------------------------
1245  8F8E              ;
1246  8F8E              ;	31/3/24
1247  8F8E
1248  8F8E              Ordena_tabla_de_impresion
1249  8F8E
1250  8F8E              ; 5794 T/states.
1251  8F8E              ; 6278 T/states.
1252  8F8E              ; 5310 T/states.
1253  8F8E
1254  8F8E              ; Inicializamos punteros (India_SP) e (India_2_SP).
1255  8F8E              ; Inicializamos contador de comparaciones, [C].
1256  8F8E              ; Cargamos los registros A y B para efectuar comparación.
1257  8F8E
1258  8F8E FD 2E 00     	ld iyl,0
1259  8F91
1260  8F91 3A 39 8C     	ld a,(Entidades_en_curso)
1261  8F94 FE 04        	cp 4 	;	4
1262  8F96 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1263  8F97
1264  8F97 3D           	dec a
1265  8F98 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1266  8F99 51           	ld d,c 										; Copia de respaldo.
1267  8F9A
1268  8F9A 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1269  8F9B
1270  8F9B 21 03 89     	ld hl,Tabla_de_pintado+3
1271  8F9E 46           	ld b,(hl)
1272  8F9F 22 64 8C     	ld (India_2_SP),hl
1273  8FA2
1274  8FA2 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1275  8FA3 DC CB 8F     	call c, Avanza_India_2_SP
1276  8FA6 CC CB 8F     	call z, Avanza_India_2_SP
1277  8FA9
1278  8FA9 FD 2D        	dec iyl
1279  8FAB 28 18        	jr z,2F
1280  8FAD
1281  8FAD
1282  8FAD              ; --------------------------------------------------------------------------------------------------------------
1283  8FAD              ;
1284  8FAD              ;	7/4/24
1285  8FAD
1286  8FAD              Trueque
1287  8FAD
1288  8FAD              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1289  8FAD              ;  			A contiene en nº de fila de (India_SP).
1290  8FAD              ;			HL contiene (India_2_SP).
1291  8FAD
1292  8FAD D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1293  8FAE E5           	push hl										; Preservo (India_2_SP).
1294  8FAF
1295  8FAF ED 5B 62 8C  	ld de,(India_SP)
1296  8FB3 EB           	ex de,hl
1297  8FB4 70           	ld (hl),b
1298  8FB5 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1299  8FB6
1300  8FB6 CD F7 8F     	call Intercambia_1_byte
1301  8FB9 CD F7 8F     	call Intercambia_1_byte
1302  8FBC
1303  8FBC
1304  8FBC              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1305  8FBC              ; Recuperamos (India_2_SP) en HL.
1306  8FBC
1307  8FBC 2A 62 8C     	ld hl,(India_SP)
1308  8FBF 7E           	ld a,(hl)
1309  8FC0
1310  8FC0 E1           	pop hl
1311  8FC1 D1           	pop de
1312  8FC2
1313  8FC2              ; --------------------------------------------------------------------------------------------------------------
1314  8FC2
1315  8FC2 CD CB 8F     	call Avanza_India_2_SP
1316  8FC5
1317  8FC5 14           2 inc d
1318  8FC6 15           	dec d
1319  8FC7 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1320  8FC8 18 D8        	jr 1B
1321  8FCA
1322  8FCA C9           	ret
1323  8FCB
1324  8FCB              ; ----- ----- ----- ----- -----
1325  8FCB
1326  8FCB              Avanza_India_2_SP
1327  8FCB
1328  8FCB 0D           	dec c
1329  8FCC 28 0A        	jr z,Avanza_punteros_indios
1330  8FCE
1331  8FCE FD 2C        	inc iyl
1332  8FD0
1333  8FD0 2C           	inc l
1334  8FD1 2C           	inc l
1335  8FD2 2C           	inc l
1336  8FD3
1337  8FD3 46           	ld b,(hl)
1338  8FD4 22 64 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1339  8FD7
1340  8FD7 C9           	ret
1341  8FD8
1342  8FD8              ; ----- ----- ----- ----- -----
1343  8FD8
1344  8FD8              Avanza_punteros_indios
1345  8FD8
1346  8FD8 15           	dec d
1347  8FD9 28 15        	jr z,Prepara_salida
1348  8FDB
1349  8FDB 4A           	ld c,d
1350  8FDC
1351  8FDC 2A 62 8C     	ld hl,(India_SP)
1352  8FDF 2C           	inc l
1353  8FE0 2C           	inc l
1354  8FE1 2C           	inc l
1355  8FE2 7E           	ld a,(hl)
1356  8FE3 22 62 8C     	ld (India_SP),hl
1357  8FE6
1358  8FE6 2C           	inc l
1359  8FE7 2C           	inc l
1360  8FE8 2C           	inc l
1361  8FE9 46           	ld b,(hl)
1362  8FEA 22 64 8C     	ld (India_2_SP),hl
1363  8FED
1364  8FED FD 2C        	inc iyl
1365  8FEF
1366  8FEF C9           	ret
1367  8FF0
1368  8FF0              Prepara_salida
1369  8FF0
1370  8FF0 21 00 89     	ld hl,Tabla_de_pintado
1371  8FF3 22 62 8C     	ld (India_SP),hl
1372  8FF6 C9           	ret
1373  8FF7
1374  8FF7
1375  8FF7 2C           Intercambia_1_byte inc l
1376  8FF8 1C           	inc e
1377  8FF9 46           	ld b,(hl)
1378  8FFA 1A           	ld a,(de)
1379  8FFB EB           	ex de,hl
1380  8FFC 70           	ld (hl),b
1381  8FFD 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1382  8FFE C9           	ret
1383  8FFF
1384  8FFF              ; -----------------------------------------------------------------------------------
1385  8FFF              ;
1386  8FFF              ;	20/01/24
1387  8FFF              ;
1388  8FFF              ;
1389  8FFF
1390  8FFF              Construye_movimientos_masticados_entidad
1391  8FFF
1392  8FFF 2A F6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1393  9002 E5           	push hl
1394  9003 CD 46 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1395  9006              ;															; _ el (Contador_de_mov_masticados).
1396  9006 CD 2B 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1397  9009              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1398  9009 CD 13 9A     	call Recompone_posicion_inicio
1399  900C
1400  900C CD 43 97     1 call Draw
1401  900F CD 2B 90     	call Guarda_movimiento_masticado
1402  9012
1403  9012 CD C0 9D     	call Movimiento
1404  9015
1405  9015 3A 66 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1406  9018 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1407  901A 28 F0        	jr z,1B
1408  901C
1409  901C              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1410  901C              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1411  901C
1412  901C E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1413  901D 22 F6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1414  9020
1415  9020              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1416  9020
1417  9020 CD 24 9F     	call Situa_en_contador_general_de_mov_masticados
1418  9023
1419  9023              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1420  9023              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1421  9023
1422  9023 ED 4B F8 8B  	ld bc,(Contador_de_mov_masticados)
1423  9027
1424  9027 71           	ld (hl),c
1425  9028 23           	inc hl
1426  9029 70           	ld (hl),b
1427  902A
1428  902A C9           	ret
1429  902B
1430  902B              ; -----------------------------------------------------------------------------------
1431  902B              ;
1432  902B              ;	28/12/23
1433  902B              ;
1434  902B              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1435  902B              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1436  902B
1437  902B              Guarda_movimiento_masticado
1438  902B
1439  902B ED 73 3E 8C  	ld (Stack),sp
1440  902F ED 7B F6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1441  9033
1442  9033 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1443  9035 FD E5            push iy 												; Pushea Puntero_objeto.
1444  9037
1445  9037 ED 7B 3E 8C      ld sp,(Stack)
1446  903B
1447  903B 2A F8 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1448  903E 23           	inc hl
1449  903F 22 F8 8B     	ld (Contador_de_mov_masticados),hl
1450  9042
1451  9042 CD 46 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1452  9045              ;															; _ el (Contador_de_mov_masticados).
1453  9045 C9               ret
1454  9046
1455  9046              ; --------------------------------------------------------------------------------------------------------------
1456  9046              ;
1457  9046              ;	12/1/24
1458  9046              ;
1459  9046              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1460  9046
1461  9046              Actualiza_Puntero_de_almacen_de_mov_masticados
1462  9046
1463  9046 2A F6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1464  9049 01 04 00     	ld bc,4
1465  904C A7           	and a
1466  904D ED 4A        	adc hl,bc
1467  904F 22 F6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1468  9052 C9           	ret
1469  9053
1470  9053              ; ------------------------------------------
1471  9053              ;
1472  9053              ;	23/11/24
1473  9053              ;
1474  9053              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1475  9053
1476  9053
1477  9053              Obtenemos_puntero_de_impresion
1478  9053
1479  9053 DD 6E 07     	ld l,(ix+7)
1480  9056 DD 66 08     	ld h,(ix+8)
1481  9059
1482  9059              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1483  9059
1484  9059 ED 73 3E 8C  	ld (Stack),sp
1485  905D F9           	ld sp,hl
1486  905E
1487  905E AF           	xor a
1488  905F 67           	ld h,a
1489  9060 6C           	ld l,h															; ld hl,"0"
1490  9061
1491  9061 D1           	pop de															; (Puntero_objeto) en DE.
1492  9062 C1           	pop bc
1493  9063
1494  9063              ; 	Almacena (Puntero_de_impresion) en caja.
1495  9063
1496  9063 DD 71 05     	ld (ix+5),c
1497  9066 DD 70 06     	ld (ix+6),b
1498  9069
1499  9069 ED 43 F4 8B  	ld (Puntero_de_impresion),bc
1500  906D
1501  906D              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1502  906D
1503  906D 39           	add hl,sp
1504  906E DD 75 07     	ld (ix+7),l
1505  9071 DD 74 08     	ld (ix+8),h
1506  9074
1507  9074 C1           	pop bc
1508  9075
1509  9075 79           	ld a,c
1510  9076 80           	add b															; Comprueba si ya no hay datos en el almacén.
1511  9077
1512  9077 ED 7B 3E 8C  	ld sp,(Stack)
1513  907B
1514  907B CC 40 94     	call z,Reinicia_entidad_maliciosa
1515  907E
1516  907E C9           	ret
1517  907F
1518  907F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1519  907F              ;
1520  907F              ;	25/11/24
1521  907F
1522  907F              Cargamos_registros_con_explosion
1523  907F
1524  907F DD 6E 07     	ld l,(ix+7)
1525  9082 DD 66 08     	ld h,(ix+8)
1526  9085 CD 25 91     	call Extrae_address
1527  9088 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1528  9089
1529  9089 DD 6E 05     	ld l,(ix+5)
1530  908C DD 66 06     	ld h,(ix+6)
1531  908F
1532  908F E5           	push hl
1533  9090 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1534  9092
1535  9092 C9           	ret
1536  9093
1537  9093
1538  9093              Cargamos_registros_con_explosion_Amadeus
1539  9093
1540  9093 2A B5 89     	ld hl,(Pamm_Amadeus)
1541  9096 CD 25 91     	call Extrae_address
1542  9099
1543  9099 5D           	ld e,l
1544  909A 54           	ld d,h
1545  909B
1546  909B DD 2A B3 89  	ld ix,(p.imp.amadeus)
1547  909F
1548  909F C9           	ret
1549  90A0
1550  90A0              ; --------------------------------------------------------------------------------------------------------------
1551  90A0              ;
1552  90A0              ;	17/06/24
1553  90A0              ;
1554  90A0              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1555  90A0              ;
1556  90A0              ;	IX contiene el puntero de impresión.
1557  90A0              ;	DE contiene (Puntero_objeto).
1558  90A0
1559  90A0
1560  90A0              Cargamos_registros_con_mov_masticado_Amadeus
1561  90A0
1562  90A0 ED 73 3E 8C  	ld (Stack),sp
1563  90A4 ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1564  90A8 D1           	pop de 															; DE contiene Puntero_objeto
1565  90A9 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1566  90AB DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1567  90AF ED 7B 3E 8C  	ld sp,(Stack)
1568  90B3 C9           	ret
1569  90B4
1570  90B4              ; ---------------------------------------------------------------------------------------------------------------------
1571  90B4              ;
1572  90B4              ;	18/6/24
1573  90B4              ;
1574  90B4              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1575  90B4
1576  90B4              Genera_datos_de_impresion_Amadeus
1577  90B4
1578  90B4 3A B2 89     	ld a,(Impacto_Amadeus)
1579  90B7 A7           	and a
1580  90B8 20 03        	jr nz,1F
1581  90BA
1582  90BA              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1583  90BA              ; _apuntando a la correspondiente explosión.
1584  90BA
1585  90BA CD A0 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1586  90BD
1587  90BD DD 7D        1 ld a,ixl
1588  90BF E6 1F        	and $1f
1589  90C1 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1590  90C4
1591  90C4 2A 60 8C     	ld hl,(Scanlines_album_SP)
1592  90C7 E5           	push hl
1593  90C8
1594  90C8 2A 46 8C     	ld hl,(Album_de_pintado_Amadeus)
1595  90CB 22 60 8C     	ld (Scanlines_album_SP),hl
1596  90CE
1597  90CE CD 2C 95     	call Genera_datos_de_impresion
1598  90D1
1599  90D1 E1           	pop hl
1600  90D2 22 60 8C     	ld (Scanlines_album_SP),hl
1601  90D5
1602  90D5 C9           	ret
1603  90D6
1604  90D6              ; ---------------------------------------------------------------------------------------------------------------------
1605  90D6              ;
1606  90D6              ;	13/03/24
1607  90D6              ;
1608  90D6              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1609  90D6
1610  90D6              Inicia_albumes_de_lineas
1611  90D6
1612  90D6 21 00 80     	ld hl,Scanlines_album
1613  90D9 22 42 8C     	ld (Album_de_pintado),hl
1614  90DC 22 60 8C     	ld (Scanlines_album_SP),hl
1615  90DF
1616  90DF 21 1A 81     	ld hl,Scanlines_album_2
1617  90E2 22 44 8C     	ld (Album_de_borrado),hl
1618  90E5
1619  90E5 C9           	ret
1620  90E6
1621  90E6              Inicia_albumes_de_lineas_Amadeus
1622  90E6
1623  90E6 21 34 82     	ld hl,Amadeus_scanlines_album
1624  90E9 22 46 8C     	ld (Album_de_pintado_Amadeus),hl
1625  90EC 21 58 82     	ld hl,Amadeus_scanlines_album_2
1626  90EF 22 48 8C     	ld (Album_de_borrado_Amadeus),hl
1627  90F2
1628  90F2 C9           	ret
1629  90F3
1630  90F3              Inicia_albumes_de_disparos
1631  90F3
1632  90F3 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1633  90F6 22 4A 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1634  90F9 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1635  90FC 22 4C 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1636  90FF
1637  90FF 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1638  9102 22 4E 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1639  9105 22 52 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1640  9108
1641  9108 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1642  910B 22 50 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1643  910E
1644  910E C9           	ret
1645  910F
1646  910F              ; ---------------------------------------------------------------------------------------------------------------------
1647  910F              ;
1648  910F              ; 8/1/23
1649  910F              ;
1650  910F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1651  910F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1652  910F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1653  910F
1654  910F              ; Destruye HL y DE !!!!!
1655  910F
1656  910F              Inicia_punteros_de_cajas
1657  910F
1658  910F 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1659  9112 CD 25 91         call Extrae_address
1660  9115 22 2F 8C         ld (Puntero_store_caja),hl
1661  9118 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1662  911B 22 33 8C     	ld (Indice_restore_caja),hl
1663  911E CD 25 91     	call Extrae_address
1664  9121 22 31 8C     	ld (Puntero_restore_caja),hl
1665  9124 C9               ret
1666  9125
1667  9125              ; *************************************************************************************************************************************************************
1668  9125
1669  9125              ;
1670  9125              ; 20/10/22
1671  9125              ;
1672  9125              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1673  9125              ;
1674  9125              ; Destruye el puntero y DE !!!!!
1675  9125
1676  9125 5E           Extrae_address ld e,(hl)
1677  9126 23           	inc hl
1678  9127 56           	ld d,(hl)
1679  9128 2B           	dec hl
1680  9129 EB           	ex de,hl
1681  912A C9           	ret
1682  912B
1683  912B              ; *************************************************************************************************************************************************************
1684  912B              ;
1685  912B              ;	20/1/24
1686  912B              ;
1687  912B              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1688  912B              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1689  912B              ;
1690  912B              ;   Destruye HL y BC !!!!!,
1691  912B              ;
1692  912B              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1693  912B              ;					"0" ..... Izquierda.
1694  912B
1695  912B              Inicia_Puntero_objeto
1696  912B
1697  912B 3A 0E 8C     	ld a,(Cuad_objeto)
1698  912E E6 01        	and 1
1699  9130 F5           	push af
1700  9131 CC 4D 91     	call z,Inicia_puntero_objeto_izq
1701  9134 F1           	pop af
1702  9135 C8           	ret z
1703  9136 CD 3A 91     	call Inicia_puntero_objeto_der
1704  9139 C9           	ret
1705  913A
1706  913A              ; Arrancamos desde la parte izquierda de la pantalla.
1707  913A              ; Iniciamos (Indice_Sprite_der).
1708  913A
1709  913A 2A 04 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1710  913D 22 08 8C     	ld (Puntero_DESPLZ_der),hl
1711  9140 CD 25 91     	call Extrae_address
1712  9143 22 01 8C     	ld (Puntero_objeto),hl
1713  9146
1714  9146 2A 06 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1715  9149 22 0A 8C     	ld (Puntero_DESPLZ_izq),hl
1716  914C C9           	ret
1717  914D
1718  914D              ; Arrancamos desde la parte derecha de la pantalla.
1719  914D              ; Iniciamos (Indice_Sprite_izq).
1720  914D
1721  914D 2A 06 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1722  9150 22 0A 8C     	ld (Puntero_DESPLZ_izq),hl
1723  9153 CD 25 91     	call Extrae_address
1724  9156 22 01 8C     	ld (Puntero_objeto),hl
1725  9159
1726  9159 2A 04 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1727  915C 22 08 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1728  915F C9           	ret
1729  9160
1730  9160              ; **************************************************************************************************
1731  9160              ;
1732  9160              ;	27/11/24
1733  9160              ;
1734  9160              ;	INPUT: IX contiene (Puntero_store_caja).
1735  9160              ;
1736  9160              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1737  9160
1738  9160              Salta_caja_de_entidades_vacia
1739  9160
1740  9160 DD 7E 00     	ld a,(ix+0)
1741  9163 A7           	and a
1742  9164 C0           	ret nz
1743  9165
1744  9165 CD 6F 91     	call Incrementa_punteros_de_cajas
1745  9168 DD 2A 2F 8C  	ld ix,(Puntero_store_caja)
1746  916C 18 F2        	jr Salta_caja_de_entidades_vacia
1747  916E
1748  916E C9           	ret
1749  916F
1750  916F              ; **************************************************************************************************
1751  916F              ;
1752  916F              ;	08/05/23
1753  916F              ;
1754  916F              ;	Incrementamos los dos punteros de entidades. (+1).
1755  916F
1756  916F              Incrementa_punteros_de_cajas
1757  916F
1758  916F 2A 31 8C     	ld hl,(Puntero_restore_caja)
1759  9172 22 2F 8C     	ld (Puntero_store_caja),hl
1760  9175 2A 33 8C     	ld hl,(Indice_restore_caja)
1761  9178 23           	inc hl
1762  9179 23           	inc hl
1763  917A 22 33 8C     	ld (Indice_restore_caja),hl
1764  917D CD 25 91         call Extrae_address
1765  9180 22 31 8C         ld (Puntero_restore_caja),hl
1766  9183 C9               ret
1767  9184
1768  9184              ; -----------------------------------------------------------
1769  9184
1770  9184              ; Teclado.
1771  9184
1772  9184 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1773  9186 DB FE        	in a,($fe)
1774  9188 E6 01        	and $01
1775  918A 28 02        	jr z,1f
1776  918C 18 F6        	jr Pulsa_ENTER
1777  918E C9           1 ret
1778  918F
1779  918F              ; **************************************************************************************************
1780  918F              ;
1781  918F              ; Temporización.
1782  918F
1783  918F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1784  918F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1785  918F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1786  918F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1787  918F
1788  918F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1789  918F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1790  918F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1791  918F
1792  918F              ; A partir de $4f61 no hace falta DELAY.
1793  918F
1794  918F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1795  918F
1796  918F              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1797  918F              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1798  918F              ;	LD A,B
1799  918F              ;	AND A
1800  918F              ;	JR NZ,wait
1801  918F              ;	RET
1802  918F
1803  918F              ; ---------------------------------------------------------------------------------------------------------------
1804  918F              ;
1805  918F              ;	13/07/24
1806  918F              ;
1807  918F
1808  918F              Inicia_Shield
1809  918F
1810  918F 21 8A 8C     	ld hl,Datos_Shield
1811  9192 22 8E 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1812  9195
1813  9195 7E           	ld a,(hl)
1814  9196 32 91 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1815  9199
1816  9199 3E 01        	ld a,1
1817  919B 32 92 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1818  919E
1819  919E C9           	ret
1820  919F
1821  919F              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1822  919F              ;
1823  919F              ;	4/6/24
1824  919F              ;
1825  919F              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1826  919F              ;
1827  919F              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1828  919F              ;
1829  919F
1830  919F              Actualiza_pantalla
1831  919F
1832  919F 3E 02        	ld a,2
1833  91A1 D3 FE        	out ($fe),a
1834  91A3
1835  91A3 3A 66 8C     	ld a,(Ctrl_3)
1836  91A6 CB 57        	bit 2,a
1837  91A8 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1838  91AA
1839  91AA              Borrando_entidades
1840  91AA
1841  91AA 2A 60 8C     	ld hl,(Scanlines_album_SP)
1842  91AD CD 25 91     	call Extrae_address
1843  91B0 24           	inc h
1844  91B1 25           	dec h
1845  91B2 28 05        	jr z,Pintando_entidades
1846  91B4 CD 20 96     	call Pinta_Sprites
1847  91B7 18 F1        	jr Borrando_entidades
1848  91B9
1849  91B9              Pintando_entidades
1850  91B9
1851  91B9 2A 62 8C     	ld hl,(India_SP)
1852  91BC 2C           	inc l
1853  91BD CD 25 91     	call Extrae_address
1854  91C0 24           	inc h
1855  91C1 25           	dec h
1856  91C2 28 0E        	jr z,Ejecuta_escudo
1857  91C4 1C           	inc e
1858  91C5 1C           	inc e
1859  91C6 ED 53 62 8C  	ld (India_SP),de
1860  91CA CD 25 91     	call Extrae_address
1861  91CD CD 20 96     	call Pinta_Sprites
1862  91D0 18 E7        	jr Pintando_entidades
1863  91D2
1864  91D2              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1865  91D2
1866  91D2              Ejecuta_escudo
1867  91D2
1868  91D2 3A 90 8C     	ld a,(Shield)
1869  91D5 A7           	and a
1870  91D6 20 2F        	jr nz,Aplica_Shield
1871  91D8
1872  91D8              Borrando_Amadeus
1873  91D8
1874  91D8 21 66 8C     	ld hl,Ctrl_3
1875  91DB CB 6E        	bit 5,(hl)
1876  91DD 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1877  91DF
1878  91DF 2A 48 8C     	ld hl,(Album_de_borrado_Amadeus)
1879  91E2 CD 25 91     	call Extrae_address
1880  91E5 24           	inc h
1881  91E6 25           	dec h
1882  91E7 28 03        	jr z,Pintando_Amadeus
1883  91E9 CD 20 96     	call Pinta_Sprites
1884  91EC
1885  91EC              Pintando_Amadeus
1886  91EC
1887  91EC 2A 46 8C     	ld hl,(Album_de_pintado_Amadeus)
1888  91EF CD 25 91     	call Extrae_address
1889  91F2 24           	inc h
1890  91F3 25           	dec h
1891  91F4 28 03        	jr z,1F
1892  91F6 CD 20 96     	call Pinta_Sprites
1893  91F9
1894  91F9              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1895  91F9
1896  91F9 21 66 8C     1 ld hl,Ctrl_3
1897  91FC CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1898  91FE CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1899  9200 CB AE        	res 5,(hl)
1900  9202
1901  9202 3E 01        	ld a,1												; Borde azul.
1902  9204 D3 FE        	out ($fe),a
1903  9206
1904  9206 C9           	ret
1905  9207
1906  9207              Aplica_Shield
1907  9207
1908  9207              ;	Bit 1 "1" (Shield_3) Sólo borra.
1909  9207              ;		  "0"     ""     Borra/Pinta.
1910  9207              ;	Bit 2    ""  RET.	 No borra, no pinta.
1911  9207
1912  9207 21 92 8C     	ld hl,Shield_3
1913  920A
1914  920A CB 5E        	bit 3,(hl)
1915  920C 20 DE        	jr nz,Pintando_Amadeus
1916  920E
1917  920E CB 56        	bit 2,(hl)
1918  9210 20 E7        	jr nz,1B
1919  9212
1920  9212 CB 4E        	bit 1,(hl)
1921  9214 C4 1B 92     	call nz,Borra_Amadeus_shield
1922  9217
1923  9217 28 BF        	jr z,Borrando_Amadeus
1924  9219 18 DE        	jr 1B
1925  921B
1926  921B              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1927  921B
1928  921B              Borra_Amadeus_shield
1929  921B
1930  921B 3A 66 8C     	ld a,(Ctrl_3)
1931  921E CB 6F        	bit 5,a
1932  9220 28 08        	jr z,1F
1933  9222
1934  9222 2A 48 8C     	ld hl,(Album_de_borrado_Amadeus)
1935  9225 CD 25 91     	call Extrae_address
1936  9228 18 06        	jr 2F
1937  922A
1938  922A 2A 46 8C     1 ld hl,(Album_de_pintado_Amadeus)
1939  922D CD 25 91     	call Extrae_address
1940  9230
1941  9230 CD 20 96     2 call Pinta_Sprites
1942  9233
1943  9233 AF           	xor a
1944  9234 3C           	inc a											; Asegura NZ en la salida de la rutina.
1945  9235
1946  9235 C9           	ret
1947  9236
1948  9236              Pinta_Amadeus_shield
1949  9236
1950  9236 2A 46 8C     	ld hl,(Album_de_pintado_Amadeus)
1951  9239 CD 25 91     	call Extrae_address
1952  923C CD 20 96     	call Pinta_Sprites
1953  923F
1954  923F AF           	xor a
1955  9240 3C           	inc a											; Asegura NZ en la salida de la rutina.
1956  9241
1957  9241 C9           	ret
1958  9242
1959  9242              Borra_Pinta_Amadeus_shield
1960  9242
1961  9242 CD 1B 92     	call Borra_Amadeus_shield
1962  9245 CD 36 92     	call Pinta_Amadeus_shield
1963  9248 C9           	ret
1964  9249
1965  9249              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1966  9249              ;
1967  9249              ;	19/6/24
1968  9249              ;
1969  9249
1970  9249              Teclado
1971  9249
1972  9249              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1973  9249
1974  9249 3E F7        	ld a,$f7												; "5" para disparar.
1975  924B DB FE        	in a,($fe)
1976  924D E6 10        	and $10
1977  924F
1978  924F CC BB A2     	call z,Genera_disparo_Amadeus
1979  9252
1980  9252 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1981  9254 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1982  9256 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1983  9258 CC 8D 9D         call z,Amadeus_a_izquierda
1984  925B
1985  925B 3E F7        	ld a,$f7
1986  925D DB FE        	in a,($fe)
1987  925F E6 01        	and $01
1988  9261 C8           	ret z
1989  9262
1990  9262 3E F7        	ld a,$f7
1991  9264 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1992  9266 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1993  9268 CC A5 9D     	call z,Amadeus_a_derecha
1994  926B
1995  926B C9           	ret
1996  926C
1997  926C              ; ------------------------------------------------------------------------------------------------------------------------
1998  926C              ;
1999  926C              ;	06/07/24
2000  926C              ;
2001  926C
2002  926C              Genera_explosion
2003  926C
2004  926C 21 78 8C     	ld hl,Clock_explosion
2005  926F 35           	dec (hl)
2006  9270 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2007  9272
2008  9272              Borra_entidad_colisionada
2009  9272
2010  9272 CD 63 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2011  9275
2012  9275 DD E5        	push ix
2013  9277 CD 7F 90     	call Cargamos_registros_con_explosion
2014  927A CD 2C 95     	call Genera_datos_de_impresion
2015  927D DD E1        	pop ix
2016  927F
2017  927F AF           	xor a
2018  9280 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2019  9281
2020  9281 C9           	ret
2021  9282
2022  9282              Siguiente_frame_explosion
2023  9282
2024  9282 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2025  9284
2026  9284              ; Avanza Frame de explosión.
2027  9284
2028  9284 DD 6E 07     	ld l,(ix+7)
2029  9287 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2030  928A
2031  928A 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2032  928D
2033  928D 79           	ld a,c
2034  928E 95           	sub l
2035  928F 20 15        	jr nz,1F
2036  9291
2037  9291              ; Fín de la entidad !!!!!!!!!!!!!
2038  9291
2039  9291 21 38 8C     	ld hl,Numero_parcial_de_entidades
2040  9294 35           	dec (hl)
2041  9295 23           	inc hl
2042  9296 35           	dec (hl)														; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso)
2043  9297
2044  9297              ; !! Provisional. Limpia la caja de entidades.
2045  9297
2046  9297 DD E5        	push ix
2047  9299 E1           	pop hl
2048  929A AF           	xor a
2049  929B 77           	ld (hl),a
2050  929C 5D           	ld e,l
2051  929D 54           	ld d,h
2052  929E 1C           	inc e
2053  929F 01 0B 00     	ld bc,11
2054  92A2 ED B0        	ldir
2055  92A4
2056  92A4 18 CC        	jr Borra_entidad_colisionada
2057  92A6
2058  92A6 23           1 inc hl
2059  92A7 23           	inc hl
2060  92A8
2061  92A8 DD 75 07     	ld (ix+7),l
2062  92AB DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2063  92AE
2064  92AE 18 C2        	jr Borra_entidad_colisionada
2065  92B0
2066  92B0              ; ----- ----- ----- ----- -----
2067  92B0
2068  92B0              Genera_explosion_Amadeus
2069  92B0
2070  92B0 21 79 8C     	ld hl,Clock_explosion_Amadeus
2071  92B3 35           	dec (hl)
2072  92B4 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2073  92B6
2074  92B6              Borra_Amadeus_impactado
2075  92B6
2076  92B6 CD C8 8E     	call Change_Amadeus
2077  92B9 CD 93 90     	call Cargamos_registros_con_explosion_Amadeus
2078  92BC CD B4 90     	call Genera_datos_de_impresion_Amadeus
2079  92BF
2080  92BF 21 66 8C     	ld hl,Ctrl_3
2081  92C2 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2082  92C4
2083  92C4 AF           	xor a
2084  92C5 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2085  92C6
2086  92C6 C9           	ret
2087  92C7
2088  92C7              Siguiente_frame_explosion_Amadeus
2089  92C7
2090  92C7 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2091  92C9
2092  92C9              ; Avanza Frame de explosión.
2093  92C9
2094  92C9 2A B5 89     	ld hl,(Pamm_Amadeus)
2095  92CC 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2096  92CF
2097  92CF 79           	ld a,c
2098  92D0 95           	sub l
2099  92D1 20 0B        	jr nz,1F
2100  92D3
2101  92D3              ; Fín de Amadeus !!!!!!!!!!!!!
2102  92D3              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2103  92D3
2104  92D3 AF           	xor a
2105  92D4 32 B2 89     	ld (Impacto_Amadeus),a
2106  92D7 21 66 8C     	ld hl,Ctrl_3
2107  92DA CB F6        	set 6,(hl)
2108  92DC
2109  92DC 18 D8        	jr Borra_Amadeus_impactado
2110  92DE
2111  92DE 23           1 inc hl
2112  92DF 23           	inc hl
2113  92E0 22 B5 89     	ld (Pamm_Amadeus),hl
2114  92E3 18 D1        	jr Borra_Amadeus_impactado
2115  92E5
2116  92E5              ; ---------------------------------------------------------------
2117  92E5
2118  92E5              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92E5              ; ******************************************************************************************************************************************************************************************
   2+ 92E5              ;
   3+ 92E5              ;   21/04/24
   4+ 92E5              ;
   5+ 92E5              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92E5              ;   (XOR) bit a bit.
   7+ 92E5              ;
   8+ 92E5              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92E5
  10+ 92E5              Derivando_RND
  11+ 92E5
  12+ 92E5 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92E8
  14+ 92E8 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92EA C5               push bc
  16+ 92EB              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92EB 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92EE              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92EE
  20+ 92EE A7           6 and a                                 ; Carry a "0".
  21+ 92EF CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92F1 30 02            jr nc,1F
  23+ 92F3
  24+ 92F3 CB C1            set 0,c
  25+ 92F5
  26+ 92F5 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92F6 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92F8 5F               ld e,a
  29+ 92F9
  30+ 92F9 7A               ld a,d
  31+ 92FA E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92FC 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92FE
  34+ 92FE CB 3F            srl a
  35+ 9300
  36+ 9300 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9301
  38+ 9301 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9302 28 04            jr z,4F
  40+ 9304
  41+ 9304 CB FF            set 7,a
  42+ 9306 18 02            jr 5F
  43+ 9308
  44+ 9308 CB BF        4 res 7,a
  45+ 930A
  46+ 930A CB 21        5 sla c
  47+ 930C 10 E0            djnz 6B
  48+ 930E
  49+ 930E 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 930F
  51+ 930F 77               ld (hl),a
  52+ 9310 23               inc hl
  53+ 9311 C1               pop bc
  54+ 9312 10 D4            djnz 3B
  55+ 9314
  56+ 9314 C9               ret
  57+ 9315
  58+ 9315
  59+ 9315
# file closed: RND_Derivando.asm
2119  9315              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9315              ;---------------------------------------------------------------------------------------------------------------
   2+ 9315              ;
   3+ 9315              ;   13/11/24
   4+ 9315
   5+ 9315              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 9315
   7+ 9315              Genera_movimientos_masticados_del_nivel
   8+ 9315
   9+ 9315              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 9315
  11+ 9315              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 9315              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 9315              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 9315
  15+ 9315 2D           	dec l
  16+ 9316 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9317 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9318 4E           	ld c,(hl)
  19+ 9319
  20+ 9319 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 931A C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 931B
  23+ 931B              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 931B
  25+ 931B 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 931C
  27+ 931C CD 5A 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 931F
  29+ 931F              ;	Caja Master inicializada ???
  30+ 931F
  31+ 931F 7E           	ld a,(hl)
  32+ 9320 A7           	and a
  33+ 9321 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9323
  35+ 9323              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9323
  37+ 9323 C1           	pop bc
  38+ 9324 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9325 C5           	push bc
  40+ 9326
  41+ 9326 CD FA 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9329 CD 8E 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 932C
  44+ 932C 3A EF 8B     	ld a,(Tipo)
  45+ 932F CD 6A 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9332
  47+ 9332              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9332
  49+ 9332              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9332              ;	ld a,(hl)
  51+ 9332              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9332
  53+ 9332              ;	ld hl,Posicion_inicio
  54+ 9332              ;	ld (hl),a
  55+ 9332
  56+ 9332              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 9332              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 9332
  59+ 9332 CD FF 8F     	call Construye_movimientos_masticados_entidad
  60+ 9335
  61+ 9335 2A 35 8C     	ld hl,(Puntero_indice_master)
  62+ 9338 CD 25 91     	call Extrae_address
  63+ 933B
  64+ 933B 5D           	ld e,l
  65+ 933C 54           	ld d,h
  66+ 933D
  67+ 933D CD BB 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9340
  69+ 9340              Movimientos_masticados_construidos
  70+ 9340
  71+ 9340 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 9341
  73+ 9341 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 9342 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 9343
  76+ 9343 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 9344 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 9346
  79+ 9346 C9           	ret
  80+ 9347
  81+ 9347              ;---------------------------------------------------------------------------------------------------------------
  82+ 9347              ;
  83+ 9347              ;   9/11/24
  84+ 9347              ;
  85+ 9347              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9347              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9347              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9347              ;	_ de la 1ª entidad del Nivel.
  89+ 9347              ;
  90+ 9347              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9347
  92+ 9347              ;	MODIFICA: HL,DE y A.
  93+ 9347              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9347
  95+ 9347              Inicializa_1er_Nivel
  96+ 9347
  97+ 9347              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9347
  99+ 9347 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 934A CD 25 91     	call Extrae_address
 101+ 934D ED 53 86 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 9351
 103+ 9351 7E           	ld a,(hl)
 104+ 9352 32 37 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 9355
 106+ 9355 2C           	inc l
 107+ 9356 22 88 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 9359
 109+ 9359 C9           	ret
 110+ 935A
 111+ 935A              ; ----------------------
 112+ 935A              ;
 113+ 935A              ;	13/11/24
 114+ 935A              ;
 115+ 935A
 116+ 935A              Situa_en_Caja_Master
 117+ 935A
 118+ 935A CD 79 94         call Calcula_salto_en_BC
 119+ 935D 21 58 89         ld hl,Indice_de_cajas_master
 120+ 9360 A7               and a
 121+ 9361 ED 4A            adc hl,bc
 122+ 9363 22 35 8C       	ld (Puntero_indice_master),hl
 123+ 9366 CD 25 91     	call Extrae_address
 124+ 9369 C9           	ret
 125+ 936A
 126+ 936A              ; ----------------------
 127+ 936A
 128+ 936A              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 936A              ; 	ld bc,4
 130+ 936A              ; 	ldir
 131+ 936A              ; 	ret
 132+ 936A
 133+ 936A 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 936B CD 79 94         call Calcula_salto_en_BC
 135+ 936E 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 9371 A7               and a
 137+ 9372 ED 4A            adc hl,bc
 138+ 9374 CD 25 91         call Extrae_address
 139+ 9377 22 20 8C         ld (Puntero_indice_mov),hl
 140+ 937A C9               ret
 141+ 937B
 142+ 937B              ;---------------------------------------------------------------------------------------------------------------
 143+ 937B              ;
 144+ 937B              ;   13/11/24
 145+ 937B              ;
 146+ 937B              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 937B
 148+ 937B
 149+ 937B              Prepara_Cajas_de_Entidades
 150+ 937B
 151+ 937B              ; Preparamos los punteros de las cajas de entidades:
 152+ 937B
 153+ 937B CD 0F 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 937E              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 937E CD C4 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 9381
 157+ 9381 2A 88 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 9384
 159+ 9384              ; En este punto:
 160+ 9384              ;
 161+ 9384              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 9384              ; B contiene (Numero_parcial_de_entidades).
 163+ 9384
 164+ 9384 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 9385
 166+ 9385 7E           	ld a,(hl)
 167+ 9386
 168+ 9386 CD 5A 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 9389
 170+ 9389 ED 5B 2F 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 938D
 172+ 938D D5           	push de
 173+ 938E DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 9390
 175+ 9390 01 0C 00     	ld bc,12
 176+ 9393 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 9395              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 9395
 179+ 9395              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 9395              ;
 181+ 9395              ;
 182+ 9395              ; ------------------------------------------------------ IX
 183+ 9395              ; ------------------------------------------------------ IX
 184+ 9395              ; ------------------------------------------------------ IX
 185+ 9395              ; ------------------------------------------------------ IX
 186+ 9395
 187+ 9395 DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 9397
 189+ 9397 CD 53 90     	call Obtenemos_puntero_de_impresion
 190+ 939A
 191+ 939A DD 6E 05     	ld l,(ix+5)
 192+ 939D 2C           	inc l
 193+ 939E DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 93A1
 195+ 93A1 D5           	push de														; Push (Puntero_objeto).
 196+ 93A2 E5           	push hl														; Push (Puntero_de_impresion).
 197+ 93A3
 198+ 93A3 CD 00 95     	call Genera_coordenadas
 199+ 93A6
 200+ 93A6 ED 4B F0 8B  	ld bc,(Coordenada_X)
 201+ 93AA
 202+ 93AA DD 71 01     	ld (ix+1),c
 203+ 93AD DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 93B0
 205+ 93B0 CD 63 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 93B3
 207+ 93B3 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 93B5 D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 93B6
 210+ 93B6 CD 2C 95     	call Genera_datos_de_impresion
 211+ 93B9
 212+ 93B9 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 93BB
 214+ 93BB              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 93BB
 216+ 93BB CD 32 94     	call Decrementa_Contador_de_mov_masticados
 217+ 93BE CD 0F 94     	call Limpiamos_bandeja_DRAW
 218+ 93C1 CD 6F 91     	call Incrementa_punteros_de_cajas
 219+ 93C4
 220+ 93C4              ; Siguiente entidad del Nivel.
 221+ 93C4
 222+ 93C4 2A 88 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 93C7 23           	inc hl 														; _ entidad del Nivel.
 224+ 93C8
 225+ 93C8 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 93C9
 227+ 93C9 10 B9        	djnz 1B
 228+ 93CB
 229+ 93CB C9           	ret
 230+ 93CC
 231+ 93CC              ; -------------------------------------------------------------------------------------------------------------------
 232+ 93CC              ;
 233+ 93CC              ;	27/5/24
 234+ 93CC              ;
 235+ 93CC              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 93CC              ;
 237+ 93CC
 238+ 93CC              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 93CC              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 93CC
 241+ 93CC 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 93CF CD 8E 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 93D2
 244+ 93D2
 245+ 93D2              Construye_movimientos_masticados_Amadeus
 246+ 93D2
 247+ 93D2 2A F6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 93D5 CD 46 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 93D8              ;															; _ el (Contador_de_mov_masticados).
 250+ 93D8 CD 2B 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 93DB              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 93DB
 253+ 93DB              ; Generamos movimientos masticados de Amadeus.
 254+ 93DB
 255+ 93DB 06 79        	ld b,121												; $0079, 121d.
 256+ 93DD
 257+ 93DD C5           1 push bc
 258+ 93DE CD 43 97     	call Draw
 259+ 93E1 CD 2B 90     	call Guarda_movimiento_masticado
 260+ 93E4
 261+ 93E4 CD B7 9A     	call Mov_right
 262+ 93E7 CD B7 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 93EA
 264+ 93EA C1           	pop bc
 265+ 93EB 10 F0        	djnz 1B
 266+ 93ED
 267+ 93ED              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 93ED
 269+ 93ED              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 93ED              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 93ED
 272+ 93ED 2A F6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 93F0 01 08 00     	ld bc,8
 274+ 93F3 A7           	and a
 275+ 93F4 ED 42        	sbc hl,bc
 276+ 93F6 22 F6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 93F9
 278+ 93F9 C9           	ret
 279+ 93FA
 280+ 93FA              ; ---------------------------------------------------------------------
 281+ 93FA              ;
 282+ 93FA              ;	10/02/24
 283+ 93FA              ;
 284+ 93FA              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 93FA              ;
 286+ 93FA              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 93FA
 288+ 93FA              Definicion_segun_tipo
 289+ 93FA
 290+ 93FA CD 79 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 93FD 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 9400 CD 84 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 9403 C9           	ret
 294+ 9404
 295+ 9404              ; ---------------------------------------------------------------------
 296+ 9404              ;
 297+ 9404              ;	6/7/24
 298+ 9404
 299+ 9404
 300+ 9404              Store_Restore_cajas
 301+ 9404
 302+ 9404 ED 5B 2F 8C  	ld de,(Puntero_store_caja)
 303+ 9408 CD BB 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 940B CD 6F 91     	call Incrementa_punteros_de_cajas
 305+ 940E C9           	ret
 306+ 940F
 307+ 940F              ; ---------------------------------------------------------------------
 308+ 940F              ;
 309+ 940F              ;	23/6/24
 310+ 940F              ;
 311+ 940F              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 940F              ;
 313+ 940F              ;	MODIFY: HL
 314+ 940F
 315+ 940F              Limpiamos_bandeja_DRAW
 316+ 940F
 317+ 940F ED 73 3E 8C  	ld (Stack),sp
 318+ 9413 31 14 8C     	ld sp,Vel_left
 319+ 9416
 320+ 9416 AF           	xor a
 321+ 9417 67           	ld h,a
 322+ 9418 6F           	ld l,a
 323+ 9419
 324+ 9419 E5           	push hl
 325+ 941A E5           	push hl
 326+ 941B E5           	push hl
 327+ 941C E5           	push hl
 328+ 941D E5           	push hl
 329+ 941E E5           	push hl
 330+ 941F E5           	push hl
 331+ 9420 E5           	push hl
 332+ 9421 E5           	push hl
 333+ 9422 E5           	push hl
 334+ 9423 E5           	push hl
 335+ 9424 E5           	push hl
 336+ 9425 E5           	push hl
 337+ 9426 E5           	push hl
 338+ 9427 E5           	push hl
 339+ 9428 E5           	push hl
 340+ 9429 E5           	push hl
 341+ 942A E5           	push hl
 342+ 942B
 343+ 942B 33           	inc sp
 344+ 942C
 345+ 942C E5           	push hl
 346+ 942D ED 7B 3E 8C  	ld sp,(Stack)
 347+ 9431
 348+ 9431 C9           	ret
 349+ 9432
 350+ 9432              ; ---------------------------------------------------------------------
 351+ 9432              ;
 352+ 9432              ;	23/11/24
 353+ 9432              ;
 354+ 9432              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 9432
 356+ 9432              Decrementa_Contador_de_mov_masticados
 357+ 9432
 358+ 9432 DD 6E 09     	ld l,(ix+9)
 359+ 9435 DD 66 0A     	ld h,(ix+10)
 360+ 9438
 361+ 9438 2B           	dec hl
 362+ 9439
 363+ 9439 DD 75 09     	ld (ix+9),l
 364+ 943C DD 74 0A     	ld (ix+10),h
 365+ 943F
 366+ 943F C9           	ret
 367+ 9440
 368+ 9440              ; ---------------------------------------------------------------------
 369+ 9440              ;
 370+ 9440              ;	24/11/24
 371+ 9440
 372+ 9440              Reinicia_entidad_maliciosa
 373+ 9440
 374+ 9440              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 9440
 376+ 9440 CD 24 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 9443 CD 31 9F     	call Transfiere_datos_de_contadores
 378+ 9446
 379+ 9446              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 9446
 381+ 9446 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 9449 CD FA 93     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 944C
 384+ 944C 7D           	ld a,l
 385+ 944D C6 0B        	add 11
 386+ 944F 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 9450
 388+ 9450 CD 25 91     	call Extrae_address
 389+ 9453
 390+ 9453 DD 75 07     	ld (ix+7),l
 391+ 9456 DD 74 08     	ld (ix+8),h
 392+ 9459
 393+ 9459 CD 53 90     	call Obtenemos_puntero_de_impresion
 394+ 945C
 395+ 945C              ; Incrementa (Contador_de_vueltas)x2.
 396+ 945C              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 945C
 398+ 945C              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 945C              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 945C              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 945C              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 945C              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 945C
 404+ 945C DD CB 03 26  	sla (ix+3)									; sla (Contador_de_vueltas).
 405+ 9460
 406+ 9460 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 9463 CB 2F        	sra a
 408+ 9465 CB 2F        	sra a
 409+ 9467
 410+ 9467 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 946A
 412+ 946A 3E 40        	ld a,$40
 413+ 946C DD BE 03     	cp (ix+3)
 414+ 946F C0           	ret nz
 415+ 9470
 416+ 9470              ; Límitador.
 417+ 9470
 418+ 9470              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 9470
 420+ 9470 DD CB 03 2E  	sra (ix+3)
 421+ 9474 DD CB 0B 2E  	sra (ix+11)
 422+ 9478
 423+ 9478 C9           	ret
 424+ 9479
 425+ 9479              ;	------------------------------------------------------------------------------------
 426+ 9479              ;
 427+ 9479              ;	09/11/24
 428+ 9479              ;
 429+ 9479              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 9479              ;
 431+ 9479              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 9479              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 9479
 434+ 9479 A7           Calcula_salto_en_BC and a
 435+ 947A 28 04        	jr z,1F
 436+ 947C CB 27        	sla a
 437+ 947E D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 9480 4F           1 ld c,a
 439+ 9481 06 00        	ld b,0
 440+ 9483 C9           	ret
 441+ 9484
 442+ 9484              ; ------------------------------------------------------------------
 443+ 9484              ;
 444+ 9484              ;	19/1/24
 445+ 9484              ;
 446+ 9484              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 9484              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 9484
 449+ 9484 A7           Situa_en_datos_de_definicion and a
 450+ 9485 ED 4A        	adc hl,bc
 451+ 9487 CD 25 91     	call Extrae_address
 452+ 948A 22 3C 8C         ld (Datos_de_entidad),hl
 453+ 948D C9           	ret
 454+ 948E
 455+ 948E              ; ----------------------------------------------------------------------------------------------------------
 456+ 948E              ;
 457+ 948E              ;	24/6/24
 458+ 948E              ;
 459+ 948E              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 460+ 948E              ;	_ de entidad.
 461+ 948E              ;
 462+ 948E              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 463+ 948E              ;
 464+ 948E              ;
 465+ 948E              ;	MODIFICA: HL,DE y BC
 466+ 948E
 467+ 948E
 468+ 948E              Definicion_de_entidad_a_bandeja_DRAW
 469+ 948E
 470+ 948E 11 EF 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 471+ 9491 7E           	ld a,(hl) 									; Volcamos Tipo.
 472+ 9492 12           	ld (de),a
 473+ 9493 23           	inc hl
 474+ 9494              ;
 475+ 9494 11 FD 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 476+ 9497 01 02 00     	ld bc,2
 477+ 949A ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 478+ 949C              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 479+ 949C 11 F2 8B     	ld de,Contador_de_vueltas
 480+ 949F 7E           	ld a,(hl)
 481+ 94A0 12           	ld (de),a
 482+ 94A1 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 483+ 94A2
 484+ 94A2 11 04 8C     	ld de,Indice_Sprite_der
 485+ 94A5 01 04 00     	ld bc,4
 486+ 94A8 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 487+ 94AA
 488+ 94AA 11 0C 8C     	ld de,Posicion_inicio
 489+ 94AD 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 490+ 94B0 ED B0        	ldir 									; Vuelco (Frames_explosion).
 491+ 94B2
 492+ 94B2 11 F6 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 493+ 94B5 01 02 00     	ld bc,2
 494+ 94B8 ED B0        	ldir
 495+ 94BA
 496+ 94BA C9           	ret
 497+ 94BB
 498+ 94BB              ; ----------------------------------------------------------------------------------------------------------
 499+ 94BB              ;
 500+ 94BB              ;	1/8/24
 501+ 94BB              ;
 502+ 94BB
 503+ 94BB              Parametros_de_bandeja_DRAW_a_caja
 504+ 94BB
 505+ 94BB 21 EF 8B     	ld hl,Bandeja_DRAW
 506+ 94BE 01 0C 00     	ld bc,12
 507+ 94C1 ED B0        	ldir
 508+ 94C3 C9           	ret
 509+ 94C4
 510+ 94C4              ;---------------------------------------------------------------------------------------------------------------
 511+ 94C4              ;
 512+ 94C4              ;	13/11/24
 513+ 94C4              ;
 514+ 94C4              ;	INICIALIZA (Numero_parcial_de_entidades).
 515+ 94C4              ;
 516+ 94C4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 517+ 94C4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 518+ 94C4
 519+ 94C4              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 520+ 94C4              ;			- Actualiza (Numero_de_entidades).
 521+ 94C4
 522+ 94C4              ;	MODIFICA: A y B.
 523+ 94C4
 524+ 94C4
 525+ 94C4              Inicializa_Numero_parcial_de_entidades
 526+ 94C4
 527+ 94C4 3A 37 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 528+ 94C7 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 529+ 94C9 38 0E        	jr c,1F
 530+ 94CB 28 0C        	jr z,1F
 531+ 94CD
 532+ 94CD              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 94CD              ; Actualizamos variables.
 534+ 94CD
 535+ 94CD D6 06        	sub 6
 536+ 94CF 32 37 8C     	ld (Numero_de_entidades),a
 537+ 94D2 3E 06        	ld a,6
 538+ 94D4 32 38 8C     	ld (Numero_parcial_de_entidades),a
 539+ 94D7 47           	ld b,a
 540+ 94D8 C9           	ret
 541+ 94D9
 542+ 94D9              ; El nº total de entidades no supera el nº de cajas de entidades.
 543+ 94D9              ; (Numero_de_entidades)="0".
 544+ 94D9
 545+ 94D9 32 38 8C     1 ld (Numero_parcial_de_entidades),a
 546+ 94DC 47           	ld b,a
 547+ 94DD AF           	xor a
 548+ 94DE 32 37 8C     	ld (Numero_de_entidades),a
 549+ 94E1 C9           	ret
 550+ 94E2
# file closed: Rutinas_de_inicio_y_niveles.asm
2120  94E2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94E2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94E2              ;
   3+ 94E2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94E2              ;
   5+ 94E2              ; *****************************************************************************************************************************************************************************************
   6+ 94E2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94E2
   8+ 94E2 7C           calcula_tercio ld a,h
   9+ 94E3 E6 18        	and $18
  10+ 94E5 CB 2F        	sra a
  11+ 94E7 CB 2F        	sra a
  12+ 94E9 CB 2F        	sra a
  13+ 94EB C9           	ret
  14+ 94EC
# file closed: calcula_tercio.asm
2121  94EC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94EC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94EC              ;
   3+ 94EC              ;
   4+ 94EC              ;	CLS.
   5+ 94EC              ;
   6+ 94EC              ;	Limpia la pantalla y define sus atributos.
   7+ 94EC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94EC              ;
   9+ 94EC              ;	COLORES: 0 ..... NEGRO
  10+ 94EC              ;    		 1 ..... AZUL
  11+ 94EC              ; 			 2 ..... ROJO
  12+ 94EC              ;			 3 ..... MAGENTA
  13+ 94EC              ; 			 4 ..... VERDE
  14+ 94EC              ; 			 5 ..... CIAN
  15+ 94EC              ;			 6 ..... AMARILLO
  16+ 94EC              ; 			 7 ..... BLANCO
  17+ 94EC              ;
  18+ 94EC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94EC              ;
  20+ 94EC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94EC
  22+ 94EC
  23+ 94EC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94EF 11 01 40     	LD DE,$4001
  25+ 94F2 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94F5 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94F7 ED B0        	LDIR
  28+ 94F9 01 FF 02     	LD BC,767
  29+ 94FC 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94FD ED B0        	LDIR
  31+ 94FF C9           	ret
  32+ 9500
# file closed: Cls.asm
2122  9500              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9500              ; ------------------------------------------------------------------------
   2+ 9500              ;
   3+ 9500              ;	30/1/24
   4+ 9500              ;
   5+ 9500              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9500              ;	Fila superior "0", Columna izquierda "0".
   7+ 9500              ;
   8+ 9500              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9500              ;
  10+ 9500              ;	Modifica: A,BC y DE.
  11+ 9500
  12+ 9500              Genera_coordenadas
  13+ 9500
  14+ 9500 7D           	ld a,l
  15+ 9501 E6 1F        	and $1f
  16+ 9503
  17+ 9503 32 F0 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9506
  19+ 9506 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9507 FE 40        	cp $40
  21+ 9509 38 1C        	jr c,4F
  22+ 950B
  23+ 950B CD E2 94     	call calcula_tercio
  24+ 950E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 950F
  26+ 950F 1E 00        	ld e,0
  27+ 9511 7D           	ld a,l
  28+ 9512 E6 E0        	and $e0
  29+ 9514 28 01        	jr z,1F
  30+ 9516 04           	inc b
  31+ 9517
  32+ 9517 04           1 inc b
  33+ 9518 05           	dec b
  34+ 9519 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 951B              ;														; _ , salimos.
  36+ 951B 1C           3 inc e
  37+ 951C D6 20        	sub 32
  38+ 951E 20 FB        	jr nz,3B
  39+ 9520 10 F5        	djnz 1B
  40+ 9522
  41+ 9522 7B           2 ld a,e
  42+ 9523 32 F1 8B     	ld (Coordenada_y),a
  43+ 9526 C9           	ret
  44+ 9527
  45+ 9527 AF           4 xor a
  46+ 9528 32 F1 8B     	ld (Coordenada_y),a
  47+ 952B C9           	ret
  48+ 952C
# file closed: Genera_coordenadas.asm
2123  952C              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 952C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 952C              ;
   3+ 952C              ;	20/09/24
   4+ 952C              ;
   5+ 952C              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 952C              ;   DE contiene Puntero_objeto.
   7+ 952C              ;   IX contiene el Puntero de impresión.
   8+ 952C
   9+ 952C              Genera_datos_de_impresion
  10+ 952C
  11+ 952C ED 73 3E 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9530
  13+ 9530 2A 60 8C         ld hl,(Scanlines_album_SP)
  14+ 9533
  15+ 9533 3E 05            ld a,5
  16+ 9535 85               add l
  17+ 9536 6F               ld l,a
  18+ 9537
  19+ 9537 F9               ld sp,hl
  20+ 9538 22 60 8C         ld (Scanlines_album_SP),hl
  21+ 953B
  22+ 953B 21 00 00         ld hl,0
  23+ 953E
  24+ 953E DD E5            push ix
  25+ 9540 3B               dec sp
  26+ 9541 ED 7A            adc hl,sp
  27+ 9543 D5               push de
  28+ 9544
  29+ 9544              ; Recuperamos SP.
  30+ 9544
  31+ 9544 ED 7B 3E 8C      ld sp,(Stack)
  32+ 9548
  33+ 9548 E5               push hl
  34+ 9549 F1               pop af
  35+ 954A 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 954B
  37+ 954B              ; Tenemos el encabezado listo.
  38+ 954B              ; Preparamos registros para generar los scanlines.
  39+ 954B
  40+ 954B DD E5            push ix
  41+ 954D E1               pop hl                                          ; 1er scanline en HL.
  42+ 954E
  43+ 954E ED 5B 60 8C      ld de,(Scanlines_album_SP)
  44+ 9552
  45+ 9552              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 9552              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 9552
  48+ 9552 7C               ld a,h
  49+ 9553 FE 50            cp $50
  50+ 9555 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9557
  52+ 9557 20 05            jr nz,2F
  53+ 9559
  54+ 9559 7D               ld a,l
  55+ 955A FE E0            cp $e0
  56+ 955C 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 955E
  58+ 955E 7D           2 ld a,l
  59+ 955F FE C0            cp $c0
  60+ 9561 D2 F7 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 9564
  62+ 9564              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 9564
  64+ 9564 CD F5 99         call NextScan
  65+ 9567 EB               ex de,hl
  66+ 9568
  67+ 9568 73               ld (hl),e
  68+ 9569 23               inc hl
  69+ 956A 72               ld (hl),d
  70+ 956B 23               inc hl
  71+ 956C
  72+ 956C EB               ex de,hl
  73+ 956D
  74+ 956D CD F5 99         call NextScan
  75+ 9570 EB               ex de,hl
  76+ 9571
  77+ 9571 73               ld (hl),e
  78+ 9572 23               inc hl
  79+ 9573 72               ld (hl),d
  80+ 9574 23               inc hl
  81+ 9575
  82+ 9575 EB               ex de,hl
  83+ 9576
  84+ 9576 CD F5 99         call NextScan
  85+ 9579 EB               ex de,hl
  86+ 957A
  87+ 957A 73               ld (hl),e
  88+ 957B 23               inc hl
  89+ 957C 72               ld (hl),d
  90+ 957D 23               inc hl
  91+ 957E
  92+ 957E EB               ex de,hl
  93+ 957F
  94+ 957F CD F5 99         call NextScan
  95+ 9582 EB               ex de,hl
  96+ 9583
  97+ 9583 73               ld (hl),e
  98+ 9584 23               inc hl
  99+ 9585 72               ld (hl),d
 100+ 9586 23               inc hl
 101+ 9587
 102+ 9587 EB               ex de,hl
 103+ 9588
 104+ 9588 CD F5 99         call NextScan
 105+ 958B EB               ex de,hl
 106+ 958C
 107+ 958C 73               ld (hl),e
 108+ 958D 23               inc hl
 109+ 958E 72               ld (hl),d
 110+ 958F 23               inc hl
 111+ 9590
 112+ 9590 EB               ex de,hl
 113+ 9591
 114+ 9591 CD F5 99         call NextScan
 115+ 9594 EB               ex de,hl
 116+ 9595
 117+ 9595 73               ld (hl),e
 118+ 9596 23               inc hl
 119+ 9597 72               ld (hl),d
 120+ 9598 23               inc hl
 121+ 9599
 122+ 9599 EB               ex de,hl
 123+ 959A
 124+ 959A CD F5 99         call NextScan
 125+ 959D EB               ex de,hl
 126+ 959E
 127+ 959E 73               ld (hl),e
 128+ 959F 23               inc hl
 129+ 95A0 72               ld (hl),d
 130+ 95A1 23               inc hl
 131+ 95A2
 132+ 95A2 EB               ex de,hl
 133+ 95A3
 134+ 95A3 CD F5 99         call NextScan
 135+ 95A6 EB               ex de,hl
 136+ 95A7
 137+ 95A7 73               ld (hl),e
 138+ 95A8 23               inc hl
 139+ 95A9 72               ld (hl),d
 140+ 95AA 23               inc hl
 141+ 95AB
 142+ 95AB EB               ex de,hl
 143+ 95AC
 144+ 95AC CD F5 99         call NextScan
 145+ 95AF EB               ex de,hl
 146+ 95B0
 147+ 95B0 73               ld (hl),e
 148+ 95B1 23               inc hl
 149+ 95B2 72               ld (hl),d
 150+ 95B3 23               inc hl
 151+ 95B4
 152+ 95B4 EB               ex de,hl
 153+ 95B5
 154+ 95B5 CD F5 99         call NextScan
 155+ 95B8 EB               ex de,hl
 156+ 95B9
 157+ 95B9 73               ld (hl),e
 158+ 95BA 23               inc hl
 159+ 95BB 72               ld (hl),d
 160+ 95BC 23               inc hl
 161+ 95BD
 162+ 95BD EB               ex de,hl
 163+ 95BE
 164+ 95BE CD F5 99         call NextScan
 165+ 95C1 EB               ex de,hl
 166+ 95C2
 167+ 95C2 73               ld (hl),e
 168+ 95C3 23               inc hl
 169+ 95C4 72               ld (hl),d
 170+ 95C5 23               inc hl
 171+ 95C6
 172+ 95C6 EB               ex de,hl
 173+ 95C7
 174+ 95C7 CD F5 99         call NextScan
 175+ 95CA EB               ex de,hl
 176+ 95CB
 177+ 95CB 73               ld (hl),e
 178+ 95CC 23               inc hl
 179+ 95CD 72               ld (hl),d
 180+ 95CE 23               inc hl
 181+ 95CF
 182+ 95CF EB               ex de,hl
 183+ 95D0
 184+ 95D0 CD F5 99         call NextScan
 185+ 95D3 EB               ex de,hl
 186+ 95D4
 187+ 95D4 73               ld (hl),e
 188+ 95D5 23               inc hl
 189+ 95D6 72               ld (hl),d
 190+ 95D7 23               inc hl
 191+ 95D8
 192+ 95D8 EB               ex de,hl
 193+ 95D9
 194+ 95D9 CD F5 99         call NextScan
 195+ 95DC EB               ex de,hl
 196+ 95DD
 197+ 95DD 73               ld (hl),e
 198+ 95DE 23               inc hl
 199+ 95DF 72               ld (hl),d
 200+ 95E0 23               inc hl
 201+ 95E1
 202+ 95E1 EB               ex de,hl
 203+ 95E2
 204+ 95E2 CD F5 99         call NextScan
 205+ 95E5 EB               ex de,hl
 206+ 95E6
 207+ 95E6              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 95E6              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 95E6              ;   _ generar sus scanlines.
 210+ 95E6
 211+ 95E6              ;    ld (Puntero_de_impresion_disparo),de
 212+ 95E6
 213+ 95E6 73               ld (hl),e
 214+ 95E7 23               inc hl
 215+ 95E8 72               ld (hl),d
 216+ 95E9 23               inc hl
 217+ 95EA
 218+ 95EA              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 95EA
 220+ 95EA 22 60 8C         ld (Scanlines_album_SP),hl
 221+ 95ED
 222+ 95ED EB               ex de,hl
 223+ 95EE
 224+ 95EE              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 95EE
 226+ 95EE              ;    call NextScan
 227+ 95EE              ;    call NextScan
 228+ 95EE
 229+ 95EE 22 6B 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 95F1
 231+ 95F1              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 95F1
 233+ 95F1 08               ex af,af
 234+ 95F2
 235+ 95F2 F5               push af
 236+ 95F3 E1               pop hl
 237+ 95F4
 238+ 95F4 36 10            ld (hl),16
 239+ 95F6
 240+ 95F6 C9               ret
 241+ 95F7
 242+ 95F7              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 95F7
 244+ 95F7              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 95F7
 246+ 95F7 3E 57            ld a,$57
 247+ 95F9 94               sub h
 248+ 95FA 47               ld b,a
 249+ 95FB
 250+ 95FB 3E DF            ld a,$df
 251+ 95FD BD               cp l
 252+ 95FE 38 04            jr c,1F
 253+ 9600
 254+ 9600 3E 08            ld a,8
 255+ 9602 80               add b
 256+ 9603 47               ld b,a
 257+ 9604
 258+ 9604              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 9604              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 9604
 261+ 9604 48           1 ld c,b
 262+ 9605 0C               inc c
 263+ 9606
 264+ 9606 04               inc b
 265+ 9607 05               dec b
 266+ 9608 20 02            jr nz,3F
 267+ 960A
 268+ 960A 18 0B            jr 6F
 269+ 960C
 270+ 960C CD F5 99     3 call NextScan
 271+ 960F EB               ex de,hl
 272+ 9610
 273+ 9610 73               ld (hl),e
 274+ 9611 23               inc hl
 275+ 9612 72               ld (hl),d
 276+ 9613 23               inc hl
 277+ 9614
 278+ 9614 EB               ex de,hl
 279+ 9615 10 F5            djnz 3B
 280+ 9617
 281+ 9617 ED 53 60 8C  6 ld (Scanlines_album_SP),de
 282+ 961B
 283+ 961B 08           5 ex af,af
 284+ 961C F5               push af
 285+ 961D E1               pop hl
 286+ 961E
 287+ 961E 71               ld (hl),c
 288+ 961F
 289+ 961F C9               ret
 290+ 9620
# file closed: Genera_datos_de_impresion.asm
2124  9620              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9620              ; -----------------------------------------------------------------------------
   2+ 9620              ;
   3+ 9620              ;   11/03/24
   4+ 9620              ;
   5+ 9620
   6+ 9620              Pinta_Sprites
   7+ 9620
   8+ 9620              ;    ld hl,(Scanlines_album_SP)
   9+ 9620              ;    call Extrae_address
  10+ 9620
  11+ 9620              ;    inc h
  12+ 9620              ;    dec h
  13+ 9620              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9620
  15+ 9620 ED 73 3E 8C      ld (Stack),sp
  16+ 9624
  17+ 9624 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9625              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9625 2C               inc l
  20+ 9626 2C               inc l
  21+ 9627
  22+ 9627 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9628
  24+ 9628 2C               inc l
  25+ 9629 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 962A
  27+ 962A              ;   Seleccionamos rutina de impresión:
  28+ 962A
  29+ 962A 3E 10            ld a,16
  30+ 962C B8               cp b
  31+ 962D C2 29 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9630
  33+ 9630              ;   Rutinas:
  34+ 9630
  35+ 9630              Pinta_rapido    ;   1520 t/states.
  36+ 9630
  37+ 9630 E1               pop hl
  38+ 9631
  39+ 9631 1A               ld a,(de)
  40+ 9632 AE               xor (hl)
  41+ 9633 77               ld (hl),a
  42+ 9634 2C               inc l
  43+ 9635 1C               inc e
  44+ 9636 1A               ld a,(de)
  45+ 9637 AE               xor (hl)
  46+ 9638 77               ld (hl),a
  47+ 9639 2C               inc l
  48+ 963A 1C               inc e
  49+ 963B 1A               ld a,(de)
  50+ 963C AE               xor (hl)
  51+ 963D 77               ld (hl),a
  52+ 963E 13               inc de
  53+ 963F
  54+ 963F E1               pop hl
  55+ 9640
  56+ 9640 1A               ld a,(de)
  57+ 9641 AE               xor (hl)
  58+ 9642 77               ld (hl),a
  59+ 9643 2C               inc l
  60+ 9644 1C               inc e
  61+ 9645 1A               ld a,(de)
  62+ 9646 AE               xor (hl)
  63+ 9647 77               ld (hl),a
  64+ 9648 2C               inc l
  65+ 9649 1C               inc e
  66+ 964A 1A               ld a,(de)
  67+ 964B AE               xor (hl)
  68+ 964C 77               ld (hl),a
  69+ 964D 13               inc de
  70+ 964E
  71+ 964E E1               pop hl
  72+ 964F
  73+ 964F 1A               ld a,(de)
  74+ 9650 AE               xor (hl)
  75+ 9651 77               ld (hl),a
  76+ 9652 2C               inc l
  77+ 9653 1C               inc e
  78+ 9654 1A               ld a,(de)
  79+ 9655 AE               xor (hl)
  80+ 9656 77               ld (hl),a
  81+ 9657 2C               inc l
  82+ 9658 1C               inc e
  83+ 9659 1A               ld a,(de)
  84+ 965A AE               xor (hl)
  85+ 965B 77               ld (hl),a
  86+ 965C 13               inc de
  87+ 965D
  88+ 965D E1               pop hl
  89+ 965E
  90+ 965E 1A               ld a,(de)
  91+ 965F AE               xor (hl)
  92+ 9660 77               ld (hl),a
  93+ 9661 2C               inc l
  94+ 9662 1C               inc e
  95+ 9663 1A               ld a,(de)
  96+ 9664 AE               xor (hl)
  97+ 9665 77               ld (hl),a
  98+ 9666 2C               inc l
  99+ 9667 1C               inc e
 100+ 9668 1A               ld a,(de)
 101+ 9669 AE               xor (hl)
 102+ 966A 77               ld (hl),a
 103+ 966B 13               inc de
 104+ 966C
 105+ 966C E1               pop hl
 106+ 966D
 107+ 966D 1A               ld a,(de)
 108+ 966E AE               xor (hl)
 109+ 966F 77               ld (hl),a
 110+ 9670 2C               inc l
 111+ 9671 1C               inc e
 112+ 9672 1A               ld a,(de)
 113+ 9673 AE               xor (hl)
 114+ 9674 77               ld (hl),a
 115+ 9675 2C               inc l
 116+ 9676 1C               inc e
 117+ 9677 1A               ld a,(de)
 118+ 9678 AE               xor (hl)
 119+ 9679 77               ld (hl),a
 120+ 967A 13               inc de
 121+ 967B
 122+ 967B E1               pop hl
 123+ 967C
 124+ 967C 1A               ld a,(de)
 125+ 967D AE               xor (hl)
 126+ 967E 77               ld (hl),a
 127+ 967F 2C               inc l
 128+ 9680 1C               inc e
 129+ 9681 1A               ld a,(de)
 130+ 9682 AE               xor (hl)
 131+ 9683 77               ld (hl),a
 132+ 9684 2C               inc l
 133+ 9685 1C               inc e
 134+ 9686 1A               ld a,(de)
 135+ 9687 AE               xor (hl)
 136+ 9688 77               ld (hl),a
 137+ 9689 13               inc de
 138+ 968A
 139+ 968A E1               pop hl
 140+ 968B
 141+ 968B 1A               ld a,(de)
 142+ 968C AE               xor (hl)
 143+ 968D 77               ld (hl),a
 144+ 968E 2C               inc l
 145+ 968F 1C               inc e
 146+ 9690 1A               ld a,(de)
 147+ 9691 AE               xor (hl)
 148+ 9692 77               ld (hl),a
 149+ 9693 2C               inc l
 150+ 9694 1C               inc e
 151+ 9695 1A               ld a,(de)
 152+ 9696 AE               xor (hl)
 153+ 9697 77               ld (hl),a
 154+ 9698 13               inc de
 155+ 9699
 156+ 9699 E1               pop hl
 157+ 969A
 158+ 969A 1A               ld a,(de)
 159+ 969B AE               xor (hl)
 160+ 969C 77               ld (hl),a
 161+ 969D 2C               inc l
 162+ 969E 1C               inc e
 163+ 969F 1A               ld a,(de)
 164+ 96A0 AE               xor (hl)
 165+ 96A1 77               ld (hl),a
 166+ 96A2 2C               inc l
 167+ 96A3 1C               inc e
 168+ 96A4 1A               ld a,(de)
 169+ 96A5 AE               xor (hl)
 170+ 96A6 77               ld (hl),a
 171+ 96A7 13               inc de
 172+ 96A8
 173+ 96A8 E1               pop hl
 174+ 96A9
 175+ 96A9 1A               ld a,(de)
 176+ 96AA AE               xor (hl)
 177+ 96AB 77               ld (hl),a
 178+ 96AC 2C               inc l
 179+ 96AD 1C               inc e
 180+ 96AE 1A               ld a,(de)
 181+ 96AF AE               xor (hl)
 182+ 96B0 77               ld (hl),a
 183+ 96B1 2C               inc l
 184+ 96B2 1C               inc e
 185+ 96B3 1A               ld a,(de)
 186+ 96B4 AE               xor (hl)
 187+ 96B5 77               ld (hl),a
 188+ 96B6 13               inc de
 189+ 96B7
 190+ 96B7 E1               pop hl
 191+ 96B8
 192+ 96B8 1A               ld a,(de)
 193+ 96B9 AE               xor (hl)
 194+ 96BA 77               ld (hl),a
 195+ 96BB 2C               inc l
 196+ 96BC 1C               inc e
 197+ 96BD 1A               ld a,(de)
 198+ 96BE AE               xor (hl)
 199+ 96BF 77               ld (hl),a
 200+ 96C0 2C               inc l
 201+ 96C1 1C               inc e
 202+ 96C2 1A               ld a,(de)
 203+ 96C3 AE               xor (hl)
 204+ 96C4 77               ld (hl),a
 205+ 96C5 13               inc de
 206+ 96C6
 207+ 96C6 E1               pop hl
 208+ 96C7
 209+ 96C7 1A               ld a,(de)
 210+ 96C8 AE               xor (hl)
 211+ 96C9 77               ld (hl),a
 212+ 96CA 2C               inc l
 213+ 96CB 1C               inc e
 214+ 96CC 1A               ld a,(de)
 215+ 96CD AE               xor (hl)
 216+ 96CE 77               ld (hl),a
 217+ 96CF 2C               inc l
 218+ 96D0 1C               inc e
 219+ 96D1 1A               ld a,(de)
 220+ 96D2 AE               xor (hl)
 221+ 96D3 77               ld (hl),a
 222+ 96D4 13               inc de
 223+ 96D5
 224+ 96D5 E1               pop hl
 225+ 96D6
 226+ 96D6 1A               ld a,(de)
 227+ 96D7 AE               xor (hl)
 228+ 96D8 77               ld (hl),a
 229+ 96D9 2C               inc l
 230+ 96DA 1C               inc e
 231+ 96DB 1A               ld a,(de)
 232+ 96DC AE               xor (hl)
 233+ 96DD 77               ld (hl),a
 234+ 96DE 2C               inc l
 235+ 96DF 1C               inc e
 236+ 96E0 1A               ld a,(de)
 237+ 96E1 AE               xor (hl)
 238+ 96E2 77               ld (hl),a
 239+ 96E3 13               inc de
 240+ 96E4
 241+ 96E4 E1               pop hl
 242+ 96E5
 243+ 96E5 1A               ld a,(de)
 244+ 96E6 AE               xor (hl)
 245+ 96E7 77               ld (hl),a
 246+ 96E8 2C               inc l
 247+ 96E9 1C               inc e
 248+ 96EA 1A               ld a,(de)
 249+ 96EB AE               xor (hl)
 250+ 96EC 77               ld (hl),a
 251+ 96ED 2C               inc l
 252+ 96EE 1C               inc e
 253+ 96EF 1A               ld a,(de)
 254+ 96F0 AE               xor (hl)
 255+ 96F1 77               ld (hl),a
 256+ 96F2 13               inc de
 257+ 96F3
 258+ 96F3 E1               pop hl
 259+ 96F4
 260+ 96F4 1A               ld a,(de)
 261+ 96F5 AE               xor (hl)
 262+ 96F6 77               ld (hl),a
 263+ 96F7 2C               inc l
 264+ 96F8 1C               inc e
 265+ 96F9 1A               ld a,(de)
 266+ 96FA AE               xor (hl)
 267+ 96FB 77               ld (hl),a
 268+ 96FC 2C               inc l
 269+ 96FD 1C               inc e
 270+ 96FE 1A               ld a,(de)
 271+ 96FF AE               xor (hl)
 272+ 9700 77               ld (hl),a
 273+ 9701 13               inc de
 274+ 9702
 275+ 9702 E1               pop hl
 276+ 9703
 277+ 9703 1A               ld a,(de)
 278+ 9704 AE               xor (hl)
 279+ 9705 77               ld (hl),a
 280+ 9706 2C               inc l
 281+ 9707 1C               inc e
 282+ 9708 1A               ld a,(de)
 283+ 9709 AE               xor (hl)
 284+ 970A 77               ld (hl),a
 285+ 970B 2C               inc l
 286+ 970C 1C               inc e
 287+ 970D 1A               ld a,(de)
 288+ 970E AE               xor (hl)
 289+ 970F 77               ld (hl),a
 290+ 9710 13               inc de
 291+ 9711
 292+ 9711 E1               pop hl
 293+ 9712
 294+ 9712 1A               ld a,(de)
 295+ 9713 AE               xor (hl)
 296+ 9714 77               ld (hl),a
 297+ 9715 2C               inc l
 298+ 9716 1C               inc e
 299+ 9717 1A               ld a,(de)
 300+ 9718 AE               xor (hl)
 301+ 9719 77               ld (hl),a
 302+ 971A 2C               inc l
 303+ 971B 1C               inc e
 304+ 971C 1A               ld a,(de)
 305+ 971D AE               xor (hl)
 306+ 971E 77               ld (hl),a
 307+ 971F 13               inc de
 308+ 9720
 309+ 9720 ED 73 60 8C      ld (Scanlines_album_SP),sp
 310+ 9724 ED 7B 3E 8C      ld sp,(Stack)
 311+ 9728 C9               ret
 312+ 9729
 313+ 9729              Pinta_lento
 314+ 9729
 315+ 9729 E1           1 pop hl
 316+ 972A
 317+ 972A 1A               ld a,(de)
 318+ 972B AE               xor (hl)
 319+ 972C 77               ld (hl),a
 320+ 972D 2C               inc l
 321+ 972E 1C               inc e
 322+ 972F 1A               ld a,(de)
 323+ 9730 AE               xor (hl)
 324+ 9731 77               ld (hl),a
 325+ 9732 2C               inc l
 326+ 9733 1C               inc e
 327+ 9734 1A               ld a,(de)
 328+ 9735 AE               xor (hl)
 329+ 9736 77               ld (hl),a
 330+ 9737 13               inc de
 331+ 9738
 332+ 9738 10 EF            djnz 1B
 333+ 973A
 334+ 973A ED 73 60 8C      ld (Scanlines_album_SP),sp
 335+ 973E ED 7B 3E 8C      ld sp,(Stack)
 336+ 9742 C9               ret
# file closed: Pinta_Sprites.asm
2125  9743              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9743              ; ******************************************************************************************************************************************************************************************
   2+ 9743              ;
   3+ 9743              ; 26/06/23
   4+ 9743              ;
   5+ 9743              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9743
   7+ 9743              Draw
   8+ 9743
   9+ 9743 CD E9 99     	call Prepara_draw
  10+ 9746 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9747 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9748 28 05        	jr z,2F
  13+ 974A
  14+ 974A 3A 0E 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 974D 18 0C        	jr 1F
  16+ 974F
  17+ 974F 2A 0C 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9752 22 FF 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9755 CD E1 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9758              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9758
  22+ 9758 CD 88 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 975B
  24+ 975B 3A FC 8B     1 ld a,(Ctrl_0)
  25+ 975E CB 6F        	bit 5,a
  26+ 9760 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9762
  28+ 9762 CD 77 97     	call Comprueba_limite_horizontal
  29+ 9765 CD 07 98     	call Comprueba_limite_vertical
  30+ 9768
  31+ 9768              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9768              ; -----------------------
  33+ 9768              ; -----------------------
  34+ 9768              ; -----------------------
  35+ 9768
  36+ 9768 CD 5D 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 976B CD 94 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 976E
  39+ 976E 3A FC 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9771 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9773 32 FC 8B     	ld (Ctrl_0),a
  42+ 9776
  43+ 9776 C9           	ret
  44+ 9777
  45+ 9777              ; *******************************************************************************************************************************************************************************************
  46+ 9777              ;	21/01/23
  47+ 9777              ;
  48+ 9777              ; 	Comprueba_limite_horizontal.
  49+ 9777              ;
  50+ 9777              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9777              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9777              ;
  53+ 9777              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9777              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9777              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9777              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9777
  58+ 9777
  59+ 9777
  60+ 9777 3A FC 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 977A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 977C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 977E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9780 32 FC 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9783 18 09            jr 6F
  66+ 9785 CB 5F        1 bit 3,a
  67+ 9787 28 0A            jr z,2F
  68+ 9789 E6 F7            and $f7
  69+ 978B 32 FC 8B         ld (Ctrl_0),a
  70+ 978E CD E1 98     6 call Inicializacion
  71+ 9791 18 5B            jr 5F
  72+ 9793 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9794
  74+ 9794              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9794              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9794
  77+ 9794 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9795 2A 10 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9798 CD E2 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 979B 67           	ld h,a
  81+ 979C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 979D CD E2 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 97A0 67           	ld h,a
  84+ 97A1 A7           	and a
  85+ 97A2 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 97A4 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 97A5 3A 0E 8C     	ld a,(Cuad_objeto)
  88+ 97A8 FE 02        	cp 2
  89+ 97AA 38 1E        	jr c,3F
  90+ 97AC 28 1C        	jr z,3F
  91+ 97AE 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 97AF 28 23            jr z,7F
  93+ 97B1 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 97B3 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 97B5 E1           	pop hl
  96+ 97B6
  97+ 97B6              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 97B6              ; _para indicar con E="2" en caso necesario.
  99+ 97B6
 100+ 97B6 E5               push hl
 101+ 97B7 C5               push bc
 102+ 97B8 CD E2 94     	call calcula_tercio
 103+ 97BB FE 01        	cp 1
 104+ 97BD 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97BF CD EF 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97C2 28 26            jr z,9F
 107+ 97C4 38 24            jr c,9F
 108+ 97C6 1E 00        11 ld e,0
 109+ 97C8 18 22            jr 8F
 110+ 97CA 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97CB 28 07        	jr z, 7F
 112+ 97CD 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97CF 1E 00         	ld e,0
 114+ 97D1 E1           	pop hl
 115+ 97D2 18 04        	jr 4F
 116+ 97D4 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97D6 18 15            jr 10F
 118+ 97D8
 119+ 97D8              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97D8              ; _para indicar con E="2" en caso necesario.
 121+ 97D8
 122+ 97D8 E5           4 push hl
 123+ 97D9 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97DA CD E2 94     	call calcula_tercio
 125+ 97DD FE 01        	cp 1
 126+ 97DF 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97E1 CD EF 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97E4 28 04            jr z,9F
 129+ 97E6 30 02            jr nc,9F
 130+ 97E8 18 02        	jr 8F
 131+ 97EA 1E 02        9 ld e,2
 132+ 97EC C1           8 pop bc
 133+ 97ED E1           10 pop hl
 134+ 97EE C9           5 ret
 135+ 97EF
 136+ 97EF              ; --------------------
 137+ 97EF              ;
 138+ 97EF              ; 25/08/22
 139+ 97EF
 140+ 97EF CD E2 94     Comprueba_centro call calcula_tercio
 141+ 97F2 67               ld h,a
 142+ 97F3 08           	ex af,af
 143+ 97F4 FE 02        	cp 2
 144+ 97F6 38 07        	jr c,1F
 145+ 97F8 28 05        	jr z,1F
 146+ 97FA 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97FD 18 03        	jr 2F
 148+ 97FF 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9802 08           2 ex af,af
 150+ 9803 A7               and a
 151+ 9804 ED 42            sbc hl,bc
 152+ 9806 C9               ret
 153+ 9807
 154+ 9807              ; *********************************************************************************************************************************************************************************************
 155+ 9807              ;
 156+ 9807              ;   16/8/22
 157+ 9807              ;
 158+ 9807              ;	Comprueba_limite_vertical
 159+ 9807              ;
 160+ 9807              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9807              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9807              ;
 163+ 9807
 164+ 9807 2A FF 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 980A 7D           	ld a,l
 166+ 980B E6 1F        	and $1F
 167+ 980D 57           	ld d,a
 168+ 980E 3A 12 8C     	ld a,(Limite_vertical)
 169+ 9811 BA           	cp d 											; Límite - Posición.
 170+ 9812 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9813 3A 0E 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9816 CB 47        	bit 0,a
 173+ 9818 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 981A
 175+ 981A              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 981A
 177+ 981A 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 981B 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 981D
 180+ 981D              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 981D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 981D
 183+ 981D 3A F0 8B         ld a,(Coordenada_X)
 184+ 9820 16 0F            ld d,Centro_izquierda
 185+ 9822 A7               and a
 186+ 9823 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9824 28 1E            jr z,3F
 188+ 9826 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9828              ;                                                    ; _salimos sin modificar nada.
 190+ 9828 18 0E            jr 2F
 191+ 982A 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 982B 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 982D
 194+ 982D              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 982D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 982D
 197+ 982D 3A F0 8B         ld a,(Coordenada_X)
 198+ 9830 16 10            ld d,Centro_derecha
 199+ 9832 A7               and a
 200+ 9833 92               sub d
 201+ 9834 28 0E            jr z,3F
 202+ 9836 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9838              ;                                                    ; _salimos sin modificar nada.
 204+ 9838 CB 43        2 bit 0,e
 205+ 983A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 983C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 983D CD D1 98         call Modificaccionne
 208+ 9840 C1           	pop bc
 209+ 9841 CD E1 98         call Inicializacion
 210+ 9844 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9845
 212+ 9845              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9845
 214+ 9845 C5           4 push bc
 215+ 9846 01 FE 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9849 0A           	ld a,(bc)
 217+ 984A 3D           	dec a
 218+ 984B 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 984C 7D           	ld a,l
 220+ 984D 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 984E CB 47        	bit 0,a
 222+ 9850 28 03        	jr z,5F
 223+ 9852 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9853 18 2E        	jr 7F
 225+ 9855
 226+ 9855              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9855
 228+ 9855 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9856 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9857 3A FC 8B     	ld a,(Ctrl_0)
 231+ 985A CB 4F        	bit 1,a
 232+ 985C 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 985E F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 985F
 235+ 985F              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 985F
 237+ 985F 1C               inc e
 238+ 9860 1D               dec e
 239+ 9861 20 07            jr nz,12F
 240+ 9863 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9864 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9865 22 FF 8B     	ld (Posicion_actual),hl
 243+ 9868 18 44        13 jr 9F
 244+ 986A CB 43        12 bit 0,e
 245+ 986C 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 986E              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 986E C1           	pop bc
 248+ 986F 18 D3        	jr 3B
 249+ 9871 80           14 add b
 250+ 9872 6F               ld l,a
 251+ 9873 22 FF 8B     	ld (Posicion_actual),hl
 252+ 9876 CD D1 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9879 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 987B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 987D 32 FC 8B         ld (Ctrl_0),a
 256+ 9880 F1           	pop af
 257+ 9881 18 2B        	jr 9F
 258+ 9883
 259+ 9883              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9883
 261+ 9883 F5           7 push af
 262+ 9884 3A FC 8B     	ld a,(Ctrl_0)
 263+ 9887 CB 47        	bit 0,a
 264+ 9889 20 1D        	jr nz,8F
 265+ 988B F1           	pop af
 266+ 988C
 267+ 988C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 988C
 269+ 988C 1C           	inc e
 270+ 988D 1D               dec e
 271+ 988E 20 07            jr nz,10F
 272+ 9890 90           	sub b
 273+ 9891 6F               ld l,a
 274+ 9892 22 FF 8B     	ld (Posicion_actual),hl
 275+ 9895 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9897              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9897 CB 43        10 bit 0,e
 278+ 9899 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 989B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 989B C1           	pop bc
 281+ 989C 18 A6        	jr 3B
 282+ 989E 90           16 sub b
 283+ 989F 6F               ld l,a
 284+ 98A0 22 FF 8B     	ld (Posicion_actual),hl
 285+ 98A3 CD D1 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 98A6 18 06            jr 9F
 287+ 98A8 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 98AA 32 FC 8B         ld (Ctrl_0),a
 289+ 98AD F1           	pop af
 290+ 98AE C1           9 pop bc
 291+ 98AF 1E 00        	ld e,0
 292+ 98B1 CD E1 98         call Inicializacion
 293+ 98B4 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 98B5 08           	ex af,af
 295+ 98B6 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 98B7 18 8B            jr 3B
 297+ 98B9
 298+ 98B9              ; --------------------
 299+ 98B9
 300+ 98B9 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98BB CD 04 9A     1 call PreviousScan
 302+ 98BE 10 FB            djnz 1B
 303+ 98C0 22 FF 8B     	ld (Posicion_actual),hl
 304+ 98C3 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98C4 C9           	ret
 306+ 98C5
 307+ 98C5              ; --------------------
 308+ 98C5
 309+ 98C5 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98C7 CD F5 99     1 call NextScan
 311+ 98CA 10 FB            djnz 1B
 312+ 98CC 22 FF 8B     	ld (Posicion_actual),hl
 313+ 98CF AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98D0 C9           	ret
 315+ 98D1
 316+ 98D1              ; --------------------
 317+ 98D1              ;
 318+ 98D1              ;	22/01/23
 319+ 98D1              ;
 320+ 98D1              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98D1              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98D1              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98D1
 324+ 98D1
 325+ 98D1              Modificaccionne
 326+ 98D1
 327+ 98D1 3A 0E 8C     	ld a,(Cuad_objeto)
 328+ 98D4 FE 02        	cp 2
 329+ 98D6 CC B9 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98D9 DC B9 98         call c,Modifica_Pos_actual
 331+ 98DC C8           	ret z
 332+ 98DD CD C5 98         call Modifica_Pos_actual2
 333+ 98E0 C9               ret
 334+ 98E1
 335+ 98E1              ; *************************************************************************************************************************************************************************************************
 336+ 98E1              ;
 337+ 98E1              ;	13/8/22
 338+ 98E1              ;
 339+ 98E1              ;	Inicializacion
 340+ 98E1              ;
 341+ 98E1              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98E1              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98E1              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98E1              ;
 345+ 98E1              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98E1              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98E1              ;	_ desaparece/aparece.
 348+ 98E1
 349+ 98E1              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98E1              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98E1              ;
 352+ 98E1              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98E1              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98E1              ; 		   [E] ="0"
 355+ 98E1
 356+ 98E1              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98E1
 358+ 98E1 CD E2 94     Inicializacion call calcula_tercio
 359+ 98E4 28 36        	jr z,primit
 360+ 98E6 E6 02        	and 2
 361+ 98E8 20 07        	jr nz,segmit
 362+ 98EA 7D           	ld a,l
 363+ 98EB FE 7F        	cp $7f
 364+ 98ED 38 2D        	jr c,primit
 365+ 98EF 28 2B        	jr z,primit
 366+ 98F1 CD 57 99     segmit call column
 367+ 98F4 38 13        	jr c,tercuad
 368+ 98F6 3E 04        cuarcuad ld a,4
 369+ 98F8 32 0E 8C     	ld (Cuad_objeto),a
 370+ 98FB 21 20 48     	ld hl,$4820
 371+ 98FE 22 10 8C     	ld (Limite_horizontal),hl
 372+ 9901 21 12 8C     	ld hl,Limite_vertical
 373+ 9904 36 0D        	ld (hl),$0d
 374+ 9906 08           	ex af,af
 375+ 9907 18 3C        	jr 1F
 376+ 9909              tercuad
 377+ 9909 3E 03        	ld a,3
 378+ 990B 32 0E 8C     	ld (Cuad_objeto),a
 379+ 990E 21 20 48     	ld hl,$4820
 380+ 9911 22 10 8C     	ld (Limite_horizontal),hl
 381+ 9914 21 12 8C     	ld hl,Limite_vertical
 382+ 9917 36 12        	ld (hl),$12
 383+ 9919 08           	ex af,af
 384+ 991A 18 29        	jr 1F
 385+ 991C CD 57 99     primit call column
 386+ 991F 38 13        	jr c, primcuad
 387+ 9921              segcuad
 388+ 9921 3E 02        	ld a,2
 389+ 9923 32 0E 8C     	ld (Cuad_objeto),a
 390+ 9926 21 C0 4F     	ld hl,$4fc0
 391+ 9929 22 10 8C     	ld (Limite_horizontal),hl
 392+ 992C 21 12 8C     	ld hl,Limite_vertical
 393+ 992F 36 0D        	ld (hl),$0d
 394+ 9931 08           	ex af,af
 395+ 9932 18 11        	jr 1F
 396+ 9934              primcuad
 397+ 9934 3E 01        	ld a,1
 398+ 9936 32 0E 8C     	ld (Cuad_objeto),a
 399+ 9939 21 C0 4F     	ld hl,$4fc0
 400+ 993C 22 10 8C     	ld (Limite_horizontal),hl
 401+ 993F 21 12 8C     	ld hl,Limite_vertical
 402+ 9942 36 12        	ld (hl),$12
 403+ 9944 08           	ex af,af
 404+ 9945
 405+ 9945 C5           1 push bc
 406+ 9946 E5           	push hl
 407+ 9947 D5           	push de
 408+ 9948
 409+ 9948 2A FF 8B     	ld hl,(Posicion_actual)
 410+ 994B CD 00 95     	call Genera_coordenadas
 411+ 994E
 412+ 994E D1           	pop de
 413+ 994F E1           	pop hl
 414+ 9950 C1           	pop bc
 415+ 9951
 416+ 9951 21 FC 8B     	ld hl,Ctrl_0
 417+ 9954 CB EE        	set 5,(hl)
 418+ 9956 C9           	ret
 419+ 9957
 420+ 9957              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9957
 422+ 9957              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9957              ;
 424+ 9957              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9957
 426+ 9957 7D           column ld a,l
 427+ 9958 E6 1F        	and $1f
 428+ 995A FE 10         	cp $10
 429+ 995C C9            	ret
 430+ 995D
 431+ 995D              ; --------------------------------------------------------------------------------------------------------------------
 432+ 995D              ;
 433+ 995D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 995D              ;
 435+ 995D              ; 14/12/22
 436+ 995D              ;
 437+ 995D              ;	Modifica: A y BC.
 438+ 995D
 439+ 995D 3A 0E 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9960 E6 01        	and 1
 441+ 9962 28 17        	jr z,1F
 442+ 9964
 443+ 9964              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9964
 445+ 9964 3A F0 8B     	ld a,(Coordenada_X)
 446+ 9967 47           	ld b,a
 447+ 9968 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9969 79           	ld a,c
 449+ 996A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 996B 38 08        	jr c,2F
 451+ 996D 47           	ld b,a
 452+ 996E 79           	ld a,c
 453+ 996F 90           	sub b
 454+ 9970 32 0F 8C     	ld (Columnas),a
 455+ 9973 18 1B        	jr 4F
 456+ 9975 79           2 ld a,c
 457+ 9976 32 0F 8C     	ld (Columnas),a
 458+ 9979 18 15        	jr 4F
 459+ 997B
 460+ 997B              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 997B
 462+ 997B 3A F0 8B     1 ld a,(Coordenada_X)
 463+ 997E 81           	add c
 464+ 997F 3D           	dec a
 465+ 9980 D6 1F        	sub $1f
 466+ 9982 38 08        	jr c,3F
 467+ 9984 47           	ld b,a
 468+ 9985 79           	ld a,c
 469+ 9986 90           	sub b
 470+ 9987 32 0F 8C     	ld (Columnas),a
 471+ 998A 18 04        	jr 4F
 472+ 998C 79           3 ld a,c
 473+ 998D 32 0F 8C     	ld (Columnas),a
 474+ 9990 D9           4 exx
 475+ 9991 4F           	ld c,a
 476+ 9992 D9           	exx
 477+ 9993 C9            ret
 478+ 9994
 479+ 9994              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9994              ;
 481+ 9994              ;   19/7/23
 482+ 9994              ;
 483+ 9994              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9994              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9994              ;
 486+ 9994              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9994              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9994              ;
 489+ 9994              ;	DESTRUYE: HL,B Y A.
 490+ 9994
 491+ 9994 3A 0E 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9997 FE 02        	cp 2
 493+ 9999 38 18        	jr c,1F
 494+ 999B 28 16        	jr z,1F
 495+ 999D E6 01        	and 1
 496+ 999F 28 0D        	jr z,3F
 497+ 99A1
 498+ 99A1              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 99A1
 500+ 99A1 CD DD 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 99A4
 502+ 99A4 7D           9 ld a,l
 503+ 99A5 E6 1F        	and $1f
 504+ 99A7 28 2A        	jr z,7F
 505+ 99A9 2B           	dec hl
 506+ 99AA 10 F8        	djnz 9B
 507+ 99AC 18 25        	jr 7F
 508+ 99AE
 509+ 99AE              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 99AE
 511+ 99AE 2A FF 8B     3 ld hl,(Posicion_actual)
 512+ 99B1 18 20        	jr 7F
 513+ 99B3
 514+ 99B3 28 14        1 jr z,2F
 515+ 99B5
 516+ 99B5              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 99B5
 518+ 99B5 CD DD 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99B8
 520+ 99B8 7D           4 ld a,l
 521+ 99B9 E6 1F        	and $1f
 522+ 99BB 28 03        	jr z,6F
 523+ 99BD 2B           	dec hl
 524+ 99BE 10 F8        	djnz 4B
 525+ 99C0 06 0F        6 ld b,15
 526+ 99C2 CD 04 9A     5 call PreviousScan
 527+ 99C5 10 FB        	djnz 5B
 528+ 99C7 18 0A        	jr 7F
 529+ 99C9
 530+ 99C9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99C9
 532+ 99C9 CD DD 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99CC 06 0F        	ld b,15
 534+ 99CE CD 04 9A     8 call PreviousScan
 535+ 99D1 10 FB        	djnz 8B
 536+ 99D3
 537+ 99D3 E5           7 push hl
 538+ 99D4 DD E1        	pop ix
 539+ 99D6
 540+ 99D6 2A 01 8C     	ld hl,(Puntero_objeto)
 541+ 99D9 E5           	push hl
 542+ 99DA FD E1        	pop iy
 543+ 99DC
 544+ 99DC C9           	ret
 545+ 99DD
 546+ 99DD              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99DD              ;
 548+ 99DD              ;	2/1/23
 549+ 99DD              ;
 550+ 99DD              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99DD              ;
 552+ 99DD              ;	Tras esta rutina tenemos:
 553+ 99DD              ;
 554+ 99DD              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99DD              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99DD              ;
 557+ 99DD              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99DD
 559+ 99DD 2A FF 8B     Operandos ld hl,(Posicion_actual)
 560+ 99E0 3A 0F 8C     	ld a,(Columnas)
 561+ 99E3 3D           	dec a
 562+ 99E4 20 01        	jr nz,1F
 563+ 99E6 3C           	inc a
 564+ 99E7 47           1 ld b,a
 565+ 99E8 C9           	ret
 566+ 99E9
 567+ 99E9              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99E9              ;
 569+ 99E9              ;	Prepara_draw
 570+ 99E9              ;
 571+ 99E9              ;	Es una rutina de carga.
 572+ 99E9              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99E9              ;
 574+ 99E9              ;	FUNCIONAMIENTO:
 575+ 99E9              ;
 576+ 99E9              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99E9              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99E9              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99E9              ;
 580+ 99E9              ;	DESTRUYE:
 581+ 99E9              ;
 582+ 99E9              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99E9
 584+ 99E9 21 FD 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99EC 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99ED 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99EE 4E           	ld c,(hl)
 588+ 99EF 2A FF 8B     	ld hl,(Posicion_actual)
 589+ 99F2 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99F4 C9           	ret
 591+ 99F5
 592+ 99F5              ;----------------------------------------------------------------------------------------------------------------
 593+ 99F5              ;
 594+ 99F5              ;	5/08/22
 595+ 99F5              ;
 596+ 99F5              ;   NextScan.
 597+ 99F5              ;
 598+ 99F5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99F5              ;
 600+ 99F5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99F5              ;
 602+ 99F5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99F5              ;
 604+ 99F5              ;       DESTRUIDOS: AF y HL !!!
 605+ 99F5              ;
 606+ 99F5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99F5              ;
 608+ 99F5
 609+ 99F5 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99F6 7C               ld a,h
 611+ 99F7 E6 07            and 7
 612+ 99F9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99FA
 614+ 99FA 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99FB C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99FD 6F               ld l,a
 617+ 99FE D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99FF
 619+ 99FF 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9A00 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9A02 67               ld h,a
 622+ 9A03 C9               ret
 623+ 9A04
 624+ 9A04              ;----------------------------------------------------------------------------------------------------------------
 625+ 9A04              ;
 626+ 9A04              ;	5/08/22
 627+ 9A04              ;
 628+ 9A04              ;   PreviousScan.
 629+ 9A04              ;
 630+ 9A04              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9A04              ;
 632+ 9A04              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9A04              ;
 634+ 9A04              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9A04              ;
 636+ 9A04              ;       DESTRUIDOS: AF y HL !!!
 637+ 9A04              ;
 638+ 9A04              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9A04              ;
 640+ 9A04
 641+ 9A04 7C           PreviousScan ld a,h
 642+ 9A05 25               dec h               ; Dec H.
 643+ 9A06 E6 07            and 7
 644+ 9A08 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A09
 646+ 9A09 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A0A D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A0C 6F               ld l,a
 649+ 9A0D D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A0E
 651+ 9A0E 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A0F C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A11 67               ld h,a
 654+ 9A12 C9               ret
 655+ 9A13
 656+ 9A13
 657+ 9A13
 658+ 9A13
 659+ 9A13
 660+ 9A13
 661+ 9A13
 662+ 9A13
 663+ 9A13
 664+ 9A13
 665+ 9A13
 666+ 9A13
# file closed: Draw_XOR.asm
2126  9A13              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A13
   2+ 9A13              ; ******************************************************************************************************************************************************************************************
   3+ 9A13              ;
   4+ 9A13              ;   20/05/23
   5+ 9A13              ;
   6+ 9A13              ;	Recompone_posicion_inicio
   7+ 9A13              ;
   8+ 9A13              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A13              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A13              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A13              ;	_ a una u otra rutina.
  12+ 9A13
  13+ 9A13              Recompone_posicion_inicio
  14+ 9A13
  15+ 9A13 2A 0C 8C     	ld hl,(Posicion_inicio)
  16+ 9A16 7D           	ld a,l
  17+ 9A17 E6 1F        	and $1f
  18+ 9A19 28 16        	jr z,1F
  19+ 9A1B
  20+ 9A1B FE 1F        	cp $1f
  21+ 9A1D 28 0D        	jr z,3F
  22+ 9A1F
  23+ 9A1F 21 FB 8B     	ld hl,Ctrl_2
  24+ 9A22 CB C6        	set 0,(hl)
  25+ 9A24 2A 01 8C     	ld hl,(Puntero_objeto)
  26+ 9A27 22 2D 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A2A 18 08        	jr 2F
  28+ 9A2C
  29+ 9A2C CD DA 9B     3 call Mov_left
  30+ 9A2F 18 03        	jr 2F
  31+ 9A31
  32+ 9A31 CD B7 9A     1 call Mov_right
  33+ 9A34 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A37 22 01 8C     	ld (Puntero_objeto),hl
  35+ 9A3A C9           	ret
  36+ 9A3B
  37+ 9A3B              ; ******************************************************************************************************************************************************************************************
  38+ 9A3B              ;
  39+ 9A3B              ;   27/05/23
  40+ 9A3B              ;
  41+ 9A3B              ;	Mov_down
  42+ 9A3B              ;
  43+ 9A3B              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A3B              ;
  45+ 9A3B              ;
  46+ 9A3B              Mov_down
  47+ 9A3B
  48+ 9A3B CD A5 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A3E              ;																	; _ repone (Puntero_objeto).
  50+ 9A3E 21 FC 8B     	ld hl,Ctrl_0
  51+ 9A41 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A43              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A43              ; 																	; _ en el caso de que no lo haya.
  54+ 9A43 3A 17 8C     	ld a,(Vel_down)
  55+ 9A46 47           	ld b,a
  56+ 9A47 2A FF 8B         ld hl,(Posicion_actual)
  57+ 9A4A CD E2 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A4D E6 02        	and 2
  59+ 9A4F 28 17        	jr z,1F
  60+ 9A51
  61+ 9A51              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A51              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A51
  64+ 9A51 7C           	ld a,h
  65+ 9A52 FE 57        	cp $57
  66+ 9A54 20 12        	jr nz,1F
  67+ 9A56
  68+ 9A56 7D           	ld a,l
  69+ 9A57 C6 20        	add $20
  70+ 9A59 30 0D        	jr nc,1F
  71+ 9A5B
  72+ 9A5B              ; ------------------------------
  73+ 9A5B              ;
  74+ 9A5B              ;	12/01/24
  75+ 9A5B
  76+ 9A5B              ;	call Reaparece_arriba
  77+ 9A5B CD 67 9D     	call Reinicio
  78+ 9A5E
  79+ 9A5E              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A5E
  81+ 9A5E 3A 66 8C     	ld a,(Ctrl_3)
  82+ 9A61 CB CF        	set 1,a
  83+ 9A63 32 66 8C     	ld (Ctrl_3),a
  84+ 9A66
  85+ 9A66 18 08        	jr 3F
  86+ 9A68              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A68              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A68              ; ------------------------------
  89+ 9A68
  90+ 9A68 CD F5 99     1 call NextScan
  91+ 9A6B 22 FF 8B     	ld (Posicion_actual),hl
  92+ 9A6E 10 DA            djnz 2B
  93+ 9A70 CD 00 95     3 call Genera_coordenadas
  94+ 9A73 C9           	ret
  95+ 9A74
  96+ 9A74              ; ******************************************************************************************************************************************************************************************
  97+ 9A74              ;
  98+ 9A74              ;   27/05/23
  99+ 9A74              ;
 100+ 9A74              ;	Mov_up
 101+ 9A74              ;
 102+ 9A74              ; 	Mueve el Sprite hacia arriba.
 103+ 9A74              ;
 104+ 9A74              ;
 105+ 9A74              Mov_up
 106+ 9A74
 107+ 9A74 CD A5 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A77              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A77 21 FC 8B     	ld hl,Ctrl_0
 110+ 9A7A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A7C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A7C              ; 																		; _ en el caso de que no lo haya.
 113+ 9A7C 3A 16 8C     	ld a,(Vel_up)
 114+ 9A7F 47           	ld b,a
 115+ 9A80 2A FF 8B     	ld hl,(Posicion_actual)
 116+ 9A83 CD E2 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A86 A7           	and a
 118+ 9A87 20 10        	jr nz,1F
 119+ 9A89
 120+ 9A89              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A89              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A89
 123+ 9A89 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A8A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A8C 20 0B            jr nz,1F
 126+ 9A8E 7D               ld a,l
 127+ 9A8F D6 20            sub $20
 128+ 9A91 30 06            jr nc,1F
 129+ 9A93 25               dec h
 130+ 9A94
 131+ 9A94              ; -----------------------------
 132+ 9A94 CD 48 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A97              ;	call Reinicio
 134+ 9A97              ; -----------------------------
 135+ 9A97
 136+ 9A97 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A99 CD 04 9A     1 call PreviousScan
 138+ 9A9C 22 FF 8B     	ld (Posicion_actual),hl
 139+ 9A9F 10 E2            djnz 3B
 140+ 9AA1 CD 00 95     2 call Genera_coordenadas
 141+ 9AA4 C9           	ret
 142+ 9AA5
 143+ 9AA5              ; -----------------------------
 144+ 9AA5              ;
 145+ 9AA5              ;	27/5/23
 146+ 9AA5              ;
 147+ 9AA5              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9AA5              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9AA5              ;
 150+ 9AA5              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9AA5              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9AA5              ;
 153+ 9AA5              ;	Modifica: A y (Puntero_objeto).
 154+ 9AA5
 155+ 9AA5 3A FB 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9AA8 CB 47        	bit 0,a
 157+ 9AAA C8           	ret z
 158+ 9AAB CB 87        	res 0,a
 159+ 9AAD 32 FB 8B     	ld (Ctrl_2),a
 160+ 9AB0 2A 2D 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9AB3 22 01 8C     	ld (Puntero_objeto),hl
 162+ 9AB6 C9           	ret
 163+ 9AB7
 164+ 9AB7              ; ******************************************************************************************************************************************************************************************
 165+ 9AB7              ;
 166+ 9AB7              ;	19/10/22
 167+ 9AB7              ;
 168+ 9AB7              ;	Mov_right.
 169+ 9AB7              ;
 170+ 9AB7              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9AB7              ;
 172+ 9AB7
 173+ 9AB7 3A FC 8B     Mov_right ld a,(Ctrl_0)
 174+ 9ABA CB 77        	bit 6,a
 175+ 9ABC 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9ABE
 177+ 9ABE CD F6 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AC1 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AC2
 180+ 9AC2 21 FC 8B     	ld hl,Ctrl_0
 181+ 9AC5 CB E6        	set 4,(hl)
 182+ 9AC7 18 52        	jr 8F
 183+ 9AC9
 184+ 9AC9 21 FC 8B     10 ld hl,Ctrl_0
 185+ 9ACC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9ACE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9ACE              ; 																	; _ en el caso de que no lo haya.
 188+ 9ACE 3A F0 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AD1 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AD3 20 46        	jr nz,8F
 191+ 9AD5
 192+ 9AD5 3A 03 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AD8 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AD9 28 40        	jr z,8F
 195+ 9ADB
 196+ 9ADB              ; ---------- ---------- ----------
 197+ 9ADB              ;
 198+ 9ADB              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9ADB
 200+ 9ADB 3A 15 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9ADE FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AE0 28 11        	jr z,1F
 203+ 9AE2 38 06        	jr c,6F
 204+ 9AE4 FE 04        	cp 4
 205+ 9AE6 28 14        	jr z,7F
 206+ 9AE8 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AEA
 208+ 9AEA              ; ---------- ---------- ----------
 209+ 9AEA              ;
 210+ 9AEA              ; Perfiles de velocidad
 211+ 9AEA              ;
 212+ 9AEA
 213+ 9AEA 3A 03 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AED FE FE        	cp $fe
 215+ 9AEF 20 2A        	jr nz,8F
 216+ 9AF1 18 10        	jr 3F
 217+ 9AF3 3A 03 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AF6 FE FD        	cp $fd
 219+ 9AF8 20 21        	jr nz,8F
 220+ 9AFA 18 07        	jr 3F
 221+ 9AFC 3A 03 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AFF FE FB        	cp $fb
 223+ 9B01 20 18        	jr nz,8F
 224+ 9B03
 225+ 9B03              ; ---------- ---------- ----------
 226+ 9B03
 227+ 9B03              3
 228+ 9B03 CD 36 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B06              ;	call Reinicio
 230+ 9B06
 231+ 9B06              ; ---------- ---------- ----------
 232+ 9B06              ;
 233+ 9B06              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B06
 235+ 9B06 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B08 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B09 CD 22 9B     	call DESPLZ_DER
 238+ 9B0C C1           	pop bc
 239+ 9B0D 10 F9        	djnz 5B
 240+ 9B0F 2A FF 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B12 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B13 22 FF 8B     	ld (Posicion_actual),hl
 243+ 9B16 CD 00 95     	call Genera_coordenadas
 244+ 9B19 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B1B
 246+ 9B1B              ; ---------- ---------- ----------
 247+ 9B1B
 248+ 9B1B 2A FF 8B     8 ld hl,(Posicion_actual)
 249+ 9B1E CD 22 9B     	call DESPLZ_DER
 250+ 9B21 C9           2 ret
 251+ 9B22
 252+ 9B22              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B22              ;
 254+ 9B22              ;	22/9/22
 255+ 9B22              ;
 256+ 9B22
 257+ 9B22 CD 31 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B25 CD 7D 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B28 CD A6 9B         call Ciclo_completo
 260+ 9B2B 21 FC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B2E CB FE        	set 7,(hl)
 262+ 9B30 C9           	ret
 263+ 9B31
 264+ 9B31              ; ******************************************************************************************************************************************************************************************
 265+ 9B31              ;	15/02/23
 266+ 9B31              ;
 267+ 9B31
 268+ 9B31 3A 15 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B34 47           	ld b,a
 270+ 9B35 2A 08 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B38 23           1 inc hl
 272+ 9B39 23           	inc hl
 273+ 9B3A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B3C 22 08 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B3F CD 25 91     	call Extrae_address
 276+ 9B42 22 01 8C     	ld (Puntero_objeto),hl
 277+ 9B45
 278+ 9B45              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B45
 280+ 9B45              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B45              ; Cuántos movimientos hemos hecho ??
 282+ 9B45              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B45
 284+ 9B45 2A 04 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B48 EB           	ex de,hl
 286+ 9B49 A7           	and a
 287+ 9B4A ED 52        	sbc hl,de
 288+ 9B4C CB 3D        	srl l
 289+ 9B4E 3E 08        6 ld a,8
 290+ 9B50 95           	sub l
 291+ 9B51 30 1E        	jr nc,3F
 292+ 9B53
 293+ 9B53              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B53              ; B="0".
 295+ 9B53
 296+ 9B53 04           4 inc b
 297+ 9B54 3C           	inc a
 298+ 9B55 20 FC        	jr nz,4B
 299+ 9B57 78           	ld a,b
 300+ 9B58 08           	ex af,af
 301+ 9B59 2A 04 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B5C 23           5 inc hl
 303+ 9B5D 23           	inc hl
 304+ 9B5E 10 FC        	djnz 5B
 305+ 9B60 22 08 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B63 CD 25 91     	call Extrae_address
 307+ 9B66 22 01 8C     	ld (Puntero_objeto),hl
 308+ 9B69
 309+ 9B69              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B69              ; _(Posicion_actual).
 311+ 9B69
 312+ 9B69 21 FF 8B     	ld hl,Posicion_actual
 313+ 9B6C 34           	inc (hl)
 314+ 9B6D 08               ex af,af
 315+ 9B6E 6F           	ld l,a
 316+ 9B6F 18 DD        	jr 6B
 317+ 9B71
 318+ 9B71              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B71
 320+ 9B71 47           3 ld b,a
 321+ 9B72 2A 06 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B75 23           2 inc hl
 323+ 9B76 23           	inc hl
 324+ 9B77 10 FC        	djnz 2B
 325+ 9B79 22 0A 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B7C C9           8 ret
 327+ 9B7D
 328+ 9B7D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B7D              ;
 330+ 9B7D              ;	24/7/22
 331+ 9B7D              ;
 332+ 9B7D              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B7D              ;
 334+ 9B7D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B7D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B7D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B7D
 338+ 9B7D 3A 03 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B80 A7           	and a
 340+ 9B81 20 1F        	jr nz,1F
 341+ 9B83 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B85 32 03 8C         ld (CTRL_DESPLZ),a
 343+ 9B88
 344+ 9B88 21 FE 8B     	ld hl,Columns
 345+ 9B8B 34           	inc (hl)
 346+ 9B8C 3A 0E 8C     	ld a,(Cuad_objeto)
 347+ 9B8F E6 01        	and 1
 348+ 9B91 28 0F        	jr z,1F
 349+ 9B93 2A FF 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B96 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B97 22 FF 8B     	ld (Posicion_actual),hl
 352+ 9B9A CD 00 95     	call Genera_coordenadas
 353+ 9B9D CD 02 9D     	call Inc_CTRL_DESPLZ
 354+ 9BA0 18 03        	jr 2F
 355+ 9BA2 CD 02 9D     1 call Inc_CTRL_DESPLZ
 356+ 9BA5 C9           2 ret
 357+ 9BA6
 358+ 9BA6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9BA6              ;
 360+ 9BA6              ;	24/7/22
 361+ 9BA6              ;
 362+ 9BA6              ;	Ciclo_completo.
 363+ 9BA6              ;
 364+ 9BA6              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9BA6              ;
 366+ 9BA6              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9BA6              ; 	Decrementamos (Columns).
 368+ 9BA6              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9BA6              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9BA6
 371+ 9BA6
 372+ 9BA6 3A 03 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9BA9 FE FF        	cp $ff
 374+ 9BAB 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9BAD E6 F0        	and $f0
 376+ 9BAF 20 28        	jr nz,3F
 377+ 9BB1
 378+ 9BB1              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9BB1
 380+ 9BB1 3A 03 8C     	ld a,(CTRL_DESPLZ)
 381+ 9BB4 47           	ld b,a
 382+ 9BB5 3E F8        	ld a,$f8
 383+ 9BB7 80           	add b
 384+ 9BB8 32 03 8C     	ld (CTRL_DESPLZ),a
 385+ 9BBB 18 1C        	jr 3F
 386+ 9BBD 21 FE 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BC0 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BC1 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BC2 32 03 8C     	ld (CTRL_DESPLZ),a
 390+ 9BC5 3A 0E 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BC8 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BCA 20 0A        	jr nz,2F
 393+ 9BCC 2A FF 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BCF 23           	inc hl
 395+ 9BD0 22 FF 8B     	ld (Posicion_actual),hl
 396+ 9BD3 CD 00 95     	call Genera_coordenadas
 397+ 9BD6
 398+ 9BD6              ; Inicia el puntero de Sprite.
 399+ 9BD6
 400+ 9BD6 CD 3A 91     2 call Inicia_puntero_objeto_der
 401+ 9BD9 C9           3 ret
 402+ 9BDA
 403+ 9BDA              ; ******************************************************************************************************************************************************************************************
 404+ 9BDA              ;
 405+ 9BDA              ;	15/02/23
 406+ 9BDA              ;
 407+ 9BDA              ;	Mov_left.
 408+ 9BDA              ;
 409+ 9BDA              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BDA              ;
 411+ 9BDA              Mov_left
 412+ 9BDA
 413+ 9BDA 21 FC 8B     	ld hl,Ctrl_0
 414+ 9BDD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BDF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BDF              ; 																	; _ en el caso de que no lo haya.
 417+ 9BDF 3A FC 8B     	ld a,(Ctrl_0)
 418+ 9BE2 CB 77        	bit 6,a
 419+ 9BE4 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BE6
 421+ 9BE6 CD FC 9C     	call Stop_Amadeus_left
 422+ 9BE9 C8           	ret z
 423+ 9BEA 20 4A        	jr nz,8F
 424+ 9BEC
 425+ 9BEC 3A F0 8B     11 ld a,(Coordenada_X)
 426+ 9BEF A7           	and a
 427+ 9BF0 20 44        	jr nz,8F
 428+ 9BF2
 429+ 9BF2 3A 03 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BF5 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BF6 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BF8
 433+ 9BF8              ; ---------- ---------- ----------
 434+ 9BF8
 435+ 9BF8 3A 14 8C     	ld a,(Vel_left)
 436+ 9BFB FE 02        	cp 2
 437+ 9BFD 28 0F        	jr z,1F
 438+ 9BFF 38 04        	jr c,6F
 439+ 9C01 FE 04        	cp 4
 440+ 9C03 28 12        	jr z,7F
 441+ 9C05
 442+ 9C05              ; ---------- ---------- ----------
 443+ 9C05
 444+ 9C05 3A 03 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9C08 FE F8        	cp $f8
 446+ 9C0A 20 2A        	jr nz,8F
 447+ 9C0C 18 10        	jr 4F
 448+ 9C0E 3A 03 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9C11 FE F9        	cp $f9
 450+ 9C13 20 21        	jr nz,8F
 451+ 9C15 18 07        	jr 4F
 452+ 9C17 3A 03 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9C1A FE FB        	cp $fb
 454+ 9C1C 20 18        	jr nz,8F
 455+ 9C1E
 456+ 9C1E              ; ---------- ---------- ----------
 457+ 9C1E
 458+ 9C1E              4
 459+ 9C1E CD 24 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C21              ;	call Reinicio
 461+ 9C21
 462+ 9C21              ; ---------- ---------- ----------
 463+ 9C21
 464+ 9C21 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C23 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C24
 467+ 9C24              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C24              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C24
 470+ 9C24 CD 3D 9C     	call DESPLZ_IZQ
 471+ 9C27 C1           	pop bc
 472+ 9C28 10 F9        	djnz 5B
 473+ 9C2A 2A FF 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C2D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C2E 22 FF 8B     	ld (Posicion_actual),hl
 476+ 9C31 CD 00 95     	call Genera_coordenadas
 477+ 9C34 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C36
 479+ 9C36              ; ---------- ---------- ----------
 480+ 9C36
 481+ 9C36              ; Movemos, no hay recolocación.
 482+ 9C36
 483+ 9C36 2A FF 8B     8 ld hl,(Posicion_actual)
 484+ 9C39 CD 3D 9C     	call DESPLZ_IZQ
 485+ 9C3C C9           2 ret
 486+ 9C3D
 487+ 9C3D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C3D              ;
 489+ 9C3D              ;	22/9/22
 490+ 9C3D
 491+ 9C3D              DESPLZ_IZQ
 492+ 9C3D
 493+ 9C3D CD 4C 9C     	call Desplaza_izquierda
 494+ 9C40 CD 98 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C43 CD C0 9C     	call Ciclo_completo_2
 496+ 9C46 21 FC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C49 CB BE        	res 7,(hl)
 498+ 9C4B C9           	ret
 499+ 9C4C
 500+ 9C4C              Desplaza_izquierda
 501+ 9C4C
 502+ 9C4C 3A 14 8C     	ld a,(Vel_left)
 503+ 9C4F 47           	ld b,a
 504+ 9C50 2A 0A 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C53 23           1 inc hl
 506+ 9C54 23           	inc hl
 507+ 9C55 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C57 22 0A 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C5A CD 25 91     	call Extrae_address
 510+ 9C5D 22 01 8C     	ld (Puntero_objeto),hl
 511+ 9C60
 512+ 9C60              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C60
 514+ 9C60              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C60              ; Cuántos movimientos hemos hecho ??
 516+ 9C60              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C60
 518+ 9C60 2A 06 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C63 EB           	ex de,hl
 520+ 9C64 A7           	and a
 521+ 9C65 ED 52        	sbc hl,de
 522+ 9C67 CB 3D        	srl l
 523+ 9C69 3E 08        6 ld a,8
 524+ 9C6B 95           	sub l
 525+ 9C6C 30 1E        	jr nc,3F
 526+ 9C6E
 527+ 9C6E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C6E              ; B="0".
 529+ 9C6E
 530+ 9C6E 04           4 inc b
 531+ 9C6F 3C           	inc a
 532+ 9C70 20 FC        	jr nz,4B
 533+ 9C72 78           	ld a,b
 534+ 9C73 08           	ex af,af
 535+ 9C74 2A 06 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C77 23           5 inc hl
 537+ 9C78 23           	inc hl
 538+ 9C79 10 FC        	djnz 5B
 539+ 9C7B 22 0A 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C7E CD 25 91     	call Extrae_address
 541+ 9C81 22 01 8C     	ld (Puntero_objeto),hl
 542+ 9C84
 543+ 9C84              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C84              ; _(Posicion_actual).
 545+ 9C84
 546+ 9C84 21 FF 8B     	ld hl,Posicion_actual
 547+ 9C87 35           	dec (hl)
 548+ 9C88 08           	ex af,af
 549+ 9C89 6F           	ld l,a
 550+ 9C8A 18 DD        	jr 6B
 551+ 9C8C
 552+ 9C8C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C8C
 554+ 9C8C 47           3 ld b,a
 555+ 9C8D 2A 04 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C90 23           2 inc hl
 557+ 9C91 23           	inc hl
 558+ 9C92 10 FC        	djnz 2B
 559+ 9C94 22 08 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C97 C9           8 ret
 561+ 9C98
 562+ 9C98              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C98              ;
 564+ 9C98              ;	modifica_parametros_1er_DESPLZ
 565+ 9C98              ;
 566+ 9C98              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C98              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C98              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C98
 570+ 9C98 3A 03 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C9B A7           	and a
 572+ 9C9C 20 1E        	jr nz,1F
 573+ 9C9E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C9F 32 03 8C         ld (CTRL_DESPLZ),a
 575+ 9CA2 21 FE 8B     	ld hl,Columns
 576+ 9CA5 34           	inc (hl)
 577+ 9CA6 3A 0E 8C     	ld a,(Cuad_objeto)
 578+ 9CA9 E6 01        	and 1
 579+ 9CAB 20 0F        	jr nz,1F
 580+ 9CAD 2A FF 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9CB0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9CB1 22 FF 8B     	ld (Posicion_actual),hl
 583+ 9CB4 CD 00 95     	call Genera_coordenadas
 584+ 9CB7 CD 13 9D     	call Dec_CTRL_DESPLZ
 585+ 9CBA 18 03        	jr 2F
 586+ 9CBC CD 13 9D     1 call Dec_CTRL_DESPLZ
 587+ 9CBF C9           2 ret
 588+ 9CC0
 589+ 9CC0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CC0
 591+ 9CC0 3A 03 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CC3 FE F7        	cp $f7
 593+ 9CC5 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CC7 30 2C        	jr nc,3F
 595+ 9CC9
 596+ 9CC9              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CC9
 598+ 9CC9 06 00        	ld b,0
 599+ 9CCB 04           4 inc b
 600+ 9CCC 3C           	inc a
 601+ 9CCD FE F7        	cp $f7
 602+ 9CCF 20 FA        	jr nz,4B
 603+ 9CD1 3E FF        	ld a,$ff
 604+ 9CD3 90           	sub b
 605+ 9CD4 32 03 8C     	ld (CTRL_DESPLZ),a
 606+ 9CD7 18 1C        	jr 3F
 607+ 9CD9
 608+ 9CD9              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CD9
 610+ 9CD9 21 FE 8B     1 ld hl,Columns
 611+ 9CDC 35           	dec (hl)
 612+ 9CDD AF           	xor a
 613+ 9CDE 32 03 8C     	ld (CTRL_DESPLZ),a
 614+ 9CE1 3A 0E 8C     	ld a,(Cuad_objeto)
 615+ 9CE4 E6 01        	and 1
 616+ 9CE6 28 0A        	jr z,2F
 617+ 9CE8 2A FF 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CEB 2B           	dec hl
 619+ 9CEC 22 FF 8B     	ld (Posicion_actual),hl
 620+ 9CEF CD 00 95     	call Genera_coordenadas
 621+ 9CF2
 622+ 9CF2              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CF2
 624+ 9CF2 CD 4D 91     2 call Inicia_puntero_objeto_izq
 625+ 9CF5 C9           3 ret
 626+ 9CF6
 627+ 9CF6              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CF6              ;
 629+ 9CF6              ;	19/10/22
 630+ 9CF6              ;
 631+ 9CF6              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CF6              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CF6
 634+ 9CF6 3A F0 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CF9 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CFB C9           	ret
 637+ 9CFC
 638+ 9CFC              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CFC              ;
 640+ 9CFC              ;	19/10/22
 641+ 9CFC              ;
 642+ 9CFC              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CFC              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CFC
 645+ 9CFC 3A F0 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CFF FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9D01 C9           	ret
 648+ 9D02
 649+ 9D02              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9D02              ;
 651+ 9D02              ;	24/7/22
 652+ 9D02              ;
 653+ 9D02              ;	Inc_CTRL_DESPLZ
 654+ 9D02              ;
 655+ 9D02              ;
 656+ 9D02              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9D02
 658+ 9D02 21 03 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D05 3A 15 8C     	ld a,(Vel_right)
 660+ 9D08 A7           	and a
 661+ 9D09 28 06        	jr z,1F
 662+ 9D0B 47           	ld b,a
 663+ 9D0C 34           3 inc (hl)
 664+ 9D0D 10 FD        	djnz 3B
 665+ 9D0F 18 01        	jr 2F
 666+ 9D11 34           1 inc (hl)
 667+ 9D12 C9           2 ret
 668+ 9D13
 669+ 9D13              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D13              ;
 671+ 9D13              ;	5/2/23
 672+ 9D13              ;
 673+ 9D13              ;	Dec_CTRL_DESPLZ
 674+ 9D13              ;
 675+ 9D13              ;
 676+ 9D13              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D13
 678+ 9D13 21 03 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D16 3A 14 8C     	ld a,(Vel_left)
 680+ 9D19 A7           	and a
 681+ 9D1A 28 06        	jr z,1F
 682+ 9D1C 47           	ld b,a
 683+ 9D1D 35           3 dec (hl)
 684+ 9D1E 10 FD        	djnz 3B
 685+ 9D20 18 01        	jr 2F
 686+ 9D22 35           1 dec (hl)
 687+ 9D23 C9           2 ret
 688+ 9D24
 689+ 9D24              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D24
 691+ 9D24 2A FF 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D27 01 1F 00     	ld bc,31
 693+ 9D2A A7           	and a
 694+ 9D2B ED 4A        	adc hl,bc
 695+ 9D2D 22 FF 8B     	ld (Posicion_actual),hl
 696+ 9D30 21 FC 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D33 CB C6        	set 0,(hl)
 698+ 9D35 C9           	ret
 699+ 9D36
 700+ 9D36              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D36
 702+ 9D36 2A FF 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D39 01 1F 00     	ld bc,31
 704+ 9D3C A7           	and a
 705+ 9D3D ED 42        	sbc hl,bc
 706+ 9D3F 22 FF 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D42 21 FC 8B     	ld hl,Ctrl_0
 708+ 9D45 CB CE        	set 1,(hl)
 709+ 9D47 C9           	ret
 710+ 9D48
 711+ 9D48              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D48
 713+ 9D48 24           Reaparece_abajo inc h
 714+ 9D49 01 E0 17     	ld bc,$17e0
 715+ 9D4C A7           	and a
 716+ 9D4D ED 4A        	adc hl,bc
 717+ 9D4F 22 FF 8B     	ld (Posicion_actual),hl
 718+ 9D52 21 FC 8B     	ld hl,Ctrl_0
 719+ 9D55 CB D6        	set 2,(hl)
 720+ 9D57 C9           	ret
 721+ 9D58
 722+ 9D58              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D58
 724+ 9D58 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D5B A7           	and a
 726+ 9D5C ED 42        	sbc hl,bc
 727+ 9D5E 22 FF 8B     	ld (Posicion_actual),hl
 728+ 9D61 21 FC 8B     	ld hl,Ctrl_0
 729+ 9D64 CB DE        	set 3,(hl)
 730+ 9D66 C9           	ret
 731+ 9D67
 732+ 9D67              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D67              ;
 734+ 9D67              ;	15/07/23
 735+ 9D67
 736+ 9D67              Reinicio
 737+ 9D67
 738+ 9D67              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D67
 740+ 9D67 AF           	xor a
 741+ 9D68 21 24 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D6B CD 89 9D     	call Limpia_contenido_hl
 743+ 9D6E
 744+ 9D6E 21 FF 8B     	ld hl,Posicion_actual
 745+ 9D71 CD 89 9D     	call Limpia_contenido_hl
 746+ 9D74
 747+ 9D74 CD 6A 93     	call Situa_Puntero_indice_mov
 748+ 9D77 CD 88 9E     	call Inicia_Puntero_mov
 749+ 9D7A
 750+ 9D7A 21 26 8C     	ld hl,Incrementa_puntero
 751+ 9D7D 06 05        	ld b,5
 752+ 9D7F 77           1 ld (hl),a
 753+ 9D80 23           	inc hl
 754+ 9D81 10 FC        	djnz 1B
 755+ 9D83
 756+ 9D83 21 FB 8B     	ld hl,Ctrl_2
 757+ 9D86 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D88
 759+ 9D88 C9           	ret
 760+ 9D89
 761+ 9D89 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D8A 23           	inc hl
 763+ 9D8B 77           	ld (hl),a
 764+ 9D8C C9           	ret
 765+ 9D8D
 766+ 9D8D              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D8D              ;
 768+ 9D8D              ;	18/6/24
 769+ 9D8D              ;
 770+ 9D8D
 771+ 9D8D              Amadeus_a_izquierda
 772+ 9D8D
 773+ 9D8D              ;	Actualiza contador de movimientos.
 774+ 9D8D
 775+ 9D8D 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9D90 35           	dec (hl)
 777+ 9D91 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D93
 779+ 9D93 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D96 2B           	dec hl
 781+ 9D97 2B           	dec hl
 782+ 9D98 2B           	dec hl
 783+ 9D99 2B           	dec hl
 784+ 9D9A 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D9D
 786+ 9D9D 21 66 8C     	ld hl,Ctrl_3
 787+ 9DA0 CB EE        	set 5,(hl)
 788+ 9DA2
 789+ 9DA2 C9           	ret
 790+ 9DA3
 791+ 9DA3 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9DA4 C9           	ret
 793+ 9DA5
 794+ 9DA5
 795+ 9DA5              Amadeus_a_derecha
 796+ 9DA5
 797+ 9DA5              ;	Actualiza contador de movimientos.
 798+ 9DA5
 799+ 9DA5 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9DA8 34           	inc (hl)
 801+ 9DA9 3E 7A        	ld a,$7a
 802+ 9DAB BE           	cp (hl)
 803+ 9DAC 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9DAE
 805+ 9DAE 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9DB1 23           	inc hl
 807+ 9DB2 23           	inc hl
 808+ 9DB3 23           	inc hl
 809+ 9DB4 23           	inc hl
 810+ 9DB5 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DB8
 812+ 9DB8 21 66 8C     	ld hl,Ctrl_3
 813+ 9DBB CB EE        	set 5,(hl)
 814+ 9DBD C9           	ret
 815+ 9DBE
 816+ 9DBE 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DBF C9           	ret
# file closed: Direcciones.asm
2127  9DC0              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DC0              ; ----- ----- ----- ----- -----
   2+ 9DC0              ;
   3+ 9DC0              ;   28/12/23
   4+ 9DC0
   5+ 9DC0              Movimiento
   6+ 9DC0
   7+ 9DC0              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DC0
   9+ 9DC0 3A FB 8B         ld a,(Ctrl_2)
  10+ 9DC3 CB 57            bit 2,a
  11+ 9DC5 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DC7
  13+ 9DC7 2A 22 8C         ld hl,(Puntero_mov)
  14+ 9DCA 7E               ld a,(hl)
  15+ 9DCB
  16+ 9DCB              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DCB
  18+ 9DCB              Inicia_desplazamiento.
  19+ 9DCB
  20+ 9DCB              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DCB
  22+ 9DCB CD BE 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DCE
  24+ 9DCE              ; Iniciamos (Repetimos_mov).
  25+ 9DCE
  26+ 9DCE 7E               ld a,(hl)
  27+ 9DCF E6 0F            and $0f
  28+ 9DD1 32 28 8C         ld (Repetimos_desplazamiento),a
  29+ 9DD4 32 29 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DD7
  31+ 9DD7              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DD7
  33+ 9DD7 23               inc hl
  34+ 9DD8 7E               ld a,(hl)
  35+ 9DD9 32 2B 8C         ld (Cola_de_desplazamiento),a
  36+ 9DDC 2B               dec hl
  37+ 9DDD
  38+ 9DDD 21 FB 8B         ld hl,Ctrl_2
  39+ 9DE0 CB D6            set 2,(hl)
  40+ 9DE2
  41+ 9DE2              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DE2              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DE2
  44+ 9DE2              Desplazamiento_iniciado
  45+ 9DE2
  46+ 9DE2 CD 92 9E         call Aplica_desplazamiento
  47+ 9DE5
  48+ 9DE5              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DE5
  50+ 9DE5 3A 66 8C         ld a,(Ctrl_3)
  51+ 9DE8 CB 4F            bit 1,a
  52+ 9DEA C0               ret nz
  53+ 9DEB
  54+ 9DEB 21 28 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DEE 35               dec (hl)
  56+ 9DEF C0               ret nz
  57+ 9DF0
  58+ 9DF0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DF0              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DF0              ; Analiza (Cola_de_desplazamiento).
  61+ 9DF0
  62+ 9DF0 3A 2B 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DF3 A7               and a
  64+ 9DF4 CC E7 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DF7 28 30            jr z,Reinicia_el_movimiento
  66+ 9DF9
  67+ 9DF9 FE FF            cp $ff
  68+ 9DFB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DFD
  70+ 9DFD FE FE            cp $fe
  71+ 9DFF CC 6C 9E         call z,Fijamos_bucle
  72+ 9E02 28 25            jr z,Reinicia_el_movimiento
  73+ 9E04
  74+ 9E04 FE FD            cp $fd
  75+ 9E06 20 11            jr nz,1F
  76+ 9E08
  77+ 9E08              ; ---
  78+ 9E08              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E08
  80+ 9E08 3A FB 8B         ld a,(Ctrl_2)
  81+ 9E0B CB 5F            bit 3,a
  82+ 9E0D 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E0F
  84+ 9E0F              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E0F
  86+ 9E0F 21 FB 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E12 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E14
  89+ 9E14 CD 7D 9E         call Inicia_Repetimos_movimiento
  90+ 9E17 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E19              ; ---
  92+ 9E19
  93+ 9E19 FE 01        1 cp 1
  94+ 9E1B CA 56 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E1E
  96+ 9E1E 3D               dec a
  97+ 9E1F 32 2B 8C         ld (Cola_de_desplazamiento),a
  98+ 9E22
  99+ 9E22 3A 29 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E25 32 28 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E28              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E28 C9               ret
 103+ 9E29
 104+ 9E29              Reinicia_el_movimiento
 105+ 9E29
 106+ 9E29 3A FB 8B         ld a,(Ctrl_2)
 107+ 9E2C CB 5F            bit 3,a
 108+ 9E2E 28 1B            jr z,2F
 109+ 9E30
 110+ 9E30              ; (Cola_de_desplazamiento)="254".
 111+ 9E30
 112+ 9E30 21 2A 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E33 35               dec (hl)
 114+ 9E34 20 15            jr nz,2F
 115+ 9E36
 116+ 9E36              ; Fin de las repeticiones del último movimiento.
 117+ 9E36
 118+ 9E36 21 FB 8B         ld hl,Ctrl_2
 119+ 9E39 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E3B
 121+ 9E3B 2A 22 8C         ld hl,(Puntero_mov)
 122+ 9E3E 23               inc hl
 123+ 9E3F 23               inc hl
 124+ 9E40 23               inc hl
 125+ 9E41 22 22 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E44              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E44 7E               ld a,(hl)
 128+ 9E45 32 2B 8C         ld (Cola_de_desplazamiento),a
 129+ 9E48
 130+ 9E48 C3 F0 9D         jp Cola
 131+ 9E4B
 132+ 9E4B CD 88 9E     2 call Inicia_Puntero_mov
 133+ 9E4E
 134+ 9E4E 21 FB 8B         ld hl,Ctrl_2
 135+ 9E51 CB 96            res 2,(hl)
 136+ 9E53
 137+ 9E53 C3 C0 9D         jp Movimiento
 138+ 9E56
 139+ 9E56              Siguiente_desplazamiento
 140+ 9E56
 141+ 9E56              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E56              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E56
 144+ 9E56 21 FB 8B         ld hl,Ctrl_2
 145+ 9E59 CB 96            res 2,(hl)
 146+ 9E5B
 147+ 9E5B 2A 22 8C         ld hl,(Puntero_mov)
 148+ 9E5E 23               inc hl
 149+ 9E5F 23               inc hl
 150+ 9E60 22 22 8C         ld (Puntero_mov),hl
 151+ 9E63
 152+ 9E63 7E               ld a,(hl)
 153+ 9E64 A7               and a
 154+ 9E65 CC E7 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E68 CA 29 9E         jp z,Reinicia_el_movimiento
 156+ 9E6B
 157+ 9E6B C9               ret
 158+ 9E6C
 159+ 9E6C              ; Subrutinas -----------------------------------------
 160+ 9E6C              ; ---------- --------- --------- ---------- ----------
 161+ 9E6C              ;
 162+ 9E6C              ;   24/07/23
 163+ 9E6C              ;
 164+ 9E6C              ;   Fijamos_bucle
 165+ 9E6C              ;
 166+ 9E6C              ;
 167+ 9E6C
 168+ 9E6C              Fijamos_bucle
 169+ 9E6C
 170+ 9E6C 3A 26 8C         ld a,(Incrementa_puntero)
 171+ 9E6F 3C               inc a
 172+ 9E70 32 27 8C         ld (Incrementa_puntero_backup),a
 173+ 9E73
 174+ 9E73 CD E7 9E         call Incrementa_Puntero_indice_mov
 175+ 9E76 2A 20 8C         ld hl,(Puntero_indice_mov)
 176+ 9E79 22 24 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E7C C9               ret
 178+ 9E7D
 179+ 9E7D              ; ---------- --------- --------- ---------- ----------
 180+ 9E7D              ;
 181+ 9E7D              ;   07/7/23
 182+ 9E7D              ;
 183+ 9E7D              ;   Inicia_Repetimos_movimiento
 184+ 9E7D              ;
 185+ 9E7D              ;
 186+ 9E7D
 187+ 9E7D              Inicia_Repetimos_movimiento
 188+ 9E7D
 189+ 9E7D              ; Iniciamos (Repetimos_movimiento).
 190+ 9E7D
 191+ 9E7D DD 2A 22 8C      ld ix,(Puntero_mov)
 192+ 9E81 DD 7E 02         ld a,(ix+2)
 193+ 9E84 32 2A 8C         ld (Repetimos_movimiento),a
 194+ 9E87
 195+ 9E87 C9               ret
 196+ 9E88
 197+ 9E88              ; ---------- --------- --------- ---------- ----------
 198+ 9E88              ;
 199+ 9E88              ;   26/6/23
 200+ 9E88              ;
 201+ 9E88              ;   Inicia_Puntero_mov
 202+ 9E88              ;
 203+ 9E88              ;
 204+ 9E88
 205+ 9E88 2A 20 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E8B CD 25 91         call Extrae_address
 207+ 9E8E 22 22 8C         ld (Puntero_mov),hl
 208+ 9E91 C9               ret
 209+ 9E92
 210+ 9E92              ; ---------- --------- --------- ---------- ----------
 211+ 9E92              ;
 212+ 9E92              ;   27/06/23
 213+ 9E92              ;
 214+ 9E92              ;   Aplica_movimiento.
 215+ 9E92
 216+ 9E92              Aplica_desplazamiento
 217+ 9E92
 218+ 9E92              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E92
 220+ 9E92 2A 22 8C         ld hl, (Puntero_mov)
 221+ 9E95
 222+ 9E95 7E               ld a,(hl)
 223+ 9E96 E6 F0            and $f0
 224+ 9E98 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E99
 226+ 9E99 CB 7E            bit 7,(hl)
 227+ 9E9B 28 03            jr z,1F
 228+ 9E9D CD 74 9A         call Mov_up
 229+ 9EA0 2A 22 8C     1 ld hl, (Puntero_mov)
 230+ 9EA3 CB 76            bit 6,(hl)
 231+ 9EA5 28 03            jr z,2F
 232+ 9EA7 CD 3B 9A         call Mov_down
 233+ 9EAA
 234+ 9EAA              ; Se ha aplicado reinicio ???
 235+ 9EAA              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9EAA
 237+ 9EAA              ;    ld a,(Ctrl_3)
 238+ 9EAA              ;    bit 1,a
 239+ 9EAA              ;    ret nz
 240+ 9EAA
 241+ 9EAA 2A 22 8C     2 ld hl, (Puntero_mov)
 242+ 9EAD CB 6E            bit 5,(hl)
 243+ 9EAF 28 03            jr z,3F
 244+ 9EB1 CD DA 9B         call Mov_left
 245+ 9EB4 2A 22 8C     3 ld hl, (Puntero_mov)
 246+ 9EB7 CB 66            bit 4,(hl)
 247+ 9EB9 C8               ret z
 248+ 9EBA CD B7 9A         call Mov_right
 249+ 9EBD C9               ret
 250+ 9EBE
 251+ 9EBE              ; ---------- --------- --------- ---------- ----------
 252+ 9EBE              ;
 253+ 9EBE              ;   26/06/23
 254+ 9EBE              ;
 255+ 9EBE              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EBE
 257+ 9EBE              Ajusta_velocidad_desplazamiento
 258+ 9EBE
 259+ 9EBE              ; 1er byte de la cadena de movimiento.
 260+ 9EBE              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EBE
 262+ 9EBE CD DC 9E         call Extrae_nibble_alto
 263+ 9EC1
 264+ 9EC1 32 16 8C         ld (Vel_up),a
 265+ 9EC4 79               ld a,c
 266+ 9EC5 E6 0F            and $0f
 267+ 9EC7 32 17 8C         ld (Vel_down),a
 268+ 9ECA
 269+ 9ECA              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9ECA              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9ECA
 272+ 9ECA 23               inc hl
 273+ 9ECB CD DC 9E         call Extrae_nibble_alto
 274+ 9ECE
 275+ 9ECE 32 14 8C         ld (Vel_left),a
 276+ 9ED1 79               ld a,c
 277+ 9ED2 E6 0F            and $0f
 278+ 9ED4 32 15 8C         ld (Vel_right),a
 279+ 9ED7
 280+ 9ED7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9ED7
 282+ 9ED7 23               inc hl
 283+ 9ED8 22 22 8C         ld (Puntero_mov),hl
 284+ 9EDB C9               ret
 285+ 9EDC
 286+ 9EDC 06 04        Extrae_nibble_alto ld b,4
 287+ 9EDE 7E               ld a,(hl)
 288+ 9EDF 4F               ld c,a
 289+ 9EE0 E6 F0            and $f0
 290+ 9EE2 CB 3F        1 srl a
 291+ 9EE4 10 FC            djnz 1B
 292+ 9EE6 C9               ret
 293+ 9EE7
 294+ 9EE7              ; ---------- --------- --------- ---------- ----------
 295+ 9EE7              ;
 296+ 9EE7              ;   5/7/23
 297+ 9EE7              ;
 298+ 9EE7              ;   Incrementa_Puntero_indice_mov
 299+ 9EE7
 300+ 9EE7              Incrementa_Puntero_indice_mov
 301+ 9EE7
 302+ 9EE7 21 26 8C         ld hl,Incrementa_puntero
 303+ 9EEA 34               inc (hl)
 304+ 9EEB
 305+ 9EEB 2A 20 8C         ld hl,(Puntero_indice_mov)
 306+ 9EEE 01 02 00         ld bc,2
 307+ 9EF1 A7               and a
 308+ 9EF2 09               add hl,bc
 309+ 9EF3 22 20 8C         ld (Puntero_indice_mov),hl
 310+ 9EF6
 311+ 9EF6 7E               ld a,(hl)
 312+ 9EF7 A7               and a
 313+ 9EF8
 314+ 9EF8              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EF8
 316+ 9EF8              ;    jr z,$
 317+ 9EF8
 318+ 9EF8              ;! Reinicia el Patrón de movimiento.
 319+ 9EF8
 320+ 9EF8 CC FD 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EFB
 322+ 9EFB AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EFC
 324+ 9EFC C9               ret
 325+ 9EFD
 326+ 9EFD              ; ---------- --------- --------- ---------- ----------
 327+ 9EFD              ;
 328+ 9EFD              ;   15/01/24
 329+ 9EFD              ;
 330+ 9EFD              ;   Inicializa_Puntero_indice_mov
 331+ 9EFD
 332+ 9EFD              Inicializa_Puntero_indice_mov_2
 333+ 9EFD
 334+ 9EFD              ; Existe etiqueta de bucle principal???
 335+ 9EFD
 336+ 9EFD 2A 24 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9F00 24               inc h
 338+ 9F01 25               dec h
 339+ 9F02 28 05            jr z,2F
 340+ 9F04
 341+ 9F04 22 20 8C         ld (Puntero_indice_mov),hl
 342+ 9F07 18 14            jr 3F
 343+ 9F09
 344+ 9F09              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F09
 346+ 9F09 3A 26 8C     2 ld a,(Incrementa_puntero)
 347+ 9F0C 47               ld b,a
 348+ 9F0D
 349+ 9F0D 2A 20 8C         ld hl,(Puntero_indice_mov)
 350+ 9F10 2B           1 dec hl
 351+ 9F11 2B               dec hl
 352+ 9F12 10 FC            djnz 1B
 353+ 9F14 22 20 8C         ld (Puntero_indice_mov),hl
 354+ 9F17
 355+ 9F17 AF               xor a
 356+ 9F18 32 26 8C         ld (Incrementa_puntero),a
 357+ 9F1B 18 06            jr 4F
 358+ 9F1D
 359+ 9F1D 3A 27 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F20 32 26 8C         ld (Incrementa_puntero),a
 361+ 9F23 C9           4 ret
 362+ 9F24
 363+ 9F24              ; ----------------------------------------------------------------------
 364+ 9F24              ;
 365+ 9F24              ;   24/11/24
 366+ 9F24              ;
 367+ 9F24              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F24
 369+ 9F24 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F27 CD 79 94         call Calcula_salto_en_BC
 371+ 9F2A 21 18 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F2D A7               and a
 373+ 9F2E ED 4A            adc hl,bc
 374+ 9F30 C9               ret
 375+ 9F31
 376+ 9F31              ; ----------------------------------------------------------------------
 377+ 9F31              ;
 378+ 9F31              ;   24/11/24
 379+ 9F31              ;
 380+ 9F31              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F31              ;
 382+ 9F31              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F31
 384+ 9F31 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F32 23               inc hl
 386+ 9F33 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F34 DD 71 09         ld (ix+9),c
 388+ 9F37 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9F3A C9               ret
 390+ 9F3B
# file closed: Movimiento.asm
2128  9F3B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F3B              ; --------------------------------------------------------------------------------------
   2+ 9F3B              ;
   3+ 9F3B              ;   25/10/24
   4+ 9F3B              ;
   5+ 9F3B
   6+ 9F3B              Pinta_disparos_Entidades
   7+ 9F3B
   8+ 9F3B ED 73 3E 8C      ld (Stack),sp
   9+ 9F3F ED 7B 50 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F43
  11+ 9F43 3E 02            ld a,2
  12+ 9F45 08               ex af,af
  13+ 9F46
  14+ 9F46 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F48              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F48              ;                                     _ No encontraría "0".
  17+ 9F48 FD E1        4 pop iy
  18+ 9F4A D1               pop de                          ; 1er .db IYL
  19+ 9F4B              ;                                   ; 2º  .db IYH
  20+ 9F4B              ;                                   ; 3er .db E.
  21+ 9F4B              ;   Album vacío ???
  22+ 9F4B
  23+ 9F4B FD 7D            ld a,iyl
  24+ 9F4D FD 84            add iyh
  25+ 9F4F 83               add e
  26+ 9F50 28 1F            jr z,1F
  27+ 9F52
  28+ 9F52              ;   Imprime album, (contiene datos).
  29+ 9F52
  30+ 9F52 3B               dec sp
  31+ 9F53
  32+ 9F53 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F54
  34+ 9F54              ; Imprime el 1er scanline del disparo.
  35+ 9F54
  36+ 9F54 FD 7D            ld a,iyl
  37+ 9F56 AE               xor (hl)
  38+ 9F57 77               ld (hl),a
  39+ 9F58
  40+ 9F58 2C               inc l
  41+ 9F59
  42+ 9F59 FD 7C            ld a,iyh
  43+ 9F5B AE               xor (hl)
  44+ 9F5C 77               ld (hl),a
  45+ 9F5D
  46+ 9F5D 2C               inc l
  47+ 9F5E
  48+ 9F5E 7B               ld a,e
  49+ 9F5F AE               xor (hl)
  50+ 9F60 77               ld (hl),a
  51+ 9F61
  52+ 9F61              ; Imprime el 2º scanline del disparo.
  53+ 9F61
  54+ 9F61 E1               pop hl
  55+ 9F62
  56+ 9F62 FD 7D            ld a,iyl
  57+ 9F64 AE               xor (hl)
  58+ 9F65 77               ld (hl),a
  59+ 9F66
  60+ 9F66 2C               inc l
  61+ 9F67
  62+ 9F67 FD 7C            ld a,iyh
  63+ 9F69 AE               xor (hl)
  64+ 9F6A 77               ld (hl),a
  65+ 9F6B
  66+ 9F6B 2C               inc l
  67+ 9F6C
  68+ 9F6C 7B               ld a,e
  69+ 9F6D AE               xor (hl)
  70+ 9F6E 77               ld (hl),a
  71+ 9F6F
  72+ 9F6F 10 D7            djnz 4B
  73+ 9F71
  74+ 9F71 08           1 ex af,af
  75+ 9F72 3D               dec a
  76+ 9F73 20 05            jr nz,2F
  77+ 9F75
  78+ 9F75 ED 7B 3E 8C      ld sp,(Stack)
  79+ 9F79 C9               ret
  80+ 9F7A
  81+ 9F7A ED 7B 4E 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F7E 08               ex af,af
  83+ 9F7F 18 C5            jr 3B
  84+ 9F81
  85+ 9F81              ; --------------------------------------------------------------------------------------
  86+ 9F81              ;
  87+ 9F81              ;   30/10/24
  88+ 9F81              ;
  89+ 9F81
  90+ 9F81              Motor_de_disparos_entidades
  91+ 9F81
  92+ 9F81 3A 56 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F84 FE 07            cp 7
  94+ 9F86 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F87
  96+ 9F87 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F89 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ 9F8C
  99+ 9F8C CD 25 91     1 call Extrae_address
 100+ 9F8F 1C               inc e
 101+ 9F90 1C               inc e
 102+ 9F91 ED 53 69 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F95
 104+ 9F95               ; Caja vacía ???
 105+ 9F95
 106+ 9F95 2D               dec l
 107+ 9F96 7E               ld a,(hl)
 108+ 9F97 A7               and a
 109+ 9F98 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F9A
 111+ 9F9A              ; --- Trabajamos con caja:
 112+ 9F9A
 113+ 9F9A 2C               inc l
 114+ 9F9B
 115+ 9F9B              ; --- Existe posibilidad de impacto ???
 116+ 9F9B
 117+ 9F9B CB 46            bit 0,(hl)
 118+ 9F9D C4 DD 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9FA0 20 37            jr nz,3F
 120+ 9FA2
 121+ 9FA2 CD 64 A0         call Rota_disparo_si_procede
 122+ 9FA5
 123+ 9FA5              ; ------------------------------------------------------------
 124+ 9FA5
 125+ 9FA5 2D               dec l
 126+ 9FA6 2D               dec l
 127+ 9FA7
 128+ 9FA7 CD 25 91         call Extrae_address
 129+ 9FAA
 130+ 9FAA              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9FAA              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9FAA
 133+ 9FAA 3A 68 8C         ld a,(Ctrl_5)
 134+ 9FAD CB 57            bit 2,a
 135+ 9FAF 28 09            jr z,4F
 136+ 9FB1
 137+ 9FB1 CB 97            res 2,a
 138+ 9FB3 32 68 8C         ld (Ctrl_5),a
 139+ 9FB6 2C               inc l
 140+ 9FB7 2C               inc l
 141+ 9FB8 18 0C            jr 5F
 142+ 9FBA
 143+ 9FBA CB 5F        4 bit 3,a
 144+ 9FBC 28 08            jr z,5F
 145+ 9FBE
 146+ 9FBE CB 9F            res 3,a
 147+ 9FC0 32 68 8C         ld (Ctrl_5),a
 148+ 9FC3 2D               dec l
 149+ 9FC4 2D               dec l
 150+ 9FC5 2D               dec l
 151+ 9FC6
 152+ 9FC6              ; ---------------------------------------------------------------------
 153+ 9FC6
 154+ 9FC6              ;! Velocidad del disparo de entidades.
 155+ 9FC6
 156+ 9FC6 CD F5 99     5 call NextScan
 157+ 9FC9 CD F5 99         call NextScan
 158+ 9FCC
 159+ 9FCC              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FCC
 161+ 9FCC CD 41 A0         call Fin_de_disparo_de_entidad
 162+ 9FCF
 163+ 9FCF EB               ex de,hl
 164+ 9FD0
 165+ 9FD0 73               ld (hl),e
 166+ 9FD1 23               inc hl
 167+ 9FD2 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FD3
 169+ 9FD3 2A 69 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FD6 18 02            jr 2F
 171+ 9FD8
 172+ 9FD8 C9               ret
 173+ 9FD9
 174+ 9FD9 EB           3 ex de,hl
 175+ 9FDA 10 B0        2 djnz 1B
 176+ 9FDC
 177+ 9FDC C9               ret
 178+ 9FDD
 179+ 9FDD              ; ------------- ------------- ------------
 180+ 9FDD              ;
 181+ 9FDD              ;   1/11/24
 182+ 9FDD
 183+ 9FDD              Comprueba_impacto_con_Amadeus
 184+ 9FDD
 185+ 9FDD              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FDD              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FDD
 188+ 9FDD              ;   Modificamos registros, así que guardamos ...
 189+ 9FDD
 190+ 9FDD C5               push bc
 191+ 9FDE E5               push hl
 192+ 9FDF D5               push de
 193+ 9FE0
 194+ 9FE0 2D               dec l
 195+ 9FE1 2D               dec l
 196+ 9FE2
 197+ 9FE2 CD 25 91         call Extrae_address
 198+ 9FE5
 199+ 9FE5 3A AF 89         ld a,(CX_Amadeus)
 200+ 9FE8 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FE9
 202+ 9FE9 7D               ld a,l
 203+ 9FEA E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FEC
 205+ 9FEC 06 03            ld b,3
 206+ 9FEE
 207+ 9FEE B9           1 cp c
 208+ 9FEF 28 15            jr z,Coincidencia
 209+ 9FF1 0C               inc c
 210+ 9FF2 10 FA            djnz 1B
 211+ 9FF4
 212+ 9FF4 0D               dec c
 213+ 9FF5 0D               dec c
 214+ 9FF6 0D               dec c
 215+ 9FF7
 216+ 9FF7 3C               inc a
 217+ 9FF8 B9               cp c
 218+ 9FF9 28 0B            jr z,Coincidencia
 219+ 9FFB
 220+ 9FFB 3C               inc a
 221+ 9FFC B9               cp c
 222+ 9FFD 28 07            jr z,Coincidencia
 223+ 9FFF
 224+ 9FFF D1           2 pop de
 225+ A000 E1               pop hl
 226+ A001 C1               pop bc
 227+ A002
 228+ A002              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ A002
 230+ A002 CB 86            res 0,(hl)
 231+ A004 AF               xor a                       ; Z before RET.
 232+ A005 C9               ret
 233+ A006
 234+ A006              Coincidencia
 235+ A006
 236+ A006              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ A006              ;   Existe posibilidad de impacto.
 238+ A006              ;   Vamos a averiguarlo ...
 239+ A006
 240+ A006 1D               dec e
 241+ A007 1D               dec e
 242+ A008 1D               dec e
 243+ A009
 244+ A009              ; DE en Puntero_objeto del disparo.
 245+ A009              ; HL en Puntero_de_impresión del disparo.
 246+ A009
 247+ A009              ; Comparador:
 248+ A009
 249+ A009 06 03            ld b,3
 250+ A00B
 251+ A00B 1A           3 ld a,(de)
 252+ A00C 4F               ld c,a
 253+ A00D A6               and (hl)
 254+ A00E B9               cp c
 255+ A00F 20 06            jr nz,Amadeus_impactado
 256+ A011
 257+ A011 2C               inc l
 258+ A012 1C               inc e
 259+ A013
 260+ A013 10 F6            djnz 3B
 261+ A015
 262+ A015 18 E8            jr 2B
 263+ A017
 264+ A017              Amadeus_impactado
 265+ A017
 266+ A017              ; Borramos disparo.
 267+ A017
 268+ A017 D1               pop de
 269+ A018 E1               pop hl
 270+ A019
 271+ A019 E5               push hl
 272+ A01A D5               push de
 273+ A01B
 274+ A01B CD CF A0         call Borra_6_bytes
 275+ A01E
 276+ A01E 21 56 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A021 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A022
 279+ A022              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A022
 281+ A022 21 B2 89         ld hl,Impacto_Amadeus
 282+ A025 36 01            ld (hl),1
 283+ A027
 284+ A027              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A027              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A027
 287+ A027 3A B3 89         ld a,(p.imp.amadeus)
 288+ A02A FE DE            cp $de
 289+ A02C 20 04            jr nz,1F
 290+ A02E
 291+ A02E 3D               dec a
 292+ A02F 32 B3 89         ld (p.imp.amadeus),a
 293+ A032
 294+ A032              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A032
 296+ A032 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A035 21 B5 89         ld hl,Pamm_Amadeus
 298+ A038
 299+ A038 73               ld (hl),e
 300+ A039 23               inc hl
 301+ A03A 72               ld (hl),d
 302+ A03B
 303+ A03B D1               pop de
 304+ A03C E1               pop hl
 305+ A03D C1               pop bc
 306+ A03E
 307+ A03E AF               xor a
 308+ A03F 3C               inc a               ; NZ before RET.
 309+ A040 C9               ret
 310+ A041
 311+ A041              ; ------------- ------------- ------------
 312+ A041              ;
 313+ A041              ;   31/10/24
 314+ A041
 315+ A041              Fin_de_disparo_de_entidad
 316+ A041
 317+ A041              ; Estamos en zona de Amadeus ??
 318+ A041
 319+ A041 7C               ld a,h
 320+ A042 FE 54            cp $54
 321+ A044 38 0D            jr c,1F
 322+ A046
 323+ A046 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A047
 325+ A047 5D               ld e,l
 326+ A048 54               ld d,h
 327+ A049
 328+ A049 21 E0 57         ld hl,$57e0
 329+ A04C ED 52            sbc hl,de
 330+ A04E
 331+ A04E 38 6F            jr c,Elimina_disparo_entidad
 332+ A050
 333+ A050 6B               ld l,e
 334+ A051 62               ld h,d
 335+ A052
 336+ A052 D1               pop de
 337+ A053
 338+ A053 7C           1 ld a,h
 339+ A054 FE 50            cp $50
 340+ A056 D8               ret c
 341+ A057
 342+ A057 7D               ld a,l
 343+ A058 FE C0            cp $c0
 344+ A05A D8               ret c
 345+ A05B
 346+ A05B              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A05B              ; Así podremos comprobar si hay colisión más adelante.
 348+ A05B
 349+ A05B 1C               inc e
 350+ A05C 1C               inc e
 351+ A05D
 352+ A05D EB               ex de,hl
 353+ A05E CB C6            set 0,(hl)
 354+ A060 EB               ex de,hl
 355+ A061
 356+ A061 1D               dec e
 357+ A062 1D               dec e
 358+ A063
 359+ A063 C9               ret
 360+ A064
 361+ A064              ; ----------------------------------------------------------
 362+ A064              ;
 363+ A064              ;   08/10/24
 364+ A064
 365+ A064              ;   Estructura de un disparo de entidades.
 366+ A064
 367+ A064              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A064              ; 	defw 0											; Puntero de impresión.
 369+ A064              ;	defw 0											; Control.
 370+ A064
 371+ A064              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A064              ;   _de la entidad en el momento de disparar.
 373+ A064
 374+ A064              ;   El byte alto muestra la siguiente información:
 375+ A064              ;
 376+ A064              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A064              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A064              ;
 379+ A064              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A064              ;
 381+ A064              ;                        10xx ..... Izquierda.
 382+ A064              ;                        01xx ..... Derecha.
 383+ A064              ;                        00xx ..... Recto.
 384+ A064
 385+ A064              Rota_disparo_si_procede
 386+ A064
 387+ A064              ;   Nos situamos en el byte alto de (Control).
 388+ A064
 389+ A064 CB 76            bit 6,(hl)
 390+ A066 20 2D            jr nz,Rota_a_derecha
 391+ A068 CB 7E            bit 7,(hl)
 392+ A06A C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A06B
 394+ A06B              Rota_a_izq
 395+ A06B
 396+ A06B E5               push hl
 397+ A06C
 398+ A06C 7D               ld a,l
 399+ A06D D6 05            sub 5
 400+ A06F 6F               ld l,a
 401+ A070
 402+ A070 E5               push hl
 403+ A071 FD E1            pop iy
 404+ A073
 405+ A073 A7               and a
 406+ A074
 407+ A074 FD CB 02 16      rl (iy+02)
 408+ A078 FD CB 01 16      rl (iy+01)
 409+ A07C FD CB 00 16      rl (iy+00)
 410+ A080
 411+ A080 30 3B            jr nc,Exit
 412+ A082
 413+ A082              ; Desplazamiento completo hasta Carry.
 414+ A082              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A082
 416+ A082 FD 36 02 03      ld (iy+02),$03
 417+ A086 FD 36 01 00      ld (iy+01),$00
 418+ A08A FD 36 00 00      ld (iy+00),$00
 419+ A08E
 420+ A08E 21 68 8C         ld hl,Ctrl_5
 421+ A091 CB DE            set 3,(hl)
 422+ A093
 423+ A093 18 28            jr Exit
 424+ A095
 425+ A095              Rota_a_derecha
 426+ A095
 427+ A095 E5               push hl
 428+ A096
 429+ A096 7D               ld a,l
 430+ A097 D6 05            sub 5
 431+ A099 6F               ld l,a
 432+ A09A
 433+ A09A E5               push hl
 434+ A09B FD E1            pop iy
 435+ A09D
 436+ A09D A7               and a
 437+ A09E
 438+ A09E FD CB 00 1E      rr (iy+00)
 439+ A0A2 FD CB 01 1E      rr (iy+01)
 440+ A0A6 FD CB 02 1E      rr (iy+02)
 441+ A0AA
 442+ A0AA 30 11            jr nc,Exit
 443+ A0AC
 444+ A0AC              ; Desplazamiento completo hasta Carry.
 445+ A0AC              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A0AC
 447+ A0AC FD 36 00 01      ld (iy+00),$01
 448+ A0B0 FD 36 01 80      ld (iy+01),$80
 449+ A0B4 FD 36 02 00      ld (iy+02),$00
 450+ A0B8
 451+ A0B8 21 68 8C         ld hl,Ctrl_5
 452+ A0BB CB D6            set 2,(hl)
 453+ A0BD
 454+ A0BD E1           Exit pop hl
 455+ A0BE C9               ret
 456+ A0BF
 457+ A0BF              ; ------------ ----------- ------------
 458+ A0BF              ;
 459+ A0BF              ;   25/9/24
 460+ A0BF
 461+ A0BF              Elimina_disparo_entidad
 462+ A0BF
 463+ A0BF 21 56 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0C2 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0C3
 466+ A0C3 E1               pop hl
 467+ A0C4 E5               push hl
 468+ A0C5
 469+ A0C5 2C               inc l
 470+ A0C6 2C               inc l
 471+ A0C7
 472+ A0C7 CD CF A0         call Borra_6_bytes
 473+ A0CA
 474+ A0CA D1               pop de
 475+ A0CB
 476+ A0CB 21 00 00         ld hl,0
 477+ A0CE
 478+ A0CE C9               ret
 479+ A0CF
 480+ A0CF              ; ----- ----- ----- ----- -----
 481+ A0CF
 482+ A0CF              Borra_6_bytes
 483+ A0CF
 484+ A0CF 16 06            ld d,6                                                    ; Contador
 485+ A0D1 AF               xor a                                                     ; Borrador
 486+ A0D2 77           1 ld (hl),a
 487+ A0D3 2D               dec l
 488+ A0D4 15               dec d
 489+ A0D5 20 FB            jr nz,1B
 490+ A0D7
 491+ A0D7 C9               ret
 492+ A0D8
 493+ A0D8              ; --------------------------------------------------------------------------------------
 494+ A0D8              ;
 495+ A0D8              ;   12/10/24
 496+ A0D8              ;
 497+ A0D8
 498+ A0D8              Genera_datos_de_impresion_disparos_Entidades
 499+ A0D8
 500+ A0D8 3E 07            ld a,7
 501+ A0DA 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0DB
 503+ A0DB              ; ---------------
 504+ A0DB
 505+ A0DB              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0DB
 507+ A0DB 21 20 89          ld hl,Indice_de_disparos_entidades
 508+ A0DE
 509+ A0DE CD 25 91     1 call Extrae_address
 510+ A0E1
 511+ A0E1 13               inc de
 512+ A0E2 13               inc de
 513+ A0E3
 514+ A0E3 ED 53 69 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0E7
 516+ A0E7 2D               dec l
 517+ A0E8 7E               ld a,(hl)
 518+ A0E9 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0EA 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0EC
 521+ A0EC              ; ----- ----- ----- -----
 522+ A0EC
 523+ A0EC 2D               dec l
 524+ A0ED CD 25 91         call Extrae_address
 525+ A0F0 E5               push hl
 526+ A0F1
 527+ A0F1 1D               dec e
 528+ A0F2
 529+ A0F2 EB               ex de,hl
 530+ A0F3
 531+ A0F3 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0F4 2D               dec l
 533+ A0F5 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0F6 2D               dec l
 535+ A0F7 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0F8
 537+ A0F8 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0F9
 539+ A0F9              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0F9
 541+ A0F9 FD 2A 52 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0FD FD 73 00         ld (iy+0),e
 543+ A100 FD 70 01         ld (iy+1),b
 544+ A103 FD 71 02         ld (iy+2),c
 545+ A106
 546+ A106 FD 75 03         ld (iy+3),l
 547+ A109 FD 74 04         ld (iy+4),h
 548+ A10C
 549+ A10C CD F5 99         call NextScan
 550+ A10F
 551+ A10F FD 75 05         ld (iy+5),l
 552+ A112 FD 74 06         ld (iy+6),h
 553+ A115
 554+ A115 FD E5            push iy
 555+ A117 E1               pop hl
 556+ A118
 557+ A118 3E 07            ld a,7
 558+ A11A 85               add l
 559+ A11B 6F               ld l,a
 560+ A11C
 561+ A11C 22 52 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A11F
 563+ A11F              ; ----- ----- ----- -----
 564+ A11F
 565+ A11F              Situa_en_siguiente_caja
 566+ A11F
 567+ A11F 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A120 3D               dec a
 569+ A121 C8               ret z
 570+ A122
 571+ A122 08               ex af,af
 572+ A123 2A 69 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A126 18 B6            jr 1B
 574+ A128
 575+ A128              ; --------------------------------------------------------------------------------------
 576+ A128              ;
 577+ A128              ;   12/10/24
 578+ A128              ;
 579+ A128
 580+ A128              Genera_disparo_de_entidad_maldosa
 581+ A128
 582+ A128              ;   Estructura de un disparo de entidades.
 583+ A128
 584+ A128              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A128              ; 	defw 0											; Puntero de impresión.
 586+ A128              ;	defw 0											; Control.
 587+ A128
 588+ A128              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A128              ;   _de la entidad en el momento de disparar.
 590+ A128
 591+ A128              ;   El byte de control muestra la siguiente información:
 592+ A128
 593+ A128              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A128              ;
 595+ A128              ;                        10xx ..... Izquierda.
 596+ A128              ;                        01xx ..... Derecha.
 597+ A128              ;                        00xx ..... Recto.
 598+ A128
 599+ A128              ;*  Exclusiones.
 600+ A128
 601+ A128              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A128              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A128
 604+ A128 3A 56 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A12B A7               and a
 606+ A12C C8               ret z
 607+ A12D
 608+ A12D 3A F1 8B         ld a,(Coordenada_y)
 609+ A130 A7               and a
 610+ A131 C8               ret z
 611+ A132
 612+ A132 3D               dec a
 613+ A133 C8               ret z
 614+ A134
 615+ A134 FE 10            cp 16
 616+ A136 D0               ret nc
 617+ A137
 618+ A137              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A137              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A137              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A137
 622+ A137 21 58 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A13A 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A13B
 625+ A13B              ;   Decrementa el numero de disparos de entidades.
 626+ A13B
 627+ A13B 21 56 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A13E 35               dec (hl)
 629+ A13F
 630+ A13F 21 20 89         ld hl,Indice_de_disparos_entidades
 631+ A142
 632+ A142 CD 25 91     1 call Extrae_address
 633+ A145
 634+ A145 13               inc de
 635+ A146 13               inc de
 636+ A147
 637+ A147 ED 53 69 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A14B
 639+ A14B              ;   Comprobamos si la caja está vacía.
 640+ A14B
 641+ A14B 2D               dec l
 642+ A14C 7E               ld a,(hl)
 643+ A14D A7               and a
 644+ A14E 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A150 2C               inc l
 646+ A151
 647+ A151              ;   Caja vacía, vamos a generar un disparo.
 648+ A151              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A151
 650+ A151 CD 72 A1         call Genera_byte_inclinacion
 651+ A154
 652+ A154 7E               ld a,(hl)
 653+ A155 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A156
 655+ A156 2D               dec l
 656+ A157
 657+ A157 CD 8E A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A15A
 659+ A15A 70               ld (hl),b
 660+ A15B 2D               dec l
 661+ A15C 71               ld (hl),c
 662+ A15D
 663+ A15D 2D               dec l
 664+ A15E
 665+ A15E              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A15E
 667+ A15E FD 7E 02         ld a,(iy+02)
 668+ A161 77               ld (hl),a
 669+ A162 2D               dec l
 670+ A163
 671+ A163 FD 7E 01         ld a,(iy+01)
 672+ A166 77               ld (hl),a
 673+ A167 2D               dec l
 674+ A168
 675+ A168 FD 7E 00         ld a,(iy+00)
 676+ A16B 77               ld (hl),a
 677+ A16C
 678+ A16C C9               ret
 679+ A16D
 680+ A16D              ;   --- --- ---
 681+ A16D
 682+ A16D              Situa_en_siguiente_disparo
 683+ A16D
 684+ A16D 2A 69 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A170 18 D0            jr 1B
 686+ A172
 687+ A172              ; --------------------------------------------------------------------------------------
 688+ A172              ;
 689+ A172              ;   09/10/24
 690+ A172              ;
 691+ A172
 692+ A172              Genera_byte_inclinacion
 693+ A172
 694+ A172              ; Determina tendencia del disparo.
 695+ A172
 696+ A172 3A AF 89         ld a,(CX_Amadeus)
 697+ A175 47               ld b,a
 698+ A176 3A F0 8B         ld a,(Coordenada_X)
 699+ A179 90               sub b
 700+ A17A 38 07            jr c,Disparo_a_derecha
 701+ A17C
 702+ A17C FE 06        Disparo_a_izquierda cp 6
 703+ A17E
 704+ A17E D8               ret c
 705+ A17F C8               ret z
 706+ A180
 707+ A180 CB FE            set 7,(hl)
 708+ A182 C9               ret
 709+ A183
 710+ A183 47           Disparo_a_derecha ld b,a
 711+ A184 3E FF            ld a,$ff
 712+ A186 90               sub b
 713+ A187
 714+ A187 FE 05            cp 5
 715+ A189
 716+ A189 D8               ret c
 717+ A18A C8               ret z
 718+ A18B
 719+ A18B CB F6            set 6,(hl)
 720+ A18D C9               ret
 721+ A18E
 722+ A18E              ; --------------------------------------------------------------------------------------
 723+ A18E              ;
 724+ A18E              ;   09/10/24
 725+ A18E              ;
 726+ A18E
 727+ A18E              Modifica_puntero_de_impresion
 728+ A18E
 729+ A18E              ;   Puntero de impresión del disparo en BC.
 730+ A18E
 731+ A18E E5               push hl
 732+ A18F
 733+ A18F 2A 6B 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A192 CD F5 99         call NextScan
 735+ A195
 736+ A195 4D               ld c,l
 737+ A196 44               ld b,h
 738+ A197
 739+ A197 E1               pop hl
 740+ A198
 741+ A198 08               ex af,af
 742+ A199 CB 77            bit 6,a
 743+ A19B 28 06            jr z,1F
 744+ A19D
 745+ A19D FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A1A1 0C               inc c
 747+ A1A2 C9               ret
 748+ A1A3
 749+ A1A3 CB 7F        1 bit 7,a
 750+ A1A5 28 F6            jr z,2B
 751+ A1A7
 752+ A1A7 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A1AB 0D               dec c
 754+ A1AC
 755+ A1AC C9               ret
 756+ A1AD
 757+ A1AD              ; --------------------------------------------------------------------------------------
 758+ A1AD              ;
 759+ A1AD              ;   28/11/24
 760+ A1AD              ;
 761+ A1AD
 762+ A1AD              Compara_con_coordenadas_de_disparo
 763+ A1AD
 764+ A1AD DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 765+ A1B0 47               ld b,a
 766+ A1B1 3A 70 8C         ld a,(Coordenadas_disparo_certero)
 767+ A1B4 90               sub b
 768+ A1B5
 769+ A1B5              ; A = "0" ok
 770+ A1B5              ; A = "1" ok
 771+ A1B5
 772+ A1B5 28 08            jr z,Comprueba_coordenada_X
 773+ A1B7 3D               dec a
 774+ A1B8 28 05            jr z,Comprueba_coordenada_X
 775+ A1BA
 776+ A1BA              ; A = "$ff" ok
 777+ A1BA
 778+ A1BA FE FE            cp $fe
 779+ A1BC 28 01            jr z,Comprueba_coordenada_X
 780+ A1BE
 781+ A1BE C9               ret
 782+ A1BF
 783+ A1BF              Comprueba_coordenada_X
 784+ A1BF
 785+ A1BF DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 786+ A1C2 47               ld b,a
 787+ A1C3 21 71 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1C6 7E               ld a,(hl)
 789+ A1C7 90               sub b
 790+ A1C8
 791+ A1C8              ; A = "0" ok
 792+ A1C8              ; A = "1" ok
 793+ A1C8
 794+ A1C8 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1CA 3D               dec a
 796+ A1CB 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1CD
 798+ A1CD              ; A = "2" ok
 799+ A1CD
 800+ A1CD 3D               dec a
 801+ A1CE 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1D0
 803+ A1D0              ; A = "$ff"
 804+ A1D0
 805+ A1D0 FE FD            cp $fd
 806+ A1D2 C0               ret nz
 807+ A1D3
 808+ A1D3              Activa_Impacto_en_entidad
 809+ A1D3
 810+ A1D3              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1D3
 812+ A1D3 3E 02            ld a,2
 813+ A1D5 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 814+ A1D8
 815+ A1D8              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1D8
 817+ A1D8 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1DB
 819+ A1DB DD 73 07         ld (ix+7),e
 820+ A1DE DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 821+ A1E1
 822+ A1E1              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 823+ A1E1
 824+ A1E1 21 6D 8C         ld hl,Impacto2
 825+ A1E4 CB 9E            res 3,(hl)
 826+ A1E6
 827+ A1E6 C9               ret
 828+ A1E7
 829+ A1E7              ; --------------------------------------------------------------------------------------
 830+ A1E7              ;
 831+ A1E7              ;   13/10/24
 832+ A1E7              ;
 833+ A1E7
 834+ A1E7              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 835+ A1E7
 836+ A1E7              Limpia_album_de_pintado_disparos_Amadeus
 837+ A1E7
 838+ A1E7 2A 4A 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 839+ A1EA 06 06            ld b,6
 840+ A1EC AF               xor a
 841+ A1ED 77           1 ld (hl),a
 842+ A1EE 2C               inc l
 843+ A1EF 10 FC            djnz 1B
 844+ A1F1
 845+ A1F1 C9               ret
 846+ A1F2
 847+ A1F2              ; --------------------------------------------------------------------------------------
 848+ A1F2              ;
 849+ A1F2              ;   29/09/24
 850+ A1F2              ;
 851+ A1F2
 852+ A1F2              Calcula_bytes_pintado_disparos
 853+ A1F2
 854+ A1F2 2A 4E 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 855+ A1F5 45               ld b,l
 856+ A1F6 2A 52 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 857+ A1F9 7D               ld a,l
 858+ A1FA
 859+ A1FA 90               sub b
 860+ A1FB 32 54 8C         ld (Num_de_bytes_album_de_disparos),a
 861+ A1FE
 862+ A1FE C9               ret
 863+ A1FF
 864+ A1FF              ; --------------------------------------------------------------------------------------
 865+ A1FF              ;
 866+ A1FF              ;   26/10/24
 867+ A1FF              ;
 868+ A1FF              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 869+ A1FF              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 870+ A1FF              ;   _disparos que el álbum del FRAME actual).
 871+ A1FF
 872+ A1FF              Limpia_album_de_pintado_disparos_entidades
 873+ A1FF
 874+ A1FF 21 55 8C         ld hl,Num_de_bytes_album_de_disparos+1
 875+ A202 7E               ld a,(hl)
 876+ A203 2D               dec l
 877+ A204 46               ld b,(hl)
 878+ A205 90               sub b
 879+ A206
 880+ A206 D8               ret c
 881+ A207 C8               ret z
 882+ A208
 883+ A208 F5               push af
 884+ A209 80               add b
 885+ A20A 77               ld (hl),a
 886+ A20B F1               pop af
 887+ A20C
 888+ A20C              ; Clean.
 889+ A20C
 890+ A20C 47           2 ld b,a
 891+ A20D AF               xor a
 892+ A20E 2A 52 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 893+ A211 77           1 ld (hl),a
 894+ A212 23               inc hl
 895+ A213 10 FC            djnz 1B
 896+ A215
 897+ A215 C9               ret
 898+ A216
 899+ A216              ; --------------------------------------------------------------------------------------
 900+ A216              ;
 901+ A216              ;   29/09/24
 902+ A216              ;
 903+ A216
 904+ A216              Motor_Disparos_Amadeus
 905+ A216
 906+ A216 21 1D 89         ld hl,Disparo_Amad+1
 907+ A219
 908+ A219 34               inc (hl)
 909+ A21A 35               dec (hl)
 910+ A21B
 911+ A21B C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 912+ A21C
 913+ A21C              ;   Esta caja contiene un disparo.
 914+ A21C
 915+ A21C CD 23 A2         call Consulta_Impacto
 916+ A21F CC 3C A2         call z,Mueve_disparo_Amadeus
 917+ A222
 918+ A222 C9               ret
 919+ A223
 920+ A223              ; ----------------------
 921+ A223              ;
 922+ A223              ;
 923+ A223              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 924+ A223              ;
 925+ A223              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 926+ A223
 927+ A223
 928+ A223              Consulta_Impacto
 929+ A223
 930+ A223              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 931+ A223              ;   _sea lo más coherente posible.
 932+ A223
 933+ A223 E5               push hl
 934+ A224 2B               dec hl
 935+ A225 CD 18 A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 936+ A228 E1               pop hl
 937+ A229 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 938+ A22A
 939+ A22A C8               ret z
 940+ A22B
 941+ A22B 3A 6D 8C         ld a,(Impacto2)
 942+ A22E CB DF            set 3,a
 943+ A230 32 6D 8C         ld (Impacto2),a
 944+ A233
 945+ A233 E5               push hl
 946+ A234 CD 05 A3         call Genera_coordenadas_de_disparo_Amadeus
 947+ A237 E1               pop hl
 948+ A238 CD 55 A2         call Elimina_disparo_Amadeus
 949+ A23B
 950+ A23B C9               ret
 951+ A23C
 952+ A23C              ; ----------------------
 953+ A23C              ;
 954+ A23C              ;
 955+ A23C              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 956+ A23C
 957+ A23C              Mueve_disparo_Amadeus
 958+ A23C
 959+ A23C CD 25 91         call Extrae_address
 960+ A23F
 961+ A23F CD 04 9A         call PreviousScan
 962+ A242 CD 04 9A         call PreviousScan
 963+ A245 CD 04 9A         call PreviousScan
 964+ A248 CD 04 9A         call PreviousScan
 965+ A24B
 966+ A24B              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 967+ A24B
 968+ A24B 7C               ld a,h
 969+ A24C D6 40            sub $40
 970+ A24E EB               ex de,hl
 971+ A24F 38 04            jr c,Elimina_disparo_Amadeus
 972+ A251
 973+ A251               ; Introduce nuevo puntero_de_impresión en la caja.
 974+ A251
 975+ A251 73               ld (hl),e
 976+ A252 23               inc hl
 977+ A253 72               ld (hl),d
 978+ A254
 979+ A254 C9               ret
 980+ A255
 981+ A255              ; ----------------------
 982+ A255              ;
 983+ A255              ;   29/9/24
 984+ A255
 985+ A255              Elimina_disparo_Amadeus
 986+ A255
 987+ A255              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 988+ A255              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 989+ A255
 990+ A255              ;   Disparo_1A defw 0									; Puntero objeto.
 991+ A255              ;   	defw 0											; Puntero de impresión.
 992+ A255
 993+ A255 2B               dec hl
 994+ A256 2B               dec hl
 995+ A257
 996+ A257 AF               xor a
 997+ A258 77               ld (hl),a
 998+ A259 23               inc hl
 999+ A25A 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1000+ A25B
1001+ A25B 23               inc hl
1002+ A25C 77               ld (hl),a
1003+ A25D 23               inc hl
1004+ A25E 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1005+ A25F
1006+ A25F 3E 01            ld a,1
1007+ A261 32 57 8C         ld (Permiso_de_disparo_Amadeus),a
1008+ A264
1009+ A264 CD E7 A1         call Limpia_album_de_pintado_disparos_Amadeus
1010+ A267
1011+ A267 AF               xor a
1012+ A268 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1013+ A269
1014+ A269 C9               ret
1015+ A26A
1016+ A26A              ; --------------------------------------------------------------------------------------
1017+ A26A              ;
1018+ A26A              ;   13/10/24
1019+ A26A              ;
1020+ A26A
1021+ A26A              Pinta_disparos_Amadeus
1022+ A26A
1023+ A26A 06 02            ld b,2
1024+ A26C ED 73 3E 8C      ld (Stack),sp
1025+ A270 ED 7B 4C 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1026+ A274 D1           3 pop de
1027+ A275 14               inc d
1028+ A276 15               dec d
1029+ A277 28 1C            jr z,1F
1030+ A279 E1               pop hl
1031+ A27A
1032+ A27A              Imprime_scanlines_en_pantalla
1033+ A27A
1034+ A27A              ; 1er scanline
1035+ A27A
1036+ A27A 1A               ld a,(de)
1037+ A27B AE               xor (hl)
1038+ A27C 77               ld (hl),a
1039+ A27D
1040+ A27D 1C               inc e
1041+ A27E 2C               inc l
1042+ A27F
1043+ A27F 1A               ld a,(de)
1044+ A280 AE               xor (hl)
1045+ A281 77               ld (hl),a
1046+ A282
1047+ A282 1D               dec e
1048+ A283 E1               pop hl
1049+ A284
1050+ A284              ; 2º scanline
1051+ A284
1052+ A284 1A               ld a,(de)
1053+ A285 AE               xor (hl)
1054+ A286 77               ld (hl),a
1055+ A287
1056+ A287 1C               inc e
1057+ A288 2C               inc l
1058+ A289
1059+ A289 1A               ld a,(de)
1060+ A28A AE               xor (hl)
1061+ A28B 77               ld (hl),a
1062+ A28C
1063+ A28C 1D               dec e
1064+ A28D
1065+ A28D 18 06            jr 1F
1066+ A28F
1067+ A28F ED 7B 4A 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1068+ A293 18 DF            jr 3B
1069+ A295 10 F8        1 djnz 2B
1070+ A297 ED 7B 3E 8C      ld sp,(Stack)
1071+ A29B C9               ret
1072+ A29C
1073+ A29C              ; --------------------------------------------------------------------------------------
1074+ A29C              ;
1075+ A29C              ;   13/10/24
1076+ A29C              ;
1077+ A29C              ;   Modifica: HL,BC y DE.
1078+ A29C
1079+ A29C
1080+ A29C              Genera_datos_de_impresion_disparos_Amadeus
1081+ A29C
1082+ A29C ED 73 3E 8C      ld (Stack),sp
1083+ A2A0 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1084+ A2A3 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1085+ A2A4
1086+ A2A4 14               inc d                                                     ;? Salimos si no hay disparo.
1087+ A2A5 15               dec d
1088+ A2A6
1089+ A2A6 28 0E            jr z,Salida
1090+ A2A8
1091+ A2A8              Genera_scanlines_de_disparo_Amadeus
1092+ A2A8
1093+ A2A8 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1094+ A2A9              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1095+ A2A9 ED 7B 4A 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1096+ A2AD
1097+ A2AD C1               pop bc
1098+ A2AE C1               pop bc
1099+ A2AF C1               pop bc
1100+ A2B0
1101+ A2B0 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1102+ A2B1 CD 04 9A         call PreviousScan
1103+ A2B4 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1104+ A2B5 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1105+ A2B6
1106+ A2B6              Salida
1107+ A2B6
1108+ A2B6 ED 7B 3E 8C      ld sp,(Stack)
1109+ A2BA
1110+ A2BA C9               ret
1111+ A2BB
1112+ A2BB              ; --------------------------------------------------------------------------------------
1113+ A2BB              ;
1114+ A2BB              ;   12/09/24
1115+ A2BB              ;
1116+ A2BB
1117+ A2BB              Genera_disparo_Amadeus
1118+ A2BB
1119+ A2BB              ;*  Exclusiones.
1120+ A2BB
1121+ A2BB 3A 57 8C         ld a,(Permiso_de_disparo_Amadeus)
1122+ A2BE A7               and a
1123+ A2BF C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1124+ A2C0
1125+ A2C0 3D               dec a
1126+ A2C1 32 57 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1127+ A2C4
1128+ A2C4              Define_puntero_objeto_disparo
1129+ A2C4
1130+ A2C4              ;   Inicializamos contador.
1131+ A2C4
1132+ A2C4 06 00            ld b,0
1133+ A2C6
1134+ A2C6 2A B3 89         ld hl,(p.imp.amadeus)
1135+ A2C9 2C               inc l
1136+ A2CA
1137+ A2CA 3E 80            ld a,$80
1138+ A2CC BE               cp (hl)
1139+ A2CD 28 0D            jr z,1F
1140+ A2CF
1141+ A2CF 04               inc b
1142+ A2D0
1143+ A2D0 3E 60            ld a,$60
1144+ A2D2 BE               cp (hl)
1145+ A2D3 28 07            jr z,1F
1146+ A2D5
1147+ A2D5
1148+ A2D5 04               inc b
1149+ A2D6
1150+ A2D6 3E 18            ld a,$18
1151+ A2D8 BE               cp (hl)
1152+ A2D9 28 01            jr z,1F
1153+ A2DB
1154+ A2DB 04               inc b
1155+ A2DC
1156+ A2DC              ;   Calcula el Puntero_de_impresión del disparo.
1157+ A2DC
1158+ A2DC              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1159+ A2DC
1160+ A2DC CD 04 9A     1 call PreviousScan
1161+ A2DF
1162+ A2DF 78               ld a,b
1163+ A2E0 CB 3F            srl a
1164+ A2E2 28 03            jr z,4F
1165+ A2E4
1166+ A2E4              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1167+ A2E4 E5               push hl
1168+ A2E5 18 02            jr 5F
1169+ A2E7 2D           4 dec l
1170+ A2E8 E5               push hl
1171+ A2E9              ; ---
1172+ A2E9
1173+ A2E9              ;   Calcula el Puntero_objeto del disparo.
1174+ A2E9
1175+ A2E9 21 76 83     5 ld hl,Indice_disparo_Amadeus
1176+ A2EC 04               inc b
1177+ A2ED 05               dec b
1178+ A2EE 28 04            jr z,2F
1179+ A2F0
1180+ A2F0              ;   Nos desplazamos por el índice de disparos.
1181+ A2F0
1182+ A2F0 2C           3 inc l
1183+ A2F1 2C               inc l
1184+ A2F2 10 FC            djnz 3B
1185+ A2F4
1186+ A2F4              ; --- Guarda el Puntero_objeto del disparo en la pila.
1187+ A2F4 CD 25 91     2 call Extrae_address
1188+ A2F7 E5               push hl
1189+ A2F8              ; ---
1190+ A2F8
1191+ A2F8              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1192+ A2F8              ; HL en el 1er .db de la caja.
1193+ A2F8
1194+ A2F8 21 1C 89         ld hl,Disparo_Amad
1195+ A2FB
1196+ A2FB 06 02            ld b,2
1197+ A2FD
1198+ A2FD D1           6 pop de
1199+ A2FE 73               ld (hl),e
1200+ A2FF 23               inc hl
1201+ A300 72               ld (hl),d
1202+ A301 23               inc hl
1203+ A302
1204+ A302 10 F9            djnz 6B
1205+ A304
1206+ A304 C9               ret
1207+ A305
1208+ A305              Genera_coordenadas_de_disparo_Amadeus
1209+ A305
1210+ A305              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1211+ A305              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1212+ A305              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1213+ A305
1214+ A305 CD 25 91         call Extrae_address
1215+ A308 CD 00 95         call Genera_coordenadas
1216+ A30B
1217+ A30B 3D               dec a
1218+ A30C
1219+ A30C 21 70 8C         ld hl,Coordenadas_disparo_certero
1220+ A30F 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1221+ A310 23               inc hl
1222+ A311 3A F0 8B         ld a,(Coordenada_X)
1223+ A314 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1224+ A315
1225+ A315 AF               xor a
1226+ A316 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1227+ A317
1228+ A317 C9               ret
1229+ A318
1230+ A318              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1231+ A318              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1232+ A318              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A318
1234+ A318              ; ----------------------------------------------
1235+ A318              ;
1236+ A318              ;   27/08/24
1237+ A318              ;
1238+ A318              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1239+ A318              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1240+ A318
1241+ A318              Detecta_impacto_en_disparo_de_Amadeus
1242+ A318
1243+ A318              Extraccion_de_datos
1244+ A318
1245+ A318 13               inc de
1246+ A319 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1247+ A31A
1248+ A31A 5E               ld e,(hl)
1249+ A31B 23               inc hl
1250+ A31C 56               ld d,(hl)
1251+ A31D
1252+ A31D 23               inc hl
1253+ A31E
1254+ A31E 4E               ld c,(hl)
1255+ A31F 23               inc hl
1256+ A320 46               ld b,(hl)
1257+ A321
1258+ A321 C5               push bc
1259+ A322 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1260+ A323
1261+ A323              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1262+ A323
1263+ A323 CD 04 9A         call PreviousScan
1264+ A326 CD 04 9A         call PreviousScan
1265+ A329
1266+ A329              Detecta_impacto_
1267+ A329
1268+ A329 1A               ld a,(de)
1269+ A32A A6               and (hl)
1270+ A32B C0               ret nz
1271+ A32C
1272+ A32C 13               inc de
1273+ A32D 23               inc hl
1274+ A32E
1275+ A32E 1A               ld a,(de)
1276+ A32F A6               and (hl)
1277+ A330 C9               ret
1278+ A331
1279+ A331              ; -------------------------------------------------------------------------------------------------------------
1280+ A331              ;
1281+ A331              ;   25/11//24
1282+ A331              ;
1283+ A331              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1284+ A331              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1285+ A331              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1286+ A331              ;
1287+ A331              ;   MODIFICA: HL,DE,BC y A.
1288+ A331              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1289+ A331              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1290+ A331
1291+ A331              Colision_Entidad_Amadeus
1292+ A331
1293+ A331              ; Posible contacto de entidad con Amadeus. ?????
1294+ A331
1295+ A331              ; Exclusiones:
1296+ A331
1297+ A331 3A 90 8C         ld a,(Shield)
1298+ A334 A7               and a
1299+ A335 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1300+ A336
1301+ A336 21 66 8C         ld hl,Ctrl_3
1302+ A339 CB 76            bit 6,(hl)
1303+ A33B C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1304+ A33C
1305+ A33C 21 6D 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1306+ A33F CB 56            bit 2,(hl)
1307+ A341 C0               ret nz
1308+ A342
1309+ A342 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1310+ A345 FE 14        	cp $14
1311+ A347 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1312+ A348
1313+ A348 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1314+ A34B A7               and a
1315+ A34C C0               ret nz
1316+ A34D
1317+ A34D              Genera_coordenadas_X
1318+ A34D
1319+ A34D              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1320+ A34D              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1321+ A34D
1322+ A34D              ;   Limpiamos almacenes.
1323+ A34D
1324+ A34D              ;    call Limpia_Coordenadas_X
1325+ A34D
1326+ A34D              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1327+ A34D
1328+ A34D 21 72 8C         ld hl,Coordenadas_X_Entidad
1329+ A350 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1330+ A353 CD 79 A3         call Guarda_coordenadas_X
1331+ A356
1332+ A356              ;   Almacenamos las coordenadas X de Amadeus.
1333+ A356
1334+ A356 3A AF 89         ld a,(CX_Amadeus)
1335+ A359 CD 79 A3         call Guarda_coordenadas_X
1336+ A35C
1337+ A35C DD E5            push ix
1338+ A35E CD 8D A3         call Compara_coordenadas_X
1339+ A361 DD E1            pop ix
1340+ A363
1341+ A363 C0               ret nz
1342+ A364
1343+ A364 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1344+ A366 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1345+ A369
1346+ A369 DD 7D            ld a,ixl
1347+ A36B C6 04            add 4
1348+ A36D DD 6F            ld ixl,a
1349+ A36F
1350+ A36F DD 22 6E 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1351+ A373
1352+ A373 21 6D 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1353+ A376 CB D6            set 2,(hl)
1354+ A378
1355+ A378 C9               ret
1356+ A379
1357+ A379               ; ----- ----- ----- ----- -----
1358+ A379
1359+ A379 77           Guarda_coordenadas_X ld (hl),a
1360+ A37A 3C               inc a
1361+ A37B 2C               inc l
1362+ A37C 77               ld (hl),a
1363+ A37D 3C               inc a
1364+ A37E 2C               inc l
1365+ A37F 77               ld (hl),a
1366+ A380 2C               inc l
1367+ A381 C9               ret
1368+ A382
1369+ A382 AF           Limpia_Coordenadas_X xor a
1370+ A383 06 06            ld b,6
1371+ A385 21 75 8C         ld hl,Coordenadas_X_Amadeus
1372+ A388 77           1 ld (hl),a
1373+ A389 23               inc hl
1374+ A38A 10 FC            djnz 1B
1375+ A38C C9               ret
1376+ A38D
1377+ A38D              ; ----- ----- ----- ----- -----
1378+ A38D
1379+ A38D              Compara_coordenadas_X
1380+ A38D
1381+ A38D DD 21 72 8C      ld ix,Coordenadas_X_Entidad
1382+ A391 DD 7E 00         ld a,(ix+0)
1383+ A394 CD A2 A3         call Comparando
1384+ A397 C8               ret z
1385+ A398
1386+ A398 3C               inc a
1387+ A399 CD B1 A3         call Comparando_1
1388+ A39C C8               ret z
1389+ A39D
1390+ A39D 3C               inc a
1391+ A39E CD B1 A3         call Comparando_1
1392+ A3A1 C9               ret
1393+ A3A2
1394+ A3A2              ; ----- ----- ----- ----- -----
1395+ A3A2              ;
1396+ A3A2              ;   4/12/23
1397+ A3A2              ;
1398+ A3A2              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1399+ A3A2
1400+ A3A2              Comparando
1401+ A3A2
1402+ A3A2 DD 2C            inc ixl
1403+ A3A4 DD 2C            inc ixl
1404+ A3A6 DD 2C            inc ixl
1405+ A3A8
1406+ A3A8 DD 46 00         ld b,(ix+0)
1407+ A3AB DD 4E 01         ld c,(ix+1)
1408+ A3AE DD 56 02         ld d,(ix+2)
1409+ A3B1
1410+ A3B1 B8           Comparando_1 cp b
1411+ A3B2 C8               ret z
1412+ A3B3 B9               cp c
1413+ A3B4 C8               ret z
1414+ A3B5 BA               cp d
1415+ A3B6 C9               ret
1416+ A3B7
1417+ A3B7              ; -----------------------------------------------------------------------
1418+ A3B7              ;
1419+ A3B7              ;   04/7/24
1420+ A3B7              ;
1421+ A3B7
1422+ A3B7              Detecta_colision_nave_entidad
1423+ A3B7
1424+ A3B7              ; Exclusiones:
1425+ A3B7
1426+ A3B7              ; Salimos de la rutina si no hay advertencia de posible colisión.
1427+ A3B7
1428+ A3B7 21 6D 8C     	ld hl,Impacto2
1429+ A3BA CB 56        	bit 2,(hl)
1430+ A3BC C8           	ret z
1431+ A3BD
1432+ A3BD              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1433+ A3BD
1434+ A3BD 2A B5 89         ld hl,(Pamm_Amadeus)
1435+ A3C0 CD 25 91         call Extrae_address
1436+ A3C3 54               ld d,h
1437+ A3C4 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1438+ A3C5
1439+ A3C5 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1440+ A3C8 06 10            ld b,16                                        ; Contador de scanlines en B.
1441+ A3CA FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1442+ A3CD
1443+ A3CD C5           1 push bc
1444+ A3CE 06 03            ld b,3
1445+ A3D0 E5               push hl
1446+ A3D1
1447+ A3D1              ; .db
1448+ A3D1
1449+ A3D1 1A           3 ld a,(de)
1450+ A3D2 A7               and a
1451+ A3D3 20 03            jr nz,4F
1452+ A3D5
1453+ A3D5 2C               inc l
1454+ A3D6 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1455+ A3D8
1456+ A3D8 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1457+ A3DA 28 04            jr z,2F
1458+ A3DC
1459+ A3DC              ; Impacto.
1460+ A3DC FD 2D            dec iyl
1461+ A3DE 28 22            jr z,5F
1462+ A3E0
1463+ A3E0 1C           2 inc e
1464+ A3E1 10 EE            djnz 3B
1465+ A3E3
1466+ A3E3 E1               pop hl
1467+ A3E4
1468+ A3E4              ; Hay salto de línea en el puntero de impresión ???
1469+ A3E4
1470+ A3E4 7C               ld a,h
1471+ A3E5 D6 57            sub $57
1472+ A3E7 20 0A            jr nz,6F
1473+ A3E9
1474+ A3E9              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1475+ A3E9
1476+ A3E9 2A B3 89         ld hl,(p.imp.amadeus)
1477+ A3EC 3E 20            ld a,$20
1478+ A3EE A7               and a
1479+ A3EF 85               add l
1480+ A3F0 6F               ld l,a
1481+ A3F1 18 01            jr 7F
1482+ A3F3
1483+ A3F3 24           6 inc h
1484+ A3F4
1485+ A3F4 C1           7 pop bc
1486+ A3F5 10 D6            djnz 1B
1487+ A3F7
1488+ A3F7              ;   Fin de la comparativa.
1489+ A3F7
1490+ A3F7              ;   NO HAY COLISIÓN !!!!!.
1491+ A3F7              ;
1492+ A3F7              ;   .db (Impacto) de Amadeus a "0".
1493+ A3F7              ;   RES el bit2 de (Impacto2).
1494+ A3F7              ;
1495+ A3F7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1496+ A3F7              ;   Lo colocamos a "0".
1497+ A3F7
1498+ A3F7 21 6D 8C         ld hl,Impacto2
1499+ A3FA CB 96            res 2,(hl)
1500+ A3FC 2A 6E 8C         ld hl,(Entidad_sospechosa_de_colision)
1501+ A3FF 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1502+ A401 C9               ret
1503+ A402
1504+ A402              ;   COLISIÓN !!!!!.
1505+ A402              ;
1506+ A402              ;   .db (Impacto) de Amadeus a "1".
1507+ A402              ;   SET el bit3 de (Impacto2).
1508+ A402              ;
1509+ A402              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1510+ A402
1511+ A402 E1           5 pop hl
1512+ A403 C1               pop bc
1513+ A404
1514+ A404 21 B2 89         ld hl,Impacto_Amadeus
1515+ A407 36 01            ld (hl),1
1516+ A409 21 6D 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1517+ A40C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1518+ A40E
1519+ A40E 11 C0 87         ld de,Indice_Explosion_entidades
1520+ A411 2A 6E 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1521+ A414
1522+ A414 23               inc hl
1523+ A415 23               inc hl
1524+ A416 23               inc hl
1525+ A417
1526+ A417 73               ld (hl),e
1527+ A418 23               inc hl
1528+ A419 72               ld (hl),d
1529+ A41A
1530+ A41A              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1531+ A41A
1532+ A41A 11 60 88         ld de,Indice_Explosion_Amadeus
1533+ A41D 21 B5 89         ld hl,Pamm_Amadeus
1534+ A420
1535+ A420 73               ld (hl),e
1536+ A421 23               inc hl
1537+ A422 72               ld (hl),d
1538+ A423
1539+ A423 C9               ret
1540+ A424
1541+ A424
1542+ A424
# file closed: Disparo.asm
2129  A424
2130  A424              	SAVESNA "Pruebas.sna", START
2131  A424
2132  A424
2133  A424
2134  A424
# file closed: Banco_de_pruebas.asm
