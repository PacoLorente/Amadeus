# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 09 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15
  42  AA15              ;	ld a,(Contador_de_frames)
  43  AA15              ;	cp $70	; 	$51 ok.
  44  AA15              ;	jr z,$
  45  AA15              ;	jr nc,$
  46  AA15
  47  AA15 3E 01        	ld a,1
  48  AA17 D3 FE        	out ($fe),a
  49  AA19 CD 84 8D     	call Pinta_entidades
  50  AA1C CD 76 8D     	call Pinta_Amadeus
  51  AA1F 3E 02        	ld a,2
  52  AA21 D3 FE        	out ($fe),a
  53  AA23
  54  AA23 CD A0 8D     	call Guarda_parametros_DRAW
  55  AA26 CD C6 8C     	call Restore_Amadeus
  56  AA29 CD C1 8A     	call Gestiona_Amadeus
  57  AA2C 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  58  AA2F CD D8 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  59  AA32
  60  AA32              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  61  AA32
  62  AA32 CD AC 8D     	call Recupera_parametros_DRAW
  63  AA35 CD 94 8D     	call Actualiza_relojes
  64  AA38 3E 00        	ld a,0
  65  AA3A D3 FE        	out ($fe),a
  66  AA3C
  67  AA3C 21 13 89     	ld hl,Ctrl_3
  68  AA3F CB 86        	res 0,(hl)
  69  AA41
  70  AA41 FD E1        	pop iy
  71  AA43 DD E1        	pop ix
  72  AA45 F1           	pop af
  73  AA46 C1           	pop bc
  74  AA47 D1           	pop de
  75  AA48 E1           	pop hl
  76  AA49 D9           	exx
  77  AA4A C1           	pop bc
  78  AA4B D1           	pop de
  79  AA4C E1           	pop hl
  80  AA4D 08           	ex af,af'
  81  AA4E F1           	pop af
  82  AA4F 08           	ex af,af'
  83  AA50 D9           	exx
  84  AA51
  85  AA51 ED 7B 09 89  	ld sp,(Stack_3)
  86  AA55
  87  AA55 FB           	ei
  88  AA56 C9           	ret
  89  AA57
  90  AA57              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  91  AA57
  92  AA57              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA57              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA57              ;
   3+ AA57              ;	17/02/23
   4+ AA57              ;
   5+ AA57              ;	Sprites e índices.
   6+ AA57
   7+ AA57              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  93  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BF 85        	defw Caja_1
 100+ 856E 00 86        	defw Caja_2
 101+ 8570 41 86        	defw Caja_3
 102+ 8572 82 86        	defw Caja_4
 103+ 8574 C3 86        	defw Caja_5
 104+ 8576 04 87        	defw Caja_6
 105+ 8578 45 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 116+ 8586
 117+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 118+ 8587
 119+ 8587 05           	db %00000101									; (Attr).
 120+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 121+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 122+ 858C
 123+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 124+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 125+ 8590
 126+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 127+ 8592 04           	db 4 											; (Cuad_objeto).
 128+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 129+ 8597
 130+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 131+ 8598
 132+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 133+ 859E
 134+ 859E 00 00        	db 0,0											; Variables_de_pintado
 135+ 85A0 00 00        	defw 0											;	" " " " " " "
 136+ 85A2 00 00        	defw 0											;	" " " " " " "
 137+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 85A8
 139+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 140+ 85AA
 141+ 85AA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 142+ 85AC
 143+ 85AC 00           	db 0											; (Autoriza_movimiento).
 144+ 85AD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 85B1 00 00
 145+ 85B3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 85B6
 147+ 85B6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 148+ 85B8 00           	db 0											; (Cola_de_desplazamiento).
 149+ 85B9
 150+ 85B9 00           	db 0 											; (Columnas).
 151+ 85BA 00 00        	defw 0											; (Limite_horizontal).
 152+ 85BC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 153+ 85BF
 154+ 85BF              ; ---------- ---------- ---------- ---------- ----------
 155+ 85BF
 156+ 85BF 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 157+ 85C1 00 00        	defw 0											; (Posicion_actual).
 158+ 85C3 00 00        	defw 0 											; (Puntero_objeto).
 159+ 85C5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 160+ 85C8
 161+ 85C8 00           	db %00000000 									; (Attr).
 162+ 85C9
 163+ 85C9 00 00        	defw 0											; (Indice_Sprite_der).
 164+ 85CB 00 00        	defw 0											; (Indice_Sprite_izq).
 165+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 166+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 167+ 85D1
 168+ 85D1 00 00        	defw 0											; (Posicion_inicio).
 169+ 85D3 00           	db 0											; (Cuad_objeto).
 170+ 85D4
 171+ 85D4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 172+ 85D8
 173+ 85D8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 174+ 85D9
 175+ 85D9 00 00 00...  	ds 6											; Variables_de_borrado
 176+ 85DF
 177+ 85DF 00 00        	db 0,0											; Variables_de_pintado
 178+ 85E1 00 00        	defw 0											;	" " " " " " "
 179+ 85E3 00 00        	defw 0											;	" " " " " " "
 180+ 85E5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85E9
 182+ 85E9 00 00        	defw 0 											; Puntero_de_impresion.
 183+ 85EB
 184+ 85EB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 185+ 85ED
 186+ 85ED 00           	db 0											; (Autoriza_movimiento).
 187+ 85EE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 187+ 85F2 00 00
 188+ 85F4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 189+ 85F7
 190+ 85F7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 191+ 85F9 00           	db 0											; (Cola_de_desplazamiento).
 192+ 85FA
 193+ 85FA 00           	db 0 											; (Columnas).
 194+ 85FB 00 00        	defw 0											; (Limite_horizontal).
 195+ 85FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 196+ 8600
 197+ 8600              ; ---------- ---------- ---------- ---------- ----------
 198+ 8600
 199+ 8600 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 200+ 8602 00 00        	defw 0											; (Posicion_actual).
 201+ 8604 00 00        	defw 0 											; (Puntero_objeto).
 202+ 8606 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 203+ 8609
 204+ 8609 00           	db %00000000 									; (Attr).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Indice_Sprite_der).
 207+ 860C 00 00        	defw 0											; (Indice_Sprite_izq).
 208+ 860E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 209+ 8610 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 210+ 8612
 211+ 8612 00 00        	defw 0											; (Posicion_inicio).
 212+ 8614 00           	db 0											; (Cuad_objeto).
 213+ 8615
 214+ 8615 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 215+ 8619
 216+ 8619 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 217+ 861A
 218+ 861A 00 00 00...  	ds 6											; Variables_de_borrado
 219+ 8620
 220+ 8620 00 00        	db 0,0											; Variables_de_pintado
 221+ 8622 00 00        	defw 0											;	" " " " " " "
 222+ 8624 00 00        	defw 0											;	" " " " " " "
 223+ 8626 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 224+ 862A
 225+ 862A 00 00        	defw 0 											; Puntero_de_impresion.
 226+ 862C
 227+ 862C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 228+ 862E
 229+ 862E 00           	db 0											; (Autoriza_movimiento).
 230+ 862F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 230+ 8633 00 00
 231+ 8635 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 232+ 8638
 233+ 8638 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 234+ 863A 00           	db 0											; (Cola_de_desplazamiento).
 235+ 863B
 236+ 863B 00           	db 0 											; (Columnas).
 237+ 863C 00 00        	defw 0											; (Limite_horizontal).
 238+ 863E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 239+ 8641
 240+ 8641              ; ---------- ---------- ---------- ---------- ----------
 241+ 8641
 242+ 8641 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 243+ 8643 00 00        	defw 0											; (Posicion_actual).
 244+ 8645 00 00        	defw 0 											; (Puntero_objeto).
 245+ 8647 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 246+ 864A
 247+ 864A 00           	db %00000000 									; (Attr).
 248+ 864B
 249+ 864B 00 00        	defw 0											; (Indice_Sprite_der).
 250+ 864D 00 00        	defw 0											; (Indice_Sprite_izq).
 251+ 864F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 252+ 8651 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 253+ 8653
 254+ 8653 00 00        	defw 0											; (Posicion_inicio).
 255+ 8655 00           	db 0											; (Cuad_objeto).
 256+ 8656
 257+ 8656 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 258+ 865A
 259+ 865A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 260+ 865B
 261+ 865B 00 00 00...  	ds 6											; Variables_de_borrado
 262+ 8661
 263+ 8661 00 00        	db 0,0											; Variables_de_pintado
 264+ 8663 00 00        	defw 0											;	" " " " " " "
 265+ 8665 00 00        	defw 0											;	" " " " " " "
 266+ 8667 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 267+ 866B
 268+ 866B 00 00        	defw 0 											; Puntero_de_impresion.
 269+ 866D
 270+ 866D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 271+ 866F
 272+ 866F 00           	db 0											; (Autoriza_movimiento).
 273+ 8670 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 273+ 8674 00 00
 274+ 8676 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 275+ 8679
 276+ 8679 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 277+ 867B 00           	db 0											; (Cola_de_desplazamiento).
 278+ 867C
 279+ 867C 00           	db 0 											; (Columnas).
 280+ 867D 00 00        	defw 0											; (Limite_horizontal).
 281+ 867F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 282+ 8682
 283+ 8682              ; ---------- ---------- ---------- ---------- ----------
 284+ 8682
 285+ 8682 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 286+ 8684 00 00        	defw 0											; (Posicion_actual).
 287+ 8686 00 00        	defw 0 											; (Puntero_objeto).
 288+ 8688 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 289+ 868B
 290+ 868B 00           	db %00000000 									; (Attr).
 291+ 868C
 292+ 868C 00 00        	defw 0											; (Indice_Sprite_der).
 293+ 868E 00 00        	defw 0											; (Indice_Sprite_izq).
 294+ 8690 00 00        	defw 0											; (Puntero_DESPLZ_der).
 295+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 296+ 8694
 297+ 8694 00 00        	defw 0											; (Posicion_inicio).
 298+ 8696 00           	db 0											; (Cuad_objeto).
 299+ 8697
 300+ 8697 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 301+ 869B
 302+ 869B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 303+ 869C
 304+ 869C 00 00 00...  	ds 6											; Variables_de_borrado
 305+ 86A2
 306+ 86A2 00 00        	db 0,0											; Variables_de_pintado
 307+ 86A4 00 00        	defw 0											;	" " " " " " "
 308+ 86A6 00 00        	defw 0											;	" " " " " " "
 309+ 86A8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 310+ 86AC
 311+ 86AC 00 00        	defw 0 											; Puntero_de_impresion.
 312+ 86AE
 313+ 86AE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 314+ 86B0
 315+ 86B0 00           	db 0											; (Autoriza_movimiento).
 316+ 86B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 316+ 86B5 00 00
 317+ 86B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 318+ 86BA
 319+ 86BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 320+ 86BC 00           	db 0											; (Cola_de_desplazamiento).
 321+ 86BD
 322+ 86BD 00           	db 0 											; (Columnas).
 323+ 86BE 00 00        	defw 0											; (Limite_horizontal).
 324+ 86C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 325+ 86C3
 326+ 86C3              ; ---------- ---------- ---------- ---------- ----------
 327+ 86C3
 328+ 86C3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 329+ 86C5 00 00        	defw 0											; (Posicion_actual).
 330+ 86C7 00 00        	defw 0 											; (Puntero_objeto).
 331+ 86C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 332+ 86CC
 333+ 86CC 00           	db %00000000 									; (Attr).
 334+ 86CD
 335+ 86CD 00 00        	defw 0											; (Indice_Sprite_der).
 336+ 86CF 00 00        	defw 0											; (Indice_Sprite_izq).
 337+ 86D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 338+ 86D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 339+ 86D5
 340+ 86D5 00 00        	defw 0											; (Posicion_inicio).
 341+ 86D7 00           	db 0											; (Cuad_objeto).
 342+ 86D8
 343+ 86D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 344+ 86DC
 345+ 86DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 346+ 86DD
 347+ 86DD 00 00 00...  	ds 6											; Variables_de_borrado
 348+ 86E3
 349+ 86E3 00 00        	db 0,0											; Variables_de_pintado
 350+ 86E5 00 00        	defw 0											;	" " " " " " "
 351+ 86E7 00 00        	defw 0											;	" " " " " " "
 352+ 86E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 353+ 86ED
 354+ 86ED 00 00        	defw 0 											; Puntero_de_impresion.
 355+ 86EF
 356+ 86EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 357+ 86F1
 358+ 86F1 00           	db 0											; (Autoriza_movimiento).
 359+ 86F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 359+ 86F6 00 00
 360+ 86F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 361+ 86FB
 362+ 86FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 363+ 86FD 00           	db 0											; (Cola_de_desplazamiento).
 364+ 86FE
 365+ 86FE 00           	db 0 											; (Columnas).
 366+ 86FF 00 00        	defw 0											; (Limite_horizontal).
 367+ 8701 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 368+ 8704
 369+ 8704              ; ---------- ---------- ---------- ---------- ----------
 370+ 8704
 371+ 8704 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 372+ 8706 00 00        	defw 0											; (Posicion_actual).
 373+ 8708 00 00        	defw 0 											; (Puntero_objeto).
 374+ 870A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 375+ 870D
 376+ 870D 00           	db %00000000 									; (Attr).
 377+ 870E
 378+ 870E 00 00        	defw 0											; (Indice_Sprite_der).
 379+ 8710 00 00        	defw 0											; (Indice_Sprite_izq).
 380+ 8712 00 00        	defw 0											; (Puntero_DESPLZ_der).
 381+ 8714 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 382+ 8716
 383+ 8716 00 00        	defw 0											; (Posicion_inicio).
 384+ 8718 00           	db 0											; (Cuad_objeto).
 385+ 8719
 386+ 8719 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 387+ 871D
 388+ 871D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 389+ 871E
 390+ 871E 00 00 00...  	ds 6											; Variables_de_borrado
 391+ 8724
 392+ 8724 00 00        	db 0,0											; Variables_de_pintado
 393+ 8726 00 00        	defw 0											;	" " " " " " "
 394+ 8728 00 00        	defw 0											;	" " " " " " "
 395+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 396+ 872E
 397+ 872E 00 00        	defw 0 											; Puntero_de_impresion.
 398+ 8730
 399+ 8730 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 400+ 8732
 401+ 8732 00           	db 0											; (Autoriza_movimiento).
 402+ 8733 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 402+ 8737 00 00
 403+ 8739 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 404+ 873C
 405+ 873C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 406+ 873E 00           	db 0											; (Cola_de_desplazamiento).
 407+ 873F
 408+ 873F 00           	db 0 											; (Columnas).
 409+ 8740 00 00        	defw 0											; (Limite_horizontal).
 410+ 8742 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 411+ 8745
 412+ 8745              ; ---------- ---------- ---------- ---------- ----------
 413+ 8745
 414+ 8745 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 415+ 8747 00 00        	defw 0											; (Posicion_actual).
 416+ 8749 00 00        	defw 0 											; (Puntero_objeto).
 417+ 874B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 418+ 874E
 419+ 874E 00           	db %00000000 									; (Attr).
 420+ 874F
 421+ 874F 00 00        	defw 0											; (Indice_Sprite_der).
 422+ 8751 00 00        	defw 0											; (Indice_Sprite_izq).
 423+ 8753 00 00        	defw 0											; (Puntero_DESPLZ_der).
 424+ 8755 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 425+ 8757
 426+ 8757 00 00        	defw 0											; (Posicion_inicio).
 427+ 8759 00           	db 0											; (Cuad_objeto).
 428+ 875A
 429+ 875A 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 430+ 875E
 431+ 875E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 432+ 875F
 433+ 875F 00 00 00...  	ds 6											; Variables_de_borrado
 434+ 8765
 435+ 8765 00 00        	db 0,0											; Variables_de_pintado
 436+ 8767 00 00        	defw 0											;	" " " " " " "
 437+ 8769 00 00        	defw 0											;	" " " " " " "
 438+ 876B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 439+ 876F
 440+ 876F 00 00        	defw 0 											; Puntero_de_impresion.
 441+ 8771
 442+ 8771 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 443+ 8773
 444+ 8773 00           	db 0											; (Autoriza_movimiento).
 445+ 8774 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 445+ 8778 00 00
 446+ 877A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 447+ 877D
 448+ 877D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 449+ 877F 00           	db 0											; (Cola_de_desplazamiento).
 450+ 8780
 451+ 8780 00           	db 0 											; (Columnas).
 452+ 8781 00 00        	defw 0											; (Limite_horizontal).
 453+ 8783 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 454+ 8786
 455+ 8786              ; -------------------------------------------------------------------------------------
 456+ 8786              ;
 457+ 8786              ;	20/05/23
 458+ 8786              ;
 459+ 8786              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 460+ 8786              ;
 461+ 8786              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 462+ 8786              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 463+ 8786              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 464+ 8786              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 465+ 8786
 466+ 8786              Indice_de_entidades
 467+ 8786
 468+ 8786 8A 87        	defw Entidad_1
 469+ 8788 9A 87        	defw Entidad_2
 470+ 878A
 471+ 878A              ;	BADSAT, (Satélite malvado).
 472+ 878A
 473+ 878A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 474+ 878C 04           	db %00000100									; (Attr).
 475+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 476+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 477+ 8791 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 478+ 8793 01           	db 1											; (Cuad_objeto).
 479+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 480+ 8798 85 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 481+ 879A
 482+ 879A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 483+ 879C 02           	db %00000010									; (Attr).
 484+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 485+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 486+ 87A1 40 50        	defw $5040                                      ; (Posicion_inicio).
 487+ 87A3 01           	db 1											; (Cuad_objeto).
 488+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 489+ 87A8 85 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 490+ 87AA
# file closed: Cajas_y_disparos.asm
  94  87AA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87AA              ; 13/05/23
   2+ 87AA
   3+ 87AA              Indice_de_niveles
   4+ 87AA
   5+ 87AA B8 87        	defw Nivel_1
   6+ 87AC BB 87        	defw Nivel_2
   7+ 87AE C8 87        	defw Nivel_3
   8+ 87B0 D8 87        	defw Nivel_4
   9+ 87B2 EA 87        	defw Nivel_5
  10+ 87B4              ;	...
  11+ 87B4              ;	...
  12+ 87B4              ;	+ Niveles ...
  13+ 87B4
  14+ 87B4 00 00        	defw 0
  15+ 87B6 00 00        	defw 0
  16+ 87B8
  17+ 87B8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87B9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87BB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87BC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87C0 01 02
  21+ 87C2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87C6 01 02
  22+ 87C8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87C9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87CD 01
  24+ 87CE 03 01 01 01  	db 3,1,1,1,1
  24+ 87D2 01
  25+ 87D3 03 01 01 01  	db 3,1,1,1,1
  25+ 87D7 01
  26+ 87D8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87D9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87DD 01
  28+ 87DE 04 01 01 01  	db 4,1,1,1,1
  28+ 87E2 01
  29+ 87E3 04 01 01 01  	db 4,1,1,1,1
  29+ 87E7 01
  30+ 87E8 02 03        	db 2,3
  31+ 87EA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87EB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87EF 01
  33+ 87F0 05 01 01 01  	db 5,1,1,1,1
  33+ 87F4 01
  34+ 87F5 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87F9 01
  35+ 87FA 05 01 01 01  	db 5,1,1,1,1
  35+ 87FE 01
  36+ 87FF
  37+ 87FF              ;---------------------------------------------------------------------------------------------------------------
  38+ 87FF              ;
  39+ 87FF              ;   3/9/23
  40+ 87FF              ;
  41+ 87FF              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87FF              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87FF              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87FF              ;	_en la caja DRAW correspondiente.
  45+ 87FF              ;
  46+ 87FF              ;	MODIFICA: HL,DE y A.
  47+ 87FF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87FF
  49+ 87FF              Inicializa_Punteros_de_nivel
  50+ 87FF
  51+ 87FF 21 AA 87     	ld hl,Indice_de_niveles
  52+ 8802 22 31 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8805 CD 16 8C     	call Extrae_address
  54+ 8808 7E           	ld a,(hl)
  55+ 8809 32 FD 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 880C 23           	inc hl
  57+ 880D 22 33 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8810 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8811
  60+ 8811              ;---------------------------------------------------------------------------------------------------------------
  61+ 8811              ;
  62+ 8811              ;   13/5/23
  63+ 8811              ;
  64+ 8811              ;	Destruye A,BC,HL,DE
  65+ 8811
  66+ 8811              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8811              ;	_del juego.
  68+ 8811
  69+ 8811              Prepara_cajas
  70+ 8811
  71+ 8811              ; Preparamos los punteros de las cajas.
  72+ 8811
  73+ 8811 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8814 CD 16 8C     	call Extrae_address
  75+ 8817 CD 54 88     	call Avanza_caja
  76+ 881A
  77+ 881A CD 98 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 881D
  79+ 881D 2A 33 89     	ld hl,(Datos_de_nivel)
  80+ 8820
  81+ 8820              ; HL está en los datos del nivel correspondiente.
  82+ 8820              ; B actuará como contador de cajas.
  83+ 8820
  84+ 8820 C5           1 push bc
  85+ 8821
  86+ 8821 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8822 CD 45 88     	call PreparaBC
  88+ 8825
  89+ 8825 21 86 87     	ld hl,Indice_de_entidades
  90+ 8828 CD 4D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 882B 22 03 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 882E
  93+ 882E CD 5E 88     	call Datos_de_entidad_a_caja
  94+ 8831
  95+ 8831 2A FB 88     	ld hl,(Indice_restore_caja)
  96+ 8834 CD 16 8C     	call Extrae_address
  97+ 8837 CD 54 88     	call Avanza_caja
  98+ 883A
  99+ 883A 2A 33 89     	ld hl,(Datos_de_nivel)
 100+ 883D 23           	inc hl
 101+ 883E 22 33 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8841
 103+ 8841 C1           	pop bc
 104+ 8842 10 DC        	djnz 1B
 105+ 8844 C9           	ret
 106+ 8845
 107+ 8845 CB 27        PreparaBC sla a
 108+ 8847 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8849 4F           	ld c,a
 110+ 884A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 884C C9           	ret
 112+ 884D
 113+ 884D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 884E ED 4A        	adc hl,bc
 115+ 8850 CD 16 8C     	call Extrae_address
 116+ 8853 C9           	ret
 117+ 8854
 118+ 8854 22 F7 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8857 13           	inc de
 120+ 8858 13           	inc de
 121+ 8859 EB           	ex de,hl
 122+ 885A 22 FB 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 885D C9           	ret
 124+ 885E
 125+ 885E              Datos_de_entidad_a_caja
 126+ 885E
 127+ 885E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 885E
 129+ 885E
 130+ 885E ED 5B F7 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8862
 132+ 8862 01 02 00     	ld bc,2
 133+ 8865 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8867
 135+ 8867 01 07 00     	ld bc,7
 136+ 886A CD 92 88     	call Situa_DE
 137+ 886D
 138+ 886D 01 05 00     	ld bc,5
 139+ 8870 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8872
 141+ 8872 01 04 00     	ld bc,4
 142+ 8875 CD 92 88     	call Situa_DE
 143+ 8878
 144+ 8878 01 07 00     	ld bc,7
 145+ 887B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 887D
 147+ 887D 01 14 00     	ld bc,20
 148+ 8880 CD 92 88     	call Situa_DE
 149+ 8883
 150+ 8883 01 02 00     	ld bc,2
 151+ 8886 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8888
 153+ 8888              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8888              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8888
 156+ 8888 01 0F 00     	ld bc,15									; *****
 157+ 888B CD 92 88     	call Situa_DE
 158+ 888E
 159+ 888E 3E 03        	ld a,3
 160+ 8890 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8891
 162+ 8891 C9           	ret
 163+ 8892
 164+ 8892 EB           Situa_DE ex de,hl
 165+ 8893 A7           	and a
 166+ 8894 ED 4A        	adc hl,bc
 167+ 8896 EB           	ex de,hl
 168+ 8897 C9           	ret
 169+ 8898
 170+ 8898              ;---------------------------------------------------------------------------------------------------------------
 171+ 8898              ;
 172+ 8898              ;	21/5/23
 173+ 8898              ;
 174+ 8898              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 8898              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 8898              ;
 177+ 8898              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 8898              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 8898              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 8898              ;
 181+ 8898              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 8898              ;	MODIFICA: A y B.
 183+ 8898              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 8898
 185+ 8898              Admin_num_entidades
 186+ 8898
 187+ 8898              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 8898
 189+ 8898 3A FD 88     	ld a,(Numero_de_entidades)
 190+ 889B A7           	and a
 191+ 889C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 889C              ;	jr z,$
 193+ 889C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 889C
 195+ 889C 20 03        	jr nz,3F
 196+ 889E
 197+ 889E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 889E
 199+ 889E CD FF 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88A1
 201+ 88A1 3A FD 88     3 ld a,(Numero_de_entidades)
 202+ 88A4 FE 0A        	cp 10
 203+ 88A6 38 08        	jr c,1F
 204+ 88A8
 205+ 88A8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88A8              ; Actualizamos variables.
 207+ 88A8
 208+ 88A8 3E 0A        	ld a,10
 209+ 88AA 32 FE 88     	ld (Numero_parcial_de_entidades),a
 210+ 88AD 47           	ld b,a
 211+ 88AE 18 04        	jr 2F
 212+ 88B0
 213+ 88B0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88B0              ; (Numero_de_entidades)="0".
 215+ 88B0
 216+ 88B0 32 FE 88     1 ld (Numero_parcial_de_entidades),a
 217+ 88B3 47           	ld b,a
 218+ 88B4 C9           2 ret
# file closed: Niveles.asm
  95  88B5
  96  88B5              ; ******************************************************************************************************************************************************************************************
  97  88B5              ; Constantes.
  98  88B5              ; ******************************************************************************************************************************************************************************************
  99  88B5              ;
 100  88B5              ; 10/11/23
 101  88B5
 102  88B5              ;
 103  88B5              ; Constantes generales.
 104  88B5              ;
 105  88B5
 106  88B5              Sprite_vacio equ $f000
 107  88B5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 108  88B5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 109  88B5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 110  88B5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 111  88B5
 112  88B5              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 113  88B5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 114  88B5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 115  88B5              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 116  88B5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 117  88B5
 118  88B5              ;														; 55 Bytes.
 119  88B5
 120  88B5              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 121  88B5              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 122  88B5
 123  88B5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 124  88B5
 125  88B5              ; ******************************************************************************************************************************************************************************************
 126  88B5              ; Variables.
 127  88B5              ; ******************************************************************************************************************************************************************************************
 128  88B5              ;
 129  88B5              ; 10/11//23
 130  88B5              ;
 131  88B5              ; Variables de DRAW. (Motor principal).
 132  88B5              ;
 133  88B5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 134  88B5
 135  88B5 00           Filas db 0												; Filas. [DRAW]
 136  88B6 00           Columns db 0  											; Nº de columnas. [DRAW]
 137  88B7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 138  88B9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 139  88BB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 140  88BC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 141  88BD
 142  88BD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 143  88BD
 144  88BD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 145  88BE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 146  88BE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 147  88BE 00           Attr db 0												; Atributos de la entidad:
 148  88BF
 149  88BF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 150  88BF              ;
 151  88BF              ;	COLORES: 0 ..... NEGRO
 152  88BF              ;    		 1 ..... AZUL
 153  88BF              ; 			 2 ..... ROJO
 154  88BF              ;			 3 ..... MAGENTA
 155  88BF              ; 			 4 ..... VERDE
 156  88BF              ; 			 5 ..... CIAN
 157  88BF              ;			 6 ..... AMARILLO
 158  88BF              ; 			 7 ..... BLANCO
 159  88BF
 160  88BF 00 00        Indice_Sprite_der defw 0
 161  88C1 00 00        Indice_Sprite_izq defw 0
 162  88C3 00 00        Puntero_DESPLZ_der defw 0
 163  88C5 00 00        Puntero_DESPLZ_izq defw 0
 164  88C7
 165  88C7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 166  88C9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 167  88CA
 168  88CA              ; Variables de objeto. (Características).
 169  88CA
 170  88CA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 171  88CB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 172  88CC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 173  88CD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 174  88CE
 175  88CE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 176  88CF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 177  88CF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 178  88CF 00 00 00...  Variables_de_borrado ds 6
 179  88D5
 180  88D5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 181  88D7 00 00        	defw 0
 182  88D9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 183  88DB 00 00 00 00  	db 0,0,0,0
 184  88DF
 185  88DF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 186  88E1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 187  88E1
 188  88E1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88E1
 190  88E1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88E2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88E2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88E2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88E2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88E2              ;
 196  88E2              ; 														DESCRIPCIÖN:
 197  88E2              ;
 198  88E2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88E2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88E2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88E2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88E2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88E2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88E2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88E2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88E2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88E2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88E2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88E2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88E2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88E2              ;
 212  88E2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88E2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88E2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88E2
 216  88E2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88E2
 218  88E2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88E4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88E6 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88E8              ;
 222  88E8              ;
 223  88E8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88E9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88E9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88E9 00           Incrementa_puntero_backup db 0
 227  88EA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88EB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88EB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88EC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88ED 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88EE              ;
 233  88EE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88EE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88EE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88EE              ;
 237  88EE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88EE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88EE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88EE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88EE              ;
 242  88EE              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88EE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88EE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88EE
 246  88EE
 247  88EE              ; Variables de funcionamiento. [DRAW].
 248  88EE
 249  88EE 00           Columnas db 0
 250  88EF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  88F1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  88F1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  88F2
 254  88F2              ; variables de control general.
 255  88F2
 256  88F2 00           Ctrl_2 db 0
 257  88F3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  88F3              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  88F3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  88F3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  88F3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  88F3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  88F3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  88F3              ;
 265  88F3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  88F3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  88F3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  88F3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  88F3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  88F3
 271  88F3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  88F4
 273  88F4              ;! 63; Bytes por entidad.
 274  88F4
 275  88F4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  88F4              ;					         		---------;      ;---------
 277  88F4
 278  88F4
 279  88F4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  88F4
 281  88F4 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  88F5
 283  88F5              ;														DESCRIPCIÓN:
 284  88F5              ;
 285  88F5              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  88F5              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  88F5              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  88F5              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  88F5              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  88F5              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  88F5
 292  88F5              ;														BIT 3, Recarga de nueva oleada.
 293  88F5              ;														BIT 4, Recarga de nueva oleada.
 294  88F5              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  88F5              ;														BIT 6, **** Frame completo.
 296  88F5              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  88F5
 298  88F5 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  88F7              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  88F7              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  88F7              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  88F7
 303  88F7              ; Gestión de ENTIDADES y CAJAS.
 304  88F7
 305  88F7 00 00        Puntero_store_caja defw 0
 306  88F9 00 00        Puntero_restore_caja defw 0
 307  88FB 00 00        Indice_restore_caja defw 0
 308  88FD 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 309  88FE 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 310  88FF 00           Entidades_en_curso db 0									; ..... ..... .....
 311  8900 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 312  8901              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 313  8901              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 314  8901              ;														; _ (Numero_de_malotes)="0".
 315  8901 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 316  8903 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 317  8905              ;														; _ puntero (Indice_entidades).
 318  8905
 319  8905
 320  8905              ;---------------------------------------------------------------------------------------------------------------
 321  8905              ;
 322  8905              ;	18/11/23
 323  8905              ;
 324  8905              ;	Álbumes.
 325  8905
 326  8905 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 327  8907              ;														; _variable para almacenar lo posición del puntero_
 328  8907              ; 														; _de pila, SP.
 329  8907 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 330  8909              ;														; La utiliza la rutina [Extrae_foto_registros].
 331  8909 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 332  890B 00 70        Stack_snapshot defw Album_de_fotos
 333  890D 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 334  890F
 335  890F              ;End_Snapshot defw Album_de_fotos
 336  890F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 337  890F 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 338  8911              ;														; _el snapshot de los registros del siguiente disparo.
 339  8911              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 340  8911 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 341  8913
 342  8913 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 343  8914              ;
 344  8914              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 345  8914              ; Gestión de Disparos.
 346  8914
 347  8914 00           Numero_de_disparotes db 0
 348  8915 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 349  8917 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 350  8919 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 351  891A              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 352  891A              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 353  891A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 354  891C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 355  891C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 356  891C              ;														; _produzca colisión.
 357  891C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 358  891E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 359  891E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 360  8921              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 361  8921 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 362  8924              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 363  8924 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 364  8925
 365  8925              ;---------------------------------------------------------------------------------------------------------------
 366  8925
 367  8925              ; Relojes y temporizaciones.
 368  8925
 369  8925 00           Contador_de_frames db 0
 370  8926 00           Contador_de_frames_2 db 0
 371  8927
 372  8927 04           Clock_explosion db 4
 373  8928 1E           Clock_Entidades_en_curso db 30
 374  8929 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 375  892A              ;														; Repite la oleada de entidades.
 376  892A 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 377  892B 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 378  892C 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 379  892D
 380  892D 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 381  892E 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 382  892F 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 383  8930
 384  8930              ;---------------------------------------------------------------------------------------------------------------
 385  8930
 386  8930              ; Gestión de NIVELES.
 387  8930
 388  8930 00           Nivel db 0												; Nivel actual del juego.
 389  8931 00 00        Puntero_indice_NIVELES defw 0
 390  8933 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 391  8935              ; 														; _ que definen el NIVEL.
 392  8935              ; Y todo comienza aquí .....
 393  8935              ;
 394  8935              ; Rutina principal *************************************************************************************************************************************************************************
 395  8935              ;
 396  8935              ;	16/11/22
 397  8935
 398  8935              START
 399  8935
 400  8935 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 401  8938 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 402  893A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 403  893C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 404  893E F3           	DI
 405  893F
 406  893F 3E 07        	ld a,%00000111
 407  8941 CD B2 98     	call Cls
 408  8944
 409  8944 CD EF 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 410  8947
 411  8947              ; INICIALIZACIÓN.
 412  8947
 413  8947 CD FF 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 414  894A CD 11 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 415  894D CD 7E 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 416  8950              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 417  8950 CD 9F 8C     	call Restore_entidad
 418  8953
 419  8953 21 FE 88     	ld hl,Numero_parcial_de_entidades
 420  8956 46           	ld b,(hl)
 421  8957 04           	inc b
 422  8958 05           	dec b
 423  8959 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 424  895B
 425  895B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 426  895B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 427  895B              ;	Pintamos el resto de entidades:
 428  895B
 429  895B              ;	INICIA ENTIDADES !!!!!
 430  895B
 431  895B C5           1 push bc  												; Guardo el contador de entidades.
 432  895C CD 4E 8B     	call Inicia_entidad
 433  895F C1           	pop bc
 434  8960 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 435  8962
 436  8962              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 437  8962              ; (Esto se dá cuando se inicia una nueva oleada).
 438  8962
 439  8962 3A F4 88     	ld a,(Ctrl_1)
 440  8965 CB 5F        	bit 3,a
 441  8967 20 1B        	jr nz,5F											; Loop
 442  8969
 443  8969              ; 	INICIA AMADEUS !!!!!
 444  8969
 445  8969 CD C6 8C     3 call Restore_Amadeus
 446  896C CD 1C 8C     	call Inicia_Puntero_objeto
 447  896F CD A5 92     	call Draw
 448  8972 CD A0 7F     	call Guarda_foto_registros
 449  8975 CD 43 8D     	call Guarda_datos_de_borrado_Amadeus
 450  8978
 451  8978 11 7E 85     	ld de,Amadeus_db
 452  897B CD D8 8C     	call Store_Amadeus
 453  897E
 454  897E              ; 	INICIA DISPAROS !!!!!
 455  897E
 456  897E CD 94 8B     	call Inicia_Puntero_Disparo_Entidades
 457  8981 CD 9B 8B     	call Inicia_Puntero_Disparo_Amadeus
 458  8984
 459  8984              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 460  8984
 461  8984 CD 7E 8B     5 call Inicia_punteros_de_cajas
 462  8987 CD 9F 8C     	call Restore_entidad
 463  898A
 464  898A 3A F4 88     	ld a,(Ctrl_1)
 465  898D CB 5F        	bit 3,a
 466  898F 28 07        	jr z,6F
 467  8991
 468  8991              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 469  8991
 470  8991 21 F4 88     	ld hl,Ctrl_1
 471  8994 CB 9E        	res 3,(hl)
 472  8996 18 07        	jr Main
 473  8998
 474  8998              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 475  8998
 476  8998 21 13 89     6 ld hl,Ctrl_3
 477  899B CB C6        	set 0,(hl)											; Frame completo.
 478  899D FB           	ei
 479  899E 76           	halt
 480  899F
 481  899F              ; ------------------------------------
 482  899F
 483  899F              Main
 484  899F              ;
 485  899F              ;	12/11/23
 486  899F
 487  899F              ; Aparece nueva entidad ???
 488  899F
 489  899F              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 490  899F              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 491  899F              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 492  899F              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 493  899F              ;														; _un 2º bloque.
 494  899F
 495  899F 3A 28 89     	ld a,(Clock_Entidades_en_curso)
 496  89A2 47           	ld b,a
 497  89A3 3A 25 89     	ld a,(Contador_de_frames)
 498  89A6 B8           	cp b
 499  89A7 28 07        	jr z,21F
 500  89A9
 501  89A9              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 502  89A9              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 503  89A9              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 504  89A9              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 505  89A9
 506  89A9 3C           	inc a
 507  89AA B8           	cp b
 508  89AB 20 1B        	jr nz,13F
 509  89AD
 510  89AD 32 25 89     	ld (Contador_de_frames),a
 511  89B0
 512  89B0              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 513  89B0              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 514  89B0
 515  89B0 3A FE 88     21 ld a,(Numero_parcial_de_entidades)
 516  89B3 47           	ld b,a
 517  89B4 3A FF 88     	ld a,(Entidades_en_curso)
 518  89B7 B8           	cp b
 519  89B8 28 0E        	jr z,13F
 520  89BA 30 0C        	jr nc,13F
 521  89BC
 522  89BC              ; --- --- --- --- ---
 523  89BC
 524  89BC 3C           	inc a
 525  89BD 32 FF 88     	ld (Entidades_en_curso),a
 526  89C0
 527  89C0              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 528  89C0
 529  89C0 3A 28 89     	ld a,(Clock_Entidades_en_curso)
 530  89C3              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 531  89C3              ;! _ IMPREDECIBLE !!!!
 532  89C3 C6 32        	add 50
 533  89C5 32 28 89     	ld (Clock_Entidades_en_curso),a
 534  89C8
 535  89C8              ; -------------------------------------------------------------------------------------------------------------
 536  89C8
 537  89C8              ; Habilita disparos.
 538  89C8
 539  89C8 21 2A 89     13 ld hl,Disparo_Amadeus
 540  89CB 11 2C 89     	ld de,CLOCK_repone_disparo_Amadeus
 541  89CE CD 76 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 542  89D1
 543  89D1 21 2D 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 544  89D4 11 2F 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 545  89D7 CD 76 9C     	call Habilita_disparos
 546  89DA
 547  89DA              ; COLISIONES.
 548  89DA
 549  89DA CD 8E 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 550  89DD
 551  89DD              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 552  89DD              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 553  89DD              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 554  89DD
 555  89DD AF           	xor a
 556  89DE 32 19 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 557  89E1
 558  89E1 CD 7E 8B     	call Inicia_punteros_de_cajas
 559  89E4 CD 9F 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 560  89E7              ; 														; _ en DRAW.
 561  89E7 3A B5 88     	ld a,(Filas)
 562  89EA A7           	and a
 563  89EB 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 564  89ED CD B1 8C     	call Incrementa_punteros_de_cajas
 565  89F0 18 F2        	jr 12B
 566  89F2
 567  89F2              ; ---------------------------------------------------------------------------------------
 568  89F2
 569  89F2 3A FE 88     10 ld a,(Numero_parcial_de_entidades)
 570  89F5 47               ld b,a
 571  89F6 A7           	and a
 572  89F7 20 14        	jr nz,11F
 573  89F9
 574  89F9 21 F4 88     	ld hl,Ctrl_1
 575  89FC CB 66        	bit 4,(hl)
 576  89FE C2 8C 8A     	jp nz,16F
 577  8A01
 578  8A01              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 579  8A01
 580  8A01 21 F4 88     	ld hl,Ctrl_1
 581  8A04 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 582  8A06
 583  8A06 3A 25 89     	ld a,(Contador_de_frames)
 584  8A09 3C           	inc a
 585  8A0A 32 29 89     	ld (Activa_recarga_cajas),a
 586  8A0D
 587  8A0D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 588  8A0D
 589  8A0D 3A FF 88     11 ld a,(Entidades_en_curso)
 590  8A10 A7           	and a
 591  8A11 CA 8C 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 592  8A14 47           	ld b,a												; No hay entidades que gestionar.
 593  8A15
 594  8A15              ; Código que ejecutamos con cada entidad:
 595  8A15              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 596  8A15
 597  8A15 C5           15 push bc 												; Nº de entidades en curso.
 598  8A16
 599  8A16              ; Impacto ???
 600  8A16
 601  8A16 3A CE 88     22 ld a,(Impacto)
 602  8A19 A7           	and a
 603  8A1A 28 31        	jr z,8F
 604  8A1C
 605  8A1C              ; Hay Impacto en esta entidad.
 606  8A1C
 607  8A1C 21 27 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 608  8A1F 35           	dec (hl)
 609  8A20 C2 81 8A     	jp nz,17F
 610  8A23
 611  8A23              ;! Velocidad de la animación de la explosión.
 612  8A23
 613  8A23 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 614  8A25              ;														; _,(velocidad de la explosión).
 615  8A25
 616  8A25              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 617  8A25
 618  8A25 CD 63 8D     	call Repone_datos_de_borrado
 619  8A28 CD BC 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 620  8A2B
 621  8A2B              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 622  8A2B
 623  8A2B 3A F2 88     	ld a,(Ctrl_2)
 624  8A2E CB 4F        	bit 1,a
 625  8A30 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 626  8A32
 627  8A32              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 628  8A32
 629  8A32 3A BD 88     	ld a,(CTRL_DESPLZ)
 630  8A35 A7           	and a
 631  8A36 20 08        	jr nz,18F
 632  8A38
 633  8A38 21 84 84     	ld hl,Indice_Explosion_2x2-2
 634  8A3B 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 635  8A3E 18 06        	jr 19F
 636  8A40
 637  8A40 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 638  8A43 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 639  8A46
 640  8A46 21 F2 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 641  8A49 CB CE        	set 1,(hl)
 642  8A4B 18 22        	jr 7F
 643  8A4D
 644  8A4D              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 645  8A4D              ; _con las coordenadas de la entidad almacenada en DRAW.
 646  8A4D
 647  8A4D 3A F4 88     8 ld a,(Ctrl_1)
 648  8A50 CB 57        	bit 2,a
 649  8A52 28 1B        	jr z,7F
 650  8A54
 651  8A54 2A 1C 89     	ld hl,(Coordenadas_disparo_certero)
 652  8A57 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 653  8A58              ;														; E contiene la coordenada_X del disparo.
 654  8A58 2A BB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 655  8A5B              ;														; H FILA, (Coordenada_y de la entidad).
 656  8A5B A7           	and a
 657  8A5C ED 52        	sbc hl,de
 658  8A5E
 659  8A5E CD BE 91     	call Determina_resultado_comparativa
 660  8A61
 661  8A61 78           	ld a,b
 662  8A62 A7           	and a
 663  8A63 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 664  8A65
 665  8A65              ; ----- ----- -----
 666  8A65
 667  8A65 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 668  8A67 32 CE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 669  8A6A
 670  8A6A 21 F4 88     	ld hl,Ctrl_1
 671  8A6D CB 96        	res 2,(hl)
 672  8A6F
 673  8A6F CD E3 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 674  8A72
 675  8A72 3A E1 88     	ld a,(Ctrl_0)
 676  8A75 CB 67        	bit 4,a
 677  8A77 28 08        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 678  8A79
 679  8A79              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 680  8A79              ; [[[
 681  8A79              ;	call Detecta_disparo_entidad
 682  8A79              ; ]]]
 683  8A79 CD 5F 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 684  8A7C
 685  8A7C 21 E1 88     	ld hl,Ctrl_0
 686  8A7F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 687  8A81
 688  8A81 CD 64 8C     17 call Store_Restore_cajas
 689  8A84
 690  8A84 C1           	pop bc
 691  8A85 10 8E        	djnz 15B
 692  8A87
 693  8A87              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 694  8A87              ; Hemos gestionado todas las unidades.
 695  8A87              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 696  8A87
 697  8A87 21 F4 88     	ld hl,Ctrl_1
 698  8A8A CB 96        	res 2,(hl)
 699  8A8C
 700  8A8C 21 13 89     16 ld hl,Ctrl_3
 701  8A8F CB C6        	set 0,(hl)											; Frame completo.
 702  8A91 AF           	xor a
 703  8A92 D3 FE        	out ($fe),a
 704  8A94 FB           	ei
 705  8A95 76           	halt
 706  8A96
 707  8A96              ; ----------------------------------------
 708  8A96
 709  8A96 3A F4 88     	ld a,(Ctrl_1) 										; Existe Loop?
 710  8A99 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 711  8A9B CA 9F 89     	jp z,Main
 712  8A9E
 713  8A9E              ; RECARGA DE NUEVA OLEADA.
 714  8A9E
 715  8A9E 3A 25 89     	ld a,(Contador_de_frames)
 716  8AA1 47           	ld b,a
 717  8AA2 3A 29 89     	ld a,(Activa_recarga_cajas)
 718  8AA5 B8           	cp b
 719  8AA6 28 08        	jr z,20F
 720  8AA8
 721  8AA8 21 F4 88     	ld hl,Ctrl_1
 722  8AAB CB E6        	set 4,(hl)
 723  8AAD C3 9F 89     	jp Main
 724  8AB0
 725  8AB0 21 F4 88     20 ld hl,Ctrl_1
 726  8AB3 CB A6        	res 4,(hl)
 727  8AB5
 728  8AB5 3A 25 89     	ld a,(Contador_de_frames)
 729  8AB8
 730  8AB8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 731  8AB8              ;! _ IMPREDECIBLE !!!!
 732  8AB8
 733  8AB8 C6 0A        	add 10
 734  8ABA 32 28 89     	ld (Clock_Entidades_en_curso),a
 735  8ABD
 736  8ABD C3 4A 89     	jp 4B
 737  8AC0
 738  8AC0 C9           	ret
 739  8AC1
 740  8AC1              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 741  8AC1              ;
 742  8AC1              ;	16/11/23
 743  8AC1
 744  8AC1              Gestiona_Amadeus
 745  8AC1
 746  8AC1              ;! Activa/desactiva impacto con Amadeus.
 747  8AC1
 748  8AC1 3A CE 88     	ld a,(Impacto)
 749  8AC4 A7           	and a
 750  8AC5 20 FE        	jr nz,$
 751  8AC7
 752  8AC7 CD 3B 8B     	call Mov_Amadeus
 753  8ACA
 754  8ACA 3A E1 88     	ld a,(Ctrl_0)
 755  8ACD CB 67        	bit 4,a
 756  8ACF 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 757  8AD1
 758  8AD1 CD 5F 8B     	call Guarda_foto_entidad_a_pintar
 759  8AD4 CD 43 8D     	call Guarda_datos_de_borrado_Amadeus
 760  8AD7
 761  8AD7 21 E1 88     14 ld hl,Ctrl_0
 762  8ADA CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 763  8ADC
 764  8ADC CD 32 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 765  8ADF
 766  8ADF              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 767  8ADF
 768  8ADF CD FE 8B     	call Calcula_numero_de_disparotes
 769  8AE2
 770  8AE2 C9           	ret
 771  8AE3
 772  8AE3              ; --------------------------------------------------------------------------------------------------------------
 773  8AE3              ;
 774  8AE3              ;	27/05/23
 775  8AE3
 776  8AE3              Mov_obj
 777  8AE3
 778  8AE3 3A F2 88     	ld a,(Ctrl_2)
 779  8AE6 CB 4F        	bit 1,a
 780  8AE8 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 781  8AEA
 782  8AEA              ; Explosión:
 783  8AEA
 784  8AEA 3A F3 88     	ld a,(Frames_explosion)
 785  8AED A7           	and a
 786  8AEE 20 11        	jr nz,4F
 787  8AF0
 788  8AF0              ; Una alimaña menos!!!!!!!!!1
 789  8AF0
 790  8AF0 CD E1 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 791  8AF3 21 FE 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 792  8AF6 35           	dec (hl)
 793  8AF7 21 FF 88     	ld hl,Entidades_en_curso
 794  8AFA 35           	dec (hl)
 795  8AFB 21 FD 88     	ld hl,Numero_de_entidades
 796  8AFE 35           	dec (hl)
 797  8AFF 18 39        	jr 3F
 798  8B01
 799  8B01              ; -----
 800  8B01
 801  8B01              ;	`Movemos´ la explosión.
 802  8B01
 803  8B01 2A C3 88     4 ld hl,(Puntero_DESPLZ_der)
 804  8B04 23           	inc hl
 805  8B05 23           	inc hl
 806  8B06 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 807  8B09 CD 16 8C     	call Extrae_address
 808  8B0C 22 B9 88     	ld (Puntero_objeto),hl
 809  8B0F
 810  8B0F 21 F3 88     	ld hl,Frames_explosion
 811  8B12 35           	dec (hl)
 812  8B13 18 25        	jr 3F
 813  8B15
 814  8B15 AF           2 xor a
 815  8B16 32 E1 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 816  8B19
 817  8B19              ; Movemos Entidades malignas.
 818  8B19
 819  8B19 CD 21 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 820  8B1C
 821  8B1C 3A E1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 822  8B1F CB 67        	bit 4,a
 823  8B21 C8           	ret z
 824  8B22
 825  8B22              ; Ha habido desplazamiento de la entidad maligna.
 826  8B22              ; Ha llegado a zona de AMADEUS ???
 827  8B22
 828  8B22 3A BC 88     	ld a,(Coordenada_y)
 829  8B25 FE 14        	cp $14
 830  8B27 38 08        	jr c,1F
 831  8B29
 832  8B29              ; ---------
 833  8B29
 834  8B29              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 835  8B29              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 836  8B29
 837  8B29 F3           	di
 838  8B2A CD 55 8F     	call Genera_coordenadas_X
 839  8B2D CD 91 8F     	call Compara_coordenadas_X
 840  8B30 FB           	ei
 841  8B31
 842  8B31              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 843  8B31
 844  8B31              ; ---------
 845  8B31
 846  8B31 CD 66 8B     1 call Prepara_var_pintado	 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 847  8B34 CD 63 8D     	call Repone_datos_de_borrado
 848  8B37 CD BC 8B     	call Limpia_Variables_de_borrado
 849  8B3A
 850  8B3A C9           3 ret													; _de la misma.
 851  8B3B
 852  8B3B              ; --------------------------------------------------------------------------------------------------------------
 853  8B3B              ;
 854  8B3B              ;	29/1/23
 855  8B3B
 856  8B3B              Mov_Amadeus
 857  8B3B
 858  8B3B CD 03 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 859  8B3E
 860  8B3E 3A E1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 861  8B41 CB 67        	bit 4,a
 862  8B43 C8           	ret z
 863  8B44
 864  8B44              ; ---------
 865  8B44
 866  8B44 CD 66 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 867  8B47 CD 53 8D     	call Repone_datos_de_borrado_Amadeus
 868  8B4A CD BC 8B     	call Limpia_Variables_de_borrado
 869  8B4D
 870  8B4D C9           	ret
 871  8B4E
 872  8B4E              ; -----------------------------------------------------------------------------------
 873  8B4E              ;
 874  8B4E              ;	16/11/23
 875  8B4E
 876  8B4E CD 1C 8C     Inicia_entidad	call Inicia_Puntero_objeto
 877  8B51 CD C6 98     	call Recompone_posicion_inicio
 878  8B54 CD A5 92     	call Draw
 879  8B57 CD A0 7F     	call Guarda_foto_registros
 880  8B5A F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 881  8B5B              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 882  8B5B CD 64 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 883  8B5E C9           	ret
 884  8B5F
 885  8B5F              ; --------------------------------------------------------------------------------------------------------------
 886  8B5F              ;
 887  8B5F              ;	31/08/23
 888  8B5F              ;
 889  8B5F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 890  8B5F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 891  8B5F
 892  8B5F              Guarda_foto_entidad_a_pintar
 893  8B5F
 894  8B5F              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 895  8B5F
 896  8B5F CD A5 92     	call Draw
 897  8B62 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 898  8B65 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 899  8B66
 900  8B66              ; --------------------------------------------------------------------------------------------------------------
 901  8B66              ;
 902  8B66              ;	19/9/23
 903  8B66
 904  8B66 21 B5 88     Prepara_var_pintado ld hl,Filas
 905  8B69 11 D5 88     	ld de,Variables_de_pintado
 906  8B6C 01 08 00     	ld bc,8
 907  8B6F ED B0        	ldir
 908  8B71 C9           	ret
 909  8B72
 910  8B72              ; --------------------------------------------------------------------------------------------------------------
 911  8B72
 912  8B72 21 D5 88     Repone_pintar ld hl,Variables_de_pintado
 913  8B75 11 B5 88     	ld de,Filas
 914  8B78 01 08 00     	ld bc,8
 915  8B7B ED B0        	ldir
 916  8B7D C9           	ret
 917  8B7E
 918  8B7E              ; *************************************************************************************************************************************************************
 919  8B7E              ;
 920  8B7E              ; 8/1/23
 921  8B7E              ;
 922  8B7E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 923  8B7E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 924  8B7E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 925  8B7E
 926  8B7E              ; Destruye HL y DE !!!!!
 927  8B7E
 928  8B7E              Inicia_punteros_de_cajas
 929  8B7E
 930  8B7E 21 6C 85     	ld hl,Indice_de_cajas
 931  8B81 CD 16 8C         call Extrae_address
 932  8B84 22 F7 88         ld (Puntero_store_caja),hl
 933  8B87 21 6E 85     	ld hl,Indice_de_cajas+2
 934  8B8A 22 FB 88     	ld (Indice_restore_caja),hl
 935  8B8D CD 16 8C     	call Extrae_address
 936  8B90 22 F9 88     	ld (Puntero_restore_caja),hl
 937  8B93 C9               ret
 938  8B94
 939  8B94              ; *************************************************************************************************************************************************************
 940  8B94              ;
 941  8B94              ; 8/1/23
 942  8B94              ;
 943  8B94              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 944  8B94
 945  8B94 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 946  8B97 22 15 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 947  8B9A C9           	ret
 948  8B9B 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 949  8B9E 22 17 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 950  8BA1 C9           	ret
 951  8BA2
 952  8BA2              ; -------------------------------------------------------------------------------------------------------------
 953  8BA2              ;
 954  8BA2              ; 21/9/23
 955  8BA2              ;
 956  8BA2
 957  8BA2              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 958  8BA2
 959  8BA2              Limpia_album_Amadeus
 960  8BA2
 961  8BA2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 962  8BA5 7E           	ld a,(hl)
 963  8BA6 A7           	and a
 964  8BA7 C8           	ret z
 965  8BA8
 966  8BA8 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 967  8BAB 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
 968  8BAE 01 0B 00     	ld bc,11
 969  8BB1 AF           	xor a
 970  8BB2 77           	ld (hl),a
 971  8BB3 ED B0        	ldir
 972  8BB5
 973  8BB5 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 974  8BB8 22 11 89     	ld (End_Snapshot_Amadeus),hl
 975  8BBB
 976  8BBB C9           	ret
 977  8BBC
 978  8BBC 21 CF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
 979  8BBF 11 D0 88     	ld de,Variables_de_borrado+1
 980  8BC2 01 05 00     	ld bc,5
 981  8BC5 AF           	xor a
 982  8BC6 77           	ld (hl),a
 983  8BC7 ED B0        	ldir
 984  8BC9 C9           	ret
 985  8BCA
 986  8BCA              ; -------------------------------------------------------------------------------------------------------------
 987  8BCA              ;
 988  8BCA              ; 8/9/23
 989  8BCA              ;
 990  8BCA
 991  8BCA              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
 992  8BCA              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
 993  8BCA
 994  8BCA              Calcula_numero_de_malotes
 995  8BCA
 996  8BCA 21 00 70     	ld hl,Album_de_fotos
 997  8BCD EB           	ex de,hl
 998  8BCE 2A 0B 89     	ld hl,(Stack_snapshot)
 999  8BD1
1000  8BD1 06 00        	ld b,0
1001  8BD3 7D           	ld a,l
1002  8BD4 93           	sub e
1003  8BD5 28 07        	jr z,1F
1004  8BD7
1005  8BD7              ; Nº de malotes no es "0".
1006  8BD7
1007  8BD7 D6 06        2 sub 6
1008  8BD9 04           	inc b
1009  8BDA A7           	and a
1010  8BDB 20 FA        	jr nz,2B
1011  8BDD 78           	ld a,b
1012  8BDE
1013  8BDE 32 00 89     1 ld (Numero_de_malotes),a
1014  8BE1 C9           	ret
1015  8BE2
1016  8BE2              ; -------------------------------------------------------------------------------------------------------------
1017  8BE2              ;
1018  8BE2              ; 8/9/23
1019  8BE2              ;
1020  8BE2
1021  8BE2              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1022  8BE2              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1023  8BE2
1024  8BE2              Calcula_malotes_Amadeus
1025  8BE2
1026  8BE2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1027  8BE5 EB           	ex de,hl
1028  8BE6 2A 11 89     	ld hl,(End_Snapshot_Amadeus)
1029  8BE9
1030  8BE9 7C           	ld a,h
1031  8BEA A7           	and a
1032  8BEB 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1033  8BED
1034  8BED 06 00        	ld b,0
1035  8BEF 7D           	ld a,l
1036  8BF0 93           	sub e
1037  8BF1 28 07        	jr z,1F
1038  8BF3
1039  8BF3              ; Nº de malotes no es "0".
1040  8BF3
1041  8BF3 D6 06        2 sub 6
1042  8BF5 04           	inc b
1043  8BF6 A7           	and a
1044  8BF7 20 FA        	jr nz,2B
1045  8BF9 78           	ld a,b
1046  8BFA
1047  8BFA 32 00 89     1 ld (Numero_de_malotes),a
1048  8BFD C9           	ret
1049  8BFE
1050  8BFE              ; -------------------------------------------------------------------------------------------------------------
1051  8BFE              ;
1052  8BFE              ; 28/2/23
1053  8BFE              ;
1054  8BFE
1055  8BFE              Calcula_numero_de_disparotes
1056  8BFE
1057  8BFE 21 56 70     	ld hl,Album_de_fotos_disparos
1058  8C01 EB           	ex de,hl
1059  8C02 2A 0F 89     	ld hl,(End_Snapshot_disparos)
1060  8C05
1061  8C05 06 00        	ld b,0
1062  8C07 7D           	ld a,l
1063  8C08 93           	sub e
1064  8C09 28 07        	jr z,1F
1065  8C0B
1066  8C0B              ; Nº de malotes no es "0".
1067  8C0B
1068  8C0B D6 06        2 sub 6
1069  8C0D 04           	inc b
1070  8C0E A7           	and a
1071  8C0F 20 FA        	jr nz,2B
1072  8C11 78           	ld a,b
1073  8C12
1074  8C12 32 14 89     1 ld (Numero_de_disparotes),a
1075  8C15 C9           	ret
1076  8C16
1077  8C16              ; *************************************************************************************************************************************************************
1078  8C16              ;
1079  8C16              ; 20/10/22
1080  8C16              ;
1081  8C16              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1082  8C16              ;
1083  8C16              ; Destruye el puntero y DE !!!!!
1084  8C16
1085  8C16 5E           Extrae_address ld e,(hl)
1086  8C17 23           	inc hl
1087  8C18 56           	ld d,(hl)
1088  8C19 2B           	dec hl
1089  8C1A EB           	ex de,hl
1090  8C1B C9           	ret
1091  8C1C
1092  8C1C              ; *************************************************************************************************************************************************************
1093  8C1C              ;
1094  8C1C              ;	7/2/23
1095  8C1C              ;
1096  8C1C              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1097  8C1C              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1098  8C1C              ;
1099  8C1C              ;   Destruye HL y BC !!!!!,
1100  8C1C              ;
1101  8C1C              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1102  8C1C              ;					"0" ..... Izquierda.
1103  8C1C
1104  8C1C              Inicia_Puntero_objeto
1105  8C1C
1106  8C1C 3A C9 88     	ld a,(Cuad_objeto)
1107  8C1F E6 01        	and 1
1108  8C21 F5           	push af
1109  8C22 CC 40 8C     	call z,Inicia_puntero_objeto_izq
1110  8C25 F1           	pop af
1111  8C26 28 2B        	jr z,1F
1112  8C28 CD 2D 8C     	call Inicia_puntero_objeto_der
1113  8C2B 18 26        	jr 1F
1114  8C2D
1115  8C2D              ; Arrancamos desde la parte izquierda de la pantalla.
1116  8C2D              ; Iniciamos (Indice_Sprite_der).
1117  8C2D
1118  8C2D 2A BF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1119  8C30 22 C3 88     	ld (Puntero_DESPLZ_der),hl
1120  8C33 CD 16 8C     	call Extrae_address
1121  8C36 22 B9 88     	ld (Puntero_objeto),hl
1122  8C39
1123  8C39 2A C1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1124  8C3C 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
1125  8C3F C9           	ret
1126  8C40
1127  8C40              ; Arrancamos desde la parte derecha de la pantalla.
1128  8C40              ; Iniciamos (Indice_Sprite_izq).
1129  8C40
1130  8C40 2A C1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1131  8C43 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
1132  8C46 CD 16 8C     	call Extrae_address
1133  8C49 22 B9 88     	ld (Puntero_objeto),hl
1134  8C4C
1135  8C4C 2A BF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1136  8C4F 22 C3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1137  8C52 C9           	ret
1138  8C53
1139  8C53              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1140  8C53
1141  8C53 21 40 83     1 ld hl,Amadeus
1142  8C56 ED 4B B9 88  	ld bc,(Puntero_objeto)
1143  8C5A B7 ED 42     	sub hl,bc
1144  8C5D C0           	ret nz
1145  8C5E 21 E1 88     	ld hl,Ctrl_0
1146  8C61 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1147  8C63 C9           	ret 												; _de nuestra nave en los extremos.
1148  8C64
1149  8C64              ; *************************************************************************************************************************************************************
1150  8C64              ;
1151  8C64              ;	14/5/23
1152  8C64              ;
1153  8C64              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1154  8C64              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1155  8C64
1156  8C64              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1157  8C64              ;	_de la 2ª y 3ª entidad respectivamente.
1158  8C64
1159  8C64              Store_Restore_cajas
1160  8C64
1161  8C64 E5           	push hl
1162  8C65 D5           	push de
1163  8C66 C5            	push bc
1164  8C67
1165  8C67              ;	STORE !!!!!
1166  8C67              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1167  8C67
1168  8C67 21 B5 88     	ld hl,Filas
1169  8C6A ED 5B F7 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1170  8C6E 01 3F 00     	ld bc,63
1171  8C71 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1172  8C73
1173  8C73              ; 	Entidad_sospechosa. 20/4/23
1174  8C73
1175  8C73 3A CE 88     	ld a,(Impacto)
1176  8C76 A7           	and a
1177  8C77 28 0C        	jr z,1F
1178  8C79
1179  8C79 2A F7 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1180  8C7C 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1181  8C7F A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1182  8C80 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1183  8C82 22 1A 89     	ld (Entidad_sospechosa_de_colision),hl
1184  8C85
1185  8C85              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1186  8C85
1187  8C85 2A F9 88     1 ld hl,(Puntero_restore_caja)
1188  8C88 7E           	ld a,(hl)
1189  8C89 A7           	and a
1190  8C8A F5           	push af
1191  8C8B 28 08        	jr z,2F
1192  8C8D
1193  8C8D 11 B5 88     	ld de,Filas
1194  8C90 01 3F 00     	ld bc,63
1195  8C93 ED B0        	ldir
1196  8C95
1197  8C95 CD B1 8C     2 call Incrementa_punteros_de_cajas
1198  8C98
1199  8C98 F1           	pop af
1200  8C99 28 EA        	jr z,1B
1201  8C9B
1202  8C9B C1           	pop bc
1203  8C9C D1           	pop de
1204  8C9D E1           	pop hl
1205  8C9E
1206  8C9E C9           	ret
1207  8C9F
1208  8C9F              ; **************************************************************************************************
1209  8C9F              ;
1210  8C9F              ;	12/05/23
1211  8C9F              ;
1212  8C9F              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1213  8C9F
1214  8C9F E5           Restore_entidad push hl
1215  8CA0 D5           	push de
1216  8CA1 C5            	push bc
1217  8CA2
1218  8CA2 2A F7 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1219  8CA5 11 B5 88     	ld de,Filas
1220  8CA8 01 3F 00     	ld bc,63
1221  8CAB ED B0        	ldir
1222  8CAD
1223  8CAD C1           	pop bc
1224  8CAE D1           	pop de
1225  8CAF E1           	pop hl
1226  8CB0 C9           	ret
1227  8CB1
1228  8CB1              ; **************************************************************************************************
1229  8CB1              ;
1230  8CB1              ;	08/05/23
1231  8CB1              ;
1232  8CB1              ;	Incrementamos los dos punteros de entidades. (+1).
1233  8CB1
1234  8CB1              Incrementa_punteros_de_cajas
1235  8CB1
1236  8CB1 2A F9 88     	ld hl,(Puntero_restore_caja)
1237  8CB4 22 F7 88     	ld (Puntero_store_caja),hl
1238  8CB7 2A FB 88     	ld hl,(Indice_restore_caja)
1239  8CBA 23           	inc hl
1240  8CBB 23           	inc hl
1241  8CBC 22 FB 88     	ld (Indice_restore_caja),hl
1242  8CBF CD 16 8C         call Extrae_address
1243  8CC2 22 F9 88         ld (Puntero_restore_caja),hl
1244  8CC5 C9               ret
1245  8CC6
1246  8CC6              ; **************************************************************************************************
1247  8CC6              ;
1248  8CC6              ;	25/01/23
1249  8CC6              ;
1250  8CC6              ;	Restore_Amadeus
1251  8CC6              ;
1252  8CC6              ;	Cargamos en DRAW los parámetros de Amadeus.
1253  8CC6              ;
1254  8CC6
1255  8CC6 E5           Restore_Amadeus	push hl
1256  8CC7 D5           	push de
1257  8CC8 C5            	push bc
1258  8CC9 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1259  8CCC 11 B5 88     	ld de,Filas
1260  8CCF 01 3F 00     	ld bc,63
1261  8CD2 ED B0        	ldir
1262  8CD4 C1           	pop bc
1263  8CD5 D1           	pop de
1264  8CD6 E1           	pop hl
1265  8CD7 C9           	ret
1266  8CD8
1267  8CD8              ; *************************************************************************************************************************************************************
1268  8CD8              ;
1269  8CD8              ;	29/04/23
1270  8CD8              ;
1271  8CD8              ;	Store_Amadeus
1272  8CD8              ;
1273  8CD8              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1274  8CD8              ;
1275  8CD8              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1276  8CD8              ;
1277  8CD8              ;	DESTRUYE: HL y BC y DE.
1278  8CD8
1279  8CD8 21 B5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1280  8CDB 01 3F 00     	ld bc,63
1281  8CDE ED B0        	ldir
1282  8CE0 C9           	ret
1283  8CE1
1284  8CE1              ; -----------------------------------------------------------
1285  8CE1              ;
1286  8CE1              ;	27/04/23
1287  8CE1              ;
1288  8CE1              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1289  8CE1              ;
1290  8CE1              ;	Destruye: HL,BC,DE,A
1291  8CE1
1292  8CE1 21 B5 88     Borra_datos_entidad ld hl,Filas
1293  8CE4 01 3E 00     	ld bc,62
1294  8CE7 AF           	xor a
1295  8CE8 77           	ld (hl),a
1296  8CE9 11 B6 88     	ld de,Filas+1
1297  8CEC ED B0        	ldir
1298  8CEE C9           	ret
1299  8CEF
1300  8CEF              ; -----------------------------------------------------------
1301  8CEF
1302  8CEF              ; Teclado.
1303  8CEF
1304  8CEF 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1305  8CF1 DB FE        	in a,($fe)
1306  8CF3 E6 01        	and $01
1307  8CF5 28 02        	jr z,1f
1308  8CF7 18 F6        	jr Pulsa_ENTER
1309  8CF9 C9           1 ret
1310  8CFA
1311  8CFA              ; **************************************************************************************************
1312  8CFA              ;
1313  8CFA              ; Temporización.
1314  8CFA
1315  8CFA              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1316  8CFA              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1317  8CFA              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1318  8CFA              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1319  8CFA
1320  8CFA              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1321  8CFA              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1322  8CFA              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1323  8CFA
1324  8CFA              ; A partir de $4f61 no hace falta DELAY.
1325  8CFA
1326  8CFA              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1327  8CFA
1328  8CFA 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1329  8CFD 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1330  8CFE 78           	LD A,B
1331  8CFF A7           	AND A
1332  8D00 20 FB        	JR NZ,wait
1333  8D02 C9           	RET
1334  8D03
1335  8D03              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1336  8D03              ;
1337  8D03              ;	5/3/23
1338  8D03              ;
1339  8D03              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1340  8D03
1341  8D03              Movimiento_Amadeus
1342  8D03
1343  8D03              ; Disparo.
1344  8D03
1345  8D03 3A 2A 89     	ld a,(Disparo_Amadeus)
1346  8D06 A7           	and a
1347  8D07 20 02        	jr nz,1F
1348  8D09 18 15        	jr 2F
1349  8D0B
1350  8D0B 3E F7        1 ld a,$f7													; "5" para disparar.
1351  8D0D DB FE        	in a,($fe)
1352  8D0F E6 10        	and $10
1353  8D11
1354  8D11 F5           	push af
1355  8D12 CC B8 8D     	call z,Genera_disparo
1356  8D15 F1           	pop af
1357  8D16 20 08        	jr nz,2F
1358  8D18
1359  8D18 3A 2A 89     	ld a,(Disparo_Amadeus)
1360  8D1B EE 01        	xor 1
1361  8D1D 32 2A 89     	ld (Disparo_Amadeus),a
1362  8D20 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1363  8D22 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1364  8D24 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1365  8D26 CC 80 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1366  8D29
1367  8D29 3E F7        	ld a,$f7
1368  8D2B DB FE        	in a,($fe)
1369  8D2D E6 01        	and $01
1370  8D2F C8           	ret z
1371  8D30
1372  8D30 3E F7        	ld a,$f7
1373  8D32 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1374  8D34 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1375  8D36 CC 62 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1376  8D39 C9           	ret
1377  8D3A
1378  8D3A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1379  8D3A              ;
1380  8D3A              ;	Rutina provisional para que los malotes cagen balas.
1381  8D3A
1382  8D3A              Detecta_disparo_entidad
1383  8D3A
1384  8D3A 3A 2D 89     	ld a,(Disparo_entidad)
1385  8D3D A7           	and a
1386  8D3E C8           	ret z
1387  8D3F
1388  8D3F              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1389  8D3F
1390  8D3F              ;	ld a,$7f				; Detecta SPACE.
1391  8D3F              ;	in a,($fe)
1392  8D3F              ;	and 1
1393  8D3F              ;	ret nz
1394  8D3F
1395  8D3F CD B8 8D     	call Genera_disparo
1396  8D42 C9           	ret
1397  8D43
1398  8D43              ; ----------------------------------------------------------------------
1399  8D43              ;
1400  8D43              ;	8/9/23
1401  8D43
1402  8D43 2A 11 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1403  8D46 2B            	dec hl
1404  8D47 7E           	ld a,(hl)
1405  8D48 A7           	and a
1406  8D49 C8           	ret z										; Salimos si es álbum está vacío.
1407  8D4A
1408  8D4A 11 D4 88     	ld de,Variables_de_borrado+5
1409  8D4D 01 06 00     	ld bc,6
1410  8D50 ED B8        	lddr
1411  8D52 C9           	ret
1412  8D53
1413  8D53              ; ----------------------------------------------------------------------
1414  8D53              ;
1415  8D53              ;	9/9/23
1416  8D53
1417  8D53              Repone_datos_de_borrado_Amadeus
1418  8D53
1419  8D53 21 CF 88     	ld hl,Variables_de_borrado
1420  8D56 11 AC 70     	ld de,Album_de_fotos_Amadeus
1421  8D59 01 06 00     	ld bc,6
1422  8D5C ED B0        	ldir
1423  8D5E
1424  8D5E EB           	ex de,hl
1425  8D5F 22 11 89     	ld (End_Snapshot_Amadeus),hl
1426  8D62
1427  8D62 C9           	ret
1428  8D63
1429  8D63              ; ----------------------------------------------------------------------
1430  8D63              ;
1431  8D63              ;	27/10/23
1432  8D63              ;
1433  8D63
1434  8D63              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1435  8D63              ;	_ Album_de_fotos correspondiente.
1436  8D63
1437  8D63              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1438  8D63              ;	_ durante el proceso de escritura.
1439  8D63
1440  8D63              Repone_datos_de_borrado
1441  8D63
1442  8D63 F3           	di
1443  8D64
1444  8D64 ED 5B 0B 89  	ld de,(Stack_snapshot)
1445  8D68 21 CF 88     	ld hl,Variables_de_borrado
1446  8D6B 01 06 00     	ld bc,6
1447  8D6E ED B0        	ldir
1448  8D70 FB           	ei
1449  8D71
1450  8D71 EB           	ex de,hl
1451  8D72 22 0B 89     	ld (Stack_snapshot),hl
1452  8D75
1453  8D75 C9           	ret
1454  8D76
1455  8D76              ; -----------------------------------------------------------------------------------
1456  8D76
1457  8D76              Pinta_Amadeus
1458  8D76
1459  8D76 3E 06        	ld a,6
1460  8D78 D3 FE            out ($fe),a										; Amarillo
1461  8D7A
1462  8D7A CD E2 8B        	call Calcula_malotes_Amadeus
1463  8D7D CD 35 96     	call Extrae_foto_Amadeus
1464  8D80 CD A2 8B     	call Limpia_album_Amadeus
1465  8D83
1466  8D83 C9           	ret
1467  8D84
1468  8D84              Pinta_entidades
1469  8D84
1470  8D84              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1471  8D84
1472  8D84 3A 13 89     	ld a,(Ctrl_3)
1473  8D87 CB 47        	bit 0,a
1474  8D89 C8           	ret z
1475  8D8A
1476  8D8A CD CA 8B     	call Calcula_numero_de_malotes
1477  8D8D CD B3 95     	call Extrae_foto_entidades
1478  8D90 CD 03 80     	call Limpia_y_reinicia_Stack_Snapshot
1479  8D93
1480  8D93 C9           	ret
1481  8D94
1482  8D94              ; -----------------------------------------------------------------------------------
1483  8D94              ;
1484  8D94              ;	12/11/23
1485  8D94              ;
1486  8D94              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1487  8D94
1488  8D94              Actualiza_relojes
1489  8D94
1490  8D94 21 25 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1491  8D97 34           	inc (hl)
1492  8D98
1493  8D98 34           	inc (hl)
1494  8D99 35           	dec (hl)
1495  8D9A C0           	ret nz
1496  8D9B
1497  8D9B 21 26 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1498  8D9E 34           	inc (hl)
1499  8D9F C9           	ret
1500  8DA0
1501  8DA0              ; ---------------------------------------------------------------
1502  8DA0              ;
1503  8DA0              ;	27/9/23
1504  8DA0
1505  8DA0              Guarda_parametros_DRAW
1506  8DA0
1507  8DA0 21 B5 88     	ld hl,Filas
1508  8DA3 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1509  8DA6 01 3F 00     	ld bc,63
1510  8DA9 ED B0        	ldir
1511  8DAB C9           	ret
1512  8DAC
1513  8DAC              Recupera_parametros_DRAW
1514  8DAC
1515  8DAC 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1516  8DAF 11 B5 88     	ld de,Filas
1517  8DB2 01 3F 00     	ld bc,63
1518  8DB5 ED B0        	ldir
1519  8DB7 C9           	ret
1520  8DB8
1521  8DB8              ; ---------------------------------------------------------------
1522  8DB8
1523  8DB8              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DB8              ; ******************************************************************************************************************************************************************************************
   2+ 8DB8              ;
   3+ 8DB8              ;   21/07/23
   4+ 8DB8              ;
   5+ 8DB8              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DB8              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DB8              ;
   8+ 8DB8              ;
   9+ 8DB8              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DB8              ;
  11+ 8DB8              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DB8              ;               _ hacen las entidades hacia abajo.
  13+ 8DB8              ;
  14+ 8DB8              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DB8              ;
  16+ 8DB8              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DB8              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DB8              ;
  19+ 8DB8              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DB8              ;           _ la bala.
  21+ 8DB8              ;
  22+ 8DB8              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DB8              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DB8              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DB8              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DB8              ;           _ en el momento de generarse la bala)).
  27+ 8DB8
  28+ 8DB8              Genera_disparo
  29+ 8DB8
  30+ 8DB8              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DB8              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DB8              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DB8              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DB8              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DB8              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DB8              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DB8
  38+ 8DB8              ; Exclusiones:
  39+ 8DB8
  40+ 8DB8 3A CD 88         ld a,(Vel_down)
  41+ 8DBB 47               ld b,a
  42+ 8DBC 3A 24 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8DBF B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8DC0 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8DC1 3A EE 88         ld a,(Columnas)
  46+ 8DC4 47               ld b,a
  47+ 8DC5 3A B6 88         ld a,(Columns)
  48+ 8DC8 B8               cp b
  49+ 8DC9 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8DCA
  51+ 8DCA              ; ----- ----- -----
  52+ 8DCA
  53+ 8DCA 3A E1 88         ld a,(Ctrl_0)
  54+ 8DCD CB 77            bit 6,a
  55+ 8DCF 20 06            jr nz,14F
  56+ 8DD1
  57+ 8DD1 3A BC 88         ld a,(Coordenada_y)
  58+ 8DD4 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8DD6 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8DD7
  61+ 8DD7 21 00 80     14 ld hl,Indice_disparo
  62+ 8DDA 3A BD 88         ld a,(CTRL_DESPLZ)
  63+ 8DDD 4F               ld c,a
  64+ 8DDE 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8DE0              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8DE0              ;                                            ""        ""       "f9", B="1"
  67+ 8DE0              ;                                            ""        ""       "fb", B="2"
  68+ 8DE0              ;                                            ""        ""       "fb", B="3"
  69+ 8DE0 A7               and a
  70+ 8DE1 28 10            jr z,1F
  71+ 8DE3 E6 01            and 1
  72+ 8DE5 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8DE6
  74+ 8DE6 79               ld a,c
  75+ 8DE7 16 F9            ld d,$f9
  76+ 8DE9 23           2 inc hl
  77+ 8DEA 23               inc hl
  78+ 8DEB 04               inc b
  79+ 8DEC BA               cp d
  80+ 8DED 28 04            jr z,1F
  81+ 8DEF 14               inc d
  82+ 8DF0 14               inc d
  83+ 8DF1 18 F6            jr 2B
  84+ 8DF3
  85+ 8DF3 CD 16 8C     1 call Extrae_address
  86+ 8DF6 E5               push hl
  87+ 8DF7 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8DF9 DD 21 7B 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8DFD
  90+ 8DFD              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8DFD              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8DFD
  93+ 8DFD 3A E1 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E00 CB 77            bit 6,a
  95+ 8E02 20 04            jr nz,19F
  96+ 8E04
  97+ 8E04 AF               xor a
  98+ 8E05 32 2D 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E08
 100+ 8E08 3A C9 88     19 ld a,(Cuad_objeto)
 101+ 8E0B FE 02            cp 2
 102+ 8E0D 38 66            jr c,3F
 103+ 8E0F 28 64            jr z,3F
 104+ 8E11
 105+ 8E11              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E11
 107+ 8E11 E6 01            and 1
 108+ 8E13 28 30            jr z,4F
 109+ 8E15
 110+ 8E15              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E15              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E15              ;
 113+ 8E15              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E15              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E15              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E15
 117+ 8E15 2A B7 88     	ld hl,(Posicion_actual)
 118+ 8E18
 119+ 8E18              ;   Amadeus o entidad ???.
 120+ 8E18
 121+ 8E18 3A E1 88         ld a,(Ctrl_0)
 122+ 8E1B CB 77            bit 6,a
 123+ 8E1D 28 0A            jr z,8F
 124+ 8E1F
 125+ 8E1F              ; 	Dispara Amadeus.
 126+ 8E1F
 127+ 8E1F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E21 CD A4 95         call PreviousScan
 129+ 8E24 CD A4 95         call PreviousScan
 130+ 8E27
 131+ 8E27              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8E27              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8E27              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8E27              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8E27
 136+ 8E27 18 11            jr 10F
 137+ 8E29
 138+ 8E29              ; 	Dispara Entidad.
 139+ 8E29
 140+ 8E29 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8E2C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8E2C
 143+ 8E2C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8E2C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8E2C
 146+ 8E2C C5               push bc
 147+ 8E2D 06 10            ld b,16
 148+ 8E2F CD 95 95     9 call NextScan
 149+ 8E32 10 FB            djnz 9B
 150+ 8E34 C1               pop bc
 151+ 8E35 CD 9F 8E         call Ajusta_disparo_parte_izquierda
 152+ 8E38 18 06            jr 17F
 153+ 8E3A
 154+ 8E3A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8E3A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8E3A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8E3A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8E3A
 159+ 8E3A CD 9F 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8E3D CD 14 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8E40              ;                                                      ; _al generar el disparo.
 162+ 8E40
 163+ 8E40              ; 	LLegados a este punto tendremos:
 164+ 8E40              ;
 165+ 8E40              ;       Puntero_objeto_disparo en IY.
 166+ 8E40              ;       Rutinas_de_impresion en IX.
 167+ 8E40              ;       Puntero_de_impresion en HL.
 168+ 8E40              ;       Impacto/Dirección en BC.
 169+ 8E40
 170+ 8E40 CD A7 8E     17 call Almacena_disparo
 171+ 8E43 18 52            jr 6F                                             ; RET.
 172+ 8E45
 173+ 8E45              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8E45              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8E45              ;
 176+ 8E45              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8E45              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8E45              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8E45
 180+ 8E45 2A B7 88     4 ld hl,(Posicion_actual)
 181+ 8E48
 182+ 8E48              ;   Amadeus o entidad ???.
 183+ 8E48
 184+ 8E48 3A E1 88         ld a,(Ctrl_0)
 185+ 8E4B CB 77            bit 6,a
 186+ 8E4D 28 0A            jr z,11F
 187+ 8E4F
 188+ 8E4F              ; 	Dispara Amadeus.
 189+ 8E4F
 190+ 8E4F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8E51 CD A4 95         call PreviousScan
 192+ 8E54 CD A4 95         call PreviousScan
 193+ 8E57
 194+ 8E57              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8E57              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8E57              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8E57              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8E57
 199+ 8E57 18 11            jr 13F
 200+ 8E59
 201+ 8E59              ; 	Dispara Entidad.
 202+ 8E59
 203+ 8E59 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8E5C              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8E5C
 206+ 8E5C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8E5C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8E5C
 209+ 8E5C C5               push bc
 210+ 8E5D 06 10            ld b,16
 211+ 8E5F CD 95 95     12 call NextScan
 212+ 8E62 10 FB            djnz 12B
 213+ 8E64 C1               pop bc
 214+ 8E65
 215+ 8E65 CD 98 8E         call Ajusta_disparo_parte_derecha
 216+ 8E68 18 06            jr 18F
 217+ 8E6A
 218+ 8E6A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E6A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E6A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E6A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E6A
 223+ 8E6A CD 98 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E6D CD 14 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E70              ;                                                       ; _al generar el disparo.
 226+ 8E70
 227+ 8E70              ; LLegados a este punto tendremos:
 228+ 8E70              ;
 229+ 8E70              ;       Puntero_objeto_disparo en IY.
 230+ 8E70              ;       Rutinas_de_impresion en IX.
 231+ 8E70              ;       Puntero_de_impresion en HL.
 232+ 8E70              ;       Impacto/Dirección en BC.
 233+ 8E70
 234+ 8E70 CD A7 8E     18 call Almacena_disparo
 235+ 8E73 18 22            jr 6F                                               ; RET.
 236+ 8E75
 237+ 8E75              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E75
 239+ 8E75 28 11        3 jr z,5F
 240+ 8E77
 241+ 8E77              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E77              ;
 243+ 8E77              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E77              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E77              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E77              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E77
 248+ 8E77              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E77              ;	   ""        ""       "f9", B="1"
 250+ 8E77              ;	   ""        ""       "fb", B="2"
 251+ 8E77              ; 	   ""        ""       "fb", B="3"
 252+ 8E77
 253+ 8E77 2A B7 88     	ld hl,(Posicion_actual)
 254+ 8E7A CD 95 95     	call NextScan
 255+ 8E7D
 256+ 8E7D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E7D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E7D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E7D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E7D
 261+ 8E7D CD 9F 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E80
 263+ 8E80              ; 	No se produce impacto. B="$80"
 264+ 8E80              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E80
 266+ 8E80 01 80 80         ld bc,$8080
 267+ 8E83
 268+ 8E83              ; 	LLegados a este punto tendremos:
 269+ 8E83              ;
 270+ 8E83              ;       Puntero_objeto_disparo en IY.
 271+ 8E83              ;       Rutinas_de_impresion en IX.
 272+ 8E83              ;       Puntero_de_impresion en HL.
 273+ 8E83              ;       Impacto/Dirección en BC.
 274+ 8E83
 275+ 8E83 CD A7 8E         call Almacena_disparo
 276+ 8E86 18 0F            jr 6F                                           ; RET.
 277+ 8E88
 278+ 8E88              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E88              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E88              ;
 281+ 8E88              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E88              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E88              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E88              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E88
 286+ 8E88 2A B7 88     5 ld hl,(Posicion_actual)
 287+ 8E8B CD 95 95     	call NextScan
 288+ 8E8E
 289+ 8E8E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E8E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E8E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E8E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E8E
 294+ 8E8E CD 98 8E         call Ajusta_disparo_parte_derecha
 295+ 8E91
 296+ 8E91              ; 	No se produce impacto. B="$80"
 297+ 8E91              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E91
 299+ 8E91 01 80 80     15 ld bc,$8080
 300+ 8E94
 301+ 8E94              ; 	LLegados a este punto tendremos:
 302+ 8E94              ;
 303+ 8E94              ;       Puntero_objeto_disparo en IY.
 304+ 8E94              ;       Rutinas_de_impresion en IX.
 305+ 8E94              ;       Puntero_de_impresion en HL.
 306+ 8E94              ;       Impacto/Dirección en BC.
 307+ 8E94
 308+ 8E94 CD A7 8E         call Almacena_disparo
 309+ 8E97
 310+ 8E97 C9           6 ret
 311+ 8E98
 312+ 8E98              ; ----------------------------------------------------------------
 313+ 8E98              ;
 314+ 8E98              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E98              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E98              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E98
 318+ 8E98 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E99 FE 02            cp 2
 320+ 8E9B 38 01            jr c,1F
 321+ 8E9D 23               inc hl
 322+ 8E9E C9           1 ret
 323+ 8E9F
 324+ 8E9F 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8EA0 FE 01        	cp 1
 326+ 8EA2 20 01        	jr nz,1F
 327+ 8EA4 2B           	dec hl
 328+ 8EA5 2B           1 dec hl
 329+ 8EA6 C9               ret
 330+ 8EA7
 331+ 8EA7              ; ----------------------------------------------------------------
 332+ 8EA7              ;
 333+ 8EA7              ;   25/02/23
 334+ 8EA7              ;
 335+ 8EA7              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8EA7              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8EA7              ;
 338+ 8EA7              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8EA7              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8EA7
 341+ 8EA7              Almacena_disparo
 342+ 8EA7
 343+ 8EA7 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8EA8 F1               pop af
 345+ 8EA9 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8EAA
 347+ 8EAA 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8EAB E6 01            and 1
 349+ 8EAD 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8EAF              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8EAF              ; 	Dispara AMADEUS.
 352+ 8EAF
 353+ 8EAF              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8EAF              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8EAF              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8EAF              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8EAF
 358+ 8EAF C5               push bc
 359+ 8EB0 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8EB3 2A 17 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8EB6 A7               and a
 362+ 8EB7 ED 42            sbc hl,bc
 363+ 8EB9 CC 9B 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8EBC C1               pop bc
 365+ 8EBD 28 54            jr z,4F
 366+ 8EBF
 367+ 8EBF 2A 17 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8EC2 23               inc hl
 369+ 8EC3 23               inc hl
 370+ 8EC4 22 17 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8EC7              ;                                                   ; _ Disparo_(+1).
 372+ 8EC7 18 18            jr 2F
 373+ 8EC9
 374+ 8EC9              ; Dispara una entidad.
 375+ 8EC9
 376+ 8EC9 C5           1 push bc
 377+ 8ECA 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8ECD 2A 15 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8ED0 A7               and a
 380+ 8ED1 ED 42            sbc hl,bc
 381+ 8ED3 CC 94 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8ED6 C1               pop bc
 383+ 8ED7 28 3A            jr z,4F
 384+ 8ED9
 385+ 8ED9 2A 15 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8EDC 23               inc hl
 387+ 8EDD 23               inc hl
 388+ 8EDE 22 15 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8EE1              ;                                                   ; _ Disparo_(+1).
 390+ 8EE1 CD 16 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8EE4              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8EE4              ;
 393+ 8EE4              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8EE4              ;                                                     Rutinas_de_impresion en IX.
 395+ 8EE4              ;                                                     Puntero_de_impresion en HL.
 396+ 8EE4              ;                                                     Impacto/Dirección en BC.
 397+ 8EE4
 398+ 8EE4 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8EE5 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8EE6 23               inc hl                                          ; _ al siguiente.
 401+ 8EE7 A7               and a
 402+ 8EE8 20 C0            jr nz,3B
 403+ 8EEA
 404+ 8EEA 08               ex af,af
 405+ 8EEB ED 73 05 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8EEF F9               ld sp,hl
 407+ 8EF0
 408+ 8EF0 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8EF2 F5               push af                                         ; Puntero de impresión.
 410+ 8EF3 FD E5            push iy                                         ; Puntero objeto.
 411+ 8EF5 C5               push bc                                         ; Control.
 412+ 8EF6
 413+ 8EF6 ED 7B 05 89      ld sp,(Stack)
 414+ 8EFA
 415+ 8EFA              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8EFA
 417+ 8EFA 21 F4 88     	ld hl,Ctrl_1
 418+ 8EFD CB C6        	set 0,(hl)
 419+ 8EFF
 420+ 8EFF DD E5        	push ix
 421+ 8F01 E1               pop hl
 422+ 8F02 F5               push af
 423+ 8F03 DD E1            pop ix
 424+ 8F05
 425+ 8F05 CD A0 7F     	call Guarda_foto_registros
 426+ 8F08
 427+ 8F08 21 F4 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F0B CB 86        	res 0,(hl)
 429+ 8F0D
 430+ 8F0D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F0D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F0D
 433+ 8F0D CD 9B 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F10 CD 94 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F13
 436+ 8F13 C9           4 ret
 437+ 8F14
 438+ 8F14              ; ----------------------------------------------------------------
 439+ 8F14              ;
 440+ 8F14              ;   4/3/23
 441+ 8F14              ;
 442+ 8F14              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F14              ;   _ al generarse el disparo.
 444+ 8F14              ;
 445+ 8F14              ;       "$80" ..... No se produce colisión.
 446+ 8F14              ;       "$81" ..... Se produce colisión.
 447+ 8F14              ;
 448+ 8F14              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F14              ;         _ que forman el disparo.
 450+ 8F14
 451+ 8F14
 452+ 8F14              Comprueba_Colision
 453+ 8F14
 454+ 8F14              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F14
 456+ 8F14 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F16 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F17
 459+ 8F17 CD 4D 8F         call Modifica_H_Velocidad_disparo
 460+ 8F1A
 461+ 8F1A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F1B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F1D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F1F
 465+ 8F1F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F21 CD 3D 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F24
 468+ 8F24 7B               ld a,e
 469+ 8F25 E6 01            and 1
 470+ 8F27 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8F29              ;                                                  ; _ para activar IMPACTO.
 472+ 8F29 E1               pop hl
 473+ 8F2A E5               push hl
 474+ 8F2B CD 95 95         call NextScan
 475+ 8F2E
 476+ 8F2E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8F2F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8F31 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8F33              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8F33 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8F35 CD 3D 8F         call Bucle_2
 482+ 8F38
 483+ 8F38 43           1 ld b,e
 484+ 8F39 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8F3A FD E1            pop iy
 486+ 8F3C C9               ret
 487+ 8F3D
 488+ 8F3D              ; ---------- ----------
 489+ 8F3D
 490+ 8F3D 06 02        Bucle_2 ld b,2
 491+ 8F3F FD 7E 00     2 ld a,(iy)
 492+ 8F42 A6               and (hl)
 493+ 8F43 28 02            jr z,1F
 494+ 8F45 1E 81            ld e,$81
 495+ 8F47 23           1 inc hl
 496+ 8F48 FD 23            inc iy
 497+ 8F4A 10 F3            djnz 2B
 498+ 8F4C C9               ret
 499+ 8F4D
 500+ 8F4D              ; ---------- ----------
 501+ 8F4D              ;
 502+ 8F4D              ;   21/7/23
 503+ 8F4D
 504+ 8F4D              Modifica_H_Velocidad_disparo
 505+ 8F4D
 506+ 8F4D 3A 24 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8F50 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8F52 D0               ret nc                                         ; _ incrementamos H.
 509+ 8F53 24               inc h
 510+ 8F54
 511+ 8F54 C9               ret
 512+ 8F55
 513+ 8F55              ; -------------------------------------------------------------------------------------------------------------
 514+ 8F55              ;
 515+ 8F55              ;   04/12/23
 516+ 8F55              ;
 517+ 8F55              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8F55              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8F55              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8F55              ;
 521+ 8F55              ;   MODIFICA: HL,DE,B y A.
 522+ 8F55
 523+ 8F55              Genera_coordenadas_X
 524+ 8F55
 525+ 8F55              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8F55              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8F55
 528+ 8F55              ;   Limpiamos almacenes.
 529+ 8F55
 530+ 8F55 CD 86 8F         call Limpia_Coordenadas_X
 531+ 8F58
 532+ 8F58              ;   Almacenamos coordenadas X.
 533+ 8F58
 534+ 8F58              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8F58
 536+ 8F58 2A DF 88         ld hl,(Puntero_de_impresion)
 537+ 8F5B 11 21 89         ld de,Coordenadas_X_Entidad
 538+ 8F5E 06 02            ld b,2
 539+ 8F60
 540+ 8F60 3A BD 88         ld a,(CTRL_DESPLZ)
 541+ 8F63 A7               and a
 542+ 8F64 28 01            jr z,1F
 543+ 8F66 04               inc b
 544+ 8F67
 545+ 8F67 CD 7D 8F     1 call Guarda_coordenadas_X
 546+ 8F6A
 547+ 8F6A              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8F6A
 549+ 8F6A 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 8F6D 11 1E 89         ld de,Coordenadas_X_Amadeus
 551+ 8F70 06 02            ld b,2
 552+ 8F72
 553+ 8F72 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 8F75 A7               and a
 555+ 8F76 28 01            jr z,2F
 556+ 8F78 04               inc b
 557+ 8F79
 558+ 8F79 CD 7D 8F     2 call Guarda_coordenadas_X
 559+ 8F7C
 560+ 8F7C              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8F7C
 562+ 8F7C C9               ret
 563+ 8F7D
 564+ 8F7D              ; ----- ----- ----- ----- -----
 565+ 8F7D
 566+ 8F7D 7D           Guarda_coordenadas_X  ld a,l
 567+ 8F7E E6 1F            and $1f
 568+ 8F80 12           1 ld (de),a
 569+ 8F81 3C               inc a
 570+ 8F82 13               inc de
 571+ 8F83 10 FB            djnz 1B
 572+ 8F85 C9               ret
 573+ 8F86
 574+ 8F86 AF           Limpia_Coordenadas_X xor a
 575+ 8F87 06 06            ld b,6
 576+ 8F89 21 1E 89         ld hl,Coordenadas_X_Amadeus
 577+ 8F8C 77           1 ld (hl),a
 578+ 8F8D 23               inc hl
 579+ 8F8E 10 FC            djnz 1B
 580+ 8F90 C9               ret
 581+ 8F91
 582+ 8F91              ; ----- ----- ----- ----- -----
 583+ 8F91
 584+ 8F91              Compara_coordenadas_X
 585+ 8F91
 586+ 8F91 06 03            ld b,3
 587+ 8F93 11 23 89         ld de,Coordenadas_X_Entidad+2
 588+ 8F96
 589+ 8F96 1A               ld a,(de)
 590+ 8F97 A7               and a
 591+ 8F98 20 01            jr nz,2F
 592+ 8F9A 05               dec b
 593+ 8F9B
 594+ 8F9B 1B           2 dec de
 595+ 8F9C 1B               dec de
 596+ 8F9D 21 1E 89         ld hl,Coordenadas_X_Amadeus
 597+ 8FA0
 598+ 8FA0 D5           1 push de
 599+ 8FA1 E5               push hl
 600+ 8FA2 C5               push bc
 601+ 8FA3
 602+ 8FA3 CD AD 8F         call Comparando
 603+ 8FA6
 604+ 8FA6 C1               pop bc
 605+ 8FA7 E1               pop hl
 606+ 8FA8 D1               pop de
 607+ 8FA9
 608+ 8FA9 13               inc de
 609+ 8FAA 10 F4            djnz 1B
 610+ 8FAC
 611+ 8FAC C9               ret
 612+ 8FAD
 613+ 8FAD              ; ----- ----- ----- ----- -----
 614+ 8FAD              ;
 615+ 8FAD              ;   4/12/23
 616+ 8FAD              ;
 617+ 8FAD              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8FAD
 619+ 8FAD 06 03        Comparando ld b,3
 620+ 8FAF 1A               ld a,(de)
 621+ 8FB0 4E           2 ld c,(hl)
 622+ 8FB1 B9               cp c
 623+ 8FB2 28 04            jr z,1F
 624+ 8FB4 23               inc hl
 625+ 8FB5 10 F9            djnz 2B
 626+ 8FB7 C9               ret
 627+ 8FB8
 628+ 8FB8 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8FBA 32 CE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8FBD 21 19 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8FC0 CB D6            set 2,(hl)
 632+ 8FC2 C9               ret
 633+ 8FC3
 634+ 8FC3              ; -----------------------------------------------------------------------
 635+ 8FC3              ;
 636+ 8FC3              ;   17/04/23
 637+ 8FC3              ;
 638+ 8FC3
 639+ 8FC3              Detecta_colision_nave_entidad
 640+ 8FC3
 641+ 8FC3              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8FC3
 643+ 8FC3 2A B7 88         ld hl,(Posicion_actual)
 644+ 8FC6 CD F0 94         call Calcula_puntero_de_impresion
 645+ 8FC9
 646+ 8FC9              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 647+ 8FC9              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 648+ 8FC9
 649+ 8FC9 DD E5            push ix
 650+ 8FCB E1               pop hl
 651+ 8FCC E5               push hl
 652+ 8FCD
 653+ 8FCD              ; ----- ----- -----
 654+ 8FCD 1E 00            ld e,0                                         ; Indica impacto.
 655+ 8FCF 06 0A            ld b,10
 656+ 8FD1 CD 01 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 657+ 8FD4 7B               ld a,e
 658+ 8FD5 FE 05            cp 5
 659+ 8FD7 38 0E            jr c,3F
 660+ 8FD9
 661+ 8FD9              ; LLegados a este punto:
 662+ 8FD9              ;
 663+ 8FD9              ;   HAY COLISIÓN !!!!!.
 664+ 8FD9              ;
 665+ 8FD9              ;   .db (Impacto) de Amadeus a "1".
 666+ 8FD9              ;   SET el bit3 de (Impacto2).
 667+ 8FD9              ;
 668+ 8FD9              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 669+ 8FD9
 670+ 8FD9 21 97 85         ld hl,Amadeus_db+25
 671+ 8FDC 36 01            ld (hl),1
 672+ 8FDE 21 19 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 673+ 8FE1 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 674+ 8FE3 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 675+ 8FE5 18 18            jr 1F
 676+ 8FE7
 677+ 8FE7              ; -----
 678+ 8FE7
 679+ 8FE7 E1           3 pop hl
 680+ 8FE8 CD 95 95         call NextScan
 681+ 8FEB E5               push hl
 682+ 8FEC 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 683+ 8FED FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 684+ 8FEF 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 685+ 8FF1 30 0C            jr nc,1F
 686+ 8FF3              ;                                                  ; _ 2º scanline si esto es así.
 687+ 8FF3 10 DC            djnz 2B
 688+ 8FF5
 689+ 8FF5              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 690+ 8FF5
 691+ 8FF5              ; LLegados a este punto:
 692+ 8FF5              ;
 693+ 8FF5              ;   NO HAY COLISIÓN !!!!!.
 694+ 8FF5              ;
 695+ 8FF5              ;   .db (Impacto) de Amadeus a "0".
 696+ 8FF5              ;   RES el bit2 de (Impacto2).
 697+ 8FF5              ;
 698+ 8FF5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 699+ 8FF5              ;   Lo colocamos a "0".
 700+ 8FF5
 701+ 8FF5 21 19 89         ld hl,Impacto2
 702+ 8FF8 CB 96            res 2,(hl)
 703+ 8FFA 2A 1A 89         ld hl,(Entidad_sospechosa_de_colision)
 704+ 8FFD 36 00            ld (hl),0
 705+ 8FFF
 706+ 8FFF E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 707+ 9000 C9               ret
 708+ 9001
 709+ 9001               ; ---------- ----------
 710+ 9001
 711+ 9001 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 712+ 9002 3A B6 88         ld a,(Columns)
 713+ 9005 47               ld b,a
 714+ 9006 FD 7E 00     2 ld a,(iy)
 715+ 9009 BE               cp (hl)
 716+ 900A 28 01            jr z,1F
 717+ 900C
 718+ 900C 1C               inc e
 719+ 900D
 720+ 900D 23           1 inc hl
 721+ 900E FD 23            inc iy
 722+ 9010 10 F4            djnz 2B
 723+ 9012 C1               pop bc
 724+ 9013 C9               ret
 725+ 9014
 726+ 9014              ; -------------------------------------------------------------------------------------------------------------
 727+ 9014              ;
 728+ 9014              ;   13/03/23
 729+ 9014              ;
 730+ 9014              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 731+ 9014              ;
 732+ 9014              ;   DESTRUYE: HL,BC,DE y A.
 733+ 9014
 734+ 9014 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 735+ 9017 7E               ld a,(hl)
 736+ 9018 A7               and a
 737+ 9019 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 738+ 901A
 739+ 901A 44               ld b,h
 740+ 901B 4D               ld c,l
 741+ 901C 2A 0D 89         ld hl,(Stack_snapshot_disparos)
 742+ 901F E5               push hl
 743+ 9020 A7               and a
 744+ 9021 ED 42            sbc hl,bc
 745+ 9023 E5               push hl
 746+ 9024 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 747+ 9025
 748+ 9025 E1               pop hl
 749+ 9026 54               ld d,h
 750+ 9027 5D               ld e,l
 751+ 9028 1B               dec de
 752+ 9029 ED B8            lddr                                                ; Limpiamos.
 753+ 902B
 754+ 902B 21 56 70         ld hl,Album_de_fotos_disparos
 755+ 902E 22 0D 89         ld (Stack_snapshot_disparos),hl
 756+ 9031
 757+ 9031 C9               ret
 758+ 9032
 759+ 9032              ; -------------------------------------------------------------------------------------------------------------
 760+ 9032              ;
 761+ 9032              ;   18/07/23
 762+ 9032              ;
 763+ 9032
 764+ 9032              Motor_de_disparos
 765+ 9032
 766+ 9032              ; Gestiona DISPAROS DE AMADEUS.
 767+ 9032
 768+ 9032 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 769+ 9035 2A 17 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 770+ 9038
 771+ 9038 CD 16 8C     2 call Extrae_address
 772+ 903B 7E               ld a,(hl)
 773+ 903C A7               and a
 774+ 903D 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 775+ 903F
 776+ 903F              ; ----- ----- ----- ----- ----- -----
 777+ 903F
 778+ 903F C5               push bc
 779+ 9040 CD 04 91         call foto_disparo_a_borrar
 780+ 9043
 781+ 9043              ; Existe colisión con este disparo???
 782+ 9043
 783+ 9043 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 784+ 9044 7E               ld a,(hl)
 785+ 9045 2B               dec hl
 786+ 9046 E6 01            and 1
 787+ 9048 28 1D            jr z,9F
 788+ 904A
 789+ 904A              ;   En este punto:
 790+ 904A              ;
 791+ 904A              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 792+ 904A              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 793+ 904A              ;   _con la entidad).
 794+ 904A              ;
 795+ 904A              ;   Disparo_2A defw 0                                ; Control.
 796+ 904A              ;    defw 0                                          ; Puntero objeto.
 797+ 904A              ;    defw 0                                          ; Puntero de impresión.
 798+ 904A              ;    defw 0                                          ; Rutina de impresión.
 799+ 904A
 800+ 904A E5               push hl
 801+ 904B
 802+ 904B 06 04            ld b,4
 803+ 904D 23           19 inc hl
 804+ 904E 10 FD            djnz 19B
 805+ 9050
 806+ 9050 CD 16 8C         call Extrae_address
 807+ 9053 CD 5E 9C         call Genera_coordenadas_disparo
 808+ 9056
 809+ 9056              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 810+ 9056
 811+ 9056 21 1C 89         ld hl,Coordenadas_disparo_certero
 812+ 9059 72               ld (hl),d
 813+ 905A 23               inc hl
 814+ 905B 73               ld (hl),e
 815+ 905C
 816+ 905C              ; Elimino el disparo de la base de datos.
 817+ 905C
 818+ 905C E1               pop hl
 819+ 905D CD 83 91         call Elimina_disparo_de_base_de_datos
 820+ 9060 21 19 89         ld hl,Impacto2
 821+ 9063 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 822+ 9065
 823+ 9065 18 06            jr 11F
 824+ 9067
 825+ 9067 CD 2D 91     9 call Mueve_disparo
 826+ 906A CD 04 91         call foto_disparo_a_borrar
 827+ 906D
 828+ 906D C1           11 pop bc
 829+ 906E 18 04            jr 7F
 830+ 9070
 831+ 9070              ; ----- ----- ----- ----- ----- -----
 832+ 9070
 833+ 9070 ED 42        1 sbc hl,bc
 834+ 9072 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 835+ 9074
 836+ 9074 2A 17 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 837+ 9077 23               inc hl
 838+ 9078 23               inc hl
 839+ 9079 22 17 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 840+ 907C 18 BA            jr 2B
 841+ 907E
 842+ 907E CD 9B 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 843+ 9081              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 844+ 9081
 845+ 9081              ; Gestiona DISPAROS DE ENTIDADES.
 846+ 9081
 847+ 9081 01 6A 85         ld bc,Disparo_11
 848+ 9084 2A 15 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 849+ 9087
 850+ 9087 CD 16 8C     5 call Extrae_address
 851+ 908A 7E               ld a,(hl)
 852+ 908B A7               and a
 853+ 908C 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 854+ 908E
 855+ 908E              ; ----- ----- ----- ----- ----- -----
 856+ 908E
 857+ 908E C5               push bc
 858+ 908F CD 04 91         call foto_disparo_a_borrar
 859+ 9092
 860+ 9092              ; Existe colisión con este disparo???
 861+ 9092
 862+ 9092 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 863+ 9093 7E               ld a,(hl)
 864+ 9094 2B               dec hl
 865+ 9095 E6 01            and 1
 866+ 9097 28 4D            jr z,10F
 867+ 9099
 868+ 9099              ;! La colisión se produce con Amadeus???
 869+ 9099              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 870+ 9099
 871+ 9099 E5               push hl
 872+ 909A
 873+ 909A 06 04            ld b,4
 874+ 909C 23           16 inc hl
 875+ 909D 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 876+ 909F
 877+ 909F CD 16 8C         call Extrae_address
 878+ 90A2 CD 5E 9C         call Genera_coordenadas_disparo
 879+ 90A5
 880+ 90A5 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 881+ 90A6 FE 16            cp $16
 882+ 90A8 38 2A            jr c,15F
 883+ 90AA
 884+ 90AA
 885+ 90AA              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 886+ 90AA
 887+ 90AA D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 888+ 90AB
 889+ 90AB              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 890+ 90AB
 891+ 90AB 2A A8 85         ld hl,(p.imp.amadeus)
 892+ 90AE
 893+ 90AE              ; Coordenada X de Amadeus en D.
 894+ 90AE
 895+ 90AE 7D               ld a,l
 896+ 90AF E6 1F            and $1F
 897+ 90B1 57               ld d,a
 898+ 90B2
 899+ 90B2 21 86 85         ld hl,Amadeus_db+8
 900+ 90B5 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 901+ 90B6
 902+ 90B6 21 1E 89         ld hl,Coordenadas_X_Amadeus
 903+ 90B9 CD 7D 8F         call Guarda_coordenadas_X
 904+ 90BC
 905+ 90BC D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 906+ 90BD
 907+ 90BD              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 908+ 90BD
 909+ 90BD 06 02            ld b,2
 910+ 90BF C5           20 push bc
 911+ 90C0
 912+ 90C0 06 03            ld b,3
 913+ 90C2 21 1E 89         ld hl,Coordenadas_X_Amadeus
 914+ 90C5 7E           18 ld a,(hl)
 915+ 90C6 BA               cp d
 916+ 90C7 20 04            jr nz,17F
 917+ 90C9
 918+ 90C9              ;! Colisión Amadeus !!!!!!!!!!
 919+ 90C9
 920+ 90C9 C1               pop bc
 921+ 90CA E1               pop hl
 922+ 90CB 18 0D            jr 14F
 923+ 90CD
 924+ 90CD 23           17 inc hl
 925+ 90CE 10 F5            djnz 18B
 926+ 90D0
 927+ 90D0 14               inc d                       ; 2ª Coordenada_X del disparo.
 928+ 90D1
 929+ 90D1 C1               pop bc
 930+ 90D2 10 EB            djnz 20B
 931+ 90D4
 932+ 90D4
 933+ 90D4              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 934+ 90D4              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 935+ 90D4
 936+ 90D4 E1           15 pop hl
 937+ 90D5 23               inc hl
 938+ 90D6 35               dec (hl)
 939+ 90D7 2B               dec hl
 940+ 90D8 18 0C            jr 10F
 941+ 90DA
 942+ 90DA              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 943+ 90DA              ; _ almacén de coordenadas_X de Amadeus.
 944+ 90DA
 945+ 90DA E5           14 push hl
 946+ 90DB CD 83 91         call Elimina_disparo_de_base_de_datos
 947+ 90DE 21 19 89         ld hl,Impacto2
 948+ 90E1 CB CE            set 1,(hl)
 949+ 90E3 E1               pop hl
 950+ 90E4 18 06            jr 12F
 951+ 90E6
 952+ 90E6              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 953+ 90E6
 954+ 90E6 CD 2D 91     10 call Mueve_disparo
 955+ 90E9 CD 04 91         call foto_disparo_a_borrar
 956+ 90EC C1           12 pop bc
 957+ 90ED
 958+ 90ED 18 04            jr 8F
 959+ 90EF
 960+ 90EF              ; ----- ----- ----- ----- ----- -----
 961+ 90EF
 962+ 90EF ED 42        4 sbc hl,bc
 963+ 90F1 28 0A            jr z,6F
 964+ 90F3
 965+ 90F3 2A 15 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 966+ 90F6 23               inc hl
 967+ 90F7 23               inc hl
 968+ 90F8 22 15 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 969+ 90FB 18 8A            jr 5B
 970+ 90FD
 971+ 90FD CD 94 8B     6 call Inicia_Puntero_Disparo_Entidades
 972+ 9100 CD 86 8F         call Limpia_Coordenadas_X
 973+ 9103 C9               ret
 974+ 9104
 975+ 9104              ; ------------------------------------------------------------------
 976+ 9104
 977+ 9104              foto_disparo_a_borrar
 978+ 9104
 979+ 9104 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 980+ 9105 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 981+ 9106 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 982+ 9107
 983+ 9107 E5               push hl
 984+ 9108 23               inc hl
 985+ 9109 23               inc hl
 986+ 910A ED 73 05 89      ld (Stack),sp
 987+ 910E F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 988+ 910F FD E1            pop iy
 989+ 9111 DD E1            pop ix
 990+ 9113 E1               pop hl
 991+ 9114 ED 7B 05 89      ld sp,(Stack)
 992+ 9118 3A F4 88         ld a,(Ctrl_1)
 993+ 911B CB C7            set 0,a
 994+ 911D 32 F4 88         ld (Ctrl_1),a
 995+ 9120 CD A0 7F         call Guarda_foto_registros
 996+ 9123 3A F4 88         ld a,(Ctrl_1)
 997+ 9126 CB 87            res 0,a
 998+ 9128 32 F4 88         ld (Ctrl_1),a
 999+ 912B E1               pop hl
1000+ 912C C9               ret
1001+ 912D
1002+ 912D              ;---------------------------------------------------
1003+ 912D              ;
1004+ 912D              ;   18/07/23
1005+ 912D              ;
1006+ 912D
1007+ 912D              Mueve_disparo
1008+ 912D
1009+ 912D              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1010+ 912D              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1011+ 912D              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1012+ 912D
1013+ 912D E5               push hl
1014+ 912E
1015+ 912E 7E               ld a,(hl)
1016+ 912F
1017+ 912F 06 04            ld b,4
1018+ 9131 23           1 inc hl
1019+ 9132 10 FD            djnz 1B
1020+ 9134
1021+ 9134              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1022+ 9134
1023+ 9134 CD 16 8C         call Extrae_address
1024+ 9137
1025+ 9137 E6 01            and 1
1026+ 9139 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1027+ 913B
1028+ 913B              ; Disparo hacia arriba, (Amadeus).
1029+ 913B
1030+ 913B              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1031+ 913B              ; _ de la dificultad.
1032+ 913B
1033+ 913B CD A4 95         call PreviousScan
1034+ 913E CD A4 95         call PreviousScan
1035+ 9141 CD A4 95         call PreviousScan
1036+ 9144 CD A4 95         call PreviousScan
1037+ 9147
1038+ 9147              ; Detecta si el disparo de Amadeus sale de pantalla:
1039+ 9147
1040+ 9147 7C               ld a,h
1041+ 9148 FE 40            cp $40
1042+ 914A 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1043+ 914C
1044+ 914C              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1045+ 914C
1046+ 914C EB               ex de,hl
1047+ 914D 06 04            ld b,4
1048+ 914F 2B           6 dec hl
1049+ 9150 10 FD            djnz 6B
1050+ 9152
1051+ 9152 CD 83 91         call Elimina_disparo_de_base_de_datos
1052+ 9155 E1               pop hl
1053+ 9156 18 10            jr 7F
1054+ 9158
1055+ 9158              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1056+ 9158              ; HL contiene el puntero de impresión del disparo.
1057+ 9158              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1058+ 9158
1059+ 9158 D5           3 push de
1060+ 9159 C5               push bc
1061+ 915A
1062+ 915A CD 14 8F         call Comprueba_Colision
1063+ 915D
1064+ 915D              ; B="$80", no hay colisión. B="$81", existe colisión.
1065+ 915D
1066+ 915D 78               ld a,b
1067+ 915E
1068+ 915E C1               pop bc
1069+ 915F D1               pop de
1070+ 9160
1071+ 9160 EB               ex de,hl
1072+ 9161
1073+ 9161 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1074+ 9162 23               inc hl                                      ; _ movimiento.
1075+ 9163 72               ld (hl),d
1076+ 9164
1077+ 9164 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1078+ 9165
1079+ 9165 23               inc hl                                      ; _ en curso.
1080+ 9166 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1081+ 9167 2B               dec hl
1082+ 9168
1083+ 9168 C9           7 ret
1084+ 9169
1085+ 9169              ; Disparo hacia abajo, (Entidad).
1086+ 9169
1087+ 9169 3A 24 89     2 ld a,(Velocidad_disparo_entidades)
1088+ 916C 47               ld b,a
1089+ 916D
1090+ 916D CD 95 95     4 call NextScan
1091+ 9170 10 FB            djnz 4B
1092+ 9172
1093+ 9172              ; Detecta si el disparo de la entidad sale de la pantalla.
1094+ 9172
1095+ 9172 7C               ld a,h
1096+ 9173 FE 58            cp $58
1097+ 9175 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1098+ 9177
1099+ 9177 EB               ex de,hl
1100+ 9178 06 04            ld b,4
1101+ 917A 2B           5 dec hl
1102+ 917B 10 FD            djnz 5B
1103+ 917D
1104+ 917D CD 83 91         call Elimina_disparo_de_base_de_datos
1105+ 9180 E1               pop hl
1106+ 9181 18 E5            jr 7B
1107+ 9183
1108+ 9183              ; HL apunta al primer byte de la base de datos del disparo.
1109+ 9183
1110+ 9183 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1111+ 9186 AF               xor a
1112+ 9187 77               ld (hl),a
1113+ 9188 54               ld d,h
1114+ 9189 5D               ld e,l
1115+ 918A 13               inc de
1116+ 918B ED B0            ldir
1117+ 918D C9               ret
1118+ 918E
1119+ 918E              ; -----------------------------------------------------------------
1120+ 918E              ;
1121+ 918E              ;   12/04/23
1122+ 918E              ;
1123+ 918E
1124+ 918E 3A 19 89     Selector_de_impactos ld a,(Impacto2)
1125+ 9191 A7               and a
1126+ 9192 C8               ret z
1127+ 9193
1128+ 9193 FE 04            cp 4
1129+ 9195 20 0D            jr nz,1F
1130+ 9197
1131+ 9197              ; La colisión se produce por contacto entre Amadeus y una entidad.
1132+ 9197
1133+ 9197 F3               di
1134+ 9198 18 FE            jr $
1135+ 919A FB               ei
1136+ 919B
1137+ 919B CD C3 8F         call Detecta_colision_nave_entidad
1138+ 919E
1139+ 919E 21 19 89         ld hl,Impacto2
1140+ 91A1 CB 5E            bit 3,(hl)
1141+ 91A3 C0               ret nz                                               ; Existe colisión, RET.
1142+ 91A4
1143+ 91A4              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1144+ 91A4              ; Primero analizamos si algún disparo impacta en Amadeus.
1145+ 91A4
1146+ 91A4 21 19 89     1 ld hl,Impacto2
1147+ 91A7 CB 4E            bit 1,(hl)
1148+ 91A9 28 07            jr z,2F
1149+ 91AB
1150+ 91AB 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1151+ 91AE 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1152+ 91B0 18 0B            jr 3F
1153+ 91B2
1154+ 91B2 21 19 89     2 ld hl,Impacto2
1155+ 91B5 CB 46            bit 0,(hl)
1156+ 91B7 C8               ret z
1157+ 91B8
1158+ 91B8              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1159+ 91B8
1160+ 91B8 21 F4 88         ld hl,Ctrl_1
1161+ 91BB CB D6            set 2,(hl)
1162+ 91BD
1163+ 91BD C9           3 ret
1164+ 91BE
1165+ 91BE              ; -----------------------------------------------------------------
1166+ 91BE              ;
1167+ 91BE              ;   25/04/23
1168+ 91BE              ;
1169+ 91BE
1170+ 91BE              Determina_resultado_comparativa
1171+ 91BE
1172+ 91BE              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1173+ 91BE              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1174+ 91BE              ;
1175+ 91BE              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1176+ 91BE              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1177+ 91BE              ;
1178+ 91BE              ;   SBC HL,DE
1179+ 91BE
1180+ 91BE              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1181+ 91BE              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1182+ 91BE
1183+ 91BE              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1184+ 91BE              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1185+ 91BE
1186+ 91BE
1187+ 91BE 3A C9 88         ld a,(Cuad_objeto)
1188+ 91C1 FE 02            cp 2
1189+ 91C3 28 26            jr z,2F
1190+ 91C5 38 24            jr c,2F
1191+ 91C7
1192+ 91C7              ; Cuadrantes 3º y 4º
1193+ 91C7
1194+ 91C7 E6 01            and 1
1195+ 91C9 28 10            jr z,4F
1196+ 91CB
1197+ 91CB              ; Cuadrante 3º
1198+ 91CB
1199+ 91CB 7C               ld a,h
1200+ 91CC 06 00            ld b,0
1201+ 91CE
1202+ 91CE CD 59 92         call Compara_cositas_H3
1203+ 91D1
1204+ 91D1 04               inc b
1205+ 91D2 05               dec b
1206+ 91D3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1207+ 91D4
1208+ 91D4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1209+ 91D5 06 00            ld b,0
1210+ 91D7
1211+ 91D7 CD 6B 92         call Compara_cositas_L3
1212+ 91DA C9               ret
1213+ 91DB
1214+ 91DB              ; Cuadrante 4º
1215+ 91DB
1216+ 91DB 7C           4 ld a,h
1217+ 91DC 06 00            ld b,0
1218+ 91DE
1219+ 91DE CD 7D 92         call Compara_cositas_H4
1220+ 91E1
1221+ 91E1 04               inc b
1222+ 91E2 05               dec b
1223+ 91E3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1224+ 91E4
1225+ 91E4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1226+ 91E5 06 00            ld b,0
1227+ 91E7
1228+ 91E7 CD 93 92         call Compara_cositas_L4
1229+ 91EA C9               ret
1230+ 91EB
1231+ 91EB              ; Cuadrantes 1º y 2º.
1232+ 91EB
1233+ 91EB 28 10        2 jr z,3F
1234+ 91ED
1235+ 91ED              ; 1er Cuadrante
1236+ 91ED
1237+ 91ED 7C               ld a,h
1238+ 91EE 06 00            ld b,0
1239+ 91F0
1240+ 91F0 CD 31 92         call Compara_cositas_H1
1241+ 91F3
1242+ 91F3 04               inc b
1243+ 91F4 05               dec b
1244+ 91F5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1245+ 91F6
1246+ 91F6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1247+ 91F7 06 00            ld b,0
1248+ 91F9
1249+ 91F9 CD 47 92         call Compara_cositas_L1
1250+ 91FC C9               ret
1251+ 91FD
1252+ 91FD
1253+ 91FD              ; 2º Cuadrante
1254+ 91FD
1255+ 91FD 7C           3 ld a,h
1256+ 91FE 06 00            ld b,0
1257+ 9200
1258+ 9200 CD 0D 92         call Compara_cositas_H2
1259+ 9203
1260+ 9203 04               inc b
1261+ 9204 05               dec b
1262+ 9205 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1263+ 9206
1264+ 9206 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1265+ 9207 06 00            ld b,0
1266+ 9209
1267+ 9209 CD 1F 92         call Compara_cositas_L2
1268+ 920C C9               ret
1269+ 920D
1270+ 920D A7           Compara_cositas_H2 and a
1271+ 920E 28 0D            jr z,1F
1272+ 9210              ;    cp $fd
1273+ 9210              ;    jr z,1F
1274+ 9210              ;    cp $fe
1275+ 9210              ;    jr z,1F
1276+ 9210 FE FF            cp $ff
1277+ 9212 28 09            jr z,1F
1278+ 9214 FE 01            cp $01
1279+ 9216 28 05            jr z,1F
1280+ 9218 FE 02            cp $02
1281+ 921A 28 01            jr z,1F
1282+ 921C C0               ret nz
1283+ 921D 04           1 inc b
1284+ 921E C9               ret
1285+ 921F
1286+ 921F A7           Compara_cositas_L2 and a
1287+ 9220 28 0D            jr z,1F
1288+ 9222              ;    cp $fd
1289+ 9222              ;    jr z,1F
1290+ 9222 FE FE            cp $fe
1291+ 9224 28 09            jr z,1F
1292+ 9226 FE FF            cp $ff
1293+ 9228 28 05            jr z,1F
1294+ 922A FE 01            cp $01
1295+ 922C 28 01            jr z,1F
1296+ 922E              ;    cp $02
1297+ 922E              ;    jr z,1F
1298+ 922E C0               ret nz
1299+ 922F 04           1 inc b
1300+ 9230 C9               ret
1301+ 9231
1302+ 9231 A7           Compara_cositas_H1 and a
1303+ 9232 28 11            jr z,1F
1304+ 9234              ;    cp $fd
1305+ 9234              ;    jr z,1F
1306+ 9234              ;    cp $fe
1307+ 9234              ;    jr z,1F
1308+ 9234 FE FF            cp $ff
1309+ 9236 28 0D            jr z,1F
1310+ 9238 FE 01            cp $01
1311+ 923A 28 09            jr z,1F
1312+ 923C FE 02            cp $02
1313+ 923E 28 05            jr z,1F
1314+ 9240 FE 03            cp $03
1315+ 9242 28 01            jr z,1F
1316+ 9244 C0               ret nz
1317+ 9245 04           1 inc b
1318+ 9246 C9               ret
1319+ 9247
1320+ 9247 A7           Compara_cositas_L1 and a
1321+ 9248 28 0D            jr z,1F
1322+ 924A              ;    cp $fd
1323+ 924A              ;    jr z,1F
1324+ 924A              ;    cp $fe
1325+ 924A              ;    jr z,1F
1326+ 924A              ;    cp $ff
1327+ 924A              ;    jr z,1F
1328+ 924A FE 01            cp $01
1329+ 924C 28 09            jr z,1F
1330+ 924E FE 02            cp $02
1331+ 9250 28 05            jr z,1F
1332+ 9252 FE 03            cp $03
1333+ 9254 28 01            jr z,1F
1334+ 9256 C0               ret nz
1335+ 9257 04           1 inc b
1336+ 9258 C9               ret
1337+ 9259
1338+ 9259 A7           Compara_cositas_H3 and a
1339+ 925A 28 0D            jr z,1F
1340+ 925C              ;    cp $fd
1341+ 925C              ;    jr z,1F
1342+ 925C FE FE            cp $fe
1343+ 925E 28 09            jr z,1F
1344+ 9260 FE FF            cp $ff
1345+ 9262 28 05            jr z,1F
1346+ 9264 FE 01            cp $01
1347+ 9266 28 01            jr z,1F
1348+ 9268              ;    cp $02
1349+ 9268              ;    jr z,1F
1350+ 9268              ;    cp $03
1351+ 9268              ;    jr z,1F
1352+ 9268 C0               ret nz
1353+ 9269 04           1 inc b
1354+ 926A C9               ret
1355+ 926B
1356+ 926B A7           Compara_cositas_L3 and a
1357+ 926C 28 0D            jr z,1F
1358+ 926E              ;    cp $fd
1359+ 926E              ;    jr z,1F
1360+ 926E              ;    cp $fe
1361+ 926E              ;    jr z,1F
1362+ 926E              ;    cp $ff
1363+ 926E              ;    jr z,1F
1364+ 926E FE 01            cp $01
1365+ 9270 28 09            jr z,1F
1366+ 9272 FE 02            cp $02
1367+ 9274 28 05            jr z,1F
1368+ 9276 FE 03            cp $03
1369+ 9278 28 01            jr z,1F
1370+ 927A C0               ret nz
1371+ 927B 04           1 inc b
1372+ 927C C9               ret
1373+ 927D
1374+ 927D A7           Compara_cositas_H4 and a
1375+ 927E 28 11            jr z,1F
1376+ 9280 FE FD            cp $fd
1377+ 9282 28 0D            jr z,1F
1378+ 9284 FE FE            cp $fe
1379+ 9286 28 09            jr z,1F
1380+ 9288 FE FF            cp $ff
1381+ 928A 28 05            jr z,1F
1382+ 928C FE 01            cp $01
1383+ 928E 28 01            jr z,1F
1384+ 9290              ;    cp $02
1385+ 9290              ;    jr z,1F
1386+ 9290              ;    cp $03
1387+ 9290              ;    jr z,1F
1388+ 9290 C0               ret nz
1389+ 9291 04           1 inc b
1390+ 9292 C9               ret
1391+ 9293
1392+ 9293 A7           Compara_cositas_L4 and a
1393+ 9294 28 0D            jr z,1F
1394+ 9296              ;    cp $fd
1395+ 9296              ;    jr z,1F
1396+ 9296 FE FE            cp $fe
1397+ 9298 28 09            jr z,1F
1398+ 929A FE FF            cp $ff
1399+ 929C 28 05            jr z,1F
1400+ 929E FE 01            cp $01
1401+ 92A0 28 01            jr z,1F
1402+ 92A2              ;    cp $02
1403+ 92A2              ;    jr z,1F
1404+ 92A2              ;    cp $03
1405+ 92A2              ;    jr z,1F
1406+ 92A2 C0               ret nz
1407+ 92A3 04           1 inc b
1408+ 92A4 C9               ret
# file closed: Disparo.asm
1524  92A5              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92A5              ; ******************************************************************************************************************************************************************************************
   2+ 92A5              ;
   3+ 92A5              ; 26/06/23
   4+ 92A5              ;
   5+ 92A5              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92A5
   7+ 92A5 CD 89 95     Draw call Prepara_draw
   8+ 92A8 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 92A9 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 92AA 28 05        	jr z,2F
  11+ 92AC
  12+ 92AC 3A C9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 92AF 18 0C        	jr 1F
  14+ 92B1
  15+ 92B1 2A C7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 92B4 22 B7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 92B7 CD 46 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 92BA              ;													; _la esquina superior izquierda de la pantalla.
  19+ 92BA CD E9 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 92BD
  21+ 92BD 3A E1 88     1 ld a,(Ctrl_0)
  22+ 92C0 CB 6F        	bit 5,a
  23+ 92C2 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 92C4
  25+ 92C4 CD DC 92     	call Comprueba_limite_horizontal
  26+ 92C7 CD 6C 93     	call Comprueba_limite_vertical
  27+ 92CA
  28+ 92CA              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 92CA              ; -----------------------
  30+ 92CA              ; -----------------------
  31+ 92CA              ; -----------------------
  32+ 92CA
  33+ 92CA CD B9 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 92CD CD F0 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 92D0 CD 4F 95     	call Define_rutina_de_impresion
  36+ 92D3
  37+ 92D3 3A E1 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 92D6 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 92D8 32 E1 88     	ld (Ctrl_0),a
  40+ 92DB
  41+ 92DB C9           	ret
  42+ 92DC
  43+ 92DC              ; *******************************************************************************************************************************************************************************************
  44+ 92DC              ;	21/01/23
  45+ 92DC              ;
  46+ 92DC              ; 	Comprueba_limite_horizontal.
  47+ 92DC              ;
  48+ 92DC              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 92DC              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 92DC              ;
  51+ 92DC              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 92DC              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 92DC              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 92DC              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 92DC
  56+ 92DC
  57+ 92DC
  58+ 92DC 3A E1 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 92DF CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 92E1 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 92E3 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 92E5 32 E1 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 92E8 18 09            jr 6F
  64+ 92EA CB 5F        1 bit 3,a
  65+ 92EC 28 0A            jr z,2F
  66+ 92EE E6 F7            and $f7
  67+ 92F0 32 E1 88         ld (Ctrl_0),a
  68+ 92F3 CD 46 94     6 call Inicializacion
  69+ 92F6 18 5B            jr 5F
  70+ 92F8 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 92F9
  72+ 92F9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 92F9              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 92F9
  75+ 92F9 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 92FA 2A EF 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 92FD CD A8 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9300 67           	ld h,a
  79+ 9301 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9302 CD A8 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9305 67           	ld h,a
  82+ 9306 A7           	and a
  83+ 9307 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9309 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 930A 3A C9 88     	ld a,(Cuad_objeto)
  86+ 930D FE 02        	cp 2
  87+ 930F 38 1E        	jr c,3F
  88+ 9311 28 1C        	jr z,3F
  89+ 9313 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9314 28 23            jr z,7F
  91+ 9316 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9318 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 931A E1           	pop hl
  94+ 931B
  95+ 931B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 931B              ; _para indicar con E="2" en caso necesario.
  97+ 931B
  98+ 931B E5               push hl
  99+ 931C C5               push bc
 100+ 931D CD A8 98     	call calcula_tercio
 101+ 9320 FE 01        	cp 1
 102+ 9322 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9324 CD 54 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9327 28 26            jr z,9F
 105+ 9329 38 24            jr c,9F
 106+ 932B 1E 00        11 ld e,0
 107+ 932D 18 22            jr 8F
 108+ 932F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9330 28 07        	jr z, 7F
 110+ 9332 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9334 1E 00         	ld e,0
 112+ 9336 E1           	pop hl
 113+ 9337 18 04        	jr 4F
 114+ 9339 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 933B 18 15            jr 10F
 116+ 933D
 117+ 933D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 933D              ; _para indicar con E="2" en caso necesario.
 119+ 933D
 120+ 933D E5           4 push hl
 121+ 933E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 933F CD A8 98     	call calcula_tercio
 123+ 9342 FE 01        	cp 1
 124+ 9344 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9346 CD 54 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9349 28 04            jr z,9F
 127+ 934B 30 02            jr nc,9F
 128+ 934D 18 02        	jr 8F
 129+ 934F 1E 02        9 ld e,2
 130+ 9351 C1           8 pop bc
 131+ 9352 E1           10 pop hl
 132+ 9353 C9           5 ret
 133+ 9354
 134+ 9354              ; --------------------
 135+ 9354              ;
 136+ 9354              ; 25/08/22
 137+ 9354
 138+ 9354 CD A8 98     Comprueba_centro call calcula_tercio
 139+ 9357 67               ld h,a
 140+ 9358 08           	ex af,af
 141+ 9359 FE 02        	cp 2
 142+ 935B 38 07        	jr c,1F
 143+ 935D 28 05        	jr z,1F
 144+ 935F 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9362 18 03        	jr 2F
 146+ 9364 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9367 08           2 ex af,af
 148+ 9368 A7               and a
 149+ 9369 ED 42            sbc hl,bc
 150+ 936B C9               ret
 151+ 936C
 152+ 936C              ; *********************************************************************************************************************************************************************************************
 153+ 936C              ;
 154+ 936C              ;   16/8/22
 155+ 936C              ;
 156+ 936C              ;	Comprueba_limite_vertical
 157+ 936C              ;
 158+ 936C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 936C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 936C              ;
 161+ 936C
 162+ 936C 2A B7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 936F 7D           	ld a,l
 164+ 9370 E6 1F        	and $1F
 165+ 9372 57           	ld d,a
 166+ 9373 3A F1 88     	ld a,(Limite_vertical)
 167+ 9376 BA           	cp d 											; Límite - Posición.
 168+ 9377 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9378 3A C9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 937B CB 47        	bit 0,a
 171+ 937D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 937F
 173+ 937F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 937F
 175+ 937F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9380 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9382
 178+ 9382              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9382              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9382
 181+ 9382 3A BB 88         ld a,(Coordenada_X)
 182+ 9385 16 0F            ld d,Centro_izquierda
 183+ 9387 A7               and a
 184+ 9388 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9389 28 1E            jr z,3F
 186+ 938B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 938D              ;                                                    ; _salimos sin modificar nada.
 188+ 938D 18 0E            jr 2F
 189+ 938F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9390 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9392
 192+ 9392              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9392              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9392
 195+ 9392 3A BB 88         ld a,(Coordenada_X)
 196+ 9395 16 10            ld d,Centro_derecha
 197+ 9397 A7               and a
 198+ 9398 92               sub d
 199+ 9399 28 0E            jr z,3F
 200+ 939B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 939D              ;                                                    ; _salimos sin modificar nada.
 202+ 939D CB 43        2 bit 0,e
 203+ 939F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 93A1 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 93A2 CD 36 94         call Modificaccionne
 206+ 93A5 C1           	pop bc
 207+ 93A6 CD 46 94         call Inicializacion
 208+ 93A9 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 93AA
 210+ 93AA              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 93AA
 212+ 93AA C5           4 push bc
 213+ 93AB 01 B6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 93AE 0A           	ld a,(bc)
 215+ 93AF 3D           	dec a
 216+ 93B0 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 93B1 7D           	ld a,l
 218+ 93B2 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 93B3 CB 47        	bit 0,a
 220+ 93B5 28 03        	jr z,5F
 221+ 93B7 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 93B8 18 2E        	jr 7F
 223+ 93BA
 224+ 93BA              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 93BA
 226+ 93BA 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 93BB F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 93BC 3A E1 88     	ld a,(Ctrl_0)
 229+ 93BF CB 4F        	bit 1,a
 230+ 93C1 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 93C3 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 93C4
 233+ 93C4              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 93C4
 235+ 93C4 1C               inc e
 236+ 93C5 1D               dec e
 237+ 93C6 20 07            jr nz,12F
 238+ 93C8 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 93C9 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 93CA 22 B7 88     	ld (Posicion_actual),hl
 241+ 93CD 18 44        13 jr 9F
 242+ 93CF CB 43        12 bit 0,e
 243+ 93D1 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 93D3              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 93D3 C1           	pop bc
 246+ 93D4 18 D3        	jr 3B
 247+ 93D6 80           14 add b
 248+ 93D7 6F               ld l,a
 249+ 93D8 22 B7 88     	ld (Posicion_actual),hl
 250+ 93DB CD 36 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 93DE 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 93E0 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 93E2 32 E1 88         ld (Ctrl_0),a
 254+ 93E5 F1           	pop af
 255+ 93E6 18 2B        	jr 9F
 256+ 93E8
 257+ 93E8              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 93E8
 259+ 93E8 F5           7 push af
 260+ 93E9 3A E1 88     	ld a,(Ctrl_0)
 261+ 93EC CB 47        	bit 0,a
 262+ 93EE 20 1D        	jr nz,8F
 263+ 93F0 F1           	pop af
 264+ 93F1
 265+ 93F1              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 93F1
 267+ 93F1 1C           	inc e
 268+ 93F2 1D               dec e
 269+ 93F3 20 07            jr nz,10F
 270+ 93F5 90           	sub b
 271+ 93F6 6F               ld l,a
 272+ 93F7 22 B7 88     	ld (Posicion_actual),hl
 273+ 93FA 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 93FC              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 93FC CB 43        10 bit 0,e
 276+ 93FE 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9400              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9400 C1           	pop bc
 279+ 9401 18 A6        	jr 3B
 280+ 9403 90           16 sub b
 281+ 9404 6F               ld l,a
 282+ 9405 22 B7 88     	ld (Posicion_actual),hl
 283+ 9408 CD 36 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 940B 18 06            jr 9F
 285+ 940D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 940F 32 E1 88         ld (Ctrl_0),a
 287+ 9412 F1           	pop af
 288+ 9413 C1           9 pop bc
 289+ 9414 1E 00        	ld e,0
 290+ 9416 CD 46 94         call Inicializacion
 291+ 9419 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 941A 08           	ex af,af
 293+ 941B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 941C 18 8B            jr 3B
 295+ 941E
 296+ 941E              ; --------------------
 297+ 941E
 298+ 941E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9420 CD A4 95     1 call PreviousScan
 300+ 9423 10 FB            djnz 1B
 301+ 9425 22 B7 88     	ld (Posicion_actual),hl
 302+ 9428 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9429 C9           	ret
 304+ 942A
 305+ 942A              ; --------------------
 306+ 942A
 307+ 942A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 942C CD 95 95     1 call NextScan
 309+ 942F 10 FB            djnz 1B
 310+ 9431 22 B7 88     	ld (Posicion_actual),hl
 311+ 9434 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9435 C9           	ret
 313+ 9436
 314+ 9436              ; --------------------
 315+ 9436              ;
 316+ 9436              ;	22/01/23
 317+ 9436              ;
 318+ 9436              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9436              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9436              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9436
 322+ 9436
 323+ 9436              Modificaccionne
 324+ 9436
 325+ 9436 3A C9 88     	ld a,(Cuad_objeto)
 326+ 9439 FE 02        	cp 2
 327+ 943B CC 1E 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 943E DC 1E 94         call c,Modifica_Pos_actual
 329+ 9441 C8           	ret z
 330+ 9442 CD 2A 94         call Modifica_Pos_actual2
 331+ 9445 C9               ret
 332+ 9446
 333+ 9446              ; *************************************************************************************************************************************************************************************************
 334+ 9446              ;
 335+ 9446              ;	13/8/22
 336+ 9446              ;
 337+ 9446              ;	Inicializacion
 338+ 9446              ;
 339+ 9446              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9446              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9446              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9446              ;
 343+ 9446              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9446              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9446              ;	_ desaparece/aparece.
 346+ 9446
 347+ 9446              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9446              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9446              ;
 350+ 9446              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9446              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9446              ; 		   [E] ="0"
 353+ 9446
 354+ 9446              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9446
 356+ 9446 CD A8 98     Inicializacion call calcula_tercio
 357+ 9449 28 36        	jr z,primit
 358+ 944B E6 02        	and 2
 359+ 944D 20 07        	jr nz,segmit
 360+ 944F 7D           	ld a,l
 361+ 9450 FE 7F        	cp $7f
 362+ 9452 38 2D        	jr c,primit
 363+ 9454 28 2B        	jr z,primit
 364+ 9456 CD B3 94     segmit call column
 365+ 9459 38 13        	jr c,tercuad
 366+ 945B 3E 04        cuarcuad ld a,4
 367+ 945D 32 C9 88     	ld (Cuad_objeto),a
 368+ 9460 21 20 48     	ld hl,$4820
 369+ 9463 22 EF 88     	ld (Limite_horizontal),hl
 370+ 9466 21 F1 88     	ld hl,Limite_vertical
 371+ 9469 36 0D        	ld (hl),$0d
 372+ 946B 08           	ex af,af
 373+ 946C 18 3C        	jr 1F
 374+ 946E              tercuad
 375+ 946E 3E 03        	ld a,3
 376+ 9470 32 C9 88     	ld (Cuad_objeto),a
 377+ 9473 21 20 48     	ld hl,$4820
 378+ 9476 22 EF 88     	ld (Limite_horizontal),hl
 379+ 9479 21 F1 88     	ld hl,Limite_vertical
 380+ 947C 36 12        	ld (hl),$12
 381+ 947E 08           	ex af,af
 382+ 947F 18 29        	jr 1F
 383+ 9481 CD B3 94     primit call column
 384+ 9484 38 13        	jr c, primcuad
 385+ 9486              segcuad
 386+ 9486 3E 02        	ld a,2
 387+ 9488 32 C9 88     	ld (Cuad_objeto),a
 388+ 948B 21 C0 4F     	ld hl,$4fc0
 389+ 948E 22 EF 88     	ld (Limite_horizontal),hl
 390+ 9491 21 F1 88     	ld hl,Limite_vertical
 391+ 9494 36 0D        	ld (hl),$0d
 392+ 9496 08           	ex af,af
 393+ 9497 18 11        	jr 1F
 394+ 9499              primcuad
 395+ 9499 3E 01        	ld a,1
 396+ 949B 32 C9 88     	ld (Cuad_objeto),a
 397+ 949E 21 C0 4F     	ld hl,$4fc0
 398+ 94A1 22 EF 88     	ld (Limite_horizontal),hl
 399+ 94A4 21 F1 88     	ld hl,Limite_vertical
 400+ 94A7 36 12        	ld (hl),$12
 401+ 94A9 08           	ex af,af
 402+ 94AA CD 33 9C     1 call Genera_coordenadas
 403+ 94AD 21 E1 88     	ld hl,Ctrl_0
 404+ 94B0 CB EE        	set 5,(hl)
 405+ 94B2 C9           	ret
 406+ 94B3
 407+ 94B3              ; ------------------------------------------------------------------------------------------------------------------
 408+ 94B3
 409+ 94B3              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 94B3              ;
 411+ 94B3              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 94B3
 413+ 94B3 7D           column ld a,l
 414+ 94B4 E6 1F        	and $1f
 415+ 94B6 FE 10         	cp $10
 416+ 94B8 C9            	ret
 417+ 94B9
 418+ 94B9              ; --------------------------------------------------------------------------------------------------------------------
 419+ 94B9              ;
 420+ 94B9              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 94B9              ;
 422+ 94B9              ; 14/12/22
 423+ 94B9              ;
 424+ 94B9              ;	Modifica: A y BC.
 425+ 94B9
 426+ 94B9 3A C9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 94BC E6 01        	and 1
 428+ 94BE 28 17        	jr z,1F
 429+ 94C0
 430+ 94C0              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 94C0
 432+ 94C0 3A BB 88     	ld a,(Coordenada_X)
 433+ 94C3 47           	ld b,a
 434+ 94C4 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 94C5 79           	ld a,c
 436+ 94C6 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 94C7 38 08        	jr c,2F
 438+ 94C9 47           	ld b,a
 439+ 94CA 79           	ld a,c
 440+ 94CB 90           	sub b
 441+ 94CC 32 EE 88     	ld (Columnas),a
 442+ 94CF 18 1B        	jr 4F
 443+ 94D1 79           2 ld a,c
 444+ 94D2 32 EE 88     	ld (Columnas),a
 445+ 94D5 18 15        	jr 4F
 446+ 94D7
 447+ 94D7              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 94D7
 449+ 94D7 3A BB 88     1 ld a,(Coordenada_X)
 450+ 94DA 81           	add c
 451+ 94DB 3D           	dec a
 452+ 94DC D6 1F        	sub $1f
 453+ 94DE 38 08        	jr c,3F
 454+ 94E0 47           	ld b,a
 455+ 94E1 79           	ld a,c
 456+ 94E2 90           	sub b
 457+ 94E3 32 EE 88     	ld (Columnas),a
 458+ 94E6 18 04        	jr 4F
 459+ 94E8 79           3 ld a,c
 460+ 94E9 32 EE 88     	ld (Columnas),a
 461+ 94EC D9           4 exx
 462+ 94ED 4F           	ld c,a
 463+ 94EE D9           	exx
 464+ 94EF C9            ret
 465+ 94F0
 466+ 94F0              ; --------------------------------------------------------------------------------------------------------------------
 467+ 94F0              ;
 468+ 94F0              ;   19/7/23
 469+ 94F0              ;
 470+ 94F0              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 94F0              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 94F0              ;
 473+ 94F0              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 94F0              ;			HL e IY Contienen (Puntero_objeto).
 475+ 94F0              ;
 476+ 94F0              ;	DESTRUYE: HL,B Y A.
 477+ 94F0
 478+ 94F0 3A C9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 94F3 FE 02        	cp 2
 480+ 94F5 38 18        	jr c,1F
 481+ 94F7 28 16        	jr z,1F
 482+ 94F9 E6 01        	and 1
 483+ 94FB 28 0D        	jr z,3F
 484+ 94FD
 485+ 94FD              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 94FD
 487+ 94FD CD 43 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9500
 489+ 9500 7D           9 ld a,l
 490+ 9501 E6 1F        	and $1f
 491+ 9503 28 2A        	jr z,7F
 492+ 9505 2B           	dec hl
 493+ 9506 10 F8        	djnz 9B
 494+ 9508 18 25        	jr 7F
 495+ 950A
 496+ 950A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 950A
 498+ 950A 2A B7 88     3 ld hl,(Posicion_actual)
 499+ 950D 18 20        	jr 7F
 500+ 950F
 501+ 950F 28 14        1 jr z,2F
 502+ 9511
 503+ 9511              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9511
 505+ 9511 CD 43 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9514
 507+ 9514 7D           4 ld a,l
 508+ 9515 E6 1F        	and $1f
 509+ 9517 28 03        	jr z,6F
 510+ 9519 2B           	dec hl
 511+ 951A 10 F8        	djnz 4B
 512+ 951C 06 0F        6 ld b,15
 513+ 951E CD A4 95     5 call PreviousScan
 514+ 9521 10 FB        	djnz 5B
 515+ 9523 18 0A        	jr 7F
 516+ 9525
 517+ 9525              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9525
 519+ 9525 CD 43 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9528 06 0F        	ld b,15
 521+ 952A CD A4 95     8 call PreviousScan
 522+ 952D 10 FB        	djnz 8B
 523+ 952F
 524+ 952F E5           7 push hl
 525+ 9530 DD E1        	pop ix
 526+ 9532
 527+ 9532 2A B9 88     	ld hl,(Puntero_objeto)
 528+ 9535 E5           	push hl
 529+ 9536 FD E1        	pop iy
 530+ 9538
 531+ 9538              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9538
 533+ 9538 3A E1 88     	ld a,(Ctrl_0)
 534+ 953B CB 77        	bit 6,a
 535+ 953D C8           	ret z
 536+ 953E
 537+ 953E              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 953E              ; _ entidad / Amadeus´.
 539+ 953E
 540+ 953E DD 22 A8 85  	ld (p.imp.amadeus),ix
 541+ 9542
 542+ 9542 C9           	ret
 543+ 9543
 544+ 9543              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9543              ;
 546+ 9543              ;	2/1/23
 547+ 9543              ;
 548+ 9543              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9543              ;
 550+ 9543              ;	Tras esta rutina tenemos:
 551+ 9543              ;
 552+ 9543              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9543              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9543              ;
 555+ 9543              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9543
 557+ 9543 2A B7 88     Operandos ld hl,(Posicion_actual)
 558+ 9546 3A EE 88     	ld a,(Columnas)
 559+ 9549 3D           	dec a
 560+ 954A 20 01        	jr nz,1F
 561+ 954C 3C           	inc a
 562+ 954D 47           1 ld b,a
 563+ 954E C9           	ret
 564+ 954F
 565+ 954F              ; --------------------------------------------------------------------------------------------------------------------
 566+ 954F              ;
 567+ 954F              ;	3/1/23
 568+ 954F              ;
 569+ 954F              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 954F              ;
 571+ 954F              ;	Destruye: A,B,HL y DE.
 572+ 954F
 573+ 954F              Define_rutina_de_impresion
 574+ 954F
 575+ 954F 3A B6 88     	ld a,(Columns)
 576+ 9552 47           	ld b,a
 577+ 9553 3A EE 88     	ld a,(Columnas)
 578+ 9556 B8           	cp b
 579+ 9557 20 0D        	jr nz,2f
 580+ 9559
 581+ 9559              ;	La entidad se imprime entera.
 582+ 9559
 583+ 9559 21 78 96     	ld hl, Indice_entidades_completas
 584+ 955C E6 01        	and 1
 585+ 955E 28 02        	jr z,1F
 586+ 9560
 587+ 9560 23           	inc hl
 588+ 9561 23           	inc hl
 589+ 9562
 590+ 9562 CD 16 8C     1 call Extrae_address
 591+ 9565 C9           	ret		;	ret
 592+ 9566
 593+ 9566              ;	La entidad no se imprime entera en pantalla.
 594+ 9566
 595+ 9566 3A C9 88     2 ld a,(Cuad_objeto)
 596+ 9569 E6 01        	and 1
 597+ 956B 28 17        	jr z,3F
 598+ 956D
 599+ 956D              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 956D
 601+ 956D 21 7C 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9570 3A B6 88     4 ld a,(Columns)
 603+ 9573 E6 01        	and 1
 604+ 9575 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9577
 606+ 9577 23           	inc hl
 607+ 9578 23           	inc hl
 608+ 9579
 609+ 9579 3A EE 88     	ld a,(Columnas)
 610+ 957C E6 01        	and 1
 611+ 957E 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9580
 613+ 9580 23           	inc hl
 614+ 9581 23           	inc hl
 615+ 9582
 616+ 9582 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9584
 618+ 9584 21 82 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9587 18 E7        	jr 4B
 620+ 9589
 621+ 9589              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9589              ;
 623+ 9589              ;	Prepara_draw
 624+ 9589              ;
 625+ 9589              ;	Es una rutina de carga.
 626+ 9589              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9589              ;
 628+ 9589              ;	FUNCIONAMIENTO:
 629+ 9589              ;
 630+ 9589              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9589              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9589              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9589              ;
 634+ 9589              ;	DESTRUYE:
 635+ 9589              ;
 636+ 9589              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9589
 638+ 9589 21 B5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 958C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 958D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 958E 4E           	ld c,(hl)
 642+ 958F 2A B7 88     	ld hl,(Posicion_actual)
 643+ 9592 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9594 C9           	ret
 645+ 9595
 646+ 9595              ;----------------------------------------------------------------------------------------------------------------
 647+ 9595              ;
 648+ 9595              ;	5/08/22
 649+ 9595              ;
 650+ 9595              ;   NextScan.
 651+ 9595              ;
 652+ 9595              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9595              ;
 654+ 9595              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9595              ;
 656+ 9595              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9595              ;
 658+ 9595              ;       DESTRUIDOS: AF y HL !!!
 659+ 9595              ;
 660+ 9595              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9595              ;
 662+ 9595
 663+ 9595 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9596 7C               ld a,h
 665+ 9597 E6 07            and 7
 666+ 9599 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 959A
 668+ 959A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 959B C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 959D 6F               ld l,a
 671+ 959E D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 959F
 673+ 959F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 95A0 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 95A2 67               ld h,a
 676+ 95A3 C9               ret
 677+ 95A4
 678+ 95A4              ;----------------------------------------------------------------------------------------------------------------
 679+ 95A4              ;
 680+ 95A4              ;	5/08/22
 681+ 95A4              ;
 682+ 95A4              ;   PreviousScan.
 683+ 95A4              ;
 684+ 95A4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 95A4              ;
 686+ 95A4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 95A4              ;
 688+ 95A4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 95A4              ;
 690+ 95A4              ;       DESTRUIDOS: AF y HL !!!
 691+ 95A4              ;
 692+ 95A4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 95A4              ;
 694+ 95A4
 695+ 95A4 7C           PreviousScan ld a,h
 696+ 95A5 25               dec h               ; Dec H.
 697+ 95A6 E6 07            and 7
 698+ 95A8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 95A9
 700+ 95A9 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 95AA D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 95AC 6F               ld l,a
 703+ 95AD D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 95AE
 705+ 95AE 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 95AF C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 95B1 67               ld h,a
 708+ 95B2 C9               ret
 709+ 95B3
 710+ 95B3              ; -----------------------------------------------------------------------------------
 711+ 95B3              ;
 712+ 95B3              ;	31/7/23
 713+ 95B3              ;
 714+ 95B3              ;	Rutina principal de pintado de entidades.
 715+ 95B3              ;	Extrae la foto del frame, (entidades).
 716+ 95B3
 717+ 95B3              Extrae_foto_entidades
 718+ 95B3
 719+ 95B3 21 01 70     	ld hl,Album_de_fotos+1
 720+ 95B6 7E           	ld a,(hl)
 721+ 95B7 A7           	and a
 722+ 95B8 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 95B9
 724+ 95B9              ;	No hay datos, (entidades para pintar en este frame).
 725+ 95B9
 726+ 95B9 3A 00 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 95BC A7           	and a
 728+ 95BD C8           	ret z
 729+ 95BE
 730+ 95BE              ; -----------------------------------
 731+ 95BE
 732+ 95BE ED 73 05 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 95C2 31 00 70     	ld sp,Album_de_fotos
 734+ 95C5
 735+ 95C5 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 95C7 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 95C8 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 95C9
 739+ 95C9 ED 73 07 89  	ld (Stack_2),sp
 740+ 95CD ED 7B 05 89  	ld sp,(Stack)
 741+ 95D1
 742+ 95D1              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 95D1
 744+ 95D1 3E CD        	ld a,$cd
 745+ 95D3 32 DB 95     	ld (Imprime),a
 746+ 95D6 EB           	ex de,hl
 747+ 95D7 22 DC 95     	ld (Imprime+1),hl
 748+ 95DA EB           	ex de,hl
 749+ 95DB
 750+ 95DB              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 95DB
 752+ 95DB 00 00 00     Imprime db 0,0,0
 753+ 95DE
 754+ 95DE ED 73 05 89  	ld (Stack),sp
 755+ 95E2
 756+ 95E2 3A 00 89     	ld a,(Numero_de_malotes)
 757+ 95E5 3D           	dec a
 758+ 95E6 28 09        	jr z,1F
 759+ 95E8 32 00 89      	ld (Numero_de_malotes),a
 760+ 95EB
 761+ 95EB ED 7B 07 89  	ld sp,(Stack_2)
 762+ 95EF 18 D4        	jr 2B
 763+ 95F1
 764+ 95F1 AF           1 xor a
 765+ 95F2 32 07 89     	ld (Stack_2),a
 766+ 95F5
 767+ 95F5 C9           	ret
 768+ 95F6
 769+ 95F6              ; -----------------------------------------------------------------------------------
 770+ 95F6              ;
 771+ 95F6              ;	28/2/23
 772+ 95F6              ;
 773+ 95F6              ;	Pinta los disparos generados.
 774+ 95F6
 775+ 95F6              Extrae_foto_disparos
 776+ 95F6
 777+ 95F6 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 95F9 7E               ld a,(hl)
 779+ 95FA A7               and a
 780+ 95FB C8               ret z
 781+ 95FC
 782+ 95FC 3A 14 89     	ld a,(Numero_de_disparotes)
 783+ 95FF A7           	and a
 784+ 9600 C8           	ret z
 785+ 9601 ED 73 05 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9605 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 9608
 788+ 9608 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 960A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 960B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 960C
 792+ 960C ED 73 07 89  	ld (Stack_2),sp
 793+ 9610 ED 7B 05 89  	ld sp,(Stack)
 794+ 9614
 795+ 9614              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 9614
 797+ 9614 3E CD        	ld a,$cd
 798+ 9616 32 1E 96     	ld (Imprime2),a
 799+ 9619 EB           	ex de,hl
 800+ 961A 22 1F 96     	ld (Imprime2+1),hl
 801+ 961D EB           	ex de,hl
 802+ 961E
 803+ 961E              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 961E
 805+ 961E 00 00 00     Imprime2 db 0,0,0
 806+ 9621
 807+ 9621 3A 14 89     	ld a,(Numero_de_disparotes)
 808+ 9624 3D           	dec a
 809+ 9625 28 09        	jr z,1F
 810+ 9627 32 14 89      	ld (Numero_de_disparotes),a
 811+ 962A
 812+ 962A ED 7B 07 89  	ld sp,(Stack_2)
 813+ 962E 18 D8        	jr 2B
 814+ 9630
 815+ 9630 AF           1 xor a
 816+ 9631 32 07 89     	ld (Stack_2),a
 817+ 9634 C9           	ret
 818+ 9635
 819+ 9635              ; -----------------------------------------------------------------------------------
 820+ 9635              ;
 821+ 9635              ;	4/9/23
 822+ 9635              ;
 823+ 9635              ;	Rutina principal de pintado de Amadeus.
 824+ 9635              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 9635
 826+ 9635 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 9638 7E           	ld a,(hl)
 828+ 9639 A7           	and a
 829+ 963A C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 963B
 831+ 963B 3A 00 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 963E A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 963F C8           	ret z
 834+ 9640
 835+ 9640              ; -----------------------------------
 836+ 9640
 837+ 9640 ED 73 05 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9644 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 9647
 840+ 9647 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 9649 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 964A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 964B
 844+ 964B ED 73 07 89  	ld (Stack_2),sp
 845+ 964F ED 7B 05 89  	ld sp,(Stack)
 846+ 9653
 847+ 9653              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9653
 849+ 9653 3E CD        	ld a,$cd
 850+ 9655 32 5D 96     	ld (Imprime_Amadeus),a
 851+ 9658 EB           	ex de,hl
 852+ 9659 22 5E 96     	ld (Imprime_Amadeus+1),hl
 853+ 965C EB           	ex de,hl
 854+ 965D
 855+ 965D              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 965D
 857+ 965D 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9660
 859+ 9660 ED 73 05 89  	ld (Stack),sp
 860+ 9664
 861+ 9664 3A 00 89     	ld a,(Numero_de_malotes)
 862+ 9667 3D           	dec a
 863+ 9668 28 09        	jr z,1F
 864+ 966A 32 00 89      	ld (Numero_de_malotes),a
 865+ 966D
 866+ 966D ED 7B 07 89  	ld sp,(Stack_2)
 867+ 9671 18 D4        	jr 2B
 868+ 9673
 869+ 9673 AF           1 xor a
 870+ 9674 32 07 89     	ld (Stack_2),a
 871+ 9677
 872+ 9677 C9           	ret
# file closed: Draw_XOR.asm
1525  9678              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9678              ;   índices de Rutinas de impresión.
   2+ 9678
   3+ 9678 88 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 967A B5 96            defw Pinta_Amadeus_3x2
   5+ 967C
   6+ 967C 0B 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 967E AB 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9680 5F 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9682
  10+ 9682 35 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9684 39 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9686 ED 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9688
  14+ 9688
  15+ 9688              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9688              ;
  17+ 9688              ;   12/12/22
  18+ 9688              ;
  19+ 9688              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9688              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9688              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9688              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9688              ;
  24+ 9688              ;   Modifica: DE y HL.
  25+ 9688
  26+ 9688 ED 73 05 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 968C FD F9        	ld sp,iy
  28+ 968E 06 10            ld b,16
  29+ 9690 D1           1 pop de
  30+ 9691 7B               ld a,e
  31+ 9692 AE               xor (hl)
  32+ 9693 77           	ld (hl),a
  33+ 9694 23           	inc hl
  34+ 9695 7A               ld a,d
  35+ 9696 AE               xor (hl)
  36+ 9697 77           	ld (hl),a
  37+ 9698 2B           	dec hl
  38+ 9699 24           	inc h
  39+ 969A 7C               ld a,h
  40+ 969B E6 07            and 7
  41+ 969D 20 0A            jr nz,2F
  42+ 969F 7D               ld a,l
  43+ 96A0 C6 20            add a,$20
  44+ 96A2 6F               ld l,a
  45+ 96A3 38 04            jr c,2F
  46+ 96A5 7C               ld a,h
  47+ 96A6 D6 08            sub 8
  48+ 96A8 67               ld h,a
  49+ 96A9 7C           2 ld a,h
  50+ 96AA FE 58            cp $58
  51+ 96AC 28 02            jr z,3F
  52+ 96AE 10 E0            djnz 1B
  53+ 96B0 ED 7B 05 89  3 ld sp,(Stack)
  54+ 96B4 C9           	ret
  55+ 96B5
  56+ 96B5 ED 73 05 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96B9 FD F9        	ld sp,iy
  58+ 96BB 06 08            ld b,8
  59+ 96BD D1           1 pop de
  60+ 96BE 7B               ld a,e
  61+ 96BF AE               xor (hl)
  62+ 96C0 77           	ld (hl),a
  63+ 96C1 23           	inc hl
  64+ 96C2 7A               ld a,d
  65+ 96C3 AE               xor (hl)
  66+ 96C4 77           	ld (hl),a
  67+ 96C5 23           	inc hl
  68+ 96C6 D1           	pop de
  69+ 96C7 7B               ld a,e
  70+ 96C8 AE               xor (hl)
  71+ 96C9 77           	ld (hl),a
  72+ 96CA 2B           	dec hl
  73+ 96CB 2B           	dec hl
  74+ 96CC 24           	inc h
  75+ 96CD 7C               ld a,h
  76+ 96CE E6 07            and 7
  77+ 96D0 20 0A            jr nz,2F
  78+ 96D2 7D               ld a,l
  79+ 96D3 C6 20            add a,$20
  80+ 96D5 6F               ld l,a
  81+ 96D6 38 04            jr c,2F
  82+ 96D8 7C               ld a,h
  83+ 96D9 D6 08            sub 8
  84+ 96DB 67               ld h,a
  85+ 96DC 7C           2 ld a,h
  86+ 96DD FE 58            cp $58
  87+ 96DF 28 25            jr z,4F
  88+ 96E1 7A               ld a,d
  89+ 96E2 AE               xor (hl)
  90+ 96E3 77               ld (hl),a
  91+ 96E4 D1           	pop de
  92+ 96E5 23           	inc hl
  93+ 96E6 7B               ld a,e
  94+ 96E7 AE               xor (hl)
  95+ 96E8 77           	ld (hl),a
  96+ 96E9 23           	inc hl
  97+ 96EA 7A               ld a,d
  98+ 96EB AE               xor (hl)
  99+ 96EC 77           	ld (hl),a
 100+ 96ED 2B           	dec hl
 101+ 96EE 2B           	dec hl
 102+ 96EF 24           	inc h
 103+ 96F0 7C               ld a,h
 104+ 96F1 E6 07            and 7
 105+ 96F3 20 0A            jr nz,3F
 106+ 96F5 7D               ld a,l
 107+ 96F6 C6 20            add a,$20
 108+ 96F8 6F               ld l,a
 109+ 96F9 38 04            jr c,3F
 110+ 96FB 7C               ld a,h
 111+ 96FC D6 08            sub 8
 112+ 96FE 67               ld h,a
 113+ 96FF 7C           3 ld a,h
 114+ 9700 FE 58            cp $58
 115+ 9702 28 02            jr z,4F
 116+ 9704 10 B7            djnz 1B
 117+ 9706 ED 7B 05 89  4 ld sp,(Stack)
 118+ 970A C9           	ret
 119+ 970B
 120+ 970B              ; ---------------------------------------------------
 121+ 970B
 122+ 970B ED 73 05 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 970F FD F9        	ld sp,iy
 124+ 9711
 125+ 9711              ; >>>
 126+ 9711
 127+ 9711 06 10            ld b,16
 128+ 9713 D1           1 pop de
 129+ 9714 7A           	ld a,d
 130+ 9715 AE           	xor (hl)
 131+ 9716 77           	ld (hl),a
 132+ 9717 24           	inc h
 133+ 9718 7C               ld a,h
 134+ 9719 E6 07            and 7
 135+ 971B 20 0C            jr nz,2F
 136+ 971D 7D               ld a,l
 137+ 971E C6 20            add a,$20
 138+ 9720 6F               ld l,a
 139+ 9721 38 06            jr c,2F
 140+ 9723 7C               ld a,h
 141+ 9724 D6 08            sub 8
 142+ 9726 67               ld h,a
 143+ 9727 18 00            jr 2F
 144+ 9729 7C           2 ld a,h
 145+ 972A FE 58            cp $58
 146+ 972C 28 02            jr z,3F
 147+ 972E 10 E3            djnz 1B
 148+ 9730 ED 7B 05 89  3 ld sp,(Stack)
 149+ 9734 C9           	ret
 150+ 9735
 151+ 9735 ED 73 05 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9739 FD F9        	ld sp,iy
 153+ 973B
 154+ 973B              ; >>>
 155+ 973B
 156+ 973B 06 10            ld b,16
 157+ 973D D1           1 pop de
 158+ 973E 7B           	ld a,e
 159+ 973F AE           	xor (hl)
 160+ 9740 77           	ld (hl),a
 161+ 9741 24           	inc h
 162+ 9742 7C               ld a,h
 163+ 9743 E6 07            and 7
 164+ 9745 20 0C            jr nz,2F
 165+ 9747 7D               ld a,l
 166+ 9748 C6 20            add a,$20
 167+ 974A 6F               ld l,a
 168+ 974B 38 06            jr c,2F
 169+ 974D 7C               ld a,h
 170+ 974E D6 08            sub 8
 171+ 9750 67               ld h,a
 172+ 9751 18 00            jr 2F
 173+ 9753 7C           2 ld a,h
 174+ 9754 FE 58            cp $58
 175+ 9756 28 02            jr z,3F
 176+ 9758 10 E3            djnz 1B
 177+ 975A ED 7B 05 89  3 ld sp,(Stack)
 178+ 975E C9           	ret
 179+ 975F
 180+ 975F              ; ---------------------------------------------------
 181+ 975F
 182+ 975F ED 73 05 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9763 FD F9        	ld sp,iy
 184+ 9765 06 08            ld b,8
 185+ 9767 D1           1 pop de
 186+ 9768 7A           	ld a,d
 187+ 9769 AE           	xor (hl)
 188+ 976A 77           	ld (hl),a
 189+ 976B 23           	inc hl
 190+ 976C D1           	pop de
 191+ 976D 7B           	ld a,e
 192+ 976E AE           	xor (hl)
 193+ 976F 77           	ld (hl),a
 194+ 9770 2B           	dec hl
 195+ 9771 24            	inc h
 196+ 9772 7C               ld a,h
 197+ 9773 E6 07            and 7
 198+ 9775 20 0A            jr nz,2F
 199+ 9777 7D               ld a,l
 200+ 9778 C6 20            add a,$20
 201+ 977A 6F               ld l,a
 202+ 977B 38 04            jr c,2F
 203+ 977D 7C               ld a,h
 204+ 977E D6 08            sub 8
 205+ 9780 67               ld h,a
 206+ 9781 7C           2 ld a,h
 207+ 9782 FE 58            cp $58
 208+ 9784 28 20            jr z,4F
 209+ 9786 D1               pop de
 210+ 9787 7B           	ld a,e
 211+ 9788 AE           	xor (hl)
 212+ 9789 77           	ld (hl),a
 213+ 978A 23           	inc hl
 214+ 978B 7A           	ld a,d
 215+ 978C AE           	xor (hl)
 216+ 978D 77           	ld (hl),a
 217+ 978E 2B           	dec hl
 218+ 978F 24           	inc h
 219+ 9790 7C               ld a,h
 220+ 9791 E6 07            and 7
 221+ 9793 20 0A            jr nz,3F
 222+ 9795 7D               ld a,l
 223+ 9796 C6 20            add a,$20
 224+ 9798 6F               ld l,a
 225+ 9799 38 04            jr c,3F
 226+ 979B 7C               ld a,h
 227+ 979C D6 08            sub 8
 228+ 979E 67               ld h,a
 229+ 979F 7C           3 ld a,h
 230+ 97A0 FE 58            cp $58
 231+ 97A2 28 02            jr z,4F
 232+ 97A4 10 C1            djnz 1B
 233+ 97A6 ED 7B 05 89  4 ld sp,(Stack)
 234+ 97AA C9           	ret
 235+ 97AB
 236+ 97AB ED 73 05 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97AF FD F9        	ld sp,iy
 238+ 97B1 06 08            ld b,8
 239+ 97B3 D1           1 pop de
 240+ 97B4 D1           	pop de
 241+ 97B5 7B           	ld a,e
 242+ 97B6 AE           	xor (hl)
 243+ 97B7 77           	ld (hl),a
 244+ 97B8 24            	inc h
 245+ 97B9 7C               ld a,h
 246+ 97BA E6 07            and 7
 247+ 97BC 20 0A            jr nz,2F
 248+ 97BE 7D               ld a,l
 249+ 97BF C6 20            add a,$20
 250+ 97C1 6F               ld l,a
 251+ 97C2 38 04            jr c,2F
 252+ 97C4 7C               ld a,h
 253+ 97C5 D6 08            sub 8
 254+ 97C7 67               ld h,a
 255+ 97C8 7C           2 ld a,h
 256+ 97C9 FE 58            cp $58
 257+ 97CB 28 1B            jr z,4F
 258+ 97CD D1               pop de
 259+ 97CE 7A           	ld a,d
 260+ 97CF AE           	xor (hl)
 261+ 97D0 77           	ld (hl),a
 262+ 97D1 24           	inc h
 263+ 97D2 7C               ld a,h
 264+ 97D3 E6 07            and 7
 265+ 97D5 20 0A            jr nz,3F
 266+ 97D7 7D               ld a,l
 267+ 97D8 C6 20            add a,$20
 268+ 97DA 6F               ld l,a
 269+ 97DB 38 04            jr c,3F
 270+ 97DD 7C               ld a,h
 271+ 97DE D6 08            sub 8
 272+ 97E0 67               ld h,a
 273+ 97E1 7C           3 ld a,h
 274+ 97E2 FE 58            cp $58
 275+ 97E4 28 02            jr z,4F
 276+ 97E6 10 CB            djnz 1B
 277+ 97E8 ED 7B 05 89  4 ld sp,(Stack)
 278+ 97EC C9           	ret
 279+ 97ED
 280+ 97ED ED 73 05 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97F1 FD F9        	ld sp,iy
 282+ 97F3 06 08            ld b,8
 283+ 97F5 D1           1 pop de
 284+ 97F6 7B           	ld a,e
 285+ 97F7 AE           	xor (hl)
 286+ 97F8 77           	ld (hl),a
 287+ 97F9 23           	inc hl
 288+ 97FA 7A           	ld a,d
 289+ 97FB AE           	xor (hl)
 290+ 97FC 77           	ld (hl),a
 291+ 97FD 2B           	dec hl
 292+ 97FE 24             	inc h
 293+ 97FF 7C               ld a,h
 294+ 9800 E6 07            and 7
 295+ 9802 20 0A            jr nz,2F
 296+ 9804 7D               ld a,l
 297+ 9805 C6 20            add a,$20
 298+ 9807 6F               ld l,a
 299+ 9808 38 04            jr c,2F
 300+ 980A 7C               ld a,h
 301+ 980B D6 08            sub 8
 302+ 980D 67               ld h,a
 303+ 980E 7C           2 ld a,h
 304+ 980F FE 58            cp $58
 305+ 9811 28 21            jr z,4F
 306+ 9813 D1               pop de
 307+ 9814 7A           	ld a,d
 308+ 9815 AE           	xor (hl)
 309+ 9816 77           	ld (hl),a
 310+ 9817 23           	inc hl
 311+ 9818 D1               pop de
 312+ 9819 7B           	ld a,e
 313+ 981A AE           	xor (hl)
 314+ 981B 77           	ld (hl),a
 315+ 981C 2B           	dec hl
 316+ 981D 24           	inc h
 317+ 981E 7C               ld a,h
 318+ 981F E6 07            and 7
 319+ 9821 20 0A            jr nz,3F
 320+ 9823 7D               ld a,l
 321+ 9824 C6 20            add a,$20
 322+ 9826 6F               ld l,a
 323+ 9827 38 04            jr c,3F
 324+ 9829 7C               ld a,h
 325+ 982A D6 08            sub 8
 326+ 982C 67               ld h,a
 327+ 982D 7C           3 ld a,h
 328+ 982E FE 58            cp $58
 329+ 9830 28 02            jr z,4F
 330+ 9832 10 C1            djnz 1B
 331+ 9834 ED 7B 05 89  4 ld sp,(Stack)
 332+ 9838 C9           	ret
 333+ 9839
 334+ 9839 ED 73 05 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 983D FD F9        	ld sp,iy
 336+ 983F 06 08            ld b,8
 337+ 9841 D1           1 pop de
 338+ 9842 7B           	ld a,e
 339+ 9843 AE           	xor (hl)
 340+ 9844 77           	ld (hl),a
 341+ 9845 24            	inc h
 342+ 9846 7C               ld a,h
 343+ 9847 E6 07            and 7
 344+ 9849 20 0A            jr nz,2F
 345+ 984B 7D               ld a,l
 346+ 984C C6 20            add a,$20
 347+ 984E 6F               ld l,a
 348+ 984F 38 04            jr c,2F
 349+ 9851 7C               ld a,h
 350+ 9852 D6 08            sub 8
 351+ 9854 67               ld h,a
 352+ 9855 7C           2 ld a,h
 353+ 9856 FE 58            cp $58
 354+ 9858 28 1C            jr z,4F
 355+ 985A D1               pop de
 356+ 985B 7A           	ld a,d
 357+ 985C AE           	xor (hl)
 358+ 985D 77           	ld (hl),a
 359+ 985E 24           	inc h
 360+ 985F 7C               ld a,h
 361+ 9860 E6 07            and 7
 362+ 9862 20 0A            jr nz,3F
 363+ 9864 7D               ld a,l
 364+ 9865 C6 20            add a,$20
 365+ 9867 6F               ld l,a
 366+ 9868 38 04            jr c,3F
 367+ 986A 7C               ld a,h
 368+ 986B D6 08            sub 8
 369+ 986D 67               ld h,a
 370+ 986E 7C           3 ld a,h
 371+ 986F FE 58            cp $58
 372+ 9871 28 03            jr z,4F
 373+ 9873 D1               pop de
 374+ 9874 10 CB            djnz 1B
 375+ 9876 ED 7B 05 89  4 ld sp,(Stack)
 376+ 987A C9           	ret
 377+ 987B
 378+ 987B              ; ---------------------------------------------------
 379+ 987B              ;
 380+ 987B              ;   27/02/23
 381+ 987B              ;
 382+ 987B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 987B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 987B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 987B
 386+ 987B ED 73 05 89  Pinta_Disparo ld (Stack),sp
 387+ 987F FD F9            ld sp,iy
 388+ 9881 06 03            ld b,3
 389+ 9883 D1           1 pop de
 390+ 9884 7B               ld a,e
 391+ 9885 AE               xor (hl)
 392+ 9886 77               ld (hl),a
 393+ 9887 23               inc hl
 394+ 9888 7A               ld a,d
 395+ 9889 AE               xor (hl)
 396+ 988A 77               ld (hl),a
 397+ 988B 2B               dec hl
 398+ 988C
 399+ 988C 24               inc h
 400+ 988D 7C               ld a,h
 401+ 988E E6 07            and 7
 402+ 9890 20 0A            jr nz,2F
 403+ 9892 7D               ld a,l
 404+ 9893 C6 20            add a,$20
 405+ 9895 6F               ld l,a
 406+ 9896 38 04            jr c,2F
 407+ 9898 7C               ld a,h
 408+ 9899 D6 08            sub 8
 409+ 989B 67               ld h,a
 410+ 989C 7C           2 ld a,h
 411+ 989D FE 58            cp $58
 412+ 989F 28 02            jr z,3F
 413+ 98A1
 414+ 98A1 10 E0            djnz 1B
 415+ 98A3 ED 7B 05 89  3 ld sp,(Stack)
 416+ 98A7 C9               ret
 417+ 98A8
# file closed: Rutinas_de_impresion_sprites.asm
1526  98A8              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98A8              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98A8              ;
   3+ 98A8              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98A8              ;
   5+ 98A8              ; *****************************************************************************************************************************************************************************************
   6+ 98A8              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98A8
   8+ 98A8 7C           calcula_tercio ld a,h
   9+ 98A9 E6 18        	and $18
  10+ 98AB CB 2F        	sra a
  11+ 98AD CB 2F        	sra a
  12+ 98AF CB 2F        	sra a
  13+ 98B1 C9           	ret
  14+ 98B2
# file closed: calcula_tercio.asm
1527  98B2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98B2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98B2              ;
   3+ 98B2              ;
   4+ 98B2              ;	CLS.
   5+ 98B2              ;
   6+ 98B2              ;	Limpia la pantalla y define sus atributos.
   7+ 98B2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98B2              ;
   9+ 98B2              ;	COLORES: 0 ..... NEGRO
  10+ 98B2              ;    		 1 ..... AZUL
  11+ 98B2              ; 			 2 ..... ROJO
  12+ 98B2              ;			 3 ..... MAGENTA
  13+ 98B2              ; 			 4 ..... VERDE
  14+ 98B2              ; 			 5 ..... CIAN
  15+ 98B2              ;			 6 ..... AMARILLO
  16+ 98B2              ; 			 7 ..... BLANCO
  17+ 98B2              ;
  18+ 98B2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98B2              ;
  20+ 98B2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98B2
  22+ 98B2
  23+ 98B2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98B5 11 01 40     	LD DE,$4001
  25+ 98B8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98BB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98BD ED B0        	LDIR
  28+ 98BF 01 FF 02     	LD BC,767
  29+ 98C2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98C3 ED B0        	LDIR
  31+ 98C5 C9           	ret
  32+ 98C6
# file closed: Cls.asm
1528  98C6              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98C6              ; ******************************************************************************************************************************************************************************************
   2+ 98C6              ;
   3+ 98C6              ;   20/05/23
   4+ 98C6              ;
   5+ 98C6              ;	Recompone_posicion_inicio
   6+ 98C6              ;
   7+ 98C6              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98C6              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98C6              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98C6              ;	_ a una u otra rutina.
  11+ 98C6
  12+ 98C6              Recompone_posicion_inicio
  13+ 98C6
  14+ 98C6 2A C7 88     	ld hl,(Posicion_inicio)
  15+ 98C9 7D           	ld a,l
  16+ 98CA E6 1F        	and $1f
  17+ 98CC 28 16        	jr z,1F
  18+ 98CE
  19+ 98CE FE 1F        	cp $1f
  20+ 98D0 28 0D        	jr z,3F
  21+ 98D2
  22+ 98D2 21 F2 88     	ld hl,Ctrl_2
  23+ 98D5 CB C6        	set 0,(hl)
  24+ 98D7 2A B9 88     	ld hl,(Puntero_objeto)
  25+ 98DA 22 F5 88     	ld (Repone_puntero_objeto),hl
  26+ 98DD 18 08        	jr 2F
  27+ 98DF
  28+ 98DF CD 80 9A     3 call Mov_left
  29+ 98E2 18 03        	jr 2F
  30+ 98E4
  31+ 98E4 CD 62 99     1 call Mov_right
  32+ 98E7 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98EA 22 B9 88     	ld (Puntero_objeto),hl
  34+ 98ED C9           	ret
  35+ 98EE
  36+ 98EE              ; ******************************************************************************************************************************************************************************************
  37+ 98EE              ;
  38+ 98EE              ;   27/05/23
  39+ 98EE              ;
  40+ 98EE              ;	Mov_down
  41+ 98EE              ;
  42+ 98EE              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98EE              ;
  44+ 98EE              ;
  45+ 98EE              Mov_down
  46+ 98EE
  47+ 98EE CD 50 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98F1              ;																	; _ repone (Puntero_objeto).
  49+ 98F1 21 E1 88     	ld hl,Ctrl_0
  50+ 98F4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98F6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98F6              ; 																	; _ en el caso de que no lo haya.
  53+ 98F6 3A CD 88     	ld a,(Vel_down)
  54+ 98F9 47           	ld b,a
  55+ 98FA 2A B7 88         ld hl,(Posicion_actual)
  56+ 98FD CD A8 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9900 E6 02        	and 2
  58+ 9902 28 0F        	jr z,1F
  59+ 9904
  60+ 9904              ; Nos encontramos en el último tercio de pantalla.
  61+ 9904              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9904
  63+ 9904 7C           	ld a,h
  64+ 9905 FE 57        	cp $57
  65+ 9907 20 0A        	jr nz,1F
  66+ 9909
  67+ 9909 7D           	ld a,l
  68+ 990A C6 20        	add $20
  69+ 990C 30 05        	jr nc,1F
  70+ 990E
  71+ 990E              ; ------------------------------
  72+ 990E              ;	call Reaparece_arriba
  73+ 990E CD 0D 9C     	call Reinicio
  74+ 9911              ; ------------------------------
  75+ 9911
  76+ 9911 18 08        	jr 3F
  77+ 9913 CD 95 95     1 call NextScan
  78+ 9916 22 B7 88     	ld (Posicion_actual),hl
  79+ 9919 10 E2            djnz 2B
  80+ 991B CD 33 9C     3 call Genera_coordenadas
  81+ 991E C9           	ret
  82+ 991F
  83+ 991F              ; ******************************************************************************************************************************************************************************************
  84+ 991F              ;
  85+ 991F              ;   27/05/23
  86+ 991F              ;
  87+ 991F              ;	Mov_up
  88+ 991F              ;
  89+ 991F              ; 	Mueve el Sprite hacia arriba.
  90+ 991F              ;
  91+ 991F              ;
  92+ 991F              Mov_up
  93+ 991F
  94+ 991F CD 50 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9922              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9922 21 E1 88     	ld hl,Ctrl_0
  97+ 9925 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9927              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9927              ; 																		; _ en el caso de que no lo haya.
 100+ 9927 3A CC 88     	ld a,(Vel_up)
 101+ 992A 47           	ld b,a
 102+ 992B 2A B7 88     	ld hl,(Posicion_actual)
 103+ 992E CD A8 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9931 A7           	and a
 105+ 9932 20 10        	jr nz,1F
 106+ 9934
 107+ 9934              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9934              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9934
 110+ 9934 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9935 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9937 20 0B            jr nz,1F
 113+ 9939 7D               ld a,l
 114+ 993A D6 20            sub $20
 115+ 993C 30 06            jr nc,1F
 116+ 993E 25               dec h
 117+ 993F
 118+ 993F              ; -----------------------------
 119+ 993F CD EE 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9942              ;	call Reinicio
 121+ 9942              ; -----------------------------
 122+ 9942
 123+ 9942 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9944 CD A4 95     1 call PreviousScan
 125+ 9947 22 B7 88     	ld (Posicion_actual),hl
 126+ 994A 10 E2            djnz 3B
 127+ 994C CD 33 9C     2 call Genera_coordenadas
 128+ 994F C9           	ret
 129+ 9950
 130+ 9950              ; -----------------------------
 131+ 9950              ;
 132+ 9950              ;	27/5/23
 133+ 9950              ;
 134+ 9950              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9950              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9950              ;
 137+ 9950              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9950              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9950              ;
 140+ 9950              ;	Modifica: A y (Puntero_objeto).
 141+ 9950
 142+ 9950 3A F2 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9953 CB 47        	bit 0,a
 144+ 9955 C8           	ret z
 145+ 9956 CB 87        	res 0,a
 146+ 9958 32 F2 88     	ld (Ctrl_2),a
 147+ 995B 2A F5 88     	ld hl,(Repone_puntero_objeto)
 148+ 995E 22 B9 88     	ld (Puntero_objeto),hl
 149+ 9961 C9           	ret
 150+ 9962
 151+ 9962              ; ******************************************************************************************************************************************************************************************
 152+ 9962              ;
 153+ 9962              ;	19/10/22
 154+ 9962              ;
 155+ 9962              ;	Mov_right.
 156+ 9962              ;
 157+ 9962              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9962              ;
 159+ 9962
 160+ 9962 21 E1 88     Mov_right ld hl,Ctrl_0
 161+ 9965 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9967              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9967              ; 																	; _ en el caso de que no lo haya.
 164+ 9967 3A E1 88     	ld a,(Ctrl_0)
 165+ 996A CB 77        	bit 6,a
 166+ 996C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 996E
 168+ 996E CD 9C 9B     	call Stop_Amadeus_right
 169+ 9971 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9972 18 4D        	jr 8F
 171+ 9974
 172+ 9974 3A BB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9977 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9979 20 46        	jr nz,8F
 175+ 997B
 176+ 997B 3A BD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 997E A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 997F 28 40        	jr z,8F
 179+ 9981
 180+ 9981              ; ---------- ---------- ----------
 181+ 9981              ;
 182+ 9981              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9981
 184+ 9981 3A CB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9984 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9986 28 11        	jr z,1F
 187+ 9988 38 06        	jr c,6F
 188+ 998A FE 04        	cp 4
 189+ 998C 28 14        	jr z,7F
 190+ 998E 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9990
 192+ 9990              ; ---------- ---------- ----------
 193+ 9990              ;
 194+ 9990              ; Perfiles de velocidad
 195+ 9990              ;
 196+ 9990
 197+ 9990 3A BD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9993 FE FE        	cp $fe
 199+ 9995 20 2A        	jr nz,8F
 200+ 9997 18 10        	jr 3F
 201+ 9999 3A BD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 999C FE FD        	cp $fd
 203+ 999E 20 21        	jr nz,8F
 204+ 99A0 18 07        	jr 3F
 205+ 99A2 3A BD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 99A5 FE FB        	cp $fb
 207+ 99A7 20 18        	jr nz,8F
 208+ 99A9
 209+ 99A9              ; ---------- ---------- ----------
 210+ 99A9
 211+ 99A9              3
 212+ 99A9 CD DC 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 99AC              ;	call Reinicio
 214+ 99AC
 215+ 99AC              ; ---------- ---------- ----------
 216+ 99AC              ;
 217+ 99AC              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 99AC
 219+ 99AC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 99AE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 99AF CD C8 99     	call DESPLZ_DER
 222+ 99B2 C1           	pop bc
 223+ 99B3 10 F9        	djnz 5B
 224+ 99B5 2A B7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 99B8 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 99B9 22 B7 88     	ld (Posicion_actual),hl
 227+ 99BC CD 33 9C     	call Genera_coordenadas
 228+ 99BF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 99C1
 230+ 99C1              ; ---------- ---------- ----------
 231+ 99C1
 232+ 99C1 2A B7 88     8 ld hl,(Posicion_actual)
 233+ 99C4 CD C8 99     	call DESPLZ_DER
 234+ 99C7 C9           2 ret
 235+ 99C8
 236+ 99C8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 99C8              ;
 238+ 99C8              ;	22/9/22
 239+ 99C8              ;
 240+ 99C8
 241+ 99C8 CD D7 99     DESPLZ_DER call Desplaza_derecha
 242+ 99CB CD 23 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 99CE CD 4C 9A         call Ciclo_completo
 244+ 99D1 21 E1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 99D4 CB FE        	set 7,(hl)
 246+ 99D6 C9           	ret
 247+ 99D7
 248+ 99D7              ; ******************************************************************************************************************************************************************************************
 249+ 99D7              ;	15/02/23
 250+ 99D7              ;
 251+ 99D7
 252+ 99D7 3A CB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 99DA 47           	ld b,a
 254+ 99DB 2A C3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 99DE 23           1 inc hl
 256+ 99DF 23           	inc hl
 257+ 99E0 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 99E2 22 C3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 99E5 CD 16 8C     	call Extrae_address
 260+ 99E8 22 B9 88     	ld (Puntero_objeto),hl
 261+ 99EB
 262+ 99EB              ; Modifica (Puntero_DESPLZ_izq).
 263+ 99EB
 264+ 99EB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 99EB              ; Cuántos movimientos hemos hecho ??
 266+ 99EB              ; DE contiene (Puntero_DESPLZ_der).
 267+ 99EB
 268+ 99EB 2A BF 88     7 ld hl,(Indice_Sprite_der)
 269+ 99EE EB           	ex de,hl
 270+ 99EF A7           	and a
 271+ 99F0 ED 52        	sbc hl,de
 272+ 99F2 CB 3D        	srl l
 273+ 99F4 3E 08        6 ld a,8
 274+ 99F6 95           	sub l
 275+ 99F7 30 1E        	jr nc,3F
 276+ 99F9
 277+ 99F9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 99F9              ; B="0".
 279+ 99F9
 280+ 99F9 04           4 inc b
 281+ 99FA 3C           	inc a
 282+ 99FB 20 FC        	jr nz,4B
 283+ 99FD 78           	ld a,b
 284+ 99FE 08           	ex af,af
 285+ 99FF 2A BF 88     	ld hl,(Indice_Sprite_der)
 286+ 9A02 23           5 inc hl
 287+ 9A03 23           	inc hl
 288+ 9A04 10 FC        	djnz 5B
 289+ 9A06 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A09 CD 16 8C     	call Extrae_address
 291+ 9A0C 22 B9 88     	ld (Puntero_objeto),hl
 292+ 9A0F
 293+ 9A0F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A0F              ; _(Posicion_actual).
 295+ 9A0F
 296+ 9A0F 21 B7 88     	ld hl,Posicion_actual
 297+ 9A12 34           	inc (hl)
 298+ 9A13 08               ex af,af
 299+ 9A14 6F           	ld l,a
 300+ 9A15 18 DD        	jr 6B
 301+ 9A17
 302+ 9A17              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A17
 304+ 9A17 47           3 ld b,a
 305+ 9A18 2A C1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A1B 23           2 inc hl
 307+ 9A1C 23           	inc hl
 308+ 9A1D 10 FC        	djnz 2B
 309+ 9A1F 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A22 C9           8 ret
 311+ 9A23
 312+ 9A23              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A23              ;
 314+ 9A23              ;	24/7/22
 315+ 9A23              ;
 316+ 9A23              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A23              ;
 318+ 9A23              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A23              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A23              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A23
 322+ 9A23 3A BD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A26 A7           	and a
 324+ 9A27 20 1F        	jr nz,1F
 325+ 9A29 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A2B 32 BD 88         ld (CTRL_DESPLZ),a
 327+ 9A2E
 328+ 9A2E 21 B6 88     	ld hl,Columns
 329+ 9A31 34           	inc (hl)
 330+ 9A32 3A C9 88     	ld a,(Cuad_objeto)
 331+ 9A35 E6 01        	and 1
 332+ 9A37 28 0F        	jr z,1F
 333+ 9A39 2A B7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A3C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A3D 22 B7 88     	ld (Posicion_actual),hl
 336+ 9A40 CD 33 9C     	call Genera_coordenadas
 337+ 9A43 CD A8 9B     	call Inc_CTRL_DESPLZ
 338+ 9A46 18 03        	jr 2F
 339+ 9A48 CD A8 9B     1 call Inc_CTRL_DESPLZ
 340+ 9A4B C9           2 ret
 341+ 9A4C
 342+ 9A4C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A4C              ;
 344+ 9A4C              ;	24/7/22
 345+ 9A4C              ;
 346+ 9A4C              ;	Ciclo_completo.
 347+ 9A4C              ;
 348+ 9A4C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A4C              ;
 350+ 9A4C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A4C              ; 	Decrementamos (Columns).
 352+ 9A4C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A4C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A4C
 355+ 9A4C
 356+ 9A4C 3A BD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9A4F FE FF        	cp $ff
 358+ 9A51 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9A53 E6 F0        	and $f0
 360+ 9A55 20 28        	jr nz,3F
 361+ 9A57
 362+ 9A57              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9A57
 364+ 9A57 3A BD 88     	ld a,(CTRL_DESPLZ)
 365+ 9A5A 47           	ld b,a
 366+ 9A5B 3E F8        	ld a,$f8
 367+ 9A5D 80           	add b
 368+ 9A5E 32 BD 88     	ld (CTRL_DESPLZ),a
 369+ 9A61 18 1C        	jr 3F
 370+ 9A63 21 B6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9A66 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9A67 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9A68 32 BD 88     	ld (CTRL_DESPLZ),a
 374+ 9A6B 3A C9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9A6E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9A70 20 0A        	jr nz,2F
 377+ 9A72 2A B7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9A75 23           	inc hl
 379+ 9A76 22 B7 88     	ld (Posicion_actual),hl
 380+ 9A79 CD 33 9C     	call Genera_coordenadas
 381+ 9A7C
 382+ 9A7C              ; Inicia el puntero de Sprite.
 383+ 9A7C
 384+ 9A7C CD 2D 8C     2 call Inicia_puntero_objeto_der
 385+ 9A7F C9           3 ret
 386+ 9A80
 387+ 9A80              ; ******************************************************************************************************************************************************************************************
 388+ 9A80              ;
 389+ 9A80              ;	15/02/23
 390+ 9A80              ;
 391+ 9A80              ;	Mov_left.
 392+ 9A80              ;
 393+ 9A80              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9A80              ;
 395+ 9A80              Mov_left
 396+ 9A80
 397+ 9A80 21 E1 88     	ld hl,Ctrl_0
 398+ 9A83 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9A85              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9A85              ; 																	; _ en el caso de que no lo haya.
 401+ 9A85 3A E1 88     	ld a,(Ctrl_0)
 402+ 9A88 CB 77        	bit 6,a
 403+ 9A8A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9A8C
 405+ 9A8C CD A2 9B     	call Stop_Amadeus_left
 406+ 9A8F C8           	ret z
 407+ 9A90 20 4A        	jr nz,8F
 408+ 9A92
 409+ 9A92 3A BB 88     11 ld a,(Coordenada_X)
 410+ 9A95 A7           	and a
 411+ 9A96 20 44        	jr nz,8F
 412+ 9A98
 413+ 9A98 3A BD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9A9B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9A9C 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9A9E
 417+ 9A9E              ; ---------- ---------- ----------
 418+ 9A9E
 419+ 9A9E 3A CA 88     	ld a,(Vel_left)
 420+ 9AA1 FE 02        	cp 2
 421+ 9AA3 28 0F        	jr z,1F
 422+ 9AA5 38 04        	jr c,6F
 423+ 9AA7 FE 04        	cp 4
 424+ 9AA9 28 12        	jr z,7F
 425+ 9AAB
 426+ 9AAB              ; ---------- ---------- ----------
 427+ 9AAB
 428+ 9AAB 3A BD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9AAE FE F8        	cp $f8
 430+ 9AB0 20 2A        	jr nz,8F
 431+ 9AB2 18 10        	jr 4F
 432+ 9AB4 3A BD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9AB7 FE F9        	cp $f9
 434+ 9AB9 20 21        	jr nz,8F
 435+ 9ABB 18 07        	jr 4F
 436+ 9ABD 3A BD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9AC0 FE FB        	cp $fb
 438+ 9AC2 20 18        	jr nz,8F
 439+ 9AC4
 440+ 9AC4              ; ---------- ---------- ----------
 441+ 9AC4
 442+ 9AC4              4
 443+ 9AC4 CD CA 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9AC7              ;	call Reinicio
 445+ 9AC7
 446+ 9AC7              ; ---------- ---------- ----------
 447+ 9AC7
 448+ 9AC7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9AC9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9ACA
 451+ 9ACA              ;	ld hl,(Indice_Sprite_izq)
 452+ 9ACA              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9ACA
 454+ 9ACA CD E3 9A     	call DESPLZ_IZQ
 455+ 9ACD C1           	pop bc
 456+ 9ACE 10 F9        	djnz 5B
 457+ 9AD0 2A B7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9AD3 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9AD4 22 B7 88     	ld (Posicion_actual),hl
 460+ 9AD7 CD 33 9C     	call Genera_coordenadas
 461+ 9ADA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9ADC
 463+ 9ADC              ; ---------- ---------- ----------
 464+ 9ADC
 465+ 9ADC              ; Movemos, no hay recolocación.
 466+ 9ADC
 467+ 9ADC 2A B7 88     8 ld hl,(Posicion_actual)
 468+ 9ADF CD E3 9A     	call DESPLZ_IZQ
 469+ 9AE2 C9           2 ret
 470+ 9AE3
 471+ 9AE3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9AE3              ;
 473+ 9AE3              ;	22/9/22
 474+ 9AE3
 475+ 9AE3              DESPLZ_IZQ
 476+ 9AE3
 477+ 9AE3 CD F2 9A     	call Desplaza_izquierda
 478+ 9AE6 CD 3E 9B         call modifica_parametros_1er_DESPLZ
 479+ 9AE9 CD 66 9B     	call Ciclo_completo_2
 480+ 9AEC 21 E1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9AEF CB BE        	res 7,(hl)
 482+ 9AF1 C9           	ret
 483+ 9AF2
 484+ 9AF2              Desplaza_izquierda
 485+ 9AF2
 486+ 9AF2 3A CA 88     	ld a,(Vel_left)
 487+ 9AF5 47           	ld b,a
 488+ 9AF6 2A C5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9AF9 23           1 inc hl
 490+ 9AFA 23           	inc hl
 491+ 9AFB 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9AFD 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B00 CD 16 8C     	call Extrae_address
 494+ 9B03 22 B9 88     	ld (Puntero_objeto),hl
 495+ 9B06
 496+ 9B06              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B06
 498+ 9B06              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B06              ; Cuántos movimientos hemos hecho ??
 500+ 9B06              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B06
 502+ 9B06 2A C1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B09 EB           	ex de,hl
 504+ 9B0A A7           	and a
 505+ 9B0B ED 52        	sbc hl,de
 506+ 9B0D CB 3D        	srl l
 507+ 9B0F 3E 08        6 ld a,8
 508+ 9B11 95           	sub l
 509+ 9B12 30 1E        	jr nc,3F
 510+ 9B14
 511+ 9B14              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B14              ; B="0".
 513+ 9B14
 514+ 9B14 04           4 inc b
 515+ 9B15 3C           	inc a
 516+ 9B16 20 FC        	jr nz,4B
 517+ 9B18 78           	ld a,b
 518+ 9B19 08           	ex af,af
 519+ 9B1A 2A C1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B1D 23           5 inc hl
 521+ 9B1E 23           	inc hl
 522+ 9B1F 10 FC        	djnz 5B
 523+ 9B21 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B24 CD 16 8C     	call Extrae_address
 525+ 9B27 22 B9 88     	ld (Puntero_objeto),hl
 526+ 9B2A
 527+ 9B2A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B2A              ; _(Posicion_actual).
 529+ 9B2A
 530+ 9B2A 21 B7 88     	ld hl,Posicion_actual
 531+ 9B2D 35           	dec (hl)
 532+ 9B2E 08           	ex af,af
 533+ 9B2F 6F           	ld l,a
 534+ 9B30 18 DD        	jr 6B
 535+ 9B32
 536+ 9B32              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9B32
 538+ 9B32 47           3 ld b,a
 539+ 9B33 2A BF 88     	ld hl,(Indice_Sprite_der)
 540+ 9B36 23           2 inc hl
 541+ 9B37 23           	inc hl
 542+ 9B38 10 FC        	djnz 2B
 543+ 9B3A 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9B3D C9           8 ret
 545+ 9B3E
 546+ 9B3E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9B3E              ;
 548+ 9B3E              ;	modifica_parametros_1er_DESPLZ
 549+ 9B3E              ;
 550+ 9B3E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9B3E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9B3E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9B3E
 554+ 9B3E 3A BD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9B41 A7           	and a
 556+ 9B42 20 1E        	jr nz,1F
 557+ 9B44 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9B45 32 BD 88         ld (CTRL_DESPLZ),a
 559+ 9B48 21 B6 88     	ld hl,Columns
 560+ 9B4B 34           	inc (hl)
 561+ 9B4C 3A C9 88     	ld a,(Cuad_objeto)
 562+ 9B4F E6 01        	and 1
 563+ 9B51 20 0F        	jr nz,1F
 564+ 9B53 2A B7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9B56 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9B57 22 B7 88     	ld (Posicion_actual),hl
 567+ 9B5A CD 33 9C     	call Genera_coordenadas
 568+ 9B5D CD B9 9B     	call Dec_CTRL_DESPLZ
 569+ 9B60 18 03        	jr 2F
 570+ 9B62 CD B9 9B     1 call Dec_CTRL_DESPLZ
 571+ 9B65 C9           2 ret
 572+ 9B66
 573+ 9B66              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9B66
 575+ 9B66 3A BD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9B69 FE F7        	cp $f7
 577+ 9B6B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9B6D 30 2C        	jr nc,3F
 579+ 9B6F
 580+ 9B6F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9B6F
 582+ 9B6F 06 00        	ld b,0
 583+ 9B71 04           4 inc b
 584+ 9B72 3C           	inc a
 585+ 9B73 FE F7        	cp $f7
 586+ 9B75 20 FA        	jr nz,4B
 587+ 9B77 3E FF        	ld a,$ff
 588+ 9B79 90           	sub b
 589+ 9B7A 32 BD 88     	ld (CTRL_DESPLZ),a
 590+ 9B7D 18 1C        	jr 3F
 591+ 9B7F
 592+ 9B7F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9B7F
 594+ 9B7F 21 B6 88     1 ld hl,Columns
 595+ 9B82 35           	dec (hl)
 596+ 9B83 AF           	xor a
 597+ 9B84 32 BD 88     	ld (CTRL_DESPLZ),a
 598+ 9B87 3A C9 88     	ld a,(Cuad_objeto)
 599+ 9B8A E6 01        	and 1
 600+ 9B8C 28 0A        	jr z,2F
 601+ 9B8E 2A B7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9B91 2B           	dec hl
 603+ 9B92 22 B7 88     	ld (Posicion_actual),hl
 604+ 9B95 CD 33 9C     	call Genera_coordenadas
 605+ 9B98
 606+ 9B98              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9B98
 608+ 9B98 CD 40 8C     2 call Inicia_puntero_objeto_izq
 609+ 9B9B C9           3 ret
 610+ 9B9C
 611+ 9B9C              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9B9C              ;
 613+ 9B9C              ;	19/10/22
 614+ 9B9C              ;
 615+ 9B9C              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9B9C              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9B9C
 618+ 9B9C 3A BB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9B9F FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9BA1 C9           	ret
 621+ 9BA2
 622+ 9BA2              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9BA2              ;
 624+ 9BA2              ;	19/10/22
 625+ 9BA2              ;
 626+ 9BA2              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9BA2              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9BA2
 629+ 9BA2 3A BB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9BA5 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9BA7 C9           	ret
 632+ 9BA8
 633+ 9BA8              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9BA8              ;
 635+ 9BA8              ;	24/7/22
 636+ 9BA8              ;
 637+ 9BA8              ;	Inc_CTRL_DESPLZ
 638+ 9BA8              ;
 639+ 9BA8              ;
 640+ 9BA8              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9BA8
 642+ 9BA8 21 BD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9BAB 3A CB 88     	ld a,(Vel_right)
 644+ 9BAE A7           	and a
 645+ 9BAF 28 06        	jr z,1F
 646+ 9BB1 47           	ld b,a
 647+ 9BB2 34           3 inc (hl)
 648+ 9BB3 10 FD        	djnz 3B
 649+ 9BB5 18 01        	jr 2F
 650+ 9BB7 34           1 inc (hl)
 651+ 9BB8 C9           2 ret
 652+ 9BB9
 653+ 9BB9              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9BB9              ;
 655+ 9BB9              ;	5/2/23
 656+ 9BB9              ;
 657+ 9BB9              ;	Dec_CTRL_DESPLZ
 658+ 9BB9              ;
 659+ 9BB9              ;
 660+ 9BB9              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9BB9
 662+ 9BB9 21 BD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9BBC 3A CA 88     	ld a,(Vel_left)
 664+ 9BBF A7           	and a
 665+ 9BC0 28 06        	jr z,1F
 666+ 9BC2 47           	ld b,a
 667+ 9BC3 35           3 dec (hl)
 668+ 9BC4 10 FD        	djnz 3B
 669+ 9BC6 18 01        	jr 2F
 670+ 9BC8 35           1 dec (hl)
 671+ 9BC9 C9           2 ret
 672+ 9BCA
 673+ 9BCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9BCA
 675+ 9BCA 2A B7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9BCD 01 1F 00     	ld bc,31
 677+ 9BD0 A7           	and a
 678+ 9BD1 ED 4A        	adc hl,bc
 679+ 9BD3 22 B7 88     	ld (Posicion_actual),hl
 680+ 9BD6 21 E1 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9BD9 CB C6        	set 0,(hl)
 682+ 9BDB C9           	ret
 683+ 9BDC
 684+ 9BDC              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9BDC
 686+ 9BDC 2A B7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9BDF 01 1F 00     	ld bc,31
 688+ 9BE2 A7           	and a
 689+ 9BE3 ED 42        	sbc hl,bc
 690+ 9BE5 22 B7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9BE8 21 E1 88     	ld hl,Ctrl_0
 692+ 9BEB CB CE        	set 1,(hl)
 693+ 9BED C9           	ret
 694+ 9BEE
 695+ 9BEE              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9BEE
 697+ 9BEE 24           Reaparece_abajo inc h
 698+ 9BEF 01 E0 17     	ld bc,$17e0
 699+ 9BF2 A7           	and a
 700+ 9BF3 ED 4A        	adc hl,bc
 701+ 9BF5 22 B7 88     	ld (Posicion_actual),hl
 702+ 9BF8 21 E1 88     	ld hl,Ctrl_0
 703+ 9BFB CB D6        	set 2,(hl)
 704+ 9BFD C9           	ret
 705+ 9BFE
 706+ 9BFE              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9BFE
 708+ 9BFE 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C01 A7           	and a
 710+ 9C02 ED 42        	sbc hl,bc
 711+ 9C04 22 B7 88     	ld (Posicion_actual),hl
 712+ 9C07 21 E1 88     	ld hl,Ctrl_0
 713+ 9C0A CB DE        	set 3,(hl)
 714+ 9C0C C9           	ret
 715+ 9C0D
 716+ 9C0D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C0D              ;
 718+ 9C0D              ;	15/07/23
 719+ 9C0D
 720+ 9C0D              Reinicio
 721+ 9C0D
 722+ 9C0D              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C0D
 724+ 9C0D AF           	xor a
 725+ 9C0E 21 E6 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C11 CD 2F 9C     	call Limpia_contenido_hl
 727+ 9C14
 728+ 9C14 21 B7 88     	ld hl,Posicion_actual
 729+ 9C17 CD 2F 9C     	call Limpia_contenido_hl
 730+ 9C1A
 731+ 9C1A CD 5F 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C1D CD E9 9E     	call Inicia_Puntero_mov
 733+ 9C20
 734+ 9C20 21 E8 88     	ld hl,Incrementa_puntero
 735+ 9C23 06 05        	ld b,5
 736+ 9C25 77           1 ld (hl),a
 737+ 9C26 23           	inc hl
 738+ 9C27 10 FC        	djnz 1B
 739+ 9C29
 740+ 9C29 21 F2 88     	ld hl,Ctrl_2
 741+ 9C2C CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9C2E
 743+ 9C2E C9           	ret
 744+ 9C2F
 745+ 9C2F 77           Limpia_contenido_hl	ld (hl),a
 746+ 9C30 23           	inc hl
 747+ 9C31 77           	ld (hl),a
 748+ 9C32 C9           	ret
 749+ 9C33
 750+ 9C33
# file closed: Direcciones.asm
1529  9C33              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C33              ; ------------------------------------------------------------------------
   2+ 9C33              ;
   3+ 9C33              ;	02/04/23
   4+ 9C33              ;
   5+ 9C33              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C33              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C33              ;
   8+ 9C33              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C33              ;
  10+ 9C33              ;	Modifica: A,BC y DE.
  11+ 9C33
  12+ 9C33 C5           Genera_coordenadas push bc
  13+ 9C34 E5           	push hl
  14+ 9C35 D5           	push de
  15+ 9C36
  16+ 9C36 2A B7 88     	ld hl,(Posicion_actual)
  17+ 9C39
  18+ 9C39 7D           	ld a,l
  19+ 9C3A E6 1F        	and $1f
  20+ 9C3C 32 BB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C3F
  22+ 9C3F CD A8 98     	call calcula_tercio
  23+ 9C42 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C43
  25+ 9C43 1E 00        	ld e,0
  26+ 9C45 7D           	ld a,l
  27+ 9C46 E6 E0        	and $e0
  28+ 9C48 28 01        	jr z,1F
  29+ 9C4A 04           	inc b
  30+ 9C4B
  31+ 9C4B 04           1 inc b
  32+ 9C4C 05           	dec b
  33+ 9C4D 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C4F              ;														; _ , salimos.
  35+ 9C4F 1C           3 inc e
  36+ 9C50 D6 20        	sub 32
  37+ 9C52 20 FB        	jr nz,3B
  38+ 9C54 10 F5        	djnz 1B
  39+ 9C56
  40+ 9C56 7B           2 ld a,e
  41+ 9C57 32 BC 88     	ld (Coordenada_y),a
  42+ 9C5A
  43+ 9C5A D1           	pop de
  44+ 9C5B E1           	pop hl
  45+ 9C5C C1           	pop bc
  46+ 9C5D
  47+ 9C5D C9           	ret
  48+ 9C5E
  49+ 9C5E              ; ------------------------------------------------------------------------
  50+ 9C5E              ;	28/05/23
  51+ 9C5E              ;
  52+ 9C5E              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C5E              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C5E              ;
  55+ 9C5E              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C5E              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C5E              ;
  58+ 9C5E              ;		DE="$120d"
  59+ 9C5E              ;
  60+ 9C5E              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C5E              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C5E              ;
  63+ 9C5E              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C5E
  65+ 9C5E              ;	Modifica: A,BC y DE.
  66+ 9C5E
  67+ 9C5E
  68+ 9C5E              Genera_coordenadas_disparo
  69+ 9C5E
  70+ 9C5E              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C5E
  72+ 9C5E 7D           	ld a,l
  73+ 9C5F E6 1F        	and $1f
  74+ 9C61 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C62 CD A8 98     	call calcula_tercio
  76+ 9C65 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C66 1E 00        	ld e,0
  78+ 9C68 7D           	ld a,l
  79+ 9C69 E6 E0        	and $e0
  80+ 9C6B 28 01        	jr z,1F
  81+ 9C6D 04           	inc b
  82+ 9C6E 1C           1 inc e
  83+ 9C6F D6 20        	sub 32
  84+ 9C71 20 FB        	jr nz,1B
  85+ 9C73 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C75 C9           	ret
  87+ 9C76
# file closed: Genera_coordenadas.asm
1530  9C76              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C76              ; Relojes y temporizaciones.
   2+ 9C76
   3+ 9C76              ; ------------------------------------------------------
   4+ 9C76              ;
   5+ 9C76              ;	16/7/23
   6+ 9C76              ;
   7+ 9C76              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C76              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C76              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C76              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C76              ;
  12+ 9C76              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C76              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C76
  15+ 9C76              ; Disparo_entidad db 1
  16+ 9C76              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C76              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C76
  19+ 9C76              Habilita_disparos
  20+ 9C76
  21+ 9C76 7E           	ld a,(hl)
  22+ 9C77 A7           	and a
  23+ 9C78 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C79
  25+ 9C79 EB           	ex de,hl
  26+ 9C7A
  27+ 9C7A 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C7B C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C7C
  30+ 9C7C              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C7C
  32+ 9C7C 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C7D 7E           	ld a,(hl)
  34+ 9C7E 23           	inc hl
  35+ 9C7F 77           	ld (hl),a
  36+ 9C80
  37+ 9C80 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C81 3E 01        	ld a,1
  39+ 9C83 77           	ld (hl),a
  40+ 9C84 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1531  9C85              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C85
   2+ 9C85
   3+ 9C85              ;   07/07/23
   4+ 9C85              ;
   5+ 9C85              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C85              ;
   7+ 9C85              ;   Codificación:
   8+ 9C85              ;
   9+ 9C85              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C85              ;
  11+ 9C85              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C85              ;
  13+ 9C85              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C85              ;
  15+ 9C85              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C85              ;
  17+ 9C85              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C85              ;                               ..... %01000010 Vel_up 4
  19+ 9C85              ;                                               Vel_down 2
  20+ 9C85              ;                               ..... $42
  21+ 9C85              ;
  22+ 9C85              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C85              ;
  24+ 9C85              ;                               ..... %01000010 Vel_left 4
  25+ 9C85              ;                                               Vel_right 2
  26+ 9C85              ;                               ..... $42
  27+ 9C85              ;
  28+ 9C85              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C85              ;
  30+ 9C85              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C85              ;
  32+ 9C85              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C85              ;
  34+ 9C85              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C85              ;                                     $53
  36+ 9C85              ;
  37+ 9C85              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C85              ;
  39+ 9C85              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C85              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C85              ;
  42+ 9C85              ;                       Arriba ..... $81
  43+ 9C85              ;                       Arriba - izquierda ..... $a1
  44+ 9C85              ;                       Arriba - derecha ..... $91
  45+ 9C85              ;
  46+ 9C85              ;                       Abajo ..... $41
  47+ 9C85              ;                       Abajo - izquierda ..... $61
  48+ 9C85              ;                       Abajo - derecha ..... $51
  49+ 9C85              ;
  50+ 9C85              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C85              ;
  52+ 9C85              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C85              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C85              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C85              ;
  56+ 9C85              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C85              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C85              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C85              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C85              ;
  61+ 9C85              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C85              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C85              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C85              ;
  65+ 9C85              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C85              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C85              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C85              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C85
  70+ 9C85              ; ----- ----- ----- ----- -----
  71+ 9C85
  72+ 9C85 B1 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C87 B9 9C            defw F_1
  74+ 9C89 C3 9C            defw F_2
  75+ 9C8B CD 9C            defw Codo_abajo_derecha
  76+ 9C8D 01 9D            defw Derecha_y_subiendo
  77+ 9C8F 0B 9D            defw Derecha_y_subiendo_1
  78+ 9C91 15 9D            defw F_3
  79+ 9C93 1F 9D            defw F_4
  80+ 9C95 29 9D            defw Derecha_y_bajando
  81+ 9C97 33 9D            defw Derecha_y_bajando_1
  82+ 9C99 3D 9D            defw Derecha_y_bajando_2
  83+ 9C9B 47 9D            defw Codo_derecha_abajo
  84+ 9C9D 77 9D            defw Codo_abajo_izq.
  85+ 9C9F AB 9D            defw Izquierda_y_subiendo
  86+ 9CA1 B5 9D            defw Izquierda_y_subiendo_1
  87+ 9CA3 BF 9D            defw F_5
  88+ 9CA5 C9 9D            defw F_6
  89+ 9CA7 D3 9D            defw Izquierda_y_bajando
  90+ 9CA9 DD 9D            defw Izquierda_y_bajando_1
  91+ 9CAB E7 9D            defw Izquierda_y_bajando_2
  92+ 9CAD F1 9D            defw Codo_izquierda_abajo
  93+ 9CAF 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9CB1
  95+ 9CB1 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9CB5 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9CB9
  98+ 9CB9 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9CBD 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9CC1 08 00
 100+ 9CC3 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9CC7 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9CCB 0F FE
 102+ 9CCD
 103+ 9CCD 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9CD1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9CD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9CD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9CDD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9CE1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9CE5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9CE9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9CED 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CF1 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9CF5 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9CF9 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9CFD 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D01
 117+ 9D01 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D05 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D09 06 00
 119+ 9D0B
 120+ 9D0B 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D0F 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D13 02 00
 122+ 9D15
 123+ 9D15 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D19 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D1D 04 00
 125+ 9D1F 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D23 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D27 08 00
 127+ 9D29
 128+ 9D29 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D2D 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D31 02 00
 130+ 9D33
 131+ 9D33 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D37 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D3B 06 00
 133+ 9D3D
 134+ 9D3D 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D41 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D45 06 00
 136+ 9D47
 137+ 9D47              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9D47
 139+ 9D47 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D4B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D4F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D53 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D63 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D67 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D6B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D6F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D73 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D77
 152+ 9D77 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D7B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D7F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D83 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D87 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D8B 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D8F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D93 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D97 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D9B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D9F 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9DA3 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9DA7 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9DAB
 166+ 9DAB 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9DAF 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9DB3 06 00
 168+ 9DB5
 169+ 9DB5 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9DB9 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9DBD 02 00
 171+ 9DBF
 172+ 9DBF 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9DC3 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9DC7 04 00
 174+ 9DC9 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9DCD 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9DD1 08 00
 176+ 9DD3
 177+ 9DD3 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9DD7 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9DDB 02 00
 179+ 9DDD
 180+ 9DDD 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9DE1 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9DE5 06 00
 182+ 9DE7
 183+ 9DE7 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9DEB 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9DEF 06 00
 185+ 9DF1
 186+ 9DF1 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9DF5 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9DF9 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9DFD 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E01 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E05 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E09 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E0D 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E11 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E15 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E19 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E1D 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E21
 199+ 9E21              ; ----- ----- ----- ----- -----
 200+ 9E21              ;
 201+ 9E21              ;   27/06/23
 202+ 9E21
 203+ 9E21              Movimiento
 204+ 9E21
 205+ 9E21              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E21
 207+ 9E21              ;    ld hl,(Posicion_actual)
 208+ 9E21
 209+ 9E21 3A F2 88         ld a,(Ctrl_2)
 210+ 9E24 CB 57            bit 2,a
 211+ 9E26 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E28
 213+ 9E28 2A E4 88         ld hl,(Puntero_mov)
 214+ 9E2B 7E               ld a,(hl)
 215+ 9E2C
 216+ 9E2C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E2C
 218+ 9E2C              Inicia_desplazamiento.
 219+ 9E2C
 220+ 9E2C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E2C
 222+ 9E2C CD 20 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E2F
 224+ 9E2F              ; Iniciamos (Repetimos_mov).
 225+ 9E2F
 226+ 9E2F 7E               ld a,(hl)
 227+ 9E30 E6 0F            and $0f
 228+ 9E32 32 EA 88         ld (Repetimos_desplazamiento),a
 229+ 9E35 32 EB 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9E38
 231+ 9E38              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E38
 233+ 9E38 23               inc hl
 234+ 9E39 7E               ld a,(hl)
 235+ 9E3A 32 ED 88         ld (Cola_de_desplazamiento),a
 236+ 9E3D 2B               dec hl
 237+ 9E3E
 238+ 9E3E 21 F2 88         ld hl,Ctrl_2
 239+ 9E41 CB D6            set 2,(hl)
 240+ 9E43
 241+ 9E43              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E43              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E43
 244+ 9E43              Desplazamiento_iniciado
 245+ 9E43
 246+ 9E43 CD F4 9E         call Aplica_desplazamiento
 247+ 9E46
 248+ 9E46 3A F2 88         ld a,(Ctrl_2)
 249+ 9E49 CB 67            bit 4,a
 250+ 9E4B C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E4C
 252+ 9E4C 21 EA 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E4F 35               dec (hl)
 254+ 9E50 C0               ret nz
 255+ 9E51
 256+ 9E51              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E51              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E51              ; Analiza (Cola_de_desplazamiento).
 259+ 9E51
 260+ 9E51 3A ED 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E54 A7               and a
 262+ 9E55 CC 49 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E58 28 30            jr z,Reinicia_el_movimiento
 264+ 9E5A
 265+ 9E5A FE FF            cp $ff
 266+ 9E5C 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E5E
 268+ 9E5E FE FE            cp $fe
 269+ 9E60 CC CD 9E         call z,Fijamos_bucle
 270+ 9E63 28 25            jr z,Reinicia_el_movimiento
 271+ 9E65
 272+ 9E65 FE FD            cp $fd
 273+ 9E67 20 11            jr nz,1F
 274+ 9E69
 275+ 9E69              ; ---
 276+ 9E69              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E69
 278+ 9E69 3A F2 88         ld a,(Ctrl_2)
 279+ 9E6C CB 5F            bit 3,a
 280+ 9E6E 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E70
 282+ 9E70              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E70
 284+ 9E70 21 F2 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E73 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E75
 287+ 9E75 CD DE 9E         call Inicia_Repetimos_movimiento
 288+ 9E78 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E7A              ; ---
 290+ 9E7A
 291+ 9E7A FE 01        1 cp 1
 292+ 9E7C CA B7 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E7F
 294+ 9E7F 3D               dec a
 295+ 9E80 32 ED 88         ld (Cola_de_desplazamiento),a
 296+ 9E83
 297+ 9E83 3A EB 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E86 32 EA 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E89              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E89 C9               ret
 301+ 9E8A
 302+ 9E8A              Reinicia_el_movimiento
 303+ 9E8A
 304+ 9E8A 3A F2 88         ld a,(Ctrl_2)
 305+ 9E8D CB 5F            bit 3,a
 306+ 9E8F 28 1B            jr z,2F
 307+ 9E91
 308+ 9E91              ; (Cola_de_desplazamiento)="254".
 309+ 9E91
 310+ 9E91 21 EC 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9E94 35               dec (hl)
 312+ 9E95 20 15            jr nz,2F
 313+ 9E97
 314+ 9E97              ; Fin de las repeticiones del último movimiento.
 315+ 9E97
 316+ 9E97 21 F2 88         ld hl,Ctrl_2
 317+ 9E9A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9E9C
 319+ 9E9C 2A E4 88         ld hl,(Puntero_mov)
 320+ 9E9F 23               inc hl
 321+ 9EA0 23               inc hl
 322+ 9EA1 23               inc hl
 323+ 9EA2 22 E4 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9EA5              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9EA5 7E               ld a,(hl)
 326+ 9EA6 32 ED 88         ld (Cola_de_desplazamiento),a
 327+ 9EA9
 328+ 9EA9 C3 51 9E         jp Cola
 329+ 9EAC
 330+ 9EAC CD E9 9E     2 call Inicia_Puntero_mov
 331+ 9EAF
 332+ 9EAF 21 F2 88         ld hl,Ctrl_2
 333+ 9EB2 CB 96            res 2,(hl)
 334+ 9EB4
 335+ 9EB4 C3 21 9E         jp Movimiento
 336+ 9EB7
 337+ 9EB7              Siguiente_desplazamiento
 338+ 9EB7
 339+ 9EB7              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9EB7              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9EB7
 342+ 9EB7 21 F2 88         ld hl,Ctrl_2
 343+ 9EBA CB 96            res 2,(hl)
 344+ 9EBC
 345+ 9EBC 2A E4 88         ld hl,(Puntero_mov)
 346+ 9EBF 23               inc hl
 347+ 9EC0 23               inc hl
 348+ 9EC1 22 E4 88         ld (Puntero_mov),hl
 349+ 9EC4
 350+ 9EC4 7E               ld a,(hl)
 351+ 9EC5 A7               and a
 352+ 9EC6 CC 49 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9EC9 CA 8A 9E         jp z,Reinicia_el_movimiento
 354+ 9ECC
 355+ 9ECC C9               ret
 356+ 9ECD
 357+ 9ECD              ; Subrutinas -----------------------------------------
 358+ 9ECD              ; ---------- --------- --------- ---------- ----------
 359+ 9ECD              ;
 360+ 9ECD              ;   24/07/23
 361+ 9ECD              ;
 362+ 9ECD              ;   Fijamos_bucle
 363+ 9ECD              ;
 364+ 9ECD              ;
 365+ 9ECD
 366+ 9ECD              Fijamos_bucle
 367+ 9ECD
 368+ 9ECD 3A E8 88         ld a,(Incrementa_puntero)
 369+ 9ED0 3C               inc a
 370+ 9ED1 32 E9 88         ld (Incrementa_puntero_backup),a
 371+ 9ED4
 372+ 9ED4 CD 49 9F         call Incrementa_Puntero_indice_mov
 373+ 9ED7 2A E2 88         ld hl,(Puntero_indice_mov)
 374+ 9EDA 22 E6 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9EDD C9               ret
 376+ 9EDE
 377+ 9EDE              ; ---------- --------- --------- ---------- ----------
 378+ 9EDE              ;
 379+ 9EDE              ;   07/7/23
 380+ 9EDE              ;
 381+ 9EDE              ;   Inicia_Repetimos_movimiento
 382+ 9EDE              ;
 383+ 9EDE              ;
 384+ 9EDE
 385+ 9EDE              Inicia_Repetimos_movimiento
 386+ 9EDE
 387+ 9EDE              ; Iniciamos (Repetimos_movimiento).
 388+ 9EDE
 389+ 9EDE DD 2A E4 88      ld ix,(Puntero_mov)
 390+ 9EE2 DD 7E 02         ld a,(ix+2)
 391+ 9EE5 32 EC 88         ld (Repetimos_movimiento),a
 392+ 9EE8
 393+ 9EE8 C9               ret
 394+ 9EE9
 395+ 9EE9              ; ---------- --------- --------- ---------- ----------
 396+ 9EE9              ;
 397+ 9EE9              ;   26/6/23
 398+ 9EE9              ;
 399+ 9EE9              ;   Inicia_Puntero_mov
 400+ 9EE9              ;
 401+ 9EE9              ;
 402+ 9EE9
 403+ 9EE9 2A E2 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9EEC 5E               ld e,(hl)
 405+ 9EED 23               inc hl
 406+ 9EEE 56               ld d,(hl)
 407+ 9EEF EB               ex de,hl
 408+ 9EF0 22 E4 88         ld (Puntero_mov),hl
 409+ 9EF3 C9               ret
 410+ 9EF4
 411+ 9EF4              ; ---------- --------- --------- ---------- ----------
 412+ 9EF4              ;
 413+ 9EF4              ;   27/06/23
 414+ 9EF4              ;
 415+ 9EF4              ;   Aplica_movimiento.
 416+ 9EF4
 417+ 9EF4              Aplica_desplazamiento
 418+ 9EF4
 419+ 9EF4              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9EF4
 421+ 9EF4 2A E4 88         ld hl, (Puntero_mov)
 422+ 9EF7
 423+ 9EF7 7E               ld a,(hl)
 424+ 9EF8 E6 F0            and $f0
 425+ 9EFA C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9EFB
 427+ 9EFB CB 7E            bit 7,(hl)
 428+ 9EFD 28 03            jr z,1F
 429+ 9EFF CD 1F 99         call Mov_up
 430+ 9F02 2A E4 88     1 ld hl, (Puntero_mov)
 431+ 9F05 CB 76            bit 6,(hl)
 432+ 9F07 28 03            jr z,2F
 433+ 9F09 CD EE 98         call Mov_down
 434+ 9F0C 2A E4 88     2 ld hl, (Puntero_mov)
 435+ 9F0F CB 6E            bit 5,(hl)
 436+ 9F11 28 03            jr z,3F
 437+ 9F13 CD 80 9A         call Mov_left
 438+ 9F16 2A E4 88     3 ld hl, (Puntero_mov)
 439+ 9F19 CB 66            bit 4,(hl)
 440+ 9F1B C8               ret z
 441+ 9F1C CD 62 99         call Mov_right
 442+ 9F1F C9               ret
 443+ 9F20
 444+ 9F20              ; ---------- --------- --------- ---------- ----------
 445+ 9F20              ;
 446+ 9F20              ;   26/06/23
 447+ 9F20              ;
 448+ 9F20              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F20
 450+ 9F20              Ajusta_velocidad_desplazamiento
 451+ 9F20
 452+ 9F20              ; 1er byte de la cadena de movimiento.
 453+ 9F20              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F20
 455+ 9F20 CD 3E 9F         call Extrae_nibble_alto
 456+ 9F23
 457+ 9F23 32 CC 88         ld (Vel_up),a
 458+ 9F26 79               ld a,c
 459+ 9F27 E6 0F            and $0f
 460+ 9F29 32 CD 88         ld (Vel_down),a
 461+ 9F2C
 462+ 9F2C              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F2C              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F2C
 465+ 9F2C 23               inc hl
 466+ 9F2D CD 3E 9F         call Extrae_nibble_alto
 467+ 9F30
 468+ 9F30 32 CA 88         ld (Vel_left),a
 469+ 9F33 79               ld a,c
 470+ 9F34 E6 0F            and $0f
 471+ 9F36 32 CB 88         ld (Vel_right),a
 472+ 9F39
 473+ 9F39              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F39
 475+ 9F39 23               inc hl
 476+ 9F3A 22 E4 88         ld (Puntero_mov),hl
 477+ 9F3D C9               ret
 478+ 9F3E
 479+ 9F3E 06 04        Extrae_nibble_alto ld b,4
 480+ 9F40 7E               ld a,(hl)
 481+ 9F41 4F               ld c,a
 482+ 9F42 E6 F0            and $f0
 483+ 9F44 CB 3F        1 srl a
 484+ 9F46 10 FC            djnz 1B
 485+ 9F48 C9               ret
 486+ 9F49
 487+ 9F49              ; ---------- --------- --------- ---------- ----------
 488+ 9F49              ;
 489+ 9F49              ;   5/7/23
 490+ 9F49              ;
 491+ 9F49              ;   Incrementa_Puntero_indice_mov
 492+ 9F49
 493+ 9F49              Incrementa_Puntero_indice_mov
 494+ 9F49
 495+ 9F49 21 E8 88         ld hl,Incrementa_puntero
 496+ 9F4C 34               inc (hl)
 497+ 9F4D
 498+ 9F4D 2A E2 88         ld hl,(Puntero_indice_mov)
 499+ 9F50 01 02 00         ld bc,2
 500+ 9F53 A7               and a
 501+ 9F54 09               add hl,bc
 502+ 9F55 22 E2 88         ld (Puntero_indice_mov),hl
 503+ 9F58
 504+ 9F58 7E               ld a,(hl)
 505+ 9F59 A7               and a
 506+ 9F5A
 507+ 9F5A              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F5A
 509+ 9F5A              ;    jr z,$
 510+ 9F5A
 511+ 9F5A              ;! Reinicia el Patrón de movimiento.
 512+ 9F5A
 513+ 9F5A CC 5F 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F5D
 515+ 9F5D AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F5E
 517+ 9F5E C9               ret
 518+ 9F5F
 519+ 9F5F
 520+ 9F5F              ; ---------- --------- --------- ---------- ----------
 521+ 9F5F              ;
 522+ 9F5F              ;   24/07/23
 523+ 9F5F              ;
 524+ 9F5F              ;   Inicializa_Puntero_indice_mov
 525+ 9F5F
 526+ 9F5F              Inicializa_Puntero_indice_mov
 527+ 9F5F
 528+ 9F5F              ; Existe etiqueta de bucle principal???
 529+ 9F5F
 530+ 9F5F 2A E6 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F62 24               inc h
 532+ 9F63 25               dec h
 533+ 9F64 28 05            jr z,2F
 534+ 9F66
 535+ 9F66 22 E2 88         ld (Puntero_indice_mov),hl
 536+ 9F69 18 14            jr 3F
 537+ 9F6B
 538+ 9F6B              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F6B
 540+ 9F6B 3A E8 88     2 ld a,(Incrementa_puntero)
 541+ 9F6E 47               ld b,a
 542+ 9F6F
 543+ 9F6F 2A E2 88         ld hl,(Puntero_indice_mov)
 544+ 9F72 2B           1 dec hl
 545+ 9F73 2B               dec hl
 546+ 9F74 10 FC            djnz 1B
 547+ 9F76 22 E2 88         ld (Puntero_indice_mov),hl
 548+ 9F79
 549+ 9F79 AF               xor a
 550+ 9F7A 32 E8 88         ld (Incrementa_puntero),a
 551+ 9F7D 18 06            jr 4F
 552+ 9F7F
 553+ 9F7F 3A E9 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F82 32 E8 88         ld (Incrementa_puntero),a
 555+ 9F85 C9           4 ret
 556+ 9F86
 557+ 9F86
 558+ 9F86
# file closed: Patrones_de_mov.asm
1532  9F86              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F86              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F86              ;
   3+ 9F86              ;	4/12/23
   4+ 9F86              ;
   5+ 9F86              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F86
   7+ 9F86              ;	ADC HL,SP	LD (addr),SP
   8+ 9F86              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F86              ;	ADD IX,SP	LD SP,nn
  10+ 9F86              ; 	ADD IY,SP	LD SP,HL
  11+ 9F86              ;				LD SP,IX
  12+ 9F86              ;	DEC SP		LD SP,IY
  13+ 9F86
  14+ 9F86              ;	EX (SP),HL
  15+ 9F86              ;	EX (SP),IX
  16+ 9F86              ;	EX (SP),IY
  17+ 9F86
  18+ 9F86              ;	INC SP
  19+ 9F86
  20+ 9F86                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 05 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 D5 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 E1 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7FB0 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7FB2              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7FB2
  50+ 7FB2 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 7FB5
  52+ 7FB5 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 7FB6 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 7FB8 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7FBA
  56+ 7FBA              ; Disparo o entidad?
  57+ 7FBA
  58+ 7FBA 3A F4 88         ld a,(Ctrl_1)
  59+ 7FBD CB 47            bit 0,a
  60+ 7FBF 28 05            jr z,2F
  61+ 7FC1
  62+ 7FC1 2A 0D 89         ld hl,(Stack_snapshot_disparos)
  63+ 7FC4 18 0F            jr 4F
  64+ 7FC6
  65+ 7FC6              ; No es disparo. Entidad/Amadeus ????
  66+ 7FC6
  67+ 7FC6 3A E1 88     2 ld a,(Ctrl_0)
  68+ 7FC9 CB 77            bit 6,a
  69+ 7FCB 28 05            jr z,7F
  70+ 7FCD
  71+ 7FCD              ; Guardamos foto de Amadeus.
  72+ 7FCD
  73+ 7FCD 2A 11 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7FD0 18 03            jr 4F
  75+ 7FD2
  76+ 7FD2 2A 0B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 7FD5
  78+ 7FD5 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 7FD7
  80+ 7FD7 D1           1 pop de
  81+ 7FD8 73               ld (hl),e
  82+ 7FD9 23               inc hl
  83+ 7FDA 72               ld (hl),d
  84+ 7FDB 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7FDC 10 F9            djnz 1B
  86+ 7FDE
  87+ 7FDE              ; Disparo o entidad ?
  88+ 7FDE
  89+ 7FDE 3A F4 88         ld a,(Ctrl_1)
  90+ 7FE1 CB 47            bit 0,a
  91+ 7FE3 28 05            jr z,5F
  92+ 7FE5
  93+ 7FE5 22 0D 89         ld (Stack_snapshot_disparos),hl
  94+ 7FE8 18 13            jr 6F
  95+ 7FEA
  96+ 7FEA              ; Entidad o Amadeus ?
  97+ 7FEA
  98+ 7FEA 3A E1 88     5 ld a,(Ctrl_0)
  99+ 7FED CB 77            bit 6,a
 100+ 7FEF 28 09            jr z,8F
 101+ 7FF1
 102+ 7FF1 22 11 89         ld (End_Snapshot_Amadeus),hl
 103+ 7FF4 ED 7B 05 89      ld sp,(Stack)
 104+ 7FF8 FB               ei
 105+ 7FF9 C9               ret
 106+ 7FFA
 107+ 7FFA 22 0B 89     8 ld (Stack_snapshot),hl
 108+ 7FFD ED 7B 05 89  6 ld sp,(Stack)
 109+ 8001
 110+ 8001 FB               ei
 111+ 8002 C9               ret
 112+ 8003
 113+ 8003              ; -----------------------------------------------------------------------------
 114+ 8003              ;
 115+ 8003              ;   21/11/23
 116+ 8003
 117+ 8003              Limpia_y_reinicia_Stack_Snapshot
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos.
 120+ 8003
 121+ 8003 2A 0B 89         ld hl,(Stack_snapshot)
 122+ 8006 7D               ld a,l
 123+ 8007 A7               and a
 124+ 8008 C8               ret z   ;   Salimos si el álbum está vacío.
 125+ 8009
 126+ 8009 47               ld b,a
 127+ 800A 04               inc b
 128+ 800B
 129+ 800B 36 00        1 ld (hl),0
 130+ 800D 2D               dec l
 131+ 800E 10 FB            djnz 1B
 132+ 8010
 133+ 8010              ;   Reinicializa (Stack_snapshot).
 134+ 8010
 135+ 8010 AF               xor a
 136+ 8011 32 0B 89         ld (Stack_snapshot),a
 137+ 8014
 138+ 8014 C9               ret
# file closed: Guarda_foto_registros.asm
1533  8015
1534  8015              	SAVESNA "Pruebas.sna", START
1535  8015
1536  8015
1537  8015
1538  8015
# file closed: Banco_de_pruebas.asm
