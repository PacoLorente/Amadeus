# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD A0 8A     	call Frame
  15  A104
  16  A104 3A D1 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
 205+ 83E8
 206+ 83E8 EE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83EA 1E 84        	defw Explosion_2x3_2
 208+ 83EC 4E 84        	defw Explosion_2x3_3
 209+ 83EE
 210+ 83EE 0D ED E0 0D  Explosion_2x3_1 DEFB $0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 210+ 83F2 ED E0 0D ED
 211+ 83F6 E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 211+ 83FA 0D ED E0 0D
 212+ 83FE ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 212+ 8402 E0 0D ED E0
 213+ 8406 0D ED E0 0D  	DEFB	$0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 213+ 840A ED E0 0D ED
 214+ 840E E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 214+ 8412 0D ED E0 0D
 215+ 8416 ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 215+ 841A E0 0D ED E0
 216+ 841E
 217+ 841E 01 8F 80 01  Explosion_2x3_2 DEFB $01,$8f,$80,$01,$8f,$80,$01,$8f
 217+ 8422 8F 80 01 8F
 218+ 8426 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 218+ 842A 01 8F 80 01
 219+ 842E 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 219+ 8432 80 01 8F 80
 220+ 8436 01 8F 80 01  	DEFB	$01,$8f,$80,$01,$8f,$80,$01,$8f
 220+ 843A 8F 80 01 8F
 221+ 843E 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 221+ 8442 01 8F 80 01
 222+ 8446 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 222+ 844A 80 01 8F 80
 223+ 844E
 224+ 844E 01 11 10 01  Explosion_2x3_3 DEFB $01,$11,$10,$01,$11,$10,$01,$11
 224+ 8452 11 10 01 11
 225+ 8456 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 225+ 845A 01 11 10 01
 226+ 845E 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 226+ 8462 10 01 11 10
 227+ 8466 01 11 10 01  	DEFB	$01,$11,$10,$01,$11,$10,$01,$11
 227+ 846A 11 10 01 11
 228+ 846E 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 228+ 8472 01 11 10 01
 229+ 8476 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 229+ 847A 10 01 11 10
 230+ 847E
 231+ 847E              ; ------------------------------------------
 232+ 847E
 233+ 847E 84 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8480 A4 84        	defw Explosion_2x2_2
 235+ 8482 C4 84        	defw Explosion_2x2_3
 236+ 8484
 237+ 8484 DE DE DE DE  Explosion_2x2_1 DEFB $de,$de,$de,$de,$de,$de,$de,$de
 237+ 8488 DE DE DE DE
 238+ 848C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 238+ 8490 DE DE DE DE
 239+ 8494 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 239+ 8498 DE DE DE DE
 240+ 849C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 240+ 84A0 DE DE DE DE
 241+ 84A4
 242+ 84A4 DE DE DE DE  Explosion_2x2_2	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 242+ 84A8 DE DE DE DE
 243+ 84AC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 243+ 84B0 DE DE DE DE
 244+ 84B4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 244+ 84B8 DE DE DE DE
 245+ 84BC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 245+ 84C0 DE DE DE DE
 246+ 84C4
 247+ 84C4 DE DE DE DE  Explosion_2x2_3	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 247+ 84C8 DE DE DE DE
 248+ 84CC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 248+ 84D0 DE DE DE DE
 249+ 84D4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 249+ 84D8 DE DE DE DE
 250+ 84DC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 250+ 84E0 DE DE DE DE
 251+ 84E4
# file closed: Sprites_e_indices.asm
  23  84E4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84E4
   2+ 84E4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84E4
   4+ 84E4              ; 13/05/23
   5+ 84E4
   6+ 84E4              ; Control. %00000001 00000001
   7+ 84E4              ;
   8+ 84E4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84E4              ;                    _ hacen las entidades hacia abajo.
  10+ 84E4              ;
  11+ 84E4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84E4
  13+ 84E4 EA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84E6 F2 84        	defw Disparo_2A
  15+ 84E8 FA 84        	defw Disparo_3A
  16+ 84EA
  17+ 84EA 00 00        Disparo_1A defw 0									; Control.
  18+ 84EC 00 00        	defw 0											; Puntero objeto.
  19+ 84EE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F0 00 00        	defw 0											; Rutina de impresión.
  21+ 84F2
  22+ 84F2 00 00        Disparo_2A defw 0									; Control.
  23+ 84F4 00 00        	defw 0											; Puntero objeto.
  24+ 84F6 00 00        	defw 0											; Puntero de impresión.
  25+ 84F8 00 00        	defw 0											; Rutina de impresión.
  26+ 84FA
  27+ 84FA 00 00        Disparo_3A defw 0
  28+ 84FC
  29+ 84FC 12 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 84FE 1A 85        	defw Disparo_2
  31+ 8500 22 85        	defw Disparo_3
  32+ 8502 2A 85        	defw Disparo_4
  33+ 8504 32 85        	defw Disparo_5
  34+ 8506 3A 85        	defw Disparo_6
  35+ 8508 42 85        	defw Disparo_7
  36+ 850A 4A 85        	defw Disparo_8
  37+ 850C 52 85        	defw Disparo_9
  38+ 850E 5A 85        	defw Disparo_10
  39+ 8510 62 85        	defw Disparo_11
  40+ 8512
  41+ 8512 00 00        Disparo_1 defw 0									; Control.
  42+ 8514 00 00        	defw 0											; Puntero objeto.
  43+ 8516 00 00        	defw 0											; Puntero de impresión.
  44+ 8518 00 00        	defw 0											; Rutina de impresión.
  45+ 851A
  46+ 851A 00 00        Disparo_2 defw 0									; Control.
  47+ 851C 00 00        	defw 0											; Puntero objeto.
  48+ 851E 00 00        	defw 0											; Puntero de impresión.
  49+ 8520 00 00        	defw 0											; Rutina de impresión.
  50+ 8522
  51+ 8522 00 00        Disparo_3 defw 0									; Control.
  52+ 8524 00 00        	defw 0											; Puntero objeto.
  53+ 8526 00 00        	defw 0											; Puntero de impresión.
  54+ 8528 00 00        	defw 0											; Rutina de impresión.
  55+ 852A
  56+ 852A 00 00        Disparo_4 defw 0									; Control.
  57+ 852C 00 00        	defw 0											; Puntero objeto.
  58+ 852E 00 00        	defw 0											; Puntero de impresión.
  59+ 8530 00 00        	defw 0											; Rutina de impresión.
  60+ 8532
  61+ 8532 00 00        Disparo_5 defw 0									; Control.
  62+ 8534 00 00        	defw 0											; Puntero objeto.
  63+ 8536 00 00        	defw 0											; Puntero de impresión.
  64+ 8538 00 00        	defw 0											; Rutina de impresión.
  65+ 853A
  66+ 853A 00 00        Disparo_6 defw 0									; Control.
  67+ 853C 00 00        	defw 0											; Puntero objeto.
  68+ 853E 00 00        	defw 0											; Puntero de impresión.
  69+ 8540 00 00        	defw 0											; Rutina de impresión.
  70+ 8542
  71+ 8542 00 00        Disparo_7 defw 0									; Control.
  72+ 8544 00 00        	defw 0											; Puntero objeto.
  73+ 8546 00 00        	defw 0											; Puntero de impresión.
  74+ 8548 00 00        	defw 0											; Rutina de impresión.
  75+ 854A
  76+ 854A 00 00        Disparo_8 defw 0									; Control.
  77+ 854C 00 00        	defw 0											; Puntero objeto.
  78+ 854E 00 00        	defw 0											; Puntero de impresión.
  79+ 8550 00 00        	defw 0											; Rutina de impresión.
  80+ 8552
  81+ 8552 00 00        Disparo_9 defw 0									; Control.
  82+ 8554 00 00        	defw 0											; Puntero objeto.
  83+ 8556 00 00        	defw 0											; Puntero de impresión.
  84+ 8558 00 00        	defw 0											; Rutina de impresión.
  85+ 855A
  86+ 855A 00 00        Disparo_10 defw 0									; Control.
  87+ 855C 00 00        	defw 0											; Puntero objeto.
  88+ 855E 00 00        	defw 0											; Puntero de impresión.
  89+ 8560 00 00        	defw 0											; Rutina de impresión.
  90+ 8562
  91+ 8562 00 00        Disparo_11 defw 0
  92+ 8564
  93+ 8564              ; -------------------------------------------------------------------------------------
  94+ 8564
  95+ 8564              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8564
  97+ 8564 BA 85        	defw Caja_1
  98+ 8566 F8 85        	defw Caja_2
  99+ 8568 36 86        	defw Caja_3
 100+ 856A 74 86        	defw Caja_4
 101+ 856C B2 86        	defw Caja_5
 102+ 856E F0 86        	defw Caja_6
 103+ 8570 2E 87        	defw Caja_7
 104+ 8572 6C 87        	defw Caja_8
 105+ 8574 AA 87        	defw Caja_9
 106+ 8576 E8 87        	defw Caja_10
 107+ 8578              ;	...
 108+ 8578              ;	...
 109+ 8578              ;	+ entidades ...
 110+ 8578 00 00        	defw 0
 111+ 857A 00 00        	defw 0
 112+ 857C
 113+ 857C              ; ---------- ---------- ---------- ---------- ----------
 114+ 857C
 115+ 857C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 857E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8580 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8582 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8585
 120+ 8585 05           	db %00000101									; (Attr).
 121+ 8586 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8588 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 858A
 124+ 858A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 858C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 858E
 127+ 858E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8590 04           	db 4 											; (Cuad_objeto).
 129+ 8591 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8595
 131+ 8595 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 8596
 133+ 8596 00 00        	db 0,0											; Variables_de_borrado
 134+ 8598 00 00        	defw 0											;	" " " " " " "
 135+ 859A 00 00        	defw 0											;	" " " " " " "
 136+ 859C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A0
 138+ 85A0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00        	defw 0											;	" " " " " " "
 141+ 85A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85AA
 143+ 85AA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85AD
 145+ 85AD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85B4
 148+ 85B4 00           	db 0 											; (Columnas).
 149+ 85B5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85BA
 152+ 85BA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85BA
 154+ 85BA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85BC 00 00        	defw 0											; (Posicion_actual).
 156+ 85BE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85C3
 159+ 85C3 00           	db %00000000 									; (Attr).
 160+ 85C4
 161+ 85C4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85C6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85CC
 166+ 85CC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85CE 00           	db 0											; (Cuad_objeto).
 168+ 85CF
 169+ 85CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85D3
 171+ 85D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85D4
 173+ 85D4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85D6 00 00        	defw 0											;	" " " " " " "
 175+ 85D8 00 00        	defw 0											;	" " " " " " "
 176+ 85DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85DE
 178+ 85DE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85E0 00 00        	defw 0											;	" " " " " " "
 180+ 85E2 00 00        	defw 0											;	" " " " " " "
 181+ 85E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85E8
 183+ 85E8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85EB
 185+ 85EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 85F2
 188+ 85F2 00           	db 0 											; (Columnas).
 189+ 85F3 00 00        	defw 0											; (Limite_horizontal).
 190+ 85F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 191+ 85F8
 192+ 85F8              ; ---------- ---------- ---------- ---------- ----------
 193+ 85F8
 194+ 85F8 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 85FA 00 00        	defw 0											; (Posicion_actual).
 196+ 85FC 00 00        	defw 0 											; (Puntero_objeto).
 197+ 85FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8601
 199+ 8601 00           	db %00000000 									; (Attr).
 200+ 8602
 201+ 8602 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8604 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8606 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 8608 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Posicion_inicio).
 207+ 860C 00           	db 0											; (Cuad_objeto).
 208+ 860D
 209+ 860D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8611
 211+ 8611 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8612
 213+ 8612 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8614 00 00        	defw 0											;	" " " " " " "
 215+ 8616 00 00        	defw 0											;	" " " " " " "
 216+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 861C
 218+ 861C 00 00        	db 0,0											; Variables_de_pintado
 219+ 861E 00 00        	defw 0											;	" " " " " " "
 220+ 8620 00 00        	defw 0											;	" " " " " " "
 221+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8626
 223+ 8626 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 8629
 225+ 8629 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 862D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8630
 228+ 8630 00           	db 0 											; (Columnas).
 229+ 8631 00 00        	defw 0											; (Limite_horizontal).
 230+ 8633 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 8636
 232+ 8636              ; ---------- ---------- ---------- ---------- ----------
 233+ 8636
 234+ 8636 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8638 00 00        	defw 0											; (Posicion_actual).
 236+ 863A 00 00        	defw 0 											; (Puntero_objeto).
 237+ 863C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 863F
 239+ 863F 00           	db %00000000 									; (Attr).
 240+ 8640
 241+ 8640 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8642 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8644 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8646 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8648
 246+ 8648 00 00        	defw 0											; (Posicion_inicio).
 247+ 864A 00           	db 0											; (Cuad_objeto).
 248+ 864B
 249+ 864B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 864F
 251+ 864F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8650
 253+ 8650 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8652 00 00        	defw 0											;	" " " " " " "
 255+ 8654 00 00        	defw 0											;	" " " " " " "
 256+ 8656 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 865A
 258+ 865A 00 00        	db 0,0											; Variables_de_pintado
 259+ 865C 00 00        	defw 0											;	" " " " " " "
 260+ 865E 00 00        	defw 0											;	" " " " " " "
 261+ 8660 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8664
 263+ 8664 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8667
 265+ 8667 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 866B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 866E
 268+ 866E 00           	db 0 											; (Columnas).
 269+ 866F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8671 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 271+ 8674
 272+ 8674              ; ---------- ---------- ---------- ---------- ----------
 273+ 8674
 274+ 8674 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8676 00 00        	defw 0											; (Posicion_actual).
 276+ 8678 00 00        	defw 0 											; (Puntero_objeto).
 277+ 867A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 867D
 279+ 867D 00           	db %00000000 									; (Attr).
 280+ 867E
 281+ 867E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8680 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8682 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8684 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8686
 286+ 8686 00 00        	defw 0											; (Posicion_inicio).
 287+ 8688 00           	db 0											; (Cuad_objeto).
 288+ 8689
 289+ 8689 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 868D
 291+ 868D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 868E
 293+ 868E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8690 00 00        	defw 0											;	" " " " " " "
 295+ 8692 00 00        	defw 0											;	" " " " " " "
 296+ 8694 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8698
 298+ 8698 00 00        	db 0,0											; Variables_de_pintado
 299+ 869A 00 00        	defw 0											;	" " " " " " "
 300+ 869C 00 00        	defw 0											;	" " " " " " "
 301+ 869E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 86A2
 303+ 86A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 86A5
 305+ 86A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 86A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 86AC
 308+ 86AC 00           	db 0 											; (Columnas).
 309+ 86AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 86AF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86B2
 312+ 86B2              ; ---------- ---------- ---------- ---------- ----------
 313+ 86B2
 314+ 86B2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86B4 00 00        	defw 0											; (Posicion_actual).
 316+ 86B6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86BB
 319+ 86BB 00           	db %00000000 									; (Attr).
 320+ 86BC
 321+ 86BC 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86BE 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86C4
 326+ 86C4 00 00        	defw 0											; (Posicion_inicio).
 327+ 86C6 00           	db 0											; (Cuad_objeto).
 328+ 86C7
 329+ 86C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86CB
 331+ 86CB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86CC
 333+ 86CC 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 86CE 00 00        	defw 0											;	" " " " " " "
 335+ 86D0 00 00        	defw 0											;	" " " " " " "
 336+ 86D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 86D6
 338+ 86D6 00 00        	db 0,0											; Variables_de_pintado
 339+ 86D8 00 00        	defw 0											;	" " " " " " "
 340+ 86DA 00 00        	defw 0											;	" " " " " " "
 341+ 86DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 86E0
 343+ 86E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 86E3
 345+ 86E3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86EA
 348+ 86EA 00           	db 0 											; (Columnas).
 349+ 86EB 00 00        	defw 0											; (Limite_horizontal).
 350+ 86ED 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 351+ 86F0
 352+ 86F0              ; ---------- ---------- ---------- ---------- ----------
 353+ 86F0
 354+ 86F0 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 86F2 00 00        	defw 0											; (Posicion_actual).
 356+ 86F4 00 00        	defw 0 											; (Puntero_objeto).
 357+ 86F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 86F9
 359+ 86F9 00           	db %00000000 									; (Attr).
 360+ 86FA
 361+ 86FA 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 86FC 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 86FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 8700 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8702
 366+ 8702 00 00        	defw 0											; (Posicion_inicio).
 367+ 8704 00           	db 0											; (Cuad_objeto).
 368+ 8705
 369+ 8705 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8709
 371+ 8709 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 870A
 373+ 870A 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 870C 00 00        	defw 0											;	" " " " " " "
 375+ 870E 00 00        	defw 0											;	" " " " " " "
 376+ 8710 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8714
 378+ 8714 00 00        	db 0,0											; Variables_de_pintado
 379+ 8716 00 00        	defw 0											;	" " " " " " "
 380+ 8718 00 00        	defw 0											;	" " " " " " "
 381+ 871A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 871E
 383+ 871E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 8721
 385+ 8721 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8725 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8728
 388+ 8728 00           	db 0 											; (Columnas).
 389+ 8729 00 00        	defw 0											; (Limite_horizontal).
 390+ 872B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 391+ 872E
 392+ 872E              ; ---------- ---------- ---------- ---------- ----------
 393+ 872E
 394+ 872E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 8730 00 00        	defw 0											; (Posicion_actual).
 396+ 8732 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8734 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8737
 399+ 8737 00           	db %00000000 									; (Attr).
 400+ 8738
 401+ 8738 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 873A 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 873C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 8740
 406+ 8740 00 00        	defw 0											; (Posicion_inicio).
 407+ 8742 00           	db 0											; (Cuad_objeto).
 408+ 8743
 409+ 8743 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8747
 411+ 8747 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8748
 413+ 8748 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 874A 00 00        	defw 0											;	" " " " " " "
 415+ 874C 00 00        	defw 0											;	" " " " " " "
 416+ 874E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8752
 418+ 8752 00 00        	db 0,0											; Variables_de_pintado
 419+ 8754 00 00        	defw 0											;	" " " " " " "
 420+ 8756 00 00        	defw 0											;	" " " " " " "
 421+ 8758 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 875C
 423+ 875C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 875F
 425+ 875F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8763 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8766
 428+ 8766 00           	db 0 											; (Columnas).
 429+ 8767 00 00        	defw 0											; (Limite_horizontal).
 430+ 8769 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 431+ 876C
 432+ 876C              ; ---------- ---------- ---------- ---------- ----------
 433+ 876C
 434+ 876C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 876E 00 00        	defw 0											; (Posicion_actual).
 436+ 8770 00 00        	defw 0 											; (Puntero_objeto).
 437+ 8772 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8775
 439+ 8775 00           	db %00000000 									; (Attr).
 440+ 8776
 441+ 8776 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8778 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 877A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 877C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 877E
 446+ 877E 00 00        	defw 0											; (Posicion_inicio).
 447+ 8780 00           	db 0											; (Cuad_objeto).
 448+ 8781
 449+ 8781 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8785
 451+ 8785 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8786
 453+ 8786 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8788 00 00        	defw 0											;	" " " " " " "
 455+ 878A 00 00        	defw 0											;	" " " " " " "
 456+ 878C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 8790
 458+ 8790 00 00        	db 0,0											; Variables_de_pintado
 459+ 8792 00 00        	defw 0											;	" " " " " " "
 460+ 8794 00 00        	defw 0											;	" " " " " " "
 461+ 8796 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 879A
 463+ 879A 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 879D
 465+ 879D 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 87A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 87A4
 468+ 87A4 00           	db 0 											; (Columnas).
 469+ 87A5 00 00        	defw 0											; (Limite_horizontal).
 470+ 87A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 471+ 87AA
 472+ 87AA              ; ---------- ---------- ---------- ---------- ----------
 473+ 87AA
 474+ 87AA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 87AC 00 00        	defw 0											; (Posicion_actual).
 476+ 87AE 00 00        	defw 0 											; (Puntero_objeto).
 477+ 87B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 87B3
 479+ 87B3 00           	db %00000000 									; (Attr).
 480+ 87B4
 481+ 87B4 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 87B6 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 87B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 87BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 87BC
 486+ 87BC 00 00        	defw 0											; (Posicion_inicio).
 487+ 87BE 00           	db 0											; (Cuad_objeto).
 488+ 87BF
 489+ 87BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 87C3
 491+ 87C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 87C4
 493+ 87C4 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 87C6 00 00        	defw 0											;	" " " " " " "
 495+ 87C8 00 00        	defw 0											;	" " " " " " "
 496+ 87CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 87CE
 498+ 87CE 00 00        	db 0,0											; Variables_de_pintado
 499+ 87D0 00 00        	defw 0											;	" " " " " " "
 500+ 87D2 00 00        	defw 0											;	" " " " " " "
 501+ 87D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 87D8
 503+ 87D8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 87DB
 505+ 87DB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 87DF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 87E2
 508+ 87E2 00           	db 0 											; (Columnas).
 509+ 87E3 00 00        	defw 0											; (Limite_horizontal).
 510+ 87E5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 511+ 87E8
 512+ 87E8              ; ---------- ---------- ---------- ---------- ----------
 513+ 87E8
 514+ 87E8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87EA 00 00        	defw 0											; (Posicion_actual).
 516+ 87EC 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 87F1
 519+ 87F1 00           	db %00000000 									; (Attr).
 520+ 87F2
 521+ 87F2 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 87F4 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 87F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 87F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 87FA
 526+ 87FA 00 00        	defw 0											; (Posicion_inicio).
 527+ 87FC 00           	db 0											; (Cuad_objeto).
 528+ 87FD
 529+ 87FD 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 8801
 531+ 8801 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 8802
 533+ 8802 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 8804 00 00        	defw 0											;	" " " " " " "
 535+ 8806 00 00        	defw 0											;	" " " " " " "
 536+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 880C
 538+ 880C 00 00        	db 0,0											; Variables_de_pintado
 539+ 880E 00 00        	defw 0											;	" " " " " " "
 540+ 8810 00 00        	defw 0											;	" " " " " " "
 541+ 8812 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8816
 543+ 8816 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8819
 545+ 8819 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 881D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 8820
 548+ 8820 00           	db 0 											; (Columnas).
 549+ 8821 00 00        	defw 0											; (Limite_horizontal).
 550+ 8823 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8826
 552+ 8826              ; -------------------------------------------------------------------------------------
 553+ 8826              ;
 554+ 8826              ;	20/05/23
 555+ 8826              ;
 556+ 8826              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 8826              ;
 558+ 8826              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 8826              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 8826              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 8826              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 8826
 563+ 8826              Indice_de_entidades
 564+ 8826
 565+ 8826 30 88        	defw Entidad_1
 566+ 8828 40 88        	defw Entidad_2
 567+ 882A 50 88        	defw Entidad_3
 568+ 882C 60 88        	defw Entidad_4
 569+ 882E 70 88        	defw Entidad_5
 570+ 8830
 571+ 8830              ;	BADSAT, (Satélite malvado).
 572+ 8830
 573+ 8830 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 8832 04           	db %00000100									; (Attr).
 575+ 8833 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 8835 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 8837 60 47        	defw $4760	                             	    ; (Posicion_inicio).
 578+ 8839 01           	db 1											; (Cuad_objeto).
 579+ 883A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 883E 29 9C        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 581+ 8840
 582+ 8840 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 8842 02           	db %00000010									; (Attr).
 584+ 8843 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 8845 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8847 5F 48        	defw $485f                                      ; (Posicion_inicio).
 587+ 8849 01           	db 1											; (Cuad_objeto).
 588+ 884A 01 01 01 02  	db 1,1,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 884E 27 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 590+ 8850
 591+ 8850 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 8852 04           	db %00000100									; (Attr).
 593+ 8853 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 8855 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8857 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8859 01           	db 1											; (Cuad_objeto).
 597+ 885A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 885E 1B 9C        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 599+ 8860
 600+ 8860 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 8862 01           	db %00000001									; (Attr).
 602+ 8863 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 8865 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8867 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8869 01           	db 1											; (Cuad_objeto).
 606+ 886A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 886E 27 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 8870
 609+ 8870 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 8872 01           	db %00000001									; (Attr).
 611+ 8873 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 8875 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8877 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8879 01           	db 1											; (Cuad_objeto).
 615+ 887A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 887E 1D 9C        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
 617+ 8880
# file closed: Cajas_y_disparos.asm
  24  8880              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8880              ; 13/05/23
   2+ 8880
   3+ 8880              Indice_de_niveles
   4+ 8880
   5+ 8880 8E 88        	defw Nivel_1
   6+ 8882 99 88        	defw Nivel_2
   7+ 8884 A6 88        	defw Nivel_3
   8+ 8886 B6 88        	defw Nivel_4
   9+ 8888 C8 88        	defw Nivel_5
  10+ 888A
  11+ 888A              ;	...
  12+ 888A              ;	...
  13+ 888A              ;	+ Niveles ...
  14+ 888A
  15+ 888A 00 00        	defw 0
  16+ 888C 00 00        	defw 0
  17+ 888E
  18+ 888E 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 888F 01 02 03 04  	db 1,2,3,4,5
  19+ 8893 05
  20+ 8894 01 02 03 04  	db 1,2,3,4,5
  20+ 8898 05
  21+ 8899 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 889A 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 889E 01 02
  23+ 88A0 02 01 01 01  	db 2,1,1,1,1,2
  23+ 88A4 01 02
  24+ 88A6 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 88A7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 88AB 01
  26+ 88AC 03 01 01 01  	db 3,1,1,1,1
  26+ 88B0 01
  27+ 88B1 03 01 01 01  	db 3,1,1,1,1
  27+ 88B5 01
  28+ 88B6 11           Nivel_4 db 17									; Nº de entidades.
  29+ 88B7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 88BB 01
  30+ 88BC 04 01 01 01  	db 4,1,1,1,1
  30+ 88C0 01
  31+ 88C1 04 01 01 01  	db 4,1,1,1,1
  31+ 88C5 01
  32+ 88C6 02 03        	db 2,3
  33+ 88C8 14           Nivel_5 db 20									; Nº de entidades.
  34+ 88C9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88CD 01
  35+ 88CE 05 01 01 01  	db 5,1,1,1,1
  35+ 88D2 01
  36+ 88D3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 88D7 01
  37+ 88D8 05 01 01 01  	db 5,1,1,1,1
  37+ 88DC 01
  38+ 88DD
  39+ 88DD              ;---------------------------------------------------------------------------------------------------------------
  40+ 88DD              ;
  41+ 88DD              ;   21/5/23
  42+ 88DD              ;
  43+ 88DD              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 88DD              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 88DD              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 88DD              ;	_en la caja DRAW correspondiente.
  47+ 88DD              ;
  48+ 88DD              ;	MODIFICA: HL,DE y A.
  49+ 88DD              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 88DD
  51+ 88DD              Inicializa_Punteros_de_nivel
  52+ 88DD
  53+ 88DD 21 80 88     	ld hl,Indice_de_niveles
  54+ 88E0 22 07 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 88E3 CD 01 8D     	call Extrae_address
  56+ 88E6 7E           	ld a,(hl)
  57+ 88E7 32 DA 89     	ld (Numero_de_entidades),a
  58+ 88EA 23           	inc hl
  59+ 88EB 22 09 8A     	ld (Datos_de_nivel),hl
  60+ 88EE C9           	ret
  61+ 88EF
  62+ 88EF              ;---------------------------------------------------------------------------------------------------------------
  63+ 88EF              ;
  64+ 88EF              ;   13/5/23
  65+ 88EF              ;
  66+ 88EF              ;	Destruye A,BC,HL,DE
  67+ 88EF
  68+ 88EF              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 88EF              ;	_del juego.
  70+ 88EF
  71+ 88EF              Prepara_cajas
  72+ 88EF
  73+ 88EF              ; Preparamos los punteros de las cajas.
  74+ 88EF
  75+ 88EF 21 64 85     	ld hl,Indice_de_cajas
  76+ 88F2 CD 01 8D     	call Extrae_address
  77+ 88F5 CD 32 89     	call Avanza_caja
  78+ 88F8
  79+ 88F8 CD 76 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 88FB
  81+ 88FB 2A 09 8A     	ld hl,(Datos_de_nivel)
  82+ 88FE
  83+ 88FE              ; HL está en los datos del nivel correspondiente.
  84+ 88FE              ; B actuará como contador de cajas.
  85+ 88FE
  86+ 88FE C5           1 push bc
  87+ 88FF
  88+ 88FF 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 8900 CD 23 89     	call PreparaBC
  90+ 8903
  91+ 8903 21 26 88     	ld hl,Indice_de_entidades
  92+ 8906 CD 2B 89     	call SBC_HL_con_BC_y_Extrae
  93+ 8909 22 E0 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 890C
  95+ 890C CD 3C 89     	call Datos_de_entidad_a_caja
  96+ 890F
  97+ 890F 2A D8 89     	ld hl,(Indice_restore_caja)
  98+ 8912 CD 01 8D     	call Extrae_address
  99+ 8915 CD 32 89     	call Avanza_caja
 100+ 8918
 101+ 8918 2A 09 8A     	ld hl,(Datos_de_nivel)
 102+ 891B 23           	inc hl
 103+ 891C 22 09 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 891F
 105+ 891F C1           	pop bc
 106+ 8920 10 DC        	djnz 1B
 107+ 8922 C9           	ret
 108+ 8923
 109+ 8923 CB 27        PreparaBC sla a
 110+ 8925 D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 8927 4F           	ld c,a
 112+ 8928 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 892A C9           	ret
 114+ 892B
 115+ 892B A7           SBC_HL_con_BC_y_Extrae and a
 116+ 892C ED 4A        	adc hl,bc
 117+ 892E CD 01 8D     	call Extrae_address
 118+ 8931 C9           	ret
 119+ 8932
 120+ 8932 22 D4 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 8935 13           	inc de
 122+ 8936 13           	inc de
 123+ 8937 EB           	ex de,hl
 124+ 8938 22 D8 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 893B C9           	ret
 126+ 893C
 127+ 893C              Datos_de_entidad_a_caja
 128+ 893C
 129+ 893C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 893C
 131+ 893C
 132+ 893C ED 5B D4 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 133+ 8940
 134+ 8940 01 02 00     	ld bc,2
 135+ 8943 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 136+ 8945
 137+ 8945 01 07 00     	ld bc,7
 138+ 8948 CD 70 89     	call Situa_DE
 139+ 894B
 140+ 894B 01 05 00     	ld bc,5
 141+ 894E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 142+ 8950
 143+ 8950 01 04 00     	ld bc,4
 144+ 8953 CD 70 89     	call Situa_DE
 145+ 8956
 146+ 8956 01 07 00     	ld bc,7
 147+ 8959 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 148+ 895B
 149+ 895B 01 18 00     	ld bc,24
 150+ 895E CD 70 89     	call Situa_DE
 151+ 8961
 152+ 8961 01 02 00     	ld bc,2
 153+ 8964 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 154+ 8966
 155+ 8966 01 0A 00     	ld bc,10
 156+ 8969 CD 70 89     	call Situa_DE
 157+ 896C
 158+ 896C 3E 03        	ld a,3
 159+ 896E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 160+ 896F
 161+ 896F C9           	ret
 162+ 8970
 163+ 8970 EB           Situa_DE ex de,hl
 164+ 8971 A7           	and a
 165+ 8972 ED 4A        	adc hl,bc
 166+ 8974 EB           	ex de,hl
 167+ 8975 C9           	ret
 168+ 8976
 169+ 8976              ;---------------------------------------------------------------------------------------------------------------
 170+ 8976              ;
 171+ 8976              ;	21/5/23
 172+ 8976              ;
 173+ 8976              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 174+ 8976              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 175+ 8976              ;
 176+ 8976              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 177+ 8976              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 178+ 8976              ;	_ total de entidades que contiene (Numero_de_entidades).
 179+ 8976              ;
 180+ 8976              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 181+ 8976              ;	MODIFICA: A y B.
 182+ 8976              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 183+ 8976
 184+ 8976              Admin_num_entidades
 185+ 8976
 186+ 8976              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 187+ 8976
 188+ 8976 3A DA 89     	ld a,(Numero_de_entidades)
 189+ 8979 A7           	and a
 190+ 897A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 191+ 897A              ;	jr z,$
 192+ 897A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 897A
 194+ 897A 20 03        	jr nz,3F
 195+ 897C
 196+ 897C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 197+ 897C
 198+ 897C CD DD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 199+ 897F
 200+ 897F
 201+ 897F 3A DA 89     3 ld a,(Numero_de_entidades)
 202+ 8982 FE 0A        	cp 10
 203+ 8984 38 08        	jr c,1F
 204+ 8986
 205+ 8986              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 8986              ; Actualizamos variables.
 207+ 8986
 208+ 8986 3E 0A        	ld a,10
 209+ 8988 32 DB 89     	ld (Numero_parcial_de_entidades),a
 210+ 898B 47           	ld b,a
 211+ 898C 18 04        	jr 2F
 212+ 898E
 213+ 898E              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 898E              ; (Numero_de_entidades)="0".
 215+ 898E
 216+ 898E 32 DB 89     1 ld (Numero_parcial_de_entidades),a
 217+ 8991 47           	ld b,a
 218+ 8992 C9           2 ret
# file closed: Niveles.asm
  25  8993
  26  8993              ; ******************************************************************************************************************************************************************************************
  27  8993              ; Constantes.
  28  8993              ; ******************************************************************************************************************************************************************************************
  29  8993              ;
  30  8993              ; 25/05/23
  31  8993              ;
  32  8993              ; Constantes generales.
  33  8993              ;
  34  8993
  35  8993              Sprite_vacio equ $f000
  36  8993              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  8993              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  8993              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  8993              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  8993
  41  8993              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  8993              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  8993              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  8993              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  8993              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  8993              ;                               				        ; De momento situamos este almacén en $7060.
  47  8993
  48  8993              ; ******************************************************************************************************************************************************************************************
  49  8993              ; Variables.
  50  8993              ; ******************************************************************************************************************************************************************************************
  51  8993              ;
  52  8993              ; 30/05/23
  53  8993              ;
  54  8993              ; Variables de DRAW. (Motor principal).
  55  8993              ;
  56  8993              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  8993
  58  8993 00           Filas db 0												; Filas. [DRAW]
  59  8994 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  8995 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  8997 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  8999 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  899A 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  899B
  65  899B              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  899B
  67  899B 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  899C              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  899C              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  899C 00           Attr db 0												; Atributos de la entidad:
  71  899D
  72  899D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  899D              ;
  74  899D              ;	COLORES: 0 ..... NEGRO
  75  899D              ;    		 1 ..... AZUL
  76  899D              ; 			 2 ..... ROJO
  77  899D              ;			 3 ..... MAGENTA
  78  899D              ; 			 4 ..... VERDE
  79  899D              ; 			 5 ..... CIAN
  80  899D              ;			 6 ..... AMARILLO
  81  899D              ; 			 7 ..... BLANCO
  82  899D
  83  899D 00 00        Indice_Sprite_der defw 0
  84  899F 00 00        Indice_Sprite_izq defw 0
  85  89A1 00 00        Puntero_DESPLZ_der defw 0
  86  89A3 00 00        Puntero_DESPLZ_izq defw 0
  87  89A5
  88  89A5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89A7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89A8
  91  89A8              ; Variables de objeto. (Características).
  92  89A8
  93  89A8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89A9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89AA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89AB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89AC
  98  89AC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89AD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89AD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89AD
 102  89AD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89AF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89B1 00 00        	defw 0
 105  89B3 00 00 00 00  	db 0,0,0,0
 106  89B7
 107  89B7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89B9 00 00        	defw 0
 109  89BB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89BD 00 00 00 00  	db 0,0,0,0
 111  89C1
 112  89C1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89C1
 114  89C1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89C2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89C2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89C2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89C2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89C2              ;
 120  89C2              ; 														DESCRIPCIÖN:
 121  89C2              ;
 122  89C2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89C2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89C2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89C2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89C2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89C2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89C2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89C2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89C2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89C2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89C2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89C2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89C2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89C2              ;
 136  89C2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89C2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89C2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89C2
 140  89C2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89C3
 142  89C3              ; Movimiento.
 143  89C3
 144  89C3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89C4 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89C6 00 00        Puntero_mov defw 0
 147  89C8 00           Contador_db_mov db 0
 148  89C9 00           Incrementa_puntero db 0
 149  89CA 00           Repetimos_db db 0
 150  89CB
 151  89CB              ; Variables de funcionamiento. [DRAW].
 152  89CB
 153  89CB 00           Columnas db 0
 154  89CC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89CE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89CE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89CF
 158  89CF              ; variables de control general.
 159  89CF
 160  89CF 00           Ctrl_2 db 0
 161  89D0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89D0              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89D0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89D0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89D0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89D0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89D0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89D0              ;
 169  89D0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89D0
 171  89D0 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89D1
 173  89D1              ; 62 Bytes por entidad.
 174  89D1              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89D1              ;					         		---------;      ;---------
 176  89D1
 177  89D1
 178  89D1              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89D1
 180  89D1 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89D2
 182  89D2              ;														DESCRIPCIÓN:
 183  89D2              ;
 184  89D2              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89D2              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89D2              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89D2              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89D2              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89D2              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89D2              ;														BIT 3, .............
 191  89D2              ;														BIT 4, .............
 192  89D2
 193  89D2 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89D4              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89D4              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89D4              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89D4
 198  89D4
 199  89D4
 200  89D4              ; Gestión de ENTIDADES y CAJAS.
 201  89D4
 202  89D4              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89D4 00 00        Puntero_store_caja defw 0
 204  89D6 00 00        Puntero_restore_caja defw 0
 205  89D8 00 00        Indice_restore_caja defw 0
 206  89DA 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  89DB 00           Numero_parcial_de_entidades db 0
 208  89DC 00           Entidades_en_curso db 0									; ..... ..... .....
 209  89DD 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  89DE              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  89DE              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  89DE              ;														; _ (Numero_de_malotes)="0".
 213  89DE 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  89E0 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  89E2              ;														; _ puntero (Indice_entidades).
 216  89E2
 217  89E2
 218  89E2              ;---------------------------------------------------------------------------------------------------------------
 219  89E2              ;
 220  89E2              ; Sirven para PINTAR.
 221  89E2
 222  89E2 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  89E4              ;														; _variable para almacenar lo posición del puntero_
 224  89E4              ; 														; _de pila, SP.
 225  89E4 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  89E6              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  89E6 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  89E8              ;														; _el snapshot de los registros de la siguiente entidad.
 229  89E8              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  89E8 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  89EA              ;														; _el snapshot de los registros del siguiente disparo.
 232  89EA              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  89EA
 234  89EA              ;---------------------------------------------------------------------------------------------------------------
 235  89EA
 236  89EA              ; Gestión de Disparos.
 237  89EA
 238  89EA 00           Numero_de_disparotes db 0
 239  89EB 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  89ED 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  89EF 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  89F0              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  89F0              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  89F0 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  89F2              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  89F2              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  89F2              ;														; _produzca colisión.
 248  89F2 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  89F4              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  89F4 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  89F7              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  89F7 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  89FA              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  89FA              ;---------------------------------------------------------------------------------------------------------------
 255  89FA
 256  89FA              ; Relojes y temporizaciones.
 257  89FA
 258  89FA 00           Contador_de_frames db 0
 259  89FB 00           Secundero db 0
 260  89FC 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 261  89FD              ;														; Repite la oleada de entidades.
 262  89FD 01           Habilita_disparo_Amadeus db 1
 263  89FE 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 264  89FF 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 265  8A00
 266  8A00 01           Habilita_disparo_entidad db 1
 267  8A01 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 268  8A02 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 269  8A03
 270  8A03              ;---------------------------------------------------------------------------------------------------------------
 271  8A03
 272  8A03              ; Gestión de FRAMES.
 273  8A03
 274  8A03 00           Switch db 0
 275  8A04
 276  8A04              ; Variables de Raster y localización en pantalla.
 277  8A04
 278  8A04 00 FF        Temp_Raster defw $ff00
 279  8A06
 280  8A06              ;---------------------------------------------------------------------------------------------------------------
 281  8A06
 282  8A06              ; Gestión de NIVELES.
 283  8A06
 284  8A06 00           Nivel db 0												 ; Nivel actual del juego.
 285  8A07 00 00        Puntero_indice_NIVELES defw 0
 286  8A09 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 287  8A0B              ; 														 ; _ que definen el NIVEL.
 288  8A0B
 289  8A0B
 290  8A0B              ; Y todo comienza aquí .....
 291  8A0B              ;
 292  8A0B              ; Rutina principal *************************************************************************************************************************************************************************
 293  8A0B              ;
 294  8A0B              ;	14/11/22
 295  8A0B
 296  8A0B              START
 297  8A0B
 298  8A0B 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 299  8A0E 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 300  8A10 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 301  8A12 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 302  8A14 F3           	DI
 303  8A15
 304  8A15 3E 07        	ld a,%00000111
 305  8A17 CD FD 97     	call Cls
 306  8A1A
 307  8A1A              ;	call Pinta_marco
 308  8A1A
 309  8A1A CD DD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 310  8A1D CD DA 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 311  8A20
 312  8A20 CD EF 88     4 call Prepara_cajas
 313  8A23
 314  8A23 CD AD 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 315  8A26              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 316  8A26 CD 8A 8D     	call Restore_entidad
 317  8A29
 318  8A29 21 DB 89     	ld hl,Numero_parcial_de_entidades
 319  8A2C 46           	ld b,(hl)
 320  8A2D 04           	inc b
 321  8A2E 05           	dec b
 322  8A2F 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 323  8A31
 324  8A31              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 325  8A31              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 326  8A31              ;	Pintamos el resto de entidades:
 327  8A31
 328  8A31              ;	INICIA ENTIDADES !!!!!
 329  8A31
 330  8A31 C5           1 push bc  												; Guardo el contador de entidades.
 331  8A32 CD 07 8D     	call Inicia_Puntero_objeto
 332  8A35 CD 11 98     	call Recompone_posicion_inicio
 333  8A38 CD 4D 92     	call Draw
 334  8A3B CD A0 7F     	call Guarda_foto_registros
 335  8A3E CD 4F 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 336  8A41 C1           	pop bc
 337  8A42 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 338  8A44
 339  8A44              ;	call Pinta_marco
 340  8A44
 341  8A44              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 342  8A44
 343  8A44 3A D1 89     	ld a,(Ctrl_1)
 344  8A47 CB 5F        	bit 3,a
 345  8A49 20 18        	jr nz,5F											; Loop
 346  8A4B
 347  8A4B              ; 	INICIA AMADEUS !!!!!
 348  8A4B
 349  8A4B CD B1 8D     3 call Restore_Amadeus
 350  8A4E CD 07 8D     	call Inicia_Puntero_objeto
 351  8A51 CD 4D 92     	call Draw
 352  8A54 CD A0 7F     	call Guarda_foto_registros
 353  8A57 11 7C 85     	ld de,Amadeus_db
 354  8A5A CD C3 8D     	call Store_Amadeus
 355  8A5D
 356  8A5D              ; 	INICIA DISPAROS !!!!!
 357  8A5D
 358  8A5D CD C3 8C     	call Inicia_Puntero_Disparo_Entidades
 359  8A60 CD CA 8C     	call Inicia_Puntero_Disparo_Amadeus
 360  8A63
 361  8A63              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 362  8A63
 363  8A63 CD AD 8C     5 call Inicia_punteros_de_cajas
 364  8A66 CD 8A 8D     	call Restore_entidad
 365  8A69
 366  8A69 3A D1 89     	ld a,(Ctrl_1)
 367  8A6C CB 5F        	bit 3,a
 368  8A6E 28 0A        	jr z,6F
 369  8A70
 370  8A70              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 371  8A70
 372  8A70 21 D1 89     	ld hl,Ctrl_1
 373  8A73 CB 9E        	res 3,(hl)
 374  8A75 CD D1 8C     	call Calcula_numero_de_malotes
 375  8A78 18 07        	jr 7F
 376  8A7A
 377  8A7A              ; ----------
 378  8A7A
 379  8A7A 3A DB 89     6 ld a,(Numero_parcial_de_entidades)
 380  8A7D 3C           	inc a
 381  8A7E 32 DD 89     	ld (Numero_de_malotes),a
 382  8A81
 383  8A81 AF           7 xor a
 384  8A82 FB           2 ei
 385  8A83 28 FD        	jr z,2B
 386  8A85
 387  8A85 3A FB 89     	ld a,(Secundero)
 388  8A88 47           	ld b,a
 389  8A89 3A FC 89     	ld a,(Activa_recarga_cajas)
 390  8A8C B8           	cp b
 391  8A8D 28 08        	jr z,8F
 392  8A8F
 393  8A8F 21 D1 89     	ld hl,Ctrl_1
 394  8A92 CB E6        	set 4,(hl)
 395  8A94 AF           	xor a
 396  8A95 18 EB        	jr 2B
 397  8A97
 398  8A97 21 D1 89     8 ld hl,Ctrl_1
 399  8A9A CB A6        	res 4,(hl)
 400  8A9C F3           	di
 401  8A9D
 402  8A9D C3 20 8A     	jp 4B
 403  8AA0
 404  8AA0              ; -----------------------------------------------------------------------------------
 405  8AA0
 406  8AA0              Frame
 407  8AA0
 408  8AA0              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 409  8AA0              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 410  8AA0
 411  8AA0              ; PINTAMOS.
 412  8AA0
 413  8AA0 3E 02            ld a,2
 414  8AA2 D3 FE            out ($fe),a
 415  8AA4 CD 51 95     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 416  8AA7 CD 8A 95     	call Extrae_foto_disparos
 417  8AAA 3E 01            ld a,1
 418  8AAC D3 FE            out ($fe),a
 419  8AAE
 420  8AAE
 421  8AAE              ;    jr $
 422  8AAE
 423  8AAE              ; ----------------------------------------------------------------------
 424  8AAE
 425  8AAE              ; RELOJES.
 426  8AAE
 427  8AAE 21 FA 89     	ld hl,Contador_de_frames
 428  8AB1 34           	inc (hl)											; 0 - 255
 429  8AB2
 430  8AB2 3E 3C        	ld a,60
 431  8AB4 BE           	cp (hl)
 432  8AB5 20 22        	jr nz,13F
 433  8AB7
 434  8AB7 36 00        	ld (hl),0
 435  8AB9
 436  8AB9 21 FB 89     	ld hl,Secundero
 437  8ABC 34           	inc (hl)
 438  8ABD
 439  8ABD 7E           	ld a,(hl)
 440  8ABE E6 01        	and %00000001
 441  8AC0 20 10        	jr nz,20F
 442  8AC2
 443  8AC2 3A DB 89     	ld a,(Numero_parcial_de_entidades)
 444  8AC5 47           	ld b,a
 445  8AC6 3A DC 89     	ld a,(Entidades_en_curso)
 446  8AC9 B8           	cp b
 447  8ACA 28 06        	jr z,20F
 448  8ACC 30 04        	jr nc,20F
 449  8ACE
 450  8ACE 3C           	inc a
 451  8ACF 32 DC 89     	ld (Entidades_en_curso),a
 452  8AD2
 453  8AD2 3E 3C        20 ld a,60
 454  8AD4 BE           	cp (hl)
 455  8AD5 20 02        	jr nz,13F
 456  8AD7
 457  8AD7 36 00        	ld (hl),0
 458  8AD9
 459  8AD9 21 FD 89     13 ld hl,Habilita_disparo_Amadeus
 460  8ADC 11 FF 89     	ld de,Temporiza_disparo_Amadeus
 461  8ADF CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 462  8AE2
 463  8AE2 21 00 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 464  8AE5 11 02 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 465  8AE8 CD D5 7F     	call Habilita_disparos
 466  8AEB
 467  8AEB              ; COLISIONES.
 468  8AEB
 469  8AEB CD EC 91     	call Selector_de_impactos
 470  8AEE
 471  8AEE              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 472  8AEE              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 473  8AEE              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 474  8AEE
 475  8AEE AF           	xor a
 476  8AEF 32 EF 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 477  8AF2
 478  8AF2 CD AD 8C     	call Inicia_punteros_de_cajas
 479  8AF5 CD 8A 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 480  8AF8              ; 														; _ en DRAW.
 481  8AF8 3A 93 89     	ld a,(Filas)
 482  8AFB A7           	and a
 483  8AFC 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 484  8AFE CD 9C 8D     	call Incrementa_punteros_de_cajas
 485  8B01 18 F2        	jr 12B
 486  8B03
 487  8B03              ; ---------------------------------------------------------------------------------------
 488  8B03
 489  8B03 CD 6A 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 490  8B06 21 00 70     	ld hl,Album_de_fotos
 491  8B09 22 E6 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 492  8B0C              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 493  8B0C 3A DB 89     	ld a,(Numero_parcial_de_entidades)
 494  8B0F 47               ld b,a
 495  8B10 A7           	and a
 496  8B11 20 16        	jr nz,2F
 497  8B13
 498  8B13 21 D1 89     	ld hl,Ctrl_1
 499  8B16 CB 66        	bit 4,(hl)
 500  8B18 C2 A2 8B     	jp nz,4F
 501  8B1B
 502  8B1B 21 D1 89     	ld hl,Ctrl_1
 503  8B1E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 504  8B20 3A FB 89     	ld a,(Secundero)
 505  8B23 3C           	inc a
 506  8B24 32 FC 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 507  8B27
 508  8B27 18 79        	jr 4F
 509  8B29
 510  8B29              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 511  8B29
 512  8B29              ; Código que ejecutamos con cada entidad:
 513  8B29
 514  8B29              ; Impacto ???
 515  8B29
 516  8B29 3A DC 89     2 ld a,(Entidades_en_curso)
 517  8B2C A7           	and a
 518  8B2D 28 73        	jr z,4F
 519  8B2F 47           	ld b,a
 520  8B30
 521  8B30 C5           15 push bc 												; Nº de entidades en curso.
 522  8B31
 523  8B31 3A AC 89     	ld a,(Impacto)
 524  8B34 A7           	and a
 525  8B35 28 25        	jr z,8F
 526  8B37
 527  8B37              ; Hay Impacto en esta entidad.
 528  8B37
 529  8B37 CD 64 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 530  8B3A
 531  8B3A              ;!!!!!! DEBUGGIN Desintegración/Explosión!!!!!!!!!!!
 532  8B3A
 533  8B3A 3A CF 89     	ld a,(Ctrl_2)
 534  8B3D CB 4F        	bit 1,a
 535  8B3F 20 42        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 536  8B41
 537  8B41 3A 9B 89     	ld a,(CTRL_DESPLZ)
 538  8B44 A7           	and a
 539  8B45 20 08        	jr nz,21F
 540  8B47
 541  8B47 21 7C 84     	ld hl,Indice_Explosion_2x2-2
 542  8B4A 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 543  8B4D 18 06        	jr 22F
 544  8B4F
 545  8B4F 21 E6 83     21 ld hl,Indice_Explosion_2x3-2
 546  8B52 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 547  8B55
 548  8B55 21 CF 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 549  8B58 CB CE        	set 1,(hl)
 550  8B5A 18 27        	jr 7F
 551  8B5C
 552  8B5C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 553  8B5C              ; _con las coordenadas de la entidad almacenada en DRAW.
 554  8B5C
 555  8B5C 3A D1 89     8 ld a,(Ctrl_1)
 556  8B5F CB 57        	bit 2,a
 557  8B61 28 20        	jr z,7F
 558  8B63
 559  8B63 2A F2 89     	ld hl,(Coordenadas_disparo_certero)
 560  8B66 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 561  8B67              ;														; E contiene la coordenada_X del disparo.
 562  8B67 2A 99 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 563  8B6A              ;														; H FILA, (Coordenada_y de la entidad).
 564  8B6A A7           	and a
 565  8B6B ED 52        	sbc hl,de
 566  8B6D
 567  8B6D CD 23 92     	call Determina_resultado_comparativa
 568  8B70
 569  8B70 78           	ld a,b
 570  8B71 A7           	and a
 571  8B72
 572  8B72              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 573  8B72 28 0F        	jr z,7F
 574  8B74              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 575  8B74
 576  8B74              ;	jr z,7F
 577  8B74
 578  8B74              ; ----- ----- -----
 579  8B74
 580  8B74 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 581  8B76 32 AC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 582  8B79 21 D1 89     	ld hl,Ctrl_1
 583  8B7C CB 96        	res 2,(hl)
 584  8B7E 21 F2 89     	ld hl,Coordenadas_disparo_certero
 585  8B81 36 00        	ld (hl),0
 586  8B83
 587  8B83 CD E0 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 588  8B86
 589  8B86 3A C1 89     	ld a,(Ctrl_0)
 590  8B89 CB 67        	bit 4,a
 591  8B8B 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 592  8B8D
 593  8B8D
 594  8B8D
 595  8B8D
 596  8B8D
 597  8B8D
 598  8B8D
 599  8B8D
 600  8B8D
 601  8B8D
 602  8B8D
 603  8B8D
 604  8B8D
 605  8B8D
 606  8B8D
 607  8B8D
 608  8B8D
 609  8B8D
 610  8B8D
 611  8B8D
 612  8B8D
 613  8B8D
 614  8B8D
 615  8B8D
 616  8B8D
 617  8B8D
 618  8B8D
 619  8B8D
 620  8B8D
 621  8B8D
 622  8B8D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 623  8B8D              ; [[[
 624  8B8D CD 25 8E     	call Detecta_disparo_entidad
 625  8B90              ; ]]]
 626  8B90 CD 74 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 627  8B93
 628  8B93 21 C1 89     	ld hl,Ctrl_0
 629  8B96 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 630  8B98 AF           	xor a
 631  8B99 32 C2 89     	ld (Obj_dibujado),a
 632  8B9C
 633  8B9C CD 4F 8D     6 call Store_Restore_cajas
 634  8B9F
 635  8B9F C1           	pop bc
 636  8BA0 10 8E        	djnz 15B
 637  8BA2
 638  8BA2              ; Tras la gestión de las entidades, ... AMADEUS.
 639  8BA2
 640  8BA2 CD B1 8D     4 call Restore_Amadeus
 641  8BA5
 642  8BA5 3A AC 89     	ld a,(Impacto)
 643  8BA8 A7           	and a
 644  8BA9 20 FE        	jr nz,$
 645  8BAB
 646  8BAB              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 647  8BAB
 648  8BAB CD 45 8C     	call Mov_Amadeus
 649  8BAE
 650  8BAE 3A C1 89     	ld a,(Ctrl_0)
 651  8BB1 CB 67        	bit 4,a
 652  8BB3 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 653  8BB5
 654  8BB5 CD 74 8C     	call Guarda_foto_entidad_a_pintar
 655  8BB8
 656  8BB8 21 C1 89     3 ld hl,Ctrl_0
 657  8BBB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 658  8BBD AF           	xor a
 659  8BBE 32 C2 89     	ld (Obj_dibujado),a
 660  8BC1
 661  8BC1 11 7C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 662  8BC4 CD C3 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 663  8BC7
 664  8BC7 CD 88 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 665  8BCA
 666  8BCA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 667  8BCA
 668  8BCA CD E9 8C     	call Calcula_numero_de_disparotes
 669  8BCD CD D1 8C     9 call Calcula_numero_de_malotes
 670  8BD0
 671  8BD0 3E 04        	ld a,4
 672  8BD2 D3 FE        	out ($fe),a
 673  8BD4
 674  8BD4 C9           	ret
 675  8BD5
 676  8BD5              ; --------------------------------------------------------------------------------------------------------------
 677  8BD5              ;
 678  8BD5              ;	03/06/23
 679  8BD5              ;
 680  8BD5              ;	INPUTS: Las coordenadas de la entidad se generan a partir de su posición actual. La intención de esta_
 681  8BD5              ;	_ rutina es actualizar su coordenada_Y cuando se encuentran en las cuadrantes 2º y 3º de pantalla.
 682  8BD5              ;	Necesitamos esta información para comparar las coordenadas de la entidad con las del disparo colisionado.
 683  8BD5              ;
 684  8BD5              ;	INPUTS: HL contiene las coordenadas de la entidad cargada en DRAW.
 685  8BD5              ;
 686  8BD5              ;		H ..... FILA, (Coordenada_y)
 687  8BD5              ;		L ..... COLUMNA, (Coordenada_x)
 688  8BD5              ;
 689  8BD5              ;	MODIFICA: H y A.
 690  8BD5
 691  8BD5              Modifica_coordenada_y
 692  8BD5
 693  8BD5 3A A7 89     	ld a,(Cuad_objeto)
 694  8BD8 FE 02        	cp 2
 695  8BDA 38 03        	jr c,1F
 696  8BDC 28 01        	jr z,1F
 697  8BDE 24           	inc h
 698  8BDF C9           1 ret
 699  8BE0
 700  8BE0              ; --------------------------------------------------------------------------------------------------------------
 701  8BE0              ;
 702  8BE0              ;	27/05/23
 703  8BE0
 704  8BE0              Mov_obj
 705  8BE0
 706  8BE0              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 707  8BE0
 708  8BE0 3A CF 89     	ld a,(Ctrl_2)
 709  8BE3 CB 4F        	bit 1,a
 710  8BE5 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 711  8BE7
 712  8BE7              ; Explosión:
 713  8BE7
 714  8BE7 3A D0 89     	ld a,(Frames_explosion)
 715  8BEA A7           	and a
 716  8BEB 20 11        	jr nz,4F
 717  8BED
 718  8BED              ; Una alimaña menos!!!!!!!!!1
 719  8BED
 720  8BED CD CC 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 721  8BF0 21 DB 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 722  8BF3 35           	dec (hl)
 723  8BF4 21 DC 89     	ld hl,Entidades_en_curso
 724  8BF7 35           	dec (hl)
 725  8BF8 21 DA 89     	ld hl,Numero_de_entidades
 726  8BFB 35           	dec (hl)
 727  8BFC 18 46        	jr 3F
 728  8BFE
 729  8BFE              ; -----
 730  8BFE
 731  8BFE 2A A1 89     4 ld hl,(Puntero_DESPLZ_der)
 732  8C01 23           	inc hl
 733  8C02 23           	inc hl
 734  8C03 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 735  8C06 CD 01 8D     	call Extrae_address
 736  8C09 22 97 89     	ld (Puntero_objeto),hl
 737  8C0C
 738  8C0C 21 D0 89     	ld hl,Frames_explosion
 739  8C0F 35           	dec (hl)
 740  8C10
 741  8C10 CD 64 8C     	call Guarda_foto_entidad_a_borrar
 742  8C13 18 2F        	jr 3F
 743  8C15
 744  8C15 AF           2 xor a
 745  8C16 32 C2 89     	ld (Obj_dibujado),a
 746  8C19 32 C1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 747  8C1C              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 748  8C1C              ; 														; _de la entidad.
 749  8C1C CD 7E 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 750  8C1F              ;														; Obj_dibujado="0".
 751  8C1F              ; Movemos Entidades malignas.
 752  8C1F
 753  8C1F 21 C4 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 754  8C22 34           	inc (hl)
 755  8C23 35           	dec (hl)                                            ; Salimos de la rutina.
 756  8C24 C8           	ret z
 757  8C25
 758  8C25 CD 2B 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 759  8C28
 760  8C28 3A C1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 761  8C2B CB 67        	bit 4,a
 762  8C2D C8           	ret z
 763  8C2E
 764  8C2E              ; Ha habido desplazamiento de la entidad maligna.
 765  8C2E              ; Ha llegado a zona de AMADEUS ???
 766  8C2E
 767  8C2E 3A 9A 89     	ld a,(Coordenada_y)
 768  8C31 FE 14        	cp $14
 769  8C33 D4 B9 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 770  8C36              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 771  8C36              ; ---------
 772  8C36
 773  8C36 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 774  8C38 32 C2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 775  8C3B CD 7E 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 776  8C3E CD 95 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 777  8C41 CD 64 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 778  8C44 C9           3 ret													; _de la misma.
 779  8C45
 780  8C45              ; --------------------------------------------------------------------------------------------------------------
 781  8C45              ;
 782  8C45              ;	29/1/23
 783  8C45
 784  8C45              Mov_Amadeus
 785  8C45
 786  8C45 AF           	xor a
 787  8C46 32 C2 89     	ld (Obj_dibujado),a
 788  8C49 CD 7E 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 789  8C4C              ;														; Obj_dibujado="0".
 790  8C4C              ; Movemos Amadeus.
 791  8C4C
 792  8C4C CD EE 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 793  8C4F 3A C1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 794  8C52 CB 67        	bit 4,a
 795  8C54 C8           	ret z
 796  8C55
 797  8C55              ; ---------
 798  8C55
 799  8C55 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 800  8C57 32 C2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 801  8C5A CD 7E 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 802  8C5D CD 95 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 803  8C60 CD 64 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 804  8C63 C9           	ret													; _de la nave.
 805  8C64
 806  8C64              ; --------------------------------------------------------------------------------------------------------------
 807  8C64              ;
 808  8C64              ;	31/01/23
 809  8C64              ;
 810  8C64              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 811  8C64
 812  8C64              Guarda_foto_entidad_a_borrar
 813  8C64
 814  8C64 CD 27 95     	call Prepara_draw
 815  8C67 CD 61 94     	call calcula_CColumnass
 816  8C6A CD 98 94     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 817  8C6D CD ED 94     	call Define_rutina_de_impresion
 818  8C70 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 819  8C73 C9           	ret
 820  8C74
 821  8C74              ; --------------------------------------------------------------------------------------------------------------
 822  8C74              ;
 823  8C74              ;	31/01/23
 824  8C74              ;
 825  8C74              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 826  8C74              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 827  8C74
 828  8C74              Guarda_foto_entidad_a_pintar
 829  8C74
 830  8C74 CD A1 8C     	call Repone_pintar
 831  8C77 CD 4D 92     	call Draw
 832  8C7A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 833  8C7D C9           	ret
 834  8C7E
 835  8C7E              ; --------------------------------------------------------------------------------------------------------------
 836  8C7E              ;
 837  8C7E              ;
 838  8C7E
 839  8C7E 21 93 89     Prepara_var_pintado_borrado	ld hl,Filas
 840  8C81 3A C2 89     	ld a,(Obj_dibujado)
 841  8C84 A7           	and a
 842  8C85 28 05        	jr z,1F
 843  8C87 11 B7 89     	ld de,Variables_de_pintado
 844  8C8A 18 03        	jr 2F
 845  8C8C 11 AD 89     1 ld de,Variables_de_borrado
 846  8C8F 01 08 00     2 ld bc,8
 847  8C92 ED B0        	ldir
 848  8C94 C9           	ret
 849  8C95
 850  8C95              ; --------------------------------------------------------------------------------------------------------------
 851  8C95
 852  8C95 21 AD 89     Repone_borrar ld hl,Variables_de_borrado
 853  8C98 11 93 89     	ld de,Filas
 854  8C9B 01 08 00     	ld bc,8
 855  8C9E ED B0        	ldir
 856  8CA0 C9           	ret
 857  8CA1
 858  8CA1 21 B7 89     Repone_pintar ld hl,Variables_de_pintado
 859  8CA4 11 93 89     	ld de,Filas
 860  8CA7 01 08 00     	ld bc,8
 861  8CAA ED B0        	ldir
 862  8CAC C9           	ret
 863  8CAD
 864  8CAD              ; *************************************************************************************************************************************************************
 865  8CAD              ;
 866  8CAD              ; 8/1/23
 867  8CAD              ;
 868  8CAD              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 869  8CAD              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 870  8CAD              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 871  8CAD
 872  8CAD              ; Destruye HL y DE !!!!!
 873  8CAD
 874  8CAD              Inicia_punteros_de_cajas
 875  8CAD
 876  8CAD 21 64 85     	ld hl,Indice_de_cajas
 877  8CB0 CD 01 8D         call Extrae_address
 878  8CB3 22 D4 89         ld (Puntero_store_caja),hl
 879  8CB6 21 66 85     	ld hl,Indice_de_cajas+2
 880  8CB9 22 D8 89     	ld (Indice_restore_caja),hl
 881  8CBC CD 01 8D     	call Extrae_address
 882  8CBF 22 D6 89     	ld (Puntero_restore_caja),hl
 883  8CC2 C9               ret
 884  8CC3
 885  8CC3              ; *************************************************************************************************************************************************************
 886  8CC3              ;
 887  8CC3              ; 8/1/23
 888  8CC3              ;
 889  8CC3              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 890  8CC3
 891  8CC3 21 FC 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 892  8CC6 22 EB 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 893  8CC9 C9           	ret
 894  8CCA 21 E4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 895  8CCD 22 ED 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 896  8CD0 C9           	ret
 897  8CD1
 898  8CD1              ; -------------------------------------------------------------------------------------------------------------
 899  8CD1              ;
 900  8CD1              ; 28/2/23
 901  8CD1              ;
 902  8CD1
 903  8CD1              Calcula_numero_de_malotes
 904  8CD1
 905  8CD1 21 00 70     	ld hl,Album_de_fotos
 906  8CD4 EB           	ex de,hl
 907  8CD5 2A E6 89     	ld hl,(Stack_snapshot)
 908  8CD8
 909  8CD8 06 00        	ld b,0
 910  8CDA 7D           	ld a,l
 911  8CDB 93           	sub e
 912  8CDC 28 07        	jr z,1F
 913  8CDE
 914  8CDE              ; Nº de malotes no es "0".
 915  8CDE
 916  8CDE D6 06        2 sub 6
 917  8CE0 04           	inc b
 918  8CE1 A7           	and a
 919  8CE2 20 FA        	jr nz,2B
 920  8CE4 78           	ld a,b
 921  8CE5
 922  8CE5 32 DD 89     1 ld (Numero_de_malotes),a
 923  8CE8 C9           	ret
 924  8CE9
 925  8CE9              ; -------------------------------------------------------------------------------------------------------------
 926  8CE9              ;
 927  8CE9              ; 28/2/23
 928  8CE9              ;
 929  8CE9
 930  8CE9              Calcula_numero_de_disparotes
 931  8CE9
 932  8CE9 21 85 70     	ld hl,Album_de_fotos_disparos
 933  8CEC EB           	ex de,hl
 934  8CED 2A E8 89     	ld hl,(Stack_snapshot_disparos)
 935  8CF0
 936  8CF0 06 00        	ld b,0
 937  8CF2 7D           	ld a,l
 938  8CF3 93           	sub e
 939  8CF4 28 07        	jr z,1F
 940  8CF6
 941  8CF6              ; Nº de malotes no es "0".
 942  8CF6
 943  8CF6 D6 06        2 sub 6
 944  8CF8 04           	inc b
 945  8CF9 A7           	and a
 946  8CFA 20 FA        	jr nz,2B
 947  8CFC 78           	ld a,b
 948  8CFD
 949  8CFD 32 EA 89     1 ld (Numero_de_disparotes),a
 950  8D00 C9           	ret
 951  8D01              ; *************************************************************************************************************************************************************
 952  8D01              ;
 953  8D01              ; 20/10/22
 954  8D01              ;
 955  8D01              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 956  8D01              ;
 957  8D01              ; Destruye el puntero y DE !!!!!
 958  8D01
 959  8D01 5E           Extrae_address ld e,(hl)
 960  8D02 23           	inc hl
 961  8D03 56           	ld d,(hl)
 962  8D04 2B           	dec hl
 963  8D05 EB           	ex de,hl
 964  8D06 C9           	ret
 965  8D07
 966  8D07              ; *************************************************************************************************************************************************************
 967  8D07              ;
 968  8D07              ;	7/2/23
 969  8D07              ;
 970  8D07              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 971  8D07              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 972  8D07              ;
 973  8D07              ;   Destruye HL y BC !!!!!,
 974  8D07              ;
 975  8D07              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 976  8D07              ;					"0" ..... Izquierda.
 977  8D07
 978  8D07              Inicia_Puntero_objeto
 979  8D07
 980  8D07 3A A7 89     	ld a,(Cuad_objeto)
 981  8D0A E6 01        	and 1
 982  8D0C F5           	push af
 983  8D0D CC 2B 8D     	call z,Inicia_puntero_objeto_izq
 984  8D10 F1           	pop af
 985  8D11 28 2B        	jr z,1F
 986  8D13 CD 18 8D     	call Inicia_puntero_objeto_der
 987  8D16 18 26        	jr 1F
 988  8D18
 989  8D18              ; Arrancamos desde la parte izquierda de la pantalla.
 990  8D18              ; Iniciamos (Indice_Sprite_der).
 991  8D18
 992  8D18 2A 9D 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 993  8D1B 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 994  8D1E CD 01 8D     	call Extrae_address
 995  8D21 22 97 89     	ld (Puntero_objeto),hl
 996  8D24
 997  8D24 2A 9F 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 998  8D27 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 999  8D2A C9           	ret
1000  8D2B
1001  8D2B              ; Arrancamos desde la parte derecha de la pantalla.
1002  8D2B              ; Iniciamos (Indice_Sprite_izq).
1003  8D2B
1004  8D2B 2A 9F 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1005  8D2E 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
1006  8D31 CD 01 8D     	call Extrae_address
1007  8D34 22 97 89     	ld (Puntero_objeto),hl
1008  8D37
1009  8D37 2A 9D 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1010  8D3A 22 A1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1011  8D3D C9           	ret
1012  8D3E
1013  8D3E              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1014  8D3E
1015  8D3E 21 38 83     1 ld hl,Amadeus
1016  8D41 ED 4B 97 89  	ld bc,(Puntero_objeto)
1017  8D45 B7 ED 42     	sub hl,bc
1018  8D48 C0           	ret nz
1019  8D49 21 C1 89     	ld hl,Ctrl_0
1020  8D4C CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1021  8D4E C9           	ret 												; _de nuestra nave en los extremos.
1022  8D4F
1023  8D4F              ; *************************************************************************************************************************************************************
1024  8D4F              ;
1025  8D4F              ;	14/5/23
1026  8D4F              ;
1027  8D4F              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1028  8D4F              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1029  8D4F
1030  8D4F              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1031  8D4F              ;	_de la 2ª y 3ª entidad respectivamente.
1032  8D4F
1033  8D4F              Store_Restore_cajas
1034  8D4F
1035  8D4F E5           	push hl
1036  8D50 D5           	push de
1037  8D51 C5            	push bc
1038  8D52
1039  8D52              ;	STORE !!!!!
1040  8D52              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1041  8D52
1042  8D52 21 93 89     	ld hl,Filas
1043  8D55 ED 5B D4 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1044  8D59 01 3E 00     	ld bc,62
1045  8D5C ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1046  8D5E
1047  8D5E              ; 	Entidad_sospechosa. 20/4/23
1048  8D5E
1049  8D5E 3A AC 89     	ld a,(Impacto)
1050  8D61 A7           	and a
1051  8D62 28 0C        	jr z,1F
1052  8D64
1053  8D64 2A D4 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1054  8D67 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1055  8D6A A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1056  8D6B ED 4A        	adc hl,bc 											; _ "0" más adelante.
1057  8D6D 22 F0 89     	ld (Entidad_sospechosa_de_colision),hl
1058  8D70
1059  8D70              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1060  8D70
1061  8D70 2A D6 89     1 ld hl,(Puntero_restore_caja)
1062  8D73 7E           	ld a,(hl)
1063  8D74 A7           	and a
1064  8D75 F5           	push af
1065  8D76 28 08        	jr z,2F
1066  8D78
1067  8D78 11 93 89     	ld de,Filas
1068  8D7B 01 3E 00     	ld bc,62
1069  8D7E ED B0        	ldir
1070  8D80
1071  8D80 CD 9C 8D     2 call Incrementa_punteros_de_cajas
1072  8D83 F1           	pop af
1073  8D84 28 EA        	jr z,1B
1074  8D86
1075  8D86 C1           	pop bc
1076  8D87 D1           	pop de
1077  8D88 E1           	pop hl
1078  8D89
1079  8D89 C9           	ret
1080  8D8A
1081  8D8A              ; **************************************************************************************************
1082  8D8A              ;
1083  8D8A              ;	12/05/23
1084  8D8A              ;
1085  8D8A              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1086  8D8A
1087  8D8A E5           Restore_entidad push hl
1088  8D8B D5           	push de
1089  8D8C C5            	push bc
1090  8D8D
1091  8D8D 2A D4 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1092  8D90 11 93 89     	ld de,Filas
1093  8D93 01 3E 00     	ld bc,62
1094  8D96 ED B0        	ldir
1095  8D98
1096  8D98 C1           	pop bc
1097  8D99 D1           	pop de
1098  8D9A E1           	pop hl
1099  8D9B C9           	ret
1100  8D9C
1101  8D9C
1102  8D9C              ; **************************************************************************************************
1103  8D9C              ;
1104  8D9C              ;	08/05/23
1105  8D9C              ;
1106  8D9C              ;	Incrementamos los dos punteros de entidades. (+1).
1107  8D9C
1108  8D9C 2A D6 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1109  8D9F 22 D4 89     	ld (Puntero_store_caja),hl
1110  8DA2 2A D8 89     	ld hl,(Indice_restore_caja)
1111  8DA5 23           	inc hl
1112  8DA6 23           	inc hl
1113  8DA7 22 D8 89     	ld (Indice_restore_caja),hl
1114  8DAA CD 01 8D         call Extrae_address
1115  8DAD 22 D6 89         ld (Puntero_restore_caja),hl
1116  8DB0 C9               ret
1117  8DB1
1118  8DB1              ; **************************************************************************************************
1119  8DB1              ;
1120  8DB1              ;	25/01/23
1121  8DB1              ;
1122  8DB1              ;	Restore_Amadeus
1123  8DB1              ;
1124  8DB1              ;	Cargamos en DRAW los parámetros de Amadeus.
1125  8DB1              ;
1126  8DB1
1127  8DB1 E5           Restore_Amadeus	push hl
1128  8DB2 D5           	push de
1129  8DB3 C5            	push bc
1130  8DB4 21 7C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1131  8DB7 11 93 89     	ld de,Filas
1132  8DBA 01 3E 00     	ld bc,62
1133  8DBD ED B0        	ldir
1134  8DBF C1           	pop bc
1135  8DC0 D1           	pop de
1136  8DC1 E1           	pop hl
1137  8DC2 C9           	ret
1138  8DC3
1139  8DC3              ; *************************************************************************************************************************************************************
1140  8DC3              ;
1141  8DC3              ;	29/04/23
1142  8DC3              ;
1143  8DC3              ;	Store_Amadeus
1144  8DC3              ;
1145  8DC3              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1146  8DC3              ;
1147  8DC3              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1148  8DC3              ;
1149  8DC3              ;	DESTRUYE: HL y BC y DE.
1150  8DC3
1151  8DC3 21 93 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1152  8DC6 01 3E 00     	ld bc,62
1153  8DC9 ED B0        	ldir
1154  8DCB C9           	ret
1155  8DCC
1156  8DCC              ; -----------------------------------------------------------
1157  8DCC              ;
1158  8DCC              ;	27/04/23
1159  8DCC              ;
1160  8DCC              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1161  8DCC              ;
1162  8DCC              ;	Destruye: HL,BC,DE,A
1163  8DCC
1164  8DCC 21 93 89     Borra_datos_entidad ld hl,Filas
1165  8DCF 01 3D 00     	ld bc,61
1166  8DD2 AF           	xor a
1167  8DD3 77           	ld (hl),a
1168  8DD4 11 94 89     	ld de,Filas+1
1169  8DD7 ED B0        	ldir
1170  8DD9 C9           	ret
1171  8DDA
1172  8DDA              ; -----------------------------------------------------------
1173  8DDA
1174  8DDA              ; Teclado.
1175  8DDA
1176  8DDA 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1177  8DDC DB FE        	in a,($fe)
1178  8DDE E6 01        	and $01
1179  8DE0 28 02        	jr z,1f
1180  8DE2 18 F6        	jr Pulsa_ENTER
1181  8DE4 C9           1 ret
1182  8DE5
1183  8DE5              ; **************************************************************************************************
1184  8DE5              ;
1185  8DE5              ; Temporización.
1186  8DE5
1187  8DE5              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1188  8DE5              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1189  8DE5              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1190  8DE5              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1191  8DE5
1192  8DE5              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1193  8DE5              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1194  8DE5              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1195  8DE5
1196  8DE5              ; A partir de $4f61 no hace falta DELAY.
1197  8DE5
1198  8DE5              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1199  8DE5
1200  8DE5 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1201  8DE8 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1202  8DE9 78           	LD A,B
1203  8DEA A7           	AND A
1204  8DEB 20 FB        	JR NZ,wait
1205  8DED C9           	RET
1206  8DEE
1207  8DEE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1208  8DEE              ;
1209  8DEE              ;	5/3/23
1210  8DEE              ;
1211  8DEE              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1212  8DEE
1213  8DEE              Movimiento_Amadeus
1214  8DEE
1215  8DEE              ; Disparo.
1216  8DEE
1217  8DEE 3A FD 89     	ld a,(Habilita_disparo_Amadeus)
1218  8DF1 A7           	and a
1219  8DF2 20 02        	jr nz,1F
1220  8DF4 18 15        	jr 2F
1221  8DF6
1222  8DF6 3E F7        1 ld a,$f7													; "5" para disparar.
1223  8DF8 DB FE        	in a,($fe)
1224  8DFA E6 10        	and $10
1225  8DFC
1226  8DFC F5           	push af
1227  8DFD CC 35 8E     	call z,Genera_disparo
1228  8E00 F1           	pop af
1229  8E01 20 08        	jr nz,2F
1230  8E03
1231  8E03 3A FD 89     	ld a,(Habilita_disparo_Amadeus)
1232  8E06 EE 01        	xor 1
1233  8E08 32 FD 89     	ld (Habilita_disparo_Amadeus),a
1234  8E0B
1235  8E0B 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1236  8E0D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1237  8E0F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1238  8E11 CC CB 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1239  8E14 3E F7        	ld a,$f7
1240  8E16 DB FE        	in a,($fe)
1241  8E18 E6 01        	and $01
1242  8E1A C8           	ret z
1243  8E1B
1244  8E1B 3E F7        	ld a,$f7
1245  8E1D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1246  8E1F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1247  8E21 CC AD 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1248  8E24 C9           	ret
1249  8E25
1250  8E25              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1251  8E25              ;
1252  8E25              ;	Rutina provisional para que los malotes cagen balas.
1253  8E25
1254  8E25              Detecta_disparo_entidad
1255  8E25
1256  8E25 3A 00 8A     	ld a,(Habilita_disparo_entidad)
1257  8E28 A7           	and a
1258  8E29 C8           	ret z
1259  8E2A 3E 7F        	ld a,$7f
1260  8E2C DB FE        	in a,($fe)
1261  8E2E E6 01        	and 1
1262  8E30 C0           	ret nz
1263  8E31 CD 35 8E     	call Genera_disparo
1264  8E34 C9           	ret
1265  8E35
1266  8E35              ; ---------------------------------------------------------------
1267  8E35
1268  8E35              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E35              ; ******************************************************************************************************************************************************************************************
   2+ 8E35              ;
   3+ 8E35              ;   17/04/23
   4+ 8E35              ;
   5+ 8E35              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E35              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E35              ;
   8+ 8E35              ;
   9+ 8E35              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E35              ;
  11+ 8E35              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E35              ;               _ hacen las entidades hacia abajo.
  13+ 8E35              ;
  14+ 8E35              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E35              ;
  16+ 8E35              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E35              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E35              ;
  19+ 8E35              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E35              ;           _ la bala.
  21+ 8E35              ;
  22+ 8E35              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E35              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E35              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E35              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E35              ;           _ en el momento de generarse la bala)).
  27+ 8E35
  28+ 8E35              Genera_disparo
  29+ 8E35
  30+ 8E35              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E35              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E35              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E35              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E35              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E35              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E35              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E35
  38+ 8E35              ; Exclusiones:
  39+ 8E35
  40+ 8E35 3A CB 89         ld a,(Columnas)
  41+ 8E38 47               ld b,a
  42+ 8E39 3A 94 89         ld a,(Columns)
  43+ 8E3C B8               cp b
  44+ 8E3D C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E3E
  46+ 8E3E              ; ----- ----- -----
  47+ 8E3E
  48+ 8E3E 3A C1 89         ld a,(Ctrl_0)
  49+ 8E41 CB 77            bit 6,a
  50+ 8E43 20 06            jr nz,14F
  51+ 8E45
  52+ 8E45 3A 9A 89         ld a,(Coordenada_y)
  53+ 8E48 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E4A D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E4B
  56+ 8E4B 21 00 80     14 ld hl,Indice_disparo
  57+ 8E4E 3A 9B 89         ld a,(CTRL_DESPLZ)
  58+ 8E51 4F               ld c,a
  59+ 8E52 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E54              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E54              ;                                            ""        ""       "f9", B="1"
  62+ 8E54              ;                                            ""        ""       "fb", B="2"
  63+ 8E54              ;                                            ""        ""       "fb", B="3"
  64+ 8E54 A7               and a
  65+ 8E55 28 10            jr z,1F
  66+ 8E57 E6 01            and 1
  67+ 8E59 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E5A
  69+ 8E5A 79               ld a,c
  70+ 8E5B 16 F9            ld d,$f9
  71+ 8E5D 23           2 inc hl
  72+ 8E5E 23               inc hl
  73+ 8E5F 04               inc b
  74+ 8E60 BA               cp d
  75+ 8E61 28 04            jr z,1F
  76+ 8E63 14               inc d
  77+ 8E64 14               inc d
  78+ 8E65 18 F6            jr 2B
  79+ 8E67
  80+ 8E67 CD 01 8D     1 call Extrae_address
  81+ 8E6A E5               push hl
  82+ 8E6B FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E6D DD 21 C6 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E71
  85+ 8E71              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E71              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E71
  88+ 8E71 3A C1 89         ld a,(Ctrl_0)
  89+ 8E74 CB 77            bit 6,a
  90+ 8E76 20 04            jr nz,19F
  91+ 8E78
  92+ 8E78 AF               xor a
  93+ 8E79 32 00 8A         ld (Habilita_disparo_entidad),a
  94+ 8E7C
  95+ 8E7C 3A A7 89     19 ld a,(Cuad_objeto)
  96+ 8E7F FE 02            cp 2
  97+ 8E81 38 66            jr c,3F
  98+ 8E83 28 64            jr z,3F
  99+ 8E85
 100+ 8E85              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E85
 102+ 8E85 E6 01            and 1
 103+ 8E87 28 30            jr z,4F
 104+ 8E89
 105+ 8E89              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E89              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E89              ;
 108+ 8E89              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E89              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E89              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E89
 112+ 8E89 2A 95 89     	ld hl,(Posicion_actual)
 113+ 8E8C
 114+ 8E8C              ;   Amadeus o entidad ???.
 115+ 8E8C
 116+ 8E8C 3A C1 89         ld a,(Ctrl_0)
 117+ 8E8F CB 77            bit 6,a
 118+ 8E91 28 0A            jr z,8F
 119+ 8E93
 120+ 8E93              ; 	Dispara Amadeus.
 121+ 8E93
 122+ 8E93 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E95 CD 42 95         call PreviousScan
 124+ 8E98 CD 42 95         call PreviousScan
 125+ 8E9B
 126+ 8E9B              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E9B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E9B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E9B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E9B
 131+ 8E9B 18 11            jr 10F
 132+ 8E9D
 133+ 8E9D              ; 	Dispara Entidad.
 134+ 8E9D
 135+ 8E9D 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8EA0              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8EA0
 138+ 8EA0              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8EA0              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8EA0
 141+ 8EA0 C5               push bc
 142+ 8EA1 06 10            ld b,16
 143+ 8EA3 CD 33 95     9 call NextScan
 144+ 8EA6 10 FB            djnz 9B
 145+ 8EA8 C1               pop bc
 146+ 8EA9 CD 13 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EAC 18 06            jr 17F
 148+ 8EAE
 149+ 8EAE              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EAE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EAE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EAE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EAE
 154+ 8EAE CD 13 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EB1 CD 88 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EB4              ;                                                      ; _al generar el disparo.
 157+ 8EB4
 158+ 8EB4              ; 	LLegados a este punto tendremos:
 159+ 8EB4              ;
 160+ 8EB4              ;       Puntero_objeto_disparo en IY.
 161+ 8EB4              ;       Rutinas_de_impresion en IX.
 162+ 8EB4              ;       Puntero_de_impresion en HL.
 163+ 8EB4              ;       Impacto/Dirección en BC.
 164+ 8EB4
 165+ 8EB4 CD 1B 8F     17 call Almacena_disparo
 166+ 8EB7 18 52            jr 6F                                             ; RET.
 167+ 8EB9
 168+ 8EB9              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EB9              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EB9              ;
 171+ 8EB9              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EB9              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EB9              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EB9
 175+ 8EB9 2A 95 89     4 ld hl,(Posicion_actual)
 176+ 8EBC
 177+ 8EBC              ;   Amadeus o entidad ???.
 178+ 8EBC
 179+ 8EBC 3A C1 89         ld a,(Ctrl_0)
 180+ 8EBF CB 77            bit 6,a
 181+ 8EC1 28 0A            jr z,11F
 182+ 8EC3
 183+ 8EC3              ; 	Dispara Amadeus.
 184+ 8EC3
 185+ 8EC3 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EC5 CD 42 95         call PreviousScan
 187+ 8EC8 CD 42 95         call PreviousScan
 188+ 8ECB
 189+ 8ECB              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8ECB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8ECB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8ECB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8ECB
 194+ 8ECB 18 11            jr 13F
 195+ 8ECD
 196+ 8ECD              ; 	Dispara Entidad.
 197+ 8ECD
 198+ 8ECD 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8ED0              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8ED0
 201+ 8ED0              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8ED0              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8ED0
 204+ 8ED0 C5               push bc
 205+ 8ED1 06 10            ld b,16
 206+ 8ED3 CD 33 95     12 call NextScan
 207+ 8ED6 10 FB            djnz 12B
 208+ 8ED8 C1               pop bc
 209+ 8ED9
 210+ 8ED9 CD 0C 8F         call Ajusta_disparo_parte_derecha
 211+ 8EDC 18 06            jr 18F
 212+ 8EDE
 213+ 8EDE              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8EDE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8EDE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8EDE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8EDE
 218+ 8EDE CD 0C 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8EE1 CD 88 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8EE4              ;                                                       ; _al generar el disparo.
 221+ 8EE4
 222+ 8EE4              ; LLegados a este punto tendremos:
 223+ 8EE4              ;
 224+ 8EE4              ;       Puntero_objeto_disparo en IY.
 225+ 8EE4              ;       Rutinas_de_impresion en IX.
 226+ 8EE4              ;       Puntero_de_impresion en HL.
 227+ 8EE4              ;       Impacto/Dirección en BC.
 228+ 8EE4
 229+ 8EE4 CD 1B 8F     18 call Almacena_disparo
 230+ 8EE7 18 22            jr 6F                                               ; RET.
 231+ 8EE9
 232+ 8EE9              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8EE9
 234+ 8EE9 28 11        3 jr z,5F
 235+ 8EEB
 236+ 8EEB              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8EEB              ;
 238+ 8EEB              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8EEB              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8EEB              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8EEB              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8EEB
 243+ 8EEB              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8EEB              ;	   ""        ""       "f9", B="1"
 245+ 8EEB              ;	   ""        ""       "fb", B="2"
 246+ 8EEB              ; 	   ""        ""       "fb", B="3"
 247+ 8EEB
 248+ 8EEB 2A 95 89     	ld hl,(Posicion_actual)
 249+ 8EEE CD 33 95     	call NextScan
 250+ 8EF1
 251+ 8EF1              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8EF1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8EF1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8EF1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8EF1
 256+ 8EF1 CD 13 8F         call Ajusta_disparo_parte_izquierda
 257+ 8EF4
 258+ 8EF4              ; 	No se produce impacto. B="$80"
 259+ 8EF4              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8EF4
 261+ 8EF4 01 80 80         ld bc,$8080
 262+ 8EF7
 263+ 8EF7              ; 	LLegados a este punto tendremos:
 264+ 8EF7              ;
 265+ 8EF7              ;       Puntero_objeto_disparo en IY.
 266+ 8EF7              ;       Rutinas_de_impresion en IX.
 267+ 8EF7              ;       Puntero_de_impresion en HL.
 268+ 8EF7              ;       Impacto/Dirección en BC.
 269+ 8EF7
 270+ 8EF7 CD 1B 8F         call Almacena_disparo
 271+ 8EFA 18 0F            jr 6F                                           ; RET.
 272+ 8EFC
 273+ 8EFC              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EFC              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EFC              ;
 276+ 8EFC              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EFC              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EFC              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EFC              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EFC
 281+ 8EFC 2A 95 89     5 ld hl,(Posicion_actual)
 282+ 8EFF CD 33 95     	call NextScan
 283+ 8F02
 284+ 8F02              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F02              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F02              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F02              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F02
 289+ 8F02 CD 0C 8F         call Ajusta_disparo_parte_derecha
 290+ 8F05
 291+ 8F05              ; 	No se produce impacto. B="$80"
 292+ 8F05              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F05
 294+ 8F05 01 80 80     15 ld bc,$8080
 295+ 8F08
 296+ 8F08              ; 	LLegados a este punto tendremos:
 297+ 8F08              ;
 298+ 8F08              ;       Puntero_objeto_disparo en IY.
 299+ 8F08              ;       Rutinas_de_impresion en IX.
 300+ 8F08              ;       Puntero_de_impresion en HL.
 301+ 8F08              ;       Impacto/Dirección en BC.
 302+ 8F08
 303+ 8F08 CD 1B 8F         call Almacena_disparo
 304+ 8F0B
 305+ 8F0B C9           6 ret
 306+ 8F0C
 307+ 8F0C              ; ----------------------------------------------------------------
 308+ 8F0C              ;
 309+ 8F0C              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F0C              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F0C              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F0C
 313+ 8F0C 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F0D FE 02            cp 2
 315+ 8F0F 38 01            jr c,1F
 316+ 8F11 23               inc hl
 317+ 8F12 C9           1 ret
 318+ 8F13
 319+ 8F13 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F14 FE 01        	cp 1
 321+ 8F16 20 01        	jr nz,1F
 322+ 8F18 2B           	dec hl
 323+ 8F19 2B           1 dec hl
 324+ 8F1A C9               ret
 325+ 8F1B
 326+ 8F1B              ; ----------------------------------------------------------------
 327+ 8F1B              ;
 328+ 8F1B              ;   25/02/23
 329+ 8F1B              ;
 330+ 8F1B              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F1B              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F1B              ;
 333+ 8F1B              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F1B              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F1B
 336+ 8F1B              Almacena_disparo
 337+ 8F1B
 338+ 8F1B E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F1C F1               pop af
 340+ 8F1D 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F1E
 342+ 8F1E 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F1F E6 01            and 1
 344+ 8F21 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F23              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F23              ; 	Dispara AMADEUS.
 347+ 8F23
 348+ 8F23              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F23              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F23              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F23              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F23
 353+ 8F23 C5               push bc
 354+ 8F24 01 E8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F27 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F2A A7               and a
 357+ 8F2B ED 42            sbc hl,bc
 358+ 8F2D CC CA 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F30 C1               pop bc
 360+ 8F31 28 54            jr z,4F
 361+ 8F33
 362+ 8F33 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F36 23               inc hl
 364+ 8F37 23               inc hl
 365+ 8F38 22 ED 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F3B              ;                                                   ; _ Disparo_(+1).
 367+ 8F3B 18 18            jr 2F
 368+ 8F3D
 369+ 8F3D              ; Dispara una entidad.
 370+ 8F3D
 371+ 8F3D C5           1 push bc
 372+ 8F3E 01 10 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F41 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F44 A7               and a
 375+ 8F45 ED 42            sbc hl,bc
 376+ 8F47 CC C3 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F4A C1               pop bc
 378+ 8F4B 28 3A            jr z,4F
 379+ 8F4D
 380+ 8F4D 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F50 23               inc hl
 382+ 8F51 23               inc hl
 383+ 8F52 22 EB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F55              ;                                                   ; _ Disparo_(+1).
 385+ 8F55 CD 01 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F58              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F58              ;
 388+ 8F58              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F58              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F58              ;                                                     Puntero_de_impresion en HL.
 391+ 8F58              ;                                                     Impacto/Dirección en BC.
 392+ 8F58
 393+ 8F58 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F59 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F5A 23               inc hl                                          ; _ al siguiente.
 396+ 8F5B A7               and a
 397+ 8F5C 20 C0            jr nz,3B
 398+ 8F5E
 399+ 8F5E 08               ex af,af
 400+ 8F5F ED 73 E2 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F63 F9               ld sp,hl
 402+ 8F64
 403+ 8F64 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F66 F5               push af                                         ; Puntero de impresión.
 405+ 8F67 FD E5            push iy                                         ; Puntero objeto.
 406+ 8F69 C5               push bc                                         ; Control.
 407+ 8F6A
 408+ 8F6A ED 7B E2 89      ld sp,(Stack)
 409+ 8F6E
 410+ 8F6E              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F6E
 412+ 8F6E 21 D1 89     	ld hl,Ctrl_1
 413+ 8F71 CB C6        	set 0,(hl)
 414+ 8F73
 415+ 8F73 DD E5        	push ix
 416+ 8F75 E1               pop hl
 417+ 8F76 F5               push af
 418+ 8F77 DD E1            pop ix
 419+ 8F79
 420+ 8F79 CD A0 7F     	call Guarda_foto_registros
 421+ 8F7C
 422+ 8F7C 21 D1 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F7F CB 86        	res 0,(hl)
 424+ 8F81
 425+ 8F81              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F81              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F81
 428+ 8F81 CD CA 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F84 CD C3 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F87
 431+ 8F87 C9           4 ret
 432+ 8F88
 433+ 8F88              ; ----------------------------------------------------------------
 434+ 8F88              ;
 435+ 8F88              ;   4/3/23
 436+ 8F88              ;
 437+ 8F88              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F88              ;   _ al generarse el disparo.
 439+ 8F88              ;
 440+ 8F88              ;       "$80" ..... No se produce colisión.
 441+ 8F88              ;       "$81" ..... Se produce colisión.
 442+ 8F88
 443+ 8F88              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F88              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F88
 446+ 8F88
 447+ 8F88 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F8A E5               push hl                                        ; Puntero de impresión.
 449+ 8F8B
 450+ 8F8B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F8D CD A9 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F90
 453+ 8F90 7B               ld a,e
 454+ 8F91 E6 01            and 1
 455+ 8F93 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F95
 457+ 8F95 E1               pop hl
 458+ 8F96 E5               push hl
 459+ 8F97 CD 33 95         call NextScan
 460+ 8F9A
 461+ 8F9A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F9B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F9D 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F9F              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F9F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FA1 CD A9 8F         call Bucle_2
 467+ 8FA4
 468+ 8FA4 43           2 ld b,e
 469+ 8FA5 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FA6 FD E1            pop iy
 471+ 8FA8 C9               ret
 472+ 8FA9
 473+ 8FA9               ; ---------- ----------
 474+ 8FA9
 475+ 8FA9 06 02        Bucle_2 ld b,2
 476+ 8FAB FD 7E 00     2 ld a,(iy)
 477+ 8FAE A6               and (hl)
 478+ 8FAF 28 02            jr z,1F
 479+ 8FB1 1E 81            ld e,$81
 480+ 8FB3 23           1 inc hl
 481+ 8FB4 FD 23            inc iy
 482+ 8FB6 10 F3            djnz 2B
 483+ 8FB8 C9               ret
 484+ 8FB9
 485+ 8FB9              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FB9              ;
 487+ 8FB9              ;   11/04/23
 488+ 8FB9              ;
 489+ 8FB9              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FB9              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FB9              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FB9              ;
 493+ 8FB9              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FB9
 495+ 8FB9              Compara_coordenadas_X
 496+ 8FB9
 497+ 8FB9              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FB9              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FB9
 500+ 8FB9              ; Preparamos registros:
 501+ 8FB9
 502+ 8FB9 21 99 89         ld hl,Filas+6
 503+ 8FBC 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FBD 23               inc hl
 505+ 8FBE 23               inc hl
 506+ 8FBF 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FC0 43               ld b,e
 508+ 8FC1 21 A7 89         ld hl,Filas+20
 509+ 8FC4 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FC5 21 F7 89         ld hl,Coordenadas_X_Entidad
 511+ 8FC8 CD D9 91         call Guarda_coordenadas_X
 512+ 8FCB
 513+ 8FCB              ; Preparamos registros:
 514+ 8FCB
 515+ 8FCB 21 82 85         ld hl,Amadeus_db+6
 516+ 8FCE 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FCF 23               inc hl
 518+ 8FD0 23               inc hl
 519+ 8FD1 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FD2 7B               ld a,e
 521+ 8FD3 08               ex af,af'
 522+ 8FD4 21 90 85         ld hl,Amadeus_db+20
 523+ 8FD7 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FD8 21 F4 89         ld hl,Coordenadas_X_Amadeus
 525+ 8FDB CD D9 91         call Guarda_coordenadas_X
 526+ 8FDE
 527+ 8FDE              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FDE              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FDE
 530+ 8FDE 04               inc b
 531+ 8FDF 05               dec b
 532+ 8FE0 28 04            jr z,1F
 533+ 8FE2 06 03            ld b,3
 534+ 8FE4 18 02            jr 2F
 535+ 8FE6 06 02        1 ld b,2
 536+ 8FE8 08           2 ex af,af'
 537+ 8FE9 3C               inc a
 538+ 8FEA 3D               dec a
 539+ 8FEB 28 04            jr z,5F
 540+ 8FED 0E 03            ld c,3
 541+ 8FEF 18 02            jr 6F
 542+ 8FF1 0E 02        5 ld c,2
 543+ 8FF3 79           6 ld a,c
 544+ 8FF4 08               ex af,af'
 545+ 8FF5 11 F7 89         ld de,Coordenadas_X_Entidad
 546+ 8FF8 1A           4 ld a,(de)
 547+ 8FF9 21 F4 89         ld hl,Coordenadas_X_Amadeus
 548+ 8FFC BE           3 cp (hl)
 549+ 8FFD 28 0E            jr z,7F
 550+ 8FFF 23               inc hl
 551+ 9000 0D               dec c
 552+ 9001 20 F9            jr nz,3B
 553+ 9003 13               inc de
 554+ 9004 08               ex af,af'
 555+ 9005 4F               ld c,a
 556+ 9006 08               ex af,af'
 557+ 9007 10 EF            djnz 4B
 558+ 9009
 559+ 9009              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 9009
 561+ 9009 CD 18 92     8 call Limpia_Coordenadas_X
 562+ 900C C9               ret
 563+ 900D
 564+ 900D              7
 565+ 900D 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 900F 32 AC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9012 21 EF 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 9015 CB D6            set 2,(hl)
 569+ 9017 18 F0            jr 8B
 570+ 9019
 571+ 9019              ; -----------------------------------------------------------------------
 572+ 9019              ;
 573+ 9019              ;   17/04/23
 574+ 9019              ;
 575+ 9019
 576+ 9019              Detecta_colision_nave_entidad
 577+ 9019
 578+ 9019              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 9019
 580+ 9019 2A 95 89         ld hl,(Posicion_actual)
 581+ 901C CD 98 94         call Calcula_puntero_de_impresion
 582+ 901F
 583+ 901F              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 901F              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 901F
 586+ 901F DD E5            push ix
 587+ 9021 E1               pop hl
 588+ 9022 E5               push hl
 589+ 9023
 590+ 9023              ; ----- ----- -----
 591+ 9023 1E 00            ld e,0                                         ; Indica impacto.
 592+ 9025 06 0A            ld b,10
 593+ 9027 CD 57 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 902A 7B               ld a,e
 595+ 902B FE 05            cp 5
 596+ 902D 38 0E            jr c,3F
 597+ 902F
 598+ 902F              ; LLegados a este punto:
 599+ 902F              ;
 600+ 902F              ;   HAY COLISIÓN !!!!!.
 601+ 902F              ;
 602+ 902F              ;   .db (Impacto) de Amadeus a "1".
 603+ 902F              ;   SET el bit3 de (Impacto2).
 604+ 902F              ;
 605+ 902F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 902F
 607+ 902F 21 95 85         ld hl,Amadeus_db+25
 608+ 9032 36 01            ld (hl),1
 609+ 9034 21 EF 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 9037 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 9039 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 903B 18 18            jr 1F
 613+ 903D
 614+ 903D              ; -----
 615+ 903D
 616+ 903D E1           3 pop hl
 617+ 903E CD 33 95         call NextScan
 618+ 9041 E5               push hl
 619+ 9042 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9043 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 9045 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 9047 30 0C            jr nc,1F
 623+ 9049              ;                                                  ; _ 2º scanline si esto es así.
 624+ 9049 10 DC            djnz 2B
 625+ 904B
 626+ 904B              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 904B
 628+ 904B              ; LLegados a este punto:
 629+ 904B              ;
 630+ 904B              ;   NO HAY COLISIÓN !!!!!.
 631+ 904B              ;
 632+ 904B              ;   .db (Impacto) de Amadeus a "0".
 633+ 904B              ;   RES el bit2 de (Impacto2).
 634+ 904B              ;
 635+ 904B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 904B              ;   Lo colocamos a "0".
 637+ 904B
 638+ 904B 21 EF 89         ld hl,Impacto2
 639+ 904E CB 96            res 2,(hl)
 640+ 9050 2A F0 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9053 36 00            ld (hl),0
 642+ 9055
 643+ 9055 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 9056 C9               ret
 645+ 9057
 646+ 9057               ; ---------- ----------
 647+ 9057
 648+ 9057 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 9058 3A 94 89         ld a,(Columns)
 650+ 905B 47               ld b,a
 651+ 905C FD 7E 00     2 ld a,(iy)
 652+ 905F BE               cp (hl)
 653+ 9060 28 01            jr z,1F
 654+ 9062
 655+ 9062 1C               inc e
 656+ 9063
 657+ 9063 23           1 inc hl
 658+ 9064 FD 23            inc iy
 659+ 9066 10 F4            djnz 2B
 660+ 9068 C1               pop bc
 661+ 9069 C9               ret
 662+ 906A
 663+ 906A              ; -------------------------------------------------------------------------------------------------------------
 664+ 906A              ;
 665+ 906A              ;   13/03/23
 666+ 906A              ;
 667+ 906A              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 906A              ;
 669+ 906A              ;   DESTRUYE: HL,BC,DE y A.
 670+ 906A
 671+ 906A 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 906D 7E               ld a,(hl)
 673+ 906E A7               and a
 674+ 906F C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9070
 676+ 9070 44               ld b,h
 677+ 9071 4D               ld c,l
 678+ 9072 2A E8 89         ld hl,(Stack_snapshot_disparos)
 679+ 9075 E5               push hl
 680+ 9076 A7               and a
 681+ 9077 ED 42            sbc hl,bc
 682+ 9079 E5               push hl
 683+ 907A C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 907B
 685+ 907B E1               pop hl
 686+ 907C 54               ld d,h
 687+ 907D 5D               ld e,l
 688+ 907E 1B               dec de
 689+ 907F ED B8            lddr                                                ; Limpiamos.
 690+ 9081
 691+ 9081 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 9084 22 E8 89         ld (Stack_snapshot_disparos),hl
 693+ 9087
 694+ 9087 C9               ret
 695+ 9088
 696+ 9088              ; -------------------------------------------------------------------------------------------------------------
 697+ 9088              ;
 698+ 9088              ;   28/03/23
 699+ 9088              ;
 700+ 9088
 701+ 9088 01 FA 84     Motor_de_disparos ld bc,Disparo_3A
 702+ 908B 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 908E
 704+ 908E CD 01 8D     2 call Extrae_address
 705+ 9091 7E               ld a,(hl)
 706+ 9092 A7               and a
 707+ 9093 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 9095
 709+ 9095              ; ----- ----- ----- ----- ----- -----
 710+ 9095
 711+ 9095 C5               push bc
 712+ 9096 CD 52 91         call foto_disparo_a_borrar
 713+ 9099
 714+ 9099              ; Existe colisión con este disparo???
 715+ 9099
 716+ 9099 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 909A 7E               ld a,(hl)
 718+ 909B 2B               dec hl
 719+ 909C E6 01            and 1
 720+ 909E 28 1D            jr z,9F
 721+ 90A0
 722+ 90A0              ;   En este punto:
 723+ 90A0              ;
 724+ 90A0              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 90A0              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 90A0              ;   _con la entidad).
 727+ 90A0              ;
 728+ 90A0              ;   Disparo_2A defw 0                                ; Control.
 729+ 90A0              ;    defw 0                                          ; Puntero objeto.
 730+ 90A0              ;    defw 0                                          ; Puntero de impresión.
 731+ 90A0              ;    defw 0                                          ; Rutina de impresión.
 732+ 90A0
 733+ 90A0 E5               push hl
 734+ 90A1
 735+ 90A1 06 04            ld b,4
 736+ 90A3 23           19 inc hl
 737+ 90A4 10 FD            djnz 19B
 738+ 90A6
 739+ 90A6 CD 01 8D         call Extrae_address
 740+ 90A9 CD 8A 9B         call Genera_coordenadas_disparo
 741+ 90AC
 742+ 90AC              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90AC
 744+ 90AC 21 F2 89         ld hl,Coordenadas_disparo_certero
 745+ 90AF 72               ld (hl),d
 746+ 90B0 23               inc hl
 747+ 90B1 73               ld (hl),e
 748+ 90B2
 749+ 90B2              ; Elimino el disparo de la base de datos.
 750+ 90B2
 751+ 90B2 E1               pop hl
 752+ 90B3 CD CE 91         call Elimina_disparo_de_base_de_datos
 753+ 90B6 21 EF 89         ld hl,Impacto2
 754+ 90B9 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90BB
 756+ 90BB 18 06            jr 11F
 757+ 90BD
 758+ 90BD CD 7B 91     9 call Mueve_disparo
 759+ 90C0 CD 52 91         call foto_disparo_a_borrar
 760+ 90C3
 761+ 90C3 C1           11 pop bc
 762+ 90C4 18 04            jr 7F
 763+ 90C6
 764+ 90C6              ; ----- ----- ----- ----- ----- -----
 765+ 90C6
 766+ 90C6 ED 42        1 sbc hl,bc
 767+ 90C8 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90CA 2A ED 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90CD 23               inc hl
 770+ 90CE 23               inc hl
 771+ 90CF 22 ED 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90D2 18 BA            jr 2B
 773+ 90D4 CD CA 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90D7
 775+ 90D7 01 62 85         ld bc,Disparo_11
 776+ 90DA 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90DD
 778+ 90DD CD 01 8D     5 call Extrae_address
 779+ 90E0 7E               ld a,(hl)
 780+ 90E1 A7               and a
 781+ 90E2 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90E4
 783+ 90E4              ; ----- ----- ----- ----- ----- -----
 784+ 90E4
 785+ 90E4 C5               push bc
 786+ 90E5 CD 52 91         call foto_disparo_a_borrar
 787+ 90E8
 788+ 90E8              ; Existe colisión con este disparo???
 789+ 90E8
 790+ 90E8 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90E9 7E               ld a,(hl)
 792+ 90EA 2B               dec hl
 793+ 90EB E6 01            and 1
 794+ 90ED 28 48            jr z,10F
 795+ 90EF
 796+ 90EF              ; La colisión se produce con Amadeus???
 797+ 90EF              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90EF
 799+ 90EF E5               push hl
 800+ 90F0
 801+ 90F0 06 04            ld b,4
 802+ 90F2 23           16 inc hl
 803+ 90F3 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90F5 CD 01 8D         call Extrae_address
 805+ 90F8 CD 8A 9B         call Genera_coordenadas_disparo
 806+ 90FB
 807+ 90FB 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90FC FE 16            cp $16
 809+ 90FE 38 22            jr c,15F
 810+ 9100
 811+ 9100              ; (Colisiones en filas 16 y 17).
 812+ 9100
 813+ 9100 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 9101
 815+ 9101              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 9101
 817+ 9101 21 82 85         ld hl,Amadeus_db+6
 818+ 9104 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 9105 23               inc hl
 820+ 9106 23               inc hl
 821+ 9107 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 9108 21 90 85         ld hl,Amadeus_db+20
 823+ 910B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 910C 21 F4 89         ld hl,Coordenadas_X_Amadeus
 825+ 910F CD D9 91         call Guarda_coordenadas_X
 826+ 9112
 827+ 9112 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9113
 829+ 9113              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9113
 831+ 9113 06 03            ld b,3
 832+ 9115 21 F4 89         ld hl,Coordenadas_X_Amadeus
 833+ 9118 7E           18 ld a,(hl)
 834+ 9119 BA               cp d
 835+ 911A 20 03            jr nz,17F
 836+ 911C
 837+ 911C              ; Colisión Amadeus !!!!!!!!!!
 838+ 911C
 839+ 911C E1               pop hl
 840+ 911D 18 09            jr 14F
 841+ 911F
 842+ 911F 23           17 inc hl
 843+ 9120 10 F6            djnz 18B
 844+ 9122
 845+ 9122              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9122              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9122
 848+ 9122 E1           15 pop hl
 849+ 9123 23               inc hl
 850+ 9124 35               dec (hl)
 851+ 9125 2B               dec hl
 852+ 9126 18 0F            jr 10F
 853+ 9128
 854+ 9128              ; -----------------------debug
 855+ 9128
 856+ 9128              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 9128              ; _ almacén de coordenadas_X de Amadeus.
 858+ 9128
 859+ 9128 E5           14 push hl
 860+ 9129 CD CE 91         call Elimina_disparo_de_base_de_datos
 861+ 912C 21 EF 89         ld hl,Impacto2
 862+ 912F CB CE            set 1,(hl)
 863+ 9131 CD 18 92         call Limpia_Coordenadas_X
 864+ 9134
 865+ 9134 E1               pop hl
 866+ 9135 18 06            jr 12F
 867+ 9137
 868+ 9137 CD 7B 91     10 call Mueve_disparo
 869+ 913A CD 52 91         call foto_disparo_a_borrar
 870+ 913D C1           12 pop bc
 871+ 913E
 872+ 913E 18 04            jr 8F
 873+ 9140
 874+ 9140              ; ----- ----- ----- ----- ----- -----
 875+ 9140
 876+ 9140 ED 42        4 sbc hl,bc
 877+ 9142 28 0A            jr z,6F
 878+ 9144
 879+ 9144 2A EB 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 9147 23               inc hl
 881+ 9148 23               inc hl
 882+ 9149 22 EB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 914C 18 8F            jr 5B
 884+ 914E
 885+ 914E CD C3 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9151 C9               ret
 887+ 9152
 888+ 9152              ; ------------------------------------------------------------------
 889+ 9152
 890+ 9152              foto_disparo_a_borrar
 891+ 9152
 892+ 9152 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9153 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9154 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9155
 896+ 9155 E5               push hl
 897+ 9156 23               inc hl
 898+ 9157 23               inc hl
 899+ 9158 ED 73 E2 89      ld (Stack),sp
 900+ 915C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 915D FD E1            pop iy
 902+ 915F DD E1            pop ix
 903+ 9161 E1               pop hl
 904+ 9162 ED 7B E2 89      ld sp,(Stack)
 905+ 9166 3A D1 89         ld a,(Ctrl_1)
 906+ 9169 CB C7            set 0,a
 907+ 916B 32 D1 89         ld (Ctrl_1),a
 908+ 916E CD A0 7F         call Guarda_foto_registros
 909+ 9171 3A D1 89         ld a,(Ctrl_1)
 910+ 9174 CB 87            res 0,a
 911+ 9176 32 D1 89         ld (Ctrl_1),a
 912+ 9179 E1               pop hl
 913+ 917A C9               ret
 914+ 917B
 915+ 917B E5           Mueve_disparo push hl
 916+ 917C 7E               ld a,(hl)
 917+ 917D 06 04            ld b,4
 918+ 917F 23           1 inc hl
 919+ 9180 10 FD            djnz 1B
 920+ 9182
 921+ 9182              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9182
 923+ 9182 CD 01 8D         call Extrae_address
 924+ 9185
 925+ 9185 E6 01            and 1
 926+ 9187 28 2B            jr z,2F
 927+ 9189
 928+ 9189              ; Disparo hacia arriba, (Amadeus).
 929+ 9189
 930+ 9189              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 9189              ; _ de la dificultad.
 932+ 9189
 933+ 9189 CD 42 95         call PreviousScan
 934+ 918C CD 42 95         call PreviousScan
 935+ 918F CD 42 95         call PreviousScan
 936+ 9192
 937+ 9192              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 9192
 939+ 9192 7C               ld a,h
 940+ 9193 FE 40            cp $40
 941+ 9195 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 9197
 943+ 9197              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 9197
 945+ 9197 EB               ex de,hl
 946+ 9198 06 04            ld b,4
 947+ 919A 2B           6 dec hl
 948+ 919B 10 FD            djnz 6B
 949+ 919D
 950+ 919D CD CE 91         call Elimina_disparo_de_base_de_datos
 951+ 91A0 E1               pop hl
 952+ 91A1 18 10            jr 7F
 953+ 91A3
 954+ 91A3              ; Se ha desplazado la bala, compruebo colisión.
 955+ 91A3
 956+ 91A3 D5           3 push de
 957+ 91A4 C5               push bc
 958+ 91A5
 959+ 91A5 CD 88 8F         call Comprueba_Colision
 960+ 91A8
 961+ 91A8              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 91A8
 963+ 91A8 78               ld a,b
 964+ 91A9
 965+ 91A9 C1               pop bc
 966+ 91AA D1               pop de
 967+ 91AB
 968+ 91AB EB               ex de,hl
 969+ 91AC
 970+ 91AC 73               ld (hl),e
 971+ 91AD 23               inc hl
 972+ 91AE 72               ld (hl),d
 973+ 91AF
 974+ 91AF E1           4 pop hl
 975+ 91B0 23               inc hl
 976+ 91B1 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 91B2 2B               dec hl
 978+ 91B3 C9           7 ret
 979+ 91B4
 980+ 91B4              ; Disparo hacia abajo, (Entidad).
 981+ 91B4
 982+ 91B4              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 91B4              ; _ de la dificultad.
 984+ 91B4
 985+ 91B4 CD 33 95     2 call NextScan
 986+ 91B7 CD 33 95         call NextScan
 987+ 91BA CD 33 95         call NextScan
 988+ 91BD
 989+ 91BD              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 91BD
 991+ 91BD 7C               ld a,h
 992+ 91BE FE 58            cp $58
 993+ 91C0 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 91C2
 995+ 91C2 EB               ex de,hl
 996+ 91C3 06 04            ld b,4
 997+ 91C5 2B           5 dec hl
 998+ 91C6 10 FD            djnz 5B
 999+ 91C8
1000+ 91C8 CD CE 91         call Elimina_disparo_de_base_de_datos
1001+ 91CB E1               pop hl
1002+ 91CC 18 E5            jr 7B
1003+ 91CE
1004+ 91CE              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 91CE
1006+ 91CE 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 91D1 AF               xor a
1008+ 91D2 77               ld (hl),a
1009+ 91D3 54               ld d,h
1010+ 91D4 5D               ld e,l
1011+ 91D5 13               inc de
1012+ 91D6 ED B0            ldir
1013+ 91D8 C9               ret
1014+ 91D9
1015+ 91D9              ; -----------------------------------------------------------------
1016+ 91D9              ;
1017+ 91D9              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 91D9              ;
1019+ 91D9              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 91D9              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 91D9              ;
1022+ 91D9              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 91D9              ;
1024+ 91D9              ;   INPUTS:
1025+ 91D9              ;
1026+ 91D9              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 91D9              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 91D9              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 91D9
1030+ 91D9              ;   MODIFICA: A, HL, DE y C
1031+ 91D9
1032+ 91D9 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 91DA 79               ld a,c
1034+ 91DB E6 01            and 1
1035+ 91DD 20 03            jr nz,1F
1036+ 91DF 14               inc d
1037+ 91E0 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 91E2
1039+ 91E2              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 91E2              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 91E2
1042+ 91E2 15           1 dec d
1043+ 91E3 23           2 inc hl
1044+ 91E4 72               ld (hl),d
1045+ 91E5
1046+ 91E5 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 91E6 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 91E7 C8               ret z
1049+ 91E8
1050+ 91E8 AF               xor a
1051+ 91E9 5F               ld e,a
1052+ 91EA 18 ED            jr Guarda_coordenadas_X
1053+ 91EC
1054+ 91EC              ; -----------------------------------------------------------------
1055+ 91EC              ;
1056+ 91EC              ;   12/04/23
1057+ 91EC              ;
1058+ 91EC
1059+ 91EC 3A EF 89     Selector_de_impactos ld a,(Impacto2)
1060+ 91EF A7               and a
1061+ 91F0 C8               ret z
1062+ 91F1
1063+ 91F1 FE 04            cp 4
1064+ 91F3 20 09            jr nz,1F
1065+ 91F5
1066+ 91F5
1067+ 91F5              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 91F5
1069+ 91F5 CD 19 90         call Detecta_colision_nave_entidad
1070+ 91F8
1071+ 91F8 21 EF 89         ld hl,Impacto2
1072+ 91FB CB 5E            bit 3,(hl)
1073+ 91FD C0               ret nz                                               ; Existe colisión, RET.
1074+ 91FE
1075+ 91FE              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 91FE              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 91FE
1078+ 91FE 21 EF 89     1 ld hl,Impacto2
1079+ 9201 CB 4E            bit 1,(hl)
1080+ 9203 28 07            jr z,2F
1081+ 9205
1082+ 9205 21 95 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 9208 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 920A 18 0B            jr 3F
1085+ 920C
1086+ 920C 21 EF 89     2 ld hl,Impacto2
1087+ 920F CB 46            bit 0,(hl)
1088+ 9211 C8               ret z
1089+ 9212
1090+ 9212              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 9212
1092+ 9212 21 D1 89         ld hl,Ctrl_1
1093+ 9215 CB D6            set 2,(hl)
1094+ 9217
1095+ 9217 C9           3 ret
1096+ 9218
1097+ 9218              ; -----------------------------------------------------------------
1098+ 9218              ;
1099+ 9218              ;   16/04/23
1100+ 9218              ;
1101+ 9218
1102+ 9218 AF           Limpia_Coordenadas_X xor a
1103+ 9219 06 06            ld b,6
1104+ 921B 21 F4 89         ld hl,Coordenadas_X_Amadeus
1105+ 921E 77           1 ld (hl),a
1106+ 921F 23               inc hl
1107+ 9220 10 FC            djnz 1B
1108+ 9222 C9               ret
1109+ 9223
1110+ 9223              ; -----------------------------------------------------------------
1111+ 9223              ;
1112+ 9223              ;   25/04/23
1113+ 9223              ;
1114+ 9223
1115+ 9223              Determina_resultado_comparativa
1116+ 9223
1117+ 9223              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 9223              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 9223              ;
1120+ 9223              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 9223              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 9223              ;
1123+ 9223              ;   SBC HL,DE
1124+ 9223
1125+ 9223 7C               ld a,h
1126+ 9224 06 00            ld b,0
1127+ 9226
1128+ 9226 CD 33 92         call Compara_cositas
1129+ 9229
1130+ 9229 04               inc b
1131+ 922A 05               dec b
1132+ 922B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 922C
1134+ 922C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 922D 06 00            ld b,0
1136+ 922F
1137+ 922F CD 33 92         call Compara_cositas
1138+ 9232 C9               ret
1139+ 9233
1140+ 9233 A7           Compara_cositas and a
1141+ 9234 28 15            jr z,1F
1142+ 9236
1143+ 9236 FE FD            cp $fd
1144+ 9238 28 11            jr z,1F
1145+ 923A FE FE            cp $fe
1146+ 923C 28 0D            jr z,1F
1147+ 923E FE FF            cp $ff
1148+ 9240 28 09            jr z,1F
1149+ 9242 FE 01            cp $01
1150+ 9244 28 05            jr z,1F
1151+ 9246 FE 02            cp $02
1152+ 9248 28 01            jr z,1F
1153+ 924A              ;    cp $03
1154+ 924A C0               ret nz
1155+ 924B
1156+ 924B 04           1 inc b
1157+ 924C C9               ret
1158+ 924D
# file closed: Disparo.asm
1269  924D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 924D              ; ******************************************************************************************************************************************************************************************
   2+ 924D              ;
   3+ 924D              ; 01/23
   4+ 924D              ;
   5+ 924D              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 924D
   7+ 924D CD 27 95     Draw call Prepara_draw
   8+ 9250 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9251 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9252 28 05        	jr z,2F
  11+ 9254
  12+ 9254 3A A7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9257 18 0C        	jr 1F
  14+ 9259 2A A5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 925C 22 95 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 925F CD EE 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9262              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9262 CD AD 9C     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9265 3A C1 89     1 ld a,(Ctrl_0)
  20+ 9268 CB 6F        	bit 5,a
  21+ 926A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 926C
  23+ 926C CD 84 92     	call Comprueba_limite_horizontal
  24+ 926F CD 14 93     	call Comprueba_limite_vertical
  25+ 9272
  26+ 9272              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9272
  28+ 9272 CD 61 94     3 call calcula_CColumnass
  29+ 9275 CD 98 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9278 CD ED 94     	call Define_rutina_de_impresion
  31+ 927B
  32+ 927B 3A C1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 927E CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9280 32 C1 89     	ld (Ctrl_0),a
  35+ 9283
  36+ 9283 C9           	ret
  37+ 9284
  38+ 9284              ; *******************************************************************************************************************************************************************************************
  39+ 9284              ;	21/01/23
  40+ 9284              ;
  41+ 9284              ; 	Comprueba_limite_horizontal.
  42+ 9284              ;
  43+ 9284              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9284              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9284              ;
  46+ 9284              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9284              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9284              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9284              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9284
  51+ 9284
  52+ 9284
  53+ 9284 3A C1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9287 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9289 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 928B E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 928D 32 C1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9290 18 09            jr 6F
  59+ 9292 CB 5F        1 bit 3,a
  60+ 9294 28 0A            jr z,2F
  61+ 9296 E6 F7            and $f7
  62+ 9298 32 C1 89         ld (Ctrl_0),a
  63+ 929B CD EE 93     6 call Inicializacion
  64+ 929E 18 5B            jr 5F
  65+ 92A0 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 92A1
  67+ 92A1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 92A1              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 92A1
  70+ 92A1 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 92A2 2A CC 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 92A5 CD F3 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 92A8 67           	ld h,a
  74+ 92A9 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 92AA CD F3 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 92AD 67           	ld h,a
  77+ 92AE A7           	and a
  78+ 92AF ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 92B1 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 92B2 3A A7 89     	ld a,(Cuad_objeto)
  81+ 92B5 FE 02        	cp 2
  82+ 92B7 38 1E        	jr c,3F
  83+ 92B9 28 1C        	jr z,3F
  84+ 92BB 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 92BC 28 23            jr z,7F
  86+ 92BE 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 92C0 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 92C2 E1           	pop hl
  89+ 92C3
  90+ 92C3              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 92C3              ; _para indicar con E="2" en caso necesario.
  92+ 92C3
  93+ 92C3 E5               push hl
  94+ 92C4 C5               push bc
  95+ 92C5 CD F3 97     	call calcula_tercio
  96+ 92C8 FE 01        	cp 1
  97+ 92CA 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 92CC CD FC 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 92CF 28 26            jr z,9F
 100+ 92D1 38 24            jr c,9F
 101+ 92D3 1E 00        11 ld e,0
 102+ 92D5 18 22            jr 8F
 103+ 92D7 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 92D8 28 07        	jr z, 7F
 105+ 92DA 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 92DC 1E 00         	ld e,0
 107+ 92DE E1           	pop hl
 108+ 92DF 18 04        	jr 4F
 109+ 92E1 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 92E3 18 15            jr 10F
 111+ 92E5
 112+ 92E5              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 92E5              ; _para indicar con E="2" en caso necesario.
 114+ 92E5
 115+ 92E5 E5           4 push hl
 116+ 92E6 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 92E7 CD F3 97     	call calcula_tercio
 118+ 92EA FE 01        	cp 1
 119+ 92EC 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 92EE CD FC 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 92F1 28 04            jr z,9F
 122+ 92F3 30 02            jr nc,9F
 123+ 92F5 18 02        	jr 8F
 124+ 92F7 1E 02        9 ld e,2
 125+ 92F9 C1           8 pop bc
 126+ 92FA E1           10 pop hl
 127+ 92FB C9           5 ret
 128+ 92FC
 129+ 92FC              ; --------------------
 130+ 92FC              ;
 131+ 92FC              ; 25/08/22
 132+ 92FC
 133+ 92FC CD F3 97     Comprueba_centro call calcula_tercio
 134+ 92FF 67               ld h,a
 135+ 9300 08           	ex af,af
 136+ 9301 FE 02        	cp 2
 137+ 9303 38 07        	jr c,1F
 138+ 9305 28 05        	jr z,1F
 139+ 9307 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 930A 18 03        	jr 2F
 141+ 930C 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 930F 08           2 ex af,af
 143+ 9310 A7               and a
 144+ 9311 ED 42            sbc hl,bc
 145+ 9313 C9               ret
 146+ 9314
 147+ 9314              ; *********************************************************************************************************************************************************************************************
 148+ 9314              ;
 149+ 9314              ;   16/8/22
 150+ 9314              ;
 151+ 9314              ;	Comprueba_limite_vertical
 152+ 9314              ;
 153+ 9314              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 9314              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 9314              ;
 156+ 9314
 157+ 9314 2A 95 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 9317 7D           	ld a,l
 159+ 9318 E6 1F        	and $1F
 160+ 931A 57           	ld d,a
 161+ 931B 3A CE 89     	ld a,(Limite_vertical)
 162+ 931E BA           	cp d 											; Límite - Posición.
 163+ 931F 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 9320 3A A7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9323 CB 47        	bit 0,a
 166+ 9325 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9327
 168+ 9327              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9327
 170+ 9327 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9328 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 932A
 173+ 932A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 932A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 932A
 176+ 932A 3A 99 89         ld a,(Coordenada_X)
 177+ 932D 16 0F            ld d,Centro_izquierda
 178+ 932F A7               and a
 179+ 9330 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 9331 28 1E            jr z,3F
 181+ 9333 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 9335              ;                                                    ; _salimos sin modificar nada.
 183+ 9335 18 0E            jr 2F
 184+ 9337 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9338 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 933A
 187+ 933A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 933A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 933A
 190+ 933A 3A 99 89         ld a,(Coordenada_X)
 191+ 933D 16 10            ld d,Centro_derecha
 192+ 933F A7               and a
 193+ 9340 92               sub d
 194+ 9341 28 0E            jr z,3F
 195+ 9343 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9345              ;                                                    ; _salimos sin modificar nada.
 197+ 9345 CB 43        2 bit 0,e
 198+ 9347 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9349 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 934A CD DE 93         call Modificaccionne
 201+ 934D C1           	pop bc
 202+ 934E CD EE 93         call Inicializacion
 203+ 9351 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9352
 205+ 9352              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9352
 207+ 9352 C5           4 push bc
 208+ 9353 01 94 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9356 0A           	ld a,(bc)
 210+ 9357 3D           	dec a
 211+ 9358 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9359 7D           	ld a,l
 213+ 935A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 935B CB 47        	bit 0,a
 215+ 935D 28 03        	jr z,5F
 216+ 935F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9360 18 2E        	jr 7F
 218+ 9362
 219+ 9362              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9362
 221+ 9362 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9363 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9364 3A C1 89     	ld a,(Ctrl_0)
 224+ 9367 CB 4F        	bit 1,a
 225+ 9369 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 936B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 936C
 228+ 936C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 936C
 230+ 936C 1C               inc e
 231+ 936D 1D               dec e
 232+ 936E 20 07            jr nz,12F
 233+ 9370 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9371 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9372 22 95 89     	ld (Posicion_actual),hl
 236+ 9375 18 44        13 jr 9F
 237+ 9377 CB 43        12 bit 0,e
 238+ 9379 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 937B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 937B C1           	pop bc
 241+ 937C 18 D3        	jr 3B
 242+ 937E 80           14 add b
 243+ 937F 6F               ld l,a
 244+ 9380 22 95 89     	ld (Posicion_actual),hl
 245+ 9383 CD DE 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9386 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9388 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 938A 32 C1 89         ld (Ctrl_0),a
 249+ 938D F1           	pop af
 250+ 938E 18 2B        	jr 9F
 251+ 9390
 252+ 9390              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9390
 254+ 9390 F5           7 push af
 255+ 9391 3A C1 89     	ld a,(Ctrl_0)
 256+ 9394 CB 47        	bit 0,a
 257+ 9396 20 1D        	jr nz,8F
 258+ 9398 F1           	pop af
 259+ 9399
 260+ 9399              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9399
 262+ 9399 1C           	inc e
 263+ 939A 1D               dec e
 264+ 939B 20 07            jr nz,10F
 265+ 939D 90           	sub b
 266+ 939E 6F               ld l,a
 267+ 939F 22 95 89     	ld (Posicion_actual),hl
 268+ 93A2 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 93A4              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 93A4 CB 43        10 bit 0,e
 271+ 93A6 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 93A8              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 93A8 C1           	pop bc
 274+ 93A9 18 A6        	jr 3B
 275+ 93AB 90           16 sub b
 276+ 93AC 6F               ld l,a
 277+ 93AD 22 95 89     	ld (Posicion_actual),hl
 278+ 93B0 CD DE 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 93B3 18 06            jr 9F
 280+ 93B5 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 93B7 32 C1 89         ld (Ctrl_0),a
 282+ 93BA F1           	pop af
 283+ 93BB C1           9 pop bc
 284+ 93BC 1E 00        	ld e,0
 285+ 93BE CD EE 93         call Inicializacion
 286+ 93C1 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 93C2 08           	ex af,af
 288+ 93C3 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 93C4 18 8B            jr 3B
 290+ 93C6
 291+ 93C6              ; --------------------
 292+ 93C6
 293+ 93C6 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 93C8 CD 42 95     1 call PreviousScan
 295+ 93CB 10 FB            djnz 1B
 296+ 93CD 22 95 89     	ld (Posicion_actual),hl
 297+ 93D0 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 93D1 C9           	ret
 299+ 93D2
 300+ 93D2              ; --------------------
 301+ 93D2
 302+ 93D2 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 93D4 CD 33 95     1 call NextScan
 304+ 93D7 10 FB            djnz 1B
 305+ 93D9 22 95 89     	ld (Posicion_actual),hl
 306+ 93DC AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 93DD C9           	ret
 308+ 93DE
 309+ 93DE              ; --------------------
 310+ 93DE              ;
 311+ 93DE              ;	22/01/23
 312+ 93DE              ;
 313+ 93DE              ;	E="1". Hemos cambiado de cuadrante.
 314+ 93DE              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 93DE              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 93DE
 317+ 93DE
 318+ 93DE              Modificaccionne
 319+ 93DE
 320+ 93DE 3A A7 89     	ld a,(Cuad_objeto)
 321+ 93E1 FE 02        	cp 2
 322+ 93E3 CC C6 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 93E6 DC C6 93         call c,Modifica_Pos_actual
 324+ 93E9 C8           	ret z
 325+ 93EA CD D2 93         call Modifica_Pos_actual2
 326+ 93ED C9               ret
 327+ 93EE
 328+ 93EE              ; *************************************************************************************************************************************************************************************************
 329+ 93EE              ;
 330+ 93EE              ;	13/8/22
 331+ 93EE              ;
 332+ 93EE              ;	Inicializacion
 333+ 93EE              ;
 334+ 93EE              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 93EE              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 93EE              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 93EE              ;
 338+ 93EE              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 93EE              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 93EE              ;	_ desaparece/aparece.
 341+ 93EE
 342+ 93EE              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 93EE              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 93EE              ;
 345+ 93EE              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 93EE              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 93EE              ; 		   [E] ="0"
 348+ 93EE
 349+ 93EE              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 93EE
 351+ 93EE CD F3 97     Inicializacion call calcula_tercio
 352+ 93F1 28 36        	jr z,primit
 353+ 93F3 E6 02        	and 2
 354+ 93F5 20 07        	jr nz,segmit
 355+ 93F7 7D           	ld a,l
 356+ 93F8 FE 7F        	cp $7f
 357+ 93FA 38 2D        	jr c,primit
 358+ 93FC 28 2B        	jr z,primit
 359+ 93FE CD 5B 94     segmit call column
 360+ 9401 38 13        	jr c,tercuad
 361+ 9403 3E 04        cuarcuad ld a,4
 362+ 9405 32 A7 89     	ld (Cuad_objeto),a
 363+ 9408 21 20 48     	ld hl,$4820
 364+ 940B 22 CC 89     	ld (Limite_horizontal),hl
 365+ 940E 21 CE 89     	ld hl,Limite_vertical
 366+ 9411 36 0D        	ld (hl),$0d
 367+ 9413 08           	ex af,af
 368+ 9414 18 3C        	jr 1F
 369+ 9416              tercuad
 370+ 9416 3E 03        	ld a,3
 371+ 9418 32 A7 89     	ld (Cuad_objeto),a
 372+ 941B 21 20 48     	ld hl,$4820
 373+ 941E 22 CC 89     	ld (Limite_horizontal),hl
 374+ 9421 21 CE 89     	ld hl,Limite_vertical
 375+ 9424 36 12        	ld (hl),$12
 376+ 9426 08           	ex af,af
 377+ 9427 18 29        	jr 1F
 378+ 9429 CD 5B 94     primit call column
 379+ 942C 38 13        	jr c, primcuad
 380+ 942E              segcuad
 381+ 942E 3E 02        	ld a,2
 382+ 9430 32 A7 89     	ld (Cuad_objeto),a
 383+ 9433 21 C0 4F     	ld hl,$4fc0
 384+ 9436 22 CC 89     	ld (Limite_horizontal),hl
 385+ 9439 21 CE 89     	ld hl,Limite_vertical
 386+ 943C 36 0D        	ld (hl),$0d
 387+ 943E 08           	ex af,af
 388+ 943F 18 11        	jr 1F
 389+ 9441              primcuad
 390+ 9441 3E 01        	ld a,1
 391+ 9443 32 A7 89     	ld (Cuad_objeto),a
 392+ 9446 21 C0 4F     	ld hl,$4fc0
 393+ 9449 22 CC 89     	ld (Limite_horizontal),hl
 394+ 944C 21 CE 89     	ld hl,Limite_vertical
 395+ 944F 36 12        	ld (hl),$12
 396+ 9451 08           	ex af,af
 397+ 9452 CD 5F 9B     1 call Genera_coordenadas
 398+ 9455 21 C1 89     	ld hl,Ctrl_0
 399+ 9458 CB EE        	set 5,(hl)
 400+ 945A C9           	ret
 401+ 945B
 402+ 945B              ; ------------------------------------------------------------------------------------------------------------------
 403+ 945B
 404+ 945B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 945B              ;
 406+ 945B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 945B
 408+ 945B 7D           column ld a,l
 409+ 945C E6 1F        	and $1f
 410+ 945E FE 10         	cp $10
 411+ 9460 C9            	ret
 412+ 9461
 413+ 9461              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9461              ;
 415+ 9461              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9461              ;
 417+ 9461              ; 14/12/22
 418+ 9461              ;
 419+ 9461              ;	Modifica: A y BC.
 420+ 9461
 421+ 9461 3A A7 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9464 E6 01        	and 1
 423+ 9466 28 17        	jr z,1F
 424+ 9468
 425+ 9468              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9468
 427+ 9468 3A 99 89     	ld a,(Coordenada_X)
 428+ 946B 47           	ld b,a
 429+ 946C 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 946D 79           	ld a,c
 431+ 946E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 946F 38 08        	jr c,2F
 433+ 9471 47           	ld b,a
 434+ 9472 79           	ld a,c
 435+ 9473 90           	sub b
 436+ 9474 32 CB 89     	ld (Columnas),a
 437+ 9477 18 1B        	jr 4F
 438+ 9479 79           2 ld a,c
 439+ 947A 32 CB 89     	ld (Columnas),a
 440+ 947D 18 15        	jr 4F
 441+ 947F
 442+ 947F              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 947F
 444+ 947F 3A 99 89     1 ld a,(Coordenada_X)
 445+ 9482 81           	add c
 446+ 9483 3D           	dec a
 447+ 9484 D6 1F        	sub $1f
 448+ 9486 38 08        	jr c,3F
 449+ 9488 47           	ld b,a
 450+ 9489 79           	ld a,c
 451+ 948A 90           	sub b
 452+ 948B 32 CB 89     	ld (Columnas),a
 453+ 948E 18 04        	jr 4F
 454+ 9490 79           3 ld a,c
 455+ 9491 32 CB 89     	ld (Columnas),a
 456+ 9494 D9           4 exx
 457+ 9495 4F           	ld c,a
 458+ 9496 D9           	exx
 459+ 9497 C9            ret
 460+ 9498
 461+ 9498              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9498              ;
 463+ 9498              ; 7/1/23
 464+ 9498              ;
 465+ 9498              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9498              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9498              ;
 468+ 9498              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9498              ;	DESTRUYE: HL,B Y A.
 470+ 9498
 471+ 9498 3A A7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 949B FE 02        	cp 2
 473+ 949D 38 18        	jr c,1F
 474+ 949F 28 16        	jr z,1F
 475+ 94A1 E6 01        	and 1
 476+ 94A3 28 0D        	jr z,3F
 477+ 94A5
 478+ 94A5              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 94A5
 480+ 94A5 CD E1 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 94A8
 482+ 94A8 7D           9 ld a,l
 483+ 94A9 E6 1F        	and $1f
 484+ 94AB 28 2A        	jr z,7F
 485+ 94AD 2B           	dec hl
 486+ 94AE 10 F8        	djnz 9B
 487+ 94B0 18 25        	jr 7F
 488+ 94B2
 489+ 94B2              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 94B2
 491+ 94B2 2A 95 89     3 ld hl,(Posicion_actual)
 492+ 94B5 18 20        	jr 7F
 493+ 94B7
 494+ 94B7 28 14        1 jr z,2F
 495+ 94B9
 496+ 94B9              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 94B9
 498+ 94B9 CD E1 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 94BC
 500+ 94BC 7D           4 ld a,l
 501+ 94BD E6 1F        	and $1f
 502+ 94BF 28 03        	jr z,6F
 503+ 94C1 2B           	dec hl
 504+ 94C2 10 F8        	djnz 4B
 505+ 94C4 06 0F        6 ld b,15
 506+ 94C6 CD 42 95     5 call PreviousScan
 507+ 94C9 10 FB        	djnz 5B
 508+ 94CB 18 0A        	jr 7F
 509+ 94CD
 510+ 94CD              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 94CD
 512+ 94CD CD E1 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 94D0 06 0F        	ld b,15
 514+ 94D2 CD 42 95     8 call PreviousScan
 515+ 94D5 10 FB        	djnz 8B
 516+ 94D7
 517+ 94D7 E5           7 push hl
 518+ 94D8 DD E1        	pop ix
 519+ 94DA
 520+ 94DA 2A 97 89     	ld hl,(Puntero_objeto)
 521+ 94DD E5           	push hl
 522+ 94DE FD E1        	pop iy
 523+ 94E0
 524+ 94E0 C9           	ret
 525+ 94E1
 526+ 94E1              ; --------------------------------------------------------------------------------------------------------------------
 527+ 94E1              ;
 528+ 94E1              ;	2/1/23
 529+ 94E1              ;
 530+ 94E1              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 94E1              ;
 532+ 94E1              ;	Tras esta rutina tenemos:
 533+ 94E1              ;
 534+ 94E1              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 94E1              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 94E1              ;
 537+ 94E1              ;	DESTRUYE!!!!! HL,B y A.
 538+ 94E1
 539+ 94E1 2A 95 89     Operandos ld hl,(Posicion_actual)
 540+ 94E4 3A CB 89     	ld a,(Columnas)
 541+ 94E7 3D           	dec a
 542+ 94E8 20 01        	jr nz,1F
 543+ 94EA 3C           	inc a
 544+ 94EB 47           1 ld b,a
 545+ 94EC C9           	ret
 546+ 94ED
 547+ 94ED              ; --------------------------------------------------------------------------------------------------------------------
 548+ 94ED              ;
 549+ 94ED              ;	3/1/23
 550+ 94ED              ;
 551+ 94ED              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 94ED              ;
 553+ 94ED              ;	Destruye: A,B,HL y DE.
 554+ 94ED
 555+ 94ED              Define_rutina_de_impresion
 556+ 94ED
 557+ 94ED 3A 94 89     	ld a,(Columns)
 558+ 94F0 47           	ld b,a
 559+ 94F1 3A CB 89     	ld a,(Columnas)
 560+ 94F4 B8           	cp b
 561+ 94F5 20 0D        	jr nz,2f
 562+ 94F7
 563+ 94F7              ;	La entidad se imprime entera.
 564+ 94F7
 565+ 94F7 21 C3 95     	ld hl, Indice_entidades_completas
 566+ 94FA E6 01        	and 1
 567+ 94FC 28 02        	jr z,1F
 568+ 94FE
 569+ 94FE 23           	inc hl
 570+ 94FF 23           	inc hl
 571+ 9500
 572+ 9500 CD 01 8D     1 call Extrae_address
 573+ 9503 C9           	ret		;	ret
 574+ 9504
 575+ 9504              ;	La entidad no se imprime entera en pantalla.
 576+ 9504
 577+ 9504 3A A7 89     2 ld a,(Cuad_objeto)
 578+ 9507 E6 01        	and 1
 579+ 9509 28 17        	jr z,3F
 580+ 950B
 581+ 950B              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 950B
 583+ 950B 21 C7 95     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 950E 3A 94 89     4 ld a,(Columns)
 585+ 9511 E6 01        	and 1
 586+ 9513 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 9515
 588+ 9515 23           	inc hl
 589+ 9516 23           	inc hl
 590+ 9517
 591+ 9517 3A CB 89     	ld a,(Columnas)
 592+ 951A E6 01        	and 1
 593+ 951C 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 951E
 595+ 951E 23           	inc hl
 596+ 951F 23           	inc hl
 597+ 9520
 598+ 9520 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 9522
 600+ 9522 21 CD 95     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 9525 18 E7        	jr 4B
 602+ 9527
 603+ 9527              ; --------------------------------------------------------------------------------------------------------------------
 604+ 9527              ;
 605+ 9527              ;	Prepara_draw
 606+ 9527              ;
 607+ 9527              ;	Es una rutina de carga.
 608+ 9527              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 9527              ;
 610+ 9527              ;	FUNCIONAMIENTO:
 611+ 9527              ;
 612+ 9527              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 9527              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 9527              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 9527              ;
 616+ 9527              ;	DESTRUYE:
 617+ 9527              ;
 618+ 9527              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 9527
 620+ 9527 21 93 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 952A 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 952B 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 952C 4E           	ld c,(hl)
 624+ 952D 2A 95 89     	ld hl,(Posicion_actual)
 625+ 9530 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 9532 C9           	ret
 627+ 9533
 628+ 9533              ;----------------------------------------------------------------------------------------------------------------
 629+ 9533              ;
 630+ 9533              ;	5/08/22
 631+ 9533              ;
 632+ 9533              ;   NextScan.
 633+ 9533              ;
 634+ 9533              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 9533              ;
 636+ 9533              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 9533              ;
 638+ 9533              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 9533              ;
 640+ 9533              ;       DESTRUIDOS: AF y HL !!!
 641+ 9533              ;
 642+ 9533              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 9533              ;
 644+ 9533
 645+ 9533 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 9534 7C               ld a,h
 647+ 9535 E6 07            and 7
 648+ 9537 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 9538
 650+ 9538 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 9539 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 953B 6F               ld l,a
 653+ 953C D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 953D
 655+ 953D 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 953E D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 9540 67               ld h,a
 658+ 9541 C9               ret
 659+ 9542
 660+ 9542              ;----------------------------------------------------------------------------------------------------------------
 661+ 9542              ;
 662+ 9542              ;	5/08/22
 663+ 9542              ;
 664+ 9542              ;   PreviousScan.
 665+ 9542              ;
 666+ 9542              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 9542              ;
 668+ 9542              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 9542              ;
 670+ 9542              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9542              ;
 672+ 9542              ;       DESTRUIDOS: AF y HL !!!
 673+ 9542              ;
 674+ 9542              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9542              ;
 676+ 9542
 677+ 9542 7C           PreviousScan ld a,h
 678+ 9543 25               dec h               ; Dec H.
 679+ 9544 E6 07            and 7
 680+ 9546 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9547
 682+ 9547 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 9548 D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 954A 6F               ld l,a
 685+ 954B D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 954C
 687+ 954C 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 954D C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 954F 67               ld h,a
 690+ 9550 C9               ret
 691+ 9551
 692+ 9551              ; -----------------------------------------------------------------------------------
 693+ 9551              ;
 694+ 9551              ;	28/2/23
 695+ 9551              ;
 696+ 9551              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9551              ;	Extrae fotos de Album_de_fotos.
 698+ 9551
 699+ 9551 3A DD 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 9554 A7           	and a
 701+ 9555 C8           	ret z
 702+ 9556 ED 73 E2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 955A 31 00 70     	ld sp,Album_de_fotos
 704+ 955D
 705+ 955D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 955F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9560 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9561
 709+ 9561 ED 73 E4 89  	ld (Stack_2),sp
 710+ 9565 ED 7B E2 89  	ld sp,(Stack)
 711+ 9569
 712+ 9569              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9569
 714+ 9569 3E CD        	ld a,$cd
 715+ 956B 32 73 95     	ld (Imprime),a
 716+ 956E EB           	ex de,hl
 717+ 956F 22 74 95     	ld (Imprime+1),hl
 718+ 9572 EB           	ex de,hl
 719+ 9573
 720+ 9573              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9573
 722+ 9573 00 00 00     Imprime db 0,0,0
 723+ 9576
 724+ 9576 3A DD 89     	ld a,(Numero_de_malotes)
 725+ 9579 3D           	dec a
 726+ 957A 28 09        	jr z,1F
 727+ 957C 32 DD 89      	ld (Numero_de_malotes),a
 728+ 957F
 729+ 957F ED 7B E4 89   	ld sp,(Stack_2)
 730+ 9583 18 D8        	jr 2B
 731+ 9585
 732+ 9585 AF           1 xor a
 733+ 9586 32 E4 89     	ld (Stack_2),a
 734+ 9589 C9           	ret
 735+ 958A
 736+ 958A              ; -----------------------------------------------------------------------------------
 737+ 958A              ;
 738+ 958A              ;	28/2/23
 739+ 958A              ;
 740+ 958A              ;	Pinta los disparos generados.
 741+ 958A
 742+ 958A              Extrae_foto_disparos
 743+ 958A
 744+ 958A 3A EA 89     	ld a,(Numero_de_disparotes)
 745+ 958D A7           	and a
 746+ 958E C8           	ret z
 747+ 958F ED 73 E2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9593 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 9596
 750+ 9596 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 9598 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9599 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 959A
 754+ 959A ED 73 E4 89  	ld (Stack_2),sp
 755+ 959E ED 7B E2 89  	ld sp,(Stack)
 756+ 95A2
 757+ 95A2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 95A2
 759+ 95A2 3E CD        	ld a,$cd
 760+ 95A4 32 AC 95     	ld (Imprime2),a
 761+ 95A7 EB           	ex de,hl
 762+ 95A8 22 AD 95     	ld (Imprime2+1),hl
 763+ 95AB EB           	ex de,hl
 764+ 95AC
 765+ 95AC              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 95AC
 767+ 95AC 00 00 00     Imprime2 db 0,0,0
 768+ 95AF
 769+ 95AF 3A EA 89     	ld a,(Numero_de_disparotes)
 770+ 95B2 3D           	dec a
 771+ 95B3 28 09        	jr z,1F
 772+ 95B5 32 EA 89      	ld (Numero_de_disparotes),a
 773+ 95B8
 774+ 95B8 ED 7B E4 89  	ld sp,(Stack_2)
 775+ 95BC 18 D8        	jr 2B
 776+ 95BE
 777+ 95BE AF           1 xor a
 778+ 95BF 32 E4 89     	ld (Stack_2),a
 779+ 95C2 C9           	ret
 780+ 95C3
# file closed: Draw_XOR.asm
1270  95C3              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95C3              ;   índices de Rutinas de impresión.
   2+ 95C3
   3+ 95C3 D3 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95C5 00 96            defw Pinta_Amadeus_3x2
   5+ 95C7
   6+ 95C7 56 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95C9 F6 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95CB AA 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95CD
  10+ 95CD 80 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95CF 84 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95D1 38 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95D3
  14+ 95D3
  15+ 95D3              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95D3              ;
  17+ 95D3              ;   12/12/22
  18+ 95D3              ;
  19+ 95D3              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95D3              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95D3              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95D3              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95D3              ;
  24+ 95D3              ;   Modifica: DE y HL.
  25+ 95D3
  26+ 95D3 ED 73 E2 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95D7 FD F9        	ld sp,iy
  28+ 95D9 06 10            ld b,16
  29+ 95DB D1           1 pop de
  30+ 95DC 7B               ld a,e
  31+ 95DD AE               xor (hl)
  32+ 95DE 77           	ld (hl),a
  33+ 95DF 23           	inc hl
  34+ 95E0 7A               ld a,d
  35+ 95E1 AE               xor (hl)
  36+ 95E2 77           	ld (hl),a
  37+ 95E3 2B           	dec hl
  38+ 95E4 24           	inc h
  39+ 95E5 7C               ld a,h
  40+ 95E6 E6 07            and 7
  41+ 95E8 20 0A            jr nz,2F
  42+ 95EA 7D               ld a,l
  43+ 95EB C6 20            add a,$20
  44+ 95ED 6F               ld l,a
  45+ 95EE 38 04            jr c,2F
  46+ 95F0 7C               ld a,h
  47+ 95F1 D6 08            sub 8
  48+ 95F3 67               ld h,a
  49+ 95F4 7C           2 ld a,h
  50+ 95F5 FE 58            cp $58
  51+ 95F7 28 02            jr z,3F
  52+ 95F9 10 E0            djnz 1B
  53+ 95FB ED 7B E2 89  3 ld sp,(Stack)
  54+ 95FF C9           	ret
  55+ 9600
  56+ 9600 ED 73 E2 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9604 FD F9        	ld sp,iy
  58+ 9606 06 08            ld b,8
  59+ 9608 D1           1 pop de
  60+ 9609 7B               ld a,e
  61+ 960A AE               xor (hl)
  62+ 960B 77           	ld (hl),a
  63+ 960C 23           	inc hl
  64+ 960D 7A               ld a,d
  65+ 960E AE               xor (hl)
  66+ 960F 77           	ld (hl),a
  67+ 9610 23           	inc hl
  68+ 9611 D1           	pop de
  69+ 9612 7B               ld a,e
  70+ 9613 AE               xor (hl)
  71+ 9614 77           	ld (hl),a
  72+ 9615 2B           	dec hl
  73+ 9616 2B           	dec hl
  74+ 9617 24           	inc h
  75+ 9618 7C               ld a,h
  76+ 9619 E6 07            and 7
  77+ 961B 20 0A            jr nz,2F
  78+ 961D 7D               ld a,l
  79+ 961E C6 20            add a,$20
  80+ 9620 6F               ld l,a
  81+ 9621 38 04            jr c,2F
  82+ 9623 7C               ld a,h
  83+ 9624 D6 08            sub 8
  84+ 9626 67               ld h,a
  85+ 9627 7C           2 ld a,h
  86+ 9628 FE 58            cp $58
  87+ 962A 28 25            jr z,4F
  88+ 962C 7A               ld a,d
  89+ 962D AE               xor (hl)
  90+ 962E 77               ld (hl),a
  91+ 962F D1           	pop de
  92+ 9630 23           	inc hl
  93+ 9631 7B               ld a,e
  94+ 9632 AE               xor (hl)
  95+ 9633 77           	ld (hl),a
  96+ 9634 23           	inc hl
  97+ 9635 7A               ld a,d
  98+ 9636 AE               xor (hl)
  99+ 9637 77           	ld (hl),a
 100+ 9638 2B           	dec hl
 101+ 9639 2B           	dec hl
 102+ 963A 24           	inc h
 103+ 963B 7C               ld a,h
 104+ 963C E6 07            and 7
 105+ 963E 20 0A            jr nz,3F
 106+ 9640 7D               ld a,l
 107+ 9641 C6 20            add a,$20
 108+ 9643 6F               ld l,a
 109+ 9644 38 04            jr c,3F
 110+ 9646 7C               ld a,h
 111+ 9647 D6 08            sub 8
 112+ 9649 67               ld h,a
 113+ 964A 7C           3 ld a,h
 114+ 964B FE 58            cp $58
 115+ 964D 28 02            jr z,4F
 116+ 964F 10 B7            djnz 1B
 117+ 9651 ED 7B E2 89  4 ld sp,(Stack)
 118+ 9655 C9           	ret
 119+ 9656
 120+ 9656              ; ---------------------------------------------------
 121+ 9656
 122+ 9656 ED 73 E2 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 965A FD F9        	ld sp,iy
 124+ 965C
 125+ 965C              ; >>>
 126+ 965C
 127+ 965C 06 10            ld b,16
 128+ 965E D1           1 pop de
 129+ 965F 7A           	ld a,d
 130+ 9660 AE           	xor (hl)
 131+ 9661 77           	ld (hl),a
 132+ 9662 24           	inc h
 133+ 9663 7C               ld a,h
 134+ 9664 E6 07            and 7
 135+ 9666 20 0C            jr nz,2F
 136+ 9668 7D               ld a,l
 137+ 9669 C6 20            add a,$20
 138+ 966B 6F               ld l,a
 139+ 966C 38 06            jr c,2F
 140+ 966E 7C               ld a,h
 141+ 966F D6 08            sub 8
 142+ 9671 67               ld h,a
 143+ 9672 18 00            jr 2F
 144+ 9674 7C           2 ld a,h
 145+ 9675 FE 58            cp $58
 146+ 9677 28 02            jr z,3F
 147+ 9679 10 E3            djnz 1B
 148+ 967B ED 7B E2 89  3 ld sp,(Stack)
 149+ 967F C9           	ret
 150+ 9680
 151+ 9680 ED 73 E2 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9684 FD F9        	ld sp,iy
 153+ 9686
 154+ 9686              ; >>>
 155+ 9686
 156+ 9686 06 10            ld b,16
 157+ 9688 D1           1 pop de
 158+ 9689 7B           	ld a,e
 159+ 968A AE           	xor (hl)
 160+ 968B 77           	ld (hl),a
 161+ 968C 24           	inc h
 162+ 968D 7C               ld a,h
 163+ 968E E6 07            and 7
 164+ 9690 20 0C            jr nz,2F
 165+ 9692 7D               ld a,l
 166+ 9693 C6 20            add a,$20
 167+ 9695 6F               ld l,a
 168+ 9696 38 06            jr c,2F
 169+ 9698 7C               ld a,h
 170+ 9699 D6 08            sub 8
 171+ 969B 67               ld h,a
 172+ 969C 18 00            jr 2F
 173+ 969E 7C           2 ld a,h
 174+ 969F FE 58            cp $58
 175+ 96A1 28 02            jr z,3F
 176+ 96A3 10 E3            djnz 1B
 177+ 96A5 ED 7B E2 89  3 ld sp,(Stack)
 178+ 96A9 C9           	ret
 179+ 96AA
 180+ 96AA              ; ---------------------------------------------------
 181+ 96AA
 182+ 96AA ED 73 E2 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96AE FD F9        	ld sp,iy
 184+ 96B0 06 08            ld b,8
 185+ 96B2 D1           1 pop de
 186+ 96B3 7A           	ld a,d
 187+ 96B4 AE           	xor (hl)
 188+ 96B5 77           	ld (hl),a
 189+ 96B6 23           	inc hl
 190+ 96B7 D1           	pop de
 191+ 96B8 7B           	ld a,e
 192+ 96B9 AE           	xor (hl)
 193+ 96BA 77           	ld (hl),a
 194+ 96BB 2B           	dec hl
 195+ 96BC 24            	inc h
 196+ 96BD 7C               ld a,h
 197+ 96BE E6 07            and 7
 198+ 96C0 20 0A            jr nz,2F
 199+ 96C2 7D               ld a,l
 200+ 96C3 C6 20            add a,$20
 201+ 96C5 6F               ld l,a
 202+ 96C6 38 04            jr c,2F
 203+ 96C8 7C               ld a,h
 204+ 96C9 D6 08            sub 8
 205+ 96CB 67               ld h,a
 206+ 96CC 7C           2 ld a,h
 207+ 96CD FE 58            cp $58
 208+ 96CF 28 20            jr z,4F
 209+ 96D1 D1               pop de
 210+ 96D2 7B           	ld a,e
 211+ 96D3 AE           	xor (hl)
 212+ 96D4 77           	ld (hl),a
 213+ 96D5 23           	inc hl
 214+ 96D6 7A           	ld a,d
 215+ 96D7 AE           	xor (hl)
 216+ 96D8 77           	ld (hl),a
 217+ 96D9 2B           	dec hl
 218+ 96DA 24           	inc h
 219+ 96DB 7C               ld a,h
 220+ 96DC E6 07            and 7
 221+ 96DE 20 0A            jr nz,3F
 222+ 96E0 7D               ld a,l
 223+ 96E1 C6 20            add a,$20
 224+ 96E3 6F               ld l,a
 225+ 96E4 38 04            jr c,3F
 226+ 96E6 7C               ld a,h
 227+ 96E7 D6 08            sub 8
 228+ 96E9 67               ld h,a
 229+ 96EA 7C           3 ld a,h
 230+ 96EB FE 58            cp $58
 231+ 96ED 28 02            jr z,4F
 232+ 96EF 10 C1            djnz 1B
 233+ 96F1 ED 7B E2 89  4 ld sp,(Stack)
 234+ 96F5 C9           	ret
 235+ 96F6
 236+ 96F6 ED 73 E2 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96FA FD F9        	ld sp,iy
 238+ 96FC 06 08            ld b,8
 239+ 96FE D1           1 pop de
 240+ 96FF D1           	pop de
 241+ 9700 7B           	ld a,e
 242+ 9701 AE           	xor (hl)
 243+ 9702 77           	ld (hl),a
 244+ 9703 24            	inc h
 245+ 9704 7C               ld a,h
 246+ 9705 E6 07            and 7
 247+ 9707 20 0A            jr nz,2F
 248+ 9709 7D               ld a,l
 249+ 970A C6 20            add a,$20
 250+ 970C 6F               ld l,a
 251+ 970D 38 04            jr c,2F
 252+ 970F 7C               ld a,h
 253+ 9710 D6 08            sub 8
 254+ 9712 67               ld h,a
 255+ 9713 7C           2 ld a,h
 256+ 9714 FE 58            cp $58
 257+ 9716 28 1B            jr z,4F
 258+ 9718 D1               pop de
 259+ 9719 7A           	ld a,d
 260+ 971A AE           	xor (hl)
 261+ 971B 77           	ld (hl),a
 262+ 971C 24           	inc h
 263+ 971D 7C               ld a,h
 264+ 971E E6 07            and 7
 265+ 9720 20 0A            jr nz,3F
 266+ 9722 7D               ld a,l
 267+ 9723 C6 20            add a,$20
 268+ 9725 6F               ld l,a
 269+ 9726 38 04            jr c,3F
 270+ 9728 7C               ld a,h
 271+ 9729 D6 08            sub 8
 272+ 972B 67               ld h,a
 273+ 972C 7C           3 ld a,h
 274+ 972D FE 58            cp $58
 275+ 972F 28 02            jr z,4F
 276+ 9731 10 CB            djnz 1B
 277+ 9733 ED 7B E2 89  4 ld sp,(Stack)
 278+ 9737 C9           	ret
 279+ 9738
 280+ 9738 ED 73 E2 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 973C FD F9        	ld sp,iy
 282+ 973E 06 08            ld b,8
 283+ 9740 D1           1 pop de
 284+ 9741 7B           	ld a,e
 285+ 9742 AE           	xor (hl)
 286+ 9743 77           	ld (hl),a
 287+ 9744 23           	inc hl
 288+ 9745 7A           	ld a,d
 289+ 9746 AE           	xor (hl)
 290+ 9747 77           	ld (hl),a
 291+ 9748 2B           	dec hl
 292+ 9749 24             	inc h
 293+ 974A 7C               ld a,h
 294+ 974B E6 07            and 7
 295+ 974D 20 0A            jr nz,2F
 296+ 974F 7D               ld a,l
 297+ 9750 C6 20            add a,$20
 298+ 9752 6F               ld l,a
 299+ 9753 38 04            jr c,2F
 300+ 9755 7C               ld a,h
 301+ 9756 D6 08            sub 8
 302+ 9758 67               ld h,a
 303+ 9759 7C           2 ld a,h
 304+ 975A FE 58            cp $58
 305+ 975C 28 21            jr z,4F
 306+ 975E D1               pop de
 307+ 975F 7A           	ld a,d
 308+ 9760 AE           	xor (hl)
 309+ 9761 77           	ld (hl),a
 310+ 9762 23           	inc hl
 311+ 9763 D1               pop de
 312+ 9764 7B           	ld a,e
 313+ 9765 AE           	xor (hl)
 314+ 9766 77           	ld (hl),a
 315+ 9767 2B           	dec hl
 316+ 9768 24           	inc h
 317+ 9769 7C               ld a,h
 318+ 976A E6 07            and 7
 319+ 976C 20 0A            jr nz,3F
 320+ 976E 7D               ld a,l
 321+ 976F C6 20            add a,$20
 322+ 9771 6F               ld l,a
 323+ 9772 38 04            jr c,3F
 324+ 9774 7C               ld a,h
 325+ 9775 D6 08            sub 8
 326+ 9777 67               ld h,a
 327+ 9778 7C           3 ld a,h
 328+ 9779 FE 58            cp $58
 329+ 977B 28 02            jr z,4F
 330+ 977D 10 C1            djnz 1B
 331+ 977F ED 7B E2 89  4 ld sp,(Stack)
 332+ 9783 C9           	ret
 333+ 9784
 334+ 9784 ED 73 E2 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9788 FD F9        	ld sp,iy
 336+ 978A 06 08            ld b,8
 337+ 978C D1           1 pop de
 338+ 978D 7B           	ld a,e
 339+ 978E AE           	xor (hl)
 340+ 978F 77           	ld (hl),a
 341+ 9790 24            	inc h
 342+ 9791 7C               ld a,h
 343+ 9792 E6 07            and 7
 344+ 9794 20 0A            jr nz,2F
 345+ 9796 7D               ld a,l
 346+ 9797 C6 20            add a,$20
 347+ 9799 6F               ld l,a
 348+ 979A 38 04            jr c,2F
 349+ 979C 7C               ld a,h
 350+ 979D D6 08            sub 8
 351+ 979F 67               ld h,a
 352+ 97A0 7C           2 ld a,h
 353+ 97A1 FE 58            cp $58
 354+ 97A3 28 1C            jr z,4F
 355+ 97A5 D1               pop de
 356+ 97A6 7A           	ld a,d
 357+ 97A7 AE           	xor (hl)
 358+ 97A8 77           	ld (hl),a
 359+ 97A9 24           	inc h
 360+ 97AA 7C               ld a,h
 361+ 97AB E6 07            and 7
 362+ 97AD 20 0A            jr nz,3F
 363+ 97AF 7D               ld a,l
 364+ 97B0 C6 20            add a,$20
 365+ 97B2 6F               ld l,a
 366+ 97B3 38 04            jr c,3F
 367+ 97B5 7C               ld a,h
 368+ 97B6 D6 08            sub 8
 369+ 97B8 67               ld h,a
 370+ 97B9 7C           3 ld a,h
 371+ 97BA FE 58            cp $58
 372+ 97BC 28 03            jr z,4F
 373+ 97BE D1               pop de
 374+ 97BF 10 CB            djnz 1B
 375+ 97C1 ED 7B E2 89  4 ld sp,(Stack)
 376+ 97C5 C9           	ret
 377+ 97C6
 378+ 97C6              ; ---------------------------------------------------
 379+ 97C6              ;
 380+ 97C6              ;   27/02/23
 381+ 97C6              ;
 382+ 97C6              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97C6              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97C6              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97C6
 386+ 97C6 ED 73 E2 89  Pinta_Disparo ld (Stack),sp
 387+ 97CA FD F9            ld sp,iy
 388+ 97CC 06 02            ld b,2
 389+ 97CE D1           1 pop de
 390+ 97CF 7B               ld a,e
 391+ 97D0 AE               xor (hl)
 392+ 97D1 77               ld (hl),a
 393+ 97D2 23               inc hl
 394+ 97D3 7A               ld a,d
 395+ 97D4 AE               xor (hl)
 396+ 97D5 77               ld (hl),a
 397+ 97D6 2B               dec hl
 398+ 97D7
 399+ 97D7 24               inc h
 400+ 97D8 7C               ld a,h
 401+ 97D9 E6 07            and 7
 402+ 97DB 20 0A            jr nz,2F
 403+ 97DD 7D               ld a,l
 404+ 97DE C6 20            add a,$20
 405+ 97E0 6F               ld l,a
 406+ 97E1 38 04            jr c,2F
 407+ 97E3 7C               ld a,h
 408+ 97E4 D6 08            sub 8
 409+ 97E6 67               ld h,a
 410+ 97E7 7C           2 ld a,h
 411+ 97E8 FE 58            cp $58
 412+ 97EA 28 02            jr z,3F
 413+ 97EC
 414+ 97EC 10 E0            djnz 1B
 415+ 97EE ED 7B E2 89  3 ld sp,(Stack)
 416+ 97F2 C9               ret
 417+ 97F3
# file closed: Rutinas_de_impresion_sprites.asm
1271  97F3              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97F3              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97F3              ;
   3+ 97F3              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97F3              ;
   5+ 97F3              ; *****************************************************************************************************************************************************************************************
   6+ 97F3              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97F3
   8+ 97F3 7C           calcula_tercio ld a,h
   9+ 97F4 E6 18        	and $18
  10+ 97F6 CB 2F        	sra a
  11+ 97F8 CB 2F        	sra a
  12+ 97FA CB 2F        	sra a
  13+ 97FC C9           	ret
  14+ 97FD
# file closed: calcula_tercio.asm
1272  97FD              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97FD              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97FD              ;
   3+ 97FD              ;
   4+ 97FD              ;	CLS.
   5+ 97FD              ;
   6+ 97FD              ;	Limpia la pantalla y define sus atributos.
   7+ 97FD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97FD              ;
   9+ 97FD              ;	COLORES: 0 ..... NEGRO
  10+ 97FD              ;    		 1 ..... AZUL
  11+ 97FD              ; 			 2 ..... ROJO
  12+ 97FD              ;			 3 ..... MAGENTA
  13+ 97FD              ; 			 4 ..... VERDE
  14+ 97FD              ; 			 5 ..... CIAN
  15+ 97FD              ;			 6 ..... AMARILLO
  16+ 97FD              ; 			 7 ..... BLANCO
  17+ 97FD              ;
  18+ 97FD              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97FD              ;
  20+ 97FD              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97FD
  22+ 97FD
  23+ 97FD 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9800 11 01 40     	LD DE,$4001
  25+ 9803 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9806 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9808 ED B0        	LDIR
  28+ 980A 01 FF 02     	LD BC,767
  29+ 980D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 980E ED B0        	LDIR
  31+ 9810 C9           	ret
  32+ 9811
# file closed: Cls.asm
1273  9811              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9811              ; ******************************************************************************************************************************************************************************************
   2+ 9811              ;
   3+ 9811              ;   20/05/23
   4+ 9811              ;
   5+ 9811              ;	Recompone_posicion_inicio
   6+ 9811              ;
   7+ 9811              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9811              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9811              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9811              ;	_ a una u otra rutina.
  11+ 9811
  12+ 9811              Recompone_posicion_inicio
  13+ 9811
  14+ 9811 2A A5 89     	ld hl,(Posicion_inicio)
  15+ 9814 7D           	ld a,l
  16+ 9815 E6 1F        	and $1f
  17+ 9817 28 16        	jr z,1F
  18+ 9819
  19+ 9819 FE 1F        	cp $1f
  20+ 981B 28 0D        	jr z,3F
  21+ 981D
  22+ 981D 21 CF 89     	ld hl,Ctrl_2
  23+ 9820 CB C6        	set 0,(hl)
  24+ 9822 2A 97 89     	ld hl,(Puntero_objeto)
  25+ 9825 22 D2 89     	ld (Repone_puntero_objeto),hl
  26+ 9828 18 08        	jr 2F
  27+ 982A
  28+ 982A CD CB 99     3 call Mov_left
  29+ 982D 18 03        	jr 2F
  30+ 982F
  31+ 982F CD AD 98     1 call Mov_right
  32+ 9832 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9835 22 97 89     	ld (Puntero_objeto),hl
  34+ 9838 C9           	ret
  35+ 9839
  36+ 9839              ; ******************************************************************************************************************************************************************************************
  37+ 9839              ;
  38+ 9839              ;   27/05/23
  39+ 9839              ;
  40+ 9839              ;	Mov_down
  41+ 9839              ;
  42+ 9839              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9839              ;
  44+ 9839              ;
  45+ 9839              Mov_down
  46+ 9839
  47+ 9839 CD 9B 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 983C              ;																	; _ repone (Puntero_objeto).
  49+ 983C 21 C1 89     	ld hl,Ctrl_0
  50+ 983F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9841              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9841              ; 																	; _ en el caso de que no lo haya.
  53+ 9841 3A AB 89     	ld a,(Vel_down)
  54+ 9844 47           	ld b,a
  55+ 9845 2A 95 89         ld hl,(Posicion_actual)
  56+ 9848 CD F3 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 984B E6 02        	and 2
  58+ 984D 28 0F        	jr z,1F
  59+ 984F
  60+ 984F              ; Nos encontramos en el último tercio de pantalla.
  61+ 984F              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 984F
  63+ 984F 7C           	ld a,h
  64+ 9850 FE 57        	cp $57
  65+ 9852 20 0A        	jr nz,1F
  66+ 9854 7D           	ld a,l
  67+ 9855 C6 20        	add $20
  68+ 9857 30 05        	jr nc,1F
  69+ 9859
  70+ 9859              ; ------------------------------
  71+ 9859 CD 49 9B     	call Reaparece_arriba
  72+ 985C              ;	call Reinicio
  73+ 985C              ; ------------------------------
  74+ 985C
  75+ 985C 18 08        	jr 3F
  76+ 985E CD 33 95     1 call NextScan
  77+ 9861 22 95 89     	ld (Posicion_actual),hl
  78+ 9864 10 E2            djnz 2B
  79+ 9866 CD 5F 9B     3 call Genera_coordenadas
  80+ 9869 C9           	ret
  81+ 986A
  82+ 986A              ; ******************************************************************************************************************************************************************************************
  83+ 986A              ;
  84+ 986A              ;   27/05/23
  85+ 986A              ;
  86+ 986A              ;	Mov_up
  87+ 986A              ;
  88+ 986A              ; 	Mueve el Sprite hacia arriba.
  89+ 986A              ;
  90+ 986A              ;
  91+ 986A              Mov_up
  92+ 986A
  93+ 986A CD 9B 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 986D              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 986D 21 C1 89     	ld hl,Ctrl_0
  96+ 9870 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9872              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9872              ; 																		; _ en el caso de que no lo haya.
  99+ 9872 3A AA 89     	ld a,(Vel_up)
 100+ 9875 47           	ld b,a
 101+ 9876 2A 95 89     	ld hl,(Posicion_actual)
 102+ 9879 CD F3 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 987C A7           	and a
 104+ 987D 20 10        	jr nz,1F
 105+ 987F
 106+ 987F              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 987F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 987F
 109+ 987F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9880 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9882 20 0B            jr nz,1F
 112+ 9884 7D               ld a,l
 113+ 9885 D6 20            sub $20
 114+ 9887 30 06            jr nc,1F
 115+ 9889 25               dec h
 116+ 988A
 117+ 988A              ; -----------------------------
 118+ 988A CD 39 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 988D              ;	call Reinicio
 120+ 988D              ; -----------------------------
 121+ 988D
 122+ 988D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 988F CD 42 95     1 call PreviousScan
 124+ 9892 22 95 89     	ld (Posicion_actual),hl
 125+ 9895 10 E2            djnz 3B
 126+ 9897 CD 5F 9B     2 call Genera_coordenadas
 127+ 989A C9           	ret
 128+ 989B
 129+ 989B              ; -----------------------------
 130+ 989B              ;
 131+ 989B              ;	27/5/23
 132+ 989B              ;
 133+ 989B              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 989B              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 989B              ;
 136+ 989B              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 989B              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 989B              ;
 139+ 989B              ;	Modifica: A y (Puntero_objeto).
 140+ 989B
 141+ 989B 3A CF 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 989E CB 47        	bit 0,a
 143+ 98A0 C8           	ret z
 144+ 98A1 CB 87        	res 0,a
 145+ 98A3 32 CF 89     	ld (Ctrl_2),a
 146+ 98A6 2A D2 89     	ld hl,(Repone_puntero_objeto)
 147+ 98A9 22 97 89     	ld (Puntero_objeto),hl
 148+ 98AC C9           	ret
 149+ 98AD
 150+ 98AD              ; ******************************************************************************************************************************************************************************************
 151+ 98AD              ;
 152+ 98AD              ;	19/10/22
 153+ 98AD              ;
 154+ 98AD              ;	Mov_right.
 155+ 98AD              ;
 156+ 98AD              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 98AD              ;
 158+ 98AD
 159+ 98AD 21 C1 89     Mov_right ld hl,Ctrl_0
 160+ 98B0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 98B2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 98B2              ; 																	; _ en el caso de que no lo haya.
 163+ 98B2 3A C1 89     	ld a,(Ctrl_0)
 164+ 98B5 CB 77        	bit 6,a
 165+ 98B7 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 98B9
 167+ 98B9 CD E7 9A     	call Stop_Amadeus_right
 168+ 98BC C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 98BD 18 4D        	jr 8F
 170+ 98BF
 171+ 98BF 3A 99 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 98C2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 98C4 20 46        	jr nz,8F
 174+ 98C6
 175+ 98C6 3A 9B 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 98C9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 98CA 28 40        	jr z,8F
 178+ 98CC
 179+ 98CC              ; ---------- ---------- ----------
 180+ 98CC              ;
 181+ 98CC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 98CC
 183+ 98CC 3A A9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 98CF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 98D1 28 11        	jr z,1F
 186+ 98D3 38 06        	jr c,6F
 187+ 98D5 FE 04        	cp 4
 188+ 98D7 28 14        	jr z,7F
 189+ 98D9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 98DB
 191+ 98DB              ; ---------- ---------- ----------
 192+ 98DB              ;
 193+ 98DB              ; Perfiles de velocidad
 194+ 98DB              ;
 195+ 98DB
 196+ 98DB 3A 9B 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 98DE FE FE        	cp $fe
 198+ 98E0 20 2A        	jr nz,8F
 199+ 98E2 18 10        	jr 3F
 200+ 98E4 3A 9B 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 98E7 FE FD        	cp $fd
 202+ 98E9 20 21        	jr nz,8F
 203+ 98EB 18 07        	jr 3F
 204+ 98ED 3A 9B 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 98F0 FE FB        	cp $fb
 206+ 98F2 20 18        	jr nz,8F
 207+ 98F4
 208+ 98F4              ; ---------- ---------- ----------
 209+ 98F4
 210+ 98F4              3
 211+ 98F4 CD 27 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 98F7              ;	call Reinicio
 213+ 98F7
 214+ 98F7              ; ---------- ---------- ----------
 215+ 98F7              ;
 216+ 98F7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 98F7
 218+ 98F7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 98F9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 98FA CD 13 99     	call DESPLZ_DER
 221+ 98FD C1           	pop bc
 222+ 98FE 10 F9        	djnz 5B
 223+ 9900 2A 95 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 9903 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 9904 22 95 89     	ld (Posicion_actual),hl
 226+ 9907 CD 5F 9B     	call Genera_coordenadas
 227+ 990A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 990C
 229+ 990C              ; ---------- ---------- ----------
 230+ 990C
 231+ 990C 2A 95 89     8 ld hl,(Posicion_actual)
 232+ 990F CD 13 99     	call DESPLZ_DER
 233+ 9912 C9           2 ret
 234+ 9913
 235+ 9913              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 9913              ;
 237+ 9913              ;	22/9/22
 238+ 9913              ;
 239+ 9913
 240+ 9913 CD 22 99     DESPLZ_DER call Desplaza_derecha
 241+ 9916 CD 6E 99         call modifica_parametros_1er_DESPLZ_2
 242+ 9919 CD 97 99         call Ciclo_completo
 243+ 991C 21 C1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 991F CB FE        	set 7,(hl)
 245+ 9921 C9           	ret
 246+ 9922
 247+ 9922              ; ******************************************************************************************************************************************************************************************
 248+ 9922              ;	15/02/23
 249+ 9922              ;
 250+ 9922
 251+ 9922 3A A9 89     Desplaza_derecha ld a,(Vel_right)
 252+ 9925 47           	ld b,a
 253+ 9926 2A A1 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9929 23           1 inc hl
 255+ 992A 23           	inc hl
 256+ 992B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 992D 22 A1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 9930 CD 01 8D     	call Extrae_address
 259+ 9933 22 97 89     	ld (Puntero_objeto),hl
 260+ 9936
 261+ 9936              ; Modifica (Puntero_DESPLZ_izq).
 262+ 9936
 263+ 9936              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 9936              ; Cuántos movimientos hemos hecho ??
 265+ 9936              ; DE contiene (Puntero_DESPLZ_der).
 266+ 9936
 267+ 9936 2A 9D 89     7 ld hl,(Indice_Sprite_der)
 268+ 9939 EB           	ex de,hl
 269+ 993A A7           	and a
 270+ 993B ED 52        	sbc hl,de
 271+ 993D CB 3D        	srl l
 272+ 993F 3E 08        6 ld a,8
 273+ 9941 95           	sub l
 274+ 9942 30 1E        	jr nc,3F
 275+ 9944
 276+ 9944              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9944              ; B="0".
 278+ 9944
 279+ 9944 04           4 inc b
 280+ 9945 3C           	inc a
 281+ 9946 20 FC        	jr nz,4B
 282+ 9948 78           	ld a,b
 283+ 9949 08           	ex af,af
 284+ 994A 2A 9D 89     	ld hl,(Indice_Sprite_der)
 285+ 994D 23           5 inc hl
 286+ 994E 23           	inc hl
 287+ 994F 10 FC        	djnz 5B
 288+ 9951 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9954 CD 01 8D     	call Extrae_address
 290+ 9957 22 97 89     	ld (Puntero_objeto),hl
 291+ 995A
 292+ 995A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 995A              ; _(Posicion_actual).
 294+ 995A
 295+ 995A 21 95 89     	ld hl,Posicion_actual
 296+ 995D 34           	inc (hl)
 297+ 995E 08               ex af,af
 298+ 995F 6F           	ld l,a
 299+ 9960 18 DD        	jr 6B
 300+ 9962
 301+ 9962              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9962
 303+ 9962 47           3 ld b,a
 304+ 9963 2A 9F 89     	ld hl,(Indice_Sprite_izq)
 305+ 9966 23           2 inc hl
 306+ 9967 23           	inc hl
 307+ 9968 10 FC        	djnz 2B
 308+ 996A 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 996D C9           8 ret
 310+ 996E
 311+ 996E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 996E              ;
 313+ 996E              ;	24/7/22
 314+ 996E              ;
 315+ 996E              ;	modifica_parametros_1er_DESPLZ_2
 316+ 996E              ;
 317+ 996E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 996E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 996E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 996E
 321+ 996E 3A 9B 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9971 A7           	and a
 323+ 9972 20 1F        	jr nz,1F
 324+ 9974 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9976 32 9B 89         ld (CTRL_DESPLZ),a
 326+ 9979
 327+ 9979 21 94 89     	ld hl,Columns
 328+ 997C 34           	inc (hl)
 329+ 997D 3A A7 89     	ld a,(Cuad_objeto)
 330+ 9980 E6 01        	and 1
 331+ 9982 28 0F        	jr z,1F
 332+ 9984 2A 95 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9987 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9988 22 95 89     	ld (Posicion_actual),hl
 335+ 998B CD 5F 9B     	call Genera_coordenadas
 336+ 998E CD F3 9A     	call Inc_CTRL_DESPLZ
 337+ 9991 18 03        	jr 2F
 338+ 9993 CD F3 9A     1 call Inc_CTRL_DESPLZ
 339+ 9996 C9           2 ret
 340+ 9997
 341+ 9997              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9997              ;
 343+ 9997              ;	24/7/22
 344+ 9997              ;
 345+ 9997              ;	Ciclo_completo.
 346+ 9997              ;
 347+ 9997              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9997              ;
 349+ 9997              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9997              ; 	Decrementamos (Columns).
 351+ 9997              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9997              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9997
 354+ 9997
 355+ 9997 3A 9B 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 999A FE FF        	cp $ff
 357+ 999C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 999E E6 F0        	and $f0
 359+ 99A0 20 28        	jr nz,3F
 360+ 99A2
 361+ 99A2              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 99A2
 363+ 99A2 3A 9B 89     	ld a,(CTRL_DESPLZ)
 364+ 99A5 47           	ld b,a
 365+ 99A6 3E F8        	ld a,$f8
 366+ 99A8 80           	add b
 367+ 99A9 32 9B 89     	ld (CTRL_DESPLZ),a
 368+ 99AC 18 1C        	jr 3F
 369+ 99AE 21 94 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 99B1 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 99B2 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 99B3 32 9B 89     	ld (CTRL_DESPLZ),a
 373+ 99B6 3A A7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 99B9 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 99BB 20 0A        	jr nz,2F
 376+ 99BD 2A 95 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 99C0 23           	inc hl
 378+ 99C1 22 95 89     	ld (Posicion_actual),hl
 379+ 99C4 CD 5F 9B     	call Genera_coordenadas
 380+ 99C7
 381+ 99C7              ; Inicia el puntero de Sprite.
 382+ 99C7
 383+ 99C7 CD 18 8D     2 call Inicia_puntero_objeto_der
 384+ 99CA C9           3 ret
 385+ 99CB
 386+ 99CB              ; ******************************************************************************************************************************************************************************************
 387+ 99CB              ;
 388+ 99CB              ;	15/02/23
 389+ 99CB              ;
 390+ 99CB              ;	Mov_left.
 391+ 99CB              ;
 392+ 99CB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 99CB              ;
 394+ 99CB 21 C1 89     Mov_left ld hl,Ctrl_0
 395+ 99CE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 99D0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 99D0              ; 																	; _ en el caso de que no lo haya.
 398+ 99D0 3A C1 89     	ld a,(Ctrl_0)
 399+ 99D3 CB 77        	bit 6,a
 400+ 99D5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 99D7
 402+ 99D7 CD ED 9A     	call Stop_Amadeus_left
 403+ 99DA C8           	ret z
 404+ 99DB 20 4A        	jr nz,8F
 405+ 99DD
 406+ 99DD 3A 99 89     11 ld a,(Coordenada_X)
 407+ 99E0 A7           	and a
 408+ 99E1 20 44        	jr nz,8F
 409+ 99E3
 410+ 99E3 3A 9B 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 99E6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 99E7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 99E9
 414+ 99E9              ; ---------- ---------- ----------
 415+ 99E9
 416+ 99E9 3A A8 89     	ld a,(Vel_left)
 417+ 99EC FE 02        	cp 2
 418+ 99EE 28 0F        	jr z,1F
 419+ 99F0 38 04        	jr c,6F
 420+ 99F2 FE 04        	cp 4
 421+ 99F4 28 12        	jr z,7F
 422+ 99F6
 423+ 99F6              ; ---------- ---------- ----------
 424+ 99F6
 425+ 99F6 3A 9B 89     6 ld a,(CTRL_DESPLZ)
 426+ 99F9 FE F8        	cp $f8
 427+ 99FB 20 2A        	jr nz,8F
 428+ 99FD 18 10        	jr 4F
 429+ 99FF 3A 9B 89     1 ld a,(CTRL_DESPLZ)
 430+ 9A02 FE F9        	cp $f9
 431+ 9A04 20 21        	jr nz,8F
 432+ 9A06 18 07        	jr 4F
 433+ 9A08 3A 9B 89     7 ld a,(CTRL_DESPLZ)
 434+ 9A0B FE FB        	cp $fb
 435+ 9A0D 20 18        	jr nz,8F
 436+ 9A0F
 437+ 9A0F              ; ---------- ---------- ----------
 438+ 9A0F
 439+ 9A0F              4
 440+ 9A0F CD 15 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9A12              ;	call Reinicio
 442+ 9A12
 443+ 9A12              ; ---------- ---------- ----------
 444+ 9A12
 445+ 9A12 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9A14 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9A15
 448+ 9A15              ;	ld hl,(Indice_Sprite_izq)
 449+ 9A15              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9A15
 451+ 9A15 CD 2E 9A     	call DESPLZ_IZQ
 452+ 9A18 C1           	pop bc
 453+ 9A19 10 F9        	djnz 5B
 454+ 9A1B 2A 95 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9A1E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9A1F 22 95 89     	ld (Posicion_actual),hl
 457+ 9A22 CD 5F 9B     	call Genera_coordenadas
 458+ 9A25 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9A27
 460+ 9A27              ; ---------- ---------- ----------
 461+ 9A27
 462+ 9A27              ; Movemos, no hay recolocación.
 463+ 9A27
 464+ 9A27 2A 95 89     8 ld hl,(Posicion_actual)
 465+ 9A2A CD 2E 9A     	call DESPLZ_IZQ
 466+ 9A2D C9           2 ret
 467+ 9A2E
 468+ 9A2E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9A2E              ;
 470+ 9A2E              ;	22/9/22
 471+ 9A2E
 472+ 9A2E              DESPLZ_IZQ
 473+ 9A2E
 474+ 9A2E CD 3D 9A     	call Desplaza_izquierda
 475+ 9A31 CD 89 9A         call modifica_parametros_1er_DESPLZ
 476+ 9A34 CD B1 9A     	call Ciclo_completo_2
 477+ 9A37 21 C1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9A3A CB BE        	res 7,(hl)
 479+ 9A3C C9           	ret
 480+ 9A3D
 481+ 9A3D              Desplaza_izquierda
 482+ 9A3D
 483+ 9A3D 3A A8 89     	ld a,(Vel_left)
 484+ 9A40 47           	ld b,a
 485+ 9A41 2A A3 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9A44 23           1 inc hl
 487+ 9A45 23           	inc hl
 488+ 9A46 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9A48 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9A4B CD 01 8D     	call Extrae_address
 491+ 9A4E 22 97 89     	ld (Puntero_objeto),hl
 492+ 9A51
 493+ 9A51              ; Modifica (Puntero_DESPLZ_der).
 494+ 9A51
 495+ 9A51              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9A51              ; Cuántos movimientos hemos hecho ??
 497+ 9A51              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9A51
 499+ 9A51 2A 9F 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9A54 EB           	ex de,hl
 501+ 9A55 A7           	and a
 502+ 9A56 ED 52        	sbc hl,de
 503+ 9A58 CB 3D        	srl l
 504+ 9A5A 3E 08        6 ld a,8
 505+ 9A5C 95           	sub l
 506+ 9A5D 30 1E        	jr nc,3F
 507+ 9A5F
 508+ 9A5F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9A5F              ; B="0".
 510+ 9A5F
 511+ 9A5F 04           4 inc b
 512+ 9A60 3C           	inc a
 513+ 9A61 20 FC        	jr nz,4B
 514+ 9A63 78           	ld a,b
 515+ 9A64 08           	ex af,af
 516+ 9A65 2A 9F 89     	ld hl,(Indice_Sprite_izq)
 517+ 9A68 23           5 inc hl
 518+ 9A69 23           	inc hl
 519+ 9A6A 10 FC        	djnz 5B
 520+ 9A6C 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9A6F CD 01 8D     	call Extrae_address
 522+ 9A72 22 97 89     	ld (Puntero_objeto),hl
 523+ 9A75
 524+ 9A75              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9A75              ; _(Posicion_actual).
 526+ 9A75
 527+ 9A75 21 95 89     	ld hl,Posicion_actual
 528+ 9A78 35           	dec (hl)
 529+ 9A79 08           	ex af,af
 530+ 9A7A 6F           	ld l,a
 531+ 9A7B 18 DD        	jr 6B
 532+ 9A7D
 533+ 9A7D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9A7D
 535+ 9A7D 47           3 ld b,a
 536+ 9A7E 2A 9D 89     	ld hl,(Indice_Sprite_der)
 537+ 9A81 23           2 inc hl
 538+ 9A82 23           	inc hl
 539+ 9A83 10 FC        	djnz 2B
 540+ 9A85 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9A88 C9           8 ret
 542+ 9A89
 543+ 9A89              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9A89              ;
 545+ 9A89              ;	modifica_parametros_1er_DESPLZ
 546+ 9A89              ;
 547+ 9A89              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9A89              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9A89              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9A89
 551+ 9A89 3A 9B 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9A8C A7           	and a
 553+ 9A8D 20 1E        	jr nz,1F
 554+ 9A8F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9A90 32 9B 89         ld (CTRL_DESPLZ),a
 556+ 9A93 21 94 89     	ld hl,Columns
 557+ 9A96 34           	inc (hl)
 558+ 9A97 3A A7 89     	ld a,(Cuad_objeto)
 559+ 9A9A E6 01        	and 1
 560+ 9A9C 20 0F        	jr nz,1F
 561+ 9A9E 2A 95 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9AA1 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9AA2 22 95 89     	ld (Posicion_actual),hl
 564+ 9AA5 CD 5F 9B     	call Genera_coordenadas
 565+ 9AA8 CD 04 9B     	call Dec_CTRL_DESPLZ
 566+ 9AAB 18 03        	jr 2F
 567+ 9AAD CD 04 9B     1 call Dec_CTRL_DESPLZ
 568+ 9AB0 C9           2 ret
 569+ 9AB1
 570+ 9AB1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9AB1
 572+ 9AB1 3A 9B 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9AB4 FE F7        	cp $f7
 574+ 9AB6 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9AB8 30 2C        	jr nc,3F
 576+ 9ABA
 577+ 9ABA              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9ABA
 579+ 9ABA 06 00        	ld b,0
 580+ 9ABC 04           4 inc b
 581+ 9ABD 3C           	inc a
 582+ 9ABE FE F7        	cp $f7
 583+ 9AC0 20 FA        	jr nz,4B
 584+ 9AC2 3E FF        	ld a,$ff
 585+ 9AC4 90           	sub b
 586+ 9AC5 32 9B 89     	ld (CTRL_DESPLZ),a
 587+ 9AC8 18 1C        	jr 3F
 588+ 9ACA
 589+ 9ACA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9ACA
 591+ 9ACA 21 94 89     1 ld hl,Columns
 592+ 9ACD 35           	dec (hl)
 593+ 9ACE AF           	xor a
 594+ 9ACF 32 9B 89     	ld (CTRL_DESPLZ),a
 595+ 9AD2 3A A7 89     	ld a,(Cuad_objeto)
 596+ 9AD5 E6 01        	and 1
 597+ 9AD7 28 0A        	jr z,2F
 598+ 9AD9 2A 95 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9ADC 2B           	dec hl
 600+ 9ADD 22 95 89     	ld (Posicion_actual),hl
 601+ 9AE0 CD 5F 9B     	call Genera_coordenadas
 602+ 9AE3
 603+ 9AE3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9AE3
 605+ 9AE3 CD 2B 8D     2 call Inicia_puntero_objeto_izq
 606+ 9AE6 C9           3 ret
 607+ 9AE7
 608+ 9AE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9AE7              ;
 610+ 9AE7              ;	19/10/22
 611+ 9AE7              ;
 612+ 9AE7              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9AE7              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9AE7
 615+ 9AE7 3A 99 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9AEA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9AEC C9           	ret
 618+ 9AED
 619+ 9AED              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9AED              ;
 621+ 9AED              ;	19/10/22
 622+ 9AED              ;
 623+ 9AED              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9AED              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9AED
 626+ 9AED 3A 99 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9AF0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9AF2 C9           	ret
 629+ 9AF3
 630+ 9AF3              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9AF3              ;
 632+ 9AF3              ;	24/7/22
 633+ 9AF3              ;
 634+ 9AF3              ;	Inc_CTRL_DESPLZ
 635+ 9AF3              ;
 636+ 9AF3              ;
 637+ 9AF3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9AF3
 639+ 9AF3 21 9B 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9AF6 3A A9 89     	ld a,(Vel_right)
 641+ 9AF9 A7           	and a
 642+ 9AFA 28 06        	jr z,1F
 643+ 9AFC 47           	ld b,a
 644+ 9AFD 34           3 inc (hl)
 645+ 9AFE 10 FD        	djnz 3B
 646+ 9B00 18 01        	jr 2F
 647+ 9B02 34           1 inc (hl)
 648+ 9B03 C9           2 ret
 649+ 9B04
 650+ 9B04              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9B04              ;
 652+ 9B04              ;	5/2/23
 653+ 9B04              ;
 654+ 9B04              ;	Dec_CTRL_DESPLZ
 655+ 9B04              ;
 656+ 9B04              ;
 657+ 9B04              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9B04
 659+ 9B04 21 9B 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9B07 3A A8 89     	ld a,(Vel_left)
 661+ 9B0A A7           	and a
 662+ 9B0B 28 06        	jr z,1F
 663+ 9B0D 47           	ld b,a
 664+ 9B0E 35           3 dec (hl)
 665+ 9B0F 10 FD        	djnz 3B
 666+ 9B11 18 01        	jr 2F
 667+ 9B13 35           1 dec (hl)
 668+ 9B14 C9           2 ret
 669+ 9B15
 670+ 9B15              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9B15
 672+ 9B15 2A 95 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9B18 01 1F 00     	ld bc,31
 674+ 9B1B A7           	and a
 675+ 9B1C ED 4A        	adc hl,bc
 676+ 9B1E 22 95 89     	ld (Posicion_actual),hl
 677+ 9B21 21 C1 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9B24 CB C6        	set 0,(hl)
 679+ 9B26 C9           	ret
 680+ 9B27
 681+ 9B27              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9B27
 683+ 9B27 2A 95 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9B2A 01 1F 00     	ld bc,31
 685+ 9B2D A7           	and a
 686+ 9B2E ED 42        	sbc hl,bc
 687+ 9B30 22 95 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9B33 21 C1 89     	ld hl,Ctrl_0
 689+ 9B36 CB CE        	set 1,(hl)
 690+ 9B38 C9           	ret
 691+ 9B39
 692+ 9B39              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9B39
 694+ 9B39 24           Reaparece_abajo inc h
 695+ 9B3A 01 E0 17     	ld bc,$17e0
 696+ 9B3D A7           	and a
 697+ 9B3E ED 4A        	adc hl,bc
 698+ 9B40 22 95 89     	ld (Posicion_actual),hl
 699+ 9B43 21 C1 89     	ld hl,Ctrl_0
 700+ 9B46 CB D6        	set 2,(hl)
 701+ 9B48 C9           	ret
 702+ 9B49
 703+ 9B49              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9B49
 705+ 9B49 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9B4C A7           	and a
 707+ 9B4D ED 42        	sbc hl,bc
 708+ 9B4F 22 95 89     	ld (Posicion_actual),hl
 709+ 9B52 21 C1 89     	ld hl,Ctrl_0
 710+ 9B55 CB DE        	set 3,(hl)
 711+ 9B57 C9           	ret
 712+ 9B58
 713+ 9B58              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9B58
 715+ 9B58 2A A5 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9B5B 22 95 89     	ld (Posicion_actual),hl
 717+ 9B5E C9           	ret
# file closed: Direcciones.asm
1274  9B5F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B5F              ; ------------------------------------------------------------------------
   2+ 9B5F              ;
   3+ 9B5F              ;	02/04/23
   4+ 9B5F              ;
   5+ 9B5F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B5F              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B5F              ;
   8+ 9B5F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B5F              ;
  10+ 9B5F              ;	Modifica: A,BC y DE.
  11+ 9B5F
  12+ 9B5F C5           Genera_coordenadas push bc
  13+ 9B60 E5           	push hl
  14+ 9B61 D5           	push de
  15+ 9B62
  16+ 9B62 2A 95 89     	ld hl,(Posicion_actual)
  17+ 9B65
  18+ 9B65 7D           	ld a,l
  19+ 9B66 E6 1F        	and $1f
  20+ 9B68 32 99 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9B6B
  22+ 9B6B CD F3 97     	call calcula_tercio
  23+ 9B6E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9B6F
  25+ 9B6F 1E 00        	ld e,0
  26+ 9B71 7D           	ld a,l
  27+ 9B72 E6 E0        	and $e0
  28+ 9B74 28 01        	jr z,1F
  29+ 9B76 04           	inc b
  30+ 9B77
  31+ 9B77 04           1 inc b
  32+ 9B78 05           	dec b
  33+ 9B79 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9B7B              ;														; _ , salimos.
  35+ 9B7B 1C           3 inc e
  36+ 9B7C D6 20        	sub 32
  37+ 9B7E 20 FB        	jr nz,3B
  38+ 9B80 10 F5        	djnz 1B
  39+ 9B82
  40+ 9B82 7B           2 ld a,e
  41+ 9B83 32 9A 89     	ld (Coordenada_y),a
  42+ 9B86
  43+ 9B86 D1           	pop de
  44+ 9B87 E1           	pop hl
  45+ 9B88 C1           	pop bc
  46+ 9B89
  47+ 9B89 C9           	ret
  48+ 9B8A
  49+ 9B8A              ; ------------------------------------------------------------------------
  50+ 9B8A              ;	28/05/23
  51+ 9B8A              ;
  52+ 9B8A              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9B8A              ;	Fila superior "0", Columna izquierda "0".
  54+ 9B8A              ;
  55+ 9B8A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9B8A              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9B8A              ;
  58+ 9B8A              ;		DE="$120d"
  59+ 9B8A              ;
  60+ 9B8A              ;		D, (Coordenada_X), Columnas, $12
  61+ 9B8A              ;		E, (Coordenada_y), Filas, $0d
  62+ 9B8A              ;
  63+ 9B8A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9B8A
  65+ 9B8A              ;	Modifica: A,BC y DE.
  66+ 9B8A
  67+ 9B8A
  68+ 9B8A              Genera_coordenadas_disparo
  69+ 9B8A
  70+ 9B8A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9B8A
  72+ 9B8A 7D           	ld a,l
  73+ 9B8B E6 1F        	and $1f
  74+ 9B8D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9B8E CD F3 97     	call calcula_tercio
  76+ 9B91 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9B92 1E 00        	ld e,0
  78+ 9B94 7D           	ld a,l
  79+ 9B95 E6 E0        	and $e0
  80+ 9B97 28 01        	jr z,1F
  81+ 9B99 04           	inc b
  82+ 9B9A 1C           1 inc e
  83+ 9B9B D6 20        	sub 32
  84+ 9B9D 20 FB        	jr nz,1B
  85+ 9B9F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9BA1 C9           	ret
  87+ 9BA2
# file closed: Genera_coordenadas.asm
1275  9BA2              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9BA2
   2+ 9BA2
   3+ 9BA2              ;   11/8/22
   4+ 9BA2              ;
   5+ 9BA2              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9BA2              ;
   7+ 9BA2              ;   Mov_obj.asm
   8+ 9BA2              ;
   9+ 9BA2              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9BA2              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9BA2              ;
  12+ 9BA2              ;   Codificación:
  13+ 9BA2              ;
  14+ 9BA2              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9BA2
  16+ 9BA2              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9BA2
  18+ 9BA2 02 40 00     Arriba db 2,%01000000,0
  19+ 9BA5 02 80 00     Abajo db 2,%10000000,0
  20+ 9BA8 02 20 00     Derecha db 2,%00100000,0
  21+ 9BAB 02 10 00     Izquierda db 2,%00010000,0
  22+ 9BAE 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9BB2 60 42 60 40
  22+ 9BB6 63
  23+ 9BB7 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9BBB 22 A3 80 A0
  24+ 9BBF 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9BC3 84 A0 83 A0
  25+ 9BC7 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9BCB 80 A3 22 A0
  26+ 9BCF 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9BD3 40 60 42 60
  27+ 9BD7 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9BDB
  29+ 9BDB 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9BDF 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9BE3 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9BE7 84 00
  32+ 9BE9 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9BED 84 00
  33+ 9BEF 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9BF3 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9BF7 1F 1F 1F 1F
  35+ 9BFB 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9BFF 1F 1F 1F 1F
  35+ 9C03 1F
  36+ 9C04 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9C08 2F 2F 2F 2F
  36+ 9C0C 2F 2F
  37+ 9C0E 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9C12 2F 2F 00
  38+ 9C15
  39+ 9C15              ; ----- ----- ----- ----- -----
  40+ 9C15
  41+ 9C15 F3 9B        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9C17 EF 9B        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9C19 AB 9B        Indice_mov_Izquierda defw Izquierda
  44+ 9C1B A8 9B        Indice_mov_Derecha defw Derecha
  45+ 9C1D A5 9B        Indice_mov_Abajo defw Abajo
  46+ 9C1F A2 9B        Indice_mov_Arriba defw Arriba
  47+ 9C21 DF 9B        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9C23 E3 9B        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9C25 DB 9B        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9C27 E9 9B        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9C29 AE 9B        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9C2B              ; ----- ----- ----- ----- -----
  53+ 9C2B
  54+ 9C2B 3A C8 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9C2E A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9C2F 28 02            jr z,1F
  57+ 9C31 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9C33 3A C9 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9C36 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9C38 32 C9 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9C3B              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9C3B 2A C6 89         ld hl,(Puntero_mov)
  63+ 9C3E 7E               ld a,(hl)
  64+ 9C3F 32 C8 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9C42 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9C43 22 C6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9C46
  68+ 9C46 3A CA 89     Decoder ld a,(Repetimos_db)
  69+ 9C49 A7               and a
  70+ 9C4A 20 0C            jr nz,12F
  71+ 9C4C 2A C6 89         ld hl,(Puntero_mov)
  72+ 9C4F 7E               ld a,(hl)
  73+ 9C50 A7               and a
  74+ 9C51 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9C53 E6 0F            and $0f
  76+ 9C55 32 CA 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9C58              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9C58 2A C6 89     12 ld hl,(Puntero_mov)
  79+ 9C5B CB 7E            bit 7,(hl)
  80+ 9C5D 28 03            jr z,2F
  81+ 9C5F CD 39 98         call Mov_down
  82+ 9C62 2A C6 89     2 ld hl, (Puntero_mov)
  83+ 9C65 CB 76            bit 6,(hl)
  84+ 9C67 28 03            jr z,3F
  85+ 9C69 CD 6A 98         call Mov_up
  86+ 9C6C 2A C6 89     3 ld hl, (Puntero_mov)
  87+ 9C6F CB 6E            bit 5,(hl)
  88+ 9C71 28 03            jr z,4F
  89+ 9C73 CD AD 98         call Mov_right
  90+ 9C76 2A C6 89     4 ld hl, (Puntero_mov)
  91+ 9C79 CB 66            bit 4,(hl)
  92+ 9C7B 28 03            jr z,5F
  93+ 9C7D CD CB 99         call Mov_left
  94+ 9C80
  95+ 9C80              ; ---------- --------- --------- ---------- ----------
  96+ 9C80
  97+ 9C80 3A CA 89     5 ld a,(Repetimos_db)
  98+ 9C83 A7               and a
  99+ 9C84 28 07            jr z,6F
 100+ 9C86 3D               dec a
 101+ 9C87 32 CA 89         ld (Repetimos_db),a
 102+ 9C8A 28 01            jr z,6f
 103+ 9C8C C9           11 ret
 104+ 9C8D 21 C8 89     6 ld hl,Contador_db_mov
 105+ 9C90 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9C91 2A C6 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9C94 23               inc hl
 108+ 9C95 22 C6 89         ld (Puntero_mov),hl
 109+ 9C98 18 F2            jr 11B
 110+ 9C9A 2A C4 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9C9D 3A C9 89         ld a,(Incrementa_puntero)
 112+ 9CA0 47               ld b,a
 113+ 9CA1 23           8 inc hl
 114+ 9CA2 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9CA4 5E               ld e,(hl)
 116+ 9CA5 23               inc hl
 117+ 9CA6 56               ld d,(hl)
 118+ 9CA7 EB               ex de,hl
 119+ 9CA8 22 C6 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9CAB 18 DF            jr 11B
 121+ 9CAD
 122+ 9CAD              ; ---------- --------- --------- ---------- ----------
 123+ 9CAD              ;
 124+ 9CAD              ;   11/8/22
 125+ 9CAD              ;
 126+ 9CAD              ;   Prepara_Puntero_mov
 127+ 9CAD
 128+ 9CAD E5           Prepara_Puntero_mov push hl
 129+ 9CAE D5               push de
 130+ 9CAF 2A C4 89         ld hl,(Puntero_indice_mov)
 131+ 9CB2 5E               ld e,(hl)
 132+ 9CB3 23               inc hl
 133+ 9CB4 56               ld d,(hl)
 134+ 9CB5 EB               ex de,hl
 135+ 9CB6 22 C6 89         ld (Puntero_mov),hl
 136+ 9CB9 D1               pop de
 137+ 9CBA E1               pop hl
 138+ 9CBB C9               ret
 139+ 9CBC
 140+ 9CBC              ; ---------- --------- --------- ---------- ----------
 141+ 9CBC              ;
 142+ 9CBC              ;   11/8/22
 143+ 9CBC              ;
 144+ 9CBC              ;   Reinicia_el_movimiento
 145+ 9CBC
 146+ 9CBC CD AD 9C     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9CBF AF               xor a
 148+ 9CC0 32 C8 89         ld (Contador_db_mov),a
 149+ 9CC3 32 C9 89         ld (Incrementa_puntero),a
 150+ 9CC6 C3 2B 9C         jp Movimiento
 151+ 9CC9 C9               ret
 152+ 9CCA              ; ---------- --------- --------- ---------- ----------
 153+ 9CCA
 154+ 9CCA
 155+ 9CCA
 156+ 9CCA
 157+ 9CCA
 158+ 9CCA
 159+ 9CCA
 160+ 9CCA
 161+ 9CCA
 162+ 9CCA
 163+ 9CCA
 164+ 9CCA
 165+ 9CCA
 166+ 9CCA
 167+ 9CCA
 168+ 9CCA
 169+ 9CCA
 170+ 9CCA
# file closed: Patrones_de_mov.asm
1276  9CCA              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9CCA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9CCA              ;
   3+ 9CCA              ;	3/1/23
   4+ 9CCA              ;
   5+ 9CCA              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9CCA
   7+ 9CCA              ;	ADC HL,SP	LD (addr),SP
   8+ 9CCA              ;	ADD HL,SP	LD SP,(addr)
   9+ 9CCA              ;	ADD IX,SP	LD SP,nn
  10+ 9CCA              ; 	ADD IY,SP	LD SP,HL
  11+ 9CCA              ;				LD SP,IX
  12+ 9CCA              ;	DEC SP		LD SP,IY
  13+ 9CCA
  14+ 9CCA              ;	EX (SP),HL
  15+ 9CCA              ;	EX (SP),IX
  16+ 9CCA              ;	EX (SP),IY
  17+ 9CCA
  18+ 9CCA              ;	INC SP
  19+ 9CCA
  20+ 9CCA
  21+ 9CCA                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 E2 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D1 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A E8 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A E6 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 E8 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 E6 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B E2 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1277  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1278  7FE6
1279  7FE6              	SAVESNA "Pruebas.sna", START
1280  7FE6
1281  7FE6
1282  7FE6
1283  7FE6
# file closed: Banco_de_pruebas.asm
