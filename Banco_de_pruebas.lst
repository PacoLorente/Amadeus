# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 52 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 09 97 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 F9 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 09 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad.
 167  85D7
 168  85D7              ; Gestión de ENTIDADES.
 169  85D7
 170  85D7 00 00        Puntero_store_entidades defw 0
 171  85D9 00 00        Puntero_restore_entidades defw 0
 172  85DB 00 00        Indice_restore defw 0
 173  85DD 02           Numero_de_entidades db 2								; Nº de entidades en pantalla, (contando con Amadeus).
 174  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 175  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 176  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 177  85DF              ;														; _ (Numero_de_malotes)="0".
 178  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 179  85E1              ;														; _variable para almacenar lo posición del puntero_
 180  85E1              ; 														; _de pila, SP.
 181  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 182  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 183  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 184  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 185  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 186  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 187  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 188  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 189  85E7
 190  85E7              ;---------------------------------------------------------------------------------------------------------------
 191  85E7
 192  85E7              ; Gestión de Disparos.
 193  85E7
 194  85E7 00           Numero_de_disparotes db 0
 195  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 196  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 197  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 198  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 199  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 200  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 201  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 202  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 203  85EF              ;														; _produzca colisión.
 204  85EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 205  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 206  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 207  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 208  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 209  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 210  85F7
 211  85F7              ;---------------------------------------------------------------------------------------------------------------
 212  85F7
 213  85F7              ; Relojes y temporizaciones.
 214  85F7
 215  85F7 01           Habilita_disparo_Amadeus db 1
 216  85F8 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 217  85F9 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 218  85FA
 219  85FA 01           Habilita_disparo_entidad db 1
 220  85FB 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 221  85FC 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 222  85FD
 223  85FD              ;---------------------------------------------------------------------------------------------------------------
 224  85FD
 225  85FD              ; Gestión de FRAMES.
 226  85FD
 227  85FD 00           Switch db 0
 228  85FE
 229  85FE              ; Variables de Raster y localización en pantalla.
 230  85FE
 231  85FE 00 FF        Temp_Raster defw $ff00
 232  8600
 233  8600              ; Rutina principal *************************************************************************************************************************************************************************
 234  8600              ;
 235  8600              ;	14/11/22
 236  8600
 237  8600 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 238  8603
 239  8603 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 240  8605 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 241  8607 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 242  8609 F3           	DI
 243  860A
 244  860A 3E 07        	ld a,%00000111
 245  860C CD 1D 93     	call Cls
 246  860F
 247  860F              ;	call Pinta_FILAS
 248  860F
 249  860F CD CD 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 250  8612
 251  8612 21 DD 85     	ld hl,Numero_de_entidades
 252  8615 46           	ld b,(hl)
 253  8616 04           	inc b
 254  8617 05           	dec b
 255  8618 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 256  861A
 257  861A CD 9F 87     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 258  861D              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 259  861D
 260  861D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 261  861D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 262  861D              ;	Pintamos el resto de entidades:
 263  861D
 264  861D              ;	INICIA ENTIDADES !!!!!
 265  861D
 266  861D C5           1 push bc  												; Guardo el contador de entidades.
 267  861E CD 00 88      	call Inicia_Puntero_objeto
 268  8621 CD 6D 8D     	call Draw
 269  8624 CD A0 7F     	call Guarda_foto_registros
 270  8627 CD 48 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 271  862A C1           	pop bc
 272  862B 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 273  862D
 274  862D              ; 	INICIA AMADEUS !!!!!
 275  862D
 276  862D CD 9B 88     3 call Restore_Amadeus
 277  8630 CD 00 88     	call Inicia_Puntero_objeto
 278  8633 CD 6D 8D     	call Draw
 279  8636 CD A0 7F     	call Guarda_foto_registros
 280  8639 CD AD 88     	call Store_Amadeus
 281  863C
 282  863C              ; 	INICIA DISPAROS !!!!!
 283  863C
 284  863C CD B5 87     	call Inicia_Puntero_Disparo_Entidades
 285  863F CD BC 87     	call Inicia_Puntero_Disparo_Amadeus
 286  8642
 287  8642              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 288  8642
 289  8642 CD 9F 87     	call Inicia_punteros_de_entidades
 290  8645 CD 89 88     	call Restore_Primera_entidad
 291  8648
 292  8648 3A DD 85     	ld a,(Numero_de_entidades)
 293  864B 3C           	inc a
 294  864C 32 DE 85     	ld (Numero_de_malotes),a
 295  864F
 296  864F FB           2 ei
 297  8650 18 FD        	jr 2B
 298  8652
 299  8652              ; -----------------------------------------------------------------------------------
 300  8652
 301  8652              Frame
 302  8652
 303  8652              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 304  8652              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 305  8652
 306  8652              ; PINTAMOS.
 307  8652
 308  8652 3E 02            ld a,2
 309  8654 D3 FE            out ($fe),a
 310  8656 CD 71 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 311  8659 CD AA 90     	call Extrae_foto_disparos
 312  865C 3E 01            ld a,1
 313  865E D3 FE            out ($fe),a
 314  8660
 315  8660              ; ----------------------------------------------------------------------
 316  8660
 317  8660              ; RELOJES.
 318  8660
 319  8660 21 F7 85     	ld hl,Habilita_disparo_Amadeus
 320  8663 11 F9 85     	ld de,Temporiza_disparo_Amadeus
 321  8666 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 322  8669
 323  8669 21 FA 85     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 324  866C 11 FC 85     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 325  866F CD D5 7F     	call Habilita_disparos
 326  8672
 327  8672              ; COLISIONES.
 328  8672
 329  8672 CD 0F 8D     	call Selector_de_impactos
 330  8675
 331  8675              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 332  8675              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 333  8675              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 334  8675
 335  8675 AF           	xor a
 336  8676 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 337  8679
 338  8679 CD 9F 87     	call Inicia_punteros_de_entidades
 339  867C CD 89 88     	call Restore_Primera_entidad
 340  867F
 341  867F              ; ---------------------------------------------------------------------------------------
 342  867F
 343  867F CD 8F 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 344  8682 21 00 70     	ld hl,Album_de_fotos
 345  8685 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 346  8688              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 347  8688 3A DD 85         ld a,(Numero_de_entidades)
 348  868B 47               ld b,a
 349  868C A7           	and a
 350  868D 28 48        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 351  868F
 352  868F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 353  868F
 354  868F              ; Código que ejecutamos con cada entidad:
 355  868F
 356  868F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 357  868F              ; _con las coordenadas de la entidad almacenada en DRAW.
 358  868F
 359  868F              2
 360  868F
 361  868F              ; debuggggg............
 362  868F 3A B4 85     	ld a,(Impacto)
 363  8692 A7           	and a
 364  8693 20 FE        	jr nz,$
 365  8695              ; debuggggg............
 366  8695
 367  8695
 368  8695 3A D6 85     	ld a,(Ctrl_1)
 369  8698 CB 57        	bit 2,a
 370  869A 28 1B        	jr z,7F
 371  869C 2A EF 85     	ld hl,(Coordenadas_disparo_certero)
 372  869F EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 373  86A0              ;														; E contiene la coordenada_X del disparo.
 374  86A0 2A A1 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 375  86A3              ;														; H Coordenado_y de la entidad.
 376  86A3 A7           	and a
 377  86A4 ED 52        	sbc hl,de
 378  86A6 CD 46 8D     	call Determina_resultado_comparativa
 379  86A9 04           	inc b
 380  86AA 05           	dec b
 381  86AB 28 0A        	jr z,7F
 382  86AD
 383  86AD              ; ----- ----- -----
 384  86AD
 385  86AD 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 386  86AF 32 B4 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 387  86B2 21 D6 85     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 388  86B5 CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 389  86B7
 390  86B7 C5           7 push bc
 391  86B8
 392  86B8 CD 07 87     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 393  86BB
 394  86BB 3A C9 85     	ld a,(Ctrl_0)
 395  86BE CB 67        	bit 4,a
 396  86C0 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 397  86C2
 398  86C2              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 399  86C2              ; [[[
 400  86C2 CD 18 89     	call Detecta_disparo_entidad
 401  86C5              ; ]]]
 402  86C5 CD 66 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 403  86C8
 404  86C8 21 C9 85     	ld hl,Ctrl_0
 405  86CB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 406  86CD AF           	xor a
 407  86CE 32 CA 85     	ld (Obj_dibujado),a
 408  86D1
 409  86D1 CD 48 88     6 call Store_Restore_entidades
 410  86D4 C1           	pop bc
 411  86D5 10 B8        	djnz 2B
 412  86D7
 413  86D7              ; Tras la gestión de las entidades, ... AMADEUS.
 414  86D7
 415  86D7 CD 9B 88     4 call Restore_Amadeus
 416  86DA
 417  86DA              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 418  86DA
 419  86DA 3A B4 85     	ld a,(Impacto)
 420  86DD A7           	and a
 421  86DE 20 FE        	jr nz,$
 422  86E0
 423  86E0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 424  86E0
 425  86E0 CD 37 87     	call Mov_Amadeus
 426  86E3
 427  86E3 3A C9 85     	ld a,(Ctrl_0)
 428  86E6 CB 67        	bit 4,a
 429  86E8 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 430  86EA
 431  86EA CD 66 87     	call Guarda_foto_entidad_a_pintar
 432  86ED
 433  86ED 21 C9 85     3 ld hl,Ctrl_0
 434  86F0 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 435  86F2 AF           	xor a
 436  86F3 32 CA 85     	ld (Obj_dibujado),a
 437  86F6
 438  86F6 CD AD 88     	call Store_Amadeus
 439  86F9
 440  86F9 CD AD 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 441  86FC
 442  86FC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 443  86FC
 444  86FC CD C3 87     	call Calcula_numero_de_malotes
 445  86FF CD E2 87     	call Calcula_numero_de_disparotes
 446  8702
 447  8702 3E 04        	ld a,4
 448  8704 D3 FE        	out ($fe),a
 449  8706
 450  8706 C9           	ret
 451  8707
 452  8707              ; --------------------------------------------------------------------------------------------------------------
 453  8707              ;
 454  8707              ;	27/03/23
 455  8707
 456  8707              Mov_obj
 457  8707
 458  8707              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 459  8707
 460  8707 AF           	xor a
 461  8708 32 CA 85     	ld (Obj_dibujado),a
 462  870B 32 C9 85     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 463  870E              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 464  870E              ; 														; _de la entidad.
 465  870E CD 70 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 466  8711              ;														; Obj_dibujado="0".
 467  8711              ; Movemos Entidades malignas.
 468  8711
 469  8711 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 470  8714 24           	inc h                                               ; Salimos de la rutina.
 471  8715 25           	dec h
 472  8716 C8           	ret z
 473  8717
 474  8717 CD 0B 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 475  871A
 476  871A 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 477  871D CB 67        	bit 4,a
 478  871F C8           	ret z
 479  8720
 480  8720              ; Ha habido desplazamiento de la entidad maligna.
 481  8720              ; Ha llegado a zona de AMADEUS ???
 482  8720
 483  8720 3A A2 85     	ld a,(Coordenada_y)
 484  8723 FE 14        	cp $14
 485  8725 D4 DE 8A     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 486  8728              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 487  8728              ; ---------
 488  8728
 489  8728 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 490  872A 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 491  872D CD 70 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 492  8730 CD 87 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 493  8733 CD 56 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 494  8736 C9           	ret													; _de la misma.
 495  8737
 496  8737              ; --------------------------------------------------------------------------------------------------------------
 497  8737              ;
 498  8737              ;	29/1/23
 499  8737
 500  8737              Mov_Amadeus
 501  8737
 502  8737 AF           	xor a
 503  8738 32 CA 85     	ld (Obj_dibujado),a
 504  873B CD 70 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 505  873E              ;														; Obj_dibujado="0".
 506  873E              ; Movemos Amadeus.
 507  873E
 508  873E CD E1 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 509  8741 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 510  8744 CB 67        	bit 4,a
 511  8746 C8           	ret z
 512  8747
 513  8747              ; ---------
 514  8747
 515  8747 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 516  8749 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 517  874C CD 70 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 518  874F CD 87 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 519  8752 CD 56 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 520  8755 C9           	ret													; _de la nave.
 521  8756
 522  8756              ; --------------------------------------------------------------------------------------------------------------
 523  8756              ;
 524  8756              ;	31/01/23
 525  8756              ;
 526  8756              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 527  8756
 528  8756              Guarda_foto_entidad_a_borrar
 529  8756
 530  8756 CD 47 90     	call Prepara_draw
 531  8759 CD 81 8F     	call calcula_CColumnass
 532  875C CD B8 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 533  875F CD 0D 90     	call Define_rutina_de_impresion
 534  8762 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 535  8765 C9           	ret
 536  8766
 537  8766              ; --------------------------------------------------------------------------------------------------------------
 538  8766              ;
 539  8766              ;	31/01/23
 540  8766              ;
 541  8766              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 542  8766              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 543  8766
 544  8766              Guarda_foto_entidad_a_pintar
 545  8766
 546  8766 CD 93 87     	call Repone_pintar
 547  8769 CD 6D 8D     	call Draw
 548  876C CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 549  876F C9           	ret
 550  8770
 551  8770              ; --------------------------------------------------------------------------------------------------------------
 552  8770              ;
 553  8770              ;
 554  8770
 555  8770 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 556  8773 3A CA 85     	ld a,(Obj_dibujado)
 557  8776 A7           	and a
 558  8777 28 05        	jr z,1F
 559  8779 11 BF 85     	ld de,Variables_de_pintado
 560  877C 18 03        	jr 2F
 561  877E 11 B5 85     1 ld de,Variables_de_borrado
 562  8781 01 08 00     2 ld bc,8
 563  8784 ED B0        	ldir
 564  8786 C9           	ret
 565  8787
 566  8787              ; --------------------------------------------------------------------------------------------------------------
 567  8787
 568  8787 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 569  878A 11 9B 85     	ld de,Filas
 570  878D 01 08 00     	ld bc,8
 571  8790 ED B0        	ldir
 572  8792 C9           	ret
 573  8793
 574  8793 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 575  8796 11 9B 85     	ld de,Filas
 576  8799 01 08 00     	ld bc,8
 577  879C ED B0        	ldir
 578  879E C9           	ret
 579  879F
 580  879F              ; *************************************************************************************************************************************************************
 581  879F              ;
 582  879F              ; 8/1/23
 583  879F              ;
 584  879F              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 585  879F              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 586  879F              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 587  879F
 588  879F              ; Destruye HL y DE !!!!!
 589  879F
 590  879F              Inicia_punteros_de_entidades
 591  879F
 592  879F 21 68 84     	ld hl,Indice_de_entidades
 593  87A2 CD FA 87         call Extrae_address
 594  87A5 22 D7 85         ld (Puntero_store_entidades),hl
 595  87A8 21 6A 84     	ld hl,Indice_de_entidades+2
 596  87AB 22 DB 85     	ld (Indice_restore),hl
 597  87AE CD FA 87     	call Extrae_address
 598  87B1 22 D9 85     	ld (Puntero_restore_entidades),hl
 599  87B4 C9               ret
 600  87B5
 601  87B5              ; *************************************************************************************************************************************************************
 602  87B5              ;
 603  87B5              ; 8/1/23
 604  87B5              ;
 605  87B5              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 606  87B5
 607  87B5 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 608  87B8 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 609  87BB C9           	ret
 610  87BC 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 611  87BF 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 612  87C2 C9           	ret
 613  87C3
 614  87C3              ; -------------------------------------------------------------------------------------------------------------
 615  87C3              ;
 616  87C3              ; 28/2/23
 617  87C3              ;
 618  87C3
 619  87C3              Calcula_numero_de_malotes
 620  87C3
 621  87C3 3A D6 85     	ld a,(Ctrl_1)
 622  87C6 CB 5F        	bit 3,a
 623  87C8 20 FE        	jr nz,$
 624  87CA
 625  87CA 21 00 70     	ld hl,Album_de_fotos
 626  87CD EB           	ex de,hl
 627  87CE 2A E3 85     	ld hl,(Stack_snapshot)
 628  87D1
 629  87D1 06 00        	ld b,0
 630  87D3 7D           	ld a,l
 631  87D4 93           	sub e
 632  87D5 28 07        	jr z,1F
 633  87D7
 634  87D7              ; Nº de malotes no es "0".
 635  87D7
 636  87D7 D6 06        2 sub 6
 637  87D9 04           	inc b
 638  87DA A7           	and a
 639  87DB 20 FA        	jr nz,2B
 640  87DD 78           	ld a,b
 641  87DE
 642  87DE 32 DE 85     1 ld (Numero_de_malotes),a
 643  87E1 C9           	ret
 644  87E2
 645  87E2              ; -------------------------------------------------------------------------------------------------------------
 646  87E2              ;
 647  87E2              ; 28/2/23
 648  87E2              ;
 649  87E2
 650  87E2              Calcula_numero_de_disparotes
 651  87E2
 652  87E2 21 60 70     	ld hl,Album_de_fotos_disparos
 653  87E5 EB           	ex de,hl
 654  87E6 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 655  87E9
 656  87E9 06 00        	ld b,0
 657  87EB 7D           	ld a,l
 658  87EC 93           	sub e
 659  87ED 28 07        	jr z,1F
 660  87EF
 661  87EF              ; Nº de malotes no es "0".
 662  87EF
 663  87EF D6 06        2 sub 6
 664  87F1 04           	inc b
 665  87F2 A7           	and a
 666  87F3 20 FA        	jr nz,2B
 667  87F5 78           	ld a,b
 668  87F6
 669  87F6 32 E7 85     1 ld (Numero_de_disparotes),a
 670  87F9 C9           	ret
 671  87FA              ; *************************************************************************************************************************************************************
 672  87FA              ;
 673  87FA              ; 20/10/22
 674  87FA              ;
 675  87FA              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 676  87FA              ;
 677  87FA              ; Destruye el puntero y DE !!!!!
 678  87FA
 679  87FA 5E           Extrae_address ld e,(hl)
 680  87FB 23           	inc hl
 681  87FC 56           	ld d,(hl)
 682  87FD 2B           	dec hl
 683  87FE EB           	ex de,hl
 684  87FF C9           	ret
 685  8800
 686  8800              ; *************************************************************************************************************************************************************
 687  8800              ;
 688  8800              ;	7/2/23
 689  8800              ;
 690  8800              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 691  8800              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 692  8800              ;
 693  8800              ;   Destruye HL y BC !!!!!,
 694  8800              ;
 695  8800              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 696  8800              ;					"0" ..... Izquierda.
 697  8800
 698  8800              Inicia_Puntero_objeto
 699  8800
 700  8800 3A AF 85     	ld a,(Cuad_objeto)
 701  8803 E6 01        	and 1
 702  8805 F5           	push af
 703  8806 CC 24 88     	call z,Inicia_puntero_objeto_izq
 704  8809 F1           	pop af
 705  880A 28 2B        	jr z,1F
 706  880C CD 11 88     	call Inicia_puntero_objeto_der
 707  880F 18 26        	jr 1F
 708  8811
 709  8811              ; Arrancamos desde la parte izquierda de la pantalla.
 710  8811              ; Iniciamos (Indice_Sprite_der).
 711  8811
 712  8811 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 713  8814 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 714  8817 CD FA 87     	call Extrae_address
 715  881A 22 9F 85     	ld (Puntero_objeto),hl
 716  881D
 717  881D 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 718  8820 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 719  8823 C9           	ret
 720  8824
 721  8824              ; Arrancamos desde la parte derecha de la pantalla.
 722  8824              ; Iniciamos (Indice_Sprite_izq).
 723  8824
 724  8824 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 725  8827 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 726  882A CD FA 87     	call Extrae_address
 727  882D 22 9F 85     	ld (Puntero_objeto),hl
 728  8830
 729  8830 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 730  8833 22 A9 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 731  8836 C9           	ret
 732  8837
 733  8837              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 734  8837
 735  8837 21 38 83     1 ld hl,Amadeus
 736  883A ED 4B 9F 85  	ld bc,(Puntero_objeto)
 737  883E B7 ED 42     	sub hl,bc
 738  8841 C0           	ret nz
 739  8842 21 C9 85     	ld hl,Ctrl_0
 740  8845 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 741  8847 C9           	ret 												; _de nuestra nave en los extremos.
 742  8848
 743  8848              ; *************************************************************************************************************************************************************
 744  8848              ;
 745  8848              ;	8/1/23
 746  8848              ;
 747  8848              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 748  8848              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 749  8848
 750  8848              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 751  8848              ;	_de la 2ª y 3ª entidad respectivamente.
 752  8848
 753  8848              Store_Restore_entidades
 754  8848
 755  8848 E5           	push hl
 756  8849 D5           	push de
 757  884A C5            	push bc
 758  884B
 759  884B              ;	STORE !!!!!
 760  884B              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 761  884B
 762  884B 21 9B 85     	ld hl,Filas
 763  884E ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 764  8852 01 3B 00     	ld bc,59
 765  8855 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 766  8857
 767  8857              ; 	Entidad_sospechosa. 20/4/23
 768  8857
 769  8857 3A B4 85     	ld a,(Impacto)
 770  885A A7           	and a
 771  885B 28 0C        	jr z,1F
 772  885D
 773  885D 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 774  8860 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 775  8863 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 776  8864 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 777  8866 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 778  8869
 779  8869              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 780  8869
 781  8869 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 782  886C 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 783  886F
 784  886F 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 785  8872 01 3B 00     	ld bc,59
 786  8875 ED B0        	ldir
 787  8877
 788  8877              ;	Incrementa RESTORE !!!!!
 789  8877
 790  8877 2A DB 85         ld hl,(Indice_restore)
 791  887A 23           	inc hl
 792  887B 23           	inc hl
 793  887C 22 DB 85     	ld (Indice_restore),hl
 794  887F CD FA 87         call Extrae_address
 795  8882 22 D9 85         ld (Puntero_restore_entidades),hl
 796  8885
 797  8885 C1           	pop bc
 798  8886 D1           	pop de
 799  8887 E1           	pop hl
 800  8888 C9           	ret
 801  8889
 802  8889              ; **************************************************************************************************
 803  8889              ;
 804  8889              ;	29/10/22
 805  8889              ;
 806  8889              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 807  8889
 808  8889 E5           Restore_Primera_entidad push hl
 809  888A D5           	push de
 810  888B C5            	push bc
 811  888C 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 812  888F 11 9B 85     	ld de,Filas
 813  8892 01 3B 00     	ld bc,59
 814  8895 ED B0        	ldir
 815  8897 C1           	pop bc
 816  8898 D1           	pop de
 817  8899 E1           	pop hl
 818  889A C9           	ret
 819  889B
 820  889B              ; **************************************************************************************************
 821  889B              ;
 822  889B              ;	25/01/23
 823  889B              ;
 824  889B              ;	Restore_Amadeus
 825  889B              ;
 826  889B              ;	Cargamos en DRAW los parámetros de Amadeus.
 827  889B              ;
 828  889B
 829  889B E5           Restore_Amadeus	push hl
 830  889C D5           	push de
 831  889D C5            	push bc
 832  889E 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 833  88A1 11 9B 85     	ld de,Filas
 834  88A4 01 3B 00     	ld bc,59
 835  88A7 ED B0        	ldir
 836  88A9 C1           	pop bc
 837  88AA D1           	pop de
 838  88AB E1           	pop hl
 839  88AC C9           	ret
 840  88AD
 841  88AD              ; *************************************************************************************************************************************************************
 842  88AD              ;
 843  88AD              ;	29/01/23
 844  88AD              ;
 845  88AD              ;	Store_Amadeus
 846  88AD              ;
 847  88AD              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 848  88AD              ;
 849  88AD
 850  88AD E5           Store_Amadeus push hl
 851  88AE D5           	push de
 852  88AF C5            	push bc
 853  88B0 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 854  88B3 11 74 84     	ld de,Amadeus_db
 855  88B6 01 3B 00     	ld bc,59
 856  88B9 ED B0        	ldir
 857  88BB C1           	pop bc
 858  88BC D1           	pop de
 859  88BD E1           	pop hl
 860  88BE C9           	ret
 861  88BF
 862  88BF              ; **************************************************************************************************
 863  88BF
 864  88BF              ; -----------------------------------------------------------
 865  88BF              ;
 866  88BF              ;	27/04/23
 867  88BF              ;
 868  88BF              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 869  88BF              ;
 870  88BF              ;	Destruye: HL,BC,DE,A
 871  88BF
 872  88BF 21 9B 85     Borra_datos_entidad ld hl,Filas
 873  88C2 01 3A 00     	ld bc,58
 874  88C5 AF           	xor a
 875  88C6 77           	ld (hl),a
 876  88C7 11 9C 85     	ld de,Filas+1
 877  88CA ED B0        	ldir
 878  88CC C9           	ret
 879  88CD
 880  88CD              ; -----------------------------------------------------------
 881  88CD
 882  88CD              ; Teclado.
 883  88CD
 884  88CD 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 885  88CF DB FE        	in a,($fe)
 886  88D1 E6 01        	and $01
 887  88D3 28 02        	jr z,1f
 888  88D5 18 F6        	jr Pulsa_ENTER
 889  88D7 C9           1 ret
 890  88D8
 891  88D8              ; **************************************************************************************************
 892  88D8              ;
 893  88D8              ; Temporización.
 894  88D8
 895  88D8              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 896  88D8              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 897  88D8              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 898  88D8              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 899  88D8
 900  88D8              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 901  88D8              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 902  88D8              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 903  88D8
 904  88D8              ; A partir de $4f61 no hace falta DELAY.
 905  88D8
 906  88D8              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 907  88D8
 908  88D8 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 909  88DB 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 910  88DC 78           	LD A,B
 911  88DD A7           	AND A
 912  88DE 20 FB        	JR NZ,wait
 913  88E0 C9           	RET
 914  88E1
 915  88E1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 916  88E1              ;
 917  88E1              ;	5/3/23
 918  88E1              ;
 919  88E1              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 920  88E1
 921  88E1              Movimiento_Amadeus
 922  88E1
 923  88E1              ; Disparo.
 924  88E1
 925  88E1 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 926  88E4 A7           	and a
 927  88E5 20 02        	jr nz,1F
 928  88E7 18 15        	jr 2F
 929  88E9
 930  88E9 3E F7        1 ld a,$f7													; "5" para disparar.
 931  88EB DB FE        	in a,($fe)
 932  88ED E6 10        	and $10
 933  88EF
 934  88EF F5           	push af
 935  88F0 CC 5A 89     	call z,Genera_disparo
 936  88F3 F1           	pop af
 937  88F4 20 08        	jr nz,2F
 938  88F6
 939  88F6 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 940  88F9 EE 01        	xor 1
 941  88FB 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 942  88FE
 943  88FE 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 944  8900 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 945  8902 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 946  8904 CC AB 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 947  8907 3E F7        	ld a,$f7
 948  8909 DB FE        	in a,($fe)
 949  890B E6 01        	and $01
 950  890D C8           	ret z
 951  890E
 952  890E 3E F7        	ld a,$f7
 953  8910 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 954  8912 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 955  8914 CC 8D 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 956  8917 C9           	ret
 957  8918
 958  8918              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 959  8918              ;
 960  8918              ;	Rutina provisional para que los malotes cagen balas.
 961  8918
 962  8918              Detecta_disparo_entidad
 963  8918
 964  8918 3A FA 85     	ld a,(Habilita_disparo_entidad)
 965  891B A7           	and a
 966  891C C8           	ret z
 967  891D 3E 7F        	ld a,$7f
 968  891F DB FE        	in a,($fe)
 969  8921 E6 01        	and 1
 970  8923 C0           	ret nz
 971  8924 CD 5A 89     	call Genera_disparo
 972  8927 C9           	ret
 973  8928
 974  8928              ; Pinta indicadores de FILAS. ------------------------------------------------------
 975  8928
 976  8928 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 977  892B
 978  892B              ; ----------
 979  892B 06 20        	ld b,32
 980  892D E5           2 push hl
 981  892E C5           	push bc
 982  892F              ; ----------
 983  892F
 984  892F 06 BF        	ld b,$bf
 985  8931 36 80        1 ld (hl),%10000000
 986  8933 CD 53 90     	call NextScan
 987  8936 10 F9        	djnz 1B
 988  8938
 989  8938              ; ----------
 990  8938 C1           	pop bc
 991  8939 E1           	pop hl
 992  893A 2C           	inc l
 993  893B 10 F0        	djnz 2B
 994  893D              ; ----------
 995  893D
 996  893D 06 03        	ld b,3
 997  893F 21 00 47         ld hl,$4700
 998  8942 CD 48 89     3 call Bucle_1
 999  8945 10 FB            djnz 3B
1000  8947 C9               ret
1001  8948
1002  8948 C5           Bucle_1 push bc
1003  8949 E5                   push hl
1004  894A D1                   pop de
1005  894B 13                   inc de
1006  894C 01 FF 00             ld bc,255
1007  894F 36 FF                ld (hl),255
1008  8951 ED B0                ldir
1009  8953 23                   inc hl
1010  8954 3E 07                ld a,7
1011  8956 84                   add a,h
1012  8957 67                   ld h,a
1013  8958 C1                   pop bc
1014  8959 C9                   ret
1015  895A
1016  895A              ; ---------------------------------------------------------------
1017  895A
1018  895A              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 895A              ; ******************************************************************************************************************************************************************************************
   2+ 895A              ;
   3+ 895A              ;   17/04/23
   4+ 895A              ;
   5+ 895A              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 895A              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 895A              ;
   8+ 895A              ;
   9+ 895A              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 895A              ;
  11+ 895A              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 895A              ;               _ hacen las entidades hacia abajo.
  13+ 895A              ;
  14+ 895A              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 895A              ;
  16+ 895A              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 895A              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 895A              ;
  19+ 895A              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 895A              ;           _ la bala.
  21+ 895A              ;
  22+ 895A              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 895A              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 895A              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 895A              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 895A              ;           _ en el momento de generarse la bala)).
  27+ 895A
  28+ 895A              Genera_disparo
  29+ 895A
  30+ 895A              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 895A              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 895A              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 895A              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 895A              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 895A              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 895A              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 895A
  38+ 895A              ; Exclusiones:
  39+ 895A
  40+ 895A 3A D2 85         ld a,(Columnas)
  41+ 895D 47               ld b,a
  42+ 895E 3A 9C 85         ld a,(Columns)
  43+ 8961 B8               cp b
  44+ 8962 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8963
  46+ 8963              ; ----- ----- -----
  47+ 8963
  48+ 8963 3A C9 85         ld a,(Ctrl_0)
  49+ 8966 CB 77            bit 6,a
  50+ 8968 20 06            jr nz,14F
  51+ 896A
  52+ 896A 3A A2 85         ld a,(Coordenada_y)
  53+ 896D FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 896F D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8970
  56+ 8970 21 00 80     14 ld hl,Indice_disparo
  57+ 8973 3A A3 85         ld a,(CTRL_DESPLZ)
  58+ 8976 4F               ld c,a
  59+ 8977 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8979              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8979              ;                                            ""        ""       "f9", B="1"
  62+ 8979              ;                                            ""        ""       "fb", B="2"
  63+ 8979              ;                                            ""        ""       "fb", B="3"
  64+ 8979 A7               and a
  65+ 897A 28 10            jr z,1F
  66+ 897C E6 01            and 1
  67+ 897E C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 897F
  69+ 897F 79               ld a,c
  70+ 8980 16 F9            ld d,$f9
  71+ 8982 23           2 inc hl
  72+ 8983 23               inc hl
  73+ 8984 04               inc b
  74+ 8985 BA               cp d
  75+ 8986 28 04            jr z,1F
  76+ 8988 14               inc d
  77+ 8989 14               inc d
  78+ 898A 18 F6            jr 2B
  79+ 898C
  80+ 898C CD FA 87     1 call Extrae_address
  81+ 898F E5               push hl
  82+ 8990 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8992 DD 21 E6 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8996
  85+ 8996              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8996              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8996
  88+ 8996 3A C9 85         ld a,(Ctrl_0)
  89+ 8999 CB 77            bit 6,a
  90+ 899B 20 04            jr nz,19F
  91+ 899D
  92+ 899D AF               xor a
  93+ 899E 32 FA 85         ld (Habilita_disparo_entidad),a
  94+ 89A1
  95+ 89A1 3A AF 85     19 ld a,(Cuad_objeto)
  96+ 89A4 FE 02            cp 2
  97+ 89A6 38 66            jr c,3F
  98+ 89A8 28 64            jr z,3F
  99+ 89AA
 100+ 89AA              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 89AA
 102+ 89AA E6 01            and 1
 103+ 89AC 28 30            jr z,4F
 104+ 89AE
 105+ 89AE              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 89AE              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 89AE              ;
 108+ 89AE              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 89AE              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 89AE              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 89AE
 112+ 89AE 2A 9D 85     	ld hl,(Posicion_actual)
 113+ 89B1
 114+ 89B1              ;   Amadeus o entidad ???.
 115+ 89B1
 116+ 89B1 3A C9 85         ld a,(Ctrl_0)
 117+ 89B4 CB 77            bit 6,a
 118+ 89B6 28 0A            jr z,8F
 119+ 89B8
 120+ 89B8              ; 	Dispara Amadeus.
 121+ 89B8
 122+ 89B8 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 89BA CD 62 90         call PreviousScan
 124+ 89BD CD 62 90         call PreviousScan
 125+ 89C0
 126+ 89C0              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 89C0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 89C0              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 89C0              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 89C0
 131+ 89C0 18 11            jr 10F
 132+ 89C2
 133+ 89C2              ; 	Dispara Entidad.
 134+ 89C2
 135+ 89C2 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 89C5              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 89C5
 138+ 89C5              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 89C5              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 89C5
 141+ 89C5 C5               push bc
 142+ 89C6 06 10            ld b,16
 143+ 89C8 CD 53 90     9 call NextScan
 144+ 89CB 10 FB            djnz 9B
 145+ 89CD C1               pop bc
 146+ 89CE CD 38 8A         call Ajusta_disparo_parte_izquierda
 147+ 89D1 18 06            jr 17F
 148+ 89D3
 149+ 89D3              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 89D3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 89D3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 89D3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 89D3
 154+ 89D3 CD 38 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 89D6 CD AD 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 89D9              ;                                                      ; _al generar el disparo.
 157+ 89D9
 158+ 89D9              ; 	LLegados a este punto tendremos:
 159+ 89D9              ;
 160+ 89D9              ;       Puntero_objeto_disparo en IY.
 161+ 89D9              ;       Rutinas_de_impresion en IX.
 162+ 89D9              ;       Puntero_de_impresion en HL.
 163+ 89D9              ;       Impacto/Dirección en BC.
 164+ 89D9
 165+ 89D9 CD 40 8A     17 call Almacena_disparo
 166+ 89DC 18 52            jr 6F                                             ; RET.
 167+ 89DE
 168+ 89DE              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 89DE              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 89DE              ;
 171+ 89DE              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 89DE              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 89DE              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 89DE
 175+ 89DE 2A 9D 85     4 ld hl,(Posicion_actual)
 176+ 89E1
 177+ 89E1              ;   Amadeus o entidad ???.
 178+ 89E1
 179+ 89E1 3A C9 85         ld a,(Ctrl_0)
 180+ 89E4 CB 77            bit 6,a
 181+ 89E6 28 0A            jr z,11F
 182+ 89E8
 183+ 89E8              ; 	Dispara Amadeus.
 184+ 89E8
 185+ 89E8 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 89EA CD 62 90         call PreviousScan
 187+ 89ED CD 62 90         call PreviousScan
 188+ 89F0
 189+ 89F0              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 89F0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 89F0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 89F0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 89F0
 194+ 89F0 18 11            jr 13F
 195+ 89F2
 196+ 89F2              ; 	Dispara Entidad.
 197+ 89F2
 198+ 89F2 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 89F5              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 89F5
 201+ 89F5              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 89F5              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 89F5
 204+ 89F5 C5               push bc
 205+ 89F6 06 10            ld b,16
 206+ 89F8 CD 53 90     12 call NextScan
 207+ 89FB 10 FB            djnz 12B
 208+ 89FD C1               pop bc
 209+ 89FE
 210+ 89FE CD 31 8A         call Ajusta_disparo_parte_derecha
 211+ 8A01 18 06            jr 18F
 212+ 8A03
 213+ 8A03              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A03              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A03              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A03              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A03
 218+ 8A03 CD 31 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A06 CD AD 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A09              ;                                                       ; _al generar el disparo.
 221+ 8A09
 222+ 8A09              ; LLegados a este punto tendremos:
 223+ 8A09              ;
 224+ 8A09              ;       Puntero_objeto_disparo en IY.
 225+ 8A09              ;       Rutinas_de_impresion en IX.
 226+ 8A09              ;       Puntero_de_impresion en HL.
 227+ 8A09              ;       Impacto/Dirección en BC.
 228+ 8A09
 229+ 8A09 CD 40 8A     18 call Almacena_disparo
 230+ 8A0C 18 22            jr 6F                                               ; RET.
 231+ 8A0E
 232+ 8A0E              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A0E
 234+ 8A0E 28 11        3 jr z,5F
 235+ 8A10
 236+ 8A10              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A10              ;
 238+ 8A10              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A10              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A10              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A10              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A10
 243+ 8A10              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A10              ;	   ""        ""       "f9", B="1"
 245+ 8A10              ;	   ""        ""       "fb", B="2"
 246+ 8A10              ; 	   ""        ""       "fb", B="3"
 247+ 8A10
 248+ 8A10 2A 9D 85     	ld hl,(Posicion_actual)
 249+ 8A13 CD 53 90     	call NextScan
 250+ 8A16
 251+ 8A16              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A16              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A16              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A16              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A16
 256+ 8A16 CD 38 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A19
 258+ 8A19              ; 	No se produce impacto. B="$80"
 259+ 8A19              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A19
 261+ 8A19 01 80 80         ld bc,$8080
 262+ 8A1C
 263+ 8A1C              ; 	LLegados a este punto tendremos:
 264+ 8A1C              ;
 265+ 8A1C              ;       Puntero_objeto_disparo en IY.
 266+ 8A1C              ;       Rutinas_de_impresion en IX.
 267+ 8A1C              ;       Puntero_de_impresion en HL.
 268+ 8A1C              ;       Impacto/Dirección en BC.
 269+ 8A1C
 270+ 8A1C CD 40 8A         call Almacena_disparo
 271+ 8A1F 18 0F            jr 6F                                           ; RET.
 272+ 8A21
 273+ 8A21              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A21              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A21              ;
 276+ 8A21              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A21              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A21              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A21              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A21
 281+ 8A21 2A 9D 85     5 ld hl,(Posicion_actual)
 282+ 8A24 CD 53 90     	call NextScan
 283+ 8A27
 284+ 8A27              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A27              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A27              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A27              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A27
 289+ 8A27 CD 31 8A         call Ajusta_disparo_parte_derecha
 290+ 8A2A
 291+ 8A2A              ; 	No se produce impacto. B="$80"
 292+ 8A2A              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A2A
 294+ 8A2A 01 80 80     15 ld bc,$8080
 295+ 8A2D
 296+ 8A2D              ; 	LLegados a este punto tendremos:
 297+ 8A2D              ;
 298+ 8A2D              ;       Puntero_objeto_disparo en IY.
 299+ 8A2D              ;       Rutinas_de_impresion en IX.
 300+ 8A2D              ;       Puntero_de_impresion en HL.
 301+ 8A2D              ;       Impacto/Dirección en BC.
 302+ 8A2D
 303+ 8A2D CD 40 8A         call Almacena_disparo
 304+ 8A30
 305+ 8A30 C9           6 ret
 306+ 8A31
 307+ 8A31              ; ----------------------------------------------------------------
 308+ 8A31              ;
 309+ 8A31              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A31              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A31              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A31
 313+ 8A31 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A32 FE 02            cp 2
 315+ 8A34 38 01            jr c,1F
 316+ 8A36 23               inc hl
 317+ 8A37 C9           1 ret
 318+ 8A38
 319+ 8A38 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8A39 FE 01        	cp 1
 321+ 8A3B 20 01        	jr nz,1F
 322+ 8A3D 2B           	dec hl
 323+ 8A3E 2B           1 dec hl
 324+ 8A3F C9               ret
 325+ 8A40
 326+ 8A40              ; ----------------------------------------------------------------
 327+ 8A40              ;
 328+ 8A40              ;   25/02/23
 329+ 8A40              ;
 330+ 8A40              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8A40              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8A40              ;
 333+ 8A40              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8A40              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8A40
 336+ 8A40              Almacena_disparo
 337+ 8A40
 338+ 8A40 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8A41 F1               pop af
 340+ 8A42 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8A43
 342+ 8A43 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8A44 E6 01            and 1
 344+ 8A46 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8A48              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8A48              ; 	Dispara AMADEUS.
 347+ 8A48
 348+ 8A48              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8A48              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8A48              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8A48              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8A48
 353+ 8A48 C5               push bc
 354+ 8A49 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8A4C 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8A4F A7               and a
 357+ 8A50 ED 42            sbc hl,bc
 358+ 8A52 CC BC 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8A55 C1               pop bc
 360+ 8A56 28 54            jr z,4F
 361+ 8A58
 362+ 8A58 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8A5B 23               inc hl
 364+ 8A5C 23               inc hl
 365+ 8A5D 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8A60              ;                                                   ; _ Disparo_(+1).
 367+ 8A60 18 18            jr 2F
 368+ 8A62
 369+ 8A62              ; Dispara una entidad.
 370+ 8A62
 371+ 8A62 C5           1 push bc
 372+ 8A63 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8A66 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8A69 A7               and a
 375+ 8A6A ED 42            sbc hl,bc
 376+ 8A6C CC B5 87         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8A6F C1               pop bc
 378+ 8A70 28 3A            jr z,4F
 379+ 8A72
 380+ 8A72 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8A75 23               inc hl
 382+ 8A76 23               inc hl
 383+ 8A77 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8A7A              ;                                                   ; _ Disparo_(+1).
 385+ 8A7A CD FA 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8A7D              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8A7D              ;
 388+ 8A7D              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8A7D              ;                                                     Rutinas_de_impresion en IX.
 390+ 8A7D              ;                                                     Puntero_de_impresion en HL.
 391+ 8A7D              ;                                                     Impacto/Dirección en BC.
 392+ 8A7D
 393+ 8A7D 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8A7E 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8A7F 23               inc hl                                          ; _ al siguiente.
 396+ 8A80 A7               and a
 397+ 8A81 20 C0            jr nz,3B
 398+ 8A83
 399+ 8A83 08               ex af,af
 400+ 8A84 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8A88 F9               ld sp,hl
 402+ 8A89
 403+ 8A89 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8A8B F5               push af                                         ; Puntero de impresión.
 405+ 8A8C FD E5            push iy                                         ; Puntero objeto.
 406+ 8A8E C5               push bc                                         ; Control.
 407+ 8A8F
 408+ 8A8F ED 7B DF 85      ld sp,(Stack)
 409+ 8A93
 410+ 8A93              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8A93
 412+ 8A93 21 D6 85     	ld hl,Ctrl_1
 413+ 8A96 CB C6        	set 0,(hl)
 414+ 8A98
 415+ 8A98 DD E5        	push ix
 416+ 8A9A E1               pop hl
 417+ 8A9B F5               push af
 418+ 8A9C DD E1            pop ix
 419+ 8A9E
 420+ 8A9E CD A0 7F     	call Guarda_foto_registros
 421+ 8AA1
 422+ 8AA1 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8AA4 CB 86        	res 0,(hl)
 424+ 8AA6
 425+ 8AA6              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8AA6              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8AA6
 428+ 8AA6 CD BC 87         call Inicia_Puntero_Disparo_Amadeus
 429+ 8AA9 CD B5 87         call Inicia_Puntero_Disparo_Entidades
 430+ 8AAC
 431+ 8AAC C9           4 ret
 432+ 8AAD
 433+ 8AAD              ; ----------------------------------------------------------------
 434+ 8AAD              ;
 435+ 8AAD              ;   4/3/23
 436+ 8AAD              ;
 437+ 8AAD              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8AAD              ;   _ al generarse el disparo.
 439+ 8AAD              ;
 440+ 8AAD              ;       "$80" ..... No se produce colisión.
 441+ 8AAD              ;       "$81" ..... Se produce colisión.
 442+ 8AAD
 443+ 8AAD              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8AAD              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8AAD
 446+ 8AAD
 447+ 8AAD FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8AAF E5               push hl                                        ; Puntero de impresión.
 449+ 8AB0 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8AB2 CD CE 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8AB5
 452+ 8AB5 7B               ld a,e
 453+ 8AB6 E6 01            and 1
 454+ 8AB8 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8ABA
 456+ 8ABA E1               pop hl
 457+ 8ABB E5               push hl
 458+ 8ABC CD 53 90         call NextScan
 459+ 8ABF
 460+ 8ABF 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8AC0 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8AC2 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8AC4              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8AC4 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8AC6 CD CE 8A         call Bucle_2
 466+ 8AC9
 467+ 8AC9 43           2 ld b,e
 468+ 8ACA E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8ACB FD E1            pop iy
 470+ 8ACD C9               ret
 471+ 8ACE
 472+ 8ACE               ; ---------- ----------
 473+ 8ACE
 474+ 8ACE 06 02        Bucle_2 ld b,2
 475+ 8AD0 FD 7E 00     2 ld a,(iy)
 476+ 8AD3 A6               and (hl)
 477+ 8AD4 28 02            jr z,1F
 478+ 8AD6 1E 81            ld e,$81
 479+ 8AD8 23           1 inc hl
 480+ 8AD9 FD 23            inc iy
 481+ 8ADB 10 F3            djnz 2B
 482+ 8ADD C9               ret
 483+ 8ADE
 484+ 8ADE              ; -------------------------------------------------------------------------------------------------------------
 485+ 8ADE              ;
 486+ 8ADE              ;   11/04/23
 487+ 8ADE              ;
 488+ 8ADE              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8ADE              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8ADE              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8ADE              ;
 492+ 8ADE              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8ADE
 494+ 8ADE              Compara_coordenadas_X
 495+ 8ADE
 496+ 8ADE              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8ADE              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8ADE
 499+ 8ADE              ; Preparamos registros:
 500+ 8ADE
 501+ 8ADE 21 A1 85         ld hl,Filas+6
 502+ 8AE1 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8AE2 23               inc hl
 504+ 8AE3 23               inc hl
 505+ 8AE4 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8AE5 43               ld b,e
 507+ 8AE6 21 AF 85         ld hl,Filas+20
 508+ 8AE9 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8AEA 21 F4 85         ld hl,Coordenadas_X_Entidad
 510+ 8AED CD FC 8C         call Guarda_coordenadas_X
 511+ 8AF0
 512+ 8AF0              ; Preparamos registros:
 513+ 8AF0
 514+ 8AF0 21 7A 84         ld hl,Amadeus_db+6
 515+ 8AF3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8AF4 23               inc hl
 517+ 8AF5 23               inc hl
 518+ 8AF6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8AF7 7B               ld a,e
 520+ 8AF8 08               ex af,af'
 521+ 8AF9 21 88 84         ld hl,Amadeus_db+20
 522+ 8AFC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8AFD 21 F1 85         ld hl,Coordenadas_X_Amadeus
 524+ 8B00 CD FC 8C         call Guarda_coordenadas_X
 525+ 8B03
 526+ 8B03              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B03              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B03
 529+ 8B03 04               inc b
 530+ 8B04 05               dec b
 531+ 8B05 28 04            jr z,1F
 532+ 8B07 06 03            ld b,3
 533+ 8B09 18 02            jr 2F
 534+ 8B0B 06 02        1 ld b,2
 535+ 8B0D 08           2 ex af,af'
 536+ 8B0E 3C               inc a
 537+ 8B0F 3D               dec a
 538+ 8B10 28 04            jr z,5F
 539+ 8B12 0E 03            ld c,3
 540+ 8B14 18 02            jr 6F
 541+ 8B16 0E 02        5 ld c,2
 542+ 8B18 79           6 ld a,c
 543+ 8B19 08               ex af,af'
 544+ 8B1A 11 F4 85         ld de,Coordenadas_X_Entidad
 545+ 8B1D 1A           4 ld a,(de)
 546+ 8B1E 21 F1 85         ld hl,Coordenadas_X_Amadeus
 547+ 8B21 BE           3 cp (hl)
 548+ 8B22 28 0E            jr z,7F
 549+ 8B24 23               inc hl
 550+ 8B25 0D               dec c
 551+ 8B26 20 F9            jr nz,3B
 552+ 8B28 13               inc de
 553+ 8B29 08               ex af,af'
 554+ 8B2A 4F               ld c,a
 555+ 8B2B 08               ex af,af'
 556+ 8B2C 10 EF            djnz 4B
 557+ 8B2E
 558+ 8B2E              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B2E
 560+ 8B2E CD 3B 8D     8 call Limpia_Coordenadas_X
 561+ 8B31 C9               ret
 562+ 8B32
 563+ 8B32 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 564+ 8B34 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 565+ 8B37 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 566+ 8B3A CB D6            set 2,(hl)
 567+ 8B3C 18 F0            jr 8B
 568+ 8B3E
 569+ 8B3E              ; -----------------------------------------------------------------------
 570+ 8B3E              ;
 571+ 8B3E              ;   17/04/23
 572+ 8B3E              ;
 573+ 8B3E
 574+ 8B3E              Detecta_colision_nave_entidad
 575+ 8B3E
 576+ 8B3E              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 577+ 8B3E
 578+ 8B3E 2A 9D 85         ld hl,(Posicion_actual)
 579+ 8B41 CD B8 8F         call Calcula_puntero_de_impresion
 580+ 8B44
 581+ 8B44              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 582+ 8B44              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 583+ 8B44
 584+ 8B44 DD E5            push ix
 585+ 8B46 E1               pop hl
 586+ 8B47 E5               push hl
 587+ 8B48
 588+ 8B48              ; ----- ----- -----
 589+ 8B48 1E 00            ld e,0                                         ; Indica impacto.
 590+ 8B4A 06 0A            ld b,10
 591+ 8B4C CD 7C 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 592+ 8B4F 7B               ld a,e
 593+ 8B50 FE 05            cp 5
 594+ 8B52 38 0E            jr c,3F
 595+ 8B54
 596+ 8B54              ; LLegados a este punto:
 597+ 8B54              ;
 598+ 8B54              ;   HAY COLISIÓN !!!!!.
 599+ 8B54              ;
 600+ 8B54              ;   .db (Impacto) de Amadeus a "1".
 601+ 8B54              ;   SET el bit3 de (Impacto2).
 602+ 8B54              ;
 603+ 8B54              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 604+ 8B54
 605+ 8B54 21 8D 84         ld hl,Amadeus_db+25
 606+ 8B57 36 01            ld (hl),1
 607+ 8B59 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 608+ 8B5C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 609+ 8B5E CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 610+ 8B60 18 18            jr 1F
 611+ 8B62
 612+ 8B62              ; -----
 613+ 8B62
 614+ 8B62 E1           3 pop hl
 615+ 8B63 CD 53 90         call NextScan
 616+ 8B66 E5               push hl
 617+ 8B67 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 618+ 8B68 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 619+ 8B6A 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 620+ 8B6C 30 0C            jr nc,1F
 621+ 8B6E              ;                                                  ; _ 2º scanline si esto es así.
 622+ 8B6E 10 DC            djnz 2B
 623+ 8B70
 624+ 8B70              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 625+ 8B70
 626+ 8B70              ; LLegados a este punto:
 627+ 8B70              ;
 628+ 8B70              ;   NO HAY COLISIÓN !!!!!.
 629+ 8B70              ;
 630+ 8B70              ;   .db (Impacto) de Amadeus a "0".
 631+ 8B70              ;   RES el bit2 de (Impacto2).
 632+ 8B70              ;
 633+ 8B70              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 8B70              ;   Lo colocamos a "0".
 635+ 8B70
 636+ 8B70 21 EC 85         ld hl,Impacto2
 637+ 8B73 CB 96            res 2,(hl)
 638+ 8B75 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 639+ 8B78 36 00            ld (hl),0
 640+ 8B7A
 641+ 8B7A E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 642+ 8B7B C9               ret
 643+ 8B7C
 644+ 8B7C               ; ---------- ----------
 645+ 8B7C
 646+ 8B7C C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 647+ 8B7D 3A 9C 85         ld a,(Columns)
 648+ 8B80 47               ld b,a
 649+ 8B81 FD 7E 00     2 ld a,(iy)
 650+ 8B84 BE               cp (hl)
 651+ 8B85 28 01            jr z,1F
 652+ 8B87
 653+ 8B87 1C               inc e
 654+ 8B88
 655+ 8B88 23           1 inc hl
 656+ 8B89 FD 23            inc iy
 657+ 8B8B 10 F4            djnz 2B
 658+ 8B8D C1               pop bc
 659+ 8B8E C9               ret
 660+ 8B8F
 661+ 8B8F              ; -------------------------------------------------------------------------------------------------------------
 662+ 8B8F              ;
 663+ 8B8F              ;   13/03/23
 664+ 8B8F              ;
 665+ 8B8F              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 666+ 8B8F              ;
 667+ 8B8F              ;   DESTRUYE: HL,BC,DE y A.
 668+ 8B8F
 669+ 8B8F 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 670+ 8B92 7E               ld a,(hl)
 671+ 8B93 A7               and a
 672+ 8B94 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 673+ 8B95
 674+ 8B95 44               ld b,h
 675+ 8B96 4D               ld c,l
 676+ 8B97 2A E5 85         ld hl,(Stack_snapshot_disparos)
 677+ 8B9A E5               push hl
 678+ 8B9B A7               and a
 679+ 8B9C ED 42            sbc hl,bc
 680+ 8B9E E5               push hl
 681+ 8B9F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 682+ 8BA0
 683+ 8BA0 E1               pop hl
 684+ 8BA1 54               ld d,h
 685+ 8BA2 5D               ld e,l
 686+ 8BA3 1B               dec de
 687+ 8BA4 ED B8            lddr                                                ; Limpiamos.
 688+ 8BA6
 689+ 8BA6 21 60 70         ld hl,Album_de_fotos_disparos
 690+ 8BA9 22 E5 85         ld (Stack_snapshot_disparos),hl
 691+ 8BAC
 692+ 8BAC C9               ret
 693+ 8BAD
 694+ 8BAD              ; -------------------------------------------------------------------------------------------------------------
 695+ 8BAD              ;
 696+ 8BAD              ;   28/03/23
 697+ 8BAD              ;
 698+ 8BAD
 699+ 8BAD 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 700+ 8BB0 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 701+ 8BB3
 702+ 8BB3 CD FA 87     2 call Extrae_address
 703+ 8BB6 7E               ld a,(hl)
 704+ 8BB7 A7               and a
 705+ 8BB8 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 706+ 8BBA
 707+ 8BBA              ; ----- ----- ----- ----- ----- -----
 708+ 8BBA
 709+ 8BBA C5               push bc
 710+ 8BBB CD 77 8C         call foto_disparo_a_borrar
 711+ 8BBE
 712+ 8BBE              ; Existe colisión con este disparo???
 713+ 8BBE
 714+ 8BBE 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 715+ 8BBF 7E               ld a,(hl)
 716+ 8BC0 2B               dec hl
 717+ 8BC1 E6 01            and 1
 718+ 8BC3 28 1D            jr z,9F
 719+ 8BC5
 720+ 8BC5              ;   En este punto:
 721+ 8BC5              ;
 722+ 8BC5              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 723+ 8BC5              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 724+ 8BC5              ;   _con la entidad).
 725+ 8BC5              ;
 726+ 8BC5              ;   Disparo_2A defw 0                                ; Control.
 727+ 8BC5              ;    defw 0                                          ; Puntero objeto.
 728+ 8BC5              ;    defw 0                                          ; Puntero de impresión.
 729+ 8BC5              ;    defw 0                                          ; Rutina de impresión.
 730+ 8BC5
 731+ 8BC5 E5               push hl
 732+ 8BC6
 733+ 8BC6 06 04            ld b,4
 734+ 8BC8 23           19 inc hl
 735+ 8BC9 10 FD            djnz 19B
 736+ 8BCB
 737+ 8BCB CD FA 87         call Extrae_address
 738+ 8BCE CD 6A 96         call Genera_coordenadas_disparo
 739+ 8BD1
 740+ 8BD1              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 741+ 8BD1
 742+ 8BD1 21 EF 85         ld hl,Coordenadas_disparo_certero
 743+ 8BD4 72               ld (hl),d
 744+ 8BD5 23               inc hl
 745+ 8BD6 73               ld (hl),e
 746+ 8BD7
 747+ 8BD7              ; Elimino el disparo de la base de datos.
 748+ 8BD7
 749+ 8BD7 E1               pop hl
 750+ 8BD8 CD F1 8C         call Elimina_disparo_de_base_de_datos
 751+ 8BDB 21 EC 85         ld hl,Impacto2
 752+ 8BDE CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 753+ 8BE0
 754+ 8BE0 18 06            jr 11F
 755+ 8BE2
 756+ 8BE2 CD A0 8C     9 call Mueve_disparo
 757+ 8BE5 CD 77 8C         call foto_disparo_a_borrar
 758+ 8BE8
 759+ 8BE8 C1           11 pop bc
 760+ 8BE9 18 04            jr 7F
 761+ 8BEB
 762+ 8BEB              ; ----- ----- ----- ----- ----- -----
 763+ 8BEB
 764+ 8BEB ED 42        1 sbc hl,bc
 765+ 8BED 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 766+ 8BEF
 767+ 8BEF 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 768+ 8BF2 23               inc hl
 769+ 8BF3 23               inc hl
 770+ 8BF4 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 771+ 8BF7 18 BA            jr 2B
 772+ 8BF9
 773+ 8BF9 CD BC 87     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8BFC 01 66 84         ld bc,Disparo_11
 775+ 8BFF 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 776+ 8C02
 777+ 8C02 CD FA 87     5 call Extrae_address
 778+ 8C05 7E               ld a,(hl)
 779+ 8C06 A7               and a
 780+ 8C07 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 781+ 8C09
 782+ 8C09              ; ----- ----- ----- ----- ----- -----
 783+ 8C09
 784+ 8C09 C5               push bc
 785+ 8C0A CD 77 8C         call foto_disparo_a_borrar
 786+ 8C0D
 787+ 8C0D              ; Existe colisión con este disparo???
 788+ 8C0D
 789+ 8C0D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 790+ 8C0E 7E               ld a,(hl)
 791+ 8C0F 2B               dec hl
 792+ 8C10 E6 01            and 1
 793+ 8C12 28 48            jr z,10F
 794+ 8C14
 795+ 8C14              ; La colisión se produce con Amadeus???
 796+ 8C14              ; Amadeus siempre tiene (Coordenada_y)="$16".
 797+ 8C14
 798+ 8C14 E5               push hl
 799+ 8C15
 800+ 8C15 06 04            ld b,4
 801+ 8C17 23           16 inc hl
 802+ 8C18 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 803+ 8C1A CD FA 87         call Extrae_address
 804+ 8C1D CD 6A 96         call Genera_coordenadas_disparo
 805+ 8C20
 806+ 8C20 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 807+ 8C21 FE 16            cp $16
 808+ 8C23 38 22            jr c,15F
 809+ 8C25
 810+ 8C25              ; (Colisiones en filas 16 y 17).
 811+ 8C25
 812+ 8C25 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 813+ 8C26
 814+ 8C26              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 815+ 8C26
 816+ 8C26 21 7A 84         ld hl,Amadeus_db+6
 817+ 8C29 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 818+ 8C2A 23               inc hl
 819+ 8C2B 23               inc hl
 820+ 8C2C 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 821+ 8C2D 21 88 84         ld hl,Amadeus_db+20
 822+ 8C30 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 823+ 8C31 21 F1 85         ld hl,Coordenadas_X_Amadeus
 824+ 8C34 CD FC 8C         call Guarda_coordenadas_X
 825+ 8C37
 826+ 8C37 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 827+ 8C38
 828+ 8C38              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 829+ 8C38
 830+ 8C38 06 03            ld b,3
 831+ 8C3A 21 F1 85         ld hl,Coordenadas_X_Amadeus
 832+ 8C3D 7E           18 ld a,(hl)
 833+ 8C3E BA               cp d
 834+ 8C3F 20 03            jr nz,17F
 835+ 8C41
 836+ 8C41              ; Colisión Amadeus !!!!!!!!!!
 837+ 8C41
 838+ 8C41 E1               pop hl
 839+ 8C42 18 09            jr 14F
 840+ 8C44
 841+ 8C44 23           17 inc hl
 842+ 8C45 10 F6            djnz 18B
 843+ 8C47
 844+ 8C47              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 845+ 8C47              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 846+ 8C47
 847+ 8C47 E1           15 pop hl
 848+ 8C48 23               inc hl
 849+ 8C49 35               dec (hl)
 850+ 8C4A 2B               dec hl
 851+ 8C4B 18 0F            jr 10F
 852+ 8C4D
 853+ 8C4D              ; -----------------------debug
 854+ 8C4D
 855+ 8C4D              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 856+ 8C4D              ; _ almacén de coordenadas_X de Amadeus.
 857+ 8C4D
 858+ 8C4D E5           14 push hl
 859+ 8C4E CD F1 8C         call Elimina_disparo_de_base_de_datos
 860+ 8C51 21 EC 85         ld hl,Impacto2
 861+ 8C54 CB CE            set 1,(hl)
 862+ 8C56 CD 3B 8D         call Limpia_Coordenadas_X
 863+ 8C59
 864+ 8C59 E1               pop hl
 865+ 8C5A 18 06            jr 12F
 866+ 8C5C
 867+ 8C5C CD A0 8C     10 call Mueve_disparo
 868+ 8C5F CD 77 8C         call foto_disparo_a_borrar
 869+ 8C62 C1           12 pop bc
 870+ 8C63
 871+ 8C63 18 04            jr 8F
 872+ 8C65
 873+ 8C65              ; ----- ----- ----- ----- ----- -----
 874+ 8C65
 875+ 8C65 ED 42        4 sbc hl,bc
 876+ 8C67 28 0A            jr z,6F
 877+ 8C69
 878+ 8C69 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 879+ 8C6C 23               inc hl
 880+ 8C6D 23               inc hl
 881+ 8C6E 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 882+ 8C71 18 8F            jr 5B
 883+ 8C73
 884+ 8C73 CD B5 87     6 call Inicia_Puntero_Disparo_Entidades
 885+ 8C76 C9               ret
 886+ 8C77
 887+ 8C77              ; ------------------------------------------------------------------
 888+ 8C77
 889+ 8C77              foto_disparo_a_borrar
 890+ 8C77
 891+ 8C77 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 892+ 8C78 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 893+ 8C79 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 894+ 8C7A
 895+ 8C7A E5               push hl
 896+ 8C7B 23               inc hl
 897+ 8C7C 23               inc hl
 898+ 8C7D ED 73 DF 85      ld (Stack),sp
 899+ 8C81 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 900+ 8C82 FD E1            pop iy
 901+ 8C84 DD E1            pop ix
 902+ 8C86 E1               pop hl
 903+ 8C87 ED 7B DF 85      ld sp,(Stack)
 904+ 8C8B 3A D6 85         ld a,(Ctrl_1)
 905+ 8C8E CB C7            set 0,a
 906+ 8C90 32 D6 85         ld (Ctrl_1),a
 907+ 8C93 CD A0 7F         call Guarda_foto_registros
 908+ 8C96 3A D6 85         ld a,(Ctrl_1)
 909+ 8C99 CB 87            res 0,a
 910+ 8C9B 32 D6 85         ld (Ctrl_1),a
 911+ 8C9E E1               pop hl
 912+ 8C9F C9               ret
 913+ 8CA0
 914+ 8CA0 E5           Mueve_disparo push hl
 915+ 8CA1 7E               ld a,(hl)
 916+ 8CA2 06 04            ld b,4
 917+ 8CA4 23           1 inc hl
 918+ 8CA5 10 FD            djnz 1B
 919+ 8CA7
 920+ 8CA7              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 921+ 8CA7
 922+ 8CA7 CD FA 87         call Extrae_address
 923+ 8CAA
 924+ 8CAA E6 01            and 1
 925+ 8CAC 28 2A            jr z,2F
 926+ 8CAE
 927+ 8CAE              ; Disparo hacia arriba, (Amadeus).
 928+ 8CAE
 929+ 8CAE              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 930+ 8CAE              ; _ de la dificultad.
 931+ 8CAE
 932+ 8CAE CD 62 90         call PreviousScan
 933+ 8CB1 CD 62 90         call PreviousScan
 934+ 8CB4 CD 62 90         call PreviousScan
 935+ 8CB7
 936+ 8CB7              ; Detecta si el disparo de Amadeus sale de pantalla:
 937+ 8CB7
 938+ 8CB7 7C               ld a,h
 939+ 8CB8 FE 40            cp $40
 940+ 8CBA 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 941+ 8CBC
 942+ 8CBC              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 943+ 8CBC
 944+ 8CBC EB               ex de,hl
 945+ 8CBD 06 04            ld b,4
 946+ 8CBF 2B           6 dec hl
 947+ 8CC0 10 FD            djnz 6B
 948+ 8CC2
 949+ 8CC2 CD F1 8C         call Elimina_disparo_de_base_de_datos
 950+ 8CC5
 951+ 8CC5 18 0C            jr 4F
 952+ 8CC7
 953+ 8CC7              ; Se ha desplazado la bala, compruebo colisión.
 954+ 8CC7
 955+ 8CC7 D5           3 push de
 956+ 8CC8 C5               push bc
 957+ 8CC9 CD AD 8A         call Comprueba_Colision
 958+ 8CCC 78               ld a,b
 959+ 8CCD C1               pop bc
 960+ 8CCE D1               pop de
 961+ 8CCF
 962+ 8CCF EB               ex de,hl
 963+ 8CD0
 964+ 8CD0 73               ld (hl),e
 965+ 8CD1 23               inc hl
 966+ 8CD2 72               ld (hl),d
 967+ 8CD3
 968+ 8CD3 E1           4 pop hl
 969+ 8CD4 23               inc hl
 970+ 8CD5 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 971+ 8CD6 2B               dec hl
 972+ 8CD7 C9               ret
 973+ 8CD8
 974+ 8CD8              ; Disparo hacia abajo, (Entidad).
 975+ 8CD8
 976+ 8CD8              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 977+ 8CD8              ; _ de la dificultad.
 978+ 8CD8
 979+ 8CD8 CD 53 90     2 call NextScan
 980+ 8CDB CD 53 90         call NextScan
 981+ 8CDE CD 53 90         call NextScan
 982+ 8CE1
 983+ 8CE1              ; Detecta si el disparo de la entidad sale de la pantalla.
 984+ 8CE1
 985+ 8CE1 7C               ld a,h
 986+ 8CE2 FE 58            cp $58
 987+ 8CE4 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 988+ 8CE6
 989+ 8CE6 EB               ex de,hl
 990+ 8CE7 06 04            ld b,4
 991+ 8CE9 2B           5 dec hl
 992+ 8CEA 10 FD            djnz 5B
 993+ 8CEC
 994+ 8CEC CD F1 8C         call Elimina_disparo_de_base_de_datos
 995+ 8CEF
 996+ 8CEF 18 E2            jr 4B
 997+ 8CF1
 998+ 8CF1              ; HL apunta al primer byte de la base de datos del disparo.
 999+ 8CF1
1000+ 8CF1 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1001+ 8CF4 AF               xor a
1002+ 8CF5 77               ld (hl),a
1003+ 8CF6 54               ld d,h
1004+ 8CF7 5D               ld e,l
1005+ 8CF8 13               inc de
1006+ 8CF9 ED B0            ldir
1007+ 8CFB C9               ret
1008+ 8CFC
1009+ 8CFC              ; -----------------------------------------------------------------
1010+ 8CFC              ;
1011+ 8CFC              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1012+ 8CFC              ;
1013+ 8CFC              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1014+ 8CFC              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1015+ 8CFC              ;
1016+ 8CFC              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1017+ 8CFC              ;
1018+ 8CFC              ;   INPUTS:
1019+ 8CFC              ;
1020+ 8CFC              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1021+ 8CFC              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1022+ 8CFC              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1023+ 8CFC
1024+ 8CFC              ;   MODIFICA: A, HL, DE y C
1025+ 8CFC
1026+ 8CFC 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1027+ 8CFD 79               ld a,c
1028+ 8CFE E6 01            and 1
1029+ 8D00 20 03            jr nz,1F
1030+ 8D02 14               inc d
1031+ 8D03 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1032+ 8D05
1033+ 8D05              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1034+ 8D05              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D05
1036+ 8D05 15           1 dec d
1037+ 8D06 23           2 inc hl
1038+ 8D07 72               ld (hl),d
1039+ 8D08
1040+ 8D08 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1041+ 8D09 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1042+ 8D0A C8               ret z
1043+ 8D0B
1044+ 8D0B AF               xor a
1045+ 8D0C 5F               ld e,a
1046+ 8D0D 18 ED            jr Guarda_coordenadas_X
1047+ 8D0F
1048+ 8D0F              ; -----------------------------------------------------------------
1049+ 8D0F              ;
1050+ 8D0F              ;   12/04/23
1051+ 8D0F              ;
1052+ 8D0F
1053+ 8D0F 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1054+ 8D12 A7               and a
1055+ 8D13 C8               ret z
1056+ 8D14
1057+ 8D14 FE 04            cp 4
1058+ 8D16 20 09            jr nz,1F
1059+ 8D18
1060+ 8D18
1061+ 8D18              ; La colisión se produce por contacto entre Amadeus y una entidad.
1062+ 8D18
1063+ 8D18 CD 3E 8B         call Detecta_colision_nave_entidad
1064+ 8D1B
1065+ 8D1B 21 EC 85         ld hl,Impacto2
1066+ 8D1E CB 5E            bit 3,(hl)
1067+ 8D20 C0               ret nz                                               ; Existe colisión, RET.
1068+ 8D21
1069+ 8D21              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1070+ 8D21              ; Primero analizamos si algún disparo impacta en Amadeus.
1071+ 8D21
1072+ 8D21 21 EC 85     1 ld hl,Impacto2
1073+ 8D24 CB 4E            bit 1,(hl)
1074+ 8D26 28 07            jr z,2F
1075+ 8D28
1076+ 8D28 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1077+ 8D2B 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1078+ 8D2D 18 0B            jr 3F
1079+ 8D2F
1080+ 8D2F 21 EC 85     2 ld hl,Impacto2
1081+ 8D32 CB 46            bit 0,(hl)
1082+ 8D34 C8               ret z
1083+ 8D35
1084+ 8D35              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1085+ 8D35
1086+ 8D35 21 D6 85         ld hl,Ctrl_1
1087+ 8D38 CB D6            set 2,(hl)
1088+ 8D3A
1089+ 8D3A C9           3 ret
1090+ 8D3B
1091+ 8D3B              ; -----------------------------------------------------------------
1092+ 8D3B              ;
1093+ 8D3B              ;   16/04/23
1094+ 8D3B              ;
1095+ 8D3B
1096+ 8D3B AF           Limpia_Coordenadas_X xor a
1097+ 8D3C 06 06            ld b,6
1098+ 8D3E 21 F1 85         ld hl,Coordenadas_X_Amadeus
1099+ 8D41 77           1 ld (hl),a
1100+ 8D42 23               inc hl
1101+ 8D43 10 FC            djnz 1B
1102+ 8D45 C9               ret
1103+ 8D46
1104+ 8D46              ; -----------------------------------------------------------------
1105+ 8D46              ;
1106+ 8D46              ;   25/04/23
1107+ 8D46              ;
1108+ 8D46
1109+ 8D46              Determina_resultado_comparativa
1110+ 8D46
1111+ 8D46 7C               ld a,h
1112+ 8D47 06 00            ld b,0
1113+ 8D49
1114+ 8D49 CD 61 8D         call Compara_cositas
1115+ 8D4C 04               inc b
1116+ 8D4D 05               dec b
1117+ 8D4E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1118+ 8D4F
1119+ 8D4F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1120+ 8D50 06 00            ld b,0
1121+ 8D52 FE 02            cp $02
1122+ 8D54 28 09            jr z,1F
1123+ 8D56 FE FE            cp $fe
1124+ 8D58 28 05            jr z,1F
1125+ 8D5A
1126+ 8D5A CD 61 8D         call Compara_cositas
1127+ 8D5D 18 01            jr 2F
1128+ 8D5F
1129+ 8D5F 04           1 inc b
1130+ 8D60 C9           2 ret
1131+ 8D61
1132+ 8D61 A7           Compara_cositas and a
1133+ 8D62 28 07            jr z,1F
1134+ 8D64 FE FF            cp $ff
1135+ 8D66 28 03            jr z,1F
1136+ 8D68 FE 01            cp $01
1137+ 8D6A C0               ret nz
1138+ 8D6B 04           1 inc b
1139+ 8D6C C9               ret
1140+ 8D6D
# file closed: Disparo.asm
1019  8D6D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8D6D              ; ******************************************************************************************************************************************************************************************
   2+ 8D6D              ;
   3+ 8D6D              ; 01/23
   4+ 8D6D              ;
   5+ 8D6D              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8D6D
   7+ 8D6D CD 47 90     Draw call Prepara_draw
   8+ 8D70 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8D71 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8D72 28 05        	jr z,2F
  11+ 8D74
  12+ 8D74 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8D77 18 0C        	jr 1F
  14+ 8D79 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8D7C 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8D7F CD 0E 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8D82              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8D82 CD 8D 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8D85 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8D88 CB 6F        	bit 5,a
  21+ 8D8A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8D8C
  23+ 8D8C CD A4 8D     	call Comprueba_limite_horizontal
  24+ 8D8F CD 34 8E     	call Comprueba_limite_vertical
  25+ 8D92
  26+ 8D92              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8D92
  28+ 8D92 CD 81 8F     3 call calcula_CColumnass
  29+ 8D95 CD B8 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8D98 CD 0D 90     	call Define_rutina_de_impresion
  31+ 8D9B
  32+ 8D9B 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8D9E CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8DA0 32 C9 85     	ld (Ctrl_0),a
  35+ 8DA3
  36+ 8DA3 C9           	ret
  37+ 8DA4
  38+ 8DA4              ; *******************************************************************************************************************************************************************************************
  39+ 8DA4              ;	21/01/23
  40+ 8DA4              ;
  41+ 8DA4              ; 	Comprueba_limite_horizontal.
  42+ 8DA4              ;
  43+ 8DA4              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8DA4              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8DA4              ;
  46+ 8DA4              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8DA4              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8DA4              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8DA4              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8DA4
  51+ 8DA4
  52+ 8DA4
  53+ 8DA4 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8DA7 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8DA9 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8DAB E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8DAD 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8DB0 18 09            jr 6F
  59+ 8DB2 CB 5F        1 bit 3,a
  60+ 8DB4 28 0A            jr z,2F
  61+ 8DB6 E6 F7            and $f7
  62+ 8DB8 32 C9 85         ld (Ctrl_0),a
  63+ 8DBB CD 0E 8F     6 call Inicializacion
  64+ 8DBE 18 5B            jr 5F
  65+ 8DC0 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8DC1
  67+ 8DC1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8DC1              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8DC1
  70+ 8DC1 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8DC2 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8DC5 CD 13 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8DC8 67           	ld h,a
  74+ 8DC9 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8DCA CD 13 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8DCD 67           	ld h,a
  77+ 8DCE A7           	and a
  78+ 8DCF ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8DD1 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8DD2 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8DD5 FE 02        	cp 2
  82+ 8DD7 38 1E        	jr c,3F
  83+ 8DD9 28 1C        	jr z,3F
  84+ 8DDB 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8DDC 28 23            jr z,7F
  86+ 8DDE 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8DE0 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8DE2 E1           	pop hl
  89+ 8DE3
  90+ 8DE3              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8DE3              ; _para indicar con E="2" en caso necesario.
  92+ 8DE3
  93+ 8DE3 E5               push hl
  94+ 8DE4 C5               push bc
  95+ 8DE5 CD 13 93     	call calcula_tercio
  96+ 8DE8 FE 01        	cp 1
  97+ 8DEA 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8DEC CD 1C 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8DEF 28 26            jr z,9F
 100+ 8DF1 38 24            jr c,9F
 101+ 8DF3 1E 00        11 ld e,0
 102+ 8DF5 18 22            jr 8F
 103+ 8DF7 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8DF8 28 07        	jr z, 7F
 105+ 8DFA 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8DFC 1E 00         	ld e,0
 107+ 8DFE E1           	pop hl
 108+ 8DFF 18 04        	jr 4F
 109+ 8E01 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E03 18 15            jr 10F
 111+ 8E05
 112+ 8E05              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E05              ; _para indicar con E="2" en caso necesario.
 114+ 8E05
 115+ 8E05 E5           4 push hl
 116+ 8E06 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E07 CD 13 93     	call calcula_tercio
 118+ 8E0A FE 01        	cp 1
 119+ 8E0C 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E0E CD 1C 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E11 28 04            jr z,9F
 122+ 8E13 30 02            jr nc,9F
 123+ 8E15 18 02        	jr 8F
 124+ 8E17 1E 02        9 ld e,2
 125+ 8E19 C1           8 pop bc
 126+ 8E1A E1           10 pop hl
 127+ 8E1B C9           5 ret
 128+ 8E1C
 129+ 8E1C              ; --------------------
 130+ 8E1C              ;
 131+ 8E1C              ; 25/08/22
 132+ 8E1C
 133+ 8E1C CD 13 93     Comprueba_centro call calcula_tercio
 134+ 8E1F 67               ld h,a
 135+ 8E20 08           	ex af,af
 136+ 8E21 FE 02        	cp 2
 137+ 8E23 38 07        	jr c,1F
 138+ 8E25 28 05        	jr z,1F
 139+ 8E27 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E2A 18 03        	jr 2F
 141+ 8E2C 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E2F 08           2 ex af,af
 143+ 8E30 A7               and a
 144+ 8E31 ED 42            sbc hl,bc
 145+ 8E33 C9               ret
 146+ 8E34
 147+ 8E34              ; *********************************************************************************************************************************************************************************************
 148+ 8E34              ;
 149+ 8E34              ;   16/8/22
 150+ 8E34              ;
 151+ 8E34              ;	Comprueba_limite_vertical
 152+ 8E34              ;
 153+ 8E34              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E34              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E34              ;
 156+ 8E34
 157+ 8E34 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E37 7D           	ld a,l
 159+ 8E38 E6 1F        	and $1F
 160+ 8E3A 57           	ld d,a
 161+ 8E3B 3A D5 85     	ld a,(Limite_vertical)
 162+ 8E3E BA           	cp d 											; Límite - Posición.
 163+ 8E3F 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8E40 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8E43 CB 47        	bit 0,a
 166+ 8E45 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8E47
 168+ 8E47              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8E47
 170+ 8E47 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8E48 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8E4A
 173+ 8E4A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8E4A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8E4A
 176+ 8E4A 3A A1 85         ld a,(Coordenada_X)
 177+ 8E4D 16 0F            ld d,Centro_izquierda
 178+ 8E4F A7               and a
 179+ 8E50 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8E51 28 1E            jr z,3F
 181+ 8E53 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8E55              ;                                                    ; _salimos sin modificar nada.
 183+ 8E55 18 0E            jr 2F
 184+ 8E57 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8E58 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8E5A
 187+ 8E5A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8E5A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8E5A
 190+ 8E5A 3A A1 85         ld a,(Coordenada_X)
 191+ 8E5D 16 10            ld d,Centro_derecha
 192+ 8E5F A7               and a
 193+ 8E60 92               sub d
 194+ 8E61 28 0E            jr z,3F
 195+ 8E63 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8E65              ;                                                    ; _salimos sin modificar nada.
 197+ 8E65 CB 43        2 bit 0,e
 198+ 8E67 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8E69 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8E6A CD FE 8E         call Modificaccionne
 201+ 8E6D C1           	pop bc
 202+ 8E6E CD 0E 8F         call Inicializacion
 203+ 8E71 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8E72
 205+ 8E72              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8E72
 207+ 8E72 C5           4 push bc
 208+ 8E73 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8E76 0A           	ld a,(bc)
 210+ 8E77 3D           	dec a
 211+ 8E78 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8E79 7D           	ld a,l
 213+ 8E7A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8E7B CB 47        	bit 0,a
 215+ 8E7D 28 03        	jr z,5F
 216+ 8E7F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8E80 18 2E        	jr 7F
 218+ 8E82
 219+ 8E82              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8E82
 221+ 8E82 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8E83 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8E84 3A C9 85     	ld a,(Ctrl_0)
 224+ 8E87 CB 4F        	bit 1,a
 225+ 8E89 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8E8B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8E8C
 228+ 8E8C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8E8C
 230+ 8E8C 1C               inc e
 231+ 8E8D 1D               dec e
 232+ 8E8E 20 07            jr nz,12F
 233+ 8E90 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8E91 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8E92 22 9D 85     	ld (Posicion_actual),hl
 236+ 8E95 18 44        13 jr 9F
 237+ 8E97 CB 43        12 bit 0,e
 238+ 8E99 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8E9B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8E9B C1           	pop bc
 241+ 8E9C 18 D3        	jr 3B
 242+ 8E9E 80           14 add b
 243+ 8E9F 6F               ld l,a
 244+ 8EA0 22 9D 85     	ld (Posicion_actual),hl
 245+ 8EA3 CD FE 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8EA6 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8EA8 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8EAA 32 C9 85         ld (Ctrl_0),a
 249+ 8EAD F1           	pop af
 250+ 8EAE 18 2B        	jr 9F
 251+ 8EB0
 252+ 8EB0              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8EB0
 254+ 8EB0 F5           7 push af
 255+ 8EB1 3A C9 85     	ld a,(Ctrl_0)
 256+ 8EB4 CB 47        	bit 0,a
 257+ 8EB6 20 1D        	jr nz,8F
 258+ 8EB8 F1           	pop af
 259+ 8EB9
 260+ 8EB9              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8EB9
 262+ 8EB9 1C           	inc e
 263+ 8EBA 1D               dec e
 264+ 8EBB 20 07            jr nz,10F
 265+ 8EBD 90           	sub b
 266+ 8EBE 6F               ld l,a
 267+ 8EBF 22 9D 85     	ld (Posicion_actual),hl
 268+ 8EC2 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8EC4              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8EC4 CB 43        10 bit 0,e
 271+ 8EC6 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8EC8              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8EC8 C1           	pop bc
 274+ 8EC9 18 A6        	jr 3B
 275+ 8ECB 90           16 sub b
 276+ 8ECC 6F               ld l,a
 277+ 8ECD 22 9D 85     	ld (Posicion_actual),hl
 278+ 8ED0 CD FE 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8ED3 18 06            jr 9F
 280+ 8ED5 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8ED7 32 C9 85         ld (Ctrl_0),a
 282+ 8EDA F1           	pop af
 283+ 8EDB C1           9 pop bc
 284+ 8EDC 1E 00        	ld e,0
 285+ 8EDE CD 0E 8F         call Inicializacion
 286+ 8EE1 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8EE2 08           	ex af,af
 288+ 8EE3 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8EE4 18 8B            jr 3B
 290+ 8EE6
 291+ 8EE6              ; --------------------
 292+ 8EE6
 293+ 8EE6 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8EE8 CD 62 90     1 call PreviousScan
 295+ 8EEB 10 FB            djnz 1B
 296+ 8EED 22 9D 85     	ld (Posicion_actual),hl
 297+ 8EF0 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8EF1 C9           	ret
 299+ 8EF2
 300+ 8EF2              ; --------------------
 301+ 8EF2
 302+ 8EF2 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8EF4 CD 53 90     1 call NextScan
 304+ 8EF7 10 FB            djnz 1B
 305+ 8EF9 22 9D 85     	ld (Posicion_actual),hl
 306+ 8EFC AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8EFD C9           	ret
 308+ 8EFE
 309+ 8EFE              ; --------------------
 310+ 8EFE              ;
 311+ 8EFE              ;	22/01/23
 312+ 8EFE              ;
 313+ 8EFE              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8EFE              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8EFE              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8EFE
 317+ 8EFE
 318+ 8EFE              Modificaccionne
 319+ 8EFE
 320+ 8EFE 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8F01 FE 02        	cp 2
 322+ 8F03 CC E6 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F06 DC E6 8E         call c,Modifica_Pos_actual
 324+ 8F09 C8           	ret z
 325+ 8F0A CD F2 8E         call Modifica_Pos_actual2
 326+ 8F0D C9               ret
 327+ 8F0E
 328+ 8F0E              ; *************************************************************************************************************************************************************************************************
 329+ 8F0E              ;
 330+ 8F0E              ;	13/8/22
 331+ 8F0E              ;
 332+ 8F0E              ;	Inicializacion
 333+ 8F0E              ;
 334+ 8F0E              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F0E              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F0E              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F0E              ;
 338+ 8F0E              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F0E              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F0E              ;	_ desaparece/aparece.
 341+ 8F0E
 342+ 8F0E              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F0E              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F0E              ;
 345+ 8F0E              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F0E              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F0E              ; 		   [E] ="0"
 348+ 8F0E
 349+ 8F0E              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F0E
 351+ 8F0E CD 13 93     Inicializacion call calcula_tercio
 352+ 8F11 28 36        	jr z,primit
 353+ 8F13 E6 02        	and 2
 354+ 8F15 20 07        	jr nz,segmit
 355+ 8F17 7D           	ld a,l
 356+ 8F18 FE 7F        	cp $7f
 357+ 8F1A 38 2D        	jr c,primit
 358+ 8F1C 28 2B        	jr z,primit
 359+ 8F1E CD 7B 8F     segmit call column
 360+ 8F21 38 13        	jr c,tercuad
 361+ 8F23 3E 04        cuarcuad ld a,4
 362+ 8F25 32 AF 85     	ld (Cuad_objeto),a
 363+ 8F28 21 20 48     	ld hl,$4820
 364+ 8F2B 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8F2E 21 D5 85     	ld hl,Limite_vertical
 366+ 8F31 36 0D        	ld (hl),$0d
 367+ 8F33 08           	ex af,af
 368+ 8F34 18 3C        	jr 1F
 369+ 8F36              tercuad
 370+ 8F36 3E 03        	ld a,3
 371+ 8F38 32 AF 85     	ld (Cuad_objeto),a
 372+ 8F3B 21 20 48     	ld hl,$4820
 373+ 8F3E 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8F41 21 D5 85     	ld hl,Limite_vertical
 375+ 8F44 36 12        	ld (hl),$12
 376+ 8F46 08           	ex af,af
 377+ 8F47 18 29        	jr 1F
 378+ 8F49 CD 7B 8F     primit call column
 379+ 8F4C 38 13        	jr c, primcuad
 380+ 8F4E              segcuad
 381+ 8F4E 3E 02        	ld a,2
 382+ 8F50 32 AF 85     	ld (Cuad_objeto),a
 383+ 8F53 21 C0 4F     	ld hl,$4fc0
 384+ 8F56 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8F59 21 D5 85     	ld hl,Limite_vertical
 386+ 8F5C 36 0D        	ld (hl),$0d
 387+ 8F5E 08           	ex af,af
 388+ 8F5F 18 11        	jr 1F
 389+ 8F61              primcuad
 390+ 8F61 3E 01        	ld a,1
 391+ 8F63 32 AF 85     	ld (Cuad_objeto),a
 392+ 8F66 21 C0 4F     	ld hl,$4fc0
 393+ 8F69 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8F6C 21 D5 85     	ld hl,Limite_vertical
 395+ 8F6F 36 12        	ld (hl),$12
 396+ 8F71 08           	ex af,af
 397+ 8F72 CD 3F 96     1 call Genera_coordenadas
 398+ 8F75 21 C9 85     	ld hl,Ctrl_0
 399+ 8F78 CB EE        	set 5,(hl)
 400+ 8F7A C9           	ret
 401+ 8F7B
 402+ 8F7B              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8F7B
 404+ 8F7B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8F7B              ;
 406+ 8F7B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8F7B
 408+ 8F7B 7D           column ld a,l
 409+ 8F7C E6 1F        	and $1f
 410+ 8F7E FE 10         	cp $10
 411+ 8F80 C9            	ret
 412+ 8F81
 413+ 8F81              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8F81              ;
 415+ 8F81              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8F81              ;
 417+ 8F81              ; 14/12/22
 418+ 8F81              ;
 419+ 8F81              ;	Modifica: A y BC.
 420+ 8F81
 421+ 8F81 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8F84 E6 01        	and 1
 423+ 8F86 28 17        	jr z,1F
 424+ 8F88
 425+ 8F88              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8F88
 427+ 8F88 3A A1 85     	ld a,(Coordenada_X)
 428+ 8F8B 47           	ld b,a
 429+ 8F8C 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8F8D 79           	ld a,c
 431+ 8F8E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8F8F 38 08        	jr c,2F
 433+ 8F91 47           	ld b,a
 434+ 8F92 79           	ld a,c
 435+ 8F93 90           	sub b
 436+ 8F94 32 D2 85     	ld (Columnas),a
 437+ 8F97 18 1B        	jr 4F
 438+ 8F99 79           2 ld a,c
 439+ 8F9A 32 D2 85     	ld (Columnas),a
 440+ 8F9D 18 15        	jr 4F
 441+ 8F9F
 442+ 8F9F              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8F9F
 444+ 8F9F 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8FA2 81           	add c
 446+ 8FA3 3D           	dec a
 447+ 8FA4 D6 1F        	sub $1f
 448+ 8FA6 38 08        	jr c,3F
 449+ 8FA8 47           	ld b,a
 450+ 8FA9 79           	ld a,c
 451+ 8FAA 90           	sub b
 452+ 8FAB 32 D2 85     	ld (Columnas),a
 453+ 8FAE 18 04        	jr 4F
 454+ 8FB0 79           3 ld a,c
 455+ 8FB1 32 D2 85     	ld (Columnas),a
 456+ 8FB4 D9           4 exx
 457+ 8FB5 4F           	ld c,a
 458+ 8FB6 D9           	exx
 459+ 8FB7 C9            ret
 460+ 8FB8
 461+ 8FB8              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8FB8              ;
 463+ 8FB8              ; 7/1/23
 464+ 8FB8              ;
 465+ 8FB8              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8FB8              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8FB8              ;
 468+ 8FB8              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8FB8              ;	DESTRUYE: HL,B Y A.
 470+ 8FB8
 471+ 8FB8 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8FBB FE 02        	cp 2
 473+ 8FBD 38 18        	jr c,1F
 474+ 8FBF 28 16        	jr z,1F
 475+ 8FC1 E6 01        	and 1
 476+ 8FC3 28 0D        	jr z,3F
 477+ 8FC5
 478+ 8FC5              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8FC5
 480+ 8FC5 CD 01 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8FC8
 482+ 8FC8 7D           9 ld a,l
 483+ 8FC9 E6 1F        	and $1f
 484+ 8FCB 28 2A        	jr z,7F
 485+ 8FCD 2B           	dec hl
 486+ 8FCE 10 F8        	djnz 9B
 487+ 8FD0 18 25        	jr 7F
 488+ 8FD2
 489+ 8FD2              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8FD2
 491+ 8FD2 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8FD5 18 20        	jr 7F
 493+ 8FD7
 494+ 8FD7 28 14        1 jr z,2F
 495+ 8FD9
 496+ 8FD9              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8FD9
 498+ 8FD9 CD 01 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8FDC 7D           4 ld a,l
 500+ 8FDD E6 1F        	and $1f
 501+ 8FDF 28 03        	jr z,6F
 502+ 8FE1 2B           	dec hl
 503+ 8FE2 10 F8        	djnz 4B
 504+ 8FE4 06 0F        6 ld b,15
 505+ 8FE6 CD 62 90     5 call PreviousScan
 506+ 8FE9 10 FB        	djnz 5B
 507+ 8FEB 18 0A        	jr 7F
 508+ 8FED
 509+ 8FED              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8FED
 511+ 8FED CD 01 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8FF0 06 0F        	ld b,15
 513+ 8FF2 CD 62 90     8 call PreviousScan
 514+ 8FF5 10 FB        	djnz 8B
 515+ 8FF7
 516+ 8FF7 E5           7 push hl
 517+ 8FF8 DD E1        	pop ix
 518+ 8FFA
 519+ 8FFA 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8FFD E5           	push hl
 521+ 8FFE FD E1        	pop iy
 522+ 9000
 523+ 9000 C9           	ret
 524+ 9001
 525+ 9001              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9001              ;
 527+ 9001              ;	2/1/23
 528+ 9001              ;
 529+ 9001              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9001              ;
 531+ 9001              ;	Tras esta rutina tenemos:
 532+ 9001              ;
 533+ 9001              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9001              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9001              ;
 536+ 9001              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9001
 538+ 9001 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 9004 3A D2 85     	ld a,(Columnas)
 540+ 9007 3D           	dec a
 541+ 9008 20 01        	jr nz,1F
 542+ 900A 3C           	inc a
 543+ 900B 47           1 ld b,a
 544+ 900C C9           	ret
 545+ 900D
 546+ 900D              ; --------------------------------------------------------------------------------------------------------------------
 547+ 900D              ;
 548+ 900D              ;	3/1/23
 549+ 900D              ;
 550+ 900D              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 900D              ;
 552+ 900D              ;	Destruye: A,B,HL y DE.
 553+ 900D
 554+ 900D              Define_rutina_de_impresion
 555+ 900D
 556+ 900D 3A 9C 85     	ld a,(Columns)
 557+ 9010 47           	ld b,a
 558+ 9011 3A D2 85     	ld a,(Columnas)
 559+ 9014 B8           	cp b
 560+ 9015 20 0D        	jr nz,2f
 561+ 9017
 562+ 9017              ;	La entidad se imprime entera.
 563+ 9017
 564+ 9017 21 E3 90     	ld hl, Indice_entidades_completas
 565+ 901A E6 01        	and 1
 566+ 901C 28 02        	jr z,1F
 567+ 901E
 568+ 901E 23           	inc hl
 569+ 901F 23           	inc hl
 570+ 9020
 571+ 9020 CD FA 87     1 call Extrae_address
 572+ 9023 C9           	ret		;	ret
 573+ 9024
 574+ 9024              ;	La entidad no se imprime entera en pantalla.
 575+ 9024
 576+ 9024 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 9027 E6 01        	and 1
 578+ 9029 28 17        	jr z,3F
 579+ 902B
 580+ 902B              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 902B
 582+ 902B 21 E7 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 902E 3A 9C 85     4 ld a,(Columns)
 584+ 9031 E6 01        	and 1
 585+ 9033 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9035
 587+ 9035 23           	inc hl
 588+ 9036 23           	inc hl
 589+ 9037
 590+ 9037 3A D2 85     	ld a,(Columnas)
 591+ 903A E6 01        	and 1
 592+ 903C 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 903E
 594+ 903E 23           	inc hl
 595+ 903F 23           	inc hl
 596+ 9040
 597+ 9040 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 9042
 599+ 9042 21 ED 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9045 18 E7        	jr 4B
 601+ 9047
 602+ 9047              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9047              ;
 604+ 9047              ;	Prepara_draw
 605+ 9047              ;
 606+ 9047              ;	Es una rutina de carga.
 607+ 9047              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9047              ;
 609+ 9047              ;	FUNCIONAMIENTO:
 610+ 9047              ;
 611+ 9047              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9047              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9047              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9047              ;
 615+ 9047              ;	DESTRUYE:
 616+ 9047              ;
 617+ 9047              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9047
 619+ 9047 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 904A 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 904B 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 904C 4E           	ld c,(hl)
 623+ 904D 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 9050 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 9052 C9           	ret
 626+ 9053
 627+ 9053              ;----------------------------------------------------------------------------------------------------------------
 628+ 9053              ;
 629+ 9053              ;	5/08/22
 630+ 9053              ;
 631+ 9053              ;   NextScan.
 632+ 9053              ;
 633+ 9053              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9053              ;
 635+ 9053              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9053              ;
 637+ 9053              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9053              ;
 639+ 9053              ;       DESTRUIDOS: AF y HL !!!
 640+ 9053              ;
 641+ 9053              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9053              ;
 643+ 9053
 644+ 9053 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9054 7C               ld a,h
 646+ 9055 E6 07            and 7
 647+ 9057 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9058
 649+ 9058 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9059 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 905B 6F               ld l,a
 652+ 905C D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 905D
 654+ 905D 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 905E D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9060 67               ld h,a
 657+ 9061 C9               ret
 658+ 9062
 659+ 9062              ;----------------------------------------------------------------------------------------------------------------
 660+ 9062              ;
 661+ 9062              ;	5/08/22
 662+ 9062              ;
 663+ 9062              ;   PreviousScan.
 664+ 9062              ;
 665+ 9062              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9062              ;
 667+ 9062              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9062              ;
 669+ 9062              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9062              ;
 671+ 9062              ;       DESTRUIDOS: AF y HL !!!
 672+ 9062              ;
 673+ 9062              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9062              ;
 675+ 9062
 676+ 9062 7C           PreviousScan ld a,h
 677+ 9063 25               dec h               ; Dec H.
 678+ 9064 E6 07            and 7
 679+ 9066 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9067
 681+ 9067 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9068 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 906A 6F               ld l,a
 684+ 906B D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 906C
 686+ 906C 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 906D C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 906F 67               ld h,a
 689+ 9070 C9               ret
 690+ 9071
 691+ 9071              ; -----------------------------------------------------------------------------------
 692+ 9071              ;
 693+ 9071              ;	28/2/23
 694+ 9071              ;
 695+ 9071              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9071              ;	Extrae fotos de Album_de_fotos.
 697+ 9071
 698+ 9071              Extrae_foto_entidades
 699+ 9071
 700+ 9071 3A DE 85     	ld a,(Numero_de_malotes)
 701+ 9074 A7           	and a
 702+ 9075 C8           	ret z
 703+ 9076 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 907A 31 00 70     	ld sp,Album_de_fotos
 705+ 907D
 706+ 907D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 907F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 9080 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 9081
 710+ 9081 ED 73 E1 85  	ld (Stack_2),sp
 711+ 9085 ED 7B DF 85  	ld sp,(Stack)
 712+ 9089
 713+ 9089              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 9089
 715+ 9089 3E CD        	ld a,$cd
 716+ 908B 32 93 90     	ld (Imprime),a
 717+ 908E EB           	ex de,hl
 718+ 908F 22 94 90     	ld (Imprime+1),hl
 719+ 9092 EB           	ex de,hl
 720+ 9093
 721+ 9093              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 9093
 723+ 9093 00 00 00     Imprime db 0,0,0
 724+ 9096
 725+ 9096 3A DE 85     	ld a,(Numero_de_malotes)
 726+ 9099 3D           	dec a
 727+ 909A 28 09        	jr z,1F
 728+ 909C 32 DE 85      	ld (Numero_de_malotes),a
 729+ 909F
 730+ 909F ED 7B E1 85   	ld sp,(Stack_2)
 731+ 90A3 18 D8        	jr 2B
 732+ 90A5
 733+ 90A5 AF           1 xor a
 734+ 90A6 32 E1 85     	ld (Stack_2),a
 735+ 90A9 C9           	ret
 736+ 90AA
 737+ 90AA              ; -----------------------------------------------------------------------------------
 738+ 90AA              ;
 739+ 90AA              ;	28/2/23
 740+ 90AA              ;
 741+ 90AA              ;	Pinta los disparos generados.
 742+ 90AA
 743+ 90AA              Extrae_foto_disparos
 744+ 90AA
 745+ 90AA 3A E7 85     	ld a,(Numero_de_disparotes)
 746+ 90AD A7           	and a
 747+ 90AE C8           	ret z
 748+ 90AF ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 90B3 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 90B6
 751+ 90B6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 90B8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 90B9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 90BA
 755+ 90BA ED 73 E1 85  	ld (Stack_2),sp
 756+ 90BE ED 7B DF 85  	ld sp,(Stack)
 757+ 90C2
 758+ 90C2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 90C2
 760+ 90C2 3E CD        	ld a,$cd
 761+ 90C4 32 CC 90     	ld (Imprime2),a
 762+ 90C7 EB           	ex de,hl
 763+ 90C8 22 CD 90     	ld (Imprime2+1),hl
 764+ 90CB EB           	ex de,hl
 765+ 90CC
 766+ 90CC              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 90CC
 768+ 90CC 00 00 00     Imprime2 db 0,0,0
 769+ 90CF
 770+ 90CF 3A E7 85     	ld a,(Numero_de_disparotes)
 771+ 90D2 3D           	dec a
 772+ 90D3 28 09        	jr z,1F
 773+ 90D5 32 E7 85      	ld (Numero_de_disparotes),a
 774+ 90D8
 775+ 90D8 ED 7B E1 85  	ld sp,(Stack_2)
 776+ 90DC 18 D8        	jr 2B
 777+ 90DE
 778+ 90DE AF           1 xor a
 779+ 90DF 32 E1 85     	ld (Stack_2),a
 780+ 90E2 C9           	ret
 781+ 90E3
# file closed: Draw_XOR.asm
1020  90E3              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 90E3              ;   índices de Rutinas de impresión.
   2+ 90E3
   3+ 90E3 F3 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 90E5 20 91            defw Pinta_Amadeus_3x2
   5+ 90E7
   6+ 90E7 76 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 90E9 16 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 90EB CA 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 90ED
  10+ 90ED A0 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 90EF A4 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 90F1 58 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 90F3
  14+ 90F3
  15+ 90F3              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 90F3              ;
  17+ 90F3              ;   12/12/22
  18+ 90F3              ;
  19+ 90F3              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 90F3              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 90F3              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 90F3              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 90F3              ;
  24+ 90F3              ;   Modifica: DE y HL.
  25+ 90F3
  26+ 90F3 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 90F7 FD F9        	ld sp,iy
  28+ 90F9 06 10            ld b,16
  29+ 90FB D1           1 pop de
  30+ 90FC 7B               ld a,e
  31+ 90FD AE               xor (hl)
  32+ 90FE 77           	ld (hl),a
  33+ 90FF 23           	inc hl
  34+ 9100 7A               ld a,d
  35+ 9101 AE               xor (hl)
  36+ 9102 77           	ld (hl),a
  37+ 9103 2B           	dec hl
  38+ 9104 24           	inc h
  39+ 9105 7C               ld a,h
  40+ 9106 E6 07            and 7
  41+ 9108 20 0A            jr nz,2F
  42+ 910A 7D               ld a,l
  43+ 910B C6 20            add a,$20
  44+ 910D 6F               ld l,a
  45+ 910E 38 04            jr c,2F
  46+ 9110 7C               ld a,h
  47+ 9111 D6 08            sub 8
  48+ 9113 67               ld h,a
  49+ 9114 7C           2 ld a,h
  50+ 9115 FE 58            cp $58
  51+ 9117 28 02            jr z,3F
  52+ 9119 10 E0            djnz 1B
  53+ 911B ED 7B DF 85  3 ld sp,(Stack)
  54+ 911F C9           	ret
  55+ 9120
  56+ 9120 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9124 FD F9        	ld sp,iy
  58+ 9126 06 08            ld b,8
  59+ 9128 D1           1 pop de
  60+ 9129 7B               ld a,e
  61+ 912A AE               xor (hl)
  62+ 912B 77           	ld (hl),a
  63+ 912C 23           	inc hl
  64+ 912D 7A               ld a,d
  65+ 912E AE               xor (hl)
  66+ 912F 77           	ld (hl),a
  67+ 9130 23           	inc hl
  68+ 9131 D1           	pop de
  69+ 9132 7B               ld a,e
  70+ 9133 AE               xor (hl)
  71+ 9134 77           	ld (hl),a
  72+ 9135 2B           	dec hl
  73+ 9136 2B           	dec hl
  74+ 9137 24           	inc h
  75+ 9138 7C               ld a,h
  76+ 9139 E6 07            and 7
  77+ 913B 20 0A            jr nz,2F
  78+ 913D 7D               ld a,l
  79+ 913E C6 20            add a,$20
  80+ 9140 6F               ld l,a
  81+ 9141 38 04            jr c,2F
  82+ 9143 7C               ld a,h
  83+ 9144 D6 08            sub 8
  84+ 9146 67               ld h,a
  85+ 9147 7C           2 ld a,h
  86+ 9148 FE 58            cp $58
  87+ 914A 28 25            jr z,4F
  88+ 914C 7A               ld a,d
  89+ 914D AE               xor (hl)
  90+ 914E 77               ld (hl),a
  91+ 914F D1           	pop de
  92+ 9150 23           	inc hl
  93+ 9151 7B               ld a,e
  94+ 9152 AE               xor (hl)
  95+ 9153 77           	ld (hl),a
  96+ 9154 23           	inc hl
  97+ 9155 7A               ld a,d
  98+ 9156 AE               xor (hl)
  99+ 9157 77           	ld (hl),a
 100+ 9158 2B           	dec hl
 101+ 9159 2B           	dec hl
 102+ 915A 24           	inc h
 103+ 915B 7C               ld a,h
 104+ 915C E6 07            and 7
 105+ 915E 20 0A            jr nz,3F
 106+ 9160 7D               ld a,l
 107+ 9161 C6 20            add a,$20
 108+ 9163 6F               ld l,a
 109+ 9164 38 04            jr c,3F
 110+ 9166 7C               ld a,h
 111+ 9167 D6 08            sub 8
 112+ 9169 67               ld h,a
 113+ 916A 7C           3 ld a,h
 114+ 916B FE 58            cp $58
 115+ 916D 28 02            jr z,4F
 116+ 916F 10 B7            djnz 1B
 117+ 9171 ED 7B DF 85  4 ld sp,(Stack)
 118+ 9175 C9           	ret
 119+ 9176
 120+ 9176              ; ---------------------------------------------------
 121+ 9176
 122+ 9176 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 917A FD F9        	ld sp,iy
 124+ 917C
 125+ 917C              ; >>>
 126+ 917C
 127+ 917C 06 10            ld b,16
 128+ 917E D1           1 pop de
 129+ 917F 7A           	ld a,d
 130+ 9180 AE           	xor (hl)
 131+ 9181 77           	ld (hl),a
 132+ 9182 24           	inc h
 133+ 9183 7C               ld a,h
 134+ 9184 E6 07            and 7
 135+ 9186 20 0C            jr nz,2F
 136+ 9188 7D               ld a,l
 137+ 9189 C6 20            add a,$20
 138+ 918B 6F               ld l,a
 139+ 918C 38 06            jr c,2F
 140+ 918E 7C               ld a,h
 141+ 918F D6 08            sub 8
 142+ 9191 67               ld h,a
 143+ 9192 18 00            jr 2F
 144+ 9194 7C           2 ld a,h
 145+ 9195 FE 58            cp $58
 146+ 9197 28 02            jr z,3F
 147+ 9199 10 E3            djnz 1B
 148+ 919B ED 7B DF 85  3 ld sp,(Stack)
 149+ 919F C9           	ret
 150+ 91A0
 151+ 91A0 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 91A4 FD F9        	ld sp,iy
 153+ 91A6
 154+ 91A6              ; >>>
 155+ 91A6
 156+ 91A6 06 10            ld b,16
 157+ 91A8 D1           1 pop de
 158+ 91A9 7B           	ld a,e
 159+ 91AA AE           	xor (hl)
 160+ 91AB 77           	ld (hl),a
 161+ 91AC 24           	inc h
 162+ 91AD 7C               ld a,h
 163+ 91AE E6 07            and 7
 164+ 91B0 20 0C            jr nz,2F
 165+ 91B2 7D               ld a,l
 166+ 91B3 C6 20            add a,$20
 167+ 91B5 6F               ld l,a
 168+ 91B6 38 06            jr c,2F
 169+ 91B8 7C               ld a,h
 170+ 91B9 D6 08            sub 8
 171+ 91BB 67               ld h,a
 172+ 91BC 18 00            jr 2F
 173+ 91BE 7C           2 ld a,h
 174+ 91BF FE 58            cp $58
 175+ 91C1 28 02            jr z,3F
 176+ 91C3 10 E3            djnz 1B
 177+ 91C5 ED 7B DF 85  3 ld sp,(Stack)
 178+ 91C9 C9           	ret
 179+ 91CA
 180+ 91CA              ; ---------------------------------------------------
 181+ 91CA
 182+ 91CA ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 91CE FD F9        	ld sp,iy
 184+ 91D0 06 08            ld b,8
 185+ 91D2 D1           1 pop de
 186+ 91D3 7A           	ld a,d
 187+ 91D4 AE           	xor (hl)
 188+ 91D5 77           	ld (hl),a
 189+ 91D6 23           	inc hl
 190+ 91D7 D1           	pop de
 191+ 91D8 7B           	ld a,e
 192+ 91D9 AE           	xor (hl)
 193+ 91DA 77           	ld (hl),a
 194+ 91DB 2B           	dec hl
 195+ 91DC 24            	inc h
 196+ 91DD 7C               ld a,h
 197+ 91DE E6 07            and 7
 198+ 91E0 20 0A            jr nz,2F
 199+ 91E2 7D               ld a,l
 200+ 91E3 C6 20            add a,$20
 201+ 91E5 6F               ld l,a
 202+ 91E6 38 04            jr c,2F
 203+ 91E8 7C               ld a,h
 204+ 91E9 D6 08            sub 8
 205+ 91EB 67               ld h,a
 206+ 91EC 7C           2 ld a,h
 207+ 91ED FE 58            cp $58
 208+ 91EF 28 20            jr z,4F
 209+ 91F1 D1               pop de
 210+ 91F2 7B           	ld a,e
 211+ 91F3 AE           	xor (hl)
 212+ 91F4 77           	ld (hl),a
 213+ 91F5 23           	inc hl
 214+ 91F6 7A           	ld a,d
 215+ 91F7 AE           	xor (hl)
 216+ 91F8 77           	ld (hl),a
 217+ 91F9 2B           	dec hl
 218+ 91FA 24           	inc h
 219+ 91FB 7C               ld a,h
 220+ 91FC E6 07            and 7
 221+ 91FE 20 0A            jr nz,3F
 222+ 9200 7D               ld a,l
 223+ 9201 C6 20            add a,$20
 224+ 9203 6F               ld l,a
 225+ 9204 38 04            jr c,3F
 226+ 9206 7C               ld a,h
 227+ 9207 D6 08            sub 8
 228+ 9209 67               ld h,a
 229+ 920A 7C           3 ld a,h
 230+ 920B FE 58            cp $58
 231+ 920D 28 02            jr z,4F
 232+ 920F 10 C1            djnz 1B
 233+ 9211 ED 7B DF 85  4 ld sp,(Stack)
 234+ 9215 C9           	ret
 235+ 9216
 236+ 9216 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 921A FD F9        	ld sp,iy
 238+ 921C 06 08            ld b,8
 239+ 921E D1           1 pop de
 240+ 921F D1           	pop de
 241+ 9220 7B           	ld a,e
 242+ 9221 AE           	xor (hl)
 243+ 9222 77           	ld (hl),a
 244+ 9223 24            	inc h
 245+ 9224 7C               ld a,h
 246+ 9225 E6 07            and 7
 247+ 9227 20 0A            jr nz,2F
 248+ 9229 7D               ld a,l
 249+ 922A C6 20            add a,$20
 250+ 922C 6F               ld l,a
 251+ 922D 38 04            jr c,2F
 252+ 922F 7C               ld a,h
 253+ 9230 D6 08            sub 8
 254+ 9232 67               ld h,a
 255+ 9233 7C           2 ld a,h
 256+ 9234 FE 58            cp $58
 257+ 9236 28 1B            jr z,4F
 258+ 9238 D1               pop de
 259+ 9239 7A           	ld a,d
 260+ 923A AE           	xor (hl)
 261+ 923B 77           	ld (hl),a
 262+ 923C 24           	inc h
 263+ 923D 7C               ld a,h
 264+ 923E E6 07            and 7
 265+ 9240 20 0A            jr nz,3F
 266+ 9242 7D               ld a,l
 267+ 9243 C6 20            add a,$20
 268+ 9245 6F               ld l,a
 269+ 9246 38 04            jr c,3F
 270+ 9248 7C               ld a,h
 271+ 9249 D6 08            sub 8
 272+ 924B 67               ld h,a
 273+ 924C 7C           3 ld a,h
 274+ 924D FE 58            cp $58
 275+ 924F 28 02            jr z,4F
 276+ 9251 10 CB            djnz 1B
 277+ 9253 ED 7B DF 85  4 ld sp,(Stack)
 278+ 9257 C9           	ret
 279+ 9258
 280+ 9258 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 925C FD F9        	ld sp,iy
 282+ 925E 06 08            ld b,8
 283+ 9260 D1           1 pop de
 284+ 9261 7B           	ld a,e
 285+ 9262 AE           	xor (hl)
 286+ 9263 77           	ld (hl),a
 287+ 9264 23           	inc hl
 288+ 9265 7A           	ld a,d
 289+ 9266 AE           	xor (hl)
 290+ 9267 77           	ld (hl),a
 291+ 9268 2B           	dec hl
 292+ 9269 24             	inc h
 293+ 926A 7C               ld a,h
 294+ 926B E6 07            and 7
 295+ 926D 20 0A            jr nz,2F
 296+ 926F 7D               ld a,l
 297+ 9270 C6 20            add a,$20
 298+ 9272 6F               ld l,a
 299+ 9273 38 04            jr c,2F
 300+ 9275 7C               ld a,h
 301+ 9276 D6 08            sub 8
 302+ 9278 67               ld h,a
 303+ 9279 7C           2 ld a,h
 304+ 927A FE 58            cp $58
 305+ 927C 28 21            jr z,4F
 306+ 927E D1               pop de
 307+ 927F 7A           	ld a,d
 308+ 9280 AE           	xor (hl)
 309+ 9281 77           	ld (hl),a
 310+ 9282 23           	inc hl
 311+ 9283 D1               pop de
 312+ 9284 7B           	ld a,e
 313+ 9285 AE           	xor (hl)
 314+ 9286 77           	ld (hl),a
 315+ 9287 2B           	dec hl
 316+ 9288 24           	inc h
 317+ 9289 7C               ld a,h
 318+ 928A E6 07            and 7
 319+ 928C 20 0A            jr nz,3F
 320+ 928E 7D               ld a,l
 321+ 928F C6 20            add a,$20
 322+ 9291 6F               ld l,a
 323+ 9292 38 04            jr c,3F
 324+ 9294 7C               ld a,h
 325+ 9295 D6 08            sub 8
 326+ 9297 67               ld h,a
 327+ 9298 7C           3 ld a,h
 328+ 9299 FE 58            cp $58
 329+ 929B 28 02            jr z,4F
 330+ 929D 10 C1            djnz 1B
 331+ 929F ED 7B DF 85  4 ld sp,(Stack)
 332+ 92A3 C9           	ret
 333+ 92A4
 334+ 92A4 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 92A8 FD F9        	ld sp,iy
 336+ 92AA 06 08            ld b,8
 337+ 92AC D1           1 pop de
 338+ 92AD 7B           	ld a,e
 339+ 92AE AE           	xor (hl)
 340+ 92AF 77           	ld (hl),a
 341+ 92B0 24            	inc h
 342+ 92B1 7C               ld a,h
 343+ 92B2 E6 07            and 7
 344+ 92B4 20 0A            jr nz,2F
 345+ 92B6 7D               ld a,l
 346+ 92B7 C6 20            add a,$20
 347+ 92B9 6F               ld l,a
 348+ 92BA 38 04            jr c,2F
 349+ 92BC 7C               ld a,h
 350+ 92BD D6 08            sub 8
 351+ 92BF 67               ld h,a
 352+ 92C0 7C           2 ld a,h
 353+ 92C1 FE 58            cp $58
 354+ 92C3 28 1C            jr z,4F
 355+ 92C5 D1               pop de
 356+ 92C6 7A           	ld a,d
 357+ 92C7 AE           	xor (hl)
 358+ 92C8 77           	ld (hl),a
 359+ 92C9 24           	inc h
 360+ 92CA 7C               ld a,h
 361+ 92CB E6 07            and 7
 362+ 92CD 20 0A            jr nz,3F
 363+ 92CF 7D               ld a,l
 364+ 92D0 C6 20            add a,$20
 365+ 92D2 6F               ld l,a
 366+ 92D3 38 04            jr c,3F
 367+ 92D5 7C               ld a,h
 368+ 92D6 D6 08            sub 8
 369+ 92D8 67               ld h,a
 370+ 92D9 7C           3 ld a,h
 371+ 92DA FE 58            cp $58
 372+ 92DC 28 03            jr z,4F
 373+ 92DE D1               pop de
 374+ 92DF 10 CB            djnz 1B
 375+ 92E1 ED 7B DF 85  4 ld sp,(Stack)
 376+ 92E5 C9           	ret
 377+ 92E6
 378+ 92E6              ; ---------------------------------------------------
 379+ 92E6              ;
 380+ 92E6              ;   27/02/23
 381+ 92E6              ;
 382+ 92E6              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 92E6              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 92E6              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 92E6
 386+ 92E6 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 92EA FD F9            ld sp,iy
 388+ 92EC 06 02            ld b,2
 389+ 92EE D1           1 pop de
 390+ 92EF 7B               ld a,e
 391+ 92F0 AE               xor (hl)
 392+ 92F1 77               ld (hl),a
 393+ 92F2 23               inc hl
 394+ 92F3 7A               ld a,d
 395+ 92F4 AE               xor (hl)
 396+ 92F5 77               ld (hl),a
 397+ 92F6 2B               dec hl
 398+ 92F7
 399+ 92F7 24               inc h
 400+ 92F8 7C               ld a,h
 401+ 92F9 E6 07            and 7
 402+ 92FB 20 0A            jr nz,2F
 403+ 92FD 7D               ld a,l
 404+ 92FE C6 20            add a,$20
 405+ 9300 6F               ld l,a
 406+ 9301 38 04            jr c,2F
 407+ 9303 7C               ld a,h
 408+ 9304 D6 08            sub 8
 409+ 9306 67               ld h,a
 410+ 9307 7C           2 ld a,h
 411+ 9308 FE 58            cp $58
 412+ 930A 28 02            jr z,3F
 413+ 930C
 414+ 930C 10 E0            djnz 1B
 415+ 930E ED 7B DF 85  3 ld sp,(Stack)
 416+ 9312 C9               ret
 417+ 9313
# file closed: Rutinas_de_impresion_sprites.asm
1021  9313              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9313              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9313              ;
   3+ 9313              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9313              ;
   5+ 9313              ; *****************************************************************************************************************************************************************************************
   6+ 9313              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9313
   8+ 9313 7C           calcula_tercio ld a,h
   9+ 9314 E6 18        	and $18
  10+ 9316 CB 2F        	sra a
  11+ 9318 CB 2F        	sra a
  12+ 931A CB 2F        	sra a
  13+ 931C C9           	ret
  14+ 931D
# file closed: calcula_tercio.asm
1022  931D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 931D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 931D              ;
   3+ 931D              ;
   4+ 931D              ;	CLS.
   5+ 931D              ;
   6+ 931D              ;	Limpia la pantalla y define sus atributos.
   7+ 931D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 931D              ;
   9+ 931D              ;	COLORES: 0 ..... NEGRO
  10+ 931D              ;    		 1 ..... AZUL
  11+ 931D              ; 			 2 ..... ROJO
  12+ 931D              ;			 3 ..... MAGENTA
  13+ 931D              ; 			 4 ..... VERDE
  14+ 931D              ; 			 5 ..... CIAN
  15+ 931D              ;			 6 ..... AMARILLO
  16+ 931D              ; 			 7 ..... BLANCO
  17+ 931D              ;
  18+ 931D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 931D              ;
  20+ 931D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 931D
  22+ 931D
  23+ 931D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9320 11 01 40     	LD DE,$4001
  25+ 9323 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9326 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9328 ED B0        	LDIR
  28+ 932A 01 FF 02     	LD BC,767
  29+ 932D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 932E ED B0        	LDIR
  31+ 9330 C9           	ret
  32+ 9331
# file closed: Cls.asm
1023  9331              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9331              ; ******************************************************************************************************************************************************************************************
   2+ 9331              ;
   3+ 9331              ;   22/01/23
   4+ 9331              ;
   5+ 9331              ;	Mov_down
   6+ 9331              ;
   7+ 9331              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9331              ;
   9+ 9331              ;
  10+ 9331 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9334 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9336              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9336              ; 																	; _ en el caso de que no lo haya.
  14+ 9336 3A B3 85     	ld a,(Vel_down)
  15+ 9339 47           	ld b,a
  16+ 933A 2A 9D 85         ld hl,(Posicion_actual)
  17+ 933D CD 13 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 9340 E6 02        	and 2
  19+ 9342 28 0F        	jr z,1F
  20+ 9344
  21+ 9344              ; Nos encontramos en el último tercio de pantalla.
  22+ 9344              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9344
  24+ 9344 7C           	ld a,h
  25+ 9345 FE 57        	cp $57
  26+ 9347 20 0A        	jr nz,1F
  27+ 9349 7D           	ld a,l
  28+ 934A C6 20        	add $20
  29+ 934C 30 05        	jr nc,1F
  30+ 934E
  31+ 934E              ; ------------------------------
  32+ 934E CD 29 96     	call Reaparece_arriba
  33+ 9351              ;	call Reinicio
  34+ 9351              ; ------------------------------
  35+ 9351
  36+ 9351 18 08        	jr 3F
  37+ 9353 CD 53 90     1 call NextScan
  38+ 9356 22 9D 85     	ld (Posicion_actual),hl
  39+ 9359 10 E2            djnz 2B
  40+ 935B CD 3F 96     3 call Genera_coordenadas
  41+ 935E C9           	ret
  42+ 935F
  43+ 935F              ; ******************************************************************************************************************************************************************************************
  44+ 935F              ;
  45+ 935F              ;   22/01/23
  46+ 935F              ;
  47+ 935F              ;	Mov_up
  48+ 935F              ;
  49+ 935F              ; 	Mueve el Sprite hacia arriba.
  50+ 935F              ;
  51+ 935F              ;
  52+ 935F 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9362 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9364              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9364              ; 																		; _ en el caso de que no lo haya.
  56+ 9364 3A B2 85     	ld a,(Vel_up)
  57+ 9367 47           	ld b,a
  58+ 9368 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 936B CD 13 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 936E A7           	and a
  61+ 936F 20 10        	jr nz,1F
  62+ 9371
  63+ 9371              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9371              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9371
  66+ 9371 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9372 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9374 20 0B            jr nz,1F
  69+ 9376 7D               ld a,l
  70+ 9377 D6 20            sub $20
  71+ 9379 30 06            jr nc,1F
  72+ 937B 25               dec h
  73+ 937C
  74+ 937C              ; -----------------------------
  75+ 937C CD 19 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 937F              ;	call Reinicio
  77+ 937F              ; -----------------------------
  78+ 937F
  79+ 937F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9381 CD 62 90     1 call PreviousScan
  81+ 9384 22 9D 85     	ld (Posicion_actual),hl
  82+ 9387 10 E2            djnz 3B
  83+ 9389 CD 3F 96     2 call Genera_coordenadas
  84+ 938C C9           	ret
  85+ 938D
  86+ 938D              ; ******************************************************************************************************************************************************************************************
  87+ 938D              ;
  88+ 938D              ;	19/10/22
  89+ 938D              ;
  90+ 938D              ;	Mov_right.
  91+ 938D              ;
  92+ 938D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 938D              ;
  94+ 938D
  95+ 938D 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 9390 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9392              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9392              ; 																	; _ en el caso de que no lo haya.
  99+ 9392 3A C9 85     	ld a,(Ctrl_0)
 100+ 9395 CB 77        	bit 6,a
 101+ 9397 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9399
 103+ 9399 CD C7 95     	call Stop_Amadeus_right
 104+ 939C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 939D 18 4D        	jr 8F
 106+ 939F
 107+ 939F 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 93A2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 93A4 20 46        	jr nz,8F
 110+ 93A6
 111+ 93A6 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 93A9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 93AA 28 40        	jr z,8F
 114+ 93AC
 115+ 93AC              ; ---------- ---------- ----------
 116+ 93AC              ;
 117+ 93AC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 93AC
 119+ 93AC 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 93AF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 93B1 28 11        	jr z,1F
 122+ 93B3 38 06        	jr c,6F
 123+ 93B5 FE 04        	cp 4
 124+ 93B7 28 14        	jr z,7F
 125+ 93B9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 93BB
 127+ 93BB              ; ---------- ---------- ----------
 128+ 93BB              ;
 129+ 93BB              ; Perfiles de velocidad
 130+ 93BB              ;
 131+ 93BB
 132+ 93BB 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 93BE FE FE        	cp $fe
 134+ 93C0 20 2A        	jr nz,8F
 135+ 93C2 18 10        	jr 3F
 136+ 93C4 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 93C7 FE FD        	cp $fd
 138+ 93C9 20 21        	jr nz,8F
 139+ 93CB 18 07        	jr 3F
 140+ 93CD 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 93D0 FE FB        	cp $fb
 142+ 93D2 20 18        	jr nz,8F
 143+ 93D4
 144+ 93D4              ; ---------- ---------- ----------
 145+ 93D4
 146+ 93D4              3
 147+ 93D4 CD 07 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 93D7              ;	call Reinicio
 149+ 93D7
 150+ 93D7              ; ---------- ---------- ----------
 151+ 93D7              ;
 152+ 93D7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 93D7
 154+ 93D7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 93D9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 93DA CD F3 93     	call DESPLZ_DER
 157+ 93DD C1           	pop bc
 158+ 93DE 10 F9        	djnz 5B
 159+ 93E0 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 93E3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 93E4 22 9D 85     	ld (Posicion_actual),hl
 162+ 93E7 CD 3F 96     	call Genera_coordenadas
 163+ 93EA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 93EC
 165+ 93EC              ; ---------- ---------- ----------
 166+ 93EC
 167+ 93EC 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 93EF CD F3 93     	call DESPLZ_DER
 169+ 93F2 C9           2 ret
 170+ 93F3
 171+ 93F3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 93F3              ;
 173+ 93F3              ;	22/9/22
 174+ 93F3              ;
 175+ 93F3
 176+ 93F3 CD 02 94     DESPLZ_DER call Desplaza_derecha
 177+ 93F6 CD 4E 94         call modifica_parametros_1er_DESPLZ_2
 178+ 93F9 CD 77 94         call Ciclo_completo
 179+ 93FC 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 93FF CB FE        	set 7,(hl)
 181+ 9401 C9           	ret
 182+ 9402
 183+ 9402              ; ******************************************************************************************************************************************************************************************
 184+ 9402              ;	15/02/23
 185+ 9402              ;
 186+ 9402
 187+ 9402 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9405 47           	ld b,a
 189+ 9406 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9409 23           1 inc hl
 191+ 940A 23           	inc hl
 192+ 940B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 940D 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9410 CD FA 87     	call Extrae_address
 195+ 9413 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9416
 197+ 9416              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9416
 199+ 9416              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9416              ; Cuántos movimientos hemos hecho ??
 201+ 9416              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9416
 203+ 9416 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9419 EB           	ex de,hl
 205+ 941A A7           	and a
 206+ 941B ED 52        	sbc hl,de
 207+ 941D CB 3D        	srl l
 208+ 941F 3E 08        6 ld a,8
 209+ 9421 95           	sub l
 210+ 9422 30 1E        	jr nc,3F
 211+ 9424
 212+ 9424              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9424              ; B="0".
 214+ 9424
 215+ 9424 04           4 inc b
 216+ 9425 3C           	inc a
 217+ 9426 20 FC        	jr nz,4B
 218+ 9428 78           	ld a,b
 219+ 9429 08           	ex af,af
 220+ 942A 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 942D 23           5 inc hl
 222+ 942E 23           	inc hl
 223+ 942F 10 FC        	djnz 5B
 224+ 9431 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9434 CD FA 87     	call Extrae_address
 226+ 9437 22 9F 85     	ld (Puntero_objeto),hl
 227+ 943A
 228+ 943A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 943A              ; _(Posicion_actual).
 230+ 943A
 231+ 943A 21 9D 85     	ld hl,Posicion_actual
 232+ 943D 34           	inc (hl)
 233+ 943E 08               ex af,af
 234+ 943F 6F           	ld l,a
 235+ 9440 18 DD        	jr 6B
 236+ 9442
 237+ 9442              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9442
 239+ 9442 47           3 ld b,a
 240+ 9443 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9446 23           2 inc hl
 242+ 9447 23           	inc hl
 243+ 9448 10 FC        	djnz 2B
 244+ 944A 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 944D C9           8 ret
 246+ 944E
 247+ 944E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 944E              ;
 249+ 944E              ;	24/7/22
 250+ 944E              ;
 251+ 944E              ;	modifica_parametros_1er_DESPLZ_2
 252+ 944E              ;
 253+ 944E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 944E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 944E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 944E
 257+ 944E 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9451 A7           	and a
 259+ 9452 20 1F        	jr nz,1F
 260+ 9454 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9456 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9459
 263+ 9459 21 9C 85     	ld hl,Columns
 264+ 945C 34           	inc (hl)
 265+ 945D 3A AF 85     	ld a,(Cuad_objeto)
 266+ 9460 E6 01        	and 1
 267+ 9462 28 0F        	jr z,1F
 268+ 9464 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9467 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9468 22 9D 85     	ld (Posicion_actual),hl
 271+ 946B CD 3F 96     	call Genera_coordenadas
 272+ 946E CD D3 95     	call Inc_CTRL_DESPLZ
 273+ 9471 18 03        	jr 2F
 274+ 9473 CD D3 95     1 call Inc_CTRL_DESPLZ
 275+ 9476 C9           2 ret
 276+ 9477
 277+ 9477              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9477              ;
 279+ 9477              ;	24/7/22
 280+ 9477              ;
 281+ 9477              ;	Ciclo_completo.
 282+ 9477              ;
 283+ 9477              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9477              ;
 285+ 9477              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9477              ; 	Decrementamos (Columns).
 287+ 9477              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9477              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9477
 290+ 9477
 291+ 9477 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 947A FE FF        	cp $ff
 293+ 947C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 947E E6 F0        	and $f0
 295+ 9480 20 28        	jr nz,3F
 296+ 9482
 297+ 9482              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9482
 299+ 9482 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9485 47           	ld b,a
 301+ 9486 3E F8        	ld a,$f8
 302+ 9488 80           	add b
 303+ 9489 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 948C 18 1C        	jr 3F
 305+ 948E 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 9491 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9492 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9493 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 9496 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9499 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 949B 20 0A        	jr nz,2F
 312+ 949D 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 94A0 23           	inc hl
 314+ 94A1 22 9D 85     	ld (Posicion_actual),hl
 315+ 94A4 CD 3F 96     	call Genera_coordenadas
 316+ 94A7
 317+ 94A7              ; Inicia el puntero de Sprite.
 318+ 94A7
 319+ 94A7 CD 11 88     2 call Inicia_puntero_objeto_der
 320+ 94AA C9           3 ret
 321+ 94AB
 322+ 94AB              ; ******************************************************************************************************************************************************************************************
 323+ 94AB              ;
 324+ 94AB              ;	15/02/23
 325+ 94AB              ;
 326+ 94AB              ;	Mov_left.
 327+ 94AB              ;
 328+ 94AB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 94AB              ;
 330+ 94AB              Mov_left
 331+ 94AB
 332+ 94AB 21 C9 85     	ld hl,Ctrl_0
 333+ 94AE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 94B0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 94B0              ; 																	; _ en el caso de que no lo haya.
 336+ 94B0 3A C9 85     	ld a,(Ctrl_0)
 337+ 94B3 CB 77        	bit 6,a
 338+ 94B5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 94B7
 340+ 94B7 CD CD 95     	call Stop_Amadeus_left
 341+ 94BA C8           	ret z
 342+ 94BB 20 4A        	jr nz,8F
 343+ 94BD
 344+ 94BD 3A A1 85     11 ld a,(Coordenada_X)
 345+ 94C0 A7           	and a
 346+ 94C1 20 44        	jr nz,8F
 347+ 94C3
 348+ 94C3 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 94C6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 94C7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 94C9
 352+ 94C9              ; ---------- ---------- ----------
 353+ 94C9
 354+ 94C9 3A B0 85     	ld a,(Vel_left)
 355+ 94CC FE 02        	cp 2
 356+ 94CE 28 0F        	jr z,1F
 357+ 94D0 38 04        	jr c,6F
 358+ 94D2 FE 04        	cp 4
 359+ 94D4 28 12        	jr z,7F
 360+ 94D6
 361+ 94D6              ; ---------- ---------- ----------
 362+ 94D6
 363+ 94D6 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 94D9 FE F8        	cp $f8
 365+ 94DB 20 2A        	jr nz,8F
 366+ 94DD 18 10        	jr 4F
 367+ 94DF 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 94E2 FE F9        	cp $f9
 369+ 94E4 20 21        	jr nz,8F
 370+ 94E6 18 07        	jr 4F
 371+ 94E8 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 94EB FE FB        	cp $fb
 373+ 94ED 20 18        	jr nz,8F
 374+ 94EF
 375+ 94EF              ; ---------- ---------- ----------
 376+ 94EF
 377+ 94EF              4
 378+ 94EF CD F5 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 94F2              ;	call Reinicio
 380+ 94F2
 381+ 94F2              ; ---------- ---------- ----------
 382+ 94F2
 383+ 94F2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 94F4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 94F5
 386+ 94F5              ;	ld hl,(Indice_Sprite_izq)
 387+ 94F5              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 94F5
 389+ 94F5 CD 0E 95     	call DESPLZ_IZQ
 390+ 94F8 C1           	pop bc
 391+ 94F9 10 F9        	djnz 5B
 392+ 94FB 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 94FE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 94FF 22 9D 85     	ld (Posicion_actual),hl
 395+ 9502 CD 3F 96     	call Genera_coordenadas
 396+ 9505 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9507
 398+ 9507              ; ---------- ---------- ----------
 399+ 9507
 400+ 9507              ; Movemos, no hay recolocación.
 401+ 9507
 402+ 9507 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 950A CD 0E 95     	call DESPLZ_IZQ
 404+ 950D C9           2 ret
 405+ 950E
 406+ 950E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 950E              ;
 408+ 950E              ;	22/9/22
 409+ 950E
 410+ 950E              DESPLZ_IZQ
 411+ 950E
 412+ 950E CD 1D 95     	call Desplaza_izquierda
 413+ 9511 CD 69 95         call modifica_parametros_1er_DESPLZ
 414+ 9514 CD 91 95     	call Ciclo_completo_2
 415+ 9517 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 951A CB BE        	res 7,(hl)
 417+ 951C C9           	ret
 418+ 951D
 419+ 951D              Desplaza_izquierda
 420+ 951D
 421+ 951D 3A B0 85     	ld a,(Vel_left)
 422+ 9520 47           	ld b,a
 423+ 9521 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9524 23           1 inc hl
 425+ 9525 23           	inc hl
 426+ 9526 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9528 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 952B CD FA 87     	call Extrae_address
 429+ 952E 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9531
 431+ 9531              ; Modifica (Puntero_DESPLZ_der).
 432+ 9531
 433+ 9531              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9531              ; Cuántos movimientos hemos hecho ??
 435+ 9531              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9531
 437+ 9531 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9534 EB           	ex de,hl
 439+ 9535 A7           	and a
 440+ 9536 ED 52        	sbc hl,de
 441+ 9538 CB 3D        	srl l
 442+ 953A 3E 08        6 ld a,8
 443+ 953C 95           	sub l
 444+ 953D 30 1E        	jr nc,3F
 445+ 953F
 446+ 953F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 953F              ; B="0".
 448+ 953F
 449+ 953F 04           4 inc b
 450+ 9540 3C           	inc a
 451+ 9541 20 FC        	jr nz,4B
 452+ 9543 78           	ld a,b
 453+ 9544 08           	ex af,af
 454+ 9545 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9548 23           5 inc hl
 456+ 9549 23           	inc hl
 457+ 954A 10 FC        	djnz 5B
 458+ 954C 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 954F CD FA 87     	call Extrae_address
 460+ 9552 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9555
 462+ 9555              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9555              ; _(Posicion_actual).
 464+ 9555
 465+ 9555 21 9D 85     	ld hl,Posicion_actual
 466+ 9558 35           	dec (hl)
 467+ 9559 08           	ex af,af
 468+ 955A 6F           	ld l,a
 469+ 955B 18 DD        	jr 6B
 470+ 955D
 471+ 955D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 955D
 473+ 955D 47           3 ld b,a
 474+ 955E 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9561 23           2 inc hl
 476+ 9562 23           	inc hl
 477+ 9563 10 FC        	djnz 2B
 478+ 9565 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9568 C9           8 ret
 480+ 9569
 481+ 9569              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9569              ;
 483+ 9569              ;	modifica_parametros_1er_DESPLZ
 484+ 9569              ;
 485+ 9569              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9569              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9569              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9569
 489+ 9569 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 956C A7           	and a
 491+ 956D 20 1E        	jr nz,1F
 492+ 956F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9570 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9573 21 9C 85     	ld hl,Columns
 495+ 9576 34           	inc (hl)
 496+ 9577 3A AF 85     	ld a,(Cuad_objeto)
 497+ 957A E6 01        	and 1
 498+ 957C 20 0F        	jr nz,1F
 499+ 957E 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9581 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9582 22 9D 85     	ld (Posicion_actual),hl
 502+ 9585 CD 3F 96     	call Genera_coordenadas
 503+ 9588 CD E4 95     	call Dec_CTRL_DESPLZ
 504+ 958B 18 03        	jr 2F
 505+ 958D CD E4 95     1 call Dec_CTRL_DESPLZ
 506+ 9590 C9           2 ret
 507+ 9591
 508+ 9591              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9591
 510+ 9591 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9594 FE F7        	cp $f7
 512+ 9596 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9598 30 2C        	jr nc,3F
 514+ 959A
 515+ 959A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 959A
 517+ 959A 06 00        	ld b,0
 518+ 959C 04           4 inc b
 519+ 959D 3C           	inc a
 520+ 959E FE F7        	cp $f7
 521+ 95A0 20 FA        	jr nz,4B
 522+ 95A2 3E FF        	ld a,$ff
 523+ 95A4 90           	sub b
 524+ 95A5 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 95A8 18 1C        	jr 3F
 526+ 95AA
 527+ 95AA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 95AA
 529+ 95AA 21 9C 85     1 ld hl,Columns
 530+ 95AD 35           	dec (hl)
 531+ 95AE AF           	xor a
 532+ 95AF 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 95B2 3A AF 85     	ld a,(Cuad_objeto)
 534+ 95B5 E6 01        	and 1
 535+ 95B7 28 0A        	jr z,2F
 536+ 95B9 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 95BC 2B           	dec hl
 538+ 95BD 22 9D 85     	ld (Posicion_actual),hl
 539+ 95C0 CD 3F 96     	call Genera_coordenadas
 540+ 95C3
 541+ 95C3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 95C3
 543+ 95C3 CD 24 88     2 call Inicia_puntero_objeto_izq
 544+ 95C6 C9           3 ret
 545+ 95C7
 546+ 95C7              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 95C7              ;
 548+ 95C7              ;	19/10/22
 549+ 95C7              ;
 550+ 95C7              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 95C7              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 95C7
 553+ 95C7 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 95CA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 95CC C9           	ret
 556+ 95CD
 557+ 95CD              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 95CD              ;
 559+ 95CD              ;	19/10/22
 560+ 95CD              ;
 561+ 95CD              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 95CD              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 95CD
 564+ 95CD 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 95D0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 95D2 C9           	ret
 567+ 95D3
 568+ 95D3              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 95D3              ;
 570+ 95D3              ;	24/7/22
 571+ 95D3              ;
 572+ 95D3              ;	Inc_CTRL_DESPLZ
 573+ 95D3              ;
 574+ 95D3              ;
 575+ 95D3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 95D3
 577+ 95D3 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 95D6 3A B1 85     	ld a,(Vel_right)
 579+ 95D9 A7           	and a
 580+ 95DA 28 06        	jr z,1F
 581+ 95DC 47           	ld b,a
 582+ 95DD 34           3 inc (hl)
 583+ 95DE 10 FD        	djnz 3B
 584+ 95E0 18 01        	jr 2F
 585+ 95E2 34           1 inc (hl)
 586+ 95E3 C9           2 ret
 587+ 95E4
 588+ 95E4              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 95E4              ;
 590+ 95E4              ;	5/2/23
 591+ 95E4              ;
 592+ 95E4              ;	Dec_CTRL_DESPLZ
 593+ 95E4              ;
 594+ 95E4              ;
 595+ 95E4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 95E4
 597+ 95E4 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 95E7 3A B0 85     	ld a,(Vel_left)
 599+ 95EA A7           	and a
 600+ 95EB 28 06        	jr z,1F
 601+ 95ED 47           	ld b,a
 602+ 95EE 35           3 dec (hl)
 603+ 95EF 10 FD        	djnz 3B
 604+ 95F1 18 01        	jr 2F
 605+ 95F3 35           1 dec (hl)
 606+ 95F4 C9           2 ret
 607+ 95F5
 608+ 95F5              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 95F5
 610+ 95F5 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 95F8 01 1F 00     	ld bc,31
 612+ 95FB A7           	and a
 613+ 95FC ED 4A        	adc hl,bc
 614+ 95FE 22 9D 85     	ld (Posicion_actual),hl
 615+ 9601 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9604 CB C6        	set 0,(hl)
 617+ 9606 C9           	ret
 618+ 9607
 619+ 9607              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9607
 621+ 9607 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 960A 01 1F 00     	ld bc,31
 623+ 960D A7           	and a
 624+ 960E ED 42        	sbc hl,bc
 625+ 9610 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9613 21 C9 85     	ld hl,Ctrl_0
 627+ 9616 CB CE        	set 1,(hl)
 628+ 9618 C9           	ret
 629+ 9619
 630+ 9619              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9619
 632+ 9619 24           Reaparece_abajo inc h
 633+ 961A 01 E0 17     	ld bc,$17e0
 634+ 961D A7           	and a
 635+ 961E ED 4A        	adc hl,bc
 636+ 9620 22 9D 85     	ld (Posicion_actual),hl
 637+ 9623 21 C9 85     	ld hl,Ctrl_0
 638+ 9626 CB D6        	set 2,(hl)
 639+ 9628 C9           	ret
 640+ 9629
 641+ 9629              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9629
 643+ 9629 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 962C A7           	and a
 645+ 962D ED 42        	sbc hl,bc
 646+ 962F 22 9D 85     	ld (Posicion_actual),hl
 647+ 9632 21 C9 85     	ld hl,Ctrl_0
 648+ 9635 CB DE        	set 3,(hl)
 649+ 9637 C9           	ret
 650+ 9638
 651+ 9638              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9638
 653+ 9638 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 963B 22 9D 85     	ld (Posicion_actual),hl
 655+ 963E C9           	ret
# file closed: Direcciones.asm
1024  963F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 963F              ; ------------------------------------------------------------------------
   2+ 963F              ;
   3+ 963F              ;	02/04/23
   4+ 963F              ;
   5+ 963F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 963F              ;	Fila superior "0", Columna izquierda "0".
   7+ 963F              ;
   8+ 963F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 963F              ;
  10+ 963F              ;	Modifica: A,BC y DE.
  11+ 963F
  12+ 963F C5           Genera_coordenadas push bc
  13+ 9640 E5           	push hl
  14+ 9641 D5           	push de
  15+ 9642
  16+ 9642 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9645
  18+ 9645 7D           	ld a,l
  19+ 9646 E6 1F        	and $1f
  20+ 9648 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 964B
  22+ 964B CD 13 93     	call calcula_tercio
  23+ 964E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 964F
  25+ 964F 1E 00        	ld e,0
  26+ 9651 7D           	ld a,l
  27+ 9652 E6 E0        	and $e0
  28+ 9654 28 01        	jr z,1F
  29+ 9656 04           	inc b
  30+ 9657
  31+ 9657 04           1 inc b
  32+ 9658 05           	dec b
  33+ 9659 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 965B              ;														; _ , salimos.
  35+ 965B 1C           3 inc e
  36+ 965C D6 20        	sub 32
  37+ 965E 20 FB        	jr nz,3B
  38+ 9660 10 F5        	djnz 1B
  39+ 9662
  40+ 9662 7B           2 ld a,e
  41+ 9663 32 A2 85     	ld (Coordenada_y),a
  42+ 9666
  43+ 9666 D1           	pop de
  44+ 9667 E1           	pop hl
  45+ 9668 C1           	pop bc
  46+ 9669
  47+ 9669 C9           	ret
  48+ 966A
  49+ 966A              ; ------------------------------------------------------------------------
  50+ 966A              ;	28/03/23
  51+ 966A              ;
  52+ 966A              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 966A              ;	Fila superior "0", Columna izquierda "0".
  54+ 966A              ;
  55+ 966A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 966A              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 966A              ;
  58+ 966A              ;		DE="$120d"
  59+ 966A              ;
  60+ 966A              ;		D, (Coordenada_X), Columnas, $12
  61+ 966A              ;		E, (Coordenada_y), Filas, $0d
  62+ 966A              ;
  63+ 966A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 966A
  65+ 966A              ;	Modifica: A,BC y DE.
  66+ 966A
  67+ 966A
  68+ 966A              Genera_coordenadas_disparo
  69+ 966A
  70+ 966A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 966A
  72+ 966A 7D           	ld a,l
  73+ 966B E6 1F        	and $1f
  74+ 966D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 966E CD 13 93     	call calcula_tercio
  76+ 9671 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9672 1E 00        	ld e,0
  78+ 9674 7D           	ld a,l
  79+ 9675 E6 E0        	and $e0
  80+ 9677 28 01        	jr z,1F
  81+ 9679 04           	inc b
  82+ 967A 1C           1 inc e
  83+ 967B D6 20        	sub 32
  84+ 967D 20 FB        	jr nz,1B
  85+ 967F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9681 C9           	ret
  87+ 9682
# file closed: Genera_coordenadas.asm
1025  9682              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9682
   2+ 9682
   3+ 9682              ;   11/8/22
   4+ 9682              ;
   5+ 9682              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9682              ;
   7+ 9682              ;   Mov_obj.asm
   8+ 9682              ;
   9+ 9682              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9682              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9682              ;
  12+ 9682              ;   Codificación:
  13+ 9682              ;
  14+ 9682              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9682
  16+ 9682              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9682
  18+ 9682 02 40 00     Arriba db 2,%01000000,0
  19+ 9685 02 80 00     Abajo db 2,%10000000,0
  20+ 9688 02 20 00     Derecha db 2,%00100000,0
  21+ 968B 02 10 00     Izquierda db 2,%00010000,0
  22+ 968E 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9692 60 42 60 40
  22+ 9696 63
  23+ 9697 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 969B 22 A3 80 A0
  24+ 969F 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 96A3 84 A0 83 A0
  25+ 96A7 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 96AB 80 A3 22 A0
  26+ 96AF 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 96B3 40 60 42 60
  27+ 96B7 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 96BB
  29+ 96BB 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 96BF 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 96C3 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 96C7 84 00
  32+ 96C9 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 96CD 84 00
  33+ 96CF 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 96D3 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 96D7 1F 1F 1F 1F
  35+ 96DB 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 96DF 1F 1F 1F 1F
  35+ 96E3 1F
  36+ 96E4 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 96E8 2F 2F 2F 2F
  36+ 96EC 2F 2F
  37+ 96EE 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 96F2 2F 2F 00
  38+ 96F5
  39+ 96F5              ; ----- ----- ----- ----- -----
  40+ 96F5
  41+ 96F5 D3 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 96F7 CF 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 96F9 8B 96        Indice_mov_Izquierda defw Izquierda
  44+ 96FB 88 96        Indice_mov_Derecha defw Derecha
  45+ 96FD 85 96        Indice_mov_Abajo defw Abajo
  46+ 96FF 82 96        Indice_mov_Arriba defw Arriba
  47+ 9701 BF 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9703 C3 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9705 BB 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9707 C9 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9709 8E 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 970B              ; ----- ----- ----- ----- -----
  53+ 970B
  54+ 970B 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 970E A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 970F 28 02            jr z,1F
  57+ 9711 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9713 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9716 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9718 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 971B              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 971B 2A CD 85         ld hl,(Puntero_mov)
  63+ 971E 7E               ld a,(hl)
  64+ 971F 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9722 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9723 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9726
  68+ 9726 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9729 A7               and a
  70+ 972A 20 0C            jr nz,12F
  71+ 972C 2A CD 85         ld hl,(Puntero_mov)
  72+ 972F 7E               ld a,(hl)
  73+ 9730 A7               and a
  74+ 9731 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9733 E6 0F            and $0f
  76+ 9735 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9738              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9738 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 973B CB 7E            bit 7,(hl)
  80+ 973D 28 03            jr z,2F
  81+ 973F CD 31 93         call Mov_down
  82+ 9742 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9745 CB 76            bit 6,(hl)
  84+ 9747 28 03            jr z,3F
  85+ 9749 CD 5F 93         call Mov_up
  86+ 974C 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 974F CB 6E            bit 5,(hl)
  88+ 9751 28 03            jr z,4F
  89+ 9753 CD 8D 93         call Mov_right
  90+ 9756 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9759 CB 66            bit 4,(hl)
  92+ 975B 28 03            jr z,5F
  93+ 975D CD AB 94         call Mov_left
  94+ 9760
  95+ 9760              ; ---------- --------- --------- ---------- ----------
  96+ 9760
  97+ 9760 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9763 A7               and a
  99+ 9764 28 07            jr z,6F
 100+ 9766 3D               dec a
 101+ 9767 32 D1 85         ld (Repetimos_db),a
 102+ 976A 28 01            jr z,6f
 103+ 976C C9           11 ret
 104+ 976D 21 CF 85     6 ld hl,Contador_db_mov
 105+ 9770 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9771 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9774 23               inc hl
 108+ 9775 22 CD 85         ld (Puntero_mov),hl
 109+ 9778 18 F2            jr 11B
 110+ 977A 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 977D 3A D0 85         ld a,(Incrementa_puntero)
 112+ 9780 47               ld b,a
 113+ 9781 23           8 inc hl
 114+ 9782 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9784 5E               ld e,(hl)
 116+ 9785 23               inc hl
 117+ 9786 56               ld d,(hl)
 118+ 9787 EB               ex de,hl
 119+ 9788 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 978B 18 DF            jr 11B
 121+ 978D
 122+ 978D              ; ---------- --------- --------- ---------- ----------
 123+ 978D              ;
 124+ 978D              ;   11/8/22
 125+ 978D              ;
 126+ 978D              ;   Prepara_Puntero_mov
 127+ 978D
 128+ 978D E5           Prepara_Puntero_mov push hl
 129+ 978E D5               push de
 130+ 978F 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 9792 5E               ld e,(hl)
 132+ 9793 23               inc hl
 133+ 9794 56               ld d,(hl)
 134+ 9795 EB               ex de,hl
 135+ 9796 22 CD 85         ld (Puntero_mov),hl
 136+ 9799 D1               pop de
 137+ 979A E1               pop hl
 138+ 979B C9               ret
 139+ 979C
 140+ 979C              ; ---------- --------- --------- ---------- ----------
 141+ 979C              ;
 142+ 979C              ;   11/8/22
 143+ 979C              ;
 144+ 979C              ;   Reinicia_el_movimiento
 145+ 979C
 146+ 979C CD 8D 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 979F AF               xor a
 148+ 97A0 32 CF 85         ld (Contador_db_mov),a
 149+ 97A3 32 D0 85         ld (Incrementa_puntero),a
 150+ 97A6 C3 0B 97         jp Movimiento
 151+ 97A9 C9               ret
 152+ 97AA              ; ---------- --------- --------- ---------- ----------
 153+ 97AA
 154+ 97AA
 155+ 97AA
 156+ 97AA
 157+ 97AA
 158+ 97AA
 159+ 97AA
 160+ 97AA
 161+ 97AA
 162+ 97AA
 163+ 97AA
 164+ 97AA
 165+ 97AA
 166+ 97AA
 167+ 97AA
 168+ 97AA
 169+ 97AA
 170+ 97AA
# file closed: Patrones_de_mov.asm
1026  97AA              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 97AA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 97AA              ;
   3+ 97AA              ;	3/1/23
   4+ 97AA              ;
   5+ 97AA              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 97AA
   7+ 97AA              ;	ADC HL,SP	LD (addr),SP
   8+ 97AA              ;	ADD HL,SP	LD SP,(addr)
   9+ 97AA              ;	ADD IX,SP	LD SP,nn
  10+ 97AA              ; 	ADD IY,SP	LD SP,HL
  11+ 97AA              ;				LD SP,IX
  12+ 97AA              ;	DEC SP		LD SP,IY
  13+ 97AA
  14+ 97AA              ;	EX (SP),HL
  15+ 97AA              ;	EX (SP),IX
  16+ 97AA              ;	EX (SP),IY
  17+ 97AA
  18+ 97AA              ;	INC SP
  19+ 97AA
  20+ 97AA
  21+ 97AA                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 DF 85      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 E5 85         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 E3 85     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B DF 85  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1027  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1028  7FE6
1029  7FE6              	SAVESNA "Pruebas.sna", START
1030  7FE6
1031  7FE6
1032  7FE6
# file closed: Banco_de_pruebas.asm
