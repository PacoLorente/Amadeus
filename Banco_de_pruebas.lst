# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF 45 83        	defw $8345															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_Amadeus_scanlines_album equ $827c	;	($827c - $828c) 		; Inicialmente 16 bytes, $10.
  39  FE01              Disparos_Amadeus_scanlines_album_2 equ $828e	;	($828e - $829e)
  40  FE01              Disparos_Entidades_scanlines_album equ $82a1	;	($82a1 - $82f1)		; Inicialmente 80 bytes, $50.
  41  FE01              Disparos_Entidades_scanlines_album_2 equ $82f3	;	($82f3 - $8343)
  42  FE01
  43  FE01
  44  FE01
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $8345
  61  8345
  62  8345 F5           	push af
  63  8346 E5           	push hl
  64  8347
  65  8347              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  8347 21 A5 8C     	ld hl,Ctrl_3
  67  834A CB 46        	bit 0,(hl)
  68  834C 28 FE        	jr z,$
  69  834E              ;! -------------------
  70  834E
  71  834E              ; Shield -----------------------
  72  834E
  73  834E              Temporizacion_shield
  74  834E
  75  834E 21 CA 8C     	ld hl,Shield
  76  8351 7E           	ld a,(hl)
  77  8352 A7           	and a
  78  8353 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  79  8355
  80  8355 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  81  8356
  82  8356 23           	inc hl
  83  8357 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  84  8358
  85  8358 20 17        	jr nz,Incrementa_FRAMES
  86  835A
  87  835A              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  88  835A
  89  835A              Cambio_de_estado
  90  835A
  91  835A              ;	Indica cambio de estado.
  92  835A
  93  835A 23           	inc hl						;	Sitúa en (Shield_3).
  94  835B
  95  835B CB 5E        	bit 3,(hl)
  96  835D 28 05        	jr z,2F
  97  835F
  98  835F CD 1F 91     	call Inicia_Shield
  99  8362
 100  8362 18 0D        	jr Incrementa_FRAMES
 101  8364
 102  8364 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 103  8366
 104  8366              ;	Carga en (Shield_2) la siguiente temporización.
 105  8366
 106  8366 2A C8 8C     	ld hl,(Puntero_datos_shield)
 107  8369 23           	inc hl
 108  836A 22 C8 8C     	ld (Puntero_datos_shield),hl
 109  836D 7E           	ld a,(hl)
 110  836E 32 CB 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 111  8371
 112  8371              Incrementa_FRAMES
 113  8371
 114  8371 2A 78 5C     	ld hl,(FRAMES)
 115  8374 23           	inc hl
 116  8375 22 78 5C     	ld (FRAMES),hl
 117  8378
 118  8378 7C           	ld a,h
 119  8379 B5           	or l
 120  837A 20 04        	jr nz,1F
 121  837C
 122  837C 21 7A 5C     	ld hl,FRAMES_3
 123  837F 34           	inc (hl)
 124  8380
 125  8380 D5           1 push de
 126  8381 C5           	push bc
 127  8382
 128  8382 CD 2F 91     	call Actualiza_pantalla
 129  8385
 130  8385 C1           	pop bc
 131  8386 D1           	pop de
 132  8387 E1           	pop hl
 133  8388 F1           	pop af
 134  8389
 135  8389 FB           	ei
 136  838A
 137  838A C9           	ret
 138  838B
 139  838B              ; --------------------------------------------------------------------------------
 140  838B
 141  838B              	include "Sprites_e_indices.asm"						; Comienza en $83c0
# file opened: Sprites_e_indices.asm
   1+ 838B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 838B              ;
   3+ 838B              ;	17/02/23
   4+ 838B              ;
   5+ 838B              ;	Sprites e índices.
   6+ 838B
   7+ 838B              	org $83c0
   8+ 83C0
   9+ 83C0              ; Disparo.
  10+ 83C0
  11+ 83C0 C8 83        Indice_disparo defw Disparo_0
  12+ 83C2 CA 83        	defw Disparo_f9
  13+ 83C4 CC 83        	defw Disparo_fb
  14+ 83C6 CE 83        	defw Disparo_fd
  15+ 83C8
  16+ 83C8              ; Disparo (CTRL_DESPLZ)="0".
  17+ 83C8 01 80        Disparo_0 DEFB $01,$80
  18+ 83CA              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 83CA 00 60        Disparo_f9 DEFB $00,$60
  20+ 83CC              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 83CC 18 00        Disparo_fb DEFB $18,$00
  22+ 83CE              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 83CE 06 00        Disparo_fd DEFB $06,$00
  24+ 83D0
  25+ 83D0              ; ----------------------------------------------------------------------------------------
  26+ 83D0
  27+ 83D0              ; Badsat_izq. 2x2.
  28+ 83D0
  29+ 83D0 00 84        Indice_Badsat_izq defw Badsat_izquierda
  30+ 83D2 60 85        	defw Badsat_izq_fe
  31+ 83D4 30 85        	defw Badsat_izq_fd
  32+ 83D6 00 85        	defw Badsat_izq_fc
  33+ 83D8 C0 84        	defw Badsat_izq_fb
  34+ 83DA 90 84        	defw Badsat_izq_fa
  35+ 83DC 60 84        	defw Badsat_izq_f9
  36+ 83DE 30 84        	defw Badsat_izq_f8
  37+ 83E0
  38+ 83E0              	org $8400
  39+ 8400
  40+ 8400 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  41+ 8403 02 14 00     	DEFB 	$02,$14,$00
  42+ 8406 02 2A 00     	DEFB 	$02,$2A,$00
  43+ 8409 02 55 00     	DEFB 	$02,$55,$00
  44+ 840C 02 AA 00     	DEFB	$02,$AA,$00
  45+ 840F 02 54 00     	DEFB 	$02,$54,$00
  46+ 8412 7F E8 00     	DEFB 	$7F,$E8,$00
  47+ 8415 03 60 00     	DEFB 	$03,$60,$00
  48+ 8418 0A E0 00     	DEFB	$0A,$E0,$00
  49+ 841B 17 F8 00     	DEFB 	$17,$F8,$00
  50+ 841E 2B E8 00     	DEFB 	$2B,$E8,$00
  51+ 8421 54 40 00     	DEFB 	$54,$40,$00
  52+ 8424 AA 60 00     	DEFB	$AA,$60,$00
  53+ 8427 54 00 00     	DEFB 	$54,$00,$00
  54+ 842A 28 00 00     	DEFB 	$28,$00,$00
  55+ 842D 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  56+ 8430
  57+ 8430 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  57+ 8434 0A 00 01 15
  58+ 8438 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  58+ 843C 01 55 00 01
  59+ 8440 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  59+ 8444 00 01 B0 00
  60+ 8448 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  60+ 844C FC 00 15 F4
  61+ 8450 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  61+ 8454 55 30 00 2A
  62+ 8458 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  62+ 845C 00 08 00 00
  63+ 8460
  64+ 8460 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8464 85 00 00 8A
  65+ 8468 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 846C 00 AA 80 00
  66+ 8470 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8474 00 00 D8 00
  67+ 8478 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 847C FE 00 0A FA
  68+ 8480 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8484 2A 98 00 15
  69+ 8488 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 848C 00 04 00 00
  70+ 8490
  71+ 8490 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8494 42 80 00 45
  72+ 8498 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 849C 00 55 40 00
  73+ 84A0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 84A4 00 00 6C 00
  74+ 84A8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 84AC FF 00 05 7D
  75+ 84B0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 84B4 15 4C 00 0A
  76+ 84B8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 84BC 00 02 00 00
  77+ 84C0
  78+ 84C0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 84C4 21 40 00 22
  79+ 84C8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 84CC 00 2A A0 00
  80+ 84D0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 84D4 80 00 36 00
  81+ 84D8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 84DC 7F 80 02 BE
  82+ 84E0 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 84E4 0A A6 00 05
  83+ 84E8 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 84EC 00 01 00 00
  84+ 84F0
  85+ 84F0              	org $8500
  86+ 8500
  87+ 8500 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  87+ 8504 10 A0 00 11
  88+ 8508 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  88+ 850C 00 15 50 00
  89+ 8510 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  89+ 8514 40 00 1B 00
  90+ 8518 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  90+ 851C BF C0 01 5F
  91+ 8520 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  91+ 8524 05 53 00 02
  92+ 8528 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  92+ 852C 00 00 80 00
  93+ 8530
  94+ 8530 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  94+ 8534 08 50 00 08
  95+ 8538 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  95+ 853C 00 0A A8 00
  96+ 8540 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  96+ 8544 A0 00 0D 80
  97+ 8548 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  97+ 854C 5F F8 00 AF
  98+ 8550 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  98+ 8554 02 A9 00 01
  99+ 8558 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  99+ 855C 00 00 40 00
 100+ 8560
 101+ 8560 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8564 04 28 00 04
 102+ 8568 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 856C 00 05 54 00
 103+ 8570 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8574 D0 00 06 C0
 104+ 8578 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 857C 2F FC 00 57
 105+ 8580 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8584 01 54 80 00
 106+ 8588 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 858C 00 00 20 00
 107+ 8590
 108+ 8590
 109+ 8590 A0 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8592 D0 85        	defw Badsat_der_f8
 111+ 8594 00 86        	defw Badsat_der_f9
 112+ 8596 30 86        	defw Badsat_der_fa
 113+ 8598 60 86        	defw Badsat_der_fb
 114+ 859A 90 86        	defw Badsat_der_fc
 115+ 859C C0 86        	defw Badsat_der_fd
 116+ 859E 00 87        	defw Badsat_der_fe
 117+ 85A0
 118+ 85A0 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 85A3 28 40 00     	DEFB    $28,$40,$00
 120+ 85A6 54 40 00     	DEFB	$54,$40,$00
 121+ 85A9 AA 40 00     	DEFB	$AA,$40,$00
 122+ 85AC 55 40 00     	DEFB	$55,$40,$00
 123+ 85AF 2A 40 00     	DEFB	$2A,$40,$00
 124+ 85B2 17 FE 00     	DEFB	$17,$FE,$00
 125+ 85B5 06 C0 00     	DEFB	$06,$C0,$00
 126+ 85B8 07 50 00     	DEFB	$07,$50,$00
 127+ 85BB 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 85BE 17 D4 00     	DEFB	$17,$D4,$00
 129+ 85C1 02 2A 00     	DEFB	$02,$2A,$00
 130+ 85C4 06 55 00     	DEFB	$06,$55,$00
 131+ 85C7 00 2A 00     	DEFB	$00,$2A,$00
 132+ 85CA 00 14 00     	DEFB	$00,$14,$00
 133+ 85CD 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 85D0
 135+ 85D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 85D4 20 00 2A 20
 136+ 85D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 85DC 2A A0 00 15
 137+ 85E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 85E4 00 03 60 00
 138+ 85E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 85EC F4 00 0B EA
 139+ 85F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 85F4 03 2A 80 00
 140+ 85F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 85FC 00 00 04 00
 141+ 8600
 142+ 8600 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 8604 10 00 15 10
 143+ 8608 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 860C 15 50 00 0A
 144+ 8610 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 8614 80 01 B0 00
 145+ 8618 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 861C FA 00 05 F5
 146+ 8620 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 8624 01 95 40 00
 147+ 8628 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 862C 00 00 02 00
 148+ 8630
 149+ 8630 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 8634 08 00 0A 88
 150+ 8638 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 863C 0A A8 00 05
 151+ 8640 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 8644 C0 00 D8 00
 152+ 8648 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 864C FD 00 02 FA
 153+ 8650 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 8654 00 CA A0 00
 154+ 8658 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 865C 80 00 01 00
 155+ 8660
 156+ 8660 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8664 84 00 05 44
 157+ 8668 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 866C 05 54 00 02
 158+ 8670 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8674 E0 00 6C 00
 159+ 8678 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 867C FE 80 01 7D
 160+ 8680 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8684 00 65 50 00
 161+ 8688 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 868C 40 00 00 80
 162+ 8690
 163+ 8690 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8694 42 00 02 A2
 164+ 8698 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 869C 02 AA 00 01
 165+ 86A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 86A4 F0 00 36 00
 166+ 86A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 86AC FF 40 00 BE
 167+ 86B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 86B4 00 32 A8 00
 168+ 86B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 86BC A0 00 00 40
 169+ 86C0
 170+ 86C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 86C4 A1 00 01 51
 171+ 86C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 86CC 01 55 00 00
 172+ 86D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 86D4 F8 00 1B 00
 173+ 86D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 86DC FF A0 00 1F
 174+ 86E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 86E4 00 09 54 00
 175+ 86E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 86EC 50 00 00 20
 176+ 86F0
 177+ 86F0              	org $8700
 178+ 8700
 179+ 8700 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 179+ 8704 50 80 00 A8
 180+ 8708 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 180+ 870C 00 AA 80 00
 181+ 8710 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 181+ 8714 FC 00 0D 80
 182+ 8718 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 182+ 871C FF D0 00 0F
 183+ 8720 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 183+ 8724 00 04 AA 00
 184+ 8728 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 184+ 872C 28 00 00 10
 185+ 8730
 186+ 8730              ; ----------------------------------------------------------------------------------------
 187+ 8730
 188+ 8730              ; Amadeus. 2x2.
 189+ 8730
 190+ 8730 50 87        Indice_Amadeus_der defw Amadeus
 191+ 8732 00 00        	defw 0
 192+ 8734 80 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 193+ 8736 00 00        	defw 0
 194+ 8738 B0 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 195+ 873A 00 00        	defw 0
 196+ 873C 00 88        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 197+ 873E 00 00        	defw 0	 								; (Fín de índice).
 198+ 8740
 199+ 8740 50 87        Indice_Amadeus_izq defw Amadeus
 200+ 8742 00 00        	defw 0
 201+ 8744 00 88        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 202+ 8746 00 00        	defw 0
 203+ 8748 B0 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 204+ 874A 00 00        	defw 0
 205+ 874C 80 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 206+ 874E 00 00        	defw 0	 								; (Fín de índice).
 207+ 8750
 208+ 8750 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8753 23 C4 00     	DEFB	$23,$C4,0
 210+ 8756 26 64 00     	DEFB	$26,$64,0
 211+ 8759 24 24 00     	DEFB	$24,$24,0
 212+ 875C 2C 34 00     	DEFB	$2C,$34,0
 213+ 875F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8762 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8765 67 E6 00     	DEFB	$67,$E6,0
 216+ 8768 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 876B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 876E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8771 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8774 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8777 FB DF 00     	DEFB	$FB,$DF,0
 222+ 877A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 877D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8780
 225+ 8780 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8784 F1 00 09 99
 226+ 8788 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 878C 0B 0D 00 1B
 227+ 8790 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8794 80 19 F9 80
 228+ 8798 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 879C F3 C0 3D FB
 229+ 87A0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 87A4 3E F7 C0 3E
 230+ 87A8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 87AC 40 1C 63 80
 231+ 87B0
 232+ 87B0 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 87B4 3C 40 02 66
 233+ 87B8 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 87BC 02 C3 40 06
 234+ 87C0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 87C4 60 06 7E 60
 235+ 87C8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 87CC 3C F0 0F 7E
 236+ 87D0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 87D4 0F BD F0 0F
 237+ 87D8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 87DC 10 07 18 E0
 238+ 87E0
 239+ 87E0              	org $8800
 240+ 8800
 241+ 8800 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 241+ 8804 8F 10 00 99
 242+ 8808 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 242+ 880C 00 B0 D0 01
 243+ 8810 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 243+ 8814 D8 01 9F 98
 244+ 8818 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 244+ 881C CF 3C 03 DF
 245+ 8820 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 245+ 8824 03 EF 7C 03
 246+ 8828 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 246+ 882C 44 01 C6 38
 247+ 8830
 248+ 8830              ; ----------------------------------------------------------------------------------------
 249+ 8830
 250+ 8830 36 88        Indice_Explosion_entidades defw Explosion_entidades_1
 251+ 8832 66 88        	defw Explosion_entidades_2
 252+ 8834 96 88        	defw Explosion_entidades_3
 253+ 8836
 254+ 8836 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 255+ 8839 08 10 00     	DEFB 	$08,$10,$00
 256+ 883C 04 38 40     	DEFB	$04,$38,$40
 257+ 883F 03 7D 80     	DEFB	$03,$7D,$80
 258+ 8842 02 E6 80     	DEFB	$02,$E6,$80
 259+ 8845 01 B7 00     	DEFB	$01,$B7,$00
 260+ 8848 01 7F 00     	DEFB	$01,$7F,$00
 261+ 884B 03 DD 80     	DEFB	$03,$DD,$80
 262+ 884E 0F FF E0     	DEFB	$0F,$FF,$E0
 263+ 8851 03 3B 80     	DEFB	$03,$3B,$80
 264+ 8854 01 9D 00     	DEFB	$01,$9D,$00
 265+ 8857 01 F6 00     	DEFB	$01,$F6,$00
 266+ 885A 02 FD 80     	DEFB	$02,$FD,$80
 267+ 885D 03 00 40     	DEFB	$03,$00,$40
 268+ 8860 04 00 00     	DEFB	$04,$00,$00
 269+ 8863 08 00 00     	DEFB	$08,$00,$00
 270+ 8866
 271+ 8866 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 886A 38 10 03 BC
 272+ 886E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 8872 04 06 C0 00
 273+ 8876 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 887A 00 03 DD 80
 274+ 887E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 8882 3A 70 01 9C
 275+ 8886 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 888A 04 F8 80 06
 276+ 888E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 8892 00 00 00 00
 277+ 8896
 278+ 8896 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 889A 00 20 08 00
 279+ 889E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 88A2 00 06 00 00
 280+ 88A6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 88AA 00 00 14 30
 281+ 88AE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 88B2 38 00 01 08
 282+ 88B6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 88BA 00 80 00 04
 283+ 88BE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 88C2 10 08 00 20
 284+ 88C6
 285+ 88C6              ; ------------------------------------------
 286+ 88C6
 287+ 88C6 CC 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 88C8 00 89        	defw Explosion_Amadeus_2
 289+ 88CA 30 89        	defw Explosion_Amadeus_3
 290+ 88CC
 291+ 88CC 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 88CF 02 3C 36     	DEFB	$02,$3C,$36
 293+ 88D2 02 66 56     	DEFB	$02,$66,$56
 294+ 88D5 02 42 48     	DEFB	$02,$42,$48
 295+ 88D8 02 C3 32     	DEFB	$02,$C3,$32
 296+ 88DB 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 88DE 06 FE 46     	DEFB	$06,$FE,$46
 298+ 88E1 06 79 68     	DEFB	$06,$79,$68
 299+ 88E4 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 88E7 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 88EA 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 88ED 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 88F0 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 88F3 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 88F6 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 88F9 07 19 80     	DEFB	$07,$19,$80
 307+ 88FC
 308+ 88FC              	org $8900
 309+ 8900
 310+ 8900 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 311+ 8903 00 3C 36     	DEFB	$00,$3C,$36
 312+ 8906 00 66 56     	DEFB	$00,$66,$56
 313+ 8909 04 42 48     	DEFB	$04,$42,$48
 314+ 890C 0A 03 32     	DEFB	$0A,$03,$32
 315+ 890F 14 DB 0C     	DEFB	$14,$DB,$0C
 316+ 8912 1C DE 46     	DEFB	$1C,$DE,$46
 317+ 8915 36 49 68     	DEFB 	$36,$49,$68
 318+ 8918 0C 76 D8     	DEFB	$0C,$76,$D8
 319+ 891B 10 34 6C     	DEFB	$10,$34,$6C
 320+ 891E 2B 6E BE     	DEFB	$2B,$6E,$BE
 321+ 8921 0E AF B0     	DEFB	$0E,$AF,$B0
 322+ 8924 29 B5 A0     	DEFB	$29,$B5,$A0
 323+ 8927 0C 91 8A     	DEFB	$0C,$91,$8A
 324+ 892A 08 BA 4C     	DEFB	$08,$BA,$4C
 325+ 892D 07 19 80     	DEFB	$07,$19,$80
 326+ 8930
 327+ 8930 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 328+ 8933 00 00 00     	DEFB	$00,$00,$00
 329+ 8936 00 00 00     	DEFB	$00,$00,$00
 330+ 8939 00 00 40     	DEFB	$00,$00,$40
 331+ 893C 00 00 30     	DEFB	$00,$00,$30
 332+ 893F 00 00 08     	DEFB	$00,$00,$08
 333+ 8942 00 82 40     	DEFB	$00,$82,$40
 334+ 8945 04 04 68     	DEFB	$04,$04,$68
 335+ 8948 04 20 58     	DEFB	$04,$20,$58
 336+ 894B 18 12 2C     	DEFB	$18,$12,$2C
 337+ 894E 2A 40 3C     	DEFB	$2A,$40,$3C
 338+ 8951 0F C2 30     	DEFB	$0F,$C2,$30
 339+ 8954 29 80 A0     	DEFB	$29,$80,$A0
 340+ 8957 0F 84 88     	DEFB	$0F,$84,$88
 341+ 895A 08 A0 4C     	DEFB	$08,$A0,$4C
 342+ 895D 07 11 80     	DEFB	$07,$11,$80
 343+ 8960
# file closed: Sprites_e_indices.asm
 142  8960              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8960              ; ---------------------------------------------------------------------
   2+ 8960              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8960              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8960              ; ---------------------------------------------------------------------
   5+ 8960
   6+ 8960              ; 30/05/24
   7+ 8960              ;
   8+ 8960              ;	En esta tabla iremos almacenando:
   9+ 8960              ;
  10+ 8960              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 8960              ;
  12+ 8960              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 8960
  14+ 8960 00 00 00...  Numeros_aleatorios ds 7
  15+ 8967
  16+ 8967 00 00 00...  Tabla_de_pintado ds 27
  17+ 8982
  18+ 8982              ;	db 0, defw 0
  19+ 8982              ;	db 0, defw 0
  20+ 8982              ;	db 0, defw 0
  21+ 8982              ;	db 0, defw 0
  22+ 8982              ;	db 0, defw 0
  23+ 8982              ;	db 0, defw 0
  24+ 8982              ;	db 0, defw 0
  25+ 8982
  26+ 8982 77 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  27+ 8984              ;	defw ...
  28+ 8984              ; 	defw ...
  29+ 8984 00 00        	defw 0
  30+ 8986
  31+ 8986 8A 89        Indice_de_disparos_Amadeus defw Disparo_1A
  32+ 8988 8F 89        	defw Disparo_2A
  33+ 898A
  34+ 898A 00 00        Disparo_1A defw 0									; Puntero objeto.
  35+ 898C 00 00        	defw 0											; Puntero de impresión.
  36+ 898E 00           	db 0											; Impacto.
  37+ 898F
  38+ 898F 00 00        Disparo_2A defw 0									; Puntero objeto.
  39+ 8991 00 00        	defw 0											; Puntero de impresión.
  40+ 8993 00           	db 0											; Impacto.
  41+ 8994
  42+ 8994 A8 89        Indice_de_disparos_entidades defw Disparo_1
  43+ 8996 AD 89        	defw Disparo_2
  44+ 8998 B2 89        	defw Disparo_3
  45+ 899A B7 89        	defw Disparo_4
  46+ 899C BC 89        	defw Disparo_5
  47+ 899E C1 89        	defw Disparo_6
  48+ 89A0 C6 89        	defw Disparo_7
  49+ 89A2 CB 89        	defw Disparo_8
  50+ 89A4 D0 89        	defw Disparo_9
  51+ 89A6 D5 89        	defw Disparo_10
  52+ 89A8
  53+ 89A8 00 00        Disparo_1 defw 0									; Puntero objeto.
  54+ 89AA 00 00        	defw 0											; Puntero de impresión.
  55+ 89AC 00           	db 0											; Control.
  56+ 89AD
  57+ 89AD 00 00        Disparo_2 defw 0									; Puntero objeto.
  58+ 89AF 00 00        	defw 0											; Puntero de impresión.
  59+ 89B1 00           	db 0											; Control.
  60+ 89B2
  61+ 89B2 00 00        Disparo_3 defw 0									; Puntero objeto.
  62+ 89B4 00 00        	defw 0											; Puntero de impresión.
  63+ 89B6 00           	db 0											; Control.
  64+ 89B7
  65+ 89B7 00 00        Disparo_4 defw 0									; Puntero objeto.
  66+ 89B9 00 00        	defw 0											; Puntero de impresión.
  67+ 89BB 00           	db 0											; Control.
  68+ 89BC
  69+ 89BC 00 00        Disparo_5 defw 0									; Puntero objeto.
  70+ 89BE 00 00        	defw 0											; Puntero de impresión.
  71+ 89C0 00           	db 0											; Control.
  72+ 89C1
  73+ 89C1 00 00        Disparo_6 defw 0									; Puntero objeto.
  74+ 89C3 00 00        	defw 0											; Puntero de impresión.
  75+ 89C5 00           	db 0											; Control.
  76+ 89C6
  77+ 89C6 00 00        Disparo_7 defw 0									; Puntero objeto.
  78+ 89C8 00 00        	defw 0											; Puntero de impresión.
  79+ 89CA 00           	db 0											; Control.
  80+ 89CB
  81+ 89CB 00 00        Disparo_8 defw 0									; Puntero objeto.
  82+ 89CD 00 00        	defw 0											; Puntero de impresión.
  83+ 89CF 00           	db 0											; Control.
  84+ 89D0
  85+ 89D0 00 00        Disparo_9 defw 0									; Puntero objeto.
  86+ 89D2 00 00        	defw 0											; Puntero de impresión.
  87+ 89D4 00           	db 0											; Control.
  88+ 89D5
  89+ 89D5 00 00        Disparo_10 defw 0									; Puntero objeto.
  90+ 89D7 00 00        	defw 0											; Puntero de impresión.
  91+ 89D9 00           	db 0											; Control.
  92+ 89DA
  93+ 89DA              ; -------------------------------------------------------------------------------------
  94+ 89DA              ;
  95+ 89DA              ;	Índice de cajas de entidades.
  96+ 89DA              ;
  97+ 89DA              ;	18/1/24
  98+ 89DA              ;
  99+ 89DA
 100+ 89DA              Indice_de_cajas_de_entidades
 101+ 89DA
 102+ 89DA F8 89        	defw Caja_1
 103+ 89DC 04 8A        	defw Caja_2
 104+ 89DE 10 8A        	defw Caja_3
 105+ 89E0 1C 8A        	defw Caja_4
 106+ 89E2 28 8A        	defw Caja_5
 107+ 89E4 34 8A        	defw Caja_6
 108+ 89E6 40 8A        	defw Caja_7
 109+ 89E8
 110+ 89E8 00 00        	defw 0
 111+ 89EA 00 00        	defw 0
 112+ 89EC
 113+ 89EC              ; -------------------------
 114+ 89EC
 115+ 89EC              ; Relleno para que no se corrompa el movimiento. ?????
 116+ 89EC
 117+ 89EC              ;	db 0
 118+ 89EC
 119+ 89EC              ; ---------- ---------- ---------- ---------- ----------
 120+ 89EC              ;
 121+ 89EC              ;	28/05/24
 122+ 89EC              ;
 123+ 89EC              ; 	Cada caja tiene 14 bytes !!!
 124+ 89EC              ;
 125+ 89EC              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 126+ 89EC
 127+ 89EC 00           Amadeus_BOX db 0										; (Tipo).
 128+ 89ED 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 129+ 89EF 00           	db 0												; (Contador_de_vueltas).
 130+ 89F0 00           Impacto_Amadeus	db 0									; (Impacto).
 131+ 89F1 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 132+ 89F3 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 133+ 89F5 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 134+ 89F7 00           	db 0												; (Velocidad).
 135+ 89F8
 136+ 89F8              ; ---------- ---------- ---------- ---------- ----------
 137+ 89F8              ;
 138+ 89F8              ;	22/01/24
 139+ 89F8              ;
 140+ 89F8              ; 	Cada caja tiene 12 bytes !!!
 141+ 89F8
 142+ 89F8 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 143+ 89FB 00           	db 0												; (Contador_de_vueltas).
 144+ 89FC 00           	db 0												; (Impacto).
 145+ 89FD 00 00        	defw 0												; (Puntero_de_impresion).
 146+ 89FF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 147+ 8A01 00 00        	defw 0 												; (Contador_de_mov_masticados).
 148+ 8A03 00           	db 0												; (Velocidad).
 149+ 8A04
 150+ 8A04              ; ---------- ---------- ---------- ---------- ----------
 151+ 8A04
 152+ 8A04 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 153+ 8A07 00           	db 0 												; (Contador_de_vueltas).
 154+ 8A08 00           	db 0												; (Impacto).
 155+ 8A09 00 00        	defw 0												; (Puntero_de_impresion).
 156+ 8A0B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 157+ 8A0D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 158+ 8A0F 00           	db 0												; (Velocidad).
 159+ 8A10
 160+ 8A10              ; ---------- ---------- ---------- ---------- ----------
 161+ 8A10
 162+ 8A10 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 163+ 8A13 00           	db 0 												; (Contador_de_vueltas).
 164+ 8A14 00           	db 0												; (Impacto).
 165+ 8A15 00 00        	defw 0												; (Puntero_de_impresion).
 166+ 8A17 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 167+ 8A19 00 00        	defw 0 												; (Contador_de_mov_masticados).
 168+ 8A1B 00           	db 0												; (Velocidad).
 169+ 8A1C
 170+ 8A1C              ; ---------- ---------- ---------- ---------- ----------
 171+ 8A1C
 172+ 8A1C 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 173+ 8A1F 00           	db 0 												; (Contador_de_vueltas).
 174+ 8A20 00           	db 0												; (Impacto).
 175+ 8A21 00 00        	defw 0												; (Puntero_de_impresion).
 176+ 8A23 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 177+ 8A25 00 00        	defw 0 												; (Contador_de_mov_masticados).
 178+ 8A27 00           	db 0												; (Velocidad).
 179+ 8A28
 180+ 8A28              ; ---------- ---------- ---------- ---------- ----------
 181+ 8A28
 182+ 8A28 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8A2B 00           	db 0 												; (Contador_de_vueltas).
 184+ 8A2C 00           	db 0												; (Impacto).
 185+ 8A2D 00 00        	defw 0												; (Puntero_de_impresion).
 186+ 8A2F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 187+ 8A31 00 00        	defw 0 												; (Contador_de_mov_masticados).
 188+ 8A33 00           	db 0												; (Velocidad).
 189+ 8A34
 190+ 8A34              ; ---------- ---------- ---------- ---------- ----------
 191+ 8A34
 192+ 8A34 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 193+ 8A37 00           	db 0 												; (Contador_de_vueltas).
 194+ 8A38 00           	db 0												; (Impacto).
 195+ 8A39 00 00        	defw 0												; (Puntero_de_impresion).
 196+ 8A3B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 197+ 8A3D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 198+ 8A3F 00           	db 0												; (Velocidad).
 199+ 8A40
 200+ 8A40              ; ---------- ---------- ---------- ---------- ----------
 201+ 8A40
 202+ 8A40 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 203+ 8A43 00           	db 0 												; (Contador_de_vueltas).
 204+ 8A44 00           	db 0												; (Impacto).
 205+ 8A45 00 00        	defw 0												; (Puntero_de_impresion).
 206+ 8A47 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 207+ 8A49 00 00        	defw 0 												; (Contador_de_mov_masticados).
 208+ 8A4B 00           	db 0												; (Velocidad).
 209+ 8A4C
 210+ 8A4C              ; -------------------------------------------------------------------------------------
 211+ 8A4C              ;
 212+ 8A4C              ;	11/1/24
 213+ 8A4C              ;
 214+ 8A4C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 215+ 8A4C              ;
 216+ 8A4C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 217+ 8A4C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 218+ 8A4C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 219+ 8A4C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 220+ 8A4C
 221+ 8A4C              Indice_de_definiciones_de_entidades
 222+ 8A4C
 223+ 8A4C 50 8A        	defw Entidad_1
 224+ 8A4E 5D 8A        	defw Entidad_2
 225+ 8A50
 226+ 8A50              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 227+ 8A50
 228+ 8A50              ;	BADSAT, (Satélite malvado).
 229+ 8A50
 230+ 8A50 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 231+ 8A53 01           	db 1												; (Contador_de_vueltas).
 232+ 8A54 90 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 233+ 8A56 D0 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 234+ 8A58 03 40        	defw $4003	                                     	; (Posicion_inicio).
 235+ 8A5A 01           	db 1												; (Cuad_objeto).
 236+ 8A5B 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 237+ 8A5D
 238+ 8A5D 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 239+ 8A60 01           	db 1												; (Contador_de_vueltas).
 240+ 8A61 90 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 241+ 8A63 D0 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 242+ 8A65 40 50        	defw $5040                                      	; (Posicion_inicio).
 243+ 8A67 01           	db 1												; (Cuad_objeto).
 244+ 8A68 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 245+ 8A6A
 246+ 8A6A              ; -------------------------------------------------------------------------------------
 247+ 8A6A              ;
 248+ 8A6A              ;	28/05/24
 249+ 8A6A              ;
 250+ 8A6A              ;	Definición de Amadeus.
 251+ 8A6A              ;
 252+ 8A6A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 253+ 8A6A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 254+ 8A6A
 255+ 8A6A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 256+ 8A6D 00           	db 0												; (Contador_de_vueltas).
 257+ 8A6E 30 87        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 258+ 8A70 40 87        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 259+ 8A72 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 260+ 8A74 03           	db 3												; (Cuad_objeto).
 261+ 8A75 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 143  8A77              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A77
   2+ 8A77
   3+ 8A77              ;   07/07/23
   4+ 8A77              ;
   5+ 8A77              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A77              ;
   7+ 8A77              ;   Codificación:
   8+ 8A77              ;
   9+ 8A77              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A77              ;
  11+ 8A77              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A77              ;
  13+ 8A77              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A77              ;
  15+ 8A77              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A77              ;
  17+ 8A77              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A77              ;                               ..... %01000010 Vel_up 4
  19+ 8A77              ;                                               Vel_down 2
  20+ 8A77              ;                               ..... $42
  21+ 8A77              ;
  22+ 8A77              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A77              ;
  24+ 8A77              ;                               ..... %01000010 Vel_left 4
  25+ 8A77              ;                                               Vel_right 2
  26+ 8A77              ;                               ..... $42
  27+ 8A77              ;
  28+ 8A77              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A77              ;
  30+ 8A77              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A77              ;
  32+ 8A77              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A77              ;
  34+ 8A77              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A77              ;                                     $53
  36+ 8A77              ;
  37+ 8A77              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A77              ;
  39+ 8A77              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A77              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A77              ;
  42+ 8A77              ;                       Arriba ..... $81
  43+ 8A77              ;                       Arriba - izquierda ..... $a1
  44+ 8A77              ;                       Arriba - derecha ..... $91
  45+ 8A77              ;
  46+ 8A77              ;                       Abajo ..... $41
  47+ 8A77              ;                       Abajo - izquierda ..... $61
  48+ 8A77              ;                       Abajo - derecha ..... $51
  49+ 8A77              ;
  50+ 8A77              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A77              ;
  52+ 8A77              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A77              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A77              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A77              ;
  56+ 8A77              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A77              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A77              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A77              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A77              ;
  61+ 8A77              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A77              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A77              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A77              ;
  65+ 8A77              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A77              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A77              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A77              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A77
  70+ 8A77              ; ----- ----- ----- ----- -----
  71+ 8A77
  72+ 8A77 A3 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A79 AB 8A            defw F_1
  74+ 8A7B B5 8A            defw F_2
  75+ 8A7D BF 8A            defw Codo_abajo_derecha
  76+ 8A7F F3 8A            defw Derecha_y_subiendo
  77+ 8A81 FD 8A            defw Derecha_y_subiendo_1
  78+ 8A83 07 8B            defw F_3
  79+ 8A85 11 8B            defw F_4
  80+ 8A87 1B 8B            defw Derecha_y_bajando
  81+ 8A89 25 8B            defw Derecha_y_bajando_1
  82+ 8A8B 2F 8B            defw Derecha_y_bajando_2
  83+ 8A8D 39 8B            defw Codo_derecha_abajo
  84+ 8A8F 69 8B            defw Codo_abajo_izq.
  85+ 8A91 9D 8B            defw Izquierda_y_subiendo
  86+ 8A93 A7 8B            defw Izquierda_y_subiendo_1
  87+ 8A95 B1 8B            defw F_5
  88+ 8A97 BB 8B            defw F_6
  89+ 8A99 C5 8B            defw Izquierda_y_bajando
  90+ 8A9B CF 8B            defw Izquierda_y_bajando_1
  91+ 8A9D D9 8B            defw Izquierda_y_bajando_2
  92+ 8A9F E3 8B            defw Codo_izquierda_abajo
  93+ 8AA1 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8AA3
  95+ 8AA3 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8AA7 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8AAB
  98+ 8AAB 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8AAF 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8AB3 08 00
 100+ 8AB5
 101+ 8AB5 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8AB9 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8ABD 0F FE
 103+ 8ABF
 104+ 8ABF 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8AC3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8AC7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8ACB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8ACF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8AD3 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8AD7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8ADB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8ADF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AE3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AE7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AEB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AEF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AF3
 118+ 8AF3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AF7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8AFB 06 00
 120+ 8AFD
 121+ 8AFD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8B01 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8B05 02 00
 123+ 8B07
 124+ 8B07 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8B0B 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8B0F 04 00
 126+ 8B11
 127+ 8B11 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8B15 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8B19 08 00
 129+ 8B1B
 130+ 8B1B 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8B1F 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8B23 02 00
 132+ 8B25
 133+ 8B25 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8B29 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8B2D 06 00
 135+ 8B2F
 136+ 8B2F 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8B33 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8B37 06 00
 138+ 8B39
 139+ 8B39              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8B39
 141+ 8B39 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8B3D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B41 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B45 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B49 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B4D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B51 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B55 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B59 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B5D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B61 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B65 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B69
 154+ 8B69 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B6D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B71 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B75 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B79 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B7D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B81 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B85 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B89 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B8D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B91 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B95 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B99 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B9D
 168+ 8B9D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8BA1 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8BA5 06 00
 170+ 8BA7
 171+ 8BA7 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8BAB 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8BAF 02 00
 173+ 8BB1
 174+ 8BB1 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8BB5 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8BB9 04 00
 176+ 8BBB
 177+ 8BBB 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8BBF 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8BC3 08 00
 179+ 8BC5
 180+ 8BC5 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8BC9 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8BCD 02 00
 182+ 8BCF
 183+ 8BCF 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8BD3 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8BD7 06 00
 185+ 8BD9
 186+ 8BD9 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8BDD 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BE1 06 00
 188+ 8BE3
 189+ 8BE3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BE7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BEB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BEF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BF3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BF7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BFB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BFF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8C03 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8C07 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8C0B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8C0F 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8C13
 202+ 8C13
 203+ 8C13
 204+ 8C13
 205+ 8C13
 206+ 8C13
 207+ 8C13
 208+ 8C13
 209+ 8C13
 210+ 8C13
# file closed: Patrones_de_mov.asm
 144  8C13              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8C13              ; 19/1/24
   2+ 8C13
   3+ 8C13              Indice_de_niveles
   4+ 8C13
   5+ 8C13 1B 8C        	defw Nivel_1
   6+ 8C15 26 8C        	defw Nivel_2
   7+ 8C17
   8+ 8C17              ;	...
   9+ 8C17              ;	...
  10+ 8C17              ;	+ Niveles ...
  11+ 8C17
  12+ 8C17 00 00        	defw 0
  13+ 8C19 00 00        	defw 0
  14+ 8C1B
  15+ 8C1B 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8C1C 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8C20 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8C24 01 01
  18+ 8C26
  19+ 8C26 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8C27 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8C2B 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8C2F 01 02
  22+ 8C31 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8C35 01 02
  23+ 8C37
# file closed: Niveles.asm
 145  8C37
 146  8C37              ; --------------------------------------------------------------------------------
 147  8C37              ;
 148  8C37              ; 12/05/24
 149  8C37              ;
 150  8C37              ; Parámetros DRAW.
 151  8C37              ;
 152  8C37
 153  8C37              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 154  8C37
 155  8C37 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 156  8C38              ;															- Patrón de movimiento.
 157  8C38 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  8C39 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  8C3A
 160  8C3A 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 161  8C3B              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 162  8C3B
 163  8C3B              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 164  8C3B              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 165  8C3B              ; Ejemplos.
 166  8C3B
 167  8C3B              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 168  8C3B              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 169  8C3B              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 170  8C3B              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 171  8C3B              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 172  8C3B
 173  8C3B 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 174  8C3C              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 175  8C3C              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 176  8C3C
 177  8C3C 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 178  8C3E              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 179  8C3E
 180  8C3E 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 181  8C40
 182  8C40              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 183  8C40              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 184  8C40
 185  8C40 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 186  8C42              ;														; _palabras que componen el "movimiento_masticado".
 187  8C42
 188  8C42              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  8C42
 190  8C42 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 191  8C43              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 192  8C43              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 193  8C43              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 194  8C43              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 195  8C43
 196  8C43 00           Ctrl_2 db 0
 197  8C44              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 198  8C44              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 199  8C44              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 200  8C44              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 201  8C44              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 202  8C44              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 203  8C44              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 204  8C44              ;
 205  8C44              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 206  8C44              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 207  8C44              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 208  8C44              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 209  8C44              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 210  8C44              ;														BIT 4, ???
 211  8C44              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 212  8C44
 213  8C44 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 214  8C45              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 215  8C45              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 216  8C45              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 217  8C45              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 218  8C45              ;
 219  8C45              ; 														DESCRIPCIÖN:
 220  8C45              ;
 221  8C45              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 222  8C45              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 223  8C45              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 224  8C45              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 225  8C45              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 226  8C45              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 227  8C45              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 228  8C45              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 229  8C45              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 230  8C45              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 231  8C45              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 232  8C45              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 233  8C45              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 234  8C45              ;
 235  8C45              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 236  8C45              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 237  8C45              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 238  8C45
 239  8C45              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 240  8C45
 241  8C45 00           Filas db 0												; Filas. [DRAW]
 242  8C46 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 243  8C47 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 244  8C49 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 245  8C4B
 246  8C4B              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 247  8C4B
 248  8C4B 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 249  8C4C              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 250  8C4C              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 251  8C4C
 252  8C4C              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 253  8C4C
 254  8C4C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 255  8C4C              ;
 256  8C4C              ;	COLORES: 0 ..... NEGRO
 257  8C4C              ;    		 1 ..... AZUL
 258  8C4C              ; 			 2 ..... ROJO
 259  8C4C              ;			 3 ..... MAGENTA
 260  8C4C              ; 			 4 ..... VERDE
 261  8C4C              ; 			 5 ..... CIAN
 262  8C4C              ;			 6 ..... AMARILLO
 263  8C4C              ; 			 7 ..... BLANCO
 264  8C4C
 265  8C4C 00 00        Indice_Sprite_der defw 0
 266  8C4E 00 00        Indice_Sprite_izq defw 0
 267  8C50 00 00        Puntero_DESPLZ_der defw 0
 268  8C52 00 00        Puntero_DESPLZ_izq defw 0
 269  8C54
 270  8C54 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 271  8C56 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 272  8C57 00           Columnas db 0
 273  8C58 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 274  8C5A              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8C5A 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 276  8C5B
 277  8C5B              ; variables de control general.
 278  8C5B
 279  8C5B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 280  8C5C
 281  8C5C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 282  8C5C
 283  8C5C              Perfiles_de_velocidad
 284  8C5C
 285  8C5C 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 286  8C5D 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 287  8C5E 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 288  8C5F 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 289  8C60
 290  8C60              ; Contadores de 16 bits.
 291  8C60
 292  8C60 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 293  8C62 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 294  8C64 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 295  8C66 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 296  8C68
 297  8C68              ; Movimiento. ------------------------------------------------------------------------------------------------------
 298  8C68
 299  8C68 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 300  8C6A 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 301  8C6C 00 00        Puntero_indice_mov_bucle defw 0							;
 302  8C6E              ;
 303  8C6E              ;
 304  8C6E 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 305  8C6F              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 306  8C6F              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 307  8C6F 00           Incrementa_puntero_backup db 0
 308  8C70 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 309  8C71              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 310  8C71 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 311  8C72 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 312  8C73 00           Cola_de_desplazamiento db 0								; Este byte indica:
 313  8C74              ;
 314  8C74              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 315  8C74              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 316  8C74              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 317  8C74              ;
 318  8C74              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 319  8C74              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 320  8C74              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 321  8C74              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 322  8C74              ;
 323  8C74              ;														;	"$ff" ..... Bucle infinito de repetición.
 324  8C74              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 325  8C74              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 326  8C74
 327  8C74 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 328  8C75
 329  8C75              ;														DESCRIPCIÓN:
 330  8C75              ;
 331  8C75              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 332  8C75              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 333  8C75              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 334  8C75              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 335  8C75              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 336  8C75              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 337  8C75
 338  8C75              ;														BIT 3, Recarga de nueva oleada.
 339  8C75              ;														BIT 4, Recarga de nueva oleada.
 340  8C75              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 341  8C75              ;														BIT 6, **** Frame completo.
 342  8C75              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 343  8C75
 344  8C75 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 345  8C77              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 346  8C77              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 347  8C77              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 348  8C77
 349  8C77              ; Gestión de ENTIDADES y CAJAS.
 350  8C77
 351  8C77 00 00        Puntero_store_caja defw 0
 352  8C79 00 00        Puntero_restore_caja defw 0
 353  8C7B 00 00        Indice_restore_caja defw 0
 354  8C7D 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 355  8C7E 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 356  8C7F 00           Entidades_en_curso db 0									; ..... ..... .....
 357  8C80              ;Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 358  8C80              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 359  8C80              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 360  8C80              ;														; _ (Numero_de_malotes)="0".
 361  8C80 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C82 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C84              ;														; _ puntero (Indice_entidades).
 364  8C84
 365  8C84              ;---------------------------------------------------------------------------------------------------------------
 366  8C84              ;
 367  8C84              ;	12/08/24
 368  8C84              ;
 369  8C84              ;	Álbumes.
 370  8C84
 371  8C84 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C86              ;														; _variable para almacenar lo posición del puntero_
 373  8C86              ; 														; _de pila, SP.
 374  8C86 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C88              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C88
 377  8C88              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C88
 379  8C88 00 00        Album_de_pintado defw 0
 380  8C8A 00 00        Album_de_borrado defw 0
 381  8C8C 00 00        Album_de_pintado_Amadeus defw 0
 382  8C8E 00 00        Album_de_borrado_Amadeus defw 0
 383  8C90 00 00        Album_de_pintado_disparos_Amadeus defw 0
 384  8C92 00 00        Album_de_borrado_disparos_Amadeus defw 0
 385  8C94 00 00        Album_de_pintado_disparos_entidades defw 0
 386  8C96 00 00        Album_de_borrado_disparos_entidades defw 0
 387  8C98
 388  8C98 00 00        Techo_Scanlines_album defw 0
 389  8C9A 00 00        Techo_Scanlines_album_2 defw 0
 390  8C9C 00           Switch db 0
 391  8C9D 00 00        Techo defw 0
 392  8C9F 00 00        Scanlines_album_SP defw 0
 393  8CA1 67 89        India_SP defw Tabla_de_pintado
 394  8CA3 6A 89        India_2_SP defw Tabla_de_pintado+3
 395  8CA5
 396  8CA5 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 397  8CA6              ;
 398  8CA6              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 399  8CA6              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 400  8CA6              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 401  8CA6              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 402  8CA6              ;																Habilita el borrado/pintado de sprites.
 403  8CA6              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 404  8CA6              ;																_ a la baja.
 405  8CA6              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 406  8CA6              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 407  8CA6              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 408  8CA6              ; 																_ el último frame de la explosión de nuestra nave.
 409  8CA6              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 410  8CA6              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 411  8CA6
 412  8CA6 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 413  8CA7              ;
 414  8CA7              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 415  8CA7              ;
 416  8CA7              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 417  8CA7              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 418  8CA7              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 419  8CA7              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 420  8CA7              ;
 421  8CA7              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 422  8CA7              ;															_ masticados ya generados.
 423  8CA7              ;
 424  8CA7              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 425  8CA7              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 426  8CA7              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 427  8CA7              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 428  8CA7
 429  8CA7
 430  8CA7              ; Gestión de Disparos.
 431  8CA7
 432  8CA7              ;Numero_de_disparotes db 0
 433  8CA7
 434  8CA7 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 435  8CA9 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 436  8CAB
 437  8CAB 00           Impacto2 db 0											; Byte de control de impactos.
 438  8CAC
 439  8CAC              ;
 440  8CAC              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8CAC              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8CAC              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8CAC              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8CAC
 445  8CAC
 446  8CAC
 447  8CAC
 448  8CAC
 449  8CAC
 450  8CAC
 451  8CAC 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8CAE              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8CAE              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8CAE
 455  8CAE 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8CB0              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8CB0 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8CB3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8CB3 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8CB6              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8CB6
 462  8CB6              ;---------------------------------------------------------------------------------------------------------------
 463  8CB6
 464  8CB6              ; Relojes y temporizaciones.
 465  8CB6
 466  8CB6 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 467  8CB7 05           Clock_explosion_Amadeus db 5
 468  8CB8 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8CB9
 470  8CB9 60 89        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8CBB
 472  8CBB 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 473  8CBD 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 474  8CBE              ;														; Repite la oleada de entidades.
 475  8CBE 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 476  8CBF
 477  8CBF              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 478  8CBF              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 479  8CBF
 480  8CBF              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 481  8CBF              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 482  8CBF              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 483  8CBF
 484  8CBF              ;---------------------------------------------------------------------------------------------------------------
 485  8CBF
 486  8CBF              ; Gestión de NIVELES.
 487  8CBF
 488  8CBF 00           Nivel db 0												; Nivel actual del juego.
 489  8CC0 00 00        Puntero_indice_NIVELES defw 0
 490  8CC2 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 491  8CC4              ; 														; _ que definen el NIVEL.
 492  8CC4
 493  8CC4              ; ---------------------------------------------------------------------------------------------------------------
 494  8CC4
 495  8CC4              ; Temporizaciones Shield.
 496  8CC4
 497  8CC4 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 498  8CC8 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 499  8CCA 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 500  8CCB 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 501  8CCC 00           Shield_3 db 0
 502  8CCD
 503  8CCD 06           Lives db 6
 504  8CCE
 505  8CCE              ; 	INICIO  *************************************************************************************************************************************************************************
 506  8CCE              ;
 507  8CCE              ;	5/1/24
 508  8CCE
 509  8CCE              START
 510  8CCE
 511  8CCE 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 512  8CD1 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 513  8CD3 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 514  8CD5 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 515  8CD7 F3           	DI
 516  8CD8
 517  8CD8              ; Limpiamos pantalla.
 518  8CD8
 519  8CD8 3E 07        	ld a,%00000111
 520  8CDA              ;	call Cls
 521  8CDA CD 14 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 522  8CDD
 523  8CDD              ; INICIALIZACIÓN.
 524  8CDD
 525  8CDD 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 526  8CDF CD 61 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 527  8CE2 CD A2 8E     	call Extrae_numero_aleatorio_y_avanza
 528  8CE5
 529  8CE5 6F           	ld l,a
 530  8CE6 26 00        	ld h,0
 531  8CE8 22 BB 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 532  8CEB
 533  8CEB              ;	Inicializa 1er Nivel.
 534  8CEB
 535  8CEB 21 13 8C     	ld hl,Indice_de_niveles
 536  8CEE 22 C0 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 537  8CF1 CD 91 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 538  8CF4              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 539  8CF4              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 540  8CF4              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 541  8CF4
 542  8CF4              ;	Inicia los álbumes de líneas.
 543  8CF4
 544  8CF4 CD 57 90     	call Inicia_albumes_de_lineas
 545  8CF7              ;
 546  8CF7 CD 67 90     	call Inicia_albumes_de_lineas_Amadeus
 547  8CFA CD 74 90     	call Inicia_albumes_de_disparos
 548  8CFD
 549  8CFD
 550  8CFD CD D6 92     4 call Inicia_Entidades
 551  8D00 CD 39 93     	call Inicia_Amadeus
 552  8D03
 553  8D03              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 554  8D03              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 555  8D03              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 556  8D03
 557  8D03 11 EC 89     	ld de,Amadeus_BOX
 558  8D06 CD 8C 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 559  8D09 CD 7C 93     	call Limpiamos_bandeja_DRAW
 560  8D0C
 561  8D0C              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 562  8D0C
 563  8D0C 06 3C        	ld b,60
 564  8D0E CD 5E 9D     2 call Amadeus_a_izquierda
 565  8D11 10 FB        	djnz 2B
 566  8D13
 567  8D13 CD 35 90     	call Genera_datos_de_impresion_Amadeus
 568  8D16
 569  8D16              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 570  8D16
 571  8D16 CD 8D 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 572  8D19              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 573  8D19
 574  8D19              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 575  8D19              ; (Esto se dá cuando se inicia una nueva oleada).
 576  8D19
 577  8D19              ;	ld a,(Ctrl_1)
 578  8D19              ;	bit 3,a
 579  8D19              ;	jr nz,5F											 ; Loop
 580  8D19
 581  8D19              ;	ld de,Amadeus_db
 582  8D19              ;	call Store_Amadeus
 583  8D19
 584  8D19              ; 	INICIA DISPAROS !!!!!
 585  8D19
 586  8D19 CD A3 90     	call Inicia_Puntero_Disparo_Entidades
 587  8D1C CD AA 90     	call Inicia_Puntero_Disparo_Amadeus
 588  8D1F
 589  8D1F              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 590  8D1F
 591  8D1F              ;5 call Inicia_punteros_de_cajas
 592  8D1F              ;	call Restore_entidad
 593  8D1F
 594  8D1F              ;	ld a,(Ctrl_1)
 595  8D1F              ;	bit 3,a
 596  8D1F              ;	jr z,6F
 597  8D1F
 598  8D1F              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 599  8D1F
 600  8D1F              ;	ld hl,Ctrl_1
 601  8D1F              ;	res 3,(hl)
 602  8D1F              ;	jr Main
 603  8D1F
 604  8D1F              ; Damos por concluida la construcción del FRAME.
 605  8D1F              ;
 606  8D1F
 607  8D1F CD 1F 91     	call Inicia_Shield
 608  8D22
 609  8D22
 610  8D22 2A 9F 8C     6 ld hl,(Scanlines_album_SP)
 611  8D25 22 98 8C     	ld (Techo_Scanlines_album),hl
 612  8D28
 613  8D28 2A 8A 8C     	ld hl,(Album_de_borrado)
 614  8D2B 22 9F 8C     	ld (Scanlines_album_SP),hl
 615  8D2E
 616  8D2E 21 67 89     	ld hl,Tabla_de_pintado
 617  8D31 22 A1 8C     	ld (India_SP),hl
 618  8D34
 619  8D34 21 A5 8C     	ld hl,Ctrl_3
 620  8D37 CB C6        	set 0,(hl) 											; Indica Frame completo.
 621  8D39 CB D6        	set 2,(hl)
 622  8D3B CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 623  8D3D
 624  8D3D FB           	ei 													; Ha de apuntar a $5c3a.
 625  8D3E
 626  8D3E 76           	halt
 627  8D3F
 628  8D3F              ; ------------------------------------
 629  8D3F
 630  8D3F              Main
 631  8D3F              ;
 632  8D3F              ; 13/05/24
 633  8D3F
 634  8D3F              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 635  8D3F              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 636  8D3F              ; Este hecho lo indica el bit2 de (Impacto2).
 637  8D3F
 638  8D3F CD 52 A0     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 639  8D42
 640  8D42 2A BB 8C     16 ld hl,(Clock_next_entity)
 641  8D45 ED 4B 78 5C  	ld bc,(FRAMES)
 642  8D49 A7           	and a
 643  8D4A ED 42        	sbc hl,bc
 644  8D4C 20 16        	jr nz,13F
 645  8D4E
 646  8D4E              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 647  8D4E              ; _ (Clock_next_entity) para la siguiente entidad.
 648  8D4E
 649  8D4E 3A 7E 8C     21 ld a,(Numero_parcial_de_entidades)
 650  8D51 47           	ld b,a
 651  8D52 3A 7F 8C     	ld a,(Entidades_en_curso)
 652  8D55 B8           	cp b
 653  8D56 28 0C        	jr z,13F
 654  8D58 30 0A        	jr nc,13F
 655  8D5A
 656  8D5A 3C           	inc a
 657  8D5B 32 7F 8C     	ld (Entidades_en_curso),a
 658  8D5E
 659  8D5E              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 660  8D5E
 661  8D5E CD A2 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 662  8D61 CD BE 8E     	call Define_Clock_next_entity
 663  8D64
 664  8D64              ; -------------------------------------------------------------------------------------------------------------
 665  8D64
 666  8D64              ; Habilita disparos.
 667  8D64
 668  8D64              13
 669  8D64
 670  8D64              ;	ld hl,Disparo_Amadeus
 671  8D64              ;	ld de,CLOCK_repone_disparo_Amadeus
 672  8D64              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 673  8D64
 674  8D64              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 675  8D64              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 676  8D64              ;	call Habilita_disparos
 677  8D64
 678  8D64              ; COLISIONES.
 679  8D64
 680  8D64              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 681  8D64
 682  8D64              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 683  8D64              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 684  8D64              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 685  8D64
 686  8D64              ;	xor a
 687  8D64              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 688  8D64
 689  8D64              ;	call Inicia_punteros_de_cajas
 690  8D64              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 691  8D64              ; 														; _ en DRAW.
 692  8D64
 693  8D64              ;	ld a,(Filas)
 694  8D64              ;	and a
 695  8D64              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 696  8D64              ;	call Incrementa_punteros_de_cajas
 697  8D64              ;	jr 12B
 698  8D64
 699  8D64              ; ---------------------------------------------------------------------------------------
 700  8D64
 701  8D64              ;10 ld a,(Numero_parcial_de_entidades)
 702  8D64              ;    ld b,a
 703  8D64              ;	and a
 704  8D64              ;	jr nz,11F
 705  8D64
 706  8D64              ;	ld hl,Ctrl_1;
 707  8D64              ;	bit 4,(hl)
 708  8D64              ;	jp nz,16F
 709  8D64
 710  8D64              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 711  8D64
 712  8D64              ;	ld hl,Ctrl_1
 713  8D64              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 714  8D64
 715  8D64              ;	ld a,(Contador_de_frames)
 716  8D64              ;	inc a
 717  8D64              ;	ld (Activa_recarga_cajas),a
 718  8D64
 719  8D64              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 720  8D64
 721  8D64 3A 7F 8C     11 ld a,(Entidades_en_curso)
 722  8D67 A7           	and a
 723  8D68 CA D0 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 724  8D6B 47           	ld b,a												; No hay entidades que gestionar.
 725  8D6C
 726  8D6C              ; ( Código que ejecutamos con cada entidad: ).
 727  8D6C
 728  8D6C              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 729  8D6C              ;
 730  8D6C              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 731  8D6C
 732  8D6C 21 67 89     	ld hl,Tabla_de_pintado
 733  8D6F 22 A1 8C     	ld (India_SP),hl
 734  8D72
 735  8D72 21 A5 8C     	ld hl,Ctrl_3
 736  8D75 CB D6        	set 2,(hl)
 737  8D77 CD 77 8E     	call Change
 738  8D7A
 739  8D7A C5           15 push bc 												; Nº de entidades en curso.
 740  8D7B
 741  8D7B CD EC 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 742  8D7E ED 5B 9F 8C  	ld de,(Scanlines_album_SP)
 743  8D82
 744  8D82              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 745  8D82
 746  8D82              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 747  8D82
 748  8D82 3A 3B 8C     	ld a,(Impacto)
 749  8D85 A7           	and a
 750  8D86 28 13        	jr z,8F
 751  8D88
 752  8D88              ; 5/7/24
 753  8D88              ; Nota importante:
 754  8D88              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 755  8D88              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 756  8D88              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 757  8D88
 758  8D88 3A A5 8C     	ld a,(Ctrl_3)
 759  8D8B CB 7F        	bit 7,a
 760  8D8D 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 761  8D8F              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 762  8D8F 3A F0 89     	ld a,(Impacto_Amadeus)
 763  8D92 A7           	and a
 764  8D93 C4 FC 91     	call nz,Genera_explosion
 765  8D96 20 1B        	jr nz,Gestiona_siguiente_entidad
 766  8D98
 767  8D98              ; Falsa colisión !!!
 768  8D98
 769  8D98 32 3B 8C     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 770  8D9B
 771  8D9B              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 772  8D9B              ;	set 1,(hl)
 773  8D9B              ;	jr 7F
 774  8D9B
 775  8D9B              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 776  8D9B              ; _con las coordenadas de la entidad almacenada en DRAW.
 777  8D9B
 778  8D9B              ;	ld a,(Ctrl_1)
 779  8D9B              ;	bit 2,a
 780  8D9B              ;	jr z,7F
 781  8D9B
 782  8D9B              ;	ld hl,(Coordenadas_disparo_certero)
 783  8D9B              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 784  8D9B              ;														; E contiene la coordenada_X del disparo.
 785  8D9B              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 786  8D9B              ;														; H FILA, (Coordenada_y de la entidad).
 787  8D9B              ;	and a
 788  8D9B              ;	sbc hl,de
 789  8D9B
 790  8D9B              ;	call Determina_resultado_comparativa
 791  8D9B
 792  8D9B              ;	ld a,b
 793  8D9B              ;	and a
 794  8D9B              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 795  8D9B
 796  8D9B              ; ----- ----- -----
 797  8D9B
 798  8D9B              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 799  8D9B              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 800  8D9B
 801  8D9B              ;	ld hl,Ctrl_1
 802  8D9B              ;	res 2,(hl)
 803  8D9B
 804  8D9B              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 805  8D9B
 806  8D9B              ;	ld a,(Ctrl_0)
 807  8D9B              ;	bit 4,a
 808  8D9B              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 809  8D9B
 810  8D9B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 811  8D9B              ; [[[
 812  8D9B              ;	call Detecta_disparo_entidad
 813  8D9B              ; ]]]
 814  8D9B
 815  8D9B              ;	dec a
 816  8D9B              ;	ld (Impacto),a
 817  8D9B
 818  8D9B              ; Existe "Entidad_guía" ???.
 819  8D9B              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 820  8D9B
 821  8D9B              ;	ld a,(Ctrl_3)
 822  8D9B              ;	bit 1,a
 823  8D9B              ;	jr nz,22F
 824  8D9B
 825  8D9B              ; Almacén de "Movimientos_masticados" lleno ???
 826  8D9B              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 827  8D9B              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 828  8D9B
 829  8D9B              ;;	ld a,(Ctrl_3)
 830  8D9B              ;;	bit 3,a
 831  8D9B              ;;	jr nz,22F
 832  8D9B
 833  8D9B              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 834  8D9B
 835  8D9B              ;	ld hl,Ctrl_2
 836  8D9B              ;	set 5,(hl)
 837  8D9B              ;	ld hl,Ctrl_3
 838  8D9B              ;	set 1,(hl)
 839  8D9B
 840  8D9B              ; -------------------------------------------
 841  8D9B
 842  8D9B CD 02 8F     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 843  8D9E CD 57 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 844  8DA1 CD EE 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 845  8DA4 CD FC 94     	call Genera_datos_de_impresion
 846  8DA7 CD 9F 93     	call Decrementa_Contador_de_mov_masticados
 847  8DAA
 848  8DAA              ; -------------------------------------------
 849  8DAA
 850  8DAA              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 851  8DAA
 852  8DAA 2A 3C 8C     	ld hl,(Puntero_de_impresion)
 853  8DAD CD D0 94     	call Genera_coordenadas
 854  8DB0
 855  8DB0 CD D0 9F     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 856  8DB3
 857  8DB3              ;	ld hl,Ctrl_0
 858  8DB3              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 859  8DB3
 860  8DB3              Gestiona_siguiente_entidad
 861  8DB3
 862  8DB3 CD 71 93      	call Store_Restore_cajas
 863  8DB6 C1           	pop bc
 864  8DB7 10 C1        	djnz 15B
 865  8DB9
 866  8DB9              ; Hemos gestionado todas las entidades.
 867  8DB9
 868  8DB9 CD 12 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 869  8DBC CD 29 8F     	call Ordena_tabla_de_impresion
 870  8DBF CD 8D 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 871  8DC2
 872  8DC2              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 873  8DC2              ; Hemos gestionado todas las unidades.
 874  8DC2              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 875  8DC2
 876  8DC2              ;	ld hl,Ctrl_1
 877  8DC2              ;	res 2,(hl)
 878  8DC2
 879  8DC2 CD D3 8E     	call Borra_diferencia
 880  8DC5
 881  8DC5 3A A5 8C     	ld a,(Ctrl_3)
 882  8DC8 CB 5F        	bit 3,a
 883  8DCA 20 04        	jr nz,Gestion_de_Amadeus
 884  8DCC
 885  8DCC EB           	ex de,hl
 886  8DCD 71           	ld (hl),c
 887  8DCE 2C           	inc l
 888  8DCF 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 889  8DD0
 890  8DD0
 891  8DD0              ;! GESTIONA AMADEUS !!!!!!!!!!
 892  8DD0
 893  8DD0              Gestion_de_Amadeus
 894  8DD0
 895  8DD0 21 A5 8C     	ld hl,Ctrl_3
 896  8DD3 CB 76        	bit 6,(hl)
 897  8DD5 28 13        	jr z,Amadeus_vivo
 898  8DD7
 899  8DD7              ; Amadeus ha sido destruido.
 900  8DD7              ; Decrementa (Temp_new_live).
 901  8DD7
 902  8DD7 21 B8 8C     	ld hl,Temp_new_live
 903  8DDA 35           	dec (hl)
 904  8DDB 20 29        	jr nz,End_frame
 905  8DDD
 906  8DDD              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 907  8DDD
 908  8DDD 21 CD 8C     	ld hl,Lives
 909  8DE0 35           	dec (hl)
 910  8DE1
 911  8DE1              ;! Fin del juego
 912  8DE1
 913  8DE1 F3           	di
 914  8DE2 28 FE        	jr z,$
 915  8DE4 FB           	ei
 916  8DE5
 917  8DE5              ; Nueva nave.
 918  8DE5
 919  8DE5 CD 1D 8E     	call Reinicia_Amadeus
 920  8DE8 18 1C        	jr End_frame
 921  8DEA
 922  8DEA              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 923  8DEA
 924  8DEA              Amadeus_vivo
 925  8DEA
 926  8DEA 3A F0 89     	ld a,(Impacto_Amadeus)
 927  8DED A7           	and a
 928  8DEE C4 2C 92     	call nz, Genera_explosion_Amadeus
 929  8DF1 20 13        	jr nz, End_frame
 930  8DF3
 931  8DF3 CD D9 91     	call Teclado
 932  8DF6
 933  8DF6 CD 0B 9F     	call Genera_datos_de_impresion_disparos_Amadeus
 934  8DF9
 935  8DF9 21 A5 8C     	ld hl,Ctrl_3
 936  8DFC CB 6E        	bit 5,(hl)
 937  8DFE 28 06        	jr z,End_frame
 938  8E00
 939  8E00              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 940  8E00
 941  8E00 CD 92 8E     	call Change_Amadeus
 942  8E03 CD 35 90     	call Genera_datos_de_impresion_Amadeus
 943  8E06
 944  8E06              End_frame
 945  8E06
 946  8E06 2A 8A 8C     	ld hl,(Album_de_borrado)
 947  8E09 22 9F 8C     	ld (Scanlines_album_SP),hl
 948  8E0C
 949  8E0C 21 A5 8C     	ld hl,Ctrl_3
 950  8E0F CB C6        	set 0,(hl) 											; Indica Frame completo.
 951  8E11 CB 9E        	res 3,(hl)
 952  8E13 CB A6        	res 4,(hl)
 953  8E15
 954  8E15 AF           	xor a
 955  8E16 D3 FE        	out ($fe),a
 956  8E18
 957  8E18 76           	halt
 958  8E19
 959  8E19              ; ----------------------------------------
 960  8E19
 961  8E19              ;	ld a,(Ctrl_1) 										; Existe Loop?
 962  8E19              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 963  8E19 CA 3F 8D     	jp z,Main
 964  8E1C
 965  8E1C              ; RECARGA DE NUEVA OLEADA.
 966  8E1C
 967  8E1C              ;	ld a,(Contador_de_frames)
 968  8E1C              ;	ld b,a
 969  8E1C              ;	ld a,(Activa_recarga_cajas)
 970  8E1C              ;	cp b
 971  8E1C              ;	jr z,20F
 972  8E1C
 973  8E1C              ;	ld hl,Ctrl_1
 974  8E1C              ;	set 4,(hl)
 975  8E1C              ;	jp Main
 976  8E1C
 977  8E1C              ;20 ld hl,Ctrl_1
 978  8E1C              ;	res 4,(hl)
 979  8E1C
 980  8E1C              ;	ld a,(Contador_de_frames)
 981  8E1C
 982  8E1C              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 983  8E1C              ;! _ IMPREDECIBLE !!!!
 984  8E1C
 985  8E1C              ;	add 10
 986  8E1C              ;	ld (Clock_next_entity),a
 987  8E1C
 988  8E1C              ;	jp 4B
 989  8E1C
 990  8E1C C9           	ret
 991  8E1D
 992  8E1D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 993  8E1D              ;
 994  8E1D              ;	16/11/23
 995  8E1D
 996  8E1D              ;;Gestiona_Amadeus
 997  8E1D
 998  8E1D              ;! Activa/desactiva impacto con Amadeus.
 999  8E1D
1000  8E1D              ;	ld a,(Impacto)
1001  8E1D              ;	and a
1002  8E1D              ;	jr nz,2F
1003  8E1D
1004  8E1D              ;;	call Mov_Amadeus
1005  8E1D
1006  8E1D              ;;2 ld a,(Ctrl_0)
1007  8E1D              ;;	bit 4,a
1008  8E1D              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
1009  8E1D
1010  8E1D              ;;	call Guarda_foto_entidad_a_pintar
1011  8E1D              ;;	call Guarda_datos_de_borrado_Amadeus
1012  8E1D
1013  8E1D              ;;1 ld hl,Ctrl_0
1014  8E1D              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
1015  8E1D
1016  8E1D              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
1017  8E1D
1018  8E1D              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
1019  8E1D
1020  8E1D              ;	call Calcula_numero_de_disparotes
1021  8E1D
1022  8E1D              ;;	ret
1023  8E1D
1024  8E1D              ; -----------------------------
1025  8E1D              ;
1026  8E1D              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
1027  8E1D              ;
1028  8E1D              ;	INPUTS: B a de estar a "0".
1029  8E1D
1030  8E1D              ;Prepara_Borra_sprites
1031  8E1D
1032  8E1D              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1033  8E1D              ;	ld a,l
1034  8E1D              ;	ret z
1035  8E1D
1036  8E1D              ;	srl a
1037  8E1D
1038  8E1D              ;2 sub 16
1039  8E1D              ;	jr z,1F
1040  8E1D              ;	inc b
1041  8E1D              ;	jr 2B
1042  8E1D
1043  8E1D              ;1 inc b
1044  8E1D
1045  8E1D              ;	exx
1046  8E1D              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1047  8E1D              ;	exx
1048  8E1D
1049  8E1D              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1050  8E1D              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1051  8E1D
1052  8E1D              ;	ret
1053  8E1D
1054  8E1D              ; --------------------------------------------------------------------------------------------------------------
1055  8E1D              ;
1056  8E1D              ;	15/12/23
1057  8E1D
1058  8E1D              ;Mov_obj
1059  8E1D
1060  8E1D              ;	ld a,(Ctrl_2)
1061  8E1D              ;	bit 1,a
1062  8E1D              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1063  8E1D
1064  8E1D              ; Explosión:
1065  8E1D
1066  8E1D              ;	ld a,(Frames_explosion)
1067  8E1D              ;	and a
1068  8E1D              ;	jr nz,4F
1069  8E1D
1070  8E1D              ;!  Una alimaña menos!!!!!!!!!1
1071  8E1D
1072  8E1D              ; Se trataba de una Entidad_guía ???
1073  8E1D
1074  8E1D              ;	ld a,(Ctrl_2)
1075  8E1D              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1076  8E1D              ;	jr z,5F
1077  8E1D
1078  8E1D              ;	ld hl,Ctrl_3
1079  8E1D              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1080  8E1D
1081  8E1D              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1082  8E1D              ;!! _generado puede ser distinto, (aletoriedad).
1083  8E1D
1084  8E1D              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1085  8E1D              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1086  8E1D              ;	dec (hl)
1087  8E1D              ;	ld hl,Entidades_en_curso
1088  8E1D              ;	dec (hl)
1089  8E1D              ;	ld hl,Numero_de_entidades
1090  8E1D              ;	dec (hl)
1091  8E1D              ;	jr 3F
1092  8E1D
1093  8E1D              ; -----
1094  8E1D
1095  8E1D              ;	`Movemos´ la explosión.
1096  8E1D
1097  8E1D              ;4 ld hl,(Puntero_DESPLZ_der)
1098  8E1D              ;	inc hl
1099  8E1D              ;	inc hl
1100  8E1D              ;	call Extrae_address
1101  8E1D              ;;	ld (Puntero_objeto),hl
1102  8E1D
1103  8E1D              ;;	ld hl,Frames_explosion
1104  8E1D              ;;	dec (hl)
1105  8E1D
1106  8E1D              ;;	ld hl,Ctrl_0
1107  8E1D              ;;	set 4,(hl);;
1108  8E1D
1109  8E1D              ;;	jr 3F
1110  8E1D
1111  8E1D              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1112  8E1D
1113  8E1D              ;2 xor a
1114  8E1D              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1115  8E1D
1116  8E1D              ; Movemos Entidades malignas.
1117  8E1D              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1118  8E1D
1119  8E1D              ;	ld a,(Ctrl_2)
1120  8E1D              ;	bit 5,a
1121  8E1D              ;	jr nz,8F
1122  8E1D
1123  8E1D              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1124  8E1D              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1125  8E1D              ;	jr 7F
1126  8E1D
1127  8E1D              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1128  8E1D
1129  8E1D              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1130  8E1D              ;	bit 4,a
1131  8E1D              ;	ret z
1132  8E1D
1133  8E1D              ; Ha habido desplazamiento de la entidad maligna.
1134  8E1D              ; Ha llegado a zona de AMADEUS ???
1135  8E1D
1136  8E1D              ;7 ld a,(Coordenada_y)
1137  8E1D              ;	cp $14
1138  8E1D              ;	jr c,1F
1139  8E1D
1140  8E1D              ; ---------
1141  8E1D
1142  8E1D              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1143  8E1D              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1144  8E1D
1145  8E1D              ;	di
1146  8E1D              ;	call Genera_coordenadas_X
1147  8E1D              ;	call Compara_coordenadas_X
1148  8E1D              ;	ei
1149  8E1D
1150  8E1D              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1151  8E1D
1152  8E1D              ; ---------
1153  8E1D
1154  8E1D              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1155  8E1D              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1156  8E1D              ;	call Limpia_Variables_de_borrado
1157  8E1D
1158  8E1D              ;3 ret
1159  8E1D
1160  8E1D              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1161  8E1D              ;
1162  8E1D              ;	24/07/24
1163  8E1D
1164  8E1D              Reinicia_Amadeus
1165  8E1D
1166  8E1D              ;	Reinicia posición y estado.
1167  8E1D
1168  8E1D 21 CF 50     	ld hl,$50cf
1169  8E20 22 F1 89     	ld (p.imp.amadeus),hl
1170  8E23 21 F0 E0     	ld hl,$e0f0
1171  8E26 22 F3 89     	ld (Pamm_Amadeus),hl
1172  8E29 21 3D 00     	ld hl,$003d
1173  8E2C 22 F5 89     	ld (Comm_Amadeus),hl
1174  8E2F
1175  8E2F              ;	limpiamos el álbum de borrado.
1176  8E2F
1177  8E2F 2A 8E 8C     	ld hl,(Album_de_borrado_Amadeus)
1178  8E32
1179  8E32 AF           	xor a
1180  8E33 77           	ld (hl),a
1181  8E34
1182  8E34 E5           	push hl
1183  8E35 D1           	pop de
1184  8E36 13           	inc de
1185  8E37
1186  8E37 01 23 00     	ld bc,35
1187  8E3A ED B0        	ldir
1188  8E3C
1189  8E3C CD 35 90     	call Genera_datos_de_impresion_Amadeus
1190  8E3F
1191  8E3F              ;	Reinicia temporizaciones.
1192  8E3F
1193  8E3F CD 1F 91     	call Inicia_Shield
1194  8E42
1195  8E42 3E 5A        	ld a,90
1196  8E44 32 CA 8C     	ld (Shield),a
1197  8E47
1198  8E47 3E 64        	ld a,100
1199  8E49 32 B8 8C     	ld (Temp_new_live),a
1200  8E4C
1201  8E4C              ; 	Restauramos el FLAG: Amadeus vivo.
1202  8E4C
1203  8E4C 21 A5 8C     	ld hl,Ctrl_3
1204  8E4F CB B6        	res 6,(hl)
1205  8E51
1206  8E51              ;	Fuerza la impresión de la nave en el siguiente frame.
1207  8E51
1208  8E51 21 A5 8C      	ld hl,Ctrl_3
1209  8E54 CB EE        	set 5,(hl)
1210  8E56
1211  8E56 C9           	ret
1212  8E57
1213  8E57              ; --------------------------------------------------------------------------------------------------------------
1214  8E57              ;
1215  8E57              ;	12/05/24
1216  8E57
1217  8E57 3A 42 8C     Ajusta_velocidad_entidad ld a,(Velocidad)
1218  8E5A CB 27        	sla a
1219  8E5C 32 42 8C     	ld (Velocidad),a
1220  8E5F E6 10        	and $10
1221  8E61 C8           	ret z
1222  8E62
1223  8E62              ; Restaura (Velocidad) a razón del nº de vueltas.
1224  8E62
1225  8E62 3A 3A 8C     	ld a,(Contador_de_vueltas)
1226  8E65 CB 2F        	sra a
1227  8E67 CB 2F        	sra a
1228  8E69 32 42 8C     	ld (Velocidad),a
1229  8E6C
1230  8E6C 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1231  8E6F 23           	inc hl
1232  8E70 23           	inc hl
1233  8E71 23           	inc hl
1234  8E72 23           	inc hl
1235  8E73 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1236  8E76
1237  8E76 C9           	ret
1238  8E77
1239  8E77              ; --------------------------------------------------------------------------------------------------------------
1240  8E77              ;
1241  8E77              ;	18/06/24
1242  8E77
1243  8E77              Change
1244  8E77
1245  8E77 3A 9C 8C     	ld a,(Switch)
1246  8E7A EE 01        	xor 1
1247  8E7C 32 9C 8C     	ld (Switch),a
1248  8E7F 2A 88 8C     	ld hl,(Album_de_pintado)
1249  8E82 ED 5B 8A 8C  	ld de,(Album_de_borrado)
1250  8E86 EB           	ex de,hl
1251  8E87 22 88 8C     	ld (Album_de_pintado),hl
1252  8E8A 22 9F 8C     	ld (Scanlines_album_SP),hl
1253  8E8D ED 53 8A 8C  	ld (Album_de_borrado),de
1254  8E91 C9           	ret
1255  8E92
1256  8E92              Change_Amadeus
1257  8E92
1258  8E92 2A 8C 8C     	ld hl,(Album_de_pintado_Amadeus)
1259  8E95 ED 5B 8E 8C  	ld de,(Album_de_borrado_Amadeus)
1260  8E99 EB           	ex de,hl
1261  8E9A 22 8C 8C     	ld (Album_de_pintado_Amadeus),hl
1262  8E9D ED 53 8E 8C  	ld (Album_de_borrado_Amadeus),de
1263  8EA1 C9           	ret
1264  8EA2
1265  8EA2              ; ------------------------------------
1266  8EA2              ;
1267  8EA2              ; 1/05/24
1268  8EA2
1269  8EA2              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1270  8EA2              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1271  8EA2
1272  8EA2              ;	DESTRUYE: HL,DE,A
1273  8EA2              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1274  8EA2
1275  8EA2              ;	Variables implicadas: (RND_SP).
1276  8EA2
1277  8EA2              Extrae_numero_aleatorio_y_avanza
1278  8EA2
1279  8EA2 21 67 89     	ld hl,Tabla_de_pintado
1280  8EA5 EB           	ex de,hl
1281  8EA6 2A B9 8C     	ld hl,(RND_SP)
1282  8EA9 EB           	ex de,hl
1283  8EAA A7           	and a
1284  8EAB ED 52        	sbc hl,de
1285  8EAD
1286  8EAD 2A B9 8C     	ld hl,(RND_SP)
1287  8EB0 20 06        	jr nz,1F
1288  8EB2
1289  8EB2              ; Sitúa HL al principio de la tabla de nº aleatorios.
1290  8EB2
1291  8EB2 21 60 89     	ld hl,Numeros_aleatorios
1292  8EB5 22 B9 8C     	ld (RND_SP),HL
1293  8EB8
1294  8EB8              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1295  8EB8
1296  8EB8 7E           1 ld a,(hl)
1297  8EB9 23           	inc hl
1298  8EBA 22 B9 8C     	ld (RND_SP),hl
1299  8EBD C9           	ret
1300  8EBE
1301  8EBE              ; ------------------------------------
1302  8EBE              ;
1303  8EBE              ; 1/05/24
1304  8EBE
1305  8EBE              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1306  8EBE              ; (1 a 4 segundos).
1307  8EBE              ; Actualizamos (Clock_next_entity) con A.
1308  8EBE
1309  8EBE              ;	DESTRUYE: A y B.
1310  8EBE              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1311  8EBE              ;			 Actualiza (Clock_next_entity) con A.
1312  8EBE
1313  8EBE              ;	Variables implicadas: (Clock_next_entity).
1314  8EBE
1315  8EBE              ; Notas:
1316  8EBE
1317  8EBE              ; 	$32 1 seg.
1318  8EBE              ; 	$64 2 seg.
1319  8EBE              ; 	$96 3 seg.
1320  8EBE              ; 	$c8 4 seg.
1321  8EBE              ; 	$fa 5 seg.
1322  8EBE
1323  8EBE              ; $ffff 1310,7 seg, 22 minutos.
1324  8EBE
1325  8EBE              ;	$0100  5 seg. aproximadamente.
1326  8EBE              ;	$0200 10 seg. aproximadamente.
1327  8EBE              ;	$0300 15 seg. aproximadamente.
1328  8EBE              ;	$0400 20 seg. aproximadamente.
1329  8EBE              ;	$0500 25 seg. aproximadamente.
1330  8EBE              ;	$0600 30 seg. aproximadamente.
1331  8EBE
1332  8EBE              Define_Clock_next_entity
1333  8EBE
1334  8EBE FE 34        	cp $34
1335  8EC0 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1336  8EC2
1337  8EC2              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1338  8EC2
1339  8EC2 4F           3 ld c,a
1340  8EC3 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1341  8EC5 2A 78 5C     	ld hl,(FRAMES)
1342  8EC8 A7           	and a
1343  8EC9 ED 4A        	adc hl,bc
1344  8ECB 22 BB 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1345  8ECE C9           	ret
1346  8ECF
1347  8ECF 3E 34        1 ld a,$34
1348  8ED1 18 EF        	jr 3B
1349  8ED3
1350  8ED3              ; ------------------------------------
1351  8ED3              ;
1352  8ED3              ; 18/03/24
1353  8ED3
1354  8ED3              Borra_diferencia
1355  8ED3
1356  8ED3 ED 4B 9F 8C  	ld bc,(Scanlines_album_SP)
1357  8ED7
1358  8ED7 3A 9C 8C     	ld a,(Switch)
1359  8EDA A7           	and a
1360  8EDB 28 08        	jr z,2F
1361  8EDD
1362  8EDD 2A 9A 8C     	ld hl,(Techo_Scanlines_album_2)
1363  8EE0 11 9A 8C     	ld de,Techo_Scanlines_album_2
1364  8EE3 18 06        	jr 3F
1365  8EE5
1366  8EE5 2A 98 8C     2 ld hl,(Techo_Scanlines_album)
1367  8EE8 11 98 8C     	ld de,Techo_Scanlines_album
1368  8EEB
1369  8EEB              ; Diferencia.
1370  8EEB
1371  8EEB ED 42        3 sbc hl,bc
1372  8EED
1373  8EED C8           	ret z
1374  8EEE D8           	ret c
1375  8EEF
1376  8EEF              ; Nuevo techo, (más bajo que el anterior).
1377  8EEF              ; Fijamos nuevo techo y borramos bytes sobrantes.
1378  8EEF
1379  8EEF EB           	ex de,hl
1380  8EF0
1381  8EF0 71           	ld (hl),c
1382  8EF1 2C           	inc l
1383  8EF2 70           	ld (hl),b
1384  8EF3
1385  8EF3 AF           	xor a
1386  8EF4 43           	ld b,e
1387  8EF5
1388  8EF5 2A 9F 8C     	ld hl,(Scanlines_album_SP)
1389  8EF8
1390  8EF8 77           1 ld (hl),a
1391  8EF9 23           	inc hl
1392  8EFA 10 FC        	djnz 1B
1393  8EFC
1394  8EFC              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1395  8EFC
1396  8EFC 21 A5 8C     	ld hl,Ctrl_3
1397  8EFF CB DE        	set 3,(hl)
1398  8F01
1399  8F01 C9           	ret
1400  8F02
1401  8F02              ; --------------------------------------------------------------------------------------------------------------
1402  8F02              ;
1403  8F02              ;	26/3/24
1404  8F02
1405  8F02              Recauda_informacion_de_entidad_en_curso
1406  8F02
1407  8F02              ; Almacena la Coordenada Y de la entidad en curso.
1408  8F02
1409  8F02              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1410  8F02
1411  8F02 3A 39 8C     	ld a,(Coordenada_y)
1412  8F05 2A A1 8C     	ld hl,(India_SP)
1413  8F08 77           	ld (hl),a
1414  8F09 2C           	inc l
1415  8F0A
1416  8F0A              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1417  8F0A
1418  8F0A              ;	ld de,(Scanlines_album_SP)
1419  8F0A
1420  8F0A 73           	ld (hl),e
1421  8F0B 2C           	inc l
1422  8F0C 72           	ld (hl),d
1423  8F0D 2C           	inc l
1424  8F0E
1425  8F0E 22 A1 8C     	ld (India_SP),hl
1426  8F11
1427  8F11 C9           	ret
1428  8F12
1429  8F12              ; --------------------------------------------------------------------------------------------------------------
1430  8F12              ;
1431  8F12              ;	27/03/24
1432  8F12              ;
1433  8F12
1434  8F12              Inicializa_India_y_limpia_Tabla_de_impresion
1435  8F12
1436  8F12 2A A1 8C     	ld hl,(India_SP)
1437  8F15 01 7F 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1438  8F18
1439  8F18 79           	ld a,c
1440  8F19 95           	sub l
1441  8F1A 28 06        	jr z,2F
1442  8F1C 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1443  8F1D              ;														; _ y pasamos a inicializar (India_SP).
1444  8F1D AF           	xor a
1445  8F1E
1446  8F1E 77           1 ld (hl),a
1447  8F1F 2C           	inc l
1448  8F20 10 FC        	djnz 1B												; Limpia Tabla.
1449  8F22
1450  8F22 21 67 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1451  8F25 22 A1 8C     	ld (India_SP),hl
1452  8F28
1453  8F28 C9           	ret
1454  8F29
1455  8F29              ; --------------------------------------------------------------------------------------------------------------
1456  8F29              ;
1457  8F29              ;	31/3/24
1458  8F29
1459  8F29              Ordena_tabla_de_impresion
1460  8F29
1461  8F29              ; 5794 T/states.
1462  8F29              ; 6278 T/states.
1463  8F29              ; 5310 T/states.
1464  8F29
1465  8F29              ; Inicializamos punteros (India_SP) e (India_2_SP).
1466  8F29              ; Inicializamos contador de comparaciones, [C].
1467  8F29              ; Cargamos los registros A y B para efectuar comparación.
1468  8F29
1469  8F29 FD 2E 00     	ld iyl,0
1470  8F2C
1471  8F2C 3A 7F 8C     	ld a,(Entidades_en_curso)
1472  8F2F FE 04        	cp 4 	;	4
1473  8F31 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1474  8F32
1475  8F32 3D           	dec a
1476  8F33 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1477  8F34 51           	ld d,c 										; Copia de respaldo.
1478  8F35
1479  8F35 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1480  8F36
1481  8F36 21 6A 89     	ld hl,Tabla_de_pintado+3
1482  8F39 46           	ld b,(hl)
1483  8F3A 22 A3 8C     	ld (India_2_SP),hl
1484  8F3D
1485  8F3D B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1486  8F3E DC 66 8F     	call c, Avanza_India_2_SP
1487  8F41 CC 66 8F     	call z, Avanza_India_2_SP
1488  8F44
1489  8F44 FD 2D        	dec iyl
1490  8F46 28 18        	jr z,2F
1491  8F48
1492  8F48
1493  8F48              ; --------------------------------------------------------------------------------------------------------------
1494  8F48              ;
1495  8F48              ;	7/4/24
1496  8F48
1497  8F48              Trueque
1498  8F48
1499  8F48              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1500  8F48              ;  			A contiene en nº de fila de (India_SP).
1501  8F48              ;			HL contiene (India_2_SP).
1502  8F48
1503  8F48 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1504  8F49 E5           	push hl										; Preservo (India_2_SP).
1505  8F4A
1506  8F4A ED 5B A1 8C  	ld de,(India_SP)
1507  8F4E EB           	ex de,hl
1508  8F4F 70           	ld (hl),b
1509  8F50 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1510  8F51
1511  8F51 CD 92 8F     	call Intercambia_1_byte
1512  8F54 CD 92 8F     	call Intercambia_1_byte
1513  8F57
1514  8F57
1515  8F57              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1516  8F57              ; Recuperamos (India_2_SP) en HL.
1517  8F57
1518  8F57 2A A1 8C     	ld hl,(India_SP)
1519  8F5A 7E           	ld a,(hl)
1520  8F5B
1521  8F5B E1           	pop hl
1522  8F5C D1           	pop de
1523  8F5D
1524  8F5D              ; --------------------------------------------------------------------------------------------------------------
1525  8F5D
1526  8F5D CD 66 8F     	call Avanza_India_2_SP
1527  8F60
1528  8F60 14           2 inc d
1529  8F61 15           	dec d
1530  8F62 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1531  8F63 18 D8        	jr 1B
1532  8F65
1533  8F65 C9           	ret
1534  8F66
1535  8F66              ; ----- ----- ----- ----- -----
1536  8F66
1537  8F66              Avanza_India_2_SP
1538  8F66
1539  8F66 0D           	dec c
1540  8F67 28 0A        	jr z,Avanza_punteros_indios
1541  8F69
1542  8F69 FD 2C        	inc iyl
1543  8F6B
1544  8F6B 2C           	inc l
1545  8F6C 2C           	inc l
1546  8F6D 2C           	inc l
1547  8F6E
1548  8F6E 46           	ld b,(hl)
1549  8F6F 22 A3 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1550  8F72
1551  8F72 C9           	ret
1552  8F73
1553  8F73              ; ----- ----- ----- ----- -----
1554  8F73
1555  8F73              Avanza_punteros_indios
1556  8F73
1557  8F73 15           	dec d
1558  8F74 28 15        	jr z,Prepara_salida
1559  8F76
1560  8F76 4A           	ld c,d
1561  8F77
1562  8F77 2A A1 8C     	ld hl,(India_SP)
1563  8F7A 2C           	inc l
1564  8F7B 2C           	inc l
1565  8F7C 2C           	inc l
1566  8F7D 7E           	ld a,(hl)
1567  8F7E 22 A1 8C     	ld (India_SP),hl
1568  8F81
1569  8F81 2C           	inc l
1570  8F82 2C           	inc l
1571  8F83 2C           	inc l
1572  8F84 46           	ld b,(hl)
1573  8F85 22 A3 8C     	ld (India_2_SP),hl
1574  8F88
1575  8F88 FD 2C        	inc iyl
1576  8F8A
1577  8F8A C9           	ret
1578  8F8B
1579  8F8B              Prepara_salida
1580  8F8B
1581  8F8B 21 67 89     	ld hl,Tabla_de_pintado
1582  8F8E 22 A1 8C     	ld (India_SP),hl
1583  8F91 C9           	ret
1584  8F92
1585  8F92
1586  8F92 2C           Intercambia_1_byte inc l
1587  8F93 1C           	inc e
1588  8F94 46           	ld b,(hl)
1589  8F95 1A           	ld a,(de)
1590  8F96 EB           	ex de,hl
1591  8F97 70           	ld (hl),b
1592  8F98 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1593  8F99 C9           	ret
1594  8F9A
1595  8F9A              ; -----------------------------------------------------------------------------------
1596  8F9A              ;
1597  8F9A              ;	20/01/24
1598  8F9A              ;
1599  8F9A              ;
1600  8F9A
1601  8F9A              Construye_movimientos_masticados_entidad
1602  8F9A
1603  8F9A 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1604  8F9D E5           	push hl
1605  8F9E CD E1 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1606  8FA1              ;															; _ el (Contador_de_mov_masticados).
1607  8FA1 CD B7 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1608  8FA4              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1609  8FA4 CD E4 99     	call Recompone_posicion_inicio
1610  8FA7
1611  8FA7 CD 14 97     1 call Draw
1612  8FAA CD C6 8F     	call Guarda_movimiento_masticado
1613  8FAD
1614  8FAD CD 91 9D     	call Movimiento
1615  8FB0
1616  8FB0 3A A5 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1617  8FB3 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1618  8FB5 28 F0        	jr z,1B
1619  8FB7
1620  8FB7              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1621  8FB7              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1622  8FB7
1623  8FB7 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1624  8FB8 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1625  8FBB
1626  8FBB              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1627  8FBB
1628  8FBB CD F5 9E     	call Situa_en_contador_general_de_mov_masticados
1629  8FBE
1630  8FBE              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1631  8FBE              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1632  8FBE
1633  8FBE ED 4B 40 8C  	ld bc,(Contador_de_mov_masticados)
1634  8FC2
1635  8FC2 71           	ld (hl),c
1636  8FC3 23           	inc hl
1637  8FC4 70           	ld (hl),b
1638  8FC5
1639  8FC5 C9           	ret
1640  8FC6
1641  8FC6              ; -----------------------------------------------------------------------------------
1642  8FC6              ;
1643  8FC6              ;	28/12/23
1644  8FC6              ;
1645  8FC6              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1646  8FC6              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1647  8FC6
1648  8FC6              Guarda_movimiento_masticado
1649  8FC6
1650  8FC6 ED 73 84 8C  	ld (Stack),sp
1651  8FCA ED 7B 3E 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1652  8FCE
1653  8FCE DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1654  8FD0 FD E5            push iy 												; Pushea Puntero_objeto.
1655  8FD2
1656  8FD2 ED 7B 84 8C      ld sp,(Stack)
1657  8FD6
1658  8FD6 2A 40 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1659  8FD9 23           	inc hl
1660  8FDA 22 40 8C     	ld (Contador_de_mov_masticados),hl
1661  8FDD
1662  8FDD CD E1 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1663  8FE0              ;															; _ el (Contador_de_mov_masticados).
1664  8FE0 C9               ret
1665  8FE1
1666  8FE1              ; --------------------------------------------------------------------------------------------------------------
1667  8FE1              ;
1668  8FE1              ;	12/1/24
1669  8FE1              ;
1670  8FE1              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1671  8FE1
1672  8FE1              Actualiza_Puntero_de_almacen_de_mov_masticados
1673  8FE1
1674  8FE1 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1675  8FE4 01 04 00     	ld bc,4
1676  8FE7 A7           	and a
1677  8FE8 ED 4A        	adc hl,bc
1678  8FEA 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1679  8FED C9           	ret
1680  8FEE
1681  8FEE              ; --------------------------------------------------------------------------------------------------------------
1682  8FEE              ;
1683  8FEE              ;	24/03/24
1684  8FEE              ;
1685  8FEE              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1686  8FEE              ;
1687  8FEE              ;	IX contiene el puntero de impresión.
1688  8FEE              ;	DE contiene (Puntero_objeto).
1689  8FEE
1690  8FEE
1691  8FEE              Cargamos_registros_con_mov_masticado
1692  8FEE
1693  8FEE ED 73 84 8C  	ld (Stack),sp
1694  8FF2 ED 7B 3E 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1695  8FF6
1696  8FF6 D1           	pop de 															; DE contiene Puntero_objeto
1697  8FF7 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1698  8FF9
1699  8FF9 ED 73 3E 8C  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1700  8FFD ED 7B 84 8C  	ld sp,(Stack)
1701  9001
1702  9001 7B           	ld a,e
1703  9002 82           	add d															; Comprueba si ya no hay datos en el almacén.
1704  9003
1705  9003 CC A7 93     	call z,Reinicia_entidad_maliciosa
1706  9006
1707  9006 C9           	ret
1708  9007
1709  9007              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1710  9007              ;
1711  9007              ;	22/7/24
1712  9007
1713  9007              Cargamos_registros_con_explosion
1714  9007
1715  9007
1716  9007 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1717  900A CD B1 90     	call Extrae_address
1718  900D
1719  900D 5D           	ld e,l
1720  900E 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1721  900F
1722  900F DD 2A 3C 8C  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1723  9013
1724  9013 C9           	ret
1725  9014
1726  9014
1727  9014              Cargamos_registros_con_explosion_Amadeus
1728  9014
1729  9014 2A F3 89     	ld hl,(Pamm_Amadeus)
1730  9017 CD B1 90     	call Extrae_address
1731  901A
1732  901A 5D           	ld e,l
1733  901B 54           	ld d,h
1734  901C
1735  901C DD 2A F1 89  	ld ix,(p.imp.amadeus)
1736  9020
1737  9020 C9           	ret
1738  9021
1739  9021              ; --------------------------------------------------------------------------------------------------------------
1740  9021              ;
1741  9021              ;	17/06/24
1742  9021              ;
1743  9021              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1744  9021              ;
1745  9021              ;	IX contiene el puntero de impresión.
1746  9021              ;	DE contiene (Puntero_objeto).
1747  9021
1748  9021
1749  9021              Cargamos_registros_con_mov_masticado_Amadeus
1750  9021
1751  9021 ED 73 84 8C  	ld (Stack),sp
1752  9025 ED 7B F3 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1753  9029 D1           	pop de 															; DE contiene Puntero_objeto
1754  902A DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1755  902C DD 22 F1 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1756  9030 ED 7B 84 8C  	ld sp,(Stack)
1757  9034 C9           	ret
1758  9035
1759  9035              ; ---------------------------------------------------------------------------------------------------------------------
1760  9035              ;
1761  9035              ;	18/6/24
1762  9035              ;
1763  9035              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1764  9035
1765  9035              Genera_datos_de_impresion_Amadeus
1766  9035
1767  9035 3A F0 89     	ld a,(Impacto_Amadeus)
1768  9038 A7           	and a
1769  9039 20 03        	jr nz,1F
1770  903B
1771  903B              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1772  903B              ; _apuntando a la correspondiente explosión.
1773  903B
1774  903B CD 21 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1775  903E
1776  903E DD 7D        1 ld a,ixl
1777  9040 E6 1F        	and $1f
1778  9042 32 ED 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1779  9045
1780  9045 2A 9F 8C     	ld hl,(Scanlines_album_SP)
1781  9048 E5           	push hl
1782  9049
1783  9049 2A 8C 8C     	ld hl,(Album_de_pintado_Amadeus)
1784  904C 22 9F 8C     	ld (Scanlines_album_SP),hl
1785  904F
1786  904F CD FC 94     	call Genera_datos_de_impresion
1787  9052
1788  9052 E1           	pop hl
1789  9053 22 9F 8C     	ld (Scanlines_album_SP),hl
1790  9056
1791  9056 C9           	ret
1792  9057
1793  9057              ; ---------------------------------------------------------------------------------------------------------------------
1794  9057              ;
1795  9057              ;	13/03/24
1796  9057              ;
1797  9057              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1798  9057
1799  9057              Inicia_albumes_de_lineas
1800  9057
1801  9057 21 00 80     	ld hl,Scanlines_album
1802  905A 22 88 8C     	ld (Album_de_pintado),hl
1803  905D 22 9F 8C     	ld (Scanlines_album_SP),hl
1804  9060
1805  9060 21 1A 81     	ld hl,Scanlines_album_2
1806  9063 22 8A 8C     	ld (Album_de_borrado),hl
1807  9066
1808  9066 C9           	ret
1809  9067
1810  9067              Inicia_albumes_de_lineas_Amadeus
1811  9067
1812  9067 21 34 82     	ld hl,Amadeus_scanlines_album
1813  906A 22 8C 8C     	ld (Album_de_pintado_Amadeus),hl
1814  906D 21 58 82     	ld hl,Amadeus_scanlines_album_2
1815  9070 22 8E 8C     	ld (Album_de_borrado_Amadeus),hl
1816  9073
1817  9073 C9           	ret
1818  9074
1819  9074              Inicia_albumes_de_disparos
1820  9074
1821  9074 21 7C 82     	ld hl,Disparos_Amadeus_scanlines_album
1822  9077 22 90 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1823  907A 21 8E 82     	ld hl,Disparos_Amadeus_scanlines_album_2
1824  907D 22 92 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1825  9080
1826  9080 21 A1 82     	ld hl,Disparos_Entidades_scanlines_album
1827  9083 22 94 8C     	ld (Album_de_pintado_disparos_entidades),hl
1828  9086 21 F3 82     	ld hl,Disparos_Entidades_scanlines_album_2
1829  9089 22 96 8C     	ld (Album_de_borrado_disparos_entidades),hl
1830  908C
1831  908C C9           	ret
1832  908D
1833  908D              ; ---------------------------------------------------------------------------------------------------------------------
1834  908D              ;
1835  908D              ; 8/1/23
1836  908D              ;
1837  908D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1838  908D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1839  908D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1840  908D
1841  908D              ; Destruye HL y DE !!!!!
1842  908D
1843  908D              Inicia_punteros_de_cajas
1844  908D
1845  908D 21 DA 89     	ld hl,Indice_de_cajas_de_entidades
1846  9090 CD B1 90         call Extrae_address
1847  9093 22 77 8C         ld (Puntero_store_caja),hl
1848  9096 21 DC 89     	ld hl,Indice_de_cajas_de_entidades+2
1849  9099 22 7B 8C     	ld (Indice_restore_caja),hl
1850  909C CD B1 90     	call Extrae_address
1851  909F 22 79 8C     	ld (Puntero_restore_caja),hl
1852  90A2 C9               ret
1853  90A3
1854  90A3              ; *************************************************************************************************************************************************************
1855  90A3              ;
1856  90A3              ; 8/1/23
1857  90A3              ;
1858  90A3              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1859  90A3
1860  90A3 21 94 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1861  90A6 22 A7 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1862  90A9 C9           	ret
1863  90AA 21 86 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1864  90AD 22 A9 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1865  90B0 C9           	ret
1866  90B1
1867  90B1              ; *************************************************************************************************************************************************************
1868  90B1              ;
1869  90B1              ; 20/10/22
1870  90B1              ;
1871  90B1              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1872  90B1              ;
1873  90B1              ; Destruye el puntero y DE !!!!!
1874  90B1
1875  90B1 5E           Extrae_address ld e,(hl)
1876  90B2 23           	inc hl
1877  90B3 56           	ld d,(hl)
1878  90B4 2B           	dec hl
1879  90B5 EB           	ex de,hl
1880  90B6 C9           	ret
1881  90B7
1882  90B7              ; *************************************************************************************************************************************************************
1883  90B7              ;
1884  90B7              ;	20/1/24
1885  90B7              ;
1886  90B7              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1887  90B7              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1888  90B7              ;
1889  90B7              ;   Destruye HL y BC !!!!!,
1890  90B7              ;
1891  90B7              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1892  90B7              ;					"0" ..... Izquierda.
1893  90B7
1894  90B7              Inicia_Puntero_objeto
1895  90B7
1896  90B7 3A 56 8C     	ld a,(Cuad_objeto)
1897  90BA E6 01        	and 1
1898  90BC F5           	push af
1899  90BD CC D9 90     	call z,Inicia_puntero_objeto_izq
1900  90C0 F1           	pop af
1901  90C1 C8           	ret z
1902  90C2 CD C6 90     	call Inicia_puntero_objeto_der
1903  90C5 C9           	ret
1904  90C6
1905  90C6              ; Arrancamos desde la parte izquierda de la pantalla.
1906  90C6              ; Iniciamos (Indice_Sprite_der).
1907  90C6
1908  90C6 2A 4C 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1909  90C9 22 50 8C     	ld (Puntero_DESPLZ_der),hl
1910  90CC CD B1 90     	call Extrae_address
1911  90CF 22 49 8C     	ld (Puntero_objeto),hl
1912  90D2
1913  90D2 2A 4E 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1914  90D5 22 52 8C     	ld (Puntero_DESPLZ_izq),hl
1915  90D8 C9           	ret
1916  90D9
1917  90D9              ; Arrancamos desde la parte derecha de la pantalla.
1918  90D9              ; Iniciamos (Indice_Sprite_izq).
1919  90D9
1920  90D9 2A 4E 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1921  90DC 22 52 8C     	ld (Puntero_DESPLZ_izq),hl
1922  90DF CD B1 90     	call Extrae_address
1923  90E2 22 49 8C     	ld (Puntero_objeto),hl
1924  90E5
1925  90E5 2A 4C 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1926  90E8 22 50 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1927  90EB C9           	ret
1928  90EC
1929  90EC              ; **************************************************************************************************
1930  90EC              ;
1931  90EC              ;	06/07/24
1932  90EC              ;
1933  90EC              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1934  90EC
1935  90EC              Restore_entidad
1936  90EC
1937  90EC 2A 77 8C     	ld hl,(Puntero_store_caja)
1938  90EF 7E           	ld a,(hl)
1939  90F0 A7           	and a
1940  90F1 CC FF 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1941  90F4 28 F6        	jr z,Restore_entidad
1942  90F6
1943  90F6 11 37 8C     	ld de,Bandeja_DRAW
1944  90F9 01 0C 00     	ld bc,12
1945  90FC ED B0        	ldir
1946  90FE C9           	ret
1947  90FF
1948  90FF              ; **************************************************************************************************
1949  90FF              ;
1950  90FF              ;	08/05/23
1951  90FF              ;
1952  90FF              ;	Incrementamos los dos punteros de entidades. (+1).
1953  90FF
1954  90FF              Incrementa_punteros_de_cajas
1955  90FF
1956  90FF 2A 79 8C     	ld hl,(Puntero_restore_caja)
1957  9102 22 77 8C     	ld (Puntero_store_caja),hl
1958  9105 2A 7B 8C     	ld hl,(Indice_restore_caja)
1959  9108 23           	inc hl
1960  9109 23           	inc hl
1961  910A 22 7B 8C     	ld (Indice_restore_caja),hl
1962  910D CD B1 90         call Extrae_address
1963  9110 22 79 8C         ld (Puntero_restore_caja),hl
1964  9113 C9               ret
1965  9114
1966  9114              ; -----------------------------------------------------------
1967  9114
1968  9114              ; Teclado.
1969  9114
1970  9114 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1971  9116 DB FE        	in a,($fe)
1972  9118 E6 01        	and $01
1973  911A 28 02        	jr z,1f
1974  911C 18 F6        	jr Pulsa_ENTER
1975  911E C9           1 ret
1976  911F
1977  911F              ; **************************************************************************************************
1978  911F              ;
1979  911F              ; Temporización.
1980  911F
1981  911F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1982  911F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1983  911F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1984  911F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1985  911F
1986  911F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1987  911F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1988  911F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1989  911F
1990  911F              ; A partir de $4f61 no hace falta DELAY.
1991  911F
1992  911F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1993  911F
1994  911F              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1995  911F              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1996  911F              ;	LD A,B
1997  911F              ;	AND A
1998  911F              ;	JR NZ,wait
1999  911F              ;	RET
2000  911F
2001  911F              ; ---------------------------------------------------------------------------------------------------------------
2002  911F              ;
2003  911F              ;	13/07/24
2004  911F              ;
2005  911F
2006  911F              Inicia_Shield
2007  911F
2008  911F 21 C4 8C     	ld hl,Datos_Shield
2009  9122 22 C8 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
2010  9125
2011  9125 7E           	ld a,(hl)
2012  9126 32 CB 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
2013  9129
2014  9129 3E 01        	ld a,1
2015  912B 32 CC 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2016  912E
2017  912E C9           	ret
2018  912F
2019  912F              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2020  912F              ;
2021  912F              ;	4/6/24
2022  912F              ;
2023  912F              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2024  912F              ;
2025  912F              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2026  912F              ;
2027  912F
2028  912F              Actualiza_pantalla
2029  912F
2030  912F 3E 02        	ld a,2
2031  9131 D3 FE        	out ($fe),a
2032  9133
2033  9133 3A A5 8C     	ld a,(Ctrl_3)
2034  9136              ;	bit 0,a
2035  9136              ;	jr z,Ejecuta_escudo									 		  	; No pintamos si el FRAME no se ha completado.
2036  9136 CB 57        	bit 2,a
2037  9138 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2038  913A
2039  913A              Borrando_entidades
2040  913A
2041  913A 2A 9F 8C     	ld hl,(Scanlines_album_SP)
2042  913D CD B1 90     	call Extrae_address
2043  9140 24           	inc h
2044  9141 25           	dec h
2045  9142 28 05        	jr z,Pintando_entidades
2046  9144 CD F1 95     	call Pinta_Sprites
2047  9147 18 F1        	jr Borrando_entidades
2048  9149
2049  9149              Pintando_entidades
2050  9149
2051  9149 2A A1 8C     	ld hl,(India_SP)
2052  914C 2C           	inc l
2053  914D CD B1 90     	call Extrae_address
2054  9150 24           	inc h
2055  9151 25           	dec h
2056  9152 28 0E        	jr z,Ejecuta_escudo
2057  9154 1C           	inc e
2058  9155 1C           	inc e
2059  9156 ED 53 A1 8C  	ld (India_SP),de
2060  915A CD B1 90     	call Extrae_address
2061  915D CD F1 95     	call Pinta_Sprites
2062  9160 18 E7        	jr Pintando_entidades
2063  9162
2064  9162              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2065  9162
2066  9162              Ejecuta_escudo
2067  9162
2068  9162 3A CA 8C     	ld a,(Shield)
2069  9165 A7           	and a
2070  9166 20 2F        	jr nz,Aplica_Shield
2071  9168
2072  9168              Borrando_Amadeus
2073  9168
2074  9168 21 A5 8C     	ld hl,Ctrl_3
2075  916B CB 6E        	bit 5,(hl)
2076  916D 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2077  916F
2078  916F 2A 8E 8C     	ld hl,(Album_de_borrado_Amadeus)
2079  9172 CD B1 90     	call Extrae_address
2080  9175 24           	inc h
2081  9176 25           	dec h
2082  9177 28 03        	jr z,Pintando_Amadeus
2083  9179 CD F1 95     	call Pinta_Sprites
2084  917C
2085  917C              Pintando_Amadeus
2086  917C
2087  917C 2A 8C 8C     	ld hl,(Album_de_pintado_Amadeus)
2088  917F CD B1 90     	call Extrae_address
2089  9182 24           	inc h
2090  9183 25           	dec h
2091  9184 28 03        	jr z,1F
2092  9186 CD F1 95     	call Pinta_Sprites
2093  9189
2094  9189              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2095  9189
2096  9189 21 A5 8C     1 ld hl,Ctrl_3
2097  918C CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2098  918E CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2099  9190 CB AE        	res 5,(hl)
2100  9192
2101  9192 3E 01        	ld a,1												; Borde azul.
2102  9194 D3 FE        	out ($fe),a
2103  9196
2104  9196 C9           	ret
2105  9197
2106  9197
2107  9197
2108  9197              Aplica_Shield
2109  9197
2110  9197              ;	Bit 1 "1" (Shield_3) Sólo borra.
2111  9197              ;		  "0"     ""     Borra/Pinta.
2112  9197              ;	Bit 2    ""  RET.	 No borra, no pinta.
2113  9197
2114  9197 21 CC 8C     	ld hl,Shield_3
2115  919A
2116  919A CB 5E        	bit 3,(hl)
2117  919C 20 DE        	jr nz,Pintando_Amadeus
2118  919E
2119  919E CB 56        	bit 2,(hl)
2120  91A0 20 E7        	jr nz,1B
2121  91A2
2122  91A2 CB 4E        	bit 1,(hl)
2123  91A4 C4 AB 91     	call nz,Borra_Amadeus_shield
2124  91A7
2125  91A7 28 BF        	jr z,Borrando_Amadeus
2126  91A9 18 DE        	jr 1B
2127  91AB
2128  91AB              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2129  91AB
2130  91AB              Borra_Amadeus_shield
2131  91AB
2132  91AB 3A A5 8C     	ld a,(Ctrl_3)
2133  91AE CB 6F        	bit 5,a
2134  91B0 28 08        	jr z,1F
2135  91B2
2136  91B2 2A 8E 8C     	ld hl,(Album_de_borrado_Amadeus)
2137  91B5 CD B1 90     	call Extrae_address
2138  91B8 18 06        	jr 2F
2139  91BA
2140  91BA 2A 8C 8C     1 ld hl,(Album_de_pintado_Amadeus)
2141  91BD CD B1 90     	call Extrae_address
2142  91C0
2143  91C0 CD F1 95     2 call Pinta_Sprites
2144  91C3
2145  91C3 AF           	xor a
2146  91C4 3C           	inc a											; Asegura NZ en la salida de la rutina.
2147  91C5
2148  91C5 C9           	ret
2149  91C6
2150  91C6              Pinta_Amadeus_shield
2151  91C6
2152  91C6 2A 8C 8C     	ld hl,(Album_de_pintado_Amadeus)
2153  91C9 CD B1 90     	call Extrae_address
2154  91CC CD F1 95     	call Pinta_Sprites
2155  91CF
2156  91CF AF           	xor a
2157  91D0 3C           	inc a											; Asegura NZ en la salida de la rutina.
2158  91D1
2159  91D1 C9           	ret
2160  91D2
2161  91D2              Borra_Pinta_Amadeus_shield
2162  91D2
2163  91D2 CD AB 91     	call Borra_Amadeus_shield
2164  91D5 CD C6 91     	call Pinta_Amadeus_shield
2165  91D8 C9           	ret
2166  91D9
2167  91D9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2168  91D9              ;
2169  91D9              ;	19/6/24
2170  91D9              ;
2171  91D9
2172  91D9              Teclado
2173  91D9
2174  91D9              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2175  91D9
2176  91D9 3E F7        	ld a,$f7												; "5" para disparar.
2177  91DB DB FE        	in a,($fe)
2178  91DD E6 10        	and $10
2179  91DF
2180  91DF CC 3F 9F     	call z,Genera_disparo_Amadeus
2181  91E2
2182  91E2 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2183  91E4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2184  91E6 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2185  91E8 CC 5E 9D         call z,Amadeus_a_izquierda
2186  91EB
2187  91EB 3E F7        	ld a,$f7
2188  91ED DB FE        	in a,($fe)
2189  91EF E6 01        	and $01
2190  91F1 C8           	ret z
2191  91F2
2192  91F2 3E F7        	ld a,$f7
2193  91F4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2194  91F6 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2195  91F8 CC 76 9D     	call z,Amadeus_a_derecha
2196  91FB
2197  91FB C9           	ret
2198  91FC
2199  91FC              ; ------------------------------------------------------------------------------------------------------------------------
2200  91FC              ;
2201  91FC              ;	06/07/24
2202  91FC              ;
2203  91FC
2204  91FC              Genera_explosion
2205  91FC
2206  91FC 21 B6 8C     	ld hl,Clock_explosion
2207  91FF 35           	dec (hl)
2208  9200 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2209  9202
2210  9202              Borra_entidad_colisionada
2211  9202
2212  9202 CD 02 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2213  9205 CD 07 90     	call Cargamos_registros_con_explosion
2214  9208 CD FC 94     	call Genera_datos_de_impresion
2215  920B
2216  920B AF           	xor a
2217  920C 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2218  920D
2219  920D C9           	ret
2220  920E
2221  920E              Siguiente_frame_explosion
2222  920E
2223  920E 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2224  9210
2225  9210              ; Avanza Frame de explosión.
2226  9210
2227  9210 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2228  9213 01 34 88     	ld bc,Indice_Explosion_entidades+4
2229  9216
2230  9216 79           	ld a,c
2231  9217 95           	sub l
2232  9218 20 0B        	jr nz,1F
2233  921A
2234  921A              ; Fín de la entidad !!!!!!!!!!!!!
2235  921A
2236  921A 21 7E 8C     	ld hl,Numero_parcial_de_entidades
2237  921D 35           	dec (hl)
2238  921E 23           	inc hl
2239  921F 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2240  9220
2241  9220 CD 7C 93     	call Limpiamos_bandeja_DRAW
2242  9223 18 DD        	jr Borra_entidad_colisionada
2243  9225
2244  9225 23           1 inc hl
2245  9226 23           	inc hl
2246  9227 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
2247  922A 18 D6        	jr Borra_entidad_colisionada
2248  922C
2249  922C              ; ----- ----- ----- ----- -----
2250  922C
2251  922C              Genera_explosion_Amadeus
2252  922C
2253  922C 21 B7 8C     	ld hl,Clock_explosion_Amadeus
2254  922F 35           	dec (hl)
2255  9230 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2256  9232
2257  9232              Borra_Amadeus_impactado
2258  9232
2259  9232 CD 92 8E     	call Change_Amadeus
2260  9235 CD 14 90     	call Cargamos_registros_con_explosion_Amadeus
2261  9238 CD 35 90     	call Genera_datos_de_impresion_Amadeus
2262  923B
2263  923B 21 A5 8C     	ld hl,Ctrl_3
2264  923E CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2265  9240
2266  9240 AF           	xor a
2267  9241 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2268  9242
2269  9242 C9           	ret
2270  9243
2271  9243              Siguiente_frame_explosion_Amadeus
2272  9243
2273  9243 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2274  9245
2275  9245              ; Avanza Frame de explosión.
2276  9245
2277  9245 2A F3 89     	ld hl,(Pamm_Amadeus)
2278  9248 01 CA 88     	ld bc,Indice_Explosion_Amadeus+4
2279  924B
2280  924B 79           	ld a,c
2281  924C 95           	sub l
2282  924D 20 0B        	jr nz,1F
2283  924F
2284  924F              ; Fín de Amadeus !!!!!!!!!!!!!
2285  924F              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2286  924F
2287  924F AF           	xor a
2288  9250 32 F0 89     	ld (Impacto_Amadeus),a
2289  9253 21 A5 8C     	ld hl,Ctrl_3
2290  9256 CB F6        	set 6,(hl)
2291  9258
2292  9258 18 D8        	jr Borra_Amadeus_impactado
2293  925A
2294  925A 23           1 inc hl
2295  925B 23           	inc hl
2296  925C 22 F3 89     	ld (Pamm_Amadeus),hl
2297  925F 18 D1        	jr Borra_Amadeus_impactado
2298  9261
2299  9261              ; ---------------------------------------------------------------
2300  9261
2301  9261              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9261              ; ******************************************************************************************************************************************************************************************
   2+ 9261              ;
   3+ 9261              ;   21/04/24
   4+ 9261              ;
   5+ 9261              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9261              ;   (XOR) bit a bit.
   7+ 9261              ;
   8+ 9261              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9261
  10+ 9261              Derivando_RND
  11+ 9261
  12+ 9261 21 60 89         ld hl,Numeros_aleatorios
  13+ 9264
  14+ 9264 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9266 C5               push bc
  16+ 9267              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9267 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 926A              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 926A
  20+ 926A A7           6 and a                                 ; Carry a "0".
  21+ 926B CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 926D 30 02            jr nc,1F
  23+ 926F
  24+ 926F CB C1            set 0,c
  25+ 9271
  26+ 9271 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9272 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9274 5F               ld e,a
  29+ 9275
  30+ 9275 7A               ld a,d
  31+ 9276 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9278 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 927A
  34+ 927A CB 3F            srl a
  35+ 927C
  36+ 927C AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 927D
  38+ 927D 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 927E 28 04            jr z,4F
  40+ 9280
  41+ 9280 CB FF            set 7,a
  42+ 9282 18 02            jr 5F
  43+ 9284
  44+ 9284 CB BF        4 res 7,a
  45+ 9286
  46+ 9286 CB 21        5 sla c
  47+ 9288 10 E0            djnz 6B
  48+ 928A
  49+ 928A 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 928B
  51+ 928B 77               ld (hl),a
  52+ 928C 23               inc hl
  53+ 928D C1               pop bc
  54+ 928E 10 D4            djnz 3B
  55+ 9290
  56+ 9290 C9               ret
  57+ 9291
  58+ 9291
  59+ 9291
# file closed: RND_Derivando.asm
2302  9291              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9291              ;---------------------------------------------------------------------------------------------------------------
   2+ 9291              ;
   3+ 9291              ;   8/3/24
   4+ 9291              ;
   5+ 9291              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9291              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9291              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9291              ;	_ de la 1ª entidad del Nivel.
   9+ 9291              ;
  10+ 9291              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9291
  12+ 9291              ;	MODIFICA: HL,DE y A.
  13+ 9291              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9291
  15+ 9291              Inicializa_Nivel
  16+ 9291
  17+ 9291 2A C0 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9294 CD B1 90     	call Extrae_address
  19+ 9297 7E           	ld a,(hl)
  20+ 9298 32 7D 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 929B 23           	inc hl
  22+ 929C CD A9 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 929F 22 C2 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92A2 CD B2 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92A5
  26+ 92A5 CD C3 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92A8 C9           	ret
  28+ 92A9
  29+ 92A9              ; ----------------------
  30+ 92A9
  31+ 92A9 11 5C 8C     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92AC 01 04 00     	ld bc,4
  33+ 92AF ED B0        	ldir
  34+ 92B1 C9           	ret
  35+ 92B2
  36+ 92B2 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92B3 CD 4D 94         call Calcula_salto_en_BC
  38+ 92B6 21 82 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92B9 A7               and a
  40+ 92BA ED 4A            adc hl,bc
  41+ 92BC CD B1 90         call Extrae_address
  42+ 92BF 22 68 8C         ld (Puntero_indice_mov),hl
  43+ 92C2 C9               ret
  44+ 92C3
  45+ 92C3 3A 37 8C     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92C6 CD 4D 94     	call Calcula_salto_en_BC
  47+ 92C9 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92CC A7               and a
  49+ 92CD ED 4A            adc hl,bc
  50+ 92CF CD B1 90         call Extrae_address
  51+ 92D2 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92D5 C9           	ret
  53+ 92D6
  54+ 92D6              ;---------------------------------------------------------------------------------------------------------------
  55+ 92D6              ;
  56+ 92D6              ;   5/1/24
  57+ 92D6              ;
  58+ 92D6              ;	Destruye A,BC,HL,DE
  59+ 92D6
  60+ 92D6              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92D6              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92D6
  63+ 92D6              Inicia_Entidades
  64+ 92D6
  65+ 92D6              ; Preparamos los punteros de las cajas de entidades:
  66+ 92D6
  67+ 92D6 CD 8D 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92D9              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92D9 CD 95 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92DC
  71+ 92DC 2A C2 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92DF
  73+ 92DF 22 C2 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92E2
  75+ 92E2 CD FB 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92E5
  77+ 92E5 2A C2 8C     	ld hl,(Datos_de_nivel)
  78+ 92E8
  79+ 92E8              ; En este punto:
  80+ 92E8              ;
  81+ 92E8              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92E8              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92E8
  84+ 92E8 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92E9
  86+ 92E9 7E           	ld a,(hl)
  87+ 92EA CD 67 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92ED
  89+ 92ED CD 5F 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92F0
  91+ 92F0              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92F0
  93+ 92F0 CD 1D 94     	call Busca_mov_masticados_segun_tipo
  94+ 92F3
  95+ 92F3 A7           	and a
  96+ 92F4 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92F6
  98+ 92F6              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92F6
 100+ 92F6              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92F6              ;	_ de este tipo de entidad.
 102+ 92F6
 103+ 92F6 CD F5 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92F9 CD 02 9F     	call Transfiere_datos_de_contadores
 105+ 92FC
 106+ 92FC 18 06        	jr 4F
 107+ 92FE
 108+ 92FE CD 9A 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9301
 110+ 9301              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9301              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9301              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9301              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9301              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9301
 116+ 9301 CD DB 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9304              ;																; _ Mov_masticados ya generados.
 118+ 9304
 119+ 9304 CD EE 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9307
 121+ 9307 DD E5        	push ix
 122+ 9309 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 930A
 124+ 930A D5           	push de
 125+ 930B CD D0 94     	call Genera_coordenadas
 126+ 930E
 127+ 930E ED 5B 9F 8C  	ld de,(Scanlines_album_SP)
 128+ 9312 CD 02 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9315 D1           	pop de
 130+ 9316
 131+ 9316 CD FC 94     	call Genera_datos_de_impresion
 132+ 9319              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9319              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9319              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9319              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9319
 137+ 9319 CD 9F 93     	call Decrementa_Contador_de_mov_masticados
 138+ 931C
 139+ 931C              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 931C
 141+ 931C ED 5B 77 8C  	ld de,(Puntero_store_caja)
 142+ 9320 CD 8C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9323
 144+ 9323 CD 7C 93     	call Limpiamos_bandeja_DRAW
 145+ 9326 CD FF 90     	call Incrementa_punteros_de_cajas
 146+ 9329
 147+ 9329              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9329              ; _ entidad del Nivel.
 149+ 9329
 150+ 9329 3A A6 8C     	ld a,(Ctrl_4)
 151+ 932C E6 F0        	and $f0
 152+ 932E 32 A6 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9331
 154+ 9331              ; Siguiente entidad del Nivel.
 155+ 9331
 156+ 9331 2A C2 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9334 23           	inc hl 														; _ entidad del Nivel.
 158+ 9335
 159+ 9335 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9336
 161+ 9336 10 A7        	djnz 2B
 162+ 9338
 163+ 9338 C9           	ret
 164+ 9339
 165+ 9339              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9339              ;
 167+ 9339              ;	27/5/24
 168+ 9339              ;
 169+ 9339              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9339              ;
 171+ 9339
 172+ 9339              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9339              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9339
 175+ 9339 21 6A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 933C CD 5F 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 933F
 178+ 933F
 179+ 933F              Construye_movimientos_masticados_Amadeus
 180+ 933F
 181+ 933F 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9342 CD E1 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9345              ;															; _ el (Contador_de_mov_masticados).
 184+ 9345 CD B7 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9348              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9348
 187+ 9348              ; Generamos movimientos masticados de Amadeus.
 188+ 9348
 189+ 9348 06 79        	ld b,121												; $0079, 121d.
 190+ 934A
 191+ 934A C5           1 push bc
 192+ 934B CD 14 97     	call Draw
 193+ 934E CD C6 8F     	call Guarda_movimiento_masticado
 194+ 9351
 195+ 9351 CD 88 9A     	call Mov_right
 196+ 9354 CD 88 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9357
 198+ 9357 C1           	pop bc
 199+ 9358 10 F0        	djnz 1B
 200+ 935A
 201+ 935A              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 935A
 203+ 935A              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 935A              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 935A
 206+ 935A 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 935D 01 08 00     	ld bc,8
 208+ 9360 A7           	and a
 209+ 9361 ED 42        	sbc hl,bc
 210+ 9363 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9366
 212+ 9366 C9           	ret
 213+ 9367
 214+ 9367              ; ---------------------------------------------------------------------
 215+ 9367              ;
 216+ 9367              ;	10/02/24
 217+ 9367              ;
 218+ 9367              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9367              ;
 220+ 9367              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9367
 222+ 9367              Definicion_segun_tipo
 223+ 9367
 224+ 9367 CD 4D 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 936A 21 4C 8A     	ld hl,Indice_de_definiciones_de_entidades
 226+ 936D CD 55 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9370 C9           	ret
 228+ 9371
 229+ 9371              ; ---------------------------------------------------------------------
 230+ 9371              ;
 231+ 9371              ;	6/7/24
 232+ 9371
 233+ 9371
 234+ 9371              Store_Restore_cajas
 235+ 9371
 236+ 9371 ED 5B 77 8C  	ld de,(Puntero_store_caja)
 237+ 9375 CD 8C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9378 CD FF 90     	call Incrementa_punteros_de_cajas
 239+ 937B C9           	ret
 240+ 937C
 241+ 937C              ; ---------------------------------------------------------------------
 242+ 937C              ;
 243+ 937C              ;	23/6/24
 244+ 937C              ;
 245+ 937C              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 937C              ;
 247+ 937C              ;	MODIFY: HL
 248+ 937C
 249+ 937C              Limpiamos_bandeja_DRAW
 250+ 937C
 251+ 937C ED 73 84 8C  	ld (Stack),sp
 252+ 9380 31 5C 8C     	ld sp,Vel_left
 253+ 9383
 254+ 9383 AF           	xor a
 255+ 9384 67           	ld h,a
 256+ 9385 6F           	ld l,a
 257+ 9386
 258+ 9386 E5           	push hl
 259+ 9387 E5           	push hl
 260+ 9388 E5           	push hl
 261+ 9389 E5           	push hl
 262+ 938A E5           	push hl
 263+ 938B E5           	push hl
 264+ 938C E5           	push hl
 265+ 938D E5           	push hl
 266+ 938E E5           	push hl
 267+ 938F E5           	push hl
 268+ 9390 E5           	push hl
 269+ 9391 E5           	push hl
 270+ 9392 E5           	push hl
 271+ 9393 E5           	push hl
 272+ 9394 E5           	push hl
 273+ 9395 E5           	push hl
 274+ 9396 E5           	push hl
 275+ 9397 E5           	push hl
 276+ 9398
 277+ 9398 33           	inc sp
 278+ 9399
 279+ 9399 E5           	push hl
 280+ 939A ED 7B 84 8C  	ld sp,(Stack)
 281+ 939E
 282+ 939E C9           	ret
 283+ 939F
 284+ 939F              ; ---------------------------------------------------------------------
 285+ 939F              ;
 286+ 939F              ;	24/03/24
 287+ 939F
 288+ 939F 2A 40 8C     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93A2 2B           	dec hl
 290+ 93A3 22 40 8C     	ld (Contador_de_mov_masticados),hl
 291+ 93A6 C9           	ret
 292+ 93A7
 293+ 93A7              ; ---------------------------------------------------------------------
 294+ 93A7              ;
 295+ 93A7              ;	8/5/24
 296+ 93A7
 297+ 93A7              Reinicia_entidad_maliciosa
 298+ 93A7
 299+ 93A7              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93A7
 301+ 93A7 CD F5 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 93AA CD 02 9F     	call Transfiere_datos_de_contadores
 303+ 93AD
 304+ 93AD              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93AD
 306+ 93AD 3A 37 8C     	ld a,(Tipo)
 307+ 93B0 CD 67 93     	call Definicion_segun_tipo
 308+ 93B3
 309+ 93B3 E5           	push hl
 310+ 93B4 DD E1        	pop ix
 311+ 93B6
 312+ 93B6 DD 6E 0B     	ld l,(ix+11)
 313+ 93B9 DD 66 0C     	ld h,(ix+12)
 314+ 93BC
 315+ 93BC 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93BF
 317+ 93BF CD EE 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93C2
 319+ 93C2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93C2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93C2              ; Ejemplos.
 322+ 93C2
 323+ 93C2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93C2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93C2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93C2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93C2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93C2
 329+ 93C2 21 3A 8C     	ld hl,Contador_de_vueltas
 330+ 93C5 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93C7
 332+ 93C7 7E           	ld a,(hl)
 333+ 93C8 CB 2F        	sra a
 334+ 93CA CB 2F        	sra a
 335+ 93CC
 336+ 93CC 32 42 8C     	ld (Velocidad),a
 337+ 93CF
 338+ 93CF 3E 40        	ld a,$40
 339+ 93D1 BE           	cp (hl)
 340+ 93D2 C0           	ret nz
 341+ 93D3
 342+ 93D3              ; Límitador.
 343+ 93D3
 344+ 93D3              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93D3
 346+ 93D3 CB 2E        	sra (hl)
 347+ 93D5 21 42 8C     	ld hl,Velocidad
 348+ 93D8 CB 2E        	sra (hl)
 349+ 93DA
 350+ 93DA C9           	ret
 351+ 93DB
 352+ 93DB              ; ---------------------------------------------------------------------
 353+ 93DB              ;
 354+ 93DB              ;	22/01/24
 355+ 93DB
 356+ 93DB 21 A6 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93DE CB 46        	bit 0,(hl)
 358+ 93E0 20 0D        	jr nz,1F
 359+ 93E2 CB 4E        	bit 1,(hl)
 360+ 93E4 20 0C        	jr nz,2F
 361+ 93E6 CB 56        	bit 2,(hl)
 362+ 93E8 20 0B        	jr nz,3F
 363+ 93EA CB 5E        	bit 3,(hl)
 364+ 93EC 20 0A        	jr nz,4F
 365+ 93EE C9           	ret
 366+ 93EF
 367+ 93EF CB E6        1 set 4,(hl)
 368+ 93F1 C9           	ret
 369+ 93F2 CB EE        2 set 5,(hl)
 370+ 93F4 C9           	ret
 371+ 93F5 CB F6        3 set 6,(hl)
 372+ 93F7 C9           	ret
 373+ 93F8 CB FE        4 set 7,(hl)
 374+ 93FA C9           	ret
 375+ 93FB
 376+ 93FB              ; ---------------------------------------------------------------------
 377+ 93FB              ;
 378+ 93FB              ;	23/01/24
 379+ 93FB              ;
 380+ 93FB              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93FB              ;
 382+ 93FB              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93FB              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93FB              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93FB              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93FB
 387+ 93FB              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93FB
 389+ 93FB 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93FC 3D           	dec a
 391+ 93FD 20 06        	jr nz,1F
 392+ 93FF
 393+ 93FF              ; --- Tipo_1
 394+ 93FF
 395+ 93FF 21 A6 8C     	ld hl,Ctrl_4
 396+ 9402 CB C6        	set 0,(hl)
 397+ 9404 C9           	ret
 398+ 9405
 399+ 9405 3D           1 dec a
 400+ 9406 20 06        	jr nz,2F
 401+ 9408
 402+ 9408              ; --- Tipo_2
 403+ 9408
 404+ 9408 21 A6 8C     	ld hl,Ctrl_4
 405+ 940B CB CE        	set 1,(hl)
 406+ 940D C9           	ret
 407+ 940E
 408+ 940E 3D           2 dec a
 409+ 940F 20 06        	jr nz,3F
 410+ 9411
 411+ 9411              ; --- Tipo_3
 412+ 9411
 413+ 9411 21 A6 8C     	ld hl,Ctrl_4
 414+ 9414 CB D6        	set 2,(hl)
 415+ 9416 C9           	ret
 416+ 9417
 417+ 9417              ; --- Tipo_3
 418+ 9417
 419+ 9417 21 A6 8C     3 ld hl,Ctrl_4
 420+ 941A CB D6        	set 2,(hl)
 421+ 941C C9           	ret
 422+ 941D
 423+ 941D              ; ---------------------------------------------------------------------
 424+ 941D              ;
 425+ 941D              ;	22/01/24
 426+ 941D
 427+ 941D 21 A6 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9420 CB 46        	bit 0,(hl)
 429+ 9422 20 0E        	jr nz,1F
 430+ 9424
 431+ 9424 CB 4E        	bit 1,(hl)
 432+ 9426 20 10        	jr nz,2F
 433+ 9428
 434+ 9428 CB 56        	bit 2,(hl)
 435+ 942A 20 12        	jr nz,3F
 436+ 942C
 437+ 942C CB 5E        	bit 3,(hl)
 438+ 942E 20 14        	jr nz,4F
 439+ 9430 18 19        	jr 6F
 440+ 9432
 441+ 9432              ; Entidad_de_Tipo_1.
 442+ 9432
 443+ 9432 CB 66        1 bit 4,(hl)
 444+ 9434 28 15        	jr z,6F
 445+ 9436 18 10        	jr 5F
 446+ 9438
 447+ 9438              ; Entidad_de_Tipo_2.
 448+ 9438
 449+ 9438 CB 6E        2 bit 5,(hl)
 450+ 943A 28 0F        	jr z,6F
 451+ 943C 18 0A        	jr 5F
 452+ 943E
 453+ 943E              ; Entidad_de_Tipo_3.
 454+ 943E
 455+ 943E CB 76        3 bit 6,(hl)
 456+ 9440 28 09        	jr z,6F
 457+ 9442 18 04        	jr 5F
 458+ 9444
 459+ 9444              ; Entidad_de_Tipo_4.
 460+ 9444
 461+ 9444 CB 7E        4 bit 7,(hl)
 462+ 9446 28 03        	jr z,6F
 463+ 9448
 464+ 9448              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9448
 466+ 9448 AF           5 xor a
 467+ 9449 3C           	inc a
 468+ 944A C9           	ret
 469+ 944B
 470+ 944B              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 944B
 472+ 944B AF           6 xor a
 473+ 944C C9           	ret
 474+ 944D
 475+ 944D              ;	------------------------------------------------------------------------------------
 476+ 944D              ;
 477+ 944D              ;	12/01/24
 478+ 944D              ;
 479+ 944D              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 944D              ;
 481+ 944D              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 944D              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 944D
 484+ 944D CB 27        Calcula_salto_en_BC sla a
 485+ 944F D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9451 4F           	ld c,a
 487+ 9452 06 00        	ld b,0
 488+ 9454 C9           	ret
 489+ 9455
 490+ 9455              ; ------------------------------------------------------------------
 491+ 9455              ;
 492+ 9455              ;	19/1/24
 493+ 9455              ;
 494+ 9455              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9455              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9455
 497+ 9455 A7           Situa_en_datos_de_definicion and a
 498+ 9456 ED 4A        	adc hl,bc
 499+ 9458 CD B1 90     	call Extrae_address
 500+ 945B 22 82 8C         ld (Datos_de_entidad),hl
 501+ 945E C9           	ret
 502+ 945F
 503+ 945F              ; ------------------------------------------------------------------
 504+ 945F
 505+ 945F              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 945F              ; 	inc de
 507+ 945F              ; 	inc de
 508+ 945F              ; 	ex de,hl
 509+ 945F              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 945F              ; 	ret
 511+ 945F
 512+ 945F              ; ----------------------------------------------------------------------------------------------------------
 513+ 945F              ;
 514+ 945F              ;	24/6/24
 515+ 945F              ;
 516+ 945F              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 945F              ;	_ de entidad.
 518+ 945F              ;
 519+ 945F              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 945F              ;
 521+ 945F              ;
 522+ 945F              ;	MODIFICA: HL,DE y BC
 523+ 945F
 524+ 945F
 525+ 945F              Definicion_de_entidad_a_bandeja_DRAW
 526+ 945F
 527+ 945F 11 37 8C     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9462 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9463 12           	ld (de),a
 530+ 9464 23           	inc hl
 531+ 9465              ;
 532+ 9465 11 45 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9468 01 02 00     	ld bc,2
 534+ 946B ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 946D              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 946D 11 3A 8C     	ld de,Contador_de_vueltas
 537+ 9470 7E           	ld a,(hl)
 538+ 9471 12           	ld (de),a
 539+ 9472 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9473
 541+ 9473 11 4C 8C     	ld de,Indice_Sprite_der
 542+ 9476 01 04 00     	ld bc,4
 543+ 9479 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 947B
 545+ 947B 11 54 8C     	ld de,Posicion_inicio
 546+ 947E 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9481 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9483
 549+ 9483 11 3E 8C     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9486 01 02 00     	ld bc,2
 551+ 9489 ED B0        	ldir
 552+ 948B
 553+ 948B C9           	ret
 554+ 948C
 555+ 948C              ; ----------------------------------------------------------------------------------------------------------
 556+ 948C              ;
 557+ 948C              ;	1/8/24
 558+ 948C              ;
 559+ 948C
 560+ 948C              Parametros_de_bandeja_DRAW_a_caja
 561+ 948C
 562+ 948C 21 37 8C     	ld hl,Bandeja_DRAW
 563+ 948F 01 0C 00     	ld bc,12
 564+ 9492 ED B0        	ldir
 565+ 9494 C9           	ret
 566+ 9495
 567+ 9495              ;---------------------------------------------------------------------------------------------------------------
 568+ 9495              ;
 569+ 9495              ;	5/1/24
 570+ 9495              ;
 571+ 9495              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9495              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9495              ;
 574+ 9495              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9495              ;
 576+ 9495              ;	(Numero_parcial_de_entidades)="7".
 577+ 9495              ;
 578+ 9495              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9495              ;
 580+ 9495              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9495              ;
 582+ 9495              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9495              ;	MODIFICA: A y B.
 584+ 9495              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9495
 586+ 9495              Inicializa_Numero_parcial_de_entidades
 587+ 9495
 588+ 9495              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9495
 590+ 9495 3A 7D 8C     	ld a,(Numero_de_entidades)
 591+ 9498 A7           	and a
 592+ 9499
 593+ 9499              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9499              ;	jr z,$
 595+ 9499              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9499
 597+ 9499 20 03        	jr nz,3F
 598+ 949B
 599+ 949B              ; ---------- ---------- ----------
 600+ 949B
 601+ 949B              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 949B              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 949B
 604+ 949B CD 91 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 949E
 606+ 949E              ; ---------- ---------- ----------
 607+ 949E
 608+ 949E 3A 7D 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94A1 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94A3 38 08        	jr c,1F
 611+ 94A5
 612+ 94A5              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94A5              ; Actualizamos variables.
 614+ 94A5
 615+ 94A5 3E 07        	ld a,7
 616+ 94A7 32 7E 8C     	ld (Numero_parcial_de_entidades),a
 617+ 94AA 47           	ld b,a
 618+ 94AB 18 04        	jr 2F
 619+ 94AD
 620+ 94AD              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94AD              ; (Numero_de_entidades)="0".
 622+ 94AD
 623+ 94AD 32 7E 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 94B0 47           	ld b,a
 625+ 94B1 C9           2 ret
 626+ 94B2
# file closed: Rutinas_de_inicio_y_niveles.asm
2303  94B2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94B2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94B2              ;
   3+ 94B2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94B2              ;
   5+ 94B2              ; *****************************************************************************************************************************************************************************************
   6+ 94B2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94B2
   8+ 94B2 7C           calcula_tercio ld a,h
   9+ 94B3 E6 18        	and $18
  10+ 94B5 CB 2F        	sra a
  11+ 94B7 CB 2F        	sra a
  12+ 94B9 CB 2F        	sra a
  13+ 94BB C9           	ret
  14+ 94BC
# file closed: calcula_tercio.asm
2304  94BC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94BC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94BC              ;
   3+ 94BC              ;
   4+ 94BC              ;	CLS.
   5+ 94BC              ;
   6+ 94BC              ;	Limpia la pantalla y define sus atributos.
   7+ 94BC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94BC              ;
   9+ 94BC              ;	COLORES: 0 ..... NEGRO
  10+ 94BC              ;    		 1 ..... AZUL
  11+ 94BC              ; 			 2 ..... ROJO
  12+ 94BC              ;			 3 ..... MAGENTA
  13+ 94BC              ; 			 4 ..... VERDE
  14+ 94BC              ; 			 5 ..... CIAN
  15+ 94BC              ;			 6 ..... AMARILLO
  16+ 94BC              ; 			 7 ..... BLANCO
  17+ 94BC              ;
  18+ 94BC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94BC              ;
  20+ 94BC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94BC
  22+ 94BC
  23+ 94BC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94BF 11 01 40     	LD DE,$4001
  25+ 94C2 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94C5 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94C7 ED B0        	LDIR
  28+ 94C9 01 FF 02     	LD BC,767
  29+ 94CC 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94CD ED B0        	LDIR
  31+ 94CF C9           	ret
  32+ 94D0
# file closed: Cls.asm
2305  94D0              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94D0              ; ------------------------------------------------------------------------
   2+ 94D0              ;
   3+ 94D0              ;	30/1/24
   4+ 94D0              ;
   5+ 94D0              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94D0              ;	Fila superior "0", Columna izquierda "0".
   7+ 94D0              ;
   8+ 94D0              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94D0              ;
  10+ 94D0              ;	Modifica: A,BC y DE.
  11+ 94D0
  12+ 94D0 7D           Genera_coordenadas ld a,l
  13+ 94D1 E6 1F        	and $1f
  14+ 94D3 32 38 8C     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94D6
  16+ 94D6 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94D7 FE 40        	cp $40
  18+ 94D9 38 1C        	jr c,4F
  19+ 94DB
  20+ 94DB CD B2 94     	call calcula_tercio
  21+ 94DE 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94DF
  23+ 94DF 1E 00        	ld e,0
  24+ 94E1 7D           	ld a,l
  25+ 94E2 E6 E0        	and $e0
  26+ 94E4 28 01        	jr z,1F
  27+ 94E6 04           	inc b
  28+ 94E7
  29+ 94E7 04           1 inc b
  30+ 94E8 05           	dec b
  31+ 94E9 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94EB              ;														; _ , salimos.
  33+ 94EB 1C           3 inc e
  34+ 94EC D6 20        	sub 32
  35+ 94EE 20 FB        	jr nz,3B
  36+ 94F0 10 F5        	djnz 1B
  37+ 94F2
  38+ 94F2 7B           2 ld a,e
  39+ 94F3 32 39 8C     	ld (Coordenada_y),a
  40+ 94F6 C9           	ret
  41+ 94F7
  42+ 94F7 AF           4 xor a
  43+ 94F8 32 39 8C     	ld (Coordenada_y),a
  44+ 94FB C9           	ret
  45+ 94FC
# file closed: Genera_coordenadas.asm
2306  94FC              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94FC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94FC              ;
   3+ 94FC              ;	11/03/24
   4+ 94FC              ;
   5+ 94FC              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94FC              ;   DE contiene Puntero_objeto.
   7+ 94FC              ;   IX contiene el Puntero de impresión.
   8+ 94FC
   9+ 94FC              Genera_datos_de_impresion
  10+ 94FC
  11+ 94FC ED 73 84 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9500
  13+ 9500 31 3E 8C         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9503 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9505
  16+ 9505 2A 9F 8C         ld hl,(Scanlines_album_SP)
  17+ 9508
  18+ 9508 3E 05            ld a,5
  19+ 950A 85               add l
  20+ 950B 6F               ld l,a
  21+ 950C
  22+ 950C F9               ld sp,hl
  23+ 950D 22 9F 8C         ld (Scanlines_album_SP),hl
  24+ 9510
  25+ 9510 21 00 00         ld hl,0
  26+ 9513
  27+ 9513 DD E5            push ix
  28+ 9515 3B               dec sp
  29+ 9516 ED 7A            adc hl,sp
  30+ 9518 D5               push de
  31+ 9519
  32+ 9519              ; Recuperamos SP.
  33+ 9519
  34+ 9519 ED 7B 84 8C      ld sp,(Stack)
  35+ 951D
  36+ 951D E5               push hl
  37+ 951E F1               pop af
  38+ 951F 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9520
  40+ 9520              ; Tenemos el encabezado listo.
  41+ 9520              ; Preparamos registros para generar los scanlines.
  42+ 9520
  43+ 9520 DD E5            push ix
  44+ 9522 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9523
  46+ 9523 ED 5B 9F 8C      ld de,(Scanlines_album_SP)
  47+ 9527
  48+ 9527              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9527              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9527
  51+ 9527 7C               ld a,h
  52+ 9528 FE 50            cp $50
  53+ 952A 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 952C
  55+ 952C 20 05            jr nz,2F
  56+ 952E
  57+ 952E 7D               ld a,l
  58+ 952F FE E0            cp $e0
  59+ 9531 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9533
  61+ 9533 7D           2 ld a,l
  62+ 9534 FE C0            cp $c0
  63+ 9536 D2 C8 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9539
  65+ 9539              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9539
  67+ 9539 CD C6 99         call NextScan
  68+ 953C EB               ex de,hl
  69+ 953D
  70+ 953D 73               ld (hl),e
  71+ 953E 23               inc hl
  72+ 953F 72               ld (hl),d
  73+ 9540 23               inc hl
  74+ 9541
  75+ 9541 EB               ex de,hl
  76+ 9542
  77+ 9542 CD C6 99         call NextScan
  78+ 9545 EB               ex de,hl
  79+ 9546
  80+ 9546 73               ld (hl),e
  81+ 9547 23               inc hl
  82+ 9548 72               ld (hl),d
  83+ 9549 23               inc hl
  84+ 954A
  85+ 954A EB               ex de,hl
  86+ 954B
  87+ 954B CD C6 99         call NextScan
  88+ 954E EB               ex de,hl
  89+ 954F
  90+ 954F 73               ld (hl),e
  91+ 9550 23               inc hl
  92+ 9551 72               ld (hl),d
  93+ 9552 23               inc hl
  94+ 9553
  95+ 9553 EB               ex de,hl
  96+ 9554
  97+ 9554 CD C6 99         call NextScan
  98+ 9557 EB               ex de,hl
  99+ 9558
 100+ 9558 73               ld (hl),e
 101+ 9559 23               inc hl
 102+ 955A 72               ld (hl),d
 103+ 955B 23               inc hl
 104+ 955C
 105+ 955C EB               ex de,hl
 106+ 955D
 107+ 955D CD C6 99         call NextScan
 108+ 9560 EB               ex de,hl
 109+ 9561
 110+ 9561 73               ld (hl),e
 111+ 9562 23               inc hl
 112+ 9563 72               ld (hl),d
 113+ 9564 23               inc hl
 114+ 9565
 115+ 9565 EB               ex de,hl
 116+ 9566
 117+ 9566 CD C6 99         call NextScan
 118+ 9569 EB               ex de,hl
 119+ 956A
 120+ 956A 73               ld (hl),e
 121+ 956B 23               inc hl
 122+ 956C 72               ld (hl),d
 123+ 956D 23               inc hl
 124+ 956E
 125+ 956E EB               ex de,hl
 126+ 956F
 127+ 956F CD C6 99         call NextScan
 128+ 9572 EB               ex de,hl
 129+ 9573
 130+ 9573 73               ld (hl),e
 131+ 9574 23               inc hl
 132+ 9575 72               ld (hl),d
 133+ 9576 23               inc hl
 134+ 9577
 135+ 9577 EB               ex de,hl
 136+ 9578
 137+ 9578 CD C6 99         call NextScan
 138+ 957B EB               ex de,hl
 139+ 957C
 140+ 957C 73               ld (hl),e
 141+ 957D 23               inc hl
 142+ 957E 72               ld (hl),d
 143+ 957F 23               inc hl
 144+ 9580
 145+ 9580 EB               ex de,hl
 146+ 9581
 147+ 9581 CD C6 99         call NextScan
 148+ 9584 EB               ex de,hl
 149+ 9585
 150+ 9585 73               ld (hl),e
 151+ 9586 23               inc hl
 152+ 9587 72               ld (hl),d
 153+ 9588 23               inc hl
 154+ 9589
 155+ 9589 EB               ex de,hl
 156+ 958A
 157+ 958A CD C6 99         call NextScan
 158+ 958D EB               ex de,hl
 159+ 958E
 160+ 958E 73               ld (hl),e
 161+ 958F 23               inc hl
 162+ 9590 72               ld (hl),d
 163+ 9591 23               inc hl
 164+ 9592
 165+ 9592 EB               ex de,hl
 166+ 9593
 167+ 9593 CD C6 99         call NextScan
 168+ 9596 EB               ex de,hl
 169+ 9597
 170+ 9597 73               ld (hl),e
 171+ 9598 23               inc hl
 172+ 9599 72               ld (hl),d
 173+ 959A 23               inc hl
 174+ 959B
 175+ 959B EB               ex de,hl
 176+ 959C
 177+ 959C CD C6 99         call NextScan
 178+ 959F EB               ex de,hl
 179+ 95A0
 180+ 95A0 73               ld (hl),e
 181+ 95A1 23               inc hl
 182+ 95A2 72               ld (hl),d
 183+ 95A3 23               inc hl
 184+ 95A4
 185+ 95A4 EB               ex de,hl
 186+ 95A5
 187+ 95A5 CD C6 99         call NextScan
 188+ 95A8 EB               ex de,hl
 189+ 95A9
 190+ 95A9 73               ld (hl),e
 191+ 95AA 23               inc hl
 192+ 95AB 72               ld (hl),d
 193+ 95AC 23               inc hl
 194+ 95AD
 195+ 95AD EB               ex de,hl
 196+ 95AE
 197+ 95AE CD C6 99         call NextScan
 198+ 95B1 EB               ex de,hl
 199+ 95B2
 200+ 95B2 73               ld (hl),e
 201+ 95B3 23               inc hl
 202+ 95B4 72               ld (hl),d
 203+ 95B5 23               inc hl
 204+ 95B6
 205+ 95B6 EB               ex de,hl
 206+ 95B7
 207+ 95B7 CD C6 99         call NextScan
 208+ 95BA EB               ex de,hl
 209+ 95BB
 210+ 95BB 73               ld (hl),e
 211+ 95BC 23               inc hl
 212+ 95BD 72               ld (hl),d
 213+ 95BE 23               inc hl
 214+ 95BF
 215+ 95BF              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 95BF
 217+ 95BF 22 9F 8C         ld (Scanlines_album_SP),hl
 218+ 95C2
 219+ 95C2              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 95C2
 221+ 95C2 08               ex af,af
 222+ 95C3
 223+ 95C3 F5               push af
 224+ 95C4 E1               pop hl
 225+ 95C5
 226+ 95C5 36 10            ld (hl),16
 227+ 95C7
 228+ 95C7 C9               ret
 229+ 95C8
 230+ 95C8              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 95C8
 232+ 95C8              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 95C8
 234+ 95C8 3E 57            ld a,$57
 235+ 95CA 94               sub h
 236+ 95CB 47               ld b,a
 237+ 95CC
 238+ 95CC 3E DF            ld a,$df
 239+ 95CE BD               cp l
 240+ 95CF 38 04            jr c,1F
 241+ 95D1
 242+ 95D1 3E 08            ld a,8
 243+ 95D3 80               add b
 244+ 95D4 47               ld b,a
 245+ 95D5
 246+ 95D5              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 95D5              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 95D5
 249+ 95D5 48           1 ld c,b
 250+ 95D6 0C               inc c
 251+ 95D7
 252+ 95D7 04               inc b
 253+ 95D8 05               dec b
 254+ 95D9 20 02            jr nz,3F
 255+ 95DB
 256+ 95DB 18 0B            jr 6F
 257+ 95DD
 258+ 95DD CD C6 99     3 call NextScan
 259+ 95E0 EB               ex de,hl
 260+ 95E1
 261+ 95E1 73               ld (hl),e
 262+ 95E2 23               inc hl
 263+ 95E3 72               ld (hl),d
 264+ 95E4 23               inc hl
 265+ 95E5
 266+ 95E5 EB               ex de,hl
 267+ 95E6 10 F5            djnz 3B
 268+ 95E8
 269+ 95E8 ED 53 9F 8C  6 ld (Scanlines_album_SP),de
 270+ 95EC
 271+ 95EC 08           5 ex af,af
 272+ 95ED F5               push af
 273+ 95EE E1               pop hl
 274+ 95EF
 275+ 95EF 71               ld (hl),c
 276+ 95F0
 277+ 95F0 C9               ret
 278+ 95F1
# file closed: Genera_datos_de_impresion.asm
2307  95F1              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95F1              ; -----------------------------------------------------------------------------
   2+ 95F1              ;
   3+ 95F1              ;   11/03/24
   4+ 95F1              ;
   5+ 95F1
   6+ 95F1              Pinta_Sprites
   7+ 95F1
   8+ 95F1              ;    ld hl,(Scanlines_album_SP)
   9+ 95F1              ;    call Extrae_address
  10+ 95F1
  11+ 95F1              ;    inc h
  12+ 95F1              ;    dec h
  13+ 95F1              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95F1
  15+ 95F1 ED 73 84 8C      ld (Stack),sp
  16+ 95F5
  17+ 95F5 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95F6              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95F6 2C               inc l
  20+ 95F7 2C               inc l
  21+ 95F8
  22+ 95F8 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95F9
  24+ 95F9 2C               inc l
  25+ 95FA F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95FB
  27+ 95FB              ;   Seleccionamos rutina de impresión:
  28+ 95FB
  29+ 95FB 3E 10            ld a,16
  30+ 95FD B8               cp b
  31+ 95FE C2 FA 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9601
  33+ 9601              ;   Rutinas:
  34+ 9601
  35+ 9601              Pinta_rapido    ;   1520 t/states.
  36+ 9601
  37+ 9601 E1               pop hl
  38+ 9602
  39+ 9602 1A               ld a,(de)
  40+ 9603 AE               xor (hl)
  41+ 9604 77               ld (hl),a
  42+ 9605 2C               inc l
  43+ 9606 1C               inc e
  44+ 9607 1A               ld a,(de)
  45+ 9608 AE               xor (hl)
  46+ 9609 77               ld (hl),a
  47+ 960A 2C               inc l
  48+ 960B 1C               inc e
  49+ 960C 1A               ld a,(de)
  50+ 960D AE               xor (hl)
  51+ 960E 77               ld (hl),a
  52+ 960F 13               inc de
  53+ 9610
  54+ 9610 E1               pop hl
  55+ 9611
  56+ 9611 1A               ld a,(de)
  57+ 9612 AE               xor (hl)
  58+ 9613 77               ld (hl),a
  59+ 9614 2C               inc l
  60+ 9615 1C               inc e
  61+ 9616 1A               ld a,(de)
  62+ 9617 AE               xor (hl)
  63+ 9618 77               ld (hl),a
  64+ 9619 2C               inc l
  65+ 961A 1C               inc e
  66+ 961B 1A               ld a,(de)
  67+ 961C AE               xor (hl)
  68+ 961D 77               ld (hl),a
  69+ 961E 13               inc de
  70+ 961F
  71+ 961F E1               pop hl
  72+ 9620
  73+ 9620 1A               ld a,(de)
  74+ 9621 AE               xor (hl)
  75+ 9622 77               ld (hl),a
  76+ 9623 2C               inc l
  77+ 9624 1C               inc e
  78+ 9625 1A               ld a,(de)
  79+ 9626 AE               xor (hl)
  80+ 9627 77               ld (hl),a
  81+ 9628 2C               inc l
  82+ 9629 1C               inc e
  83+ 962A 1A               ld a,(de)
  84+ 962B AE               xor (hl)
  85+ 962C 77               ld (hl),a
  86+ 962D 13               inc de
  87+ 962E
  88+ 962E E1               pop hl
  89+ 962F
  90+ 962F 1A               ld a,(de)
  91+ 9630 AE               xor (hl)
  92+ 9631 77               ld (hl),a
  93+ 9632 2C               inc l
  94+ 9633 1C               inc e
  95+ 9634 1A               ld a,(de)
  96+ 9635 AE               xor (hl)
  97+ 9636 77               ld (hl),a
  98+ 9637 2C               inc l
  99+ 9638 1C               inc e
 100+ 9639 1A               ld a,(de)
 101+ 963A AE               xor (hl)
 102+ 963B 77               ld (hl),a
 103+ 963C 13               inc de
 104+ 963D
 105+ 963D E1               pop hl
 106+ 963E
 107+ 963E 1A               ld a,(de)
 108+ 963F AE               xor (hl)
 109+ 9640 77               ld (hl),a
 110+ 9641 2C               inc l
 111+ 9642 1C               inc e
 112+ 9643 1A               ld a,(de)
 113+ 9644 AE               xor (hl)
 114+ 9645 77               ld (hl),a
 115+ 9646 2C               inc l
 116+ 9647 1C               inc e
 117+ 9648 1A               ld a,(de)
 118+ 9649 AE               xor (hl)
 119+ 964A 77               ld (hl),a
 120+ 964B 13               inc de
 121+ 964C
 122+ 964C E1               pop hl
 123+ 964D
 124+ 964D 1A               ld a,(de)
 125+ 964E AE               xor (hl)
 126+ 964F 77               ld (hl),a
 127+ 9650 2C               inc l
 128+ 9651 1C               inc e
 129+ 9652 1A               ld a,(de)
 130+ 9653 AE               xor (hl)
 131+ 9654 77               ld (hl),a
 132+ 9655 2C               inc l
 133+ 9656 1C               inc e
 134+ 9657 1A               ld a,(de)
 135+ 9658 AE               xor (hl)
 136+ 9659 77               ld (hl),a
 137+ 965A 13               inc de
 138+ 965B
 139+ 965B E1               pop hl
 140+ 965C
 141+ 965C 1A               ld a,(de)
 142+ 965D AE               xor (hl)
 143+ 965E 77               ld (hl),a
 144+ 965F 2C               inc l
 145+ 9660 1C               inc e
 146+ 9661 1A               ld a,(de)
 147+ 9662 AE               xor (hl)
 148+ 9663 77               ld (hl),a
 149+ 9664 2C               inc l
 150+ 9665 1C               inc e
 151+ 9666 1A               ld a,(de)
 152+ 9667 AE               xor (hl)
 153+ 9668 77               ld (hl),a
 154+ 9669 13               inc de
 155+ 966A
 156+ 966A E1               pop hl
 157+ 966B
 158+ 966B 1A               ld a,(de)
 159+ 966C AE               xor (hl)
 160+ 966D 77               ld (hl),a
 161+ 966E 2C               inc l
 162+ 966F 1C               inc e
 163+ 9670 1A               ld a,(de)
 164+ 9671 AE               xor (hl)
 165+ 9672 77               ld (hl),a
 166+ 9673 2C               inc l
 167+ 9674 1C               inc e
 168+ 9675 1A               ld a,(de)
 169+ 9676 AE               xor (hl)
 170+ 9677 77               ld (hl),a
 171+ 9678 13               inc de
 172+ 9679
 173+ 9679 E1               pop hl
 174+ 967A
 175+ 967A 1A               ld a,(de)
 176+ 967B AE               xor (hl)
 177+ 967C 77               ld (hl),a
 178+ 967D 2C               inc l
 179+ 967E 1C               inc e
 180+ 967F 1A               ld a,(de)
 181+ 9680 AE               xor (hl)
 182+ 9681 77               ld (hl),a
 183+ 9682 2C               inc l
 184+ 9683 1C               inc e
 185+ 9684 1A               ld a,(de)
 186+ 9685 AE               xor (hl)
 187+ 9686 77               ld (hl),a
 188+ 9687 13               inc de
 189+ 9688
 190+ 9688 E1               pop hl
 191+ 9689
 192+ 9689 1A               ld a,(de)
 193+ 968A AE               xor (hl)
 194+ 968B 77               ld (hl),a
 195+ 968C 2C               inc l
 196+ 968D 1C               inc e
 197+ 968E 1A               ld a,(de)
 198+ 968F AE               xor (hl)
 199+ 9690 77               ld (hl),a
 200+ 9691 2C               inc l
 201+ 9692 1C               inc e
 202+ 9693 1A               ld a,(de)
 203+ 9694 AE               xor (hl)
 204+ 9695 77               ld (hl),a
 205+ 9696 13               inc de
 206+ 9697
 207+ 9697 E1               pop hl
 208+ 9698
 209+ 9698 1A               ld a,(de)
 210+ 9699 AE               xor (hl)
 211+ 969A 77               ld (hl),a
 212+ 969B 2C               inc l
 213+ 969C 1C               inc e
 214+ 969D 1A               ld a,(de)
 215+ 969E AE               xor (hl)
 216+ 969F 77               ld (hl),a
 217+ 96A0 2C               inc l
 218+ 96A1 1C               inc e
 219+ 96A2 1A               ld a,(de)
 220+ 96A3 AE               xor (hl)
 221+ 96A4 77               ld (hl),a
 222+ 96A5 13               inc de
 223+ 96A6
 224+ 96A6 E1               pop hl
 225+ 96A7
 226+ 96A7 1A               ld a,(de)
 227+ 96A8 AE               xor (hl)
 228+ 96A9 77               ld (hl),a
 229+ 96AA 2C               inc l
 230+ 96AB 1C               inc e
 231+ 96AC 1A               ld a,(de)
 232+ 96AD AE               xor (hl)
 233+ 96AE 77               ld (hl),a
 234+ 96AF 2C               inc l
 235+ 96B0 1C               inc e
 236+ 96B1 1A               ld a,(de)
 237+ 96B2 AE               xor (hl)
 238+ 96B3 77               ld (hl),a
 239+ 96B4 13               inc de
 240+ 96B5
 241+ 96B5 E1               pop hl
 242+ 96B6
 243+ 96B6 1A               ld a,(de)
 244+ 96B7 AE               xor (hl)
 245+ 96B8 77               ld (hl),a
 246+ 96B9 2C               inc l
 247+ 96BA 1C               inc e
 248+ 96BB 1A               ld a,(de)
 249+ 96BC AE               xor (hl)
 250+ 96BD 77               ld (hl),a
 251+ 96BE 2C               inc l
 252+ 96BF 1C               inc e
 253+ 96C0 1A               ld a,(de)
 254+ 96C1 AE               xor (hl)
 255+ 96C2 77               ld (hl),a
 256+ 96C3 13               inc de
 257+ 96C4
 258+ 96C4 E1               pop hl
 259+ 96C5
 260+ 96C5 1A               ld a,(de)
 261+ 96C6 AE               xor (hl)
 262+ 96C7 77               ld (hl),a
 263+ 96C8 2C               inc l
 264+ 96C9 1C               inc e
 265+ 96CA 1A               ld a,(de)
 266+ 96CB AE               xor (hl)
 267+ 96CC 77               ld (hl),a
 268+ 96CD 2C               inc l
 269+ 96CE 1C               inc e
 270+ 96CF 1A               ld a,(de)
 271+ 96D0 AE               xor (hl)
 272+ 96D1 77               ld (hl),a
 273+ 96D2 13               inc de
 274+ 96D3
 275+ 96D3 E1               pop hl
 276+ 96D4
 277+ 96D4 1A               ld a,(de)
 278+ 96D5 AE               xor (hl)
 279+ 96D6 77               ld (hl),a
 280+ 96D7 2C               inc l
 281+ 96D8 1C               inc e
 282+ 96D9 1A               ld a,(de)
 283+ 96DA AE               xor (hl)
 284+ 96DB 77               ld (hl),a
 285+ 96DC 2C               inc l
 286+ 96DD 1C               inc e
 287+ 96DE 1A               ld a,(de)
 288+ 96DF AE               xor (hl)
 289+ 96E0 77               ld (hl),a
 290+ 96E1 13               inc de
 291+ 96E2
 292+ 96E2 E1               pop hl
 293+ 96E3
 294+ 96E3 1A               ld a,(de)
 295+ 96E4 AE               xor (hl)
 296+ 96E5 77               ld (hl),a
 297+ 96E6 2C               inc l
 298+ 96E7 1C               inc e
 299+ 96E8 1A               ld a,(de)
 300+ 96E9 AE               xor (hl)
 301+ 96EA 77               ld (hl),a
 302+ 96EB 2C               inc l
 303+ 96EC 1C               inc e
 304+ 96ED 1A               ld a,(de)
 305+ 96EE AE               xor (hl)
 306+ 96EF 77               ld (hl),a
 307+ 96F0 13               inc de
 308+ 96F1
 309+ 96F1 ED 73 9F 8C      ld (Scanlines_album_SP),sp
 310+ 96F5 ED 7B 84 8C      ld sp,(Stack)
 311+ 96F9 C9               ret
 312+ 96FA
 313+ 96FA              Pinta_lento
 314+ 96FA
 315+ 96FA E1           1 pop hl
 316+ 96FB
 317+ 96FB 1A               ld a,(de)
 318+ 96FC AE               xor (hl)
 319+ 96FD 77               ld (hl),a
 320+ 96FE 2C               inc l
 321+ 96FF 1C               inc e
 322+ 9700 1A               ld a,(de)
 323+ 9701 AE               xor (hl)
 324+ 9702 77               ld (hl),a
 325+ 9703 2C               inc l
 326+ 9704 1C               inc e
 327+ 9705 1A               ld a,(de)
 328+ 9706 AE               xor (hl)
 329+ 9707 77               ld (hl),a
 330+ 9708 13               inc de
 331+ 9709
 332+ 9709 10 EF            djnz 1B
 333+ 970B
 334+ 970B ED 73 9F 8C      ld (Scanlines_album_SP),sp
 335+ 970F ED 7B 84 8C      ld sp,(Stack)
 336+ 9713 C9               ret
# file closed: Pinta_Sprites.asm
2308  9714              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9714              ; ******************************************************************************************************************************************************************************************
   2+ 9714              ;
   3+ 9714              ; 26/06/23
   4+ 9714              ;
   5+ 9714              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9714
   7+ 9714              Draw
   8+ 9714
   9+ 9714 CD BA 99     	call Prepara_draw
  10+ 9717 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9718 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9719 28 05        	jr z,2F
  13+ 971B
  14+ 971B 3A 56 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 971E 18 0C        	jr 1F
  16+ 9720
  17+ 9720 2A 54 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9723 22 47 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9726 CD B2 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9729              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9729
  22+ 9729 CD 59 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 972C
  24+ 972C 3A 44 8C     1 ld a,(Ctrl_0)
  25+ 972F CB 6F        	bit 5,a
  26+ 9731 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9733
  28+ 9733 CD 48 97     	call Comprueba_limite_horizontal
  29+ 9736 CD D8 97     	call Comprueba_limite_vertical
  30+ 9739
  31+ 9739              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9739              ; -----------------------
  33+ 9739              ; -----------------------
  34+ 9739              ; -----------------------
  35+ 9739
  36+ 9739 CD 2E 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 973C CD 65 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 973F
  39+ 973F 3A 44 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9742 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9744 32 44 8C     	ld (Ctrl_0),a
  42+ 9747
  43+ 9747 C9           	ret
  44+ 9748
  45+ 9748              ; *******************************************************************************************************************************************************************************************
  46+ 9748              ;	21/01/23
  47+ 9748              ;
  48+ 9748              ; 	Comprueba_limite_horizontal.
  49+ 9748              ;
  50+ 9748              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9748              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9748              ;
  53+ 9748              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9748              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9748              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9748              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9748
  58+ 9748
  59+ 9748
  60+ 9748 3A 44 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 974B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 974D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 974F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9751 32 44 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9754 18 09            jr 6F
  66+ 9756 CB 5F        1 bit 3,a
  67+ 9758 28 0A            jr z,2F
  68+ 975A E6 F7            and $f7
  69+ 975C 32 44 8C         ld (Ctrl_0),a
  70+ 975F CD B2 98     6 call Inicializacion
  71+ 9762 18 5B            jr 5F
  72+ 9764 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9765
  74+ 9765              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9765              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9765
  77+ 9765 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9766 2A 58 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9769 CD B2 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 976C 67           	ld h,a
  81+ 976D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 976E CD B2 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9771 67           	ld h,a
  84+ 9772 A7           	and a
  85+ 9773 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9775 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9776 3A 56 8C     	ld a,(Cuad_objeto)
  88+ 9779 FE 02        	cp 2
  89+ 977B 38 1E        	jr c,3F
  90+ 977D 28 1C        	jr z,3F
  91+ 977F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9780 28 23            jr z,7F
  93+ 9782 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9784 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9786 E1           	pop hl
  96+ 9787
  97+ 9787              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9787              ; _para indicar con E="2" en caso necesario.
  99+ 9787
 100+ 9787 E5               push hl
 101+ 9788 C5               push bc
 102+ 9789 CD B2 94     	call calcula_tercio
 103+ 978C FE 01        	cp 1
 104+ 978E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9790 CD C0 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9793 28 26            jr z,9F
 107+ 9795 38 24            jr c,9F
 108+ 9797 1E 00        11 ld e,0
 109+ 9799 18 22            jr 8F
 110+ 979B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 979C 28 07        	jr z, 7F
 112+ 979E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97A0 1E 00         	ld e,0
 114+ 97A2 E1           	pop hl
 115+ 97A3 18 04        	jr 4F
 116+ 97A5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97A7 18 15            jr 10F
 118+ 97A9
 119+ 97A9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97A9              ; _para indicar con E="2" en caso necesario.
 121+ 97A9
 122+ 97A9 E5           4 push hl
 123+ 97AA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97AB CD B2 94     	call calcula_tercio
 125+ 97AE FE 01        	cp 1
 126+ 97B0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97B2 CD C0 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97B5 28 04            jr z,9F
 129+ 97B7 30 02            jr nc,9F
 130+ 97B9 18 02        	jr 8F
 131+ 97BB 1E 02        9 ld e,2
 132+ 97BD C1           8 pop bc
 133+ 97BE E1           10 pop hl
 134+ 97BF C9           5 ret
 135+ 97C0
 136+ 97C0              ; --------------------
 137+ 97C0              ;
 138+ 97C0              ; 25/08/22
 139+ 97C0
 140+ 97C0 CD B2 94     Comprueba_centro call calcula_tercio
 141+ 97C3 67               ld h,a
 142+ 97C4 08           	ex af,af
 143+ 97C5 FE 02        	cp 2
 144+ 97C7 38 07        	jr c,1F
 145+ 97C9 28 05        	jr z,1F
 146+ 97CB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97CE 18 03        	jr 2F
 148+ 97D0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97D3 08           2 ex af,af
 150+ 97D4 A7               and a
 151+ 97D5 ED 42            sbc hl,bc
 152+ 97D7 C9               ret
 153+ 97D8
 154+ 97D8              ; *********************************************************************************************************************************************************************************************
 155+ 97D8              ;
 156+ 97D8              ;   16/8/22
 157+ 97D8              ;
 158+ 97D8              ;	Comprueba_limite_vertical
 159+ 97D8              ;
 160+ 97D8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97D8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97D8              ;
 163+ 97D8
 164+ 97D8 2A 47 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97DB 7D           	ld a,l
 166+ 97DC E6 1F        	and $1F
 167+ 97DE 57           	ld d,a
 168+ 97DF 3A 5A 8C     	ld a,(Limite_vertical)
 169+ 97E2 BA           	cp d 											; Límite - Posición.
 170+ 97E3 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97E4 3A 56 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97E7 CB 47        	bit 0,a
 173+ 97E9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97EB
 175+ 97EB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97EB
 177+ 97EB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97EC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97EE
 180+ 97EE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97EE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97EE
 183+ 97EE 3A 38 8C         ld a,(Coordenada_X)
 184+ 97F1 16 0F            ld d,Centro_izquierda
 185+ 97F3 A7               and a
 186+ 97F4 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97F5 28 1E            jr z,3F
 188+ 97F7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97F9              ;                                                    ; _salimos sin modificar nada.
 190+ 97F9 18 0E            jr 2F
 191+ 97FB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97FC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97FE
 194+ 97FE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97FE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97FE
 197+ 97FE 3A 38 8C         ld a,(Coordenada_X)
 198+ 9801 16 10            ld d,Centro_derecha
 199+ 9803 A7               and a
 200+ 9804 92               sub d
 201+ 9805 28 0E            jr z,3F
 202+ 9807 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9809              ;                                                    ; _salimos sin modificar nada.
 204+ 9809 CB 43        2 bit 0,e
 205+ 980B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 980D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 980E CD A2 98         call Modificaccionne
 208+ 9811 C1           	pop bc
 209+ 9812 CD B2 98         call Inicializacion
 210+ 9815 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9816
 212+ 9816              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9816
 214+ 9816 C5           4 push bc
 215+ 9817 01 46 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 981A 0A           	ld a,(bc)
 217+ 981B 3D           	dec a
 218+ 981C 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 981D 7D           	ld a,l
 220+ 981E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 981F CB 47        	bit 0,a
 222+ 9821 28 03        	jr z,5F
 223+ 9823 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9824 18 2E        	jr 7F
 225+ 9826
 226+ 9826              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9826
 228+ 9826 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9827 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9828 3A 44 8C     	ld a,(Ctrl_0)
 231+ 982B CB 4F        	bit 1,a
 232+ 982D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 982F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9830
 235+ 9830              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9830
 237+ 9830 1C               inc e
 238+ 9831 1D               dec e
 239+ 9832 20 07            jr nz,12F
 240+ 9834 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9835 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9836 22 47 8C     	ld (Posicion_actual),hl
 243+ 9839 18 44        13 jr 9F
 244+ 983B CB 43        12 bit 0,e
 245+ 983D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 983F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 983F C1           	pop bc
 248+ 9840 18 D3        	jr 3B
 249+ 9842 80           14 add b
 250+ 9843 6F               ld l,a
 251+ 9844 22 47 8C     	ld (Posicion_actual),hl
 252+ 9847 CD A2 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 984A 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 984C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 984E 32 44 8C         ld (Ctrl_0),a
 256+ 9851 F1           	pop af
 257+ 9852 18 2B        	jr 9F
 258+ 9854
 259+ 9854              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9854
 261+ 9854 F5           7 push af
 262+ 9855 3A 44 8C     	ld a,(Ctrl_0)
 263+ 9858 CB 47        	bit 0,a
 264+ 985A 20 1D        	jr nz,8F
 265+ 985C F1           	pop af
 266+ 985D
 267+ 985D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 985D
 269+ 985D 1C           	inc e
 270+ 985E 1D               dec e
 271+ 985F 20 07            jr nz,10F
 272+ 9861 90           	sub b
 273+ 9862 6F               ld l,a
 274+ 9863 22 47 8C     	ld (Posicion_actual),hl
 275+ 9866 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9868              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9868 CB 43        10 bit 0,e
 278+ 986A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 986C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 986C C1           	pop bc
 281+ 986D 18 A6        	jr 3B
 282+ 986F 90           16 sub b
 283+ 9870 6F               ld l,a
 284+ 9871 22 47 8C     	ld (Posicion_actual),hl
 285+ 9874 CD A2 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9877 18 06            jr 9F
 287+ 9879 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 987B 32 44 8C         ld (Ctrl_0),a
 289+ 987E F1           	pop af
 290+ 987F C1           9 pop bc
 291+ 9880 1E 00        	ld e,0
 292+ 9882 CD B2 98         call Inicializacion
 293+ 9885 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9886 08           	ex af,af
 295+ 9887 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9888 18 8B            jr 3B
 297+ 988A
 298+ 988A              ; --------------------
 299+ 988A
 300+ 988A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 988C CD D5 99     1 call PreviousScan
 302+ 988F 10 FB            djnz 1B
 303+ 9891 22 47 8C     	ld (Posicion_actual),hl
 304+ 9894 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9895 C9           	ret
 306+ 9896
 307+ 9896              ; --------------------
 308+ 9896
 309+ 9896 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9898 CD C6 99     1 call NextScan
 311+ 989B 10 FB            djnz 1B
 312+ 989D 22 47 8C     	ld (Posicion_actual),hl
 313+ 98A0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98A1 C9           	ret
 315+ 98A2
 316+ 98A2              ; --------------------
 317+ 98A2              ;
 318+ 98A2              ;	22/01/23
 319+ 98A2              ;
 320+ 98A2              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98A2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98A2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98A2
 324+ 98A2
 325+ 98A2              Modificaccionne
 326+ 98A2
 327+ 98A2 3A 56 8C     	ld a,(Cuad_objeto)
 328+ 98A5 FE 02        	cp 2
 329+ 98A7 CC 8A 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98AA DC 8A 98         call c,Modifica_Pos_actual
 331+ 98AD C8           	ret z
 332+ 98AE CD 96 98         call Modifica_Pos_actual2
 333+ 98B1 C9               ret
 334+ 98B2
 335+ 98B2              ; *************************************************************************************************************************************************************************************************
 336+ 98B2              ;
 337+ 98B2              ;	13/8/22
 338+ 98B2              ;
 339+ 98B2              ;	Inicializacion
 340+ 98B2              ;
 341+ 98B2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98B2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98B2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98B2              ;
 345+ 98B2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98B2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98B2              ;	_ desaparece/aparece.
 348+ 98B2
 349+ 98B2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98B2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98B2              ;
 352+ 98B2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98B2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98B2              ; 		   [E] ="0"
 355+ 98B2
 356+ 98B2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98B2
 358+ 98B2 CD B2 94     Inicializacion call calcula_tercio
 359+ 98B5 28 36        	jr z,primit
 360+ 98B7 E6 02        	and 2
 361+ 98B9 20 07        	jr nz,segmit
 362+ 98BB 7D           	ld a,l
 363+ 98BC FE 7F        	cp $7f
 364+ 98BE 38 2D        	jr c,primit
 365+ 98C0 28 2B        	jr z,primit
 366+ 98C2 CD 28 99     segmit call column
 367+ 98C5 38 13        	jr c,tercuad
 368+ 98C7 3E 04        cuarcuad ld a,4
 369+ 98C9 32 56 8C     	ld (Cuad_objeto),a
 370+ 98CC 21 20 48     	ld hl,$4820
 371+ 98CF 22 58 8C     	ld (Limite_horizontal),hl
 372+ 98D2 21 5A 8C     	ld hl,Limite_vertical
 373+ 98D5 36 0D        	ld (hl),$0d
 374+ 98D7 08           	ex af,af
 375+ 98D8 18 3C        	jr 1F
 376+ 98DA              tercuad
 377+ 98DA 3E 03        	ld a,3
 378+ 98DC 32 56 8C     	ld (Cuad_objeto),a
 379+ 98DF 21 20 48     	ld hl,$4820
 380+ 98E2 22 58 8C     	ld (Limite_horizontal),hl
 381+ 98E5 21 5A 8C     	ld hl,Limite_vertical
 382+ 98E8 36 12        	ld (hl),$12
 383+ 98EA 08           	ex af,af
 384+ 98EB 18 29        	jr 1F
 385+ 98ED CD 28 99     primit call column
 386+ 98F0 38 13        	jr c, primcuad
 387+ 98F2              segcuad
 388+ 98F2 3E 02        	ld a,2
 389+ 98F4 32 56 8C     	ld (Cuad_objeto),a
 390+ 98F7 21 C0 4F     	ld hl,$4fc0
 391+ 98FA 22 58 8C     	ld (Limite_horizontal),hl
 392+ 98FD 21 5A 8C     	ld hl,Limite_vertical
 393+ 9900 36 0D        	ld (hl),$0d
 394+ 9902 08           	ex af,af
 395+ 9903 18 11        	jr 1F
 396+ 9905              primcuad
 397+ 9905 3E 01        	ld a,1
 398+ 9907 32 56 8C     	ld (Cuad_objeto),a
 399+ 990A 21 C0 4F     	ld hl,$4fc0
 400+ 990D 22 58 8C     	ld (Limite_horizontal),hl
 401+ 9910 21 5A 8C     	ld hl,Limite_vertical
 402+ 9913 36 12        	ld (hl),$12
 403+ 9915 08           	ex af,af
 404+ 9916
 405+ 9916 C5           1 push bc
 406+ 9917 E5           	push hl
 407+ 9918 D5           	push de
 408+ 9919
 409+ 9919 2A 47 8C     	ld hl,(Posicion_actual)
 410+ 991C CD D0 94     	call Genera_coordenadas
 411+ 991F
 412+ 991F D1           	pop de
 413+ 9920 E1           	pop hl
 414+ 9921 C1           	pop bc
 415+ 9922
 416+ 9922 21 44 8C     	ld hl,Ctrl_0
 417+ 9925 CB EE        	set 5,(hl)
 418+ 9927 C9           	ret
 419+ 9928
 420+ 9928              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9928
 422+ 9928              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9928              ;
 424+ 9928              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9928
 426+ 9928 7D           column ld a,l
 427+ 9929 E6 1F        	and $1f
 428+ 992B FE 10         	cp $10
 429+ 992D C9            	ret
 430+ 992E
 431+ 992E              ; --------------------------------------------------------------------------------------------------------------------
 432+ 992E              ;
 433+ 992E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 992E              ;
 435+ 992E              ; 14/12/22
 436+ 992E              ;
 437+ 992E              ;	Modifica: A y BC.
 438+ 992E
 439+ 992E 3A 56 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9931 E6 01        	and 1
 441+ 9933 28 17        	jr z,1F
 442+ 9935
 443+ 9935              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9935
 445+ 9935 3A 38 8C     	ld a,(Coordenada_X)
 446+ 9938 47           	ld b,a
 447+ 9939 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 993A 79           	ld a,c
 449+ 993B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 993C 38 08        	jr c,2F
 451+ 993E 47           	ld b,a
 452+ 993F 79           	ld a,c
 453+ 9940 90           	sub b
 454+ 9941 32 57 8C     	ld (Columnas),a
 455+ 9944 18 1B        	jr 4F
 456+ 9946 79           2 ld a,c
 457+ 9947 32 57 8C     	ld (Columnas),a
 458+ 994A 18 15        	jr 4F
 459+ 994C
 460+ 994C              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 994C
 462+ 994C 3A 38 8C     1 ld a,(Coordenada_X)
 463+ 994F 81           	add c
 464+ 9950 3D           	dec a
 465+ 9951 D6 1F        	sub $1f
 466+ 9953 38 08        	jr c,3F
 467+ 9955 47           	ld b,a
 468+ 9956 79           	ld a,c
 469+ 9957 90           	sub b
 470+ 9958 32 57 8C     	ld (Columnas),a
 471+ 995B 18 04        	jr 4F
 472+ 995D 79           3 ld a,c
 473+ 995E 32 57 8C     	ld (Columnas),a
 474+ 9961 D9           4 exx
 475+ 9962 4F           	ld c,a
 476+ 9963 D9           	exx
 477+ 9964 C9            ret
 478+ 9965
 479+ 9965              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9965              ;
 481+ 9965              ;   19/7/23
 482+ 9965              ;
 483+ 9965              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9965              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9965              ;
 486+ 9965              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9965              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9965              ;
 489+ 9965              ;	DESTRUYE: HL,B Y A.
 490+ 9965
 491+ 9965 3A 56 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9968 FE 02        	cp 2
 493+ 996A 38 18        	jr c,1F
 494+ 996C 28 16        	jr z,1F
 495+ 996E E6 01        	and 1
 496+ 9970 28 0D        	jr z,3F
 497+ 9972
 498+ 9972              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9972
 500+ 9972 CD AE 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9975
 502+ 9975 7D           9 ld a,l
 503+ 9976 E6 1F        	and $1f
 504+ 9978 28 2A        	jr z,7F
 505+ 997A 2B           	dec hl
 506+ 997B 10 F8        	djnz 9B
 507+ 997D 18 25        	jr 7F
 508+ 997F
 509+ 997F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 997F
 511+ 997F 2A 47 8C     3 ld hl,(Posicion_actual)
 512+ 9982 18 20        	jr 7F
 513+ 9984
 514+ 9984 28 14        1 jr z,2F
 515+ 9986
 516+ 9986              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9986
 518+ 9986 CD AE 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9989
 520+ 9989 7D           4 ld a,l
 521+ 998A E6 1F        	and $1f
 522+ 998C 28 03        	jr z,6F
 523+ 998E 2B           	dec hl
 524+ 998F 10 F8        	djnz 4B
 525+ 9991 06 0F        6 ld b,15
 526+ 9993 CD D5 99     5 call PreviousScan
 527+ 9996 10 FB        	djnz 5B
 528+ 9998 18 0A        	jr 7F
 529+ 999A
 530+ 999A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 999A
 532+ 999A CD AE 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 999D 06 0F        	ld b,15
 534+ 999F CD D5 99     8 call PreviousScan
 535+ 99A2 10 FB        	djnz 8B
 536+ 99A4
 537+ 99A4 E5           7 push hl
 538+ 99A5 DD E1        	pop ix
 539+ 99A7
 540+ 99A7 2A 49 8C     	ld hl,(Puntero_objeto)
 541+ 99AA E5           	push hl
 542+ 99AB FD E1        	pop iy
 543+ 99AD
 544+ 99AD C9           	ret
 545+ 99AE
 546+ 99AE              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99AE              ;
 548+ 99AE              ;	2/1/23
 549+ 99AE              ;
 550+ 99AE              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99AE              ;
 552+ 99AE              ;	Tras esta rutina tenemos:
 553+ 99AE              ;
 554+ 99AE              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99AE              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99AE              ;
 557+ 99AE              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99AE
 559+ 99AE 2A 47 8C     Operandos ld hl,(Posicion_actual)
 560+ 99B1 3A 57 8C     	ld a,(Columnas)
 561+ 99B4 3D           	dec a
 562+ 99B5 20 01        	jr nz,1F
 563+ 99B7 3C           	inc a
 564+ 99B8 47           1 ld b,a
 565+ 99B9 C9           	ret
 566+ 99BA
 567+ 99BA              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99BA              ;
 569+ 99BA              ;	Prepara_draw
 570+ 99BA              ;
 571+ 99BA              ;	Es una rutina de carga.
 572+ 99BA              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99BA              ;
 574+ 99BA              ;	FUNCIONAMIENTO:
 575+ 99BA              ;
 576+ 99BA              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99BA              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99BA              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99BA              ;
 580+ 99BA              ;	DESTRUYE:
 581+ 99BA              ;
 582+ 99BA              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99BA
 584+ 99BA 21 45 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99BD 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99BE 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99BF 4E           	ld c,(hl)
 588+ 99C0 2A 47 8C     	ld hl,(Posicion_actual)
 589+ 99C3 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99C5 C9           	ret
 591+ 99C6
 592+ 99C6              ;----------------------------------------------------------------------------------------------------------------
 593+ 99C6              ;
 594+ 99C6              ;	5/08/22
 595+ 99C6              ;
 596+ 99C6              ;   NextScan.
 597+ 99C6              ;
 598+ 99C6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99C6              ;
 600+ 99C6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99C6              ;
 602+ 99C6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99C6              ;
 604+ 99C6              ;       DESTRUIDOS: AF y HL !!!
 605+ 99C6              ;
 606+ 99C6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99C6              ;
 608+ 99C6
 609+ 99C6 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99C7 7C               ld a,h
 611+ 99C8 E6 07            and 7
 612+ 99CA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99CB
 614+ 99CB 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99CC C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99CE 6F               ld l,a
 617+ 99CF D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99D0
 619+ 99D0 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99D1 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99D3 67               ld h,a
 622+ 99D4 C9               ret
 623+ 99D5
 624+ 99D5              ;----------------------------------------------------------------------------------------------------------------
 625+ 99D5              ;
 626+ 99D5              ;	5/08/22
 627+ 99D5              ;
 628+ 99D5              ;   PreviousScan.
 629+ 99D5              ;
 630+ 99D5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99D5              ;
 632+ 99D5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99D5              ;
 634+ 99D5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99D5              ;
 636+ 99D5              ;       DESTRUIDOS: AF y HL !!!
 637+ 99D5              ;
 638+ 99D5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99D5              ;
 640+ 99D5
 641+ 99D5 7C           PreviousScan ld a,h
 642+ 99D6 25               dec h               ; Dec H.
 643+ 99D7 E6 07            and 7
 644+ 99D9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99DA
 646+ 99DA 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99DB D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99DD 6F               ld l,a
 649+ 99DE D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99DF
 651+ 99DF 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99E0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99E2 67               ld h,a
 654+ 99E3 C9               ret
 655+ 99E4
 656+ 99E4
 657+ 99E4
 658+ 99E4
 659+ 99E4
 660+ 99E4
 661+ 99E4
 662+ 99E4
 663+ 99E4
 664+ 99E4
 665+ 99E4
 666+ 99E4
# file closed: Draw_XOR.asm
2309  99E4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99E4
   2+ 99E4              ; ******************************************************************************************************************************************************************************************
   3+ 99E4              ;
   4+ 99E4              ;   20/05/23
   5+ 99E4              ;
   6+ 99E4              ;	Recompone_posicion_inicio
   7+ 99E4              ;
   8+ 99E4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99E4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99E4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99E4              ;	_ a una u otra rutina.
  12+ 99E4
  13+ 99E4              Recompone_posicion_inicio
  14+ 99E4
  15+ 99E4 2A 54 8C     	ld hl,(Posicion_inicio)
  16+ 99E7 7D           	ld a,l
  17+ 99E8 E6 1F        	and $1f
  18+ 99EA 28 16        	jr z,1F
  19+ 99EC
  20+ 99EC FE 1F        	cp $1f
  21+ 99EE 28 0D        	jr z,3F
  22+ 99F0
  23+ 99F0 21 43 8C     	ld hl,Ctrl_2
  24+ 99F3 CB C6        	set 0,(hl)
  25+ 99F5 2A 49 8C     	ld hl,(Puntero_objeto)
  26+ 99F8 22 75 8C     	ld (Repone_puntero_objeto),hl
  27+ 99FB 18 08        	jr 2F
  28+ 99FD
  29+ 99FD CD AB 9B     3 call Mov_left
  30+ 9A00 18 03        	jr 2F
  31+ 9A02
  32+ 9A02 CD 88 9A     1 call Mov_right
  33+ 9A05 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A08 22 49 8C     	ld (Puntero_objeto),hl
  35+ 9A0B C9           	ret
  36+ 9A0C
  37+ 9A0C              ; ******************************************************************************************************************************************************************************************
  38+ 9A0C              ;
  39+ 9A0C              ;   27/05/23
  40+ 9A0C              ;
  41+ 9A0C              ;	Mov_down
  42+ 9A0C              ;
  43+ 9A0C              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A0C              ;
  45+ 9A0C              ;
  46+ 9A0C              Mov_down
  47+ 9A0C
  48+ 9A0C CD 76 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A0F              ;																	; _ repone (Puntero_objeto).
  50+ 9A0F 21 44 8C     	ld hl,Ctrl_0
  51+ 9A12 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A14              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A14              ; 																	; _ en el caso de que no lo haya.
  54+ 9A14 3A 5F 8C     	ld a,(Vel_down)
  55+ 9A17 47           	ld b,a
  56+ 9A18 2A 47 8C         ld hl,(Posicion_actual)
  57+ 9A1B CD B2 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A1E E6 02        	and 2
  59+ 9A20 28 17        	jr z,1F
  60+ 9A22
  61+ 9A22              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A22              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A22
  64+ 9A22 7C           	ld a,h
  65+ 9A23 FE 57        	cp $57
  66+ 9A25 20 12        	jr nz,1F
  67+ 9A27
  68+ 9A27 7D           	ld a,l
  69+ 9A28 C6 20        	add $20
  70+ 9A2A 30 0D        	jr nc,1F
  71+ 9A2C
  72+ 9A2C              ; ------------------------------
  73+ 9A2C              ;
  74+ 9A2C              ;	12/01/24
  75+ 9A2C
  76+ 9A2C              ;	call Reaparece_arriba
  77+ 9A2C CD 38 9D     	call Reinicio
  78+ 9A2F
  79+ 9A2F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A2F
  81+ 9A2F 3A A5 8C     	ld a,(Ctrl_3)
  82+ 9A32 CB CF        	set 1,a
  83+ 9A34 32 A5 8C     	ld (Ctrl_3),a
  84+ 9A37
  85+ 9A37 18 08        	jr 3F
  86+ 9A39              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A39              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A39              ; ------------------------------
  89+ 9A39
  90+ 9A39 CD C6 99     1 call NextScan
  91+ 9A3C 22 47 8C     	ld (Posicion_actual),hl
  92+ 9A3F 10 DA            djnz 2B
  93+ 9A41 CD D0 94     3 call Genera_coordenadas
  94+ 9A44 C9           	ret
  95+ 9A45
  96+ 9A45              ; ******************************************************************************************************************************************************************************************
  97+ 9A45              ;
  98+ 9A45              ;   27/05/23
  99+ 9A45              ;
 100+ 9A45              ;	Mov_up
 101+ 9A45              ;
 102+ 9A45              ; 	Mueve el Sprite hacia arriba.
 103+ 9A45              ;
 104+ 9A45              ;
 105+ 9A45              Mov_up
 106+ 9A45
 107+ 9A45 CD 76 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A48              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A48 21 44 8C     	ld hl,Ctrl_0
 110+ 9A4B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A4D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A4D              ; 																		; _ en el caso de que no lo haya.
 113+ 9A4D 3A 5E 8C     	ld a,(Vel_up)
 114+ 9A50 47           	ld b,a
 115+ 9A51 2A 47 8C     	ld hl,(Posicion_actual)
 116+ 9A54 CD B2 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A57 A7           	and a
 118+ 9A58 20 10        	jr nz,1F
 119+ 9A5A
 120+ 9A5A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A5A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A5A
 123+ 9A5A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A5B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A5D 20 0B            jr nz,1F
 126+ 9A5F 7D               ld a,l
 127+ 9A60 D6 20            sub $20
 128+ 9A62 30 06            jr nc,1F
 129+ 9A64 25               dec h
 130+ 9A65
 131+ 9A65              ; -----------------------------
 132+ 9A65 CD 19 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A68              ;	call Reinicio
 134+ 9A68              ; -----------------------------
 135+ 9A68
 136+ 9A68 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A6A CD D5 99     1 call PreviousScan
 138+ 9A6D 22 47 8C     	ld (Posicion_actual),hl
 139+ 9A70 10 E2            djnz 3B
 140+ 9A72 CD D0 94     2 call Genera_coordenadas
 141+ 9A75 C9           	ret
 142+ 9A76
 143+ 9A76              ; -----------------------------
 144+ 9A76              ;
 145+ 9A76              ;	27/5/23
 146+ 9A76              ;
 147+ 9A76              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A76              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A76              ;
 150+ 9A76              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A76              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A76              ;
 153+ 9A76              ;	Modifica: A y (Puntero_objeto).
 154+ 9A76
 155+ 9A76 3A 43 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A79 CB 47        	bit 0,a
 157+ 9A7B C8           	ret z
 158+ 9A7C CB 87        	res 0,a
 159+ 9A7E 32 43 8C     	ld (Ctrl_2),a
 160+ 9A81 2A 75 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A84 22 49 8C     	ld (Puntero_objeto),hl
 162+ 9A87 C9           	ret
 163+ 9A88
 164+ 9A88              ; ******************************************************************************************************************************************************************************************
 165+ 9A88              ;
 166+ 9A88              ;	19/10/22
 167+ 9A88              ;
 168+ 9A88              ;	Mov_right.
 169+ 9A88              ;
 170+ 9A88              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A88              ;
 172+ 9A88
 173+ 9A88 3A 44 8C     Mov_right ld a,(Ctrl_0)
 174+ 9A8B CB 77        	bit 6,a
 175+ 9A8D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A8F
 177+ 9A8F CD C7 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A92 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A93
 180+ 9A93 21 44 8C     	ld hl,Ctrl_0
 181+ 9A96 CB E6        	set 4,(hl)
 182+ 9A98 18 52        	jr 8F
 183+ 9A9A
 184+ 9A9A 21 44 8C     10 ld hl,Ctrl_0
 185+ 9A9D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A9F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A9F              ; 																	; _ en el caso de que no lo haya.
 188+ 9A9F 3A 38 8C     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AA2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AA4 20 46        	jr nz,8F
 191+ 9AA6
 192+ 9AA6 3A 4B 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AA9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AAA 28 40        	jr z,8F
 195+ 9AAC
 196+ 9AAC              ; ---------- ---------- ----------
 197+ 9AAC              ;
 198+ 9AAC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AAC
 200+ 9AAC 3A 5D 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AAF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AB1 28 11        	jr z,1F
 203+ 9AB3 38 06        	jr c,6F
 204+ 9AB5 FE 04        	cp 4
 205+ 9AB7 28 14        	jr z,7F
 206+ 9AB9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ABB
 208+ 9ABB              ; ---------- ---------- ----------
 209+ 9ABB              ;
 210+ 9ABB              ; Perfiles de velocidad
 211+ 9ABB              ;
 212+ 9ABB
 213+ 9ABB 3A 4B 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ABE FE FE        	cp $fe
 215+ 9AC0 20 2A        	jr nz,8F
 216+ 9AC2 18 10        	jr 3F
 217+ 9AC4 3A 4B 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AC7 FE FD        	cp $fd
 219+ 9AC9 20 21        	jr nz,8F
 220+ 9ACB 18 07        	jr 3F
 221+ 9ACD 3A 4B 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AD0 FE FB        	cp $fb
 223+ 9AD2 20 18        	jr nz,8F
 224+ 9AD4
 225+ 9AD4              ; ---------- ---------- ----------
 226+ 9AD4
 227+ 9AD4              3
 228+ 9AD4 CD 07 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AD7              ;	call Reinicio
 230+ 9AD7
 231+ 9AD7              ; ---------- ---------- ----------
 232+ 9AD7              ;
 233+ 9AD7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AD7
 235+ 9AD7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AD9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9ADA CD F3 9A     	call DESPLZ_DER
 238+ 9ADD C1           	pop bc
 239+ 9ADE 10 F9        	djnz 5B
 240+ 9AE0 2A 47 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AE3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AE4 22 47 8C     	ld (Posicion_actual),hl
 243+ 9AE7 CD D0 94     	call Genera_coordenadas
 244+ 9AEA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AEC
 246+ 9AEC              ; ---------- ---------- ----------
 247+ 9AEC
 248+ 9AEC 2A 47 8C     8 ld hl,(Posicion_actual)
 249+ 9AEF CD F3 9A     	call DESPLZ_DER
 250+ 9AF2 C9           2 ret
 251+ 9AF3
 252+ 9AF3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AF3              ;
 254+ 9AF3              ;	22/9/22
 255+ 9AF3              ;
 256+ 9AF3
 257+ 9AF3 CD 02 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9AF6 CD 4E 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AF9 CD 77 9B         call Ciclo_completo
 260+ 9AFC 21 44 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AFF CB FE        	set 7,(hl)
 262+ 9B01 C9           	ret
 263+ 9B02
 264+ 9B02              ; ******************************************************************************************************************************************************************************************
 265+ 9B02              ;	15/02/23
 266+ 9B02              ;
 267+ 9B02
 268+ 9B02 3A 5D 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B05 47           	ld b,a
 270+ 9B06 2A 50 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B09 23           1 inc hl
 272+ 9B0A 23           	inc hl
 273+ 9B0B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B0D 22 50 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B10 CD B1 90     	call Extrae_address
 276+ 9B13 22 49 8C     	ld (Puntero_objeto),hl
 277+ 9B16
 278+ 9B16              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B16
 280+ 9B16              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B16              ; Cuántos movimientos hemos hecho ??
 282+ 9B16              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B16
 284+ 9B16 2A 4C 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B19 EB           	ex de,hl
 286+ 9B1A A7           	and a
 287+ 9B1B ED 52        	sbc hl,de
 288+ 9B1D CB 3D        	srl l
 289+ 9B1F 3E 08        6 ld a,8
 290+ 9B21 95           	sub l
 291+ 9B22 30 1E        	jr nc,3F
 292+ 9B24
 293+ 9B24              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B24              ; B="0".
 295+ 9B24
 296+ 9B24 04           4 inc b
 297+ 9B25 3C           	inc a
 298+ 9B26 20 FC        	jr nz,4B
 299+ 9B28 78           	ld a,b
 300+ 9B29 08           	ex af,af
 301+ 9B2A 2A 4C 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B2D 23           5 inc hl
 303+ 9B2E 23           	inc hl
 304+ 9B2F 10 FC        	djnz 5B
 305+ 9B31 22 50 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B34 CD B1 90     	call Extrae_address
 307+ 9B37 22 49 8C     	ld (Puntero_objeto),hl
 308+ 9B3A
 309+ 9B3A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B3A              ; _(Posicion_actual).
 311+ 9B3A
 312+ 9B3A 21 47 8C     	ld hl,Posicion_actual
 313+ 9B3D 34           	inc (hl)
 314+ 9B3E 08               ex af,af
 315+ 9B3F 6F           	ld l,a
 316+ 9B40 18 DD        	jr 6B
 317+ 9B42
 318+ 9B42              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B42
 320+ 9B42 47           3 ld b,a
 321+ 9B43 2A 4E 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B46 23           2 inc hl
 323+ 9B47 23           	inc hl
 324+ 9B48 10 FC        	djnz 2B
 325+ 9B4A 22 52 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B4D C9           8 ret
 327+ 9B4E
 328+ 9B4E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B4E              ;
 330+ 9B4E              ;	24/7/22
 331+ 9B4E              ;
 332+ 9B4E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B4E              ;
 334+ 9B4E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B4E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B4E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B4E
 338+ 9B4E 3A 4B 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B51 A7           	and a
 340+ 9B52 20 1F        	jr nz,1F
 341+ 9B54 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B56 32 4B 8C         ld (CTRL_DESPLZ),a
 343+ 9B59
 344+ 9B59 21 46 8C     	ld hl,Columns
 345+ 9B5C 34           	inc (hl)
 346+ 9B5D 3A 56 8C     	ld a,(Cuad_objeto)
 347+ 9B60 E6 01        	and 1
 348+ 9B62 28 0F        	jr z,1F
 349+ 9B64 2A 47 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B67 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B68 22 47 8C     	ld (Posicion_actual),hl
 352+ 9B6B CD D0 94     	call Genera_coordenadas
 353+ 9B6E CD D3 9C     	call Inc_CTRL_DESPLZ
 354+ 9B71 18 03        	jr 2F
 355+ 9B73 CD D3 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B76 C9           2 ret
 357+ 9B77
 358+ 9B77              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B77              ;
 360+ 9B77              ;	24/7/22
 361+ 9B77              ;
 362+ 9B77              ;	Ciclo_completo.
 363+ 9B77              ;
 364+ 9B77              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B77              ;
 366+ 9B77              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B77              ; 	Decrementamos (Columns).
 368+ 9B77              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B77              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B77
 371+ 9B77
 372+ 9B77 3A 4B 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B7A FE FF        	cp $ff
 374+ 9B7C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B7E E6 F0        	and $f0
 376+ 9B80 20 28        	jr nz,3F
 377+ 9B82
 378+ 9B82              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B82
 380+ 9B82 3A 4B 8C     	ld a,(CTRL_DESPLZ)
 381+ 9B85 47           	ld b,a
 382+ 9B86 3E F8        	ld a,$f8
 383+ 9B88 80           	add b
 384+ 9B89 32 4B 8C     	ld (CTRL_DESPLZ),a
 385+ 9B8C 18 1C        	jr 3F
 386+ 9B8E 21 46 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B91 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B92 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B93 32 4B 8C     	ld (CTRL_DESPLZ),a
 390+ 9B96 3A 56 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B99 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B9B 20 0A        	jr nz,2F
 393+ 9B9D 2A 47 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BA0 23           	inc hl
 395+ 9BA1 22 47 8C     	ld (Posicion_actual),hl
 396+ 9BA4 CD D0 94     	call Genera_coordenadas
 397+ 9BA7
 398+ 9BA7              ; Inicia el puntero de Sprite.
 399+ 9BA7
 400+ 9BA7 CD C6 90     2 call Inicia_puntero_objeto_der
 401+ 9BAA C9           3 ret
 402+ 9BAB
 403+ 9BAB              ; ******************************************************************************************************************************************************************************************
 404+ 9BAB              ;
 405+ 9BAB              ;	15/02/23
 406+ 9BAB              ;
 407+ 9BAB              ;	Mov_left.
 408+ 9BAB              ;
 409+ 9BAB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BAB              ;
 411+ 9BAB              Mov_left
 412+ 9BAB
 413+ 9BAB 21 44 8C     	ld hl,Ctrl_0
 414+ 9BAE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BB0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BB0              ; 																	; _ en el caso de que no lo haya.
 417+ 9BB0 3A 44 8C     	ld a,(Ctrl_0)
 418+ 9BB3 CB 77        	bit 6,a
 419+ 9BB5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BB7
 421+ 9BB7 CD CD 9C     	call Stop_Amadeus_left
 422+ 9BBA C8           	ret z
 423+ 9BBB 20 4A        	jr nz,8F
 424+ 9BBD
 425+ 9BBD 3A 38 8C     11 ld a,(Coordenada_X)
 426+ 9BC0 A7           	and a
 427+ 9BC1 20 44        	jr nz,8F
 428+ 9BC3
 429+ 9BC3 3A 4B 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BC6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BC7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BC9
 433+ 9BC9              ; ---------- ---------- ----------
 434+ 9BC9
 435+ 9BC9 3A 5C 8C     	ld a,(Vel_left)
 436+ 9BCC FE 02        	cp 2
 437+ 9BCE 28 0F        	jr z,1F
 438+ 9BD0 38 04        	jr c,6F
 439+ 9BD2 FE 04        	cp 4
 440+ 9BD4 28 12        	jr z,7F
 441+ 9BD6
 442+ 9BD6              ; ---------- ---------- ----------
 443+ 9BD6
 444+ 9BD6 3A 4B 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9BD9 FE F8        	cp $f8
 446+ 9BDB 20 2A        	jr nz,8F
 447+ 9BDD 18 10        	jr 4F
 448+ 9BDF 3A 4B 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9BE2 FE F9        	cp $f9
 450+ 9BE4 20 21        	jr nz,8F
 451+ 9BE6 18 07        	jr 4F
 452+ 9BE8 3A 4B 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9BEB FE FB        	cp $fb
 454+ 9BED 20 18        	jr nz,8F
 455+ 9BEF
 456+ 9BEF              ; ---------- ---------- ----------
 457+ 9BEF
 458+ 9BEF              4
 459+ 9BEF CD F5 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BF2              ;	call Reinicio
 461+ 9BF2
 462+ 9BF2              ; ---------- ---------- ----------
 463+ 9BF2
 464+ 9BF2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BF4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BF5
 467+ 9BF5              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BF5              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BF5
 470+ 9BF5 CD 0E 9C     	call DESPLZ_IZQ
 471+ 9BF8 C1           	pop bc
 472+ 9BF9 10 F9        	djnz 5B
 473+ 9BFB 2A 47 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BFE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BFF 22 47 8C     	ld (Posicion_actual),hl
 476+ 9C02 CD D0 94     	call Genera_coordenadas
 477+ 9C05 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C07
 479+ 9C07              ; ---------- ---------- ----------
 480+ 9C07
 481+ 9C07              ; Movemos, no hay recolocación.
 482+ 9C07
 483+ 9C07 2A 47 8C     8 ld hl,(Posicion_actual)
 484+ 9C0A CD 0E 9C     	call DESPLZ_IZQ
 485+ 9C0D C9           2 ret
 486+ 9C0E
 487+ 9C0E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C0E              ;
 489+ 9C0E              ;	22/9/22
 490+ 9C0E
 491+ 9C0E              DESPLZ_IZQ
 492+ 9C0E
 493+ 9C0E CD 1D 9C     	call Desplaza_izquierda
 494+ 9C11 CD 69 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C14 CD 91 9C     	call Ciclo_completo_2
 496+ 9C17 21 44 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C1A CB BE        	res 7,(hl)
 498+ 9C1C C9           	ret
 499+ 9C1D
 500+ 9C1D              Desplaza_izquierda
 501+ 9C1D
 502+ 9C1D 3A 5C 8C     	ld a,(Vel_left)
 503+ 9C20 47           	ld b,a
 504+ 9C21 2A 52 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C24 23           1 inc hl
 506+ 9C25 23           	inc hl
 507+ 9C26 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C28 22 52 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C2B CD B1 90     	call Extrae_address
 510+ 9C2E 22 49 8C     	ld (Puntero_objeto),hl
 511+ 9C31
 512+ 9C31              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C31
 514+ 9C31              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C31              ; Cuántos movimientos hemos hecho ??
 516+ 9C31              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C31
 518+ 9C31 2A 4E 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C34 EB           	ex de,hl
 520+ 9C35 A7           	and a
 521+ 9C36 ED 52        	sbc hl,de
 522+ 9C38 CB 3D        	srl l
 523+ 9C3A 3E 08        6 ld a,8
 524+ 9C3C 95           	sub l
 525+ 9C3D 30 1E        	jr nc,3F
 526+ 9C3F
 527+ 9C3F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C3F              ; B="0".
 529+ 9C3F
 530+ 9C3F 04           4 inc b
 531+ 9C40 3C           	inc a
 532+ 9C41 20 FC        	jr nz,4B
 533+ 9C43 78           	ld a,b
 534+ 9C44 08           	ex af,af
 535+ 9C45 2A 4E 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C48 23           5 inc hl
 537+ 9C49 23           	inc hl
 538+ 9C4A 10 FC        	djnz 5B
 539+ 9C4C 22 52 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C4F CD B1 90     	call Extrae_address
 541+ 9C52 22 49 8C     	ld (Puntero_objeto),hl
 542+ 9C55
 543+ 9C55              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C55              ; _(Posicion_actual).
 545+ 9C55
 546+ 9C55 21 47 8C     	ld hl,Posicion_actual
 547+ 9C58 35           	dec (hl)
 548+ 9C59 08           	ex af,af
 549+ 9C5A 6F           	ld l,a
 550+ 9C5B 18 DD        	jr 6B
 551+ 9C5D
 552+ 9C5D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C5D
 554+ 9C5D 47           3 ld b,a
 555+ 9C5E 2A 4C 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C61 23           2 inc hl
 557+ 9C62 23           	inc hl
 558+ 9C63 10 FC        	djnz 2B
 559+ 9C65 22 50 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C68 C9           8 ret
 561+ 9C69
 562+ 9C69              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C69              ;
 564+ 9C69              ;	modifica_parametros_1er_DESPLZ
 565+ 9C69              ;
 566+ 9C69              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C69              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C69              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C69
 570+ 9C69 3A 4B 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C6C A7           	and a
 572+ 9C6D 20 1E        	jr nz,1F
 573+ 9C6F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C70 32 4B 8C         ld (CTRL_DESPLZ),a
 575+ 9C73 21 46 8C     	ld hl,Columns
 576+ 9C76 34           	inc (hl)
 577+ 9C77 3A 56 8C     	ld a,(Cuad_objeto)
 578+ 9C7A E6 01        	and 1
 579+ 9C7C 20 0F        	jr nz,1F
 580+ 9C7E 2A 47 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C81 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C82 22 47 8C     	ld (Posicion_actual),hl
 583+ 9C85 CD D0 94     	call Genera_coordenadas
 584+ 9C88 CD E4 9C     	call Dec_CTRL_DESPLZ
 585+ 9C8B 18 03        	jr 2F
 586+ 9C8D CD E4 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C90 C9           2 ret
 588+ 9C91
 589+ 9C91              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C91
 591+ 9C91 3A 4B 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C94 FE F7        	cp $f7
 593+ 9C96 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C98 30 2C        	jr nc,3F
 595+ 9C9A
 596+ 9C9A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C9A
 598+ 9C9A 06 00        	ld b,0
 599+ 9C9C 04           4 inc b
 600+ 9C9D 3C           	inc a
 601+ 9C9E FE F7        	cp $f7
 602+ 9CA0 20 FA        	jr nz,4B
 603+ 9CA2 3E FF        	ld a,$ff
 604+ 9CA4 90           	sub b
 605+ 9CA5 32 4B 8C     	ld (CTRL_DESPLZ),a
 606+ 9CA8 18 1C        	jr 3F
 607+ 9CAA
 608+ 9CAA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CAA
 610+ 9CAA 21 46 8C     1 ld hl,Columns
 611+ 9CAD 35           	dec (hl)
 612+ 9CAE AF           	xor a
 613+ 9CAF 32 4B 8C     	ld (CTRL_DESPLZ),a
 614+ 9CB2 3A 56 8C     	ld a,(Cuad_objeto)
 615+ 9CB5 E6 01        	and 1
 616+ 9CB7 28 0A        	jr z,2F
 617+ 9CB9 2A 47 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CBC 2B           	dec hl
 619+ 9CBD 22 47 8C     	ld (Posicion_actual),hl
 620+ 9CC0 CD D0 94     	call Genera_coordenadas
 621+ 9CC3
 622+ 9CC3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CC3
 624+ 9CC3 CD D9 90     2 call Inicia_puntero_objeto_izq
 625+ 9CC6 C9           3 ret
 626+ 9CC7
 627+ 9CC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CC7              ;
 629+ 9CC7              ;	19/10/22
 630+ 9CC7              ;
 631+ 9CC7              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CC7              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CC7
 634+ 9CC7 3A 38 8C     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CCA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CCC C9           	ret
 637+ 9CCD
 638+ 9CCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CCD              ;
 640+ 9CCD              ;	19/10/22
 641+ 9CCD              ;
 642+ 9CCD              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CCD              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CCD
 645+ 9CCD 3A 38 8C     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CD0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CD2 C9           	ret
 648+ 9CD3
 649+ 9CD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CD3              ;
 651+ 9CD3              ;	24/7/22
 652+ 9CD3              ;
 653+ 9CD3              ;	Inc_CTRL_DESPLZ
 654+ 9CD3              ;
 655+ 9CD3              ;
 656+ 9CD3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CD3
 658+ 9CD3 21 4B 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CD6 3A 5D 8C     	ld a,(Vel_right)
 660+ 9CD9 A7           	and a
 661+ 9CDA 28 06        	jr z,1F
 662+ 9CDC 47           	ld b,a
 663+ 9CDD 34           3 inc (hl)
 664+ 9CDE 10 FD        	djnz 3B
 665+ 9CE0 18 01        	jr 2F
 666+ 9CE2 34           1 inc (hl)
 667+ 9CE3 C9           2 ret
 668+ 9CE4
 669+ 9CE4              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CE4              ;
 671+ 9CE4              ;	5/2/23
 672+ 9CE4              ;
 673+ 9CE4              ;	Dec_CTRL_DESPLZ
 674+ 9CE4              ;
 675+ 9CE4              ;
 676+ 9CE4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CE4
 678+ 9CE4 21 4B 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CE7 3A 5C 8C     	ld a,(Vel_left)
 680+ 9CEA A7           	and a
 681+ 9CEB 28 06        	jr z,1F
 682+ 9CED 47           	ld b,a
 683+ 9CEE 35           3 dec (hl)
 684+ 9CEF 10 FD        	djnz 3B
 685+ 9CF1 18 01        	jr 2F
 686+ 9CF3 35           1 dec (hl)
 687+ 9CF4 C9           2 ret
 688+ 9CF5
 689+ 9CF5              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CF5
 691+ 9CF5 2A 47 8C     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CF8 01 1F 00     	ld bc,31
 693+ 9CFB A7           	and a
 694+ 9CFC ED 4A        	adc hl,bc
 695+ 9CFE 22 47 8C     	ld (Posicion_actual),hl
 696+ 9D01 21 44 8C     	ld hl,Ctrl_0														; $xxx1
 697+ 9D04 CB C6        	set 0,(hl)
 698+ 9D06 C9           	ret
 699+ 9D07
 700+ 9D07              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D07
 702+ 9D07 2A 47 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D0A 01 1F 00     	ld bc,31
 704+ 9D0D A7           	and a
 705+ 9D0E ED 42        	sbc hl,bc
 706+ 9D10 22 47 8C     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D13 21 44 8C     	ld hl,Ctrl_0
 708+ 9D16 CB CE        	set 1,(hl)
 709+ 9D18 C9           	ret
 710+ 9D19
 711+ 9D19              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D19
 713+ 9D19 24           Reaparece_abajo inc h
 714+ 9D1A 01 E0 17     	ld bc,$17e0
 715+ 9D1D A7           	and a
 716+ 9D1E ED 4A        	adc hl,bc
 717+ 9D20 22 47 8C     	ld (Posicion_actual),hl
 718+ 9D23 21 44 8C     	ld hl,Ctrl_0
 719+ 9D26 CB D6        	set 2,(hl)
 720+ 9D28 C9           	ret
 721+ 9D29
 722+ 9D29              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D29
 724+ 9D29 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D2C A7           	and a
 726+ 9D2D ED 42        	sbc hl,bc
 727+ 9D2F 22 47 8C     	ld (Posicion_actual),hl
 728+ 9D32 21 44 8C     	ld hl,Ctrl_0
 729+ 9D35 CB DE        	set 3,(hl)
 730+ 9D37 C9           	ret
 731+ 9D38
 732+ 9D38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D38              ;
 734+ 9D38              ;	15/07/23
 735+ 9D38
 736+ 9D38              Reinicio
 737+ 9D38
 738+ 9D38              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D38
 740+ 9D38 AF           	xor a
 741+ 9D39 21 6C 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D3C CD 5A 9D     	call Limpia_contenido_hl
 743+ 9D3F
 744+ 9D3F 21 47 8C     	ld hl,Posicion_actual
 745+ 9D42 CD 5A 9D     	call Limpia_contenido_hl
 746+ 9D45
 747+ 9D45 CD B2 92     	call Inicializa_Puntero_indice_mov
 748+ 9D48 CD 59 9E     	call Inicia_Puntero_mov
 749+ 9D4B
 750+ 9D4B 21 6E 8C     	ld hl,Incrementa_puntero
 751+ 9D4E 06 05        	ld b,5
 752+ 9D50 77           1 ld (hl),a
 753+ 9D51 23           	inc hl
 754+ 9D52 10 FC        	djnz 1B
 755+ 9D54
 756+ 9D54 21 43 8C     	ld hl,Ctrl_2
 757+ 9D57 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D59
 759+ 9D59 C9           	ret
 760+ 9D5A
 761+ 9D5A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D5B 23           	inc hl
 763+ 9D5C 77           	ld (hl),a
 764+ 9D5D C9           	ret
 765+ 9D5E
 766+ 9D5E              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D5E              ;
 768+ 9D5E              ;	18/6/24
 769+ 9D5E              ;
 770+ 9D5E
 771+ 9D5E              Amadeus_a_izquierda
 772+ 9D5E
 773+ 9D5E              ;	Actualiza contador de movimientos.
 774+ 9D5E
 775+ 9D5E 21 F5 89     	ld hl,Comm_Amadeus
 776+ 9D61 35           	dec (hl)
 777+ 9D62 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D64
 779+ 9D64 2A F3 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D67 2B           	dec hl
 781+ 9D68 2B           	dec hl
 782+ 9D69 2B           	dec hl
 783+ 9D6A 2B           	dec hl
 784+ 9D6B 22 F3 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D6E
 786+ 9D6E 21 A5 8C     	ld hl,Ctrl_3
 787+ 9D71 CB EE        	set 5,(hl)
 788+ 9D73
 789+ 9D73 C9           	ret
 790+ 9D74
 791+ 9D74 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D75 C9           	ret
 793+ 9D76
 794+ 9D76
 795+ 9D76              Amadeus_a_derecha
 796+ 9D76
 797+ 9D76              ;	Actualiza contador de movimientos.
 798+ 9D76
 799+ 9D76 21 F5 89     	ld hl,Comm_Amadeus
 800+ 9D79 34           	inc (hl)
 801+ 9D7A 3E 7A        	ld a,$7a
 802+ 9D7C BE           	cp (hl)
 803+ 9D7D 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D7F
 805+ 9D7F 2A F3 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D82 23           	inc hl
 807+ 9D83 23           	inc hl
 808+ 9D84 23           	inc hl
 809+ 9D85 23           	inc hl
 810+ 9D86 22 F3 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D89
 812+ 9D89 21 A5 8C     	ld hl,Ctrl_3
 813+ 9D8C CB EE        	set 5,(hl)
 814+ 9D8E C9           	ret
 815+ 9D8F
 816+ 9D8F 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D90 C9           	ret
# file closed: Direcciones.asm
2310  9D91              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D91              ; ----- ----- ----- ----- -----
   2+ 9D91              ;
   3+ 9D91              ;   28/12/23
   4+ 9D91
   5+ 9D91              Movimiento
   6+ 9D91
   7+ 9D91              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D91
   9+ 9D91 3A 43 8C         ld a,(Ctrl_2)
  10+ 9D94 CB 57            bit 2,a
  11+ 9D96 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D98
  13+ 9D98 2A 6A 8C         ld hl,(Puntero_mov)
  14+ 9D9B 7E               ld a,(hl)
  15+ 9D9C
  16+ 9D9C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D9C
  18+ 9D9C              Inicia_desplazamiento.
  19+ 9D9C
  20+ 9D9C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D9C
  22+ 9D9C CD 8F 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D9F
  24+ 9D9F              ; Iniciamos (Repetimos_mov).
  25+ 9D9F
  26+ 9D9F 7E               ld a,(hl)
  27+ 9DA0 E6 0F            and $0f
  28+ 9DA2 32 70 8C         ld (Repetimos_desplazamiento),a
  29+ 9DA5 32 71 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DA8
  31+ 9DA8              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DA8
  33+ 9DA8 23               inc hl
  34+ 9DA9 7E               ld a,(hl)
  35+ 9DAA 32 73 8C         ld (Cola_de_desplazamiento),a
  36+ 9DAD 2B               dec hl
  37+ 9DAE
  38+ 9DAE 21 43 8C         ld hl,Ctrl_2
  39+ 9DB1 CB D6            set 2,(hl)
  40+ 9DB3
  41+ 9DB3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DB3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DB3
  44+ 9DB3              Desplazamiento_iniciado
  45+ 9DB3
  46+ 9DB3 CD 63 9E         call Aplica_desplazamiento
  47+ 9DB6
  48+ 9DB6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DB6
  50+ 9DB6 3A A5 8C         ld a,(Ctrl_3)
  51+ 9DB9 CB 4F            bit 1,a
  52+ 9DBB C0               ret nz
  53+ 9DBC
  54+ 9DBC 21 70 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DBF 35               dec (hl)
  56+ 9DC0 C0               ret nz
  57+ 9DC1
  58+ 9DC1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DC1              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DC1              ; Analiza (Cola_de_desplazamiento).
  61+ 9DC1
  62+ 9DC1 3A 73 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DC4 A7               and a
  64+ 9DC5 CC B8 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DC8 28 30            jr z,Reinicia_el_movimiento
  66+ 9DCA
  67+ 9DCA FE FF            cp $ff
  68+ 9DCC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DCE
  70+ 9DCE FE FE            cp $fe
  71+ 9DD0 CC 3D 9E         call z,Fijamos_bucle
  72+ 9DD3 28 25            jr z,Reinicia_el_movimiento
  73+ 9DD5
  74+ 9DD5 FE FD            cp $fd
  75+ 9DD7 20 11            jr nz,1F
  76+ 9DD9
  77+ 9DD9              ; ---
  78+ 9DD9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DD9
  80+ 9DD9 3A 43 8C         ld a,(Ctrl_2)
  81+ 9DDC CB 5F            bit 3,a
  82+ 9DDE 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DE0
  84+ 9DE0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DE0
  86+ 9DE0 21 43 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DE3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DE5
  89+ 9DE5 CD 4E 9E         call Inicia_Repetimos_movimiento
  90+ 9DE8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DEA              ; ---
  92+ 9DEA
  93+ 9DEA FE 01        1 cp 1
  94+ 9DEC CA 27 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DEF
  96+ 9DEF 3D               dec a
  97+ 9DF0 32 73 8C         ld (Cola_de_desplazamiento),a
  98+ 9DF3
  99+ 9DF3 3A 71 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DF6 32 70 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DF9              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DF9 C9               ret
 103+ 9DFA
 104+ 9DFA              Reinicia_el_movimiento
 105+ 9DFA
 106+ 9DFA 3A 43 8C         ld a,(Ctrl_2)
 107+ 9DFD CB 5F            bit 3,a
 108+ 9DFF 28 1B            jr z,2F
 109+ 9E01
 110+ 9E01              ; (Cola_de_desplazamiento)="254".
 111+ 9E01
 112+ 9E01 21 72 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E04 35               dec (hl)
 114+ 9E05 20 15            jr nz,2F
 115+ 9E07
 116+ 9E07              ; Fin de las repeticiones del último movimiento.
 117+ 9E07
 118+ 9E07 21 43 8C         ld hl,Ctrl_2
 119+ 9E0A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E0C
 121+ 9E0C 2A 6A 8C         ld hl,(Puntero_mov)
 122+ 9E0F 23               inc hl
 123+ 9E10 23               inc hl
 124+ 9E11 23               inc hl
 125+ 9E12 22 6A 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E15              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E15 7E               ld a,(hl)
 128+ 9E16 32 73 8C         ld (Cola_de_desplazamiento),a
 129+ 9E19
 130+ 9E19 C3 C1 9D         jp Cola
 131+ 9E1C
 132+ 9E1C CD 59 9E     2 call Inicia_Puntero_mov
 133+ 9E1F
 134+ 9E1F 21 43 8C         ld hl,Ctrl_2
 135+ 9E22 CB 96            res 2,(hl)
 136+ 9E24
 137+ 9E24 C3 91 9D         jp Movimiento
 138+ 9E27
 139+ 9E27              Siguiente_desplazamiento
 140+ 9E27
 141+ 9E27              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E27              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E27
 144+ 9E27 21 43 8C         ld hl,Ctrl_2
 145+ 9E2A CB 96            res 2,(hl)
 146+ 9E2C
 147+ 9E2C 2A 6A 8C         ld hl,(Puntero_mov)
 148+ 9E2F 23               inc hl
 149+ 9E30 23               inc hl
 150+ 9E31 22 6A 8C         ld (Puntero_mov),hl
 151+ 9E34
 152+ 9E34 7E               ld a,(hl)
 153+ 9E35 A7               and a
 154+ 9E36 CC B8 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E39 CA FA 9D         jp z,Reinicia_el_movimiento
 156+ 9E3C
 157+ 9E3C C9               ret
 158+ 9E3D
 159+ 9E3D              ; Subrutinas -----------------------------------------
 160+ 9E3D              ; ---------- --------- --------- ---------- ----------
 161+ 9E3D              ;
 162+ 9E3D              ;   24/07/23
 163+ 9E3D              ;
 164+ 9E3D              ;   Fijamos_bucle
 165+ 9E3D              ;
 166+ 9E3D              ;
 167+ 9E3D
 168+ 9E3D              Fijamos_bucle
 169+ 9E3D
 170+ 9E3D 3A 6E 8C         ld a,(Incrementa_puntero)
 171+ 9E40 3C               inc a
 172+ 9E41 32 6F 8C         ld (Incrementa_puntero_backup),a
 173+ 9E44
 174+ 9E44 CD B8 9E         call Incrementa_Puntero_indice_mov
 175+ 9E47 2A 68 8C         ld hl,(Puntero_indice_mov)
 176+ 9E4A 22 6C 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E4D C9               ret
 178+ 9E4E
 179+ 9E4E              ; ---------- --------- --------- ---------- ----------
 180+ 9E4E              ;
 181+ 9E4E              ;   07/7/23
 182+ 9E4E              ;
 183+ 9E4E              ;   Inicia_Repetimos_movimiento
 184+ 9E4E              ;
 185+ 9E4E              ;
 186+ 9E4E
 187+ 9E4E              Inicia_Repetimos_movimiento
 188+ 9E4E
 189+ 9E4E              ; Iniciamos (Repetimos_movimiento).
 190+ 9E4E
 191+ 9E4E DD 2A 6A 8C      ld ix,(Puntero_mov)
 192+ 9E52 DD 7E 02         ld a,(ix+2)
 193+ 9E55 32 72 8C         ld (Repetimos_movimiento),a
 194+ 9E58
 195+ 9E58 C9               ret
 196+ 9E59
 197+ 9E59              ; ---------- --------- --------- ---------- ----------
 198+ 9E59              ;
 199+ 9E59              ;   26/6/23
 200+ 9E59              ;
 201+ 9E59              ;   Inicia_Puntero_mov
 202+ 9E59              ;
 203+ 9E59              ;
 204+ 9E59
 205+ 9E59 2A 68 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E5C CD B1 90         call Extrae_address
 207+ 9E5F 22 6A 8C         ld (Puntero_mov),hl
 208+ 9E62 C9               ret
 209+ 9E63
 210+ 9E63              ; ---------- --------- --------- ---------- ----------
 211+ 9E63              ;
 212+ 9E63              ;   27/06/23
 213+ 9E63              ;
 214+ 9E63              ;   Aplica_movimiento.
 215+ 9E63
 216+ 9E63              Aplica_desplazamiento
 217+ 9E63
 218+ 9E63              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E63
 220+ 9E63 2A 6A 8C         ld hl, (Puntero_mov)
 221+ 9E66
 222+ 9E66 7E               ld a,(hl)
 223+ 9E67 E6 F0            and $f0
 224+ 9E69 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E6A
 226+ 9E6A CB 7E            bit 7,(hl)
 227+ 9E6C 28 03            jr z,1F
 228+ 9E6E CD 45 9A         call Mov_up
 229+ 9E71 2A 6A 8C     1 ld hl, (Puntero_mov)
 230+ 9E74 CB 76            bit 6,(hl)
 231+ 9E76 28 03            jr z,2F
 232+ 9E78 CD 0C 9A         call Mov_down
 233+ 9E7B
 234+ 9E7B              ; Se ha aplicado reinicio ???
 235+ 9E7B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E7B
 237+ 9E7B              ;    ld a,(Ctrl_3)
 238+ 9E7B              ;    bit 1,a
 239+ 9E7B              ;    ret nz
 240+ 9E7B
 241+ 9E7B 2A 6A 8C     2 ld hl, (Puntero_mov)
 242+ 9E7E CB 6E            bit 5,(hl)
 243+ 9E80 28 03            jr z,3F
 244+ 9E82 CD AB 9B         call Mov_left
 245+ 9E85 2A 6A 8C     3 ld hl, (Puntero_mov)
 246+ 9E88 CB 66            bit 4,(hl)
 247+ 9E8A C8               ret z
 248+ 9E8B CD 88 9A         call Mov_right
 249+ 9E8E C9               ret
 250+ 9E8F
 251+ 9E8F              ; ---------- --------- --------- ---------- ----------
 252+ 9E8F              ;
 253+ 9E8F              ;   26/06/23
 254+ 9E8F              ;
 255+ 9E8F              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E8F
 257+ 9E8F              Ajusta_velocidad_desplazamiento
 258+ 9E8F
 259+ 9E8F              ; 1er byte de la cadena de movimiento.
 260+ 9E8F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E8F
 262+ 9E8F CD AD 9E         call Extrae_nibble_alto
 263+ 9E92
 264+ 9E92 32 5E 8C         ld (Vel_up),a
 265+ 9E95 79               ld a,c
 266+ 9E96 E6 0F            and $0f
 267+ 9E98 32 5F 8C         ld (Vel_down),a
 268+ 9E9B
 269+ 9E9B              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E9B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E9B
 272+ 9E9B 23               inc hl
 273+ 9E9C CD AD 9E         call Extrae_nibble_alto
 274+ 9E9F
 275+ 9E9F 32 5C 8C         ld (Vel_left),a
 276+ 9EA2 79               ld a,c
 277+ 9EA3 E6 0F            and $0f
 278+ 9EA5 32 5D 8C         ld (Vel_right),a
 279+ 9EA8
 280+ 9EA8              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EA8
 282+ 9EA8 23               inc hl
 283+ 9EA9 22 6A 8C         ld (Puntero_mov),hl
 284+ 9EAC C9               ret
 285+ 9EAD
 286+ 9EAD 06 04        Extrae_nibble_alto ld b,4
 287+ 9EAF 7E               ld a,(hl)
 288+ 9EB0 4F               ld c,a
 289+ 9EB1 E6 F0            and $f0
 290+ 9EB3 CB 3F        1 srl a
 291+ 9EB5 10 FC            djnz 1B
 292+ 9EB7 C9               ret
 293+ 9EB8
 294+ 9EB8              ; ---------- --------- --------- ---------- ----------
 295+ 9EB8              ;
 296+ 9EB8              ;   5/7/23
 297+ 9EB8              ;
 298+ 9EB8              ;   Incrementa_Puntero_indice_mov
 299+ 9EB8
 300+ 9EB8              Incrementa_Puntero_indice_mov
 301+ 9EB8
 302+ 9EB8 21 6E 8C         ld hl,Incrementa_puntero
 303+ 9EBB 34               inc (hl)
 304+ 9EBC
 305+ 9EBC 2A 68 8C         ld hl,(Puntero_indice_mov)
 306+ 9EBF 01 02 00         ld bc,2
 307+ 9EC2 A7               and a
 308+ 9EC3 09               add hl,bc
 309+ 9EC4 22 68 8C         ld (Puntero_indice_mov),hl
 310+ 9EC7
 311+ 9EC7 7E               ld a,(hl)
 312+ 9EC8 A7               and a
 313+ 9EC9
 314+ 9EC9              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EC9
 316+ 9EC9              ;    jr z,$
 317+ 9EC9
 318+ 9EC9              ;! Reinicia el Patrón de movimiento.
 319+ 9EC9
 320+ 9EC9 CC CE 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9ECC
 322+ 9ECC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9ECD
 324+ 9ECD C9               ret
 325+ 9ECE
 326+ 9ECE              ; ---------- --------- --------- ---------- ----------
 327+ 9ECE              ;
 328+ 9ECE              ;   15/01/24
 329+ 9ECE              ;
 330+ 9ECE              ;   Inicializa_Puntero_indice_mov
 331+ 9ECE
 332+ 9ECE              Inicializa_Puntero_indice_mov_2
 333+ 9ECE
 334+ 9ECE              ; Existe etiqueta de bucle principal???
 335+ 9ECE
 336+ 9ECE 2A 6C 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9ED1 24               inc h
 338+ 9ED2 25               dec h
 339+ 9ED3 28 05            jr z,2F
 340+ 9ED5
 341+ 9ED5 22 68 8C         ld (Puntero_indice_mov),hl
 342+ 9ED8 18 14            jr 3F
 343+ 9EDA
 344+ 9EDA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EDA
 346+ 9EDA 3A 6E 8C     2 ld a,(Incrementa_puntero)
 347+ 9EDD 47               ld b,a
 348+ 9EDE
 349+ 9EDE 2A 68 8C         ld hl,(Puntero_indice_mov)
 350+ 9EE1 2B           1 dec hl
 351+ 9EE2 2B               dec hl
 352+ 9EE3 10 FC            djnz 1B
 353+ 9EE5 22 68 8C         ld (Puntero_indice_mov),hl
 354+ 9EE8
 355+ 9EE8 AF               xor a
 356+ 9EE9 32 6E 8C         ld (Incrementa_puntero),a
 357+ 9EEC 18 06            jr 4F
 358+ 9EEE
 359+ 9EEE 3A 6F 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9EF1 32 6E 8C         ld (Incrementa_puntero),a
 361+ 9EF4 C9           4 ret
 362+ 9EF5
 363+ 9EF5              ; ----------------------------------------------------------------------
 364+ 9EF5              ;
 365+ 9EF5              ;   30/01/24
 366+ 9EF5              ;
 367+ 9EF5              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EF5
 369+ 9EF5 3A 37 8C     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EF8 CD 4D 94         call Calcula_salto_en_BC
 371+ 9EFB 21 60 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EFE A7               and a
 373+ 9EFF ED 4A            adc hl,bc
 374+ 9F01 C9               ret
 375+ 9F02
 376+ 9F02              ; ----------------------------------------------------------------------
 377+ 9F02              ;
 378+ 9F02              ;   30/01/24
 379+ 9F02              ;
 380+ 9F02              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F02              ;
 382+ 9F02              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F02
 384+ 9F02 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F03 23               inc hl
 386+ 9F04 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F05 69               ld l,c
 388+ 9F06 60               ld h,b
 389+ 9F07 22 40 8C         ld (Contador_de_mov_masticados),hl
 390+ 9F0A C9               ret
 391+ 9F0B
# file closed: Movimiento.asm
2311  9F0B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F0B              ; --------------------------------------------------------------------------------------
   2+ 9F0B              ;
   3+ 9F0B              ;   17/8/24
   4+ 9F0B              ;
   5+ 9F0B              ;   Modifica: HL y DE.
   6+ 9F0B
   7+ 9F0B
   8+ 9F0B              Genera_datos_de_impresion_disparos_Amadeus
   9+ 9F0B
  10+ 9F0B ED 73 84 8C      ld (Stack),sp
  11+ 9F0F 31 8A 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
  12+ 9F12
  13+ 9F12 21 94 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
  14+ 9F15
  15+ 9F15 D1               pop de                                                    ; Puntero_objeto del disparo en DE.
  16+ 9F16
  17+ 9F16 14               inc d
  18+ 9F17 15               dec d
  19+ 9F18
  20+ 9F18 28 1A            jr z,Siguiente_disparo_Amadeus
  21+ 9F1A
  22+ 9F1A              Genera_scanlines_de_disparo_Amadeus
  23+ 9F1A
  24+ 9F1A E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
  25+ 9F1B              ;                                                             ; Puntero_de_impresión del disparo en HL.
  26+ 9F1B F3               di
  27+ 9F1C 18 FE            jr $
  28+ 9F1E FB               ei
  29+ 9F1F
  30+ 9F1F 31 7C 82         ld sp,Disparos_Amadeus_scanlines_album
  31+ 9F22
  32+ 9F22 C1               pop bc
  33+ 9F23 C1               pop bc
  34+ 9F24 C1               pop bc
  35+ 9F25 C1               pop bc
  36+ 9F26
  37+ 9F26
  38+ 9F26 E5               push hl                                                   ; 3er scanline del disparo.
  39+ 9F27 CD D5 99         call PreviousScan
  40+ 9F2A E5               push hl                                                   ; 2º scanline.
  41+ 9F2B CD D5 99         call PreviousScan
  42+ 9F2E E5               push hl                                                   ; 1er scanline.
  43+ 9F2F D5               push de                                                   ; Puntero_objeto del disparo.
  44+ 9F30
  45+ 9F30 ED 73 84 8C      ld (Stack),sp
  46+ 9F34
  47+ 9F34
  48+ 9F34
  49+ 9F34              Siguiente_disparo_Amadeus
  50+ 9F34
  51+ 9F34 D1               pop de
  52+ 9F35 33               inc sp
  53+ 9F36
  54+ 9F36 ED 72            sbc hl,sp                                                 ; Última caja ???
  55+ 9F38 20 D8            jr nz,1B
  56+ 9F3A
  57+ 9F3A ED 7B 84 8C      ld sp,(Stack)
  58+ 9F3E
  59+ 9F3E C9               ret
  60+ 9F3F
  61+ 9F3F
  62+ 9F3F
  63+ 9F3F
  64+ 9F3F
  65+ 9F3F
  66+ 9F3F
  67+ 9F3F
  68+ 9F3F
  69+ 9F3F
  70+ 9F3F
  71+ 9F3F
  72+ 9F3F              ; --------------------------------------------------------------------------------------
  73+ 9F3F              ;
  74+ 9F3F              ;   17/08/24
  75+ 9F3F              ;
  76+ 9F3F
  77+ 9F3F              Genera_disparo_Amadeus
  78+ 9F3F
  79+ 9F3F              ;   Exclusiones.
  80+ 9F3F
  81+ 9F3F 3A BE 8C         ld a,(Disparo_Amadeus)
  82+ 9F42 A7               and a
  83+ 9F43 C8               ret z                                                    ; Salimos si el disparo de nuestra nave no está habilitado.
  84+ 9F44
  85+ 9F44              Define_puntero_objeto_disparo
  86+ 9F44
  87+ 9F44              ;   Inicializamos contador.
  88+ 9F44
  89+ 9F44 06 00            ld b,0
  90+ 9F46 2A F1 89         ld hl,(p.imp.amadeus)
  91+ 9F49 2C               inc l
  92+ 9F4A
  93+ 9F4A 3E 80            ld a,$80
  94+ 9F4C BE               cp (hl)
  95+ 9F4D 28 0D            jr z,1F
  96+ 9F4F
  97+ 9F4F 04               inc b
  98+ 9F50 3E 60            ld a,$60
  99+ 9F52 BE               cp (hl)
 100+ 9F53 28 07            jr z,1F
 101+ 9F55
 102+ 9F55 04               inc b
 103+ 9F56 3E 18            ld a,$18
 104+ 9F58 BE               cp (hl)
 105+ 9F59 28 01            jr z,1F
 106+ 9F5B
 107+ 9F5B 04               inc b
 108+ 9F5C
 109+ 9F5C              ;   Calcula el Puntero_de_impresión del disparo.
 110+ 9F5C
 111+ 9F5C              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 112+ 9F5C
 113+ 9F5C CD D5 99     1 call PreviousScan
 114+ 9F5F
 115+ 9F5F 78               ld a,b
 116+ 9F60 CB 3F            srl a
 117+ 9F62 28 03            jr z,4F
 118+ 9F64
 119+ 9F64              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 120+ 9F64 E5               push hl
 121+ 9F65 18 02            jr 5F
 122+ 9F67 2D           4 dec l
 123+ 9F68 E5               push hl
 124+ 9F69              ; ---
 125+ 9F69
 126+ 9F69              ;   Calcula el Puntero_objeto del disparo.
 127+ 9F69
 128+ 9F69 21 C0 83     5 ld hl,Indice_disparo
 129+ 9F6C 04               inc b
 130+ 9F6D 05               dec b
 131+ 9F6E 28 04            jr z,2F
 132+ 9F70
 133+ 9F70              ;   Nos desplazamos por el índice de disparos.
 134+ 9F70
 135+ 9F70 2C           3 inc l
 136+ 9F71 2C               inc l
 137+ 9F72 10 FC            djnz 3B
 138+ 9F74
 139+ 9F74              ; --- Guarda el Puntero_objeto del disparo en la pila.
 140+ 9F74 CD B1 90     2 call Extrae_address
 141+ 9F77 E5               push hl
 142+ 9F78              ; ---
 143+ 9F78
 144+ 9F78              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 145+ 9F78              ; HL en el 1er .db de la caja y (Puntero_DESPLZ_DISPARO_AMADEUS) avanza una posición en el índice.
 146+ 9F78
 147+ 9F78 2A A9 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 148+ 9F7B CD B1 90         call Extrae_address
 149+ 9F7E
 150+ 9F7E 06 02            ld b,2
 151+ 9F80
 152+ 9F80 D1           6 pop de
 153+ 9F81 73               ld (hl),e
 154+ 9F82 23               inc hl
 155+ 9F83 72               ld (hl),d
 156+ 9F84 23               inc hl
 157+ 9F85
 158+ 9F85 10 F9            djnz 6B
 159+ 9F87
 160+ 9F87              Detecta_impacto_en_disparo_de_Amadeus
 161+ 9F87
 162+ 9F87 CD B8 9F         call Detecta_impacto_en_disparo_de_Amadeus01
 163+ 9F8A
 164+ 9F8A 2A A9 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 165+ 9F8D 23               inc hl
 166+ 9F8E 23               inc hl
 167+ 9F8F CD B1 90         call Extrae_address
 168+ 9F92 2B               dec hl                                               ;  Sitúa el puntero en el .db (Impacto) de la caja del disparo.
 169+ 9F93 28 02            jr z,7F
 170+ 9F95 3E 01            ld a,1
 171+ 9F97 77           7 ld (hl),a
 172+ 9F98 C8               ret z
 173+ 9F99
 174+ 9F99              Genera_coordenadas_de_disparo_Amadeus
 175+ 9F99
 176+ 9F99              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 177+ 9F99              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 178+ 9F99
 179+ 9F99 2A A9 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 180+ 9F9C CD B1 90         call Extrae_address
 181+ 9F9F 23               inc hl
 182+ 9FA0 23               inc hl
 183+ 9FA1
 184+ 9FA1 CD B1 90         call Extrae_address                                 ;   Puntero_de_impresión del disparo en HL.
 185+ 9FA4 CD D0 94         call Genera_coordenadas
 186+ 9FA7
 187+ 9FA7 3D               dec a
 188+ 9FA8
 189+ 9FA8 21 AE 8C         ld hl,Coordenadas_disparo_certero
 190+ 9FAB 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 191+ 9FAC 23               inc hl
 192+ 9FAD 3A 38 8C         ld a,(Coordenada_X)
 193+ 9FB0 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 194+ 9FB1
 195+ 9FB1 21 AB 8C         ld hl,Impacto2
 196+ 9FB4 CB DE            set 3,(hl)                                          ;   Indica que un disparo de nuestra nave ha alcanzado a una entidad.
 197+ 9FB6
 198+ 9FB6 AF               xor a                                               ;   Siempre "Z" cuando ejecutamos [Genera_disparo_Amadeus].
 199+ 9FB7 C9               ret
 200+ 9FB8
 201+ 9FB8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 202+ 9FB8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 203+ 9FB8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 204+ 9FB8
 205+ 9FB8              ; ----------------------------------------------
 206+ 9FB8              ;
 207+ 9FB8              ;   12/08/24
 208+ 9FB8              ;
 209+ 9FB8
 210+ 9FB8
 211+ 9FB8              Detecta_impacto_en_disparo_de_Amadeus01
 212+ 9FB8
 213+ 9FB8              Extraccion_de_datos
 214+ 9FB8
 215+ 9FB8 21 86 89         ld hl,Indice_de_disparos_Amadeus
 216+ 9FBB CD B1 90         call Extrae_address
 217+ 9FBE
 218+ 9FBE 5E               ld e,(hl)
 219+ 9FBF 23               inc hl
 220+ 9FC0 56               ld d,(hl)
 221+ 9FC1 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 222+ 9FC2
 223+ 9FC2 4E               ld c,(hl)
 224+ 9FC3 23               inc hl
 225+ 9FC4 46               ld b,(hl)
 226+ 9FC5 23               inc hl                                                 ;    Puntero_de_impresión del disparo en BC.
 227+ 9FC6
 228+ 9FC6 C5               push bc
 229+ 9FC7 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 230+ 9FC8
 231+ 9FC8              Detecta_impacto_
 232+ 9FC8
 233+ 9FC8 1A               ld a,(de)
 234+ 9FC9 A6               and (hl)
 235+ 9FCA C0               ret nz
 236+ 9FCB
 237+ 9FCB 13               inc de
 238+ 9FCC 23               inc hl
 239+ 9FCD
 240+ 9FCD 1A               ld a,(de)
 241+ 9FCE A6               and (hl)
 242+ 9FCF C9               ret
 243+ 9FD0
 244+ 9FD0              ; -------------------------------------------------------------------------------------------------------------
 245+ 9FD0              ;
 246+ 9FD0              ;   8/8/24
 247+ 9FD0              ;
 248+ 9FD0              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 249+ 9FD0              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 250+ 9FD0              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 251+ 9FD0              ;
 252+ 9FD0              ;   MODIFICA: HL,DE,BC y A.
 253+ 9FD0              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 254+ 9FD0              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 255+ 9FD0
 256+ 9FD0              Colision_Entidad_Amadeus
 257+ 9FD0
 258+ 9FD0              ; Posible contacto de entidad con Amadeus. ?????
 259+ 9FD0
 260+ 9FD0              ; Exclusiones:
 261+ 9FD0
 262+ 9FD0 3A CA 8C         ld a,(Shield)
 263+ 9FD3 A7               and a
 264+ 9FD4 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 265+ 9FD5
 266+ 9FD5 21 A5 8C         ld hl,Ctrl_3
 267+ 9FD8 CB 76            bit 6,(hl)
 268+ 9FDA C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 269+ 9FDB
 270+ 9FDB 21 AB 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 271+ 9FDE CB 56            bit 2,(hl)
 272+ 9FE0 C0               ret nz
 273+ 9FE1
 274+ 9FE1 3A 39 8C     	ld a,(Coordenada_y)
 275+ 9FE4 FE 14        	cp $14
 276+ 9FE6 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 277+ 9FE7
 278+ 9FE7 3A F0 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 279+ 9FEA A7               and a
 280+ 9FEB C0               ret nz
 281+ 9FEC
 282+ 9FEC              Genera_coordenadas_X
 283+ 9FEC
 284+ 9FEC              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 285+ 9FEC              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 286+ 9FEC
 287+ 9FEC              ;   Limpiamos almacenes.
 288+ 9FEC
 289+ 9FEC              ;    call Limpia_Coordenadas_X
 290+ 9FEC
 291+ 9FEC              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 292+ 9FEC
 293+ 9FEC 21 B0 8C         ld hl,Coordenadas_X_Entidad
 294+ 9FEF 3A 38 8C         ld a,(Coordenada_X)
 295+ 9FF2 CD 14 A0         call Guarda_coordenadas_X
 296+ 9FF5
 297+ 9FF5              ;   Almacenamos las coordenadas X de Amadeus.
 298+ 9FF5
 299+ 9FF5 3A ED 89         ld a,(CX_Amadeus)
 300+ 9FF8 CD 14 A0         call Guarda_coordenadas_X
 301+ 9FFB CD 28 A0         call Compara_coordenadas_X
 302+ 9FFE C0               ret nz
 303+ 9FFF
 304+ 9FFF 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 305+ A001 32 3B 8C         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 306+ A004
 307+ A004 2A 77 8C         ld hl,(Puntero_store_caja)
 308+ A007 2C               inc l
 309+ A008 2C               inc l
 310+ A009 2C               inc l
 311+ A00A 2C               inc l
 312+ A00B 22 AC 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 313+ A00E
 314+ A00E 21 AB 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 315+ A011 CB D6            set 2,(hl)
 316+ A013
 317+ A013 C9               ret
 318+ A014
 319+ A014               ; ----- ----- ----- ----- -----
 320+ A014
 321+ A014 77           Guarda_coordenadas_X ld (hl),a
 322+ A015 3C               inc a
 323+ A016 2C               inc l
 324+ A017 77               ld (hl),a
 325+ A018 3C               inc a
 326+ A019 2C               inc l
 327+ A01A 77               ld (hl),a
 328+ A01B 2C               inc l
 329+ A01C C9               ret
 330+ A01D
 331+ A01D AF           Limpia_Coordenadas_X xor a
 332+ A01E 06 06            ld b,6
 333+ A020 21 B3 8C         ld hl,Coordenadas_X_Amadeus
 334+ A023 77           1 ld (hl),a
 335+ A024 23               inc hl
 336+ A025 10 FC            djnz 1B
 337+ A027 C9               ret
 338+ A028
 339+ A028              ; ----- ----- ----- ----- -----
 340+ A028
 341+ A028              Compara_coordenadas_X
 342+ A028
 343+ A028 DD 21 B0 8C      ld ix,Coordenadas_X_Entidad
 344+ A02C DD 7E 00         ld a,(ix+0)
 345+ A02F CD 3D A0         call Comparando
 346+ A032 C8               ret z
 347+ A033
 348+ A033 3C               inc a
 349+ A034 CD 4C A0         call Comparando_1
 350+ A037 C8               ret z
 351+ A038
 352+ A038 3C               inc a
 353+ A039 CD 4C A0         call Comparando_1
 354+ A03C C9               ret
 355+ A03D
 356+ A03D              ; ----- ----- ----- ----- -----
 357+ A03D              ;
 358+ A03D              ;   4/12/23
 359+ A03D              ;
 360+ A03D              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 361+ A03D
 362+ A03D              Comparando
 363+ A03D
 364+ A03D DD 2C            inc ixl
 365+ A03F DD 2C            inc ixl
 366+ A041 DD 2C            inc ixl
 367+ A043
 368+ A043 DD 46 00         ld b,(ix+0)
 369+ A046 DD 4E 01         ld c,(ix+1)
 370+ A049 DD 56 02         ld d,(ix+2)
 371+ A04C
 372+ A04C B8           Comparando_1 cp b
 373+ A04D C8               ret z
 374+ A04E B9               cp c
 375+ A04F C8               ret z
 376+ A050 BA               cp d
 377+ A051 C9               ret
 378+ A052
 379+ A052              ; -----------------------------------------------------------------------
 380+ A052              ;
 381+ A052              ;   04/7/24
 382+ A052              ;
 383+ A052
 384+ A052              Detecta_colision_nave_entidad
 385+ A052
 386+ A052              ; Exclusiones:
 387+ A052
 388+ A052              ; Salimos de la rutina si no hay advertencia de posible colisión.
 389+ A052
 390+ A052 21 AB 8C     	ld hl,Impacto2
 391+ A055 CB 56        	bit 2,(hl)
 392+ A057 C8           	ret z
 393+ A058
 394+ A058              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 395+ A058
 396+ A058 2A F3 89         ld hl,(Pamm_Amadeus)
 397+ A05B CD B1 90         call Extrae_address
 398+ A05E 54               ld d,h
 399+ A05F 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 400+ A060
 401+ A060 2A F1 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 402+ A063 06 10            ld b,16                                        ; Contador de scanlines en B.
 403+ A065 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 404+ A068
 405+ A068 C5           1 push bc
 406+ A069 06 03            ld b,3
 407+ A06B E5               push hl
 408+ A06C
 409+ A06C              ; .db
 410+ A06C
 411+ A06C 1A           3 ld a,(de)
 412+ A06D A7               and a
 413+ A06E 20 03            jr nz,4F
 414+ A070
 415+ A070 2C               inc l
 416+ A071 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 417+ A073
 418+ A073 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 419+ A075 28 04            jr z,2F
 420+ A077
 421+ A077              ; Impacto.
 422+ A077 FD 2D            dec iyl
 423+ A079 28 22            jr z,5F
 424+ A07B
 425+ A07B 1C           2 inc e
 426+ A07C 10 EE            djnz 3B
 427+ A07E
 428+ A07E E1               pop hl
 429+ A07F
 430+ A07F              ; Hay salto de línea en el puntero de impresión ???
 431+ A07F
 432+ A07F 7C               ld a,h
 433+ A080 D6 57            sub $57
 434+ A082 20 0A            jr nz,6F
 435+ A084
 436+ A084              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 437+ A084
 438+ A084 2A F1 89         ld hl,(p.imp.amadeus)
 439+ A087 3E 20            ld a,$20
 440+ A089 A7               and a
 441+ A08A 85               add l
 442+ A08B 6F               ld l,a
 443+ A08C 18 01            jr 7F
 444+ A08E
 445+ A08E 24           6 inc h
 446+ A08F
 447+ A08F C1           7 pop bc
 448+ A090 10 D6            djnz 1B
 449+ A092
 450+ A092              ;   Fin de la comparativa.
 451+ A092
 452+ A092              ;   NO HAY COLISIÓN !!!!!.
 453+ A092              ;
 454+ A092              ;   .db (Impacto) de Amadeus a "0".
 455+ A092              ;   RES el bit2 de (Impacto2).
 456+ A092              ;
 457+ A092              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 458+ A092              ;   Lo colocamos a "0".
 459+ A092
 460+ A092 21 AB 8C         ld hl,Impacto2
 461+ A095 CB 96            res 2,(hl)
 462+ A097 2A AC 8C         ld hl,(Entidad_sospechosa_de_colision)
 463+ A09A 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 464+ A09C C9               ret
 465+ A09D
 466+ A09D              ;   COLISIÓN !!!!!.
 467+ A09D              ;
 468+ A09D              ;   .db (Impacto) de Amadeus a "1".
 469+ A09D              ;   SET el bit3 de (Impacto2).
 470+ A09D              ;
 471+ A09D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 472+ A09D
 473+ A09D E1           5 pop hl
 474+ A09E C1               pop bc
 475+ A09F
 476+ A09F 21 F0 89         ld hl,Impacto_Amadeus
 477+ A0A2 36 01            ld (hl),1
 478+ A0A4 21 AB 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 479+ A0A7 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 480+ A0A9
 481+ A0A9 11 30 88         ld de,Indice_Explosion_entidades
 482+ A0AC 2A AC 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 483+ A0AF
 484+ A0AF 23               inc hl
 485+ A0B0 23               inc hl
 486+ A0B1 23               inc hl
 487+ A0B2
 488+ A0B2 73               ld (hl),e
 489+ A0B3 23               inc hl
 490+ A0B4 72               ld (hl),d
 491+ A0B5
 492+ A0B5              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 493+ A0B5
 494+ A0B5 11 C6 88         ld de,Indice_Explosion_Amadeus
 495+ A0B8 21 F3 89         ld hl,Pamm_Amadeus
 496+ A0BB
 497+ A0BB 73               ld (hl),e
 498+ A0BC 23               inc hl
 499+ A0BD 72               ld (hl),d
 500+ A0BE
 501+ A0BE C9               ret
 502+ A0BF
 503+ A0BF
 504+ A0BF
# file closed: Disparo.asm
2312  A0BF
2313  A0BF              	SAVESNA "Pruebas.sna", START
2314  A0BF
2315  A0BF
2316  A0BF
2317  A0BF
# file closed: Banco_de_pruebas.asm
