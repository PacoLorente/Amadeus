# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 FC 88  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15
  42  AA15              ;	ld a,(Contador_de_frames)
  43  AA15              ;	cp $70	; 	$51 ok.
  44  AA15              ;	jr z,$
  45  AA15              ;	jr nc,$
  46  AA15
  47  AA15 3E 01        	ld a,1
  48  AA17 D3 FE        	out ($fe),a
  49  AA19 CD 75 8D     	call Pinta_entidades
  50  AA1C CD 67 8D     	call Pinta_Amadeus
  51  AA1F 3E 02        	ld a,2
  52  AA21 D3 FE        	out ($fe),a
  53  AA23
  54  AA23 CD 91 8D     	call Guarda_parametros_DRAW
  55  AA26 CD B7 8C     	call Restore_Amadeus
  56  AA29 CD B9 8A     	call Gestiona_Amadeus
  57  AA2C 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  58  AA2F CD C9 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  59  AA32
  60  AA32              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  61  AA32
  62  AA32 CD 9D 8D     	call Recupera_parametros_DRAW
  63  AA35 CD 85 8D     	call Actualiza_relojes
  64  AA38 3E 00        	ld a,0
  65  AA3A D3 FE        	out ($fe),a
  66  AA3C
  67  AA3C 21 06 89     	ld hl,Ctrl_3
  68  AA3F CB 86        	res 0,(hl)
  69  AA41
  70  AA41 FD E1        	pop iy
  71  AA43 DD E1        	pop ix
  72  AA45 F1           	pop af
  73  AA46 C1           	pop bc
  74  AA47 D1           	pop de
  75  AA48 E1           	pop hl
  76  AA49 D9           	exx
  77  AA4A C1           	pop bc
  78  AA4B D1           	pop de
  79  AA4C E1           	pop hl
  80  AA4D 08           	ex af,af'
  81  AA4E F1           	pop af
  82  AA4F 08           	ex af,af'
  83  AA50 D9           	exx
  84  AA51
  85  AA51 ED 7B FC 88  	ld sp,(Stack_3)
  86  AA55
  87  AA55 FB           	ei
  88  AA56 C9           	ret
  89  AA57
  90  AA57              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  91  AA57
  92  AA57              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA57              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA57              ;
   3+ AA57              ;	17/02/23
   4+ AA57              ;
   5+ AA57              ;	Sprites e índices.
   6+ AA57
   7+ AA57              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  93  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BD 85        	defw Caja_1
 100+ 856E FC 85        	defw Caja_2
 101+ 8570 3B 86        	defw Caja_3
 102+ 8572 7A 86        	defw Caja_4
 103+ 8574 B9 86        	defw Caja_5
 104+ 8576 F8 86        	defw Caja_6
 105+ 8578 37 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 8587
 117+ 8587 05           	db %00000101									; (Attr).
 118+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 858C
 121+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8590
 124+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 125+ 8592 04           	db 4 											; (Cuad_objeto).
 126+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 8597
 128+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8598
 130+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 859E
 132+ 859E 00 00        	db 0,0											; Variables_de_pintado
 133+ 85A0 00 00        	defw 0											;	" " " " " " "
 134+ 85A2 00 00        	defw 0											;	" " " " " " "
 135+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85A8
 137+ 85A8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85AA
 139+ 85AA 00           	db 0											; (Autoriza_movimiento).
 140+ 85AB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85AF 00 00
 141+ 85B1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85B4
 143+ 85B4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85B6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85B7
 146+ 85B7 00           	db 0 											; (Columnas).
 147+ 85B8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85BA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85BD
 150+ 85BD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85BD
 152+ 85BD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85BF 00 00        	defw 0											; (Posicion_actual).
 154+ 85C1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85C3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85C6
 157+ 85C6 00           	db %00000000 									; (Attr).
 158+ 85C7
 159+ 85C7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85C9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85CB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85CF
 164+ 85CF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85D1 00           	db 0											; (Cuad_objeto).
 166+ 85D2
 167+ 85D2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85D6
 169+ 85D6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85D7
 171+ 85D7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85DD
 173+ 85DD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85DF 00 00        	defw 0											;	" " " " " " "
 175+ 85E1 00 00        	defw 0											;	" " " " " " "
 176+ 85E3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85E7
 178+ 85E7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 85E9
 180+ 85E9 00           	db 0											; (Autoriza_movimiento).
 181+ 85EA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 85EE 00 00
 182+ 85F0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 85F3
 184+ 85F3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 85F5 00           	db 0											; (Cola_de_desplazamiento).
 186+ 85F6
 187+ 85F6 00           	db 0 											; (Columnas).
 188+ 85F7 00 00        	defw 0											; (Limite_horizontal).
 189+ 85F9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 85FC
 191+ 85FC              ; ---------- ---------- ---------- ---------- ----------
 192+ 85FC
 193+ 85FC 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 85FE 00 00        	defw 0											; (Posicion_actual).
 195+ 8600 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8602 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8605
 198+ 8605 00           	db %00000000 									; (Attr).
 199+ 8606
 200+ 8606 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8608 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 860A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 860C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 860E
 205+ 860E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8610 00           	db 0											; (Cuad_objeto).
 207+ 8611
 208+ 8611 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8615
 210+ 8615 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8616
 212+ 8616 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 861C
 214+ 861C 00 00        	db 0,0											; Variables_de_pintado
 215+ 861E 00 00        	defw 0											;	" " " " " " "
 216+ 8620 00 00        	defw 0											;	" " " " " " "
 217+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8626
 219+ 8626 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8628
 221+ 8628 00           	db 0											; (Autoriza_movimiento).
 222+ 8629 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 862D 00 00
 223+ 862F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8632
 225+ 8632 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8634 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8635
 228+ 8635 00           	db 0 											; (Columnas).
 229+ 8636 00 00        	defw 0											; (Limite_horizontal).
 230+ 8638 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 863B
 232+ 863B              ; ---------- ---------- ---------- ---------- ----------
 233+ 863B
 234+ 863B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 863D 00 00        	defw 0											; (Posicion_actual).
 236+ 863F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8641 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8644
 239+ 8644 00           	db %00000000 									; (Attr).
 240+ 8645
 241+ 8645 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8647 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8649 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 864B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 864D
 246+ 864D 00 00        	defw 0											; (Posicion_inicio).
 247+ 864F 00           	db 0											; (Cuad_objeto).
 248+ 8650
 249+ 8650 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8654
 251+ 8654 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8655
 253+ 8655 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 865B
 255+ 865B 00 00        	db 0,0											; Variables_de_pintado
 256+ 865D 00 00        	defw 0											;	" " " " " " "
 257+ 865F 00 00        	defw 0											;	" " " " " " "
 258+ 8661 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8665
 260+ 8665 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8667
 262+ 8667 00           	db 0											; (Autoriza_movimiento).
 263+ 8668 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 866C 00 00
 264+ 866E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8671
 266+ 8671 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8673 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8674
 269+ 8674 00           	db 0 											; (Columnas).
 270+ 8675 00 00        	defw 0											; (Limite_horizontal).
 271+ 8677 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 867A
 273+ 867A              ; ---------- ---------- ---------- ---------- ----------
 274+ 867A
 275+ 867A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 867C 00 00        	defw 0											; (Posicion_actual).
 277+ 867E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 8680 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 8683
 280+ 8683 00           	db %00000000 									; (Attr).
 281+ 8684
 282+ 8684 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 8686 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 8688 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 868A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 868C
 287+ 868C 00 00        	defw 0											; (Posicion_inicio).
 288+ 868E 00           	db 0											; (Cuad_objeto).
 289+ 868F
 290+ 868F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 8693
 292+ 8693 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 8694
 294+ 8694 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 869A
 296+ 869A 00 00        	db 0,0											; Variables_de_pintado
 297+ 869C 00 00        	defw 0											;	" " " " " " "
 298+ 869E 00 00        	defw 0											;	" " " " " " "
 299+ 86A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86A4
 301+ 86A4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86A6
 303+ 86A6 00           	db 0											; (Autoriza_movimiento).
 304+ 86A7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86AB 00 00
 305+ 86AD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86B0
 307+ 86B0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86B2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86B3
 310+ 86B3 00           	db 0 											; (Columnas).
 311+ 86B4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86B6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86B9
 314+ 86B9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86B9
 316+ 86B9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86BB 00 00        	defw 0											; (Posicion_actual).
 318+ 86BD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86BF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86C2
 321+ 86C2 00           	db %00000000 									; (Attr).
 322+ 86C3
 323+ 86C3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86C5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86C7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86C9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86CB
 328+ 86CB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86CD 00           	db 0											; (Cuad_objeto).
 330+ 86CE
 331+ 86CE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86D2
 333+ 86D2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86D3
 335+ 86D3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86D9
 337+ 86D9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86DB 00 00        	defw 0											;	" " " " " " "
 339+ 86DD 00 00        	defw 0											;	" " " " " " "
 340+ 86DF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 86E3
 342+ 86E3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 86E5
 344+ 86E5 00           	db 0											; (Autoriza_movimiento).
 345+ 86E6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 86EA 00 00
 346+ 86EC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 86EF
 348+ 86EF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 86F1 00           	db 0											; (Cola_de_desplazamiento).
 350+ 86F2
 351+ 86F2 00           	db 0 											; (Columnas).
 352+ 86F3 00 00        	defw 0											; (Limite_horizontal).
 353+ 86F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 86F8
 355+ 86F8              ; ---------- ---------- ---------- ---------- ----------
 356+ 86F8
 357+ 86F8 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 86FA 00 00        	defw 0											; (Posicion_actual).
 359+ 86FC 00 00        	defw 0 											; (Puntero_objeto).
 360+ 86FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8701
 362+ 8701 00           	db %00000000 									; (Attr).
 363+ 8702
 364+ 8702 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8704 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8706 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8708 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 870A
 369+ 870A 00 00        	defw 0											; (Posicion_inicio).
 370+ 870C 00           	db 0											; (Cuad_objeto).
 371+ 870D
 372+ 870D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8711
 374+ 8711 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8712
 376+ 8712 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8718
 378+ 8718 00 00        	db 0,0											; Variables_de_pintado
 379+ 871A 00 00        	defw 0											;	" " " " " " "
 380+ 871C 00 00        	defw 0											;	" " " " " " "
 381+ 871E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8722
 383+ 8722 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8724
 385+ 8724 00           	db 0											; (Autoriza_movimiento).
 386+ 8725 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8729 00 00
 387+ 872B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 872E
 389+ 872E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8730 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8731
 392+ 8731 00           	db 0 											; (Columnas).
 393+ 8732 00 00        	defw 0											; (Limite_horizontal).
 394+ 8734 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8737
 396+ 8737              ; ---------- ---------- ---------- ---------- ----------
 397+ 8737
 398+ 8737 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8739 00 00        	defw 0											; (Posicion_actual).
 400+ 873B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 873D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8740
 403+ 8740 00           	db %00000000 									; (Attr).
 404+ 8741
 405+ 8741 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8743 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8745 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8747 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8749
 410+ 8749 00 00        	defw 0											; (Posicion_inicio).
 411+ 874B 00           	db 0											; (Cuad_objeto).
 412+ 874C
 413+ 874C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8750
 415+ 8750 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8751
 417+ 8751 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8757
 419+ 8757 00 00        	db 0,0											; Variables_de_pintado
 420+ 8759 00 00        	defw 0											;	" " " " " " "
 421+ 875B 00 00        	defw 0											;	" " " " " " "
 422+ 875D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8761
 424+ 8761 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8763
 426+ 8763 00           	db 0											; (Autoriza_movimiento).
 427+ 8764 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8768 00 00
 428+ 876A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 876D
 430+ 876D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 876F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8770
 433+ 8770 00           	db 0 											; (Columnas).
 434+ 8771 00 00        	defw 0											; (Limite_horizontal).
 435+ 8773 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8776
 437+ 8776              ; -------------------------------------------------------------------------------------
 438+ 8776              ;
 439+ 8776              ;	20/05/23
 440+ 8776              ;
 441+ 8776              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8776              ;
 443+ 8776              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8776              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8776              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8776              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8776
 448+ 8776              Indice_de_entidades
 449+ 8776
 450+ 8776 7A 87        	defw Entidad_1
 451+ 8778 8A 87        	defw Entidad_2
 452+ 877A
 453+ 877A              ;	BADSAT, (Satélite malvado).
 454+ 877A
 455+ 877A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 877C 04           	db %00000100									; (Attr).
 457+ 877D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 877F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 8781 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 8783 01           	db 1											; (Cuad_objeto).
 461+ 8784 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 8788 83 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 878A
 464+ 878A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 878C 02           	db %00000010									; (Attr).
 466+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 8791 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 8793 01           	db 1											; (Cuad_objeto).
 470+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 8798 83 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 879A
# file closed: Cajas_y_disparos.asm
  94  879A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 879A              ; 13/05/23
   2+ 879A
   3+ 879A              Indice_de_niveles
   4+ 879A
   5+ 879A A8 87        	defw Nivel_1
   6+ 879C B0 87        	defw Nivel_2
   7+ 879E BD 87        	defw Nivel_3
   8+ 87A0 CD 87        	defw Nivel_4
   9+ 87A2 DF 87        	defw Nivel_5
  10+ 87A4              ;	...
  11+ 87A4              ;	...
  12+ 87A4              ;	+ Niveles ...
  13+ 87A4
  14+ 87A4 00 00        	defw 0
  15+ 87A6 00 00        	defw 0
  16+ 87A8
  17+ 87A8 07           Nivel_1 db 7	                                ; Nº de entidades.
  18+ 87A9 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 87AD 01 01 01
  19+ 87B0 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87B1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87B5 01 02
  21+ 87B7 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87BB 01 02
  22+ 87BD 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87BE 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87C2 01
  24+ 87C3 03 01 01 01  	db 3,1,1,1,1
  24+ 87C7 01
  25+ 87C8 03 01 01 01  	db 3,1,1,1,1
  25+ 87CC 01
  26+ 87CD 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87CE 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87D2 01
  28+ 87D3 04 01 01 01  	db 4,1,1,1,1
  28+ 87D7 01
  29+ 87D8 04 01 01 01  	db 4,1,1,1,1
  29+ 87DC 01
  30+ 87DD 02 03        	db 2,3
  31+ 87DF 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87E0 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87E4 01
  33+ 87E5 05 01 01 01  	db 5,1,1,1,1
  33+ 87E9 01
  34+ 87EA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87EE 01
  35+ 87EF 05 01 01 01  	db 5,1,1,1,1
  35+ 87F3 01
  36+ 87F4
  37+ 87F4              ;---------------------------------------------------------------------------------------------------------------
  38+ 87F4              ;
  39+ 87F4              ;   3/9/23
  40+ 87F4              ;
  41+ 87F4              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87F4              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87F4              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87F4              ;	_en la caja DRAW correspondiente.
  45+ 87F4              ;
  46+ 87F4              ;	MODIFICA: HL,DE y A.
  47+ 87F4              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87F4
  49+ 87F4              Inicializa_Punteros_de_nivel
  50+ 87F4
  51+ 87F4 21 9A 87     	ld hl,Indice_de_niveles
  52+ 87F7 22 26 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 87FA CD 07 8C     	call Extrae_address
  54+ 87FD 7E           	ld a,(hl)
  55+ 87FE 32 F0 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8801 23           	inc hl
  57+ 8802 22 28 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8805 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8806
  60+ 8806              ;---------------------------------------------------------------------------------------------------------------
  61+ 8806              ;
  62+ 8806              ;   13/5/23
  63+ 8806              ;
  64+ 8806              ;	Destruye A,BC,HL,DE
  65+ 8806
  66+ 8806              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8806              ;	_del juego.
  68+ 8806
  69+ 8806              Prepara_cajas
  70+ 8806
  71+ 8806              ; Preparamos los punteros de las cajas.
  72+ 8806
  73+ 8806 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8809 CD 07 8C     	call Extrae_address
  75+ 880C CD 49 88     	call Avanza_caja
  76+ 880F
  77+ 880F CD 8D 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 8812
  79+ 8812 2A 28 89     	ld hl,(Datos_de_nivel)
  80+ 8815
  81+ 8815              ; HL está en los datos del nivel correspondiente.
  82+ 8815              ; B actuará como contador de cajas.
  83+ 8815
  84+ 8815 C5           1 push bc
  85+ 8816
  86+ 8816 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8817 CD 3A 88     	call PreparaBC
  88+ 881A
  89+ 881A 21 76 87     	ld hl,Indice_de_entidades
  90+ 881D CD 42 88     	call SBC_HL_con_BC_y_Extrae
  91+ 8820 22 F6 88         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8823
  93+ 8823 CD 53 88     	call Datos_de_entidad_a_caja
  94+ 8826
  95+ 8826 2A EE 88     	ld hl,(Indice_restore_caja)
  96+ 8829 CD 07 8C     	call Extrae_address
  97+ 882C CD 49 88     	call Avanza_caja
  98+ 882F
  99+ 882F 2A 28 89     	ld hl,(Datos_de_nivel)
 100+ 8832 23           	inc hl
 101+ 8833 22 28 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8836
 103+ 8836 C1           	pop bc
 104+ 8837 10 DC        	djnz 1B
 105+ 8839 C9           	ret
 106+ 883A
 107+ 883A CB 27        PreparaBC sla a
 108+ 883C D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 883E 4F           	ld c,a
 110+ 883F 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 8841 C9           	ret
 112+ 8842
 113+ 8842 A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8843 ED 4A        	adc hl,bc
 115+ 8845 CD 07 8C     	call Extrae_address
 116+ 8848 C9           	ret
 117+ 8849
 118+ 8849 22 EA 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 884C 13           	inc de
 120+ 884D 13           	inc de
 121+ 884E EB           	ex de,hl
 122+ 884F 22 EE 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 8852 C9           	ret
 124+ 8853
 125+ 8853              Datos_de_entidad_a_caja
 126+ 8853
 127+ 8853              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8853
 129+ 8853
 130+ 8853 ED 5B EA 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8857
 132+ 8857 01 02 00     	ld bc,2
 133+ 885A ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 885C
 135+ 885C 01 07 00     	ld bc,7
 136+ 885F CD 87 88     	call Situa_DE
 137+ 8862
 138+ 8862 01 05 00     	ld bc,5
 139+ 8865 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8867
 141+ 8867 01 04 00     	ld bc,4
 142+ 886A CD 87 88     	call Situa_DE
 143+ 886D
 144+ 886D 01 07 00     	ld bc,7
 145+ 8870 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 8872
 147+ 8872 01 12 00     	ld bc,18
 148+ 8875 CD 87 88     	call Situa_DE
 149+ 8878
 150+ 8878 01 02 00     	ld bc,2
 151+ 887B ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 887D
 153+ 887D              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 887D              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 887D
 156+ 887D 01 0F 00     	ld bc,15									; *****
 157+ 8880 CD 87 88     	call Situa_DE
 158+ 8883
 159+ 8883 3E 03        	ld a,3
 160+ 8885 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8886
 162+ 8886 C9           	ret
 163+ 8887
 164+ 8887 EB           Situa_DE ex de,hl
 165+ 8888 A7           	and a
 166+ 8889 ED 4A        	adc hl,bc
 167+ 888B EB           	ex de,hl
 168+ 888C C9           	ret
 169+ 888D
 170+ 888D              ;---------------------------------------------------------------------------------------------------------------
 171+ 888D              ;
 172+ 888D              ;	21/5/23
 173+ 888D              ;
 174+ 888D              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 888D              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 888D              ;
 177+ 888D              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 888D              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 888D              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 888D              ;
 181+ 888D              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 888D              ;	MODIFICA: A y B.
 183+ 888D              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 888D
 185+ 888D              Admin_num_entidades
 186+ 888D
 187+ 888D              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 888D
 189+ 888D 3A F0 88     	ld a,(Numero_de_entidades)
 190+ 8890 A7           	and a
 191+ 8891              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 8891              ;	jr z,$
 193+ 8891              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 8891
 195+ 8891 20 03        	jr nz,3F
 196+ 8893
 197+ 8893              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 8893
 199+ 8893 CD F4 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 8896
 201+ 8896 3A F0 88     3 ld a,(Numero_de_entidades)
 202+ 8899 FE 0A        	cp 10
 203+ 889B 38 08        	jr c,1F
 204+ 889D
 205+ 889D              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 889D              ; Actualizamos variables.
 207+ 889D
 208+ 889D 3E 0A        	ld a,10
 209+ 889F 32 F1 88     	ld (Numero_parcial_de_entidades),a
 210+ 88A2 47           	ld b,a
 211+ 88A3 18 04        	jr 2F
 212+ 88A5
 213+ 88A5              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88A5              ; (Numero_de_entidades)="0".
 215+ 88A5
 216+ 88A5 32 F1 88     1 ld (Numero_parcial_de_entidades),a
 217+ 88A8 47           	ld b,a
 218+ 88A9 C9           2 ret
# file closed: Niveles.asm
  95  88AA
  96  88AA              ; ******************************************************************************************************************************************************************************************
  97  88AA              ; Constantes.
  98  88AA              ; ******************************************************************************************************************************************************************************************
  99  88AA              ;
 100  88AA              ; 10/11/23
 101  88AA
 102  88AA              ;
 103  88AA              ; Constantes generales.
 104  88AA              ;
 105  88AA
 106  88AA              Sprite_vacio equ $f000
 107  88AA              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 108  88AA              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 109  88AA              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 110  88AA              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 111  88AA
 112  88AA              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 113  88AA              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 114  88AA              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 115  88AA              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 116  88AA              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 117  88AA
 118  88AA              ;														; 55 Bytes.
 119  88AA
 120  88AA              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 121  88AA              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 122  88AA
 123  88AA              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 124  88AA
 125  88AA              ; ******************************************************************************************************************************************************************************************
 126  88AA              ; Variables.
 127  88AA              ; ******************************************************************************************************************************************************************************************
 128  88AA              ;
 129  88AA              ; 10/11//23
 130  88AA              ;
 131  88AA              ; Variables de DRAW. (Motor principal).
 132  88AA              ;
 133  88AA              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 134  88AA
 135  88AA 00           Filas db 0												; Filas. [DRAW]
 136  88AB 00           Columns db 0  											; Nº de columnas. [DRAW]
 137  88AC 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 138  88AE 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 139  88B0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 140  88B1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 141  88B2
 142  88B2              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 143  88B2
 144  88B2 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 145  88B3              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 146  88B3              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 147  88B3 00           Attr db 0												; Atributos de la entidad:
 148  88B4
 149  88B4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 150  88B4              ;
 151  88B4              ;	COLORES: 0 ..... NEGRO
 152  88B4              ;    		 1 ..... AZUL
 153  88B4              ; 			 2 ..... ROJO
 154  88B4              ;			 3 ..... MAGENTA
 155  88B4              ; 			 4 ..... VERDE
 156  88B4              ; 			 5 ..... CIAN
 157  88B4              ;			 6 ..... AMARILLO
 158  88B4              ; 			 7 ..... BLANCO
 159  88B4
 160  88B4 00 00        Indice_Sprite_der defw 0
 161  88B6 00 00        Indice_Sprite_izq defw 0
 162  88B8 00 00        Puntero_DESPLZ_der defw 0
 163  88BA 00 00        Puntero_DESPLZ_izq defw 0
 164  88BC
 165  88BC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 166  88BE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 167  88BF
 168  88BF              ; Variables de objeto. (Características).
 169  88BF
 170  88BF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 171  88C0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 172  88C1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 173  88C2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 174  88C3
 175  88C3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 176  88C4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 177  88C4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 178  88C4 00 00 00...  Variables_de_borrado ds 6
 179  88CA
 180  88CA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 181  88CC 00 00        	defw 0
 182  88CE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 183  88D0 00 00 00 00  	db 0,0,0,0
 184  88D4
 185  88D4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 186  88D4
 187  88D4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 188  88D5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 189  88D5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 190  88D5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 191  88D5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 192  88D5              ;
 193  88D5              ; 														DESCRIPCIÖN:
 194  88D5              ;
 195  88D5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 196  88D5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 197  88D5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 198  88D5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 199  88D5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 200  88D5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 201  88D5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 202  88D5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 203  88D5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 204  88D5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 205  88D5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 206  88D5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 207  88D5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 208  88D5              ;
 209  88D5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 210  88D5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 211  88D5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 212  88D5
 213  88D5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 214  88D5
 215  88D5 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 216  88D7 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 217  88D9 00 00        Puntero_indice_mov_bucle defw 0							;
 218  88DB              ;
 219  88DB              ;
 220  88DB 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 221  88DC              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 222  88DC              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 223  88DC 00           Incrementa_puntero_backup db 0
 224  88DD 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 225  88DE              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 226  88DE 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 227  88DF 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 228  88E0 00           Cola_de_desplazamiento db 0								; Este byte indica:
 229  88E1              ;
 230  88E1              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 231  88E1              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 232  88E1              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 233  88E1              ;
 234  88E1              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 235  88E1              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 236  88E1              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 237  88E1              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 238  88E1              ;
 239  88E1              ;														;	"$ff" ..... Bucle infinito de repetición.
 240  88E1              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 241  88E1              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 242  88E1
 243  88E1
 244  88E1              ; Variables de funcionamiento. [DRAW].
 245  88E1
 246  88E1 00           Columnas db 0
 247  88E2 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 248  88E4              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 249  88E4 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 250  88E5
 251  88E5              ; variables de control general.
 252  88E5
 253  88E5 00           Ctrl_2 db 0
 254  88E6              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 255  88E6              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 256  88E6              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 257  88E6              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 258  88E6              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 259  88E6              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 260  88E6              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 261  88E6              ;
 262  88E6              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 263  88E6              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 264  88E6              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 265  88E6              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 266  88E6              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 267  88E6
 268  88E6 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 269  88E7
 270  88E7              ;! 61 Bytes por entidad.
 271  88E7
 272  88E7              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 273  88E7              ;					         		---------;      ;---------
 274  88E7
 275  88E7
 276  88E7              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 277  88E7
 278  88E7 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 279  88E8
 280  88E8              ;														DESCRIPCIÓN:
 281  88E8              ;
 282  88E8              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 283  88E8              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 284  88E8              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 285  88E8              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 286  88E8              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 287  88E8              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 288  88E8
 289  88E8              ;														BIT 3, Recarga de nueva oleada.
 290  88E8              ;														BIT 4, Recarga de nueva oleada.
 291  88E8              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 292  88E8              ;														BIT 6, **** Frame completo.
 293  88E8              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 294  88E8
 295  88E8 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 296  88EA              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 297  88EA              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 298  88EA              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 299  88EA
 300  88EA              ; Gestión de ENTIDADES y CAJAS.
 301  88EA
 302  88EA 00 00        Puntero_store_caja defw 0
 303  88EC 00 00        Puntero_restore_caja defw 0
 304  88EE 00 00        Indice_restore_caja defw 0
 305  88F0 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 306  88F1 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 307  88F2 00           Entidades_en_curso db 0									; ..... ..... .....
 308  88F3 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 309  88F4              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 310  88F4              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 311  88F4              ;														; _ (Numero_de_malotes)="0".
 312  88F4 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 313  88F6 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 314  88F8              ;														; _ puntero (Indice_entidades).
 315  88F8
 316  88F8
 317  88F8              ;---------------------------------------------------------------------------------------------------------------
 318  88F8              ;
 319  88F8              ;	18/11/23
 320  88F8              ;
 321  88F8              ;	Álbumes.
 322  88F8
 323  88F8 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 324  88FA              ;														; _variable para almacenar lo posición del puntero_
 325  88FA              ; 														; _de pila, SP.
 326  88FA 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 327  88FC              ;														; La utiliza la rutina [Extrae_foto_registros].
 328  88FC 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 329  88FE 00 70        Stack_snapshot defw Album_de_fotos
 330  8900 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 331  8902
 332  8902              ;End_Snapshot defw Album_de_fotos
 333  8902              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 334  8902 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 335  8904              ;														; _el snapshot de los registros del siguiente disparo.
 336  8904              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 337  8904 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 338  8906
 339  8906 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 340  8907              ;
 341  8907              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 342  8907              ; Gestión de Disparos.
 343  8907
 344  8907 00           Numero_de_disparotes db 0
 345  8908 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 346  890A 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 347  890C 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 348  890D              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 349  890D              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 350  890D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 351  890F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 352  890F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 353  890F              ;														; _produzca colisión.
 354  890F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 355  8911              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 356  8911 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 357  8914              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 358  8914 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 359  8917              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 360  8917 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 361  8919 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 362  891A
 363  891A              ;---------------------------------------------------------------------------------------------------------------
 364  891A
 365  891A              ; Relojes y temporizaciones.
 366  891A
 367  891A 00           Contador_de_frames db 0
 368  891B 00           Contador_de_frames_2 db 0
 369  891C
 370  891C 04           Clock_explosion db 4
 371  891D 1E           Clock_Entidades_en_curso db 30
 372  891E 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 373  891F              ;														; Repite la oleada de entidades.
 374  891F 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 375  8920 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 376  8921 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 377  8922
 378  8922 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 379  8923 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 380  8924 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 381  8925
 382  8925              ;---------------------------------------------------------------------------------------------------------------
 383  8925
 384  8925              ; Gestión de NIVELES.
 385  8925
 386  8925 00           Nivel db 0												; Nivel actual del juego.
 387  8926 00 00        Puntero_indice_NIVELES defw 0
 388  8928 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 389  892A              ; 														; _ que definen el NIVEL.
 390  892A              ; Y todo comienza aquí .....
 391  892A              ;
 392  892A              ; Rutina principal *************************************************************************************************************************************************************************
 393  892A              ;
 394  892A              ;	16/11/22
 395  892A
 396  892A              START
 397  892A
 398  892A 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 399  892D 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 400  892F ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 401  8931 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 402  8933 F3           	DI
 403  8934
 404  8934 3E 07        	ld a,%00000111
 405  8936 CD B0 98     	call Cls
 406  8939
 407  8939 CD E0 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 408  893C
 409  893C              ; INICIALIZACIÓN.
 410  893C
 411  893C CD F4 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 412  893F CD 06 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 413  8942 CD 6F 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 414  8945              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 415  8945 CD 90 8C     	call Restore_entidad
 416  8948
 417  8948 21 F1 88     	ld hl,Numero_parcial_de_entidades
 418  894B 46           	ld b,(hl)
 419  894C 04           	inc b
 420  894D 05           	dec b
 421  894E 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 422  8950
 423  8950              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 424  8950              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 425  8950              ;	Pintamos el resto de entidades:
 426  8950
 427  8950              ;	INICIA ENTIDADES !!!!!
 428  8950
 429  8950 C5           1 push bc  												; Guardo el contador de entidades.
 430  8951 CD 3F 8B     	call Inicia_entidad
 431  8954 C1           	pop bc
 432  8955 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 433  8957
 434  8957              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 435  8957              ; (Esto se dá cuando se inicia una nueva oleada).
 436  8957
 437  8957 3A E7 88     	ld a,(Ctrl_1)
 438  895A CB 5F        	bit 3,a
 439  895C 20 1B        	jr nz,5F											; Loop
 440  895E
 441  895E              ; 	INICIA AMADEUS !!!!!
 442  895E
 443  895E CD B7 8C     3 call Restore_Amadeus
 444  8961 CD 0D 8C     	call Inicia_Puntero_objeto
 445  8964 CD A3 92     	call Draw
 446  8967 CD A0 7F     	call Guarda_foto_registros
 447  896A CD 34 8D     	call Guarda_datos_de_borrado_Amadeus
 448  896D
 449  896D 11 7E 85     	ld de,Amadeus_db
 450  8970 CD C9 8C     	call Store_Amadeus
 451  8973
 452  8973              ; 	INICIA DISPAROS !!!!!
 453  8973
 454  8973 CD 85 8B     	call Inicia_Puntero_Disparo_Entidades
 455  8976 CD 8C 8B     	call Inicia_Puntero_Disparo_Amadeus
 456  8979
 457  8979              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 458  8979
 459  8979 CD 6F 8B     5 call Inicia_punteros_de_cajas
 460  897C CD 90 8C     	call Restore_entidad
 461  897F
 462  897F 3A E7 88     	ld a,(Ctrl_1)
 463  8982 CB 5F        	bit 3,a
 464  8984 28 07        	jr z,6F
 465  8986
 466  8986              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 467  8986
 468  8986 21 E7 88     	ld hl,Ctrl_1
 469  8989 CB 9E        	res 3,(hl)
 470  898B 18 07        	jr Main
 471  898D
 472  898D              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 473  898D
 474  898D 21 06 89     6 ld hl,Ctrl_3
 475  8990 CB C6        	set 0,(hl)											; Frame completo.
 476  8992 FB           	ei
 477  8993 76           	halt
 478  8994
 479  8994              ; ------------------------------------
 480  8994
 481  8994              Main
 482  8994              ;
 483  8994              ;	12/11/23
 484  8994
 485  8994              ; Aparece nueva entidad ???
 486  8994
 487  8994              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 488  8994              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 489  8994              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 490  8994              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 491  8994              ;														; _un 2º bloque.
 492  8994
 493  8994 3A 1D 89     	ld a,(Clock_Entidades_en_curso)
 494  8997 47           	ld b,a
 495  8998 3A 1A 89     	ld a,(Contador_de_frames)
 496  899B B8           	cp b
 497  899C 28 07        	jr z,21F
 498  899E
 499  899E              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 500  899E              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 501  899E              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 502  899E              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 503  899E
 504  899E 3C           	inc a
 505  899F B8           	cp b
 506  89A0 20 1B        	jr nz,13F
 507  89A2
 508  89A2 32 1A 89     	ld (Contador_de_frames),a
 509  89A5
 510  89A5              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 511  89A5              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 512  89A5
 513  89A5 3A F1 88     21 ld a,(Numero_parcial_de_entidades)
 514  89A8 47           	ld b,a
 515  89A9 3A F2 88     	ld a,(Entidades_en_curso)
 516  89AC B8           	cp b
 517  89AD 28 0E        	jr z,13F
 518  89AF 30 0C        	jr nc,13F
 519  89B1
 520  89B1              ; --- --- --- --- ---
 521  89B1
 522  89B1 3C           	inc a
 523  89B2 32 F2 88     	ld (Entidades_en_curso),a
 524  89B5
 525  89B5              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 526  89B5
 527  89B5 3A 1D 89     	ld a,(Clock_Entidades_en_curso)
 528  89B8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 529  89B8              ;! _ IMPREDECIBLE !!!!
 530  89B8 C6 32        	add 50
 531  89BA 32 1D 89     	ld (Clock_Entidades_en_curso),a
 532  89BD
 533  89BD              ; -------------------------------------------------------------------------------------------------------------
 534  89BD
 535  89BD              ; Habilita disparos.
 536  89BD
 537  89BD 21 1F 89     13 ld hl,Disparo_Amadeus
 538  89C0 11 21 89     	ld de,CLOCK_repone_disparo_Amadeus
 539  89C3 CD 74 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 540  89C6
 541  89C6 21 22 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 542  89C9 11 24 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 543  89CC CD 74 9C     	call Habilita_disparos
 544  89CF
 545  89CF              ; COLISIONES.
 546  89CF
 547  89CF CD 85 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 548  89D2
 549  89D2              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 550  89D2              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 551  89D2              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 552  89D2
 553  89D2 AF           	xor a
 554  89D3 32 0C 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 555  89D6
 556  89D6 CD 6F 8B     	call Inicia_punteros_de_cajas
 557  89D9 CD 90 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 558  89DC              ; 														; _ en DRAW.
 559  89DC 3A AA 88     	ld a,(Filas)
 560  89DF A7           	and a
 561  89E0 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 562  89E2 CD A2 8C     	call Incrementa_punteros_de_cajas
 563  89E5 18 F2        	jr 12B
 564  89E7
 565  89E7              ; ---------------------------------------------------------------------------------------
 566  89E7
 567  89E7 3A F1 88     10 ld a,(Numero_parcial_de_entidades)
 568  89EA 47               ld b,a
 569  89EB A7           	and a
 570  89EC 20 14        	jr nz,11F
 571  89EE
 572  89EE 21 E7 88     	ld hl,Ctrl_1
 573  89F1 CB 66        	bit 4,(hl)
 574  89F3 C2 84 8A     	jp nz,16F
 575  89F6
 576  89F6              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 577  89F6
 578  89F6 21 E7 88     	ld hl,Ctrl_1
 579  89F9 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 580  89FB
 581  89FB 3A 1A 89     	ld a,(Contador_de_frames)
 582  89FE 3C           	inc a
 583  89FF 32 1E 89     	ld (Activa_recarga_cajas),a
 584  8A02
 585  8A02              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 586  8A02
 587  8A02 3A F2 88     11 ld a,(Entidades_en_curso)
 588  8A05 A7           	and a
 589  8A06 CA 84 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 590  8A09 47           	ld b,a												; No hay entidades que gestionar.
 591  8A0A
 592  8A0A              ; Código que ejecutamos con cada entidad:
 593  8A0A              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 594  8A0A
 595  8A0A C5           15 push bc 												; Nº de entidades en curso.
 596  8A0B
 597  8A0B              ; Impacto ???
 598  8A0B
 599  8A0B 3A C3 88     22 ld a,(Impacto)
 600  8A0E A7           	and a
 601  8A0F 28 31        	jr z,8F
 602  8A11
 603  8A11              ; Hay Impacto en esta entidad.
 604  8A11
 605  8A11 21 1C 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 606  8A14 35           	dec (hl)
 607  8A15 C2 79 8A     	jp nz,17F
 608  8A18
 609  8A18              ;! Velocidad de la animación de la explosión.
 610  8A18
 611  8A18 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 612  8A1A              ;														; _,(velocidad de la explosión).
 613  8A1A
 614  8A1A              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 615  8A1A
 616  8A1A CD 54 8D     	call Repone_datos_de_borrado
 617  8A1D CD AD 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 618  8A20
 619  8A20              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 620  8A20
 621  8A20 3A E5 88     	ld a,(Ctrl_2)
 622  8A23 CB 4F        	bit 1,a
 623  8A25 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 624  8A27
 625  8A27              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 626  8A27
 627  8A27 3A B2 88     	ld a,(CTRL_DESPLZ)
 628  8A2A A7           	and a
 629  8A2B 20 08        	jr nz,18F
 630  8A2D
 631  8A2D 21 84 84     	ld hl,Indice_Explosion_2x2-2
 632  8A30 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 633  8A33 18 06        	jr 19F
 634  8A35
 635  8A35 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 636  8A38 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 637  8A3B
 638  8A3B 21 E5 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 639  8A3E CB CE        	set 1,(hl)
 640  8A40 18 22        	jr 7F
 641  8A42
 642  8A42              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 643  8A42              ; _con las coordenadas de la entidad almacenada en DRAW.
 644  8A42
 645  8A42 3A E7 88     8 ld a,(Ctrl_1)
 646  8A45 CB 57        	bit 2,a
 647  8A47 28 1B        	jr z,7F
 648  8A49
 649  8A49 2A 0F 89     	ld hl,(Coordenadas_disparo_certero)
 650  8A4C EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 651  8A4D              ;														; E contiene la coordenada_X del disparo.
 652  8A4D 2A B0 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 653  8A50              ;														; H FILA, (Coordenada_y de la entidad).
 654  8A50 A7           	and a
 655  8A51 ED 52        	sbc hl,de
 656  8A53
 657  8A53 CD BC 91     	call Determina_resultado_comparativa
 658  8A56
 659  8A56 78           	ld a,b
 660  8A57 A7           	and a
 661  8A58 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 662  8A5A
 663  8A5A              ; ----- ----- -----
 664  8A5A
 665  8A5A 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 666  8A5C 32 C3 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 667  8A5F
 668  8A5F 21 E7 88     	ld hl,Ctrl_1
 669  8A62 CB 96        	res 2,(hl)
 670  8A64
 671  8A64 CD DB 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 672  8A67
 673  8A67 3A D4 88     	ld a,(Ctrl_0)
 674  8A6A CB 67        	bit 4,a
 675  8A6C 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 676  8A6E
 677  8A6E              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 678  8A6E              ; [[[
 679  8A6E CD 2B 8D     	call Detecta_disparo_entidad
 680  8A71              ; ]]]
 681  8A71 CD 50 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 682  8A74
 683  8A74 21 D4 88     	ld hl,Ctrl_0
 684  8A77 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 685  8A79
 686  8A79 CD 55 8C     17 call Store_Restore_cajas
 687  8A7C
 688  8A7C C1           	pop bc
 689  8A7D 10 8B        	djnz 15B
 690  8A7F
 691  8A7F              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 692  8A7F              ; Hemos gestionado todas las unidades.
 693  8A7F              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 694  8A7F
 695  8A7F 21 E7 88     	ld hl,Ctrl_1
 696  8A82 CB 96        	res 2,(hl)
 697  8A84
 698  8A84 21 06 89     16 ld hl,Ctrl_3
 699  8A87 CB C6        	set 0,(hl)											; Frame completo.
 700  8A89 AF           	xor a
 701  8A8A D3 FE        	out ($fe),a
 702  8A8C FB           	ei
 703  8A8D 76           	halt
 704  8A8E
 705  8A8E              ; ----------------------------------------
 706  8A8E
 707  8A8E 3A E7 88     	ld a,(Ctrl_1) 										; Existe Loop?
 708  8A91 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 709  8A93 CA 94 89     	jp z,Main
 710  8A96
 711  8A96              ; RECARGA DE NUEVA OLEADA.
 712  8A96
 713  8A96 3A 1A 89     	ld a,(Contador_de_frames)
 714  8A99 47           	ld b,a
 715  8A9A 3A 1E 89     	ld a,(Activa_recarga_cajas)
 716  8A9D B8           	cp b
 717  8A9E 28 08        	jr z,20F
 718  8AA0
 719  8AA0 21 E7 88     	ld hl,Ctrl_1
 720  8AA3 CB E6        	set 4,(hl)
 721  8AA5 C3 94 89     	jp Main
 722  8AA8
 723  8AA8 21 E7 88     20 ld hl,Ctrl_1
 724  8AAB CB A6        	res 4,(hl)
 725  8AAD
 726  8AAD 3A 1A 89     	ld a,(Contador_de_frames)
 727  8AB0
 728  8AB0              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 729  8AB0              ;! _ IMPREDECIBLE !!!!
 730  8AB0
 731  8AB0 C6 0A        	add 10
 732  8AB2 32 1D 89     	ld (Clock_Entidades_en_curso),a
 733  8AB5
 734  8AB5 C3 3F 89     	jp 4B
 735  8AB8
 736  8AB8 C9           	ret
 737  8AB9
 738  8AB9              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 739  8AB9              ;
 740  8AB9              ;	16/11/23
 741  8AB9
 742  8AB9              Gestiona_Amadeus
 743  8AB9
 744  8AB9              ;! Activa/desactiva impacto con Amadeus.
 745  8AB9
 746  8AB9 3A C3 88     	ld a,(Impacto)
 747  8ABC A7           	and a
 748  8ABD 20 FE        	jr nz,$
 749  8ABF
 750  8ABF CD 2C 8B     	call Mov_Amadeus
 751  8AC2
 752  8AC2 3A D4 88     	ld a,(Ctrl_0)
 753  8AC5 CB 67        	bit 4,a
 754  8AC7 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 755  8AC9
 756  8AC9 CD 50 8B     	call Guarda_foto_entidad_a_pintar
 757  8ACC CD 34 8D     	call Guarda_datos_de_borrado_Amadeus
 758  8ACF
 759  8ACF 21 D4 88     14 ld hl,Ctrl_0
 760  8AD2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 761  8AD4
 762  8AD4 CD 19 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 763  8AD7
 764  8AD7              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 765  8AD7
 766  8AD7 CD EF 8B     	call Calcula_numero_de_disparotes
 767  8ADA
 768  8ADA C9           	ret
 769  8ADB
 770  8ADB              ; --------------------------------------------------------------------------------------------------------------
 771  8ADB              ;
 772  8ADB              ;	27/05/23
 773  8ADB
 774  8ADB              Mov_obj
 775  8ADB
 776  8ADB 3A E5 88     	ld a,(Ctrl_2)
 777  8ADE CB 4F        	bit 1,a
 778  8AE0 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 779  8AE2
 780  8AE2              ; Explosión:
 781  8AE2
 782  8AE2 3A E6 88     	ld a,(Frames_explosion)
 783  8AE5 A7           	and a
 784  8AE6 20 11        	jr nz,4F
 785  8AE8
 786  8AE8              ; Una alimaña menos!!!!!!!!!1
 787  8AE8
 788  8AE8 CD D2 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 789  8AEB 21 F1 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 790  8AEE 35           	dec (hl)
 791  8AEF 21 F2 88     	ld hl,Entidades_en_curso
 792  8AF2 35           	dec (hl)
 793  8AF3 21 F0 88     	ld hl,Numero_de_entidades
 794  8AF6 35           	dec (hl)
 795  8AF7 18 32        	jr 3F
 796  8AF9
 797  8AF9              ; -----
 798  8AF9
 799  8AF9              ;	`Movemos´ la explosión.
 800  8AF9
 801  8AF9 2A B8 88     4 ld hl,(Puntero_DESPLZ_der)
 802  8AFC 23           	inc hl
 803  8AFD 23           	inc hl
 804  8AFE 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 805  8B01 CD 07 8C     	call Extrae_address
 806  8B04 22 AE 88     	ld (Puntero_objeto),hl
 807  8B07
 808  8B07 21 E6 88     	ld hl,Frames_explosion
 809  8B0A 35           	dec (hl)
 810  8B0B 18 1E        	jr 3F
 811  8B0D
 812  8B0D AF           2 xor a
 813  8B0E 32 D4 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 814  8B11
 815  8B11              ; Movemos Entidades malignas.
 816  8B11
 817  8B11 CD 1F 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 818  8B14
 819  8B14 3A D4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 820  8B17 CB 67        	bit 4,a
 821  8B19 C8           	ret z
 822  8B1A
 823  8B1A              ; Ha habido desplazamiento de la entidad maligna.
 824  8B1A              ; Ha llegado a zona de AMADEUS ???
 825  8B1A
 826  8B1A 3A B1 88     	ld a,(Coordenada_y)
 827  8B1D FE 14        	cp $14
 828  8B1F D4 4A 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 829  8B22              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 830  8B22              ; ---------
 831  8B22
 832  8B22 CD 57 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 833  8B25 CD 54 8D     	call Repone_datos_de_borrado
 834  8B28 CD AD 8B     	call Limpia_Variables_de_borrado
 835  8B2B
 836  8B2B C9           3 ret													; _de la misma.
 837  8B2C
 838  8B2C              ; --------------------------------------------------------------------------------------------------------------
 839  8B2C              ;
 840  8B2C              ;	29/1/23
 841  8B2C
 842  8B2C              Mov_Amadeus
 843  8B2C
 844  8B2C CD F4 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 845  8B2F
 846  8B2F 3A D4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 847  8B32 CB 67        	bit 4,a
 848  8B34 C8           	ret z
 849  8B35
 850  8B35              ; ---------
 851  8B35
 852  8B35 CD 57 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 853  8B38 CD 44 8D     	call Repone_datos_de_borrado_Amadeus
 854  8B3B CD AD 8B     	call Limpia_Variables_de_borrado
 855  8B3E
 856  8B3E C9           	ret
 857  8B3F
 858  8B3F              ; -----------------------------------------------------------------------------------
 859  8B3F              ;
 860  8B3F              ;	16/11/23
 861  8B3F
 862  8B3F CD 0D 8C     Inicia_entidad	call Inicia_Puntero_objeto
 863  8B42 CD C4 98     	call Recompone_posicion_inicio
 864  8B45 CD A3 92     	call Draw
 865  8B48 CD A0 7F     	call Guarda_foto_registros
 866  8B4B F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 867  8B4C              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 868  8B4C CD 55 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 869  8B4F C9           	ret
 870  8B50
 871  8B50              ; --------------------------------------------------------------------------------------------------------------
 872  8B50              ;
 873  8B50              ;	31/08/23
 874  8B50              ;
 875  8B50              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 876  8B50              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 877  8B50
 878  8B50              Guarda_foto_entidad_a_pintar
 879  8B50
 880  8B50              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 881  8B50
 882  8B50 CD A3 92     	call Draw
 883  8B53 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 884  8B56 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 885  8B57
 886  8B57              ; --------------------------------------------------------------------------------------------------------------
 887  8B57              ;
 888  8B57              ;	19/9/23
 889  8B57
 890  8B57 21 AA 88     Prepara_var_pintado ld hl,Filas
 891  8B5A 11 CA 88     	ld de,Variables_de_pintado
 892  8B5D 01 08 00     	ld bc,8
 893  8B60 ED B0        	ldir
 894  8B62 C9           	ret
 895  8B63
 896  8B63              ; --------------------------------------------------------------------------------------------------------------
 897  8B63
 898  8B63 21 CA 88     Repone_pintar ld hl,Variables_de_pintado
 899  8B66 11 AA 88     	ld de,Filas
 900  8B69 01 08 00     	ld bc,8
 901  8B6C ED B0        	ldir
 902  8B6E C9           	ret
 903  8B6F
 904  8B6F              ; *************************************************************************************************************************************************************
 905  8B6F              ;
 906  8B6F              ; 8/1/23
 907  8B6F              ;
 908  8B6F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 909  8B6F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 910  8B6F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 911  8B6F
 912  8B6F              ; Destruye HL y DE !!!!!
 913  8B6F
 914  8B6F              Inicia_punteros_de_cajas
 915  8B6F
 916  8B6F 21 6C 85     	ld hl,Indice_de_cajas
 917  8B72 CD 07 8C         call Extrae_address
 918  8B75 22 EA 88         ld (Puntero_store_caja),hl
 919  8B78 21 6E 85     	ld hl,Indice_de_cajas+2
 920  8B7B 22 EE 88     	ld (Indice_restore_caja),hl
 921  8B7E CD 07 8C     	call Extrae_address
 922  8B81 22 EC 88     	ld (Puntero_restore_caja),hl
 923  8B84 C9               ret
 924  8B85
 925  8B85              ; *************************************************************************************************************************************************************
 926  8B85              ;
 927  8B85              ; 8/1/23
 928  8B85              ;
 929  8B85              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 930  8B85
 931  8B85 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 932  8B88 22 08 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 933  8B8B C9           	ret
 934  8B8C 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 935  8B8F 22 0A 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 936  8B92 C9           	ret
 937  8B93
 938  8B93              ; -------------------------------------------------------------------------------------------------------------
 939  8B93              ;
 940  8B93              ; 21/9/23
 941  8B93              ;
 942  8B93
 943  8B93              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 944  8B93
 945  8B93              Limpia_album_Amadeus
 946  8B93
 947  8B93 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 948  8B96 7E           	ld a,(hl)
 949  8B97 A7           	and a
 950  8B98 C8           	ret z
 951  8B99
 952  8B99 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 953  8B9C 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
 954  8B9F 01 0B 00     	ld bc,11
 955  8BA2 AF           	xor a
 956  8BA3 77           	ld (hl),a
 957  8BA4 ED B0        	ldir
 958  8BA6
 959  8BA6 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 960  8BA9 22 04 89     	ld (End_Snapshot_Amadeus),hl
 961  8BAC
 962  8BAC C9           	ret
 963  8BAD
 964  8BAD 21 C4 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
 965  8BB0 11 C5 88     	ld de,Variables_de_borrado+1
 966  8BB3 01 05 00     	ld bc,5
 967  8BB6 AF           	xor a
 968  8BB7 77           	ld (hl),a
 969  8BB8 ED B0        	ldir
 970  8BBA C9           	ret
 971  8BBB
 972  8BBB              ; -------------------------------------------------------------------------------------------------------------
 973  8BBB              ;
 974  8BBB              ; 8/9/23
 975  8BBB              ;
 976  8BBB
 977  8BBB              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
 978  8BBB              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
 979  8BBB
 980  8BBB              Calcula_numero_de_malotes
 981  8BBB
 982  8BBB 21 00 70     	ld hl,Album_de_fotos
 983  8BBE EB           	ex de,hl
 984  8BBF 2A FE 88     	ld hl,(Stack_snapshot)
 985  8BC2
 986  8BC2 06 00        	ld b,0
 987  8BC4 7D           	ld a,l
 988  8BC5 93           	sub e
 989  8BC6 28 07        	jr z,1F
 990  8BC8
 991  8BC8              ; Nº de malotes no es "0".
 992  8BC8
 993  8BC8 D6 06        2 sub 6
 994  8BCA 04           	inc b
 995  8BCB A7           	and a
 996  8BCC 20 FA        	jr nz,2B
 997  8BCE 78           	ld a,b
 998  8BCF
 999  8BCF 32 F3 88     1 ld (Numero_de_malotes),a
1000  8BD2 C9           	ret
1001  8BD3
1002  8BD3              ; -------------------------------------------------------------------------------------------------------------
1003  8BD3              ;
1004  8BD3              ; 8/9/23
1005  8BD3              ;
1006  8BD3
1007  8BD3              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1008  8BD3              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1009  8BD3
1010  8BD3              Calcula_malotes_Amadeus
1011  8BD3
1012  8BD3 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1013  8BD6 EB           	ex de,hl
1014  8BD7 2A 04 89     	ld hl,(End_Snapshot_Amadeus)
1015  8BDA
1016  8BDA 7C           	ld a,h
1017  8BDB A7           	and a
1018  8BDC 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1019  8BDE
1020  8BDE 06 00        	ld b,0
1021  8BE0 7D           	ld a,l
1022  8BE1 93           	sub e
1023  8BE2 28 07        	jr z,1F
1024  8BE4
1025  8BE4              ; Nº de malotes no es "0".
1026  8BE4
1027  8BE4 D6 06        2 sub 6
1028  8BE6 04           	inc b
1029  8BE7 A7           	and a
1030  8BE8 20 FA        	jr nz,2B
1031  8BEA 78           	ld a,b
1032  8BEB
1033  8BEB 32 F3 88     1 ld (Numero_de_malotes),a
1034  8BEE C9           	ret
1035  8BEF
1036  8BEF              ; -------------------------------------------------------------------------------------------------------------
1037  8BEF              ;
1038  8BEF              ; 28/2/23
1039  8BEF              ;
1040  8BEF
1041  8BEF              Calcula_numero_de_disparotes
1042  8BEF
1043  8BEF 21 56 70     	ld hl,Album_de_fotos_disparos
1044  8BF2 EB           	ex de,hl
1045  8BF3 2A 02 89     	ld hl,(End_Snapshot_disparos)
1046  8BF6
1047  8BF6 06 00        	ld b,0
1048  8BF8 7D           	ld a,l
1049  8BF9 93           	sub e
1050  8BFA 28 07        	jr z,1F
1051  8BFC
1052  8BFC              ; Nº de malotes no es "0".
1053  8BFC
1054  8BFC D6 06        2 sub 6
1055  8BFE 04           	inc b
1056  8BFF A7           	and a
1057  8C00 20 FA        	jr nz,2B
1058  8C02 78           	ld a,b
1059  8C03
1060  8C03 32 07 89     1 ld (Numero_de_disparotes),a
1061  8C06 C9           	ret
1062  8C07
1063  8C07              ; *************************************************************************************************************************************************************
1064  8C07              ;
1065  8C07              ; 20/10/22
1066  8C07              ;
1067  8C07              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1068  8C07              ;
1069  8C07              ; Destruye el puntero y DE !!!!!
1070  8C07
1071  8C07 5E           Extrae_address ld e,(hl)
1072  8C08 23           	inc hl
1073  8C09 56           	ld d,(hl)
1074  8C0A 2B           	dec hl
1075  8C0B EB           	ex de,hl
1076  8C0C C9           	ret
1077  8C0D
1078  8C0D              ; *************************************************************************************************************************************************************
1079  8C0D              ;
1080  8C0D              ;	7/2/23
1081  8C0D              ;
1082  8C0D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1083  8C0D              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1084  8C0D              ;
1085  8C0D              ;   Destruye HL y BC !!!!!,
1086  8C0D              ;
1087  8C0D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1088  8C0D              ;					"0" ..... Izquierda.
1089  8C0D
1090  8C0D              Inicia_Puntero_objeto
1091  8C0D
1092  8C0D 3A BE 88     	ld a,(Cuad_objeto)
1093  8C10 E6 01        	and 1
1094  8C12 F5           	push af
1095  8C13 CC 31 8C     	call z,Inicia_puntero_objeto_izq
1096  8C16 F1           	pop af
1097  8C17 28 2B        	jr z,1F
1098  8C19 CD 1E 8C     	call Inicia_puntero_objeto_der
1099  8C1C 18 26        	jr 1F
1100  8C1E
1101  8C1E              ; Arrancamos desde la parte izquierda de la pantalla.
1102  8C1E              ; Iniciamos (Indice_Sprite_der).
1103  8C1E
1104  8C1E 2A B4 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1105  8C21 22 B8 88     	ld (Puntero_DESPLZ_der),hl
1106  8C24 CD 07 8C     	call Extrae_address
1107  8C27 22 AE 88     	ld (Puntero_objeto),hl
1108  8C2A
1109  8C2A 2A B6 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1110  8C2D 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
1111  8C30 C9           	ret
1112  8C31
1113  8C31              ; Arrancamos desde la parte derecha de la pantalla.
1114  8C31              ; Iniciamos (Indice_Sprite_izq).
1115  8C31
1116  8C31 2A B6 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1117  8C34 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
1118  8C37 CD 07 8C     	call Extrae_address
1119  8C3A 22 AE 88     	ld (Puntero_objeto),hl
1120  8C3D
1121  8C3D 2A B4 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1122  8C40 22 B8 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1123  8C43 C9           	ret
1124  8C44
1125  8C44              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1126  8C44
1127  8C44 21 40 83     1 ld hl,Amadeus
1128  8C47 ED 4B AE 88  	ld bc,(Puntero_objeto)
1129  8C4B B7 ED 42     	sub hl,bc
1130  8C4E C0           	ret nz
1131  8C4F 21 D4 88     	ld hl,Ctrl_0
1132  8C52 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1133  8C54 C9           	ret 												; _de nuestra nave en los extremos.
1134  8C55
1135  8C55              ; *************************************************************************************************************************************************************
1136  8C55              ;
1137  8C55              ;	14/5/23
1138  8C55              ;
1139  8C55              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1140  8C55              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1141  8C55
1142  8C55              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1143  8C55              ;	_de la 2ª y 3ª entidad respectivamente.
1144  8C55
1145  8C55              Store_Restore_cajas
1146  8C55
1147  8C55 E5           	push hl
1148  8C56 D5           	push de
1149  8C57 C5            	push bc
1150  8C58
1151  8C58              ;	STORE !!!!!
1152  8C58              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1153  8C58
1154  8C58 21 AA 88     	ld hl,Filas
1155  8C5B ED 5B EA 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1156  8C5F 01 3D 00     	ld bc,61
1157  8C62 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1158  8C64
1159  8C64              ; 	Entidad_sospechosa. 20/4/23
1160  8C64
1161  8C64 3A C3 88     	ld a,(Impacto)
1162  8C67 A7           	and a
1163  8C68 28 0C        	jr z,1F
1164  8C6A
1165  8C6A 2A EA 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1166  8C6D 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1167  8C70 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1168  8C71 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1169  8C73 22 0D 89     	ld (Entidad_sospechosa_de_colision),hl
1170  8C76
1171  8C76              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1172  8C76
1173  8C76 2A EC 88     1 ld hl,(Puntero_restore_caja)
1174  8C79 7E           	ld a,(hl)
1175  8C7A A7           	and a
1176  8C7B F5           	push af
1177  8C7C 28 08        	jr z,2F
1178  8C7E
1179  8C7E 11 AA 88     	ld de,Filas
1180  8C81 01 3D 00     	ld bc,61
1181  8C84 ED B0        	ldir
1182  8C86
1183  8C86 CD A2 8C     2 call Incrementa_punteros_de_cajas
1184  8C89
1185  8C89 F1           	pop af
1186  8C8A 28 EA        	jr z,1B
1187  8C8C
1188  8C8C C1           	pop bc
1189  8C8D D1           	pop de
1190  8C8E E1           	pop hl
1191  8C8F
1192  8C8F C9           	ret
1193  8C90
1194  8C90              ; **************************************************************************************************
1195  8C90              ;
1196  8C90              ;	12/05/23
1197  8C90              ;
1198  8C90              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1199  8C90
1200  8C90 E5           Restore_entidad push hl
1201  8C91 D5           	push de
1202  8C92 C5            	push bc
1203  8C93
1204  8C93 2A EA 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1205  8C96 11 AA 88     	ld de,Filas
1206  8C99 01 3D 00     	ld bc,61
1207  8C9C ED B0        	ldir
1208  8C9E
1209  8C9E C1           	pop bc
1210  8C9F D1           	pop de
1211  8CA0 E1           	pop hl
1212  8CA1 C9           	ret
1213  8CA2
1214  8CA2              ; **************************************************************************************************
1215  8CA2              ;
1216  8CA2              ;	08/05/23
1217  8CA2              ;
1218  8CA2              ;	Incrementamos los dos punteros de entidades. (+1).
1219  8CA2
1220  8CA2              Incrementa_punteros_de_cajas
1221  8CA2
1222  8CA2 2A EC 88     	ld hl,(Puntero_restore_caja)
1223  8CA5 22 EA 88     	ld (Puntero_store_caja),hl
1224  8CA8 2A EE 88     	ld hl,(Indice_restore_caja)
1225  8CAB 23           	inc hl
1226  8CAC 23           	inc hl
1227  8CAD 22 EE 88     	ld (Indice_restore_caja),hl
1228  8CB0 CD 07 8C         call Extrae_address
1229  8CB3 22 EC 88         ld (Puntero_restore_caja),hl
1230  8CB6 C9               ret
1231  8CB7
1232  8CB7              ; **************************************************************************************************
1233  8CB7              ;
1234  8CB7              ;	25/01/23
1235  8CB7              ;
1236  8CB7              ;	Restore_Amadeus
1237  8CB7              ;
1238  8CB7              ;	Cargamos en DRAW los parámetros de Amadeus.
1239  8CB7              ;
1240  8CB7
1241  8CB7 E5           Restore_Amadeus	push hl
1242  8CB8 D5           	push de
1243  8CB9 C5            	push bc
1244  8CBA 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1245  8CBD 11 AA 88     	ld de,Filas
1246  8CC0 01 3D 00     	ld bc,61
1247  8CC3 ED B0        	ldir
1248  8CC5 C1           	pop bc
1249  8CC6 D1           	pop de
1250  8CC7 E1           	pop hl
1251  8CC8 C9           	ret
1252  8CC9
1253  8CC9              ; *************************************************************************************************************************************************************
1254  8CC9              ;
1255  8CC9              ;	29/04/23
1256  8CC9              ;
1257  8CC9              ;	Store_Amadeus
1258  8CC9              ;
1259  8CC9              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1260  8CC9              ;
1261  8CC9              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1262  8CC9              ;
1263  8CC9              ;	DESTRUYE: HL y BC y DE.
1264  8CC9
1265  8CC9 21 AA 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1266  8CCC 01 3D 00     	ld bc,61
1267  8CCF ED B0        	ldir
1268  8CD1 C9           	ret
1269  8CD2
1270  8CD2              ; -----------------------------------------------------------
1271  8CD2              ;
1272  8CD2              ;	27/04/23
1273  8CD2              ;
1274  8CD2              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1275  8CD2              ;
1276  8CD2              ;	Destruye: HL,BC,DE,A
1277  8CD2
1278  8CD2 21 AA 88     Borra_datos_entidad ld hl,Filas
1279  8CD5 01 3C 00     	ld bc,60
1280  8CD8 AF           	xor a
1281  8CD9 77           	ld (hl),a
1282  8CDA 11 AB 88     	ld de,Filas+1
1283  8CDD ED B0        	ldir
1284  8CDF C9           	ret
1285  8CE0
1286  8CE0              ; -----------------------------------------------------------
1287  8CE0
1288  8CE0              ; Teclado.
1289  8CE0
1290  8CE0 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1291  8CE2 DB FE        	in a,($fe)
1292  8CE4 E6 01        	and $01
1293  8CE6 28 02        	jr z,1f
1294  8CE8 18 F6        	jr Pulsa_ENTER
1295  8CEA C9           1 ret
1296  8CEB
1297  8CEB              ; **************************************************************************************************
1298  8CEB              ;
1299  8CEB              ; Temporización.
1300  8CEB
1301  8CEB              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1302  8CEB              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1303  8CEB              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1304  8CEB              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1305  8CEB
1306  8CEB              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1307  8CEB              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1308  8CEB              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1309  8CEB
1310  8CEB              ; A partir de $4f61 no hace falta DELAY.
1311  8CEB
1312  8CEB              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1313  8CEB
1314  8CEB 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1315  8CEE 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1316  8CEF 78           	LD A,B
1317  8CF0 A7           	AND A
1318  8CF1 20 FB        	JR NZ,wait
1319  8CF3 C9           	RET
1320  8CF4
1321  8CF4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1322  8CF4              ;
1323  8CF4              ;	5/3/23
1324  8CF4              ;
1325  8CF4              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1326  8CF4
1327  8CF4              Movimiento_Amadeus
1328  8CF4
1329  8CF4              ; Disparo.
1330  8CF4
1331  8CF4 3A 1F 89     	ld a,(Disparo_Amadeus)
1332  8CF7 A7           	and a
1333  8CF8 20 02        	jr nz,1F
1334  8CFA 18 15        	jr 2F
1335  8CFC
1336  8CFC 3E F7        1 ld a,$f7													; "5" para disparar.
1337  8CFE DB FE        	in a,($fe)
1338  8D00 E6 10        	and $10
1339  8D02
1340  8D02 F5           	push af
1341  8D03 CC A9 8D     	call z,Genera_disparo
1342  8D06 F1           	pop af
1343  8D07 20 08        	jr nz,2F
1344  8D09
1345  8D09 3A 1F 89     	ld a,(Disparo_Amadeus)
1346  8D0C EE 01        	xor 1
1347  8D0E 32 1F 89     	ld (Disparo_Amadeus),a
1348  8D11 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1349  8D13 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1350  8D15 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1351  8D17 CC 7E 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1352  8D1A
1353  8D1A 3E F7        	ld a,$f7
1354  8D1C DB FE        	in a,($fe)
1355  8D1E E6 01        	and $01
1356  8D20 C8           	ret z
1357  8D21
1358  8D21 3E F7        	ld a,$f7
1359  8D23 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1360  8D25 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1361  8D27 CC 60 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1362  8D2A C9           	ret
1363  8D2B
1364  8D2B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1365  8D2B              ;
1366  8D2B              ;	Rutina provisional para que los malotes cagen balas.
1367  8D2B
1368  8D2B              Detecta_disparo_entidad
1369  8D2B
1370  8D2B 3A 22 89     	ld a,(Disparo_entidad)
1371  8D2E A7           	and a
1372  8D2F C8           	ret z
1373  8D30
1374  8D30              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1375  8D30
1376  8D30              ;	ld a,$7f				; Detecta SPACE.
1377  8D30              ;	in a,($fe)
1378  8D30              ;	and 1
1379  8D30              ;	ret nz
1380  8D30
1381  8D30 CD A9 8D     	call Genera_disparo
1382  8D33 C9           	ret
1383  8D34
1384  8D34              ; ----------------------------------------------------------------------
1385  8D34              ;
1386  8D34              ;	8/9/23
1387  8D34
1388  8D34 2A 04 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1389  8D37 2B            	dec hl
1390  8D38 7E           	ld a,(hl)
1391  8D39 A7           	and a
1392  8D3A C8           	ret z										; Salimos si es álbum está vacío.
1393  8D3B
1394  8D3B 11 C9 88     	ld de,Variables_de_borrado+5
1395  8D3E 01 06 00     	ld bc,6
1396  8D41 ED B8        	lddr
1397  8D43 C9           	ret
1398  8D44
1399  8D44              ; ----------------------------------------------------------------------
1400  8D44              ;
1401  8D44              ;	9/9/23
1402  8D44
1403  8D44              Repone_datos_de_borrado_Amadeus
1404  8D44
1405  8D44 21 C4 88     	ld hl,Variables_de_borrado
1406  8D47 11 AC 70     	ld de,Album_de_fotos_Amadeus
1407  8D4A 01 06 00     	ld bc,6
1408  8D4D ED B0        	ldir
1409  8D4F
1410  8D4F EB           	ex de,hl
1411  8D50 22 04 89     	ld (End_Snapshot_Amadeus),hl
1412  8D53
1413  8D53 C9           	ret
1414  8D54
1415  8D54              ; ----------------------------------------------------------------------
1416  8D54              ;
1417  8D54              ;	27/10/23
1418  8D54              ;
1419  8D54
1420  8D54              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1421  8D54              ;	_ Album_de_fotos correspondiente.
1422  8D54
1423  8D54              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1424  8D54              ;	_ durante el proceso de escritura.
1425  8D54
1426  8D54              Repone_datos_de_borrado
1427  8D54
1428  8D54 F3           	di
1429  8D55
1430  8D55 ED 5B FE 88  	ld de,(Stack_snapshot)
1431  8D59 21 C4 88     	ld hl,Variables_de_borrado
1432  8D5C 01 06 00     	ld bc,6
1433  8D5F ED B0        	ldir
1434  8D61 FB           	ei
1435  8D62
1436  8D62 EB           	ex de,hl
1437  8D63 22 FE 88     	ld (Stack_snapshot),hl
1438  8D66
1439  8D66 C9           	ret
1440  8D67
1441  8D67              ; -----------------------------------------------------------------------------------
1442  8D67
1443  8D67              Pinta_Amadeus
1444  8D67
1445  8D67 3E 06        	ld a,6
1446  8D69 D3 FE            out ($fe),a										; Amarillo
1447  8D6B
1448  8D6B CD D3 8B        	call Calcula_malotes_Amadeus
1449  8D6E CD 33 96     	call Extrae_foto_Amadeus
1450  8D71 CD 93 8B     	call Limpia_album_Amadeus
1451  8D74
1452  8D74 C9           	ret
1453  8D75
1454  8D75              Pinta_entidades
1455  8D75
1456  8D75              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1457  8D75
1458  8D75 3A 06 89     	ld a,(Ctrl_3)
1459  8D78 CB 47        	bit 0,a
1460  8D7A C8           	ret z
1461  8D7B
1462  8D7B CD BB 8B     	call Calcula_numero_de_malotes
1463  8D7E CD B1 95     	call Extrae_foto_entidades
1464  8D81 CD FE 7F     	call Limpia_y_reinicia_Stack_Snapshot
1465  8D84
1466  8D84 C9           	ret
1467  8D85
1468  8D85              ; -----------------------------------------------------------------------------------
1469  8D85              ;
1470  8D85              ;	12/11/23
1471  8D85              ;
1472  8D85              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1473  8D85
1474  8D85              Actualiza_relojes
1475  8D85
1476  8D85 21 1A 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1477  8D88 34           	inc (hl)
1478  8D89
1479  8D89 34           	inc (hl)
1480  8D8A 35           	dec (hl)
1481  8D8B C0           	ret nz
1482  8D8C
1483  8D8C 21 1B 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1484  8D8F 34           	inc (hl)
1485  8D90 C9           	ret
1486  8D91
1487  8D91              ; ---------------------------------------------------------------
1488  8D91              ;
1489  8D91              ;	27/9/23
1490  8D91
1491  8D91              Guarda_parametros_DRAW
1492  8D91
1493  8D91 21 AA 88     	ld hl,Filas
1494  8D94 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1495  8D97 01 3D 00     	ld bc,61
1496  8D9A ED B0        	ldir
1497  8D9C C9           	ret
1498  8D9D
1499  8D9D              Recupera_parametros_DRAW
1500  8D9D
1501  8D9D 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1502  8DA0 11 AA 88     	ld de,Filas
1503  8DA3 01 3D 00     	ld bc,61
1504  8DA6 ED B0        	ldir
1505  8DA8 C9           	ret
1506  8DA9
1507  8DA9              ; ---------------------------------------------------------------
1508  8DA9
1509  8DA9              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DA9              ; ******************************************************************************************************************************************************************************************
   2+ 8DA9              ;
   3+ 8DA9              ;   21/07/23
   4+ 8DA9              ;
   5+ 8DA9              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DA9              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DA9              ;
   8+ 8DA9              ;
   9+ 8DA9              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DA9              ;
  11+ 8DA9              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DA9              ;               _ hacen las entidades hacia abajo.
  13+ 8DA9              ;
  14+ 8DA9              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DA9              ;
  16+ 8DA9              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DA9              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DA9              ;
  19+ 8DA9              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DA9              ;           _ la bala.
  21+ 8DA9              ;
  22+ 8DA9              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DA9              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DA9              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DA9              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DA9              ;           _ en el momento de generarse la bala)).
  27+ 8DA9
  28+ 8DA9              Genera_disparo
  29+ 8DA9
  30+ 8DA9              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DA9              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DA9              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DA9              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DA9              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DA9              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DA9              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DA9
  38+ 8DA9              ; Exclusiones:
  39+ 8DA9
  40+ 8DA9 3A C2 88         ld a,(Vel_down)
  41+ 8DAC 47               ld b,a
  42+ 8DAD 3A 19 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8DB0 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8DB1 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8DB2 3A E1 88         ld a,(Columnas)
  46+ 8DB5 47               ld b,a
  47+ 8DB6 3A AB 88         ld a,(Columns)
  48+ 8DB9 B8               cp b
  49+ 8DBA C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8DBB
  51+ 8DBB              ; ----- ----- -----
  52+ 8DBB
  53+ 8DBB 3A D4 88         ld a,(Ctrl_0)
  54+ 8DBE CB 77            bit 6,a
  55+ 8DC0 20 06            jr nz,14F
  56+ 8DC2
  57+ 8DC2 3A B1 88         ld a,(Coordenada_y)
  58+ 8DC5 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8DC7 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8DC8
  61+ 8DC8 21 00 80     14 ld hl,Indice_disparo
  62+ 8DCB 3A B2 88         ld a,(CTRL_DESPLZ)
  63+ 8DCE 4F               ld c,a
  64+ 8DCF 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8DD1              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8DD1              ;                                            ""        ""       "f9", B="1"
  67+ 8DD1              ;                                            ""        ""       "fb", B="2"
  68+ 8DD1              ;                                            ""        ""       "fb", B="3"
  69+ 8DD1 A7               and a
  70+ 8DD2 28 14            jr z,1F
  71+ 8DD4 E6 01            and 1
  72+ 8DD6 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8DD7
  74+ 8DD7 F3               di
  75+ 8DD8 18 FE            jr $
  76+ 8DDA FB               ei
  77+ 8DDB
  78+ 8DDB 79               ld a,c
  79+ 8DDC 16 F9            ld d,$f9
  80+ 8DDE 23           2 inc hl
  81+ 8DDF 23               inc hl
  82+ 8DE0 04               inc b
  83+ 8DE1 BA               cp d
  84+ 8DE2 28 04            jr z,1F
  85+ 8DE4 14               inc d
  86+ 8DE5 14               inc d
  87+ 8DE6 18 F6            jr 2B
  88+ 8DE8
  89+ 8DE8 CD 07 8C     1 call Extrae_address
  90+ 8DEB E5               push hl
  91+ 8DEC FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  92+ 8DEE DD 21 79 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  93+ 8DF2
  94+ 8DF2              ;	Se cumplen las condiciones necesarias para generar un disparo.
  95+ 8DF2              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  96+ 8DF2
  97+ 8DF2 3A D4 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  98+ 8DF5 CB 77            bit 6,a
  99+ 8DF7 20 04            jr nz,19F
 100+ 8DF9
 101+ 8DF9 AF               xor a
 102+ 8DFA 32 22 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
 103+ 8DFD
 104+ 8DFD 3A BE 88     19 ld a,(Cuad_objeto)
 105+ 8E00 FE 02            cp 2
 106+ 8E02 38 66            jr c,3F
 107+ 8E04 28 64            jr z,3F
 108+ 8E06
 109+ 8E06              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 110+ 8E06
 111+ 8E06 E6 01            and 1
 112+ 8E08 28 30            jr z,4F
 113+ 8E0A
 114+ 8E0A              ; 	Estamos en el 3er cuadrante de pantalla.
 115+ 8E0A              ; 	3er CUAD. ----- ----- ----- ----- -----
 116+ 8E0A              ;
 117+ 8E0A              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 118+ 8E0A              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 119+ 8E0A              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 120+ 8E0A
 121+ 8E0A 2A AC 88     	ld hl,(Posicion_actual)
 122+ 8E0D
 123+ 8E0D              ;   Amadeus o entidad ???.
 124+ 8E0D
 125+ 8E0D 3A D4 88         ld a,(Ctrl_0)
 126+ 8E10 CB 77            bit 6,a
 127+ 8E12 28 0A            jr z,8F
 128+ 8E14
 129+ 8E14              ; 	Dispara Amadeus.
 130+ 8E14
 131+ 8E14 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 132+ 8E16 CD A2 95         call PreviousScan
 133+ 8E19 CD A2 95         call PreviousScan
 134+ 8E1C
 135+ 8E1C              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 136+ 8E1C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 137+ 8E1C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 138+ 8E1C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 139+ 8E1C
 140+ 8E1C 18 11            jr 10F
 141+ 8E1E
 142+ 8E1E              ; 	Dispara Entidad.
 143+ 8E1E
 144+ 8E1E 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 145+ 8E21              ;                                                   ; Impacto B="$80", no hay impacto.
 146+ 8E21
 147+ 8E21              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 148+ 8E21              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 149+ 8E21
 150+ 8E21 C5               push bc
 151+ 8E22 06 10            ld b,16
 152+ 8E24 CD 93 95     9 call NextScan
 153+ 8E27 10 FB            djnz 9B
 154+ 8E29 C1               pop bc
 155+ 8E2A CD 94 8E         call Ajusta_disparo_parte_izquierda
 156+ 8E2D 18 06            jr 17F
 157+ 8E2F
 158+ 8E2F              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 159+ 8E2F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 160+ 8E2F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 161+ 8E2F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 162+ 8E2F
 163+ 8E2F CD 94 8E     10 call Ajusta_disparo_parte_izquierda
 164+ 8E32 CD 09 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 165+ 8E35              ;                                                      ; _al generar el disparo.
 166+ 8E35
 167+ 8E35              ; 	LLegados a este punto tendremos:
 168+ 8E35              ;
 169+ 8E35              ;       Puntero_objeto_disparo en IY.
 170+ 8E35              ;       Rutinas_de_impresion en IX.
 171+ 8E35              ;       Puntero_de_impresion en HL.
 172+ 8E35              ;       Impacto/Dirección en BC.
 173+ 8E35
 174+ 8E35 CD 9C 8E     17 call Almacena_disparo
 175+ 8E38 18 52            jr 6F                                             ; RET.
 176+ 8E3A
 177+ 8E3A              ; 	Estamos en el 4º cuadrante de pantalla.
 178+ 8E3A              ; 	4º CUAD. ----- ----- ----- ----- -----
 179+ 8E3A              ;
 180+ 8E3A              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 181+ 8E3A              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 182+ 8E3A              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 183+ 8E3A
 184+ 8E3A 2A AC 88     4 ld hl,(Posicion_actual)
 185+ 8E3D
 186+ 8E3D              ;   Amadeus o entidad ???.
 187+ 8E3D
 188+ 8E3D 3A D4 88         ld a,(Ctrl_0)
 189+ 8E40 CB 77            bit 6,a
 190+ 8E42 28 0A            jr z,11F
 191+ 8E44
 192+ 8E44              ; 	Dispara Amadeus.
 193+ 8E44
 194+ 8E44 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 195+ 8E46 CD A2 95         call PreviousScan
 196+ 8E49 CD A2 95         call PreviousScan
 197+ 8E4C
 198+ 8E4C              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 199+ 8E4C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 200+ 8E4C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 201+ 8E4C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 202+ 8E4C
 203+ 8E4C 18 11            jr 13F
 204+ 8E4E
 205+ 8E4E              ; 	Dispara Entidad.
 206+ 8E4E
 207+ 8E4E 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 208+ 8E51              ;                                                     ; Impacto B="$80", no hay impacto.
 209+ 8E51
 210+ 8E51              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 211+ 8E51              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 212+ 8E51
 213+ 8E51 C5               push bc
 214+ 8E52 06 10            ld b,16
 215+ 8E54 CD 93 95     12 call NextScan
 216+ 8E57 10 FB            djnz 12B
 217+ 8E59 C1               pop bc
 218+ 8E5A
 219+ 8E5A CD 8D 8E         call Ajusta_disparo_parte_derecha
 220+ 8E5D 18 06            jr 18F
 221+ 8E5F
 222+ 8E5F              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 223+ 8E5F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 224+ 8E5F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 225+ 8E5F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 226+ 8E5F
 227+ 8E5F CD 8D 8E     13 call Ajusta_disparo_parte_derecha
 228+ 8E62 CD 09 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 229+ 8E65              ;                                                       ; _al generar el disparo.
 230+ 8E65
 231+ 8E65              ; LLegados a este punto tendremos:
 232+ 8E65              ;
 233+ 8E65              ;       Puntero_objeto_disparo en IY.
 234+ 8E65              ;       Rutinas_de_impresion en IX.
 235+ 8E65              ;       Puntero_de_impresion en HL.
 236+ 8E65              ;       Impacto/Dirección en BC.
 237+ 8E65
 238+ 8E65 CD 9C 8E     18 call Almacena_disparo
 239+ 8E68 18 22            jr 6F                                               ; RET.
 240+ 8E6A
 241+ 8E6A              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 242+ 8E6A
 243+ 8E6A 28 11        3 jr z,5F
 244+ 8E6C
 245+ 8E6C              ; 	1er CUAD. ----- ----- ----- ----- -----
 246+ 8E6C              ;
 247+ 8E6C              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 248+ 8E6C              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 249+ 8E6C              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 250+ 8E6C              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 251+ 8E6C
 252+ 8E6C              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 253+ 8E6C              ;	   ""        ""       "f9", B="1"
 254+ 8E6C              ;	   ""        ""       "fb", B="2"
 255+ 8E6C              ; 	   ""        ""       "fb", B="3"
 256+ 8E6C
 257+ 8E6C 2A AC 88     	ld hl,(Posicion_actual)
 258+ 8E6F CD 93 95     	call NextScan
 259+ 8E72
 260+ 8E72              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 261+ 8E72              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 262+ 8E72              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 263+ 8E72              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 264+ 8E72
 265+ 8E72 CD 94 8E         call Ajusta_disparo_parte_izquierda
 266+ 8E75
 267+ 8E75              ; 	No se produce impacto. B="$80"
 268+ 8E75              ; 	Dirección del proyectil hacia abajo. C="$80"
 269+ 8E75
 270+ 8E75 01 80 80         ld bc,$8080
 271+ 8E78
 272+ 8E78              ; 	LLegados a este punto tendremos:
 273+ 8E78              ;
 274+ 8E78              ;       Puntero_objeto_disparo en IY.
 275+ 8E78              ;       Rutinas_de_impresion en IX.
 276+ 8E78              ;       Puntero_de_impresion en HL.
 277+ 8E78              ;       Impacto/Dirección en BC.
 278+ 8E78
 279+ 8E78 CD 9C 8E         call Almacena_disparo
 280+ 8E7B 18 0F            jr 6F                                           ; RET.
 281+ 8E7D
 282+ 8E7D              ; 	Estamos en el 2º cuadrante de pantalla.
 283+ 8E7D              ; 	2º CUAD. ----- ----- ----- ----- -----
 284+ 8E7D              ;
 285+ 8E7D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 286+ 8E7D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 287+ 8E7D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 288+ 8E7D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 289+ 8E7D
 290+ 8E7D 2A AC 88     5 ld hl,(Posicion_actual)
 291+ 8E80 CD 93 95     	call NextScan
 292+ 8E83
 293+ 8E83              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 294+ 8E83              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 295+ 8E83              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 296+ 8E83              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 297+ 8E83
 298+ 8E83 CD 8D 8E         call Ajusta_disparo_parte_derecha
 299+ 8E86
 300+ 8E86              ; 	No se produce impacto. B="$80"
 301+ 8E86              ; 	Dirección del proyectil hacia abajo. C="80"
 302+ 8E86
 303+ 8E86 01 80 80     15 ld bc,$8080
 304+ 8E89
 305+ 8E89              ; 	LLegados a este punto tendremos:
 306+ 8E89              ;
 307+ 8E89              ;       Puntero_objeto_disparo en IY.
 308+ 8E89              ;       Rutinas_de_impresion en IX.
 309+ 8E89              ;       Puntero_de_impresion en HL.
 310+ 8E89              ;       Impacto/Dirección en BC.
 311+ 8E89
 312+ 8E89 CD 9C 8E         call Almacena_disparo
 313+ 8E8C
 314+ 8E8C C9           6 ret
 315+ 8E8D
 316+ 8E8D              ; ----------------------------------------------------------------
 317+ 8E8D              ;
 318+ 8E8D              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 319+ 8E8D              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 320+ 8E8D              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 321+ 8E8D
 322+ 8E8D 78           Ajusta_disparo_parte_derecha ld a,b
 323+ 8E8E FE 02            cp 2
 324+ 8E90 38 01            jr c,1F
 325+ 8E92 23               inc hl
 326+ 8E93 C9           1 ret
 327+ 8E94
 328+ 8E94 78           Ajusta_disparo_parte_izquierda ld a,b
 329+ 8E95 FE 01        	cp 1
 330+ 8E97 20 01        	jr nz,1F
 331+ 8E99 2B           	dec hl
 332+ 8E9A 2B           1 dec hl
 333+ 8E9B C9               ret
 334+ 8E9C
 335+ 8E9C              ; ----------------------------------------------------------------
 336+ 8E9C              ;
 337+ 8E9C              ;   25/02/23
 338+ 8E9C              ;
 339+ 8E9C              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 340+ 8E9C              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 341+ 8E9C              ;
 342+ 8E9C              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 343+ 8E9C              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 344+ 8E9C
 345+ 8E9C              Almacena_disparo
 346+ 8E9C
 347+ 8E9C E5               push hl  										; HL contiene el puntero de impresión.
 348+ 8E9D F1               pop af
 349+ 8E9E 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 350+ 8E9F
 351+ 8E9F 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 352+ 8EA0 E6 01            and 1
 353+ 8EA2 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 354+ 8EA4              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 355+ 8EA4              ; 	Dispara AMADEUS.
 356+ 8EA4
 357+ 8EA4              ;	Comprobamos que a Amadeus aún le quedan disparos.
 358+ 8EA4              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 359+ 8EA4              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 360+ 8EA4              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 361+ 8EA4
 362+ 8EA4 C5               push bc
 363+ 8EA5 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 364+ 8EA8 2A 0A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 365+ 8EAB A7               and a
 366+ 8EAC ED 42            sbc hl,bc
 367+ 8EAE CC 8C 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 368+ 8EB1 C1               pop bc
 369+ 8EB2 28 54            jr z,4F
 370+ 8EB4
 371+ 8EB4 2A 0A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 372+ 8EB7 23               inc hl
 373+ 8EB8 23               inc hl
 374+ 8EB9 22 0A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 375+ 8EBC              ;                                                   ; _ Disparo_(+1).
 376+ 8EBC 18 18            jr 2F
 377+ 8EBE
 378+ 8EBE              ; Dispara una entidad.
 379+ 8EBE
 380+ 8EBE C5           1 push bc
 381+ 8EBF 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 382+ 8EC2 2A 08 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 383+ 8EC5 A7               and a
 384+ 8EC6 ED 42            sbc hl,bc
 385+ 8EC8 CC 85 8B         call z,Inicia_Puntero_Disparo_Entidades
 386+ 8ECB C1               pop bc
 387+ 8ECC 28 3A            jr z,4F
 388+ 8ECE
 389+ 8ECE 2A 08 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 390+ 8ED1 23               inc hl
 391+ 8ED2 23               inc hl
 392+ 8ED3 22 08 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 393+ 8ED6              ;                                                   ; _ Disparo_(+1).
 394+ 8ED6 CD 07 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 395+ 8ED9              ;                                                   ; _ los 8 bytes que definen el disparo:
 396+ 8ED9              ;
 397+ 8ED9              ;                                                     Puntero_objeto_disparo en IY.
 398+ 8ED9              ;                                                     Rutinas_de_impresion en IX.
 399+ 8ED9              ;                                                     Puntero_de_impresion en HL.
 400+ 8ED9              ;                                                     Impacto/Dirección en BC.
 401+ 8ED9
 402+ 8ED9 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 403+ 8EDA 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 404+ 8EDB 23               inc hl                                          ; _ al siguiente.
 405+ 8EDC A7               and a
 406+ 8EDD 20 C0            jr nz,3B
 407+ 8EDF
 408+ 8EDF 08               ex af,af
 409+ 8EE0 ED 73 F8 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 410+ 8EE4 F9               ld sp,hl
 411+ 8EE5
 412+ 8EE5 DD E5            push ix                                         ; Rutina de impresión.
 413+ 8EE7 F5               push af                                         ; Puntero de impresión.
 414+ 8EE8 FD E5            push iy                                         ; Puntero objeto.
 415+ 8EEA C5               push bc                                         ; Control.
 416+ 8EEB
 417+ 8EEB ED 7B F8 88      ld sp,(Stack)
 418+ 8EEF
 419+ 8EEF              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 420+ 8EEF
 421+ 8EEF 21 E7 88     	ld hl,Ctrl_1
 422+ 8EF2 CB C6        	set 0,(hl)
 423+ 8EF4
 424+ 8EF4 DD E5        	push ix
 425+ 8EF6 E1               pop hl
 426+ 8EF7 F5               push af
 427+ 8EF8 DD E1            pop ix
 428+ 8EFA
 429+ 8EFA CD A0 7F     	call Guarda_foto_registros
 430+ 8EFD
 431+ 8EFD 21 E7 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 432+ 8F00 CB 86        	res 0,(hl)
 433+ 8F02
 434+ 8F02              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 435+ 8F02              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 436+ 8F02
 437+ 8F02 CD 8C 8B         call Inicia_Puntero_Disparo_Amadeus
 438+ 8F05 CD 85 8B         call Inicia_Puntero_Disparo_Entidades
 439+ 8F08
 440+ 8F08 C9           4 ret
 441+ 8F09
 442+ 8F09              ; ----------------------------------------------------------------
 443+ 8F09              ;
 444+ 8F09              ;   4/3/23
 445+ 8F09              ;
 446+ 8F09              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 447+ 8F09              ;   _ al generarse el disparo.
 448+ 8F09              ;
 449+ 8F09              ;       "$80" ..... No se produce colisión.
 450+ 8F09              ;       "$81" ..... Se produce colisión.
 451+ 8F09              ;
 452+ 8F09              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 453+ 8F09              ;         _ que forman el disparo.
 454+ 8F09
 455+ 8F09
 456+ 8F09              Comprueba_Colision
 457+ 8F09
 458+ 8F09              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 459+ 8F09
 460+ 8F09 FD E5            push iy                                        ; Puntero objeto (disparo).
 461+ 8F0B E5               push hl                                        ; Puntero de impresión (disparo).
 462+ 8F0C
 463+ 8F0C CD 42 8F         call Modifica_H_Velocidad_disparo
 464+ 8F0F
 465+ 8F0F 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 466+ 8F10 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 467+ 8F12 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 468+ 8F14
 469+ 8F14 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 470+ 8F16 CD 32 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 471+ 8F19
 472+ 8F19 7B               ld a,e
 473+ 8F1A E6 01            and 1
 474+ 8F1C 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 475+ 8F1E              ;                                                  ; _ para activar IMPACTO.
 476+ 8F1E E1               pop hl
 477+ 8F1F E5               push hl
 478+ 8F20 CD 93 95         call NextScan
 479+ 8F23
 480+ 8F23 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 481+ 8F24 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 482+ 8F26 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 483+ 8F28              ;                                                  ; _ 2º scanline si esto es así.
 484+ 8F28 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 485+ 8F2A CD 32 8F         call Bucle_2
 486+ 8F2D
 487+ 8F2D 43           1 ld b,e
 488+ 8F2E E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 489+ 8F2F FD E1            pop iy
 490+ 8F31 C9               ret
 491+ 8F32
 492+ 8F32              ; ---------- ----------
 493+ 8F32
 494+ 8F32 06 02        Bucle_2 ld b,2
 495+ 8F34 FD 7E 00     2 ld a,(iy)
 496+ 8F37 A6               and (hl)
 497+ 8F38 28 02            jr z,1F
 498+ 8F3A 1E 81            ld e,$81
 499+ 8F3C 23           1 inc hl
 500+ 8F3D FD 23            inc iy
 501+ 8F3F 10 F3            djnz 2B
 502+ 8F41 C9               ret
 503+ 8F42
 504+ 8F42              ; ---------- ----------
 505+ 8F42              ;
 506+ 8F42              ;   21/7/23
 507+ 8F42
 508+ 8F42              Modifica_H_Velocidad_disparo
 509+ 8F42
 510+ 8F42 3A 19 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 511+ 8F45 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 512+ 8F47 D0               ret nc                                         ; _ incrementamos H.
 513+ 8F48 24               inc h
 514+ 8F49
 515+ 8F49 C9               ret
 516+ 8F4A
 517+ 8F4A              ; -------------------------------------------------------------------------------------------------------------
 518+ 8F4A              ;
 519+ 8F4A              ;   11/04/23
 520+ 8F4A              ;
 521+ 8F4A              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 522+ 8F4A              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 523+ 8F4A              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 524+ 8F4A              ;
 525+ 8F4A              ;   MODIFICA: HL,DE,BC,A y AF´.
 526+ 8F4A
 527+ 8F4A              Compara_coordenadas_X
 528+ 8F4A
 529+ 8F4A              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 530+ 8F4A              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 531+ 8F4A
 532+ 8F4A              ; Preparamos registros:
 533+ 8F4A
 534+ 8F4A 21 B0 88         ld hl,Filas+6
 535+ 8F4D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 536+ 8F4E 23               inc hl
 537+ 8F4F 23               inc hl
 538+ 8F50 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 539+ 8F51 43               ld b,e
 540+ 8F52
 541+ 8F52 21 BE 88         ld hl,Filas+20
 542+ 8F55 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 543+ 8F56 21 14 89         ld hl,Coordenadas_X_Entidad
 544+ 8F59 CD 75 91         call Guarda_coordenadas_X
 545+ 8F5C
 546+ 8F5C              ; Preparamos registros:
 547+ 8F5C
 548+ 8F5C 21 84 85         ld hl,Amadeus_db+6
 549+ 8F5F 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 550+ 8F60 23               inc hl
 551+ 8F61 23               inc hl
 552+ 8F62 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 553+ 8F63 7B               ld a,e
 554+ 8F64 08               ex af,af'
 555+ 8F65 21 92 85         ld hl,Amadeus_db+20
 556+ 8F68 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 557+ 8F69 21 11 89         ld hl,Coordenadas_X_Amadeus
 558+ 8F6C CD 75 91         call Guarda_coordenadas_X
 559+ 8F6F
 560+ 8F6F              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 561+ 8F6F              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 562+ 8F6F
 563+ 8F6F 04               inc b
 564+ 8F70 05               dec b
 565+ 8F71 28 04            jr z,1F
 566+ 8F73 06 03            ld b,3
 567+ 8F75 18 02            jr 2F
 568+ 8F77 06 02        1 ld b,2
 569+ 8F79 08           2 ex af,af'
 570+ 8F7A 3C               inc a
 571+ 8F7B 3D               dec a
 572+ 8F7C 28 04            jr z,5F
 573+ 8F7E 0E 03            ld c,3
 574+ 8F80 18 02            jr 6F
 575+ 8F82 0E 02        5 ld c,2
 576+ 8F84 79           6 ld a,c
 577+ 8F85 08               ex af,af'
 578+ 8F86 11 14 89         ld de,Coordenadas_X_Entidad
 579+ 8F89 1A           4 ld a,(de)
 580+ 8F8A 21 11 89         ld hl,Coordenadas_X_Amadeus
 581+ 8F8D BE           3 cp (hl)
 582+ 8F8E 28 0E            jr z,7F
 583+ 8F90 23               inc hl
 584+ 8F91 0D               dec c
 585+ 8F92 20 F9            jr nz,3B
 586+ 8F94 13               inc de
 587+ 8F95 08               ex af,af'
 588+ 8F96 4F               ld c,a
 589+ 8F97 08               ex af,af'
 590+ 8F98 10 EF            djnz 4B
 591+ 8F9A
 592+ 8F9A              ; Limpiamos los almacenes de coordenadas y salimos.
 593+ 8F9A
 594+ 8F9A CD B1 91     8 call Limpia_Coordenadas_X
 595+ 8F9D C9               ret
 596+ 8F9E
 597+ 8F9E 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 598+ 8FA0 32 C3 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 599+ 8FA3 21 0C 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 600+ 8FA6 CB D6            set 2,(hl)
 601+ 8FA8 18 F0            jr 8B
 602+ 8FAA
 603+ 8FAA              ; -----------------------------------------------------------------------
 604+ 8FAA              ;
 605+ 8FAA              ;   17/04/23
 606+ 8FAA              ;
 607+ 8FAA
 608+ 8FAA              Detecta_colision_nave_entidad
 609+ 8FAA
 610+ 8FAA              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 611+ 8FAA
 612+ 8FAA 2A AC 88         ld hl,(Posicion_actual)
 613+ 8FAD CD EE 94         call Calcula_puntero_de_impresion
 614+ 8FB0
 615+ 8FB0              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 616+ 8FB0              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 617+ 8FB0
 618+ 8FB0 DD E5            push ix
 619+ 8FB2 E1               pop hl
 620+ 8FB3 E5               push hl
 621+ 8FB4
 622+ 8FB4              ; ----- ----- -----
 623+ 8FB4 1E 00            ld e,0                                         ; Indica impacto.
 624+ 8FB6 06 0A            ld b,10
 625+ 8FB8 CD E8 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 626+ 8FBB 7B               ld a,e
 627+ 8FBC FE 05            cp 5
 628+ 8FBE 38 0E            jr c,3F
 629+ 8FC0
 630+ 8FC0              ; LLegados a este punto:
 631+ 8FC0              ;
 632+ 8FC0              ;   HAY COLISIÓN !!!!!.
 633+ 8FC0              ;
 634+ 8FC0              ;   .db (Impacto) de Amadeus a "1".
 635+ 8FC0              ;   SET el bit3 de (Impacto2).
 636+ 8FC0              ;
 637+ 8FC0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 638+ 8FC0
 639+ 8FC0 21 97 85         ld hl,Amadeus_db+25
 640+ 8FC3 36 01            ld (hl),1
 641+ 8FC5 21 0C 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 642+ 8FC8 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 643+ 8FCA CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 644+ 8FCC 18 18            jr 1F
 645+ 8FCE
 646+ 8FCE              ; -----
 647+ 8FCE
 648+ 8FCE E1           3 pop hl
 649+ 8FCF CD 93 95         call NextScan
 650+ 8FD2 E5               push hl
 651+ 8FD3 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 652+ 8FD4 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 653+ 8FD6 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 654+ 8FD8 30 0C            jr nc,1F
 655+ 8FDA              ;                                                  ; _ 2º scanline si esto es así.
 656+ 8FDA 10 DC            djnz 2B
 657+ 8FDC
 658+ 8FDC              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 659+ 8FDC
 660+ 8FDC              ; LLegados a este punto:
 661+ 8FDC              ;
 662+ 8FDC              ;   NO HAY COLISIÓN !!!!!.
 663+ 8FDC              ;
 664+ 8FDC              ;   .db (Impacto) de Amadeus a "0".
 665+ 8FDC              ;   RES el bit2 de (Impacto2).
 666+ 8FDC              ;
 667+ 8FDC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 668+ 8FDC              ;   Lo colocamos a "0".
 669+ 8FDC
 670+ 8FDC 21 0C 89         ld hl,Impacto2
 671+ 8FDF CB 96            res 2,(hl)
 672+ 8FE1 2A 0D 89         ld hl,(Entidad_sospechosa_de_colision)
 673+ 8FE4 36 00            ld (hl),0
 674+ 8FE6
 675+ 8FE6 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 676+ 8FE7 C9               ret
 677+ 8FE8
 678+ 8FE8               ; ---------- ----------
 679+ 8FE8
 680+ 8FE8 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 681+ 8FE9 3A AB 88         ld a,(Columns)
 682+ 8FEC 47               ld b,a
 683+ 8FED FD 7E 00     2 ld a,(iy)
 684+ 8FF0 BE               cp (hl)
 685+ 8FF1 28 01            jr z,1F
 686+ 8FF3
 687+ 8FF3 1C               inc e
 688+ 8FF4
 689+ 8FF4 23           1 inc hl
 690+ 8FF5 FD 23            inc iy
 691+ 8FF7 10 F4            djnz 2B
 692+ 8FF9 C1               pop bc
 693+ 8FFA C9               ret
 694+ 8FFB
 695+ 8FFB              ; -------------------------------------------------------------------------------------------------------------
 696+ 8FFB              ;
 697+ 8FFB              ;   13/03/23
 698+ 8FFB              ;
 699+ 8FFB              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 700+ 8FFB              ;
 701+ 8FFB              ;   DESTRUYE: HL,BC,DE y A.
 702+ 8FFB
 703+ 8FFB 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 704+ 8FFE 7E               ld a,(hl)
 705+ 8FFF A7               and a
 706+ 9000 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 707+ 9001
 708+ 9001 44               ld b,h
 709+ 9002 4D               ld c,l
 710+ 9003 2A 00 89         ld hl,(Stack_snapshot_disparos)
 711+ 9006 E5               push hl
 712+ 9007 A7               and a
 713+ 9008 ED 42            sbc hl,bc
 714+ 900A E5               push hl
 715+ 900B C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 716+ 900C
 717+ 900C E1               pop hl
 718+ 900D 54               ld d,h
 719+ 900E 5D               ld e,l
 720+ 900F 1B               dec de
 721+ 9010 ED B8            lddr                                                ; Limpiamos.
 722+ 9012
 723+ 9012 21 56 70         ld hl,Album_de_fotos_disparos
 724+ 9015 22 00 89         ld (Stack_snapshot_disparos),hl
 725+ 9018
 726+ 9018 C9               ret
 727+ 9019
 728+ 9019              ; -------------------------------------------------------------------------------------------------------------
 729+ 9019              ;
 730+ 9019              ;   18/07/23
 731+ 9019              ;
 732+ 9019
 733+ 9019              Motor_de_disparos
 734+ 9019
 735+ 9019              ; Gestiona DISPAROS DE AMADEUS.
 736+ 9019
 737+ 9019 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 738+ 901C 2A 0A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 739+ 901F
 740+ 901F CD 07 8C     2 call Extrae_address
 741+ 9022 7E               ld a,(hl)
 742+ 9023 A7               and a
 743+ 9024 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 744+ 9026
 745+ 9026              ; ----- ----- ----- ----- ----- -----
 746+ 9026
 747+ 9026 C5               push bc
 748+ 9027 CD EB 90         call foto_disparo_a_borrar
 749+ 902A
 750+ 902A              ; Existe colisión con este disparo???
 751+ 902A
 752+ 902A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 753+ 902B 7E               ld a,(hl)
 754+ 902C 2B               dec hl
 755+ 902D E6 01            and 1
 756+ 902F 28 1D            jr z,9F
 757+ 9031
 758+ 9031              ;   En este punto:
 759+ 9031              ;
 760+ 9031              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 761+ 9031              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 762+ 9031              ;   _con la entidad).
 763+ 9031              ;
 764+ 9031              ;   Disparo_2A defw 0                                ; Control.
 765+ 9031              ;    defw 0                                          ; Puntero objeto.
 766+ 9031              ;    defw 0                                          ; Puntero de impresión.
 767+ 9031              ;    defw 0                                          ; Rutina de impresión.
 768+ 9031
 769+ 9031 E5               push hl
 770+ 9032
 771+ 9032 06 04            ld b,4
 772+ 9034 23           19 inc hl
 773+ 9035 10 FD            djnz 19B
 774+ 9037
 775+ 9037 CD 07 8C         call Extrae_address
 776+ 903A CD 5C 9C         call Genera_coordenadas_disparo
 777+ 903D
 778+ 903D              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 779+ 903D
 780+ 903D 21 0F 89         ld hl,Coordenadas_disparo_certero
 781+ 9040 72               ld (hl),d
 782+ 9041 23               inc hl
 783+ 9042 73               ld (hl),e
 784+ 9043
 785+ 9043              ; Elimino el disparo de la base de datos.
 786+ 9043
 787+ 9043 E1               pop hl
 788+ 9044 CD 6A 91         call Elimina_disparo_de_base_de_datos
 789+ 9047 21 0C 89         ld hl,Impacto2
 790+ 904A CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 791+ 904C
 792+ 904C 18 06            jr 11F
 793+ 904E
 794+ 904E CD 14 91     9 call Mueve_disparo
 795+ 9051 CD EB 90         call foto_disparo_a_borrar
 796+ 9054
 797+ 9054 C1           11 pop bc
 798+ 9055 18 04            jr 7F
 799+ 9057
 800+ 9057              ; ----- ----- ----- ----- ----- -----
 801+ 9057
 802+ 9057 ED 42        1 sbc hl,bc
 803+ 9059 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 804+ 905B
 805+ 905B 2A 0A 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 806+ 905E 23               inc hl
 807+ 905F 23               inc hl
 808+ 9060 22 0A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 809+ 9063 18 BA            jr 2B
 810+ 9065
 811+ 9065 CD 8C 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 812+ 9068              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 813+ 9068
 814+ 9068              ; Gestiona DISPAROS DE ENTIDADES.
 815+ 9068
 816+ 9068 01 6A 85         ld bc,Disparo_11
 817+ 906B 2A 08 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 818+ 906E
 819+ 906E CD 07 8C     5 call Extrae_address
 820+ 9071 7E               ld a,(hl)
 821+ 9072 A7               and a
 822+ 9073 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 823+ 9075
 824+ 9075              ; ----- ----- ----- ----- ----- -----
 825+ 9075
 826+ 9075 C5               push bc
 827+ 9076 CD EB 90         call foto_disparo_a_borrar
 828+ 9079
 829+ 9079              ; Existe colisión con este disparo???
 830+ 9079
 831+ 9079 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 832+ 907A 7E               ld a,(hl)
 833+ 907B 2B               dec hl
 834+ 907C E6 01            and 1
 835+ 907E 28 4D            jr z,10F
 836+ 9080
 837+ 9080              ;! La colisión se produce con Amadeus???
 838+ 9080              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 839+ 9080
 840+ 9080 E5               push hl
 841+ 9081
 842+ 9081 06 04            ld b,4
 843+ 9083 23           16 inc hl
 844+ 9084 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 845+ 9086
 846+ 9086 CD 07 8C         call Extrae_address
 847+ 9089 CD 5C 9C         call Genera_coordenadas_disparo
 848+ 908C
 849+ 908C 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 850+ 908D FE 16            cp $16
 851+ 908F 38 2A            jr c,15F
 852+ 9091
 853+ 9091
 854+ 9091              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 855+ 9091
 856+ 9091 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 857+ 9092
 858+ 9092              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 859+ 9092
 860+ 9092
 861+ 9092 2A 17 89         ld hl,(Puntero_de_impresion_Amadeus)
 862+ 9095
 863+ 9095              ; Coordenada X de Amadeus en D.
 864+ 9095
 865+ 9095 7D               ld a,l
 866+ 9096 E6 1F            and $1F
 867+ 9098 57               ld d,a
 868+ 9099
 869+ 9099 21 86 85         ld hl,Amadeus_db+8
 870+ 909C 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 871+ 909D
 872+ 909D 21 11 89         ld hl,Coordenadas_X_Amadeus
 873+ 90A0 CD 75 91         call Guarda_coordenadas_X
 874+ 90A3
 875+ 90A3 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 876+ 90A4
 877+ 90A4              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 878+ 90A4
 879+ 90A4 06 02            ld b,2
 880+ 90A6 C5           20 push bc
 881+ 90A7
 882+ 90A7 06 03            ld b,3
 883+ 90A9 21 11 89         ld hl,Coordenadas_X_Amadeus
 884+ 90AC 7E           18 ld a,(hl)
 885+ 90AD BA               cp d
 886+ 90AE 20 04            jr nz,17F
 887+ 90B0
 888+ 90B0              ;! Colisión Amadeus !!!!!!!!!!
 889+ 90B0
 890+ 90B0 C1               pop bc
 891+ 90B1 E1               pop hl
 892+ 90B2 18 0D            jr 14F
 893+ 90B4
 894+ 90B4 23           17 inc hl
 895+ 90B5 10 F5            djnz 18B
 896+ 90B7
 897+ 90B7 14               inc d                       ; 2ª Coordenada_X del disparo.
 898+ 90B8
 899+ 90B8 C1               pop bc
 900+ 90B9 10 EB            djnz 20B
 901+ 90BB
 902+ 90BB
 903+ 90BB              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 904+ 90BB              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 905+ 90BB
 906+ 90BB E1           15 pop hl
 907+ 90BC 23               inc hl
 908+ 90BD 35               dec (hl)
 909+ 90BE 2B               dec hl
 910+ 90BF 18 0C            jr 10F
 911+ 90C1
 912+ 90C1              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 913+ 90C1              ; _ almacén de coordenadas_X de Amadeus.
 914+ 90C1
 915+ 90C1 E5           14 push hl
 916+ 90C2 CD 6A 91         call Elimina_disparo_de_base_de_datos
 917+ 90C5 21 0C 89         ld hl,Impacto2
 918+ 90C8 CB CE            set 1,(hl)
 919+ 90CA E1               pop hl
 920+ 90CB 18 06            jr 12F
 921+ 90CD
 922+ 90CD              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 923+ 90CD
 924+ 90CD CD 14 91     10 call Mueve_disparo
 925+ 90D0 CD EB 90         call foto_disparo_a_borrar
 926+ 90D3 C1           12 pop bc
 927+ 90D4
 928+ 90D4 18 04            jr 8F
 929+ 90D6
 930+ 90D6              ; ----- ----- ----- ----- ----- -----
 931+ 90D6
 932+ 90D6 ED 42        4 sbc hl,bc
 933+ 90D8 28 0A            jr z,6F
 934+ 90DA
 935+ 90DA 2A 08 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 936+ 90DD 23               inc hl
 937+ 90DE 23               inc hl
 938+ 90DF 22 08 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 939+ 90E2 18 8A            jr 5B
 940+ 90E4
 941+ 90E4 CD 85 8B     6 call Inicia_Puntero_Disparo_Entidades
 942+ 90E7 CD B1 91         call Limpia_Coordenadas_X
 943+ 90EA C9               ret
 944+ 90EB
 945+ 90EB              ; ------------------------------------------------------------------
 946+ 90EB
 947+ 90EB              foto_disparo_a_borrar
 948+ 90EB
 949+ 90EB 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 950+ 90EC A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 951+ 90ED C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 952+ 90EE
 953+ 90EE E5               push hl
 954+ 90EF 23               inc hl
 955+ 90F0 23               inc hl
 956+ 90F1 ED 73 F8 88      ld (Stack),sp
 957+ 90F5 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 958+ 90F6 FD E1            pop iy
 959+ 90F8 DD E1            pop ix
 960+ 90FA E1               pop hl
 961+ 90FB ED 7B F8 88      ld sp,(Stack)
 962+ 90FF 3A E7 88         ld a,(Ctrl_1)
 963+ 9102 CB C7            set 0,a
 964+ 9104 32 E7 88         ld (Ctrl_1),a
 965+ 9107 CD A0 7F         call Guarda_foto_registros
 966+ 910A 3A E7 88         ld a,(Ctrl_1)
 967+ 910D CB 87            res 0,a
 968+ 910F 32 E7 88         ld (Ctrl_1),a
 969+ 9112 E1               pop hl
 970+ 9113 C9               ret
 971+ 9114
 972+ 9114              ;---------------------------------------------------
 973+ 9114              ;
 974+ 9114              ;   18/07/23
 975+ 9114              ;
 976+ 9114
 977+ 9114              Mueve_disparo
 978+ 9114
 979+ 9114              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 980+ 9114              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 981+ 9114              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 982+ 9114
 983+ 9114 E5               push hl
 984+ 9115
 985+ 9115 7E               ld a,(hl)
 986+ 9116
 987+ 9116 06 04            ld b,4
 988+ 9118 23           1 inc hl
 989+ 9119 10 FD            djnz 1B
 990+ 911B
 991+ 911B              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 992+ 911B
 993+ 911B CD 07 8C         call Extrae_address
 994+ 911E
 995+ 911E E6 01            and 1
 996+ 9120 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 997+ 9122
 998+ 9122              ; Disparo hacia arriba, (Amadeus).
 999+ 9122
1000+ 9122              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1001+ 9122              ; _ de la dificultad.
1002+ 9122
1003+ 9122 CD A2 95         call PreviousScan
1004+ 9125 CD A2 95         call PreviousScan
1005+ 9128 CD A2 95         call PreviousScan
1006+ 912B CD A2 95         call PreviousScan
1007+ 912E
1008+ 912E              ; Detecta si el disparo de Amadeus sale de pantalla:
1009+ 912E
1010+ 912E 7C               ld a,h
1011+ 912F FE 40            cp $40
1012+ 9131 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1013+ 9133
1014+ 9133              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1015+ 9133
1016+ 9133 EB               ex de,hl
1017+ 9134 06 04            ld b,4
1018+ 9136 2B           6 dec hl
1019+ 9137 10 FD            djnz 6B
1020+ 9139
1021+ 9139 CD 6A 91         call Elimina_disparo_de_base_de_datos
1022+ 913C E1               pop hl
1023+ 913D 18 10            jr 7F
1024+ 913F
1025+ 913F              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1026+ 913F              ; HL contiene el puntero de impresión del disparo.
1027+ 913F              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1028+ 913F
1029+ 913F D5           3 push de
1030+ 9140 C5               push bc
1031+ 9141
1032+ 9141 CD 09 8F         call Comprueba_Colision
1033+ 9144
1034+ 9144              ; B="$80", no hay colisión. B="$81", existe colisión.
1035+ 9144
1036+ 9144 78               ld a,b
1037+ 9145
1038+ 9145 C1               pop bc
1039+ 9146 D1               pop de
1040+ 9147
1041+ 9147 EB               ex de,hl
1042+ 9148
1043+ 9148 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1044+ 9149 23               inc hl                                      ; _ movimiento.
1045+ 914A 72               ld (hl),d
1046+ 914B
1047+ 914B E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1048+ 914C
1049+ 914C 23               inc hl                                      ; _ en curso.
1050+ 914D 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1051+ 914E 2B               dec hl
1052+ 914F
1053+ 914F C9           7 ret
1054+ 9150
1055+ 9150              ; Disparo hacia abajo, (Entidad).
1056+ 9150
1057+ 9150 3A 19 89     2 ld a,(Velocidad_disparo_entidades)
1058+ 9153 47               ld b,a
1059+ 9154
1060+ 9154 CD 93 95     4 call NextScan
1061+ 9157 10 FB            djnz 4B
1062+ 9159
1063+ 9159              ; Detecta si el disparo de la entidad sale de la pantalla.
1064+ 9159
1065+ 9159 7C               ld a,h
1066+ 915A FE 58            cp $58
1067+ 915C 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1068+ 915E
1069+ 915E EB               ex de,hl
1070+ 915F 06 04            ld b,4
1071+ 9161 2B           5 dec hl
1072+ 9162 10 FD            djnz 5B
1073+ 9164
1074+ 9164 CD 6A 91         call Elimina_disparo_de_base_de_datos
1075+ 9167 E1               pop hl
1076+ 9168 18 E5            jr 7B
1077+ 916A
1078+ 916A              ; HL apunta al primer byte de la base de datos del disparo.
1079+ 916A
1080+ 916A 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1081+ 916D AF               xor a
1082+ 916E 77               ld (hl),a
1083+ 916F 54               ld d,h
1084+ 9170 5D               ld e,l
1085+ 9171 13               inc de
1086+ 9172 ED B0            ldir
1087+ 9174 C9               ret
1088+ 9175
1089+ 9175              ; -----------------------------------------------------------------
1090+ 9175              ;
1091+ 9175              ;   19/7/23
1092+ 9175              ;
1093+ 9175              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1094+ 9175              ;
1095+ 9175              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1096+ 9175              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1097+ 9175              ;
1098+ 9175              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1099+ 9175              ;
1100+ 9175              ;   INPUTS:
1101+ 9175              ;
1102+ 9175              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1103+ 9175              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1104+ 9175
1105+ 9175              ;   MODIFICA: A, HL, BC y DE.
1106+ 9175
1107+ 9175              Guarda_coordenadas_X
1108+ 9175
1109+ 9175 7B               ld a,e
1110+ 9176 A7               and a
1111+ 9177 20 04            jr nz,1F
1112+ 9179
1113+ 9179 06 02            ld b,2
1114+ 917B 18 02            jr 2F
1115+ 917D
1116+ 917D 06 03        1 ld b,3
1117+ 917F 72           2 ld (hl),d
1118+ 9180 23               inc hl
1119+ 9181 14               inc d
1120+ 9182 10 FB            djnz 2B
1121+ 9184
1122+ 9184 C9               ret
1123+ 9185
1124+ 9185              ; -----------------------------------------------------------------
1125+ 9185              ;
1126+ 9185              ;   12/04/23
1127+ 9185              ;
1128+ 9185
1129+ 9185 3A 0C 89     Selector_de_impactos ld a,(Impacto2)
1130+ 9188 A7               and a
1131+ 9189 C8               ret z
1132+ 918A
1133+ 918A FE 04            cp 4
1134+ 918C 20 09            jr nz,1F
1135+ 918E
1136+ 918E
1137+ 918E              ; La colisión se produce por contacto entre Amadeus y una entidad.
1138+ 918E
1139+ 918E CD AA 8F         call Detecta_colision_nave_entidad
1140+ 9191
1141+ 9191 21 0C 89         ld hl,Impacto2
1142+ 9194 CB 5E            bit 3,(hl)
1143+ 9196 C0               ret nz                                               ; Existe colisión, RET.
1144+ 9197
1145+ 9197              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1146+ 9197              ; Primero analizamos si algún disparo impacta en Amadeus.
1147+ 9197
1148+ 9197 21 0C 89     1 ld hl,Impacto2
1149+ 919A CB 4E            bit 1,(hl)
1150+ 919C 28 07            jr z,2F
1151+ 919E
1152+ 919E 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1153+ 91A1 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1154+ 91A3 18 0B            jr 3F
1155+ 91A5
1156+ 91A5 21 0C 89     2 ld hl,Impacto2
1157+ 91A8 CB 46            bit 0,(hl)
1158+ 91AA C8               ret z
1159+ 91AB
1160+ 91AB              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1161+ 91AB
1162+ 91AB 21 E7 88         ld hl,Ctrl_1
1163+ 91AE CB D6            set 2,(hl)
1164+ 91B0
1165+ 91B0 C9           3 ret
1166+ 91B1
1167+ 91B1              ; -----------------------------------------------------------------
1168+ 91B1              ;
1169+ 91B1              ;   19/7/23
1170+ 91B1              ;
1171+ 91B1              ;   Limpia las coordenadas_x de Amadeus y entidad.
1172+ 91B1
1173+ 91B1 AF           Limpia_Coordenadas_X xor a
1174+ 91B2 06 06            ld b,6
1175+ 91B4 21 11 89         ld hl,Coordenadas_X_Amadeus
1176+ 91B7 77           1 ld (hl),a
1177+ 91B8 23               inc hl
1178+ 91B9 10 FC            djnz 1B
1179+ 91BB C9               ret
1180+ 91BC
1181+ 91BC              ; -----------------------------------------------------------------
1182+ 91BC              ;
1183+ 91BC              ;   25/04/23
1184+ 91BC              ;
1185+ 91BC
1186+ 91BC              Determina_resultado_comparativa
1187+ 91BC
1188+ 91BC              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1189+ 91BC              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1190+ 91BC              ;
1191+ 91BC              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1192+ 91BC              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1193+ 91BC              ;
1194+ 91BC              ;   SBC HL,DE
1195+ 91BC
1196+ 91BC              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1197+ 91BC              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1198+ 91BC
1199+ 91BC              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1200+ 91BC              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1201+ 91BC
1202+ 91BC
1203+ 91BC 3A BE 88         ld a,(Cuad_objeto)
1204+ 91BF FE 02            cp 2
1205+ 91C1 28 26            jr z,2F
1206+ 91C3 38 24            jr c,2F
1207+ 91C5
1208+ 91C5              ; Cuadrantes 3º y 4º
1209+ 91C5
1210+ 91C5 E6 01            and 1
1211+ 91C7 28 10            jr z,4F
1212+ 91C9
1213+ 91C9              ; Cuadrante 3º
1214+ 91C9
1215+ 91C9 7C               ld a,h
1216+ 91CA 06 00            ld b,0
1217+ 91CC
1218+ 91CC CD 57 92         call Compara_cositas_H3
1219+ 91CF
1220+ 91CF 04               inc b
1221+ 91D0 05               dec b
1222+ 91D1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1223+ 91D2
1224+ 91D2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1225+ 91D3 06 00            ld b,0
1226+ 91D5
1227+ 91D5 CD 69 92         call Compara_cositas_L3
1228+ 91D8 C9               ret
1229+ 91D9
1230+ 91D9              ; Cuadrante 4º
1231+ 91D9
1232+ 91D9 7C           4 ld a,h
1233+ 91DA 06 00            ld b,0
1234+ 91DC
1235+ 91DC CD 7B 92         call Compara_cositas_H4
1236+ 91DF
1237+ 91DF 04               inc b
1238+ 91E0 05               dec b
1239+ 91E1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1240+ 91E2
1241+ 91E2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1242+ 91E3 06 00            ld b,0
1243+ 91E5
1244+ 91E5 CD 91 92         call Compara_cositas_L4
1245+ 91E8 C9               ret
1246+ 91E9
1247+ 91E9              ; Cuadrantes 1º y 2º.
1248+ 91E9
1249+ 91E9 28 10        2 jr z,3F
1250+ 91EB
1251+ 91EB              ; 1er Cuadrante
1252+ 91EB
1253+ 91EB 7C               ld a,h
1254+ 91EC 06 00            ld b,0
1255+ 91EE
1256+ 91EE CD 2F 92         call Compara_cositas_H1
1257+ 91F1
1258+ 91F1 04               inc b
1259+ 91F2 05               dec b
1260+ 91F3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1261+ 91F4
1262+ 91F4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1263+ 91F5 06 00            ld b,0
1264+ 91F7
1265+ 91F7 CD 45 92         call Compara_cositas_L1
1266+ 91FA C9               ret
1267+ 91FB
1268+ 91FB
1269+ 91FB              ; 2º Cuadrante
1270+ 91FB
1271+ 91FB 7C           3 ld a,h
1272+ 91FC 06 00            ld b,0
1273+ 91FE
1274+ 91FE CD 0B 92         call Compara_cositas_H2
1275+ 9201
1276+ 9201 04               inc b
1277+ 9202 05               dec b
1278+ 9203 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1279+ 9204
1280+ 9204 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1281+ 9205 06 00            ld b,0
1282+ 9207
1283+ 9207 CD 1D 92         call Compara_cositas_L2
1284+ 920A C9               ret
1285+ 920B
1286+ 920B A7           Compara_cositas_H2 and a
1287+ 920C 28 0D            jr z,1F
1288+ 920E              ;    cp $fd
1289+ 920E              ;    jr z,1F
1290+ 920E              ;    cp $fe
1291+ 920E              ;    jr z,1F
1292+ 920E FE FF            cp $ff
1293+ 9210 28 09            jr z,1F
1294+ 9212 FE 01            cp $01
1295+ 9214 28 05            jr z,1F
1296+ 9216 FE 02            cp $02
1297+ 9218 28 01            jr z,1F
1298+ 921A C0               ret nz
1299+ 921B 04           1 inc b
1300+ 921C C9               ret
1301+ 921D
1302+ 921D A7           Compara_cositas_L2 and a
1303+ 921E 28 0D            jr z,1F
1304+ 9220              ;    cp $fd
1305+ 9220              ;    jr z,1F
1306+ 9220 FE FE            cp $fe
1307+ 9222 28 09            jr z,1F
1308+ 9224 FE FF            cp $ff
1309+ 9226 28 05            jr z,1F
1310+ 9228 FE 01            cp $01
1311+ 922A 28 01            jr z,1F
1312+ 922C              ;    cp $02
1313+ 922C              ;    jr z,1F
1314+ 922C C0               ret nz
1315+ 922D 04           1 inc b
1316+ 922E C9               ret
1317+ 922F
1318+ 922F A7           Compara_cositas_H1 and a
1319+ 9230 28 11            jr z,1F
1320+ 9232              ;    cp $fd
1321+ 9232              ;    jr z,1F
1322+ 9232              ;    cp $fe
1323+ 9232              ;    jr z,1F
1324+ 9232 FE FF            cp $ff
1325+ 9234 28 0D            jr z,1F
1326+ 9236 FE 01            cp $01
1327+ 9238 28 09            jr z,1F
1328+ 923A FE 02            cp $02
1329+ 923C 28 05            jr z,1F
1330+ 923E FE 03            cp $03
1331+ 9240 28 01            jr z,1F
1332+ 9242 C0               ret nz
1333+ 9243 04           1 inc b
1334+ 9244 C9               ret
1335+ 9245
1336+ 9245 A7           Compara_cositas_L1 and a
1337+ 9246 28 0D            jr z,1F
1338+ 9248              ;    cp $fd
1339+ 9248              ;    jr z,1F
1340+ 9248              ;    cp $fe
1341+ 9248              ;    jr z,1F
1342+ 9248              ;    cp $ff
1343+ 9248              ;    jr z,1F
1344+ 9248 FE 01            cp $01
1345+ 924A 28 09            jr z,1F
1346+ 924C FE 02            cp $02
1347+ 924E 28 05            jr z,1F
1348+ 9250 FE 03            cp $03
1349+ 9252 28 01            jr z,1F
1350+ 9254 C0               ret nz
1351+ 9255 04           1 inc b
1352+ 9256 C9               ret
1353+ 9257
1354+ 9257 A7           Compara_cositas_H3 and a
1355+ 9258 28 0D            jr z,1F
1356+ 925A              ;    cp $fd
1357+ 925A              ;    jr z,1F
1358+ 925A FE FE            cp $fe
1359+ 925C 28 09            jr z,1F
1360+ 925E FE FF            cp $ff
1361+ 9260 28 05            jr z,1F
1362+ 9262 FE 01            cp $01
1363+ 9264 28 01            jr z,1F
1364+ 9266              ;    cp $02
1365+ 9266              ;    jr z,1F
1366+ 9266              ;    cp $03
1367+ 9266              ;    jr z,1F
1368+ 9266 C0               ret nz
1369+ 9267 04           1 inc b
1370+ 9268 C9               ret
1371+ 9269
1372+ 9269 A7           Compara_cositas_L3 and a
1373+ 926A 28 0D            jr z,1F
1374+ 926C              ;    cp $fd
1375+ 926C              ;    jr z,1F
1376+ 926C              ;    cp $fe
1377+ 926C              ;    jr z,1F
1378+ 926C              ;    cp $ff
1379+ 926C              ;    jr z,1F
1380+ 926C FE 01            cp $01
1381+ 926E 28 09            jr z,1F
1382+ 9270 FE 02            cp $02
1383+ 9272 28 05            jr z,1F
1384+ 9274 FE 03            cp $03
1385+ 9276 28 01            jr z,1F
1386+ 9278 C0               ret nz
1387+ 9279 04           1 inc b
1388+ 927A C9               ret
1389+ 927B
1390+ 927B A7           Compara_cositas_H4 and a
1391+ 927C 28 11            jr z,1F
1392+ 927E FE FD            cp $fd
1393+ 9280 28 0D            jr z,1F
1394+ 9282 FE FE            cp $fe
1395+ 9284 28 09            jr z,1F
1396+ 9286 FE FF            cp $ff
1397+ 9288 28 05            jr z,1F
1398+ 928A FE 01            cp $01
1399+ 928C 28 01            jr z,1F
1400+ 928E              ;    cp $02
1401+ 928E              ;    jr z,1F
1402+ 928E              ;    cp $03
1403+ 928E              ;    jr z,1F
1404+ 928E C0               ret nz
1405+ 928F 04           1 inc b
1406+ 9290 C9               ret
1407+ 9291
1408+ 9291 A7           Compara_cositas_L4 and a
1409+ 9292 28 0D            jr z,1F
1410+ 9294              ;    cp $fd
1411+ 9294              ;    jr z,1F
1412+ 9294 FE FE            cp $fe
1413+ 9296 28 09            jr z,1F
1414+ 9298 FE FF            cp $ff
1415+ 929A 28 05            jr z,1F
1416+ 929C FE 01            cp $01
1417+ 929E 28 01            jr z,1F
1418+ 92A0              ;    cp $02
1419+ 92A0              ;    jr z,1F
1420+ 92A0              ;    cp $03
1421+ 92A0              ;    jr z,1F
1422+ 92A0 C0               ret nz
1423+ 92A1 04           1 inc b
1424+ 92A2 C9               ret
# file closed: Disparo.asm
1510  92A3              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92A3              ; ******************************************************************************************************************************************************************************************
   2+ 92A3              ;
   3+ 92A3              ; 26/06/23
   4+ 92A3              ;
   5+ 92A3              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92A3
   7+ 92A3 CD 87 95     Draw call Prepara_draw
   8+ 92A6 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 92A7 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 92A8 28 05        	jr z,2F
  11+ 92AA
  12+ 92AA 3A BE 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 92AD 18 0C        	jr 1F
  14+ 92AF
  15+ 92AF 2A BC 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 92B2 22 AC 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 92B5 CD 44 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 92B8              ;													; _la esquina superior izquierda de la pantalla.
  19+ 92B8 CD E7 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 92BB
  21+ 92BB 3A D4 88     1 ld a,(Ctrl_0)
  22+ 92BE CB 6F        	bit 5,a
  23+ 92C0 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 92C2
  25+ 92C2 CD DA 92     	call Comprueba_limite_horizontal
  26+ 92C5 CD 6A 93     	call Comprueba_limite_vertical
  27+ 92C8
  28+ 92C8              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 92C8              ; -----------------------
  30+ 92C8              ; -----------------------
  31+ 92C8              ; -----------------------
  32+ 92C8
  33+ 92C8 CD B7 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 92CB CD EE 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 92CE CD 4D 95     	call Define_rutina_de_impresion
  36+ 92D1
  37+ 92D1 3A D4 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 92D4 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 92D6 32 D4 88     	ld (Ctrl_0),a
  40+ 92D9
  41+ 92D9 C9           	ret
  42+ 92DA
  43+ 92DA              ; *******************************************************************************************************************************************************************************************
  44+ 92DA              ;	21/01/23
  45+ 92DA              ;
  46+ 92DA              ; 	Comprueba_limite_horizontal.
  47+ 92DA              ;
  48+ 92DA              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 92DA              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 92DA              ;
  51+ 92DA              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 92DA              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 92DA              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 92DA              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 92DA
  56+ 92DA
  57+ 92DA
  58+ 92DA 3A D4 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 92DD CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 92DF 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 92E1 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 92E3 32 D4 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 92E6 18 09            jr 6F
  64+ 92E8 CB 5F        1 bit 3,a
  65+ 92EA 28 0A            jr z,2F
  66+ 92EC E6 F7            and $f7
  67+ 92EE 32 D4 88         ld (Ctrl_0),a
  68+ 92F1 CD 44 94     6 call Inicializacion
  69+ 92F4 18 5B            jr 5F
  70+ 92F6 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 92F7
  72+ 92F7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 92F7              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 92F7
  75+ 92F7 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 92F8 2A E2 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 92FB CD A6 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 92FE 67           	ld h,a
  79+ 92FF EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9300 CD A6 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9303 67           	ld h,a
  82+ 9304 A7           	and a
  83+ 9305 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9307 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9308 3A BE 88     	ld a,(Cuad_objeto)
  86+ 930B FE 02        	cp 2
  87+ 930D 38 1E        	jr c,3F
  88+ 930F 28 1C        	jr z,3F
  89+ 9311 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9312 28 23            jr z,7F
  91+ 9314 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9316 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9318 E1           	pop hl
  94+ 9319
  95+ 9319              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9319              ; _para indicar con E="2" en caso necesario.
  97+ 9319
  98+ 9319 E5               push hl
  99+ 931A C5               push bc
 100+ 931B CD A6 98     	call calcula_tercio
 101+ 931E FE 01        	cp 1
 102+ 9320 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9322 CD 52 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9325 28 26            jr z,9F
 105+ 9327 38 24            jr c,9F
 106+ 9329 1E 00        11 ld e,0
 107+ 932B 18 22            jr 8F
 108+ 932D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 932E 28 07        	jr z, 7F
 110+ 9330 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9332 1E 00         	ld e,0
 112+ 9334 E1           	pop hl
 113+ 9335 18 04        	jr 4F
 114+ 9337 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9339 18 15            jr 10F
 116+ 933B
 117+ 933B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 933B              ; _para indicar con E="2" en caso necesario.
 119+ 933B
 120+ 933B E5           4 push hl
 121+ 933C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 933D CD A6 98     	call calcula_tercio
 123+ 9340 FE 01        	cp 1
 124+ 9342 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9344 CD 52 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9347 28 04            jr z,9F
 127+ 9349 30 02            jr nc,9F
 128+ 934B 18 02        	jr 8F
 129+ 934D 1E 02        9 ld e,2
 130+ 934F C1           8 pop bc
 131+ 9350 E1           10 pop hl
 132+ 9351 C9           5 ret
 133+ 9352
 134+ 9352              ; --------------------
 135+ 9352              ;
 136+ 9352              ; 25/08/22
 137+ 9352
 138+ 9352 CD A6 98     Comprueba_centro call calcula_tercio
 139+ 9355 67               ld h,a
 140+ 9356 08           	ex af,af
 141+ 9357 FE 02        	cp 2
 142+ 9359 38 07        	jr c,1F
 143+ 935B 28 05        	jr z,1F
 144+ 935D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9360 18 03        	jr 2F
 146+ 9362 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9365 08           2 ex af,af
 148+ 9366 A7               and a
 149+ 9367 ED 42            sbc hl,bc
 150+ 9369 C9               ret
 151+ 936A
 152+ 936A              ; *********************************************************************************************************************************************************************************************
 153+ 936A              ;
 154+ 936A              ;   16/8/22
 155+ 936A              ;
 156+ 936A              ;	Comprueba_limite_vertical
 157+ 936A              ;
 158+ 936A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 936A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 936A              ;
 161+ 936A
 162+ 936A 2A AC 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 936D 7D           	ld a,l
 164+ 936E E6 1F        	and $1F
 165+ 9370 57           	ld d,a
 166+ 9371 3A E4 88     	ld a,(Limite_vertical)
 167+ 9374 BA           	cp d 											; Límite - Posición.
 168+ 9375 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9376 3A BE 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9379 CB 47        	bit 0,a
 171+ 937B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 937D
 173+ 937D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 937D
 175+ 937D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 937E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9380
 178+ 9380              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9380              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9380
 181+ 9380 3A B0 88         ld a,(Coordenada_X)
 182+ 9383 16 0F            ld d,Centro_izquierda
 183+ 9385 A7               and a
 184+ 9386 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9387 28 1E            jr z,3F
 186+ 9389 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 938B              ;                                                    ; _salimos sin modificar nada.
 188+ 938B 18 0E            jr 2F
 189+ 938D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 938E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9390
 192+ 9390              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9390              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9390
 195+ 9390 3A B0 88         ld a,(Coordenada_X)
 196+ 9393 16 10            ld d,Centro_derecha
 197+ 9395 A7               and a
 198+ 9396 92               sub d
 199+ 9397 28 0E            jr z,3F
 200+ 9399 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 939B              ;                                                    ; _salimos sin modificar nada.
 202+ 939B CB 43        2 bit 0,e
 203+ 939D 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 939F C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 93A0 CD 34 94         call Modificaccionne
 206+ 93A3 C1           	pop bc
 207+ 93A4 CD 44 94         call Inicializacion
 208+ 93A7 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 93A8
 210+ 93A8              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 93A8
 212+ 93A8 C5           4 push bc
 213+ 93A9 01 AB 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 93AC 0A           	ld a,(bc)
 215+ 93AD 3D           	dec a
 216+ 93AE 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 93AF 7D           	ld a,l
 218+ 93B0 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 93B1 CB 47        	bit 0,a
 220+ 93B3 28 03        	jr z,5F
 221+ 93B5 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 93B6 18 2E        	jr 7F
 223+ 93B8
 224+ 93B8              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 93B8
 226+ 93B8 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 93B9 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 93BA 3A D4 88     	ld a,(Ctrl_0)
 229+ 93BD CB 4F        	bit 1,a
 230+ 93BF 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 93C1 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 93C2
 233+ 93C2              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 93C2
 235+ 93C2 1C               inc e
 236+ 93C3 1D               dec e
 237+ 93C4 20 07            jr nz,12F
 238+ 93C6 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 93C7 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 93C8 22 AC 88     	ld (Posicion_actual),hl
 241+ 93CB 18 44        13 jr 9F
 242+ 93CD CB 43        12 bit 0,e
 243+ 93CF 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 93D1              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 93D1 C1           	pop bc
 246+ 93D2 18 D3        	jr 3B
 247+ 93D4 80           14 add b
 248+ 93D5 6F               ld l,a
 249+ 93D6 22 AC 88     	ld (Posicion_actual),hl
 250+ 93D9 CD 34 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 93DC 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 93DE E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 93E0 32 D4 88         ld (Ctrl_0),a
 254+ 93E3 F1           	pop af
 255+ 93E4 18 2B        	jr 9F
 256+ 93E6
 257+ 93E6              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 93E6
 259+ 93E6 F5           7 push af
 260+ 93E7 3A D4 88     	ld a,(Ctrl_0)
 261+ 93EA CB 47        	bit 0,a
 262+ 93EC 20 1D        	jr nz,8F
 263+ 93EE F1           	pop af
 264+ 93EF
 265+ 93EF              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 93EF
 267+ 93EF 1C           	inc e
 268+ 93F0 1D               dec e
 269+ 93F1 20 07            jr nz,10F
 270+ 93F3 90           	sub b
 271+ 93F4 6F               ld l,a
 272+ 93F5 22 AC 88     	ld (Posicion_actual),hl
 273+ 93F8 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 93FA              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 93FA CB 43        10 bit 0,e
 276+ 93FC 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 93FE              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 93FE C1           	pop bc
 279+ 93FF 18 A6        	jr 3B
 280+ 9401 90           16 sub b
 281+ 9402 6F               ld l,a
 282+ 9403 22 AC 88     	ld (Posicion_actual),hl
 283+ 9406 CD 34 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9409 18 06            jr 9F
 285+ 940B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 940D 32 D4 88         ld (Ctrl_0),a
 287+ 9410 F1           	pop af
 288+ 9411 C1           9 pop bc
 289+ 9412 1E 00        	ld e,0
 290+ 9414 CD 44 94         call Inicializacion
 291+ 9417 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9418 08           	ex af,af
 293+ 9419 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 941A 18 8B            jr 3B
 295+ 941C
 296+ 941C              ; --------------------
 297+ 941C
 298+ 941C 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 941E CD A2 95     1 call PreviousScan
 300+ 9421 10 FB            djnz 1B
 301+ 9423 22 AC 88     	ld (Posicion_actual),hl
 302+ 9426 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9427 C9           	ret
 304+ 9428
 305+ 9428              ; --------------------
 306+ 9428
 307+ 9428 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 942A CD 93 95     1 call NextScan
 309+ 942D 10 FB            djnz 1B
 310+ 942F 22 AC 88     	ld (Posicion_actual),hl
 311+ 9432 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9433 C9           	ret
 313+ 9434
 314+ 9434              ; --------------------
 315+ 9434              ;
 316+ 9434              ;	22/01/23
 317+ 9434              ;
 318+ 9434              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9434              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9434              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9434
 322+ 9434
 323+ 9434              Modificaccionne
 324+ 9434
 325+ 9434 3A BE 88     	ld a,(Cuad_objeto)
 326+ 9437 FE 02        	cp 2
 327+ 9439 CC 1C 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 943C DC 1C 94         call c,Modifica_Pos_actual
 329+ 943F C8           	ret z
 330+ 9440 CD 28 94         call Modifica_Pos_actual2
 331+ 9443 C9               ret
 332+ 9444
 333+ 9444              ; *************************************************************************************************************************************************************************************************
 334+ 9444              ;
 335+ 9444              ;	13/8/22
 336+ 9444              ;
 337+ 9444              ;	Inicializacion
 338+ 9444              ;
 339+ 9444              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9444              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9444              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9444              ;
 343+ 9444              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9444              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9444              ;	_ desaparece/aparece.
 346+ 9444
 347+ 9444              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9444              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9444              ;
 350+ 9444              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9444              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9444              ; 		   [E] ="0"
 353+ 9444
 354+ 9444              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9444
 356+ 9444 CD A6 98     Inicializacion call calcula_tercio
 357+ 9447 28 36        	jr z,primit
 358+ 9449 E6 02        	and 2
 359+ 944B 20 07        	jr nz,segmit
 360+ 944D 7D           	ld a,l
 361+ 944E FE 7F        	cp $7f
 362+ 9450 38 2D        	jr c,primit
 363+ 9452 28 2B        	jr z,primit
 364+ 9454 CD B1 94     segmit call column
 365+ 9457 38 13        	jr c,tercuad
 366+ 9459 3E 04        cuarcuad ld a,4
 367+ 945B 32 BE 88     	ld (Cuad_objeto),a
 368+ 945E 21 20 48     	ld hl,$4820
 369+ 9461 22 E2 88     	ld (Limite_horizontal),hl
 370+ 9464 21 E4 88     	ld hl,Limite_vertical
 371+ 9467 36 0D        	ld (hl),$0d
 372+ 9469 08           	ex af,af
 373+ 946A 18 3C        	jr 1F
 374+ 946C              tercuad
 375+ 946C 3E 03        	ld a,3
 376+ 946E 32 BE 88     	ld (Cuad_objeto),a
 377+ 9471 21 20 48     	ld hl,$4820
 378+ 9474 22 E2 88     	ld (Limite_horizontal),hl
 379+ 9477 21 E4 88     	ld hl,Limite_vertical
 380+ 947A 36 12        	ld (hl),$12
 381+ 947C 08           	ex af,af
 382+ 947D 18 29        	jr 1F
 383+ 947F CD B1 94     primit call column
 384+ 9482 38 13        	jr c, primcuad
 385+ 9484              segcuad
 386+ 9484 3E 02        	ld a,2
 387+ 9486 32 BE 88     	ld (Cuad_objeto),a
 388+ 9489 21 C0 4F     	ld hl,$4fc0
 389+ 948C 22 E2 88     	ld (Limite_horizontal),hl
 390+ 948F 21 E4 88     	ld hl,Limite_vertical
 391+ 9492 36 0D        	ld (hl),$0d
 392+ 9494 08           	ex af,af
 393+ 9495 18 11        	jr 1F
 394+ 9497              primcuad
 395+ 9497 3E 01        	ld a,1
 396+ 9499 32 BE 88     	ld (Cuad_objeto),a
 397+ 949C 21 C0 4F     	ld hl,$4fc0
 398+ 949F 22 E2 88     	ld (Limite_horizontal),hl
 399+ 94A2 21 E4 88     	ld hl,Limite_vertical
 400+ 94A5 36 12        	ld (hl),$12
 401+ 94A7 08           	ex af,af
 402+ 94A8 CD 31 9C     1 call Genera_coordenadas
 403+ 94AB 21 D4 88     	ld hl,Ctrl_0
 404+ 94AE CB EE        	set 5,(hl)
 405+ 94B0 C9           	ret
 406+ 94B1
 407+ 94B1              ; ------------------------------------------------------------------------------------------------------------------
 408+ 94B1
 409+ 94B1              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 94B1              ;
 411+ 94B1              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 94B1
 413+ 94B1 7D           column ld a,l
 414+ 94B2 E6 1F        	and $1f
 415+ 94B4 FE 10         	cp $10
 416+ 94B6 C9            	ret
 417+ 94B7
 418+ 94B7              ; --------------------------------------------------------------------------------------------------------------------
 419+ 94B7              ;
 420+ 94B7              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 94B7              ;
 422+ 94B7              ; 14/12/22
 423+ 94B7              ;
 424+ 94B7              ;	Modifica: A y BC.
 425+ 94B7
 426+ 94B7 3A BE 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 94BA E6 01        	and 1
 428+ 94BC 28 17        	jr z,1F
 429+ 94BE
 430+ 94BE              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 94BE
 432+ 94BE 3A B0 88     	ld a,(Coordenada_X)
 433+ 94C1 47           	ld b,a
 434+ 94C2 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 94C3 79           	ld a,c
 436+ 94C4 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 94C5 38 08        	jr c,2F
 438+ 94C7 47           	ld b,a
 439+ 94C8 79           	ld a,c
 440+ 94C9 90           	sub b
 441+ 94CA 32 E1 88     	ld (Columnas),a
 442+ 94CD 18 1B        	jr 4F
 443+ 94CF 79           2 ld a,c
 444+ 94D0 32 E1 88     	ld (Columnas),a
 445+ 94D3 18 15        	jr 4F
 446+ 94D5
 447+ 94D5              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 94D5
 449+ 94D5 3A B0 88     1 ld a,(Coordenada_X)
 450+ 94D8 81           	add c
 451+ 94D9 3D           	dec a
 452+ 94DA D6 1F        	sub $1f
 453+ 94DC 38 08        	jr c,3F
 454+ 94DE 47           	ld b,a
 455+ 94DF 79           	ld a,c
 456+ 94E0 90           	sub b
 457+ 94E1 32 E1 88     	ld (Columnas),a
 458+ 94E4 18 04        	jr 4F
 459+ 94E6 79           3 ld a,c
 460+ 94E7 32 E1 88     	ld (Columnas),a
 461+ 94EA D9           4 exx
 462+ 94EB 4F           	ld c,a
 463+ 94EC D9           	exx
 464+ 94ED C9            ret
 465+ 94EE
 466+ 94EE              ; --------------------------------------------------------------------------------------------------------------------
 467+ 94EE              ;
 468+ 94EE              ;   19/7/23
 469+ 94EE              ;
 470+ 94EE              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 94EE              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 94EE              ;
 473+ 94EE              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 94EE              ;			HL e IY Contienen (Puntero_objeto).
 475+ 94EE              ;
 476+ 94EE              ;	DESTRUYE: HL,B Y A.
 477+ 94EE
 478+ 94EE 3A BE 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 94F1 FE 02        	cp 2
 480+ 94F3 38 18        	jr c,1F
 481+ 94F5 28 16        	jr z,1F
 482+ 94F7 E6 01        	and 1
 483+ 94F9 28 0D        	jr z,3F
 484+ 94FB
 485+ 94FB              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 94FB
 487+ 94FB CD 41 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 94FE
 489+ 94FE 7D           9 ld a,l
 490+ 94FF E6 1F        	and $1f
 491+ 9501 28 2A        	jr z,7F
 492+ 9503 2B           	dec hl
 493+ 9504 10 F8        	djnz 9B
 494+ 9506 18 25        	jr 7F
 495+ 9508
 496+ 9508              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9508
 498+ 9508 2A AC 88     3 ld hl,(Posicion_actual)
 499+ 950B 18 20        	jr 7F
 500+ 950D
 501+ 950D 28 14        1 jr z,2F
 502+ 950F
 503+ 950F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 950F
 505+ 950F CD 41 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9512
 507+ 9512 7D           4 ld a,l
 508+ 9513 E6 1F        	and $1f
 509+ 9515 28 03        	jr z,6F
 510+ 9517 2B           	dec hl
 511+ 9518 10 F8        	djnz 4B
 512+ 951A 06 0F        6 ld b,15
 513+ 951C CD A2 95     5 call PreviousScan
 514+ 951F 10 FB        	djnz 5B
 515+ 9521 18 0A        	jr 7F
 516+ 9523
 517+ 9523              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9523
 519+ 9523 CD 41 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9526 06 0F        	ld b,15
 521+ 9528 CD A2 95     8 call PreviousScan
 522+ 952B 10 FB        	djnz 8B
 523+ 952D
 524+ 952D E5           7 push hl
 525+ 952E DD E1        	pop ix
 526+ 9530
 527+ 9530 2A AE 88     	ld hl,(Puntero_objeto)
 528+ 9533 E5           	push hl
 529+ 9534 FD E1        	pop iy
 530+ 9536
 531+ 9536              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9536
 533+ 9536 3A D4 88     	ld a,(Ctrl_0)
 534+ 9539 CB 77        	bit 6,a
 535+ 953B C8           	ret z
 536+ 953C
 537+ 953C              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 953C              ; _ entidad / Amadeus´.
 539+ 953C
 540+ 953C DD 22 17 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9540
 542+ 9540 C9           	ret
 543+ 9541
 544+ 9541              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9541              ;
 546+ 9541              ;	2/1/23
 547+ 9541              ;
 548+ 9541              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9541              ;
 550+ 9541              ;	Tras esta rutina tenemos:
 551+ 9541              ;
 552+ 9541              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9541              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9541              ;
 555+ 9541              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9541
 557+ 9541 2A AC 88     Operandos ld hl,(Posicion_actual)
 558+ 9544 3A E1 88     	ld a,(Columnas)
 559+ 9547 3D           	dec a
 560+ 9548 20 01        	jr nz,1F
 561+ 954A 3C           	inc a
 562+ 954B 47           1 ld b,a
 563+ 954C C9           	ret
 564+ 954D
 565+ 954D              ; --------------------------------------------------------------------------------------------------------------------
 566+ 954D              ;
 567+ 954D              ;	3/1/23
 568+ 954D              ;
 569+ 954D              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 954D              ;
 571+ 954D              ;	Destruye: A,B,HL y DE.
 572+ 954D
 573+ 954D              Define_rutina_de_impresion
 574+ 954D
 575+ 954D 3A AB 88     	ld a,(Columns)
 576+ 9550 47           	ld b,a
 577+ 9551 3A E1 88     	ld a,(Columnas)
 578+ 9554 B8           	cp b
 579+ 9555 20 0D        	jr nz,2f
 580+ 9557
 581+ 9557              ;	La entidad se imprime entera.
 582+ 9557
 583+ 9557 21 76 96     	ld hl, Indice_entidades_completas
 584+ 955A E6 01        	and 1
 585+ 955C 28 02        	jr z,1F
 586+ 955E
 587+ 955E 23           	inc hl
 588+ 955F 23           	inc hl
 589+ 9560
 590+ 9560 CD 07 8C     1 call Extrae_address
 591+ 9563 C9           	ret		;	ret
 592+ 9564
 593+ 9564              ;	La entidad no se imprime entera en pantalla.
 594+ 9564
 595+ 9564 3A BE 88     2 ld a,(Cuad_objeto)
 596+ 9567 E6 01        	and 1
 597+ 9569 28 17        	jr z,3F
 598+ 956B
 599+ 956B              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 956B
 601+ 956B 21 7A 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 956E 3A AB 88     4 ld a,(Columns)
 603+ 9571 E6 01        	and 1
 604+ 9573 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9575
 606+ 9575 23           	inc hl
 607+ 9576 23           	inc hl
 608+ 9577
 609+ 9577 3A E1 88     	ld a,(Columnas)
 610+ 957A E6 01        	and 1
 611+ 957C 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 957E
 613+ 957E 23           	inc hl
 614+ 957F 23           	inc hl
 615+ 9580
 616+ 9580 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9582
 618+ 9582 21 80 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9585 18 E7        	jr 4B
 620+ 9587
 621+ 9587              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9587              ;
 623+ 9587              ;	Prepara_draw
 624+ 9587              ;
 625+ 9587              ;	Es una rutina de carga.
 626+ 9587              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9587              ;
 628+ 9587              ;	FUNCIONAMIENTO:
 629+ 9587              ;
 630+ 9587              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9587              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9587              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9587              ;
 634+ 9587              ;	DESTRUYE:
 635+ 9587              ;
 636+ 9587              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9587
 638+ 9587 21 AA 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 958A 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 958B 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 958C 4E           	ld c,(hl)
 642+ 958D 2A AC 88     	ld hl,(Posicion_actual)
 643+ 9590 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9592 C9           	ret
 645+ 9593
 646+ 9593              ;----------------------------------------------------------------------------------------------------------------
 647+ 9593              ;
 648+ 9593              ;	5/08/22
 649+ 9593              ;
 650+ 9593              ;   NextScan.
 651+ 9593              ;
 652+ 9593              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9593              ;
 654+ 9593              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9593              ;
 656+ 9593              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9593              ;
 658+ 9593              ;       DESTRUIDOS: AF y HL !!!
 659+ 9593              ;
 660+ 9593              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9593              ;
 662+ 9593
 663+ 9593 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9594 7C               ld a,h
 665+ 9595 E6 07            and 7
 666+ 9597 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9598
 668+ 9598 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9599 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 959B 6F               ld l,a
 671+ 959C D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 959D
 673+ 959D 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 959E D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 95A0 67               ld h,a
 676+ 95A1 C9               ret
 677+ 95A2
 678+ 95A2              ;----------------------------------------------------------------------------------------------------------------
 679+ 95A2              ;
 680+ 95A2              ;	5/08/22
 681+ 95A2              ;
 682+ 95A2              ;   PreviousScan.
 683+ 95A2              ;
 684+ 95A2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 95A2              ;
 686+ 95A2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 95A2              ;
 688+ 95A2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 95A2              ;
 690+ 95A2              ;       DESTRUIDOS: AF y HL !!!
 691+ 95A2              ;
 692+ 95A2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 95A2              ;
 694+ 95A2
 695+ 95A2 7C           PreviousScan ld a,h
 696+ 95A3 25               dec h               ; Dec H.
 697+ 95A4 E6 07            and 7
 698+ 95A6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 95A7
 700+ 95A7 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 95A8 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 95AA 6F               ld l,a
 703+ 95AB D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 95AC
 705+ 95AC 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 95AD C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 95AF 67               ld h,a
 708+ 95B0 C9               ret
 709+ 95B1
 710+ 95B1              ; -----------------------------------------------------------------------------------
 711+ 95B1              ;
 712+ 95B1              ;	31/7/23
 713+ 95B1              ;
 714+ 95B1              ;	Rutina principal de pintado de entidades.
 715+ 95B1              ;	Extrae la foto del frame, (entidades).
 716+ 95B1
 717+ 95B1              Extrae_foto_entidades
 718+ 95B1
 719+ 95B1 21 01 70     	ld hl,Album_de_fotos+1
 720+ 95B4 7E           	ld a,(hl)
 721+ 95B5 A7           	and a
 722+ 95B6 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 95B7
 724+ 95B7              ;	No hay datos, (entidades para pintar en este frame).
 725+ 95B7
 726+ 95B7 3A F3 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 95BA A7           	and a
 728+ 95BB C8           	ret z
 729+ 95BC
 730+ 95BC              ; -----------------------------------
 731+ 95BC
 732+ 95BC ED 73 F8 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 95C0 31 00 70     	ld sp,Album_de_fotos
 734+ 95C3
 735+ 95C3 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 95C5 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 95C6 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 95C7
 739+ 95C7 ED 73 FA 88  	ld (Stack_2),sp
 740+ 95CB ED 7B F8 88  	ld sp,(Stack)
 741+ 95CF
 742+ 95CF              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 95CF
 744+ 95CF 3E CD        	ld a,$cd
 745+ 95D1 32 D9 95     	ld (Imprime),a
 746+ 95D4 EB           	ex de,hl
 747+ 95D5 22 DA 95     	ld (Imprime+1),hl
 748+ 95D8 EB           	ex de,hl
 749+ 95D9
 750+ 95D9              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 95D9
 752+ 95D9 00 00 00     Imprime db 0,0,0
 753+ 95DC
 754+ 95DC ED 73 F8 88  	ld (Stack),sp
 755+ 95E0
 756+ 95E0 3A F3 88     	ld a,(Numero_de_malotes)
 757+ 95E3 3D           	dec a
 758+ 95E4 28 09        	jr z,1F
 759+ 95E6 32 F3 88      	ld (Numero_de_malotes),a
 760+ 95E9
 761+ 95E9 ED 7B FA 88  	ld sp,(Stack_2)
 762+ 95ED 18 D4        	jr 2B
 763+ 95EF
 764+ 95EF AF           1 xor a
 765+ 95F0 32 FA 88     	ld (Stack_2),a
 766+ 95F3
 767+ 95F3 C9           	ret
 768+ 95F4
 769+ 95F4              ; -----------------------------------------------------------------------------------
 770+ 95F4              ;
 771+ 95F4              ;	28/2/23
 772+ 95F4              ;
 773+ 95F4              ;	Pinta los disparos generados.
 774+ 95F4
 775+ 95F4              Extrae_foto_disparos
 776+ 95F4
 777+ 95F4 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 95F7 7E               ld a,(hl)
 779+ 95F8 A7               and a
 780+ 95F9 C8               ret z
 781+ 95FA
 782+ 95FA 3A 07 89     	ld a,(Numero_de_disparotes)
 783+ 95FD A7           	and a
 784+ 95FE C8           	ret z
 785+ 95FF ED 73 F8 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9603 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 9606
 788+ 9606 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9608 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9609 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 960A
 792+ 960A ED 73 FA 88  	ld (Stack_2),sp
 793+ 960E ED 7B F8 88  	ld sp,(Stack)
 794+ 9612
 795+ 9612              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 9612
 797+ 9612 3E CD        	ld a,$cd
 798+ 9614 32 1C 96     	ld (Imprime2),a
 799+ 9617 EB           	ex de,hl
 800+ 9618 22 1D 96     	ld (Imprime2+1),hl
 801+ 961B EB           	ex de,hl
 802+ 961C
 803+ 961C              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 961C
 805+ 961C 00 00 00     Imprime2 db 0,0,0
 806+ 961F
 807+ 961F 3A 07 89     	ld a,(Numero_de_disparotes)
 808+ 9622 3D           	dec a
 809+ 9623 28 09        	jr z,1F
 810+ 9625 32 07 89      	ld (Numero_de_disparotes),a
 811+ 9628
 812+ 9628 ED 7B FA 88  	ld sp,(Stack_2)
 813+ 962C 18 D8        	jr 2B
 814+ 962E
 815+ 962E AF           1 xor a
 816+ 962F 32 FA 88     	ld (Stack_2),a
 817+ 9632 C9           	ret
 818+ 9633
 819+ 9633              ; -----------------------------------------------------------------------------------
 820+ 9633              ;
 821+ 9633              ;	4/9/23
 822+ 9633              ;
 823+ 9633              ;	Rutina principal de pintado de Amadeus.
 824+ 9633              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 9633
 826+ 9633 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 9636 7E           	ld a,(hl)
 828+ 9637 A7           	and a
 829+ 9638 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 9639
 831+ 9639 3A F3 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 963C A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 963D C8           	ret z
 834+ 963E
 835+ 963E              ; -----------------------------------
 836+ 963E
 837+ 963E ED 73 F8 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9642 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 9645
 840+ 9645 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 9647 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 9648 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 9649
 844+ 9649 ED 73 FA 88  	ld (Stack_2),sp
 845+ 964D ED 7B F8 88  	ld sp,(Stack)
 846+ 9651
 847+ 9651              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9651
 849+ 9651 3E CD        	ld a,$cd
 850+ 9653 32 5B 96     	ld (Imprime_Amadeus),a
 851+ 9656 EB           	ex de,hl
 852+ 9657 22 5C 96     	ld (Imprime_Amadeus+1),hl
 853+ 965A EB           	ex de,hl
 854+ 965B
 855+ 965B              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 965B
 857+ 965B 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 965E
 859+ 965E ED 73 F8 88  	ld (Stack),sp
 860+ 9662
 861+ 9662 3A F3 88     	ld a,(Numero_de_malotes)
 862+ 9665 3D           	dec a
 863+ 9666 28 09        	jr z,1F
 864+ 9668 32 F3 88      	ld (Numero_de_malotes),a
 865+ 966B
 866+ 966B ED 7B FA 88  	ld sp,(Stack_2)
 867+ 966F 18 D4        	jr 2B
 868+ 9671
 869+ 9671 AF           1 xor a
 870+ 9672 32 FA 88     	ld (Stack_2),a
 871+ 9675
 872+ 9675 C9           	ret
# file closed: Draw_XOR.asm
1511  9676              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9676              ;   índices de Rutinas de impresión.
   2+ 9676
   3+ 9676 86 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9678 B3 96            defw Pinta_Amadeus_3x2
   5+ 967A
   6+ 967A 09 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 967C A9 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 967E 5D 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9680
  10+ 9680 33 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9682 37 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9684 EB 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9686
  14+ 9686
  15+ 9686              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9686              ;
  17+ 9686              ;   12/12/22
  18+ 9686              ;
  19+ 9686              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9686              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9686              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9686              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9686              ;
  24+ 9686              ;   Modifica: DE y HL.
  25+ 9686
  26+ 9686 ED 73 F8 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 968A FD F9        	ld sp,iy
  28+ 968C 06 10            ld b,16
  29+ 968E D1           1 pop de
  30+ 968F 7B               ld a,e
  31+ 9690 AE               xor (hl)
  32+ 9691 77           	ld (hl),a
  33+ 9692 23           	inc hl
  34+ 9693 7A               ld a,d
  35+ 9694 AE               xor (hl)
  36+ 9695 77           	ld (hl),a
  37+ 9696 2B           	dec hl
  38+ 9697 24           	inc h
  39+ 9698 7C               ld a,h
  40+ 9699 E6 07            and 7
  41+ 969B 20 0A            jr nz,2F
  42+ 969D 7D               ld a,l
  43+ 969E C6 20            add a,$20
  44+ 96A0 6F               ld l,a
  45+ 96A1 38 04            jr c,2F
  46+ 96A3 7C               ld a,h
  47+ 96A4 D6 08            sub 8
  48+ 96A6 67               ld h,a
  49+ 96A7 7C           2 ld a,h
  50+ 96A8 FE 58            cp $58
  51+ 96AA 28 02            jr z,3F
  52+ 96AC 10 E0            djnz 1B
  53+ 96AE ED 7B F8 88  3 ld sp,(Stack)
  54+ 96B2 C9           	ret
  55+ 96B3
  56+ 96B3 ED 73 F8 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96B7 FD F9        	ld sp,iy
  58+ 96B9 06 08            ld b,8
  59+ 96BB D1           1 pop de
  60+ 96BC 7B               ld a,e
  61+ 96BD AE               xor (hl)
  62+ 96BE 77           	ld (hl),a
  63+ 96BF 23           	inc hl
  64+ 96C0 7A               ld a,d
  65+ 96C1 AE               xor (hl)
  66+ 96C2 77           	ld (hl),a
  67+ 96C3 23           	inc hl
  68+ 96C4 D1           	pop de
  69+ 96C5 7B               ld a,e
  70+ 96C6 AE               xor (hl)
  71+ 96C7 77           	ld (hl),a
  72+ 96C8 2B           	dec hl
  73+ 96C9 2B           	dec hl
  74+ 96CA 24           	inc h
  75+ 96CB 7C               ld a,h
  76+ 96CC E6 07            and 7
  77+ 96CE 20 0A            jr nz,2F
  78+ 96D0 7D               ld a,l
  79+ 96D1 C6 20            add a,$20
  80+ 96D3 6F               ld l,a
  81+ 96D4 38 04            jr c,2F
  82+ 96D6 7C               ld a,h
  83+ 96D7 D6 08            sub 8
  84+ 96D9 67               ld h,a
  85+ 96DA 7C           2 ld a,h
  86+ 96DB FE 58            cp $58
  87+ 96DD 28 25            jr z,4F
  88+ 96DF 7A               ld a,d
  89+ 96E0 AE               xor (hl)
  90+ 96E1 77               ld (hl),a
  91+ 96E2 D1           	pop de
  92+ 96E3 23           	inc hl
  93+ 96E4 7B               ld a,e
  94+ 96E5 AE               xor (hl)
  95+ 96E6 77           	ld (hl),a
  96+ 96E7 23           	inc hl
  97+ 96E8 7A               ld a,d
  98+ 96E9 AE               xor (hl)
  99+ 96EA 77           	ld (hl),a
 100+ 96EB 2B           	dec hl
 101+ 96EC 2B           	dec hl
 102+ 96ED 24           	inc h
 103+ 96EE 7C               ld a,h
 104+ 96EF E6 07            and 7
 105+ 96F1 20 0A            jr nz,3F
 106+ 96F3 7D               ld a,l
 107+ 96F4 C6 20            add a,$20
 108+ 96F6 6F               ld l,a
 109+ 96F7 38 04            jr c,3F
 110+ 96F9 7C               ld a,h
 111+ 96FA D6 08            sub 8
 112+ 96FC 67               ld h,a
 113+ 96FD 7C           3 ld a,h
 114+ 96FE FE 58            cp $58
 115+ 9700 28 02            jr z,4F
 116+ 9702 10 B7            djnz 1B
 117+ 9704 ED 7B F8 88  4 ld sp,(Stack)
 118+ 9708 C9           	ret
 119+ 9709
 120+ 9709              ; ---------------------------------------------------
 121+ 9709
 122+ 9709 ED 73 F8 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 970D FD F9        	ld sp,iy
 124+ 970F
 125+ 970F              ; >>>
 126+ 970F
 127+ 970F 06 10            ld b,16
 128+ 9711 D1           1 pop de
 129+ 9712 7A           	ld a,d
 130+ 9713 AE           	xor (hl)
 131+ 9714 77           	ld (hl),a
 132+ 9715 24           	inc h
 133+ 9716 7C               ld a,h
 134+ 9717 E6 07            and 7
 135+ 9719 20 0C            jr nz,2F
 136+ 971B 7D               ld a,l
 137+ 971C C6 20            add a,$20
 138+ 971E 6F               ld l,a
 139+ 971F 38 06            jr c,2F
 140+ 9721 7C               ld a,h
 141+ 9722 D6 08            sub 8
 142+ 9724 67               ld h,a
 143+ 9725 18 00            jr 2F
 144+ 9727 7C           2 ld a,h
 145+ 9728 FE 58            cp $58
 146+ 972A 28 02            jr z,3F
 147+ 972C 10 E3            djnz 1B
 148+ 972E ED 7B F8 88  3 ld sp,(Stack)
 149+ 9732 C9           	ret
 150+ 9733
 151+ 9733 ED 73 F8 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9737 FD F9        	ld sp,iy
 153+ 9739
 154+ 9739              ; >>>
 155+ 9739
 156+ 9739 06 10            ld b,16
 157+ 973B D1           1 pop de
 158+ 973C 7B           	ld a,e
 159+ 973D AE           	xor (hl)
 160+ 973E 77           	ld (hl),a
 161+ 973F 24           	inc h
 162+ 9740 7C               ld a,h
 163+ 9741 E6 07            and 7
 164+ 9743 20 0C            jr nz,2F
 165+ 9745 7D               ld a,l
 166+ 9746 C6 20            add a,$20
 167+ 9748 6F               ld l,a
 168+ 9749 38 06            jr c,2F
 169+ 974B 7C               ld a,h
 170+ 974C D6 08            sub 8
 171+ 974E 67               ld h,a
 172+ 974F 18 00            jr 2F
 173+ 9751 7C           2 ld a,h
 174+ 9752 FE 58            cp $58
 175+ 9754 28 02            jr z,3F
 176+ 9756 10 E3            djnz 1B
 177+ 9758 ED 7B F8 88  3 ld sp,(Stack)
 178+ 975C C9           	ret
 179+ 975D
 180+ 975D              ; ---------------------------------------------------
 181+ 975D
 182+ 975D ED 73 F8 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9761 FD F9        	ld sp,iy
 184+ 9763 06 08            ld b,8
 185+ 9765 D1           1 pop de
 186+ 9766 7A           	ld a,d
 187+ 9767 AE           	xor (hl)
 188+ 9768 77           	ld (hl),a
 189+ 9769 23           	inc hl
 190+ 976A D1           	pop de
 191+ 976B 7B           	ld a,e
 192+ 976C AE           	xor (hl)
 193+ 976D 77           	ld (hl),a
 194+ 976E 2B           	dec hl
 195+ 976F 24            	inc h
 196+ 9770 7C               ld a,h
 197+ 9771 E6 07            and 7
 198+ 9773 20 0A            jr nz,2F
 199+ 9775 7D               ld a,l
 200+ 9776 C6 20            add a,$20
 201+ 9778 6F               ld l,a
 202+ 9779 38 04            jr c,2F
 203+ 977B 7C               ld a,h
 204+ 977C D6 08            sub 8
 205+ 977E 67               ld h,a
 206+ 977F 7C           2 ld a,h
 207+ 9780 FE 58            cp $58
 208+ 9782 28 20            jr z,4F
 209+ 9784 D1               pop de
 210+ 9785 7B           	ld a,e
 211+ 9786 AE           	xor (hl)
 212+ 9787 77           	ld (hl),a
 213+ 9788 23           	inc hl
 214+ 9789 7A           	ld a,d
 215+ 978A AE           	xor (hl)
 216+ 978B 77           	ld (hl),a
 217+ 978C 2B           	dec hl
 218+ 978D 24           	inc h
 219+ 978E 7C               ld a,h
 220+ 978F E6 07            and 7
 221+ 9791 20 0A            jr nz,3F
 222+ 9793 7D               ld a,l
 223+ 9794 C6 20            add a,$20
 224+ 9796 6F               ld l,a
 225+ 9797 38 04            jr c,3F
 226+ 9799 7C               ld a,h
 227+ 979A D6 08            sub 8
 228+ 979C 67               ld h,a
 229+ 979D 7C           3 ld a,h
 230+ 979E FE 58            cp $58
 231+ 97A0 28 02            jr z,4F
 232+ 97A2 10 C1            djnz 1B
 233+ 97A4 ED 7B F8 88  4 ld sp,(Stack)
 234+ 97A8 C9           	ret
 235+ 97A9
 236+ 97A9 ED 73 F8 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97AD FD F9        	ld sp,iy
 238+ 97AF 06 08            ld b,8
 239+ 97B1 D1           1 pop de
 240+ 97B2 D1           	pop de
 241+ 97B3 7B           	ld a,e
 242+ 97B4 AE           	xor (hl)
 243+ 97B5 77           	ld (hl),a
 244+ 97B6 24            	inc h
 245+ 97B7 7C               ld a,h
 246+ 97B8 E6 07            and 7
 247+ 97BA 20 0A            jr nz,2F
 248+ 97BC 7D               ld a,l
 249+ 97BD C6 20            add a,$20
 250+ 97BF 6F               ld l,a
 251+ 97C0 38 04            jr c,2F
 252+ 97C2 7C               ld a,h
 253+ 97C3 D6 08            sub 8
 254+ 97C5 67               ld h,a
 255+ 97C6 7C           2 ld a,h
 256+ 97C7 FE 58            cp $58
 257+ 97C9 28 1B            jr z,4F
 258+ 97CB D1               pop de
 259+ 97CC 7A           	ld a,d
 260+ 97CD AE           	xor (hl)
 261+ 97CE 77           	ld (hl),a
 262+ 97CF 24           	inc h
 263+ 97D0 7C               ld a,h
 264+ 97D1 E6 07            and 7
 265+ 97D3 20 0A            jr nz,3F
 266+ 97D5 7D               ld a,l
 267+ 97D6 C6 20            add a,$20
 268+ 97D8 6F               ld l,a
 269+ 97D9 38 04            jr c,3F
 270+ 97DB 7C               ld a,h
 271+ 97DC D6 08            sub 8
 272+ 97DE 67               ld h,a
 273+ 97DF 7C           3 ld a,h
 274+ 97E0 FE 58            cp $58
 275+ 97E2 28 02            jr z,4F
 276+ 97E4 10 CB            djnz 1B
 277+ 97E6 ED 7B F8 88  4 ld sp,(Stack)
 278+ 97EA C9           	ret
 279+ 97EB
 280+ 97EB ED 73 F8 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97EF FD F9        	ld sp,iy
 282+ 97F1 06 08            ld b,8
 283+ 97F3 D1           1 pop de
 284+ 97F4 7B           	ld a,e
 285+ 97F5 AE           	xor (hl)
 286+ 97F6 77           	ld (hl),a
 287+ 97F7 23           	inc hl
 288+ 97F8 7A           	ld a,d
 289+ 97F9 AE           	xor (hl)
 290+ 97FA 77           	ld (hl),a
 291+ 97FB 2B           	dec hl
 292+ 97FC 24             	inc h
 293+ 97FD 7C               ld a,h
 294+ 97FE E6 07            and 7
 295+ 9800 20 0A            jr nz,2F
 296+ 9802 7D               ld a,l
 297+ 9803 C6 20            add a,$20
 298+ 9805 6F               ld l,a
 299+ 9806 38 04            jr c,2F
 300+ 9808 7C               ld a,h
 301+ 9809 D6 08            sub 8
 302+ 980B 67               ld h,a
 303+ 980C 7C           2 ld a,h
 304+ 980D FE 58            cp $58
 305+ 980F 28 21            jr z,4F
 306+ 9811 D1               pop de
 307+ 9812 7A           	ld a,d
 308+ 9813 AE           	xor (hl)
 309+ 9814 77           	ld (hl),a
 310+ 9815 23           	inc hl
 311+ 9816 D1               pop de
 312+ 9817 7B           	ld a,e
 313+ 9818 AE           	xor (hl)
 314+ 9819 77           	ld (hl),a
 315+ 981A 2B           	dec hl
 316+ 981B 24           	inc h
 317+ 981C 7C               ld a,h
 318+ 981D E6 07            and 7
 319+ 981F 20 0A            jr nz,3F
 320+ 9821 7D               ld a,l
 321+ 9822 C6 20            add a,$20
 322+ 9824 6F               ld l,a
 323+ 9825 38 04            jr c,3F
 324+ 9827 7C               ld a,h
 325+ 9828 D6 08            sub 8
 326+ 982A 67               ld h,a
 327+ 982B 7C           3 ld a,h
 328+ 982C FE 58            cp $58
 329+ 982E 28 02            jr z,4F
 330+ 9830 10 C1            djnz 1B
 331+ 9832 ED 7B F8 88  4 ld sp,(Stack)
 332+ 9836 C9           	ret
 333+ 9837
 334+ 9837 ED 73 F8 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 983B FD F9        	ld sp,iy
 336+ 983D 06 08            ld b,8
 337+ 983F D1           1 pop de
 338+ 9840 7B           	ld a,e
 339+ 9841 AE           	xor (hl)
 340+ 9842 77           	ld (hl),a
 341+ 9843 24            	inc h
 342+ 9844 7C               ld a,h
 343+ 9845 E6 07            and 7
 344+ 9847 20 0A            jr nz,2F
 345+ 9849 7D               ld a,l
 346+ 984A C6 20            add a,$20
 347+ 984C 6F               ld l,a
 348+ 984D 38 04            jr c,2F
 349+ 984F 7C               ld a,h
 350+ 9850 D6 08            sub 8
 351+ 9852 67               ld h,a
 352+ 9853 7C           2 ld a,h
 353+ 9854 FE 58            cp $58
 354+ 9856 28 1C            jr z,4F
 355+ 9858 D1               pop de
 356+ 9859 7A           	ld a,d
 357+ 985A AE           	xor (hl)
 358+ 985B 77           	ld (hl),a
 359+ 985C 24           	inc h
 360+ 985D 7C               ld a,h
 361+ 985E E6 07            and 7
 362+ 9860 20 0A            jr nz,3F
 363+ 9862 7D               ld a,l
 364+ 9863 C6 20            add a,$20
 365+ 9865 6F               ld l,a
 366+ 9866 38 04            jr c,3F
 367+ 9868 7C               ld a,h
 368+ 9869 D6 08            sub 8
 369+ 986B 67               ld h,a
 370+ 986C 7C           3 ld a,h
 371+ 986D FE 58            cp $58
 372+ 986F 28 03            jr z,4F
 373+ 9871 D1               pop de
 374+ 9872 10 CB            djnz 1B
 375+ 9874 ED 7B F8 88  4 ld sp,(Stack)
 376+ 9878 C9           	ret
 377+ 9879
 378+ 9879              ; ---------------------------------------------------
 379+ 9879              ;
 380+ 9879              ;   27/02/23
 381+ 9879              ;
 382+ 9879              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9879              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9879              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9879
 386+ 9879 ED 73 F8 88  Pinta_Disparo ld (Stack),sp
 387+ 987D FD F9            ld sp,iy
 388+ 987F 06 03            ld b,3
 389+ 9881 D1           1 pop de
 390+ 9882 7B               ld a,e
 391+ 9883 AE               xor (hl)
 392+ 9884 77               ld (hl),a
 393+ 9885 23               inc hl
 394+ 9886 7A               ld a,d
 395+ 9887 AE               xor (hl)
 396+ 9888 77               ld (hl),a
 397+ 9889 2B               dec hl
 398+ 988A
 399+ 988A 24               inc h
 400+ 988B 7C               ld a,h
 401+ 988C E6 07            and 7
 402+ 988E 20 0A            jr nz,2F
 403+ 9890 7D               ld a,l
 404+ 9891 C6 20            add a,$20
 405+ 9893 6F               ld l,a
 406+ 9894 38 04            jr c,2F
 407+ 9896 7C               ld a,h
 408+ 9897 D6 08            sub 8
 409+ 9899 67               ld h,a
 410+ 989A 7C           2 ld a,h
 411+ 989B FE 58            cp $58
 412+ 989D 28 02            jr z,3F
 413+ 989F
 414+ 989F 10 E0            djnz 1B
 415+ 98A1 ED 7B F8 88  3 ld sp,(Stack)
 416+ 98A5 C9               ret
 417+ 98A6
# file closed: Rutinas_de_impresion_sprites.asm
1512  98A6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98A6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98A6              ;
   3+ 98A6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98A6              ;
   5+ 98A6              ; *****************************************************************************************************************************************************************************************
   6+ 98A6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98A6
   8+ 98A6 7C           calcula_tercio ld a,h
   9+ 98A7 E6 18        	and $18
  10+ 98A9 CB 2F        	sra a
  11+ 98AB CB 2F        	sra a
  12+ 98AD CB 2F        	sra a
  13+ 98AF C9           	ret
  14+ 98B0
# file closed: calcula_tercio.asm
1513  98B0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98B0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98B0              ;
   3+ 98B0              ;
   4+ 98B0              ;	CLS.
   5+ 98B0              ;
   6+ 98B0              ;	Limpia la pantalla y define sus atributos.
   7+ 98B0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98B0              ;
   9+ 98B0              ;	COLORES: 0 ..... NEGRO
  10+ 98B0              ;    		 1 ..... AZUL
  11+ 98B0              ; 			 2 ..... ROJO
  12+ 98B0              ;			 3 ..... MAGENTA
  13+ 98B0              ; 			 4 ..... VERDE
  14+ 98B0              ; 			 5 ..... CIAN
  15+ 98B0              ;			 6 ..... AMARILLO
  16+ 98B0              ; 			 7 ..... BLANCO
  17+ 98B0              ;
  18+ 98B0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98B0              ;
  20+ 98B0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98B0
  22+ 98B0
  23+ 98B0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98B3 11 01 40     	LD DE,$4001
  25+ 98B6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98B9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98BB ED B0        	LDIR
  28+ 98BD 01 FF 02     	LD BC,767
  29+ 98C0 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98C1 ED B0        	LDIR
  31+ 98C3 C9           	ret
  32+ 98C4
# file closed: Cls.asm
1514  98C4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98C4              ; ******************************************************************************************************************************************************************************************
   2+ 98C4              ;
   3+ 98C4              ;   20/05/23
   4+ 98C4              ;
   5+ 98C4              ;	Recompone_posicion_inicio
   6+ 98C4              ;
   7+ 98C4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98C4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98C4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98C4              ;	_ a una u otra rutina.
  11+ 98C4
  12+ 98C4              Recompone_posicion_inicio
  13+ 98C4
  14+ 98C4 2A BC 88     	ld hl,(Posicion_inicio)
  15+ 98C7 7D           	ld a,l
  16+ 98C8 E6 1F        	and $1f
  17+ 98CA 28 16        	jr z,1F
  18+ 98CC
  19+ 98CC FE 1F        	cp $1f
  20+ 98CE 28 0D        	jr z,3F
  21+ 98D0
  22+ 98D0 21 E5 88     	ld hl,Ctrl_2
  23+ 98D3 CB C6        	set 0,(hl)
  24+ 98D5 2A AE 88     	ld hl,(Puntero_objeto)
  25+ 98D8 22 E8 88     	ld (Repone_puntero_objeto),hl
  26+ 98DB 18 08        	jr 2F
  27+ 98DD
  28+ 98DD CD 7E 9A     3 call Mov_left
  29+ 98E0 18 03        	jr 2F
  30+ 98E2
  31+ 98E2 CD 60 99     1 call Mov_right
  32+ 98E5 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98E8 22 AE 88     	ld (Puntero_objeto),hl
  34+ 98EB C9           	ret
  35+ 98EC
  36+ 98EC              ; ******************************************************************************************************************************************************************************************
  37+ 98EC              ;
  38+ 98EC              ;   27/05/23
  39+ 98EC              ;
  40+ 98EC              ;	Mov_down
  41+ 98EC              ;
  42+ 98EC              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98EC              ;
  44+ 98EC              ;
  45+ 98EC              Mov_down
  46+ 98EC
  47+ 98EC CD 4E 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98EF              ;																	; _ repone (Puntero_objeto).
  49+ 98EF 21 D4 88     	ld hl,Ctrl_0
  50+ 98F2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98F4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98F4              ; 																	; _ en el caso de que no lo haya.
  53+ 98F4 3A C2 88     	ld a,(Vel_down)
  54+ 98F7 47           	ld b,a
  55+ 98F8 2A AC 88         ld hl,(Posicion_actual)
  56+ 98FB CD A6 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98FE E6 02        	and 2
  58+ 9900 28 0F        	jr z,1F
  59+ 9902
  60+ 9902              ; Nos encontramos en el último tercio de pantalla.
  61+ 9902              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9902
  63+ 9902 7C           	ld a,h
  64+ 9903 FE 57        	cp $57
  65+ 9905 20 0A        	jr nz,1F
  66+ 9907
  67+ 9907 7D           	ld a,l
  68+ 9908 C6 20        	add $20
  69+ 990A 30 05        	jr nc,1F
  70+ 990C
  71+ 990C              ; ------------------------------
  72+ 990C              ;	call Reaparece_arriba
  73+ 990C CD 0B 9C     	call Reinicio
  74+ 990F              ; ------------------------------
  75+ 990F
  76+ 990F 18 08        	jr 3F
  77+ 9911 CD 93 95     1 call NextScan
  78+ 9914 22 AC 88     	ld (Posicion_actual),hl
  79+ 9917 10 E2            djnz 2B
  80+ 9919 CD 31 9C     3 call Genera_coordenadas
  81+ 991C C9           	ret
  82+ 991D
  83+ 991D              ; ******************************************************************************************************************************************************************************************
  84+ 991D              ;
  85+ 991D              ;   27/05/23
  86+ 991D              ;
  87+ 991D              ;	Mov_up
  88+ 991D              ;
  89+ 991D              ; 	Mueve el Sprite hacia arriba.
  90+ 991D              ;
  91+ 991D              ;
  92+ 991D              Mov_up
  93+ 991D
  94+ 991D CD 4E 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9920              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9920 21 D4 88     	ld hl,Ctrl_0
  97+ 9923 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9925              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9925              ; 																		; _ en el caso de que no lo haya.
 100+ 9925 3A C1 88     	ld a,(Vel_up)
 101+ 9928 47           	ld b,a
 102+ 9929 2A AC 88     	ld hl,(Posicion_actual)
 103+ 992C CD A6 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 992F A7           	and a
 105+ 9930 20 10        	jr nz,1F
 106+ 9932
 107+ 9932              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9932              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9932
 110+ 9932 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9933 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9935 20 0B            jr nz,1F
 113+ 9937 7D               ld a,l
 114+ 9938 D6 20            sub $20
 115+ 993A 30 06            jr nc,1F
 116+ 993C 25               dec h
 117+ 993D
 118+ 993D              ; -----------------------------
 119+ 993D CD EC 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9940              ;	call Reinicio
 121+ 9940              ; -----------------------------
 122+ 9940
 123+ 9940 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9942 CD A2 95     1 call PreviousScan
 125+ 9945 22 AC 88     	ld (Posicion_actual),hl
 126+ 9948 10 E2            djnz 3B
 127+ 994A CD 31 9C     2 call Genera_coordenadas
 128+ 994D C9           	ret
 129+ 994E
 130+ 994E              ; -----------------------------
 131+ 994E              ;
 132+ 994E              ;	27/5/23
 133+ 994E              ;
 134+ 994E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 994E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 994E              ;
 137+ 994E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 994E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 994E              ;
 140+ 994E              ;	Modifica: A y (Puntero_objeto).
 141+ 994E
 142+ 994E 3A E5 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9951 CB 47        	bit 0,a
 144+ 9953 C8           	ret z
 145+ 9954 CB 87        	res 0,a
 146+ 9956 32 E5 88     	ld (Ctrl_2),a
 147+ 9959 2A E8 88     	ld hl,(Repone_puntero_objeto)
 148+ 995C 22 AE 88     	ld (Puntero_objeto),hl
 149+ 995F C9           	ret
 150+ 9960
 151+ 9960              ; ******************************************************************************************************************************************************************************************
 152+ 9960              ;
 153+ 9960              ;	19/10/22
 154+ 9960              ;
 155+ 9960              ;	Mov_right.
 156+ 9960              ;
 157+ 9960              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9960              ;
 159+ 9960
 160+ 9960 21 D4 88     Mov_right ld hl,Ctrl_0
 161+ 9963 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9965              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9965              ; 																	; _ en el caso de que no lo haya.
 164+ 9965 3A D4 88     	ld a,(Ctrl_0)
 165+ 9968 CB 77        	bit 6,a
 166+ 996A 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 996C
 168+ 996C CD 9A 9B     	call Stop_Amadeus_right
 169+ 996F C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9970 18 4D        	jr 8F
 171+ 9972
 172+ 9972 3A B0 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9975 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9977 20 46        	jr nz,8F
 175+ 9979
 176+ 9979 3A B2 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 997C A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 997D 28 40        	jr z,8F
 179+ 997F
 180+ 997F              ; ---------- ---------- ----------
 181+ 997F              ;
 182+ 997F              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 997F
 184+ 997F 3A C0 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9982 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9984 28 11        	jr z,1F
 187+ 9986 38 06        	jr c,6F
 188+ 9988 FE 04        	cp 4
 189+ 998A 28 14        	jr z,7F
 190+ 998C 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 998E
 192+ 998E              ; ---------- ---------- ----------
 193+ 998E              ;
 194+ 998E              ; Perfiles de velocidad
 195+ 998E              ;
 196+ 998E
 197+ 998E 3A B2 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9991 FE FE        	cp $fe
 199+ 9993 20 2A        	jr nz,8F
 200+ 9995 18 10        	jr 3F
 201+ 9997 3A B2 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 999A FE FD        	cp $fd
 203+ 999C 20 21        	jr nz,8F
 204+ 999E 18 07        	jr 3F
 205+ 99A0 3A B2 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 99A3 FE FB        	cp $fb
 207+ 99A5 20 18        	jr nz,8F
 208+ 99A7
 209+ 99A7              ; ---------- ---------- ----------
 210+ 99A7
 211+ 99A7              3
 212+ 99A7 CD DA 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 99AA              ;	call Reinicio
 214+ 99AA
 215+ 99AA              ; ---------- ---------- ----------
 216+ 99AA              ;
 217+ 99AA              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 99AA
 219+ 99AA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 99AC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 99AD CD C6 99     	call DESPLZ_DER
 222+ 99B0 C1           	pop bc
 223+ 99B1 10 F9        	djnz 5B
 224+ 99B3 2A AC 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 99B6 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 99B7 22 AC 88     	ld (Posicion_actual),hl
 227+ 99BA CD 31 9C     	call Genera_coordenadas
 228+ 99BD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 99BF
 230+ 99BF              ; ---------- ---------- ----------
 231+ 99BF
 232+ 99BF 2A AC 88     8 ld hl,(Posicion_actual)
 233+ 99C2 CD C6 99     	call DESPLZ_DER
 234+ 99C5 C9           2 ret
 235+ 99C6
 236+ 99C6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 99C6              ;
 238+ 99C6              ;	22/9/22
 239+ 99C6              ;
 240+ 99C6
 241+ 99C6 CD D5 99     DESPLZ_DER call Desplaza_derecha
 242+ 99C9 CD 21 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 99CC CD 4A 9A         call Ciclo_completo
 244+ 99CF 21 D4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 99D2 CB FE        	set 7,(hl)
 246+ 99D4 C9           	ret
 247+ 99D5
 248+ 99D5              ; ******************************************************************************************************************************************************************************************
 249+ 99D5              ;	15/02/23
 250+ 99D5              ;
 251+ 99D5
 252+ 99D5 3A C0 88     Desplaza_derecha ld a,(Vel_right)
 253+ 99D8 47           	ld b,a
 254+ 99D9 2A B8 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 99DC 23           1 inc hl
 256+ 99DD 23           	inc hl
 257+ 99DE 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 99E0 22 B8 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 99E3 CD 07 8C     	call Extrae_address
 260+ 99E6 22 AE 88     	ld (Puntero_objeto),hl
 261+ 99E9
 262+ 99E9              ; Modifica (Puntero_DESPLZ_izq).
 263+ 99E9
 264+ 99E9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 99E9              ; Cuántos movimientos hemos hecho ??
 266+ 99E9              ; DE contiene (Puntero_DESPLZ_der).
 267+ 99E9
 268+ 99E9 2A B4 88     7 ld hl,(Indice_Sprite_der)
 269+ 99EC EB           	ex de,hl
 270+ 99ED A7           	and a
 271+ 99EE ED 52        	sbc hl,de
 272+ 99F0 CB 3D        	srl l
 273+ 99F2 3E 08        6 ld a,8
 274+ 99F4 95           	sub l
 275+ 99F5 30 1E        	jr nc,3F
 276+ 99F7
 277+ 99F7              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 99F7              ; B="0".
 279+ 99F7
 280+ 99F7 04           4 inc b
 281+ 99F8 3C           	inc a
 282+ 99F9 20 FC        	jr nz,4B
 283+ 99FB 78           	ld a,b
 284+ 99FC 08           	ex af,af
 285+ 99FD 2A B4 88     	ld hl,(Indice_Sprite_der)
 286+ 9A00 23           5 inc hl
 287+ 9A01 23           	inc hl
 288+ 9A02 10 FC        	djnz 5B
 289+ 9A04 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A07 CD 07 8C     	call Extrae_address
 291+ 9A0A 22 AE 88     	ld (Puntero_objeto),hl
 292+ 9A0D
 293+ 9A0D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A0D              ; _(Posicion_actual).
 295+ 9A0D
 296+ 9A0D 21 AC 88     	ld hl,Posicion_actual
 297+ 9A10 34           	inc (hl)
 298+ 9A11 08               ex af,af
 299+ 9A12 6F           	ld l,a
 300+ 9A13 18 DD        	jr 6B
 301+ 9A15
 302+ 9A15              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A15
 304+ 9A15 47           3 ld b,a
 305+ 9A16 2A B6 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A19 23           2 inc hl
 307+ 9A1A 23           	inc hl
 308+ 9A1B 10 FC        	djnz 2B
 309+ 9A1D 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A20 C9           8 ret
 311+ 9A21
 312+ 9A21              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A21              ;
 314+ 9A21              ;	24/7/22
 315+ 9A21              ;
 316+ 9A21              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A21              ;
 318+ 9A21              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A21              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A21              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A21
 322+ 9A21 3A B2 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A24 A7           	and a
 324+ 9A25 20 1F        	jr nz,1F
 325+ 9A27 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A29 32 B2 88         ld (CTRL_DESPLZ),a
 327+ 9A2C
 328+ 9A2C 21 AB 88     	ld hl,Columns
 329+ 9A2F 34           	inc (hl)
 330+ 9A30 3A BE 88     	ld a,(Cuad_objeto)
 331+ 9A33 E6 01        	and 1
 332+ 9A35 28 0F        	jr z,1F
 333+ 9A37 2A AC 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A3A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A3B 22 AC 88     	ld (Posicion_actual),hl
 336+ 9A3E CD 31 9C     	call Genera_coordenadas
 337+ 9A41 CD A6 9B     	call Inc_CTRL_DESPLZ
 338+ 9A44 18 03        	jr 2F
 339+ 9A46 CD A6 9B     1 call Inc_CTRL_DESPLZ
 340+ 9A49 C9           2 ret
 341+ 9A4A
 342+ 9A4A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A4A              ;
 344+ 9A4A              ;	24/7/22
 345+ 9A4A              ;
 346+ 9A4A              ;	Ciclo_completo.
 347+ 9A4A              ;
 348+ 9A4A              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A4A              ;
 350+ 9A4A              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A4A              ; 	Decrementamos (Columns).
 352+ 9A4A              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A4A              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A4A
 355+ 9A4A
 356+ 9A4A 3A B2 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9A4D FE FF        	cp $ff
 358+ 9A4F 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9A51 E6 F0        	and $f0
 360+ 9A53 20 28        	jr nz,3F
 361+ 9A55
 362+ 9A55              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9A55
 364+ 9A55 3A B2 88     	ld a,(CTRL_DESPLZ)
 365+ 9A58 47           	ld b,a
 366+ 9A59 3E F8        	ld a,$f8
 367+ 9A5B 80           	add b
 368+ 9A5C 32 B2 88     	ld (CTRL_DESPLZ),a
 369+ 9A5F 18 1C        	jr 3F
 370+ 9A61 21 AB 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9A64 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9A65 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9A66 32 B2 88     	ld (CTRL_DESPLZ),a
 374+ 9A69 3A BE 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9A6C E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9A6E 20 0A        	jr nz,2F
 377+ 9A70 2A AC 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9A73 23           	inc hl
 379+ 9A74 22 AC 88     	ld (Posicion_actual),hl
 380+ 9A77 CD 31 9C     	call Genera_coordenadas
 381+ 9A7A
 382+ 9A7A              ; Inicia el puntero de Sprite.
 383+ 9A7A
 384+ 9A7A CD 1E 8C     2 call Inicia_puntero_objeto_der
 385+ 9A7D C9           3 ret
 386+ 9A7E
 387+ 9A7E              ; ******************************************************************************************************************************************************************************************
 388+ 9A7E              ;
 389+ 9A7E              ;	15/02/23
 390+ 9A7E              ;
 391+ 9A7E              ;	Mov_left.
 392+ 9A7E              ;
 393+ 9A7E              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9A7E              ;
 395+ 9A7E              Mov_left
 396+ 9A7E
 397+ 9A7E 21 D4 88     	ld hl,Ctrl_0
 398+ 9A81 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9A83              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9A83              ; 																	; _ en el caso de que no lo haya.
 401+ 9A83 3A D4 88     	ld a,(Ctrl_0)
 402+ 9A86 CB 77        	bit 6,a
 403+ 9A88 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9A8A
 405+ 9A8A CD A0 9B     	call Stop_Amadeus_left
 406+ 9A8D C8           	ret z
 407+ 9A8E 20 4A        	jr nz,8F
 408+ 9A90
 409+ 9A90 3A B0 88     11 ld a,(Coordenada_X)
 410+ 9A93 A7           	and a
 411+ 9A94 20 44        	jr nz,8F
 412+ 9A96
 413+ 9A96 3A B2 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9A99 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9A9A 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9A9C
 417+ 9A9C              ; ---------- ---------- ----------
 418+ 9A9C
 419+ 9A9C 3A BF 88     	ld a,(Vel_left)
 420+ 9A9F FE 02        	cp 2
 421+ 9AA1 28 0F        	jr z,1F
 422+ 9AA3 38 04        	jr c,6F
 423+ 9AA5 FE 04        	cp 4
 424+ 9AA7 28 12        	jr z,7F
 425+ 9AA9
 426+ 9AA9              ; ---------- ---------- ----------
 427+ 9AA9
 428+ 9AA9 3A B2 88     6 ld a,(CTRL_DESPLZ)
 429+ 9AAC FE F8        	cp $f8
 430+ 9AAE 20 2A        	jr nz,8F
 431+ 9AB0 18 10        	jr 4F
 432+ 9AB2 3A B2 88     1 ld a,(CTRL_DESPLZ)
 433+ 9AB5 FE F9        	cp $f9
 434+ 9AB7 20 21        	jr nz,8F
 435+ 9AB9 18 07        	jr 4F
 436+ 9ABB 3A B2 88     7 ld a,(CTRL_DESPLZ)
 437+ 9ABE FE FB        	cp $fb
 438+ 9AC0 20 18        	jr nz,8F
 439+ 9AC2
 440+ 9AC2              ; ---------- ---------- ----------
 441+ 9AC2
 442+ 9AC2              4
 443+ 9AC2 CD C8 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9AC5              ;	call Reinicio
 445+ 9AC5
 446+ 9AC5              ; ---------- ---------- ----------
 447+ 9AC5
 448+ 9AC5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9AC7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9AC8
 451+ 9AC8              ;	ld hl,(Indice_Sprite_izq)
 452+ 9AC8              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9AC8
 454+ 9AC8 CD E1 9A     	call DESPLZ_IZQ
 455+ 9ACB C1           	pop bc
 456+ 9ACC 10 F9        	djnz 5B
 457+ 9ACE 2A AC 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9AD1 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9AD2 22 AC 88     	ld (Posicion_actual),hl
 460+ 9AD5 CD 31 9C     	call Genera_coordenadas
 461+ 9AD8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9ADA
 463+ 9ADA              ; ---------- ---------- ----------
 464+ 9ADA
 465+ 9ADA              ; Movemos, no hay recolocación.
 466+ 9ADA
 467+ 9ADA 2A AC 88     8 ld hl,(Posicion_actual)
 468+ 9ADD CD E1 9A     	call DESPLZ_IZQ
 469+ 9AE0 C9           2 ret
 470+ 9AE1
 471+ 9AE1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9AE1              ;
 473+ 9AE1              ;	22/9/22
 474+ 9AE1
 475+ 9AE1              DESPLZ_IZQ
 476+ 9AE1
 477+ 9AE1 CD F0 9A     	call Desplaza_izquierda
 478+ 9AE4 CD 3C 9B         call modifica_parametros_1er_DESPLZ
 479+ 9AE7 CD 64 9B     	call Ciclo_completo_2
 480+ 9AEA 21 D4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9AED CB BE        	res 7,(hl)
 482+ 9AEF C9           	ret
 483+ 9AF0
 484+ 9AF0              Desplaza_izquierda
 485+ 9AF0
 486+ 9AF0 3A BF 88     	ld a,(Vel_left)
 487+ 9AF3 47           	ld b,a
 488+ 9AF4 2A BA 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9AF7 23           1 inc hl
 490+ 9AF8 23           	inc hl
 491+ 9AF9 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9AFB 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9AFE CD 07 8C     	call Extrae_address
 494+ 9B01 22 AE 88     	ld (Puntero_objeto),hl
 495+ 9B04
 496+ 9B04              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B04
 498+ 9B04              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B04              ; Cuántos movimientos hemos hecho ??
 500+ 9B04              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B04
 502+ 9B04 2A B6 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B07 EB           	ex de,hl
 504+ 9B08 A7           	and a
 505+ 9B09 ED 52        	sbc hl,de
 506+ 9B0B CB 3D        	srl l
 507+ 9B0D 3E 08        6 ld a,8
 508+ 9B0F 95           	sub l
 509+ 9B10 30 1E        	jr nc,3F
 510+ 9B12
 511+ 9B12              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B12              ; B="0".
 513+ 9B12
 514+ 9B12 04           4 inc b
 515+ 9B13 3C           	inc a
 516+ 9B14 20 FC        	jr nz,4B
 517+ 9B16 78           	ld a,b
 518+ 9B17 08           	ex af,af
 519+ 9B18 2A B6 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B1B 23           5 inc hl
 521+ 9B1C 23           	inc hl
 522+ 9B1D 10 FC        	djnz 5B
 523+ 9B1F 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B22 CD 07 8C     	call Extrae_address
 525+ 9B25 22 AE 88     	ld (Puntero_objeto),hl
 526+ 9B28
 527+ 9B28              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B28              ; _(Posicion_actual).
 529+ 9B28
 530+ 9B28 21 AC 88     	ld hl,Posicion_actual
 531+ 9B2B 35           	dec (hl)
 532+ 9B2C 08           	ex af,af
 533+ 9B2D 6F           	ld l,a
 534+ 9B2E 18 DD        	jr 6B
 535+ 9B30
 536+ 9B30              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9B30
 538+ 9B30 47           3 ld b,a
 539+ 9B31 2A B4 88     	ld hl,(Indice_Sprite_der)
 540+ 9B34 23           2 inc hl
 541+ 9B35 23           	inc hl
 542+ 9B36 10 FC        	djnz 2B
 543+ 9B38 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9B3B C9           8 ret
 545+ 9B3C
 546+ 9B3C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9B3C              ;
 548+ 9B3C              ;	modifica_parametros_1er_DESPLZ
 549+ 9B3C              ;
 550+ 9B3C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9B3C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9B3C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9B3C
 554+ 9B3C 3A B2 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9B3F A7           	and a
 556+ 9B40 20 1E        	jr nz,1F
 557+ 9B42 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9B43 32 B2 88         ld (CTRL_DESPLZ),a
 559+ 9B46 21 AB 88     	ld hl,Columns
 560+ 9B49 34           	inc (hl)
 561+ 9B4A 3A BE 88     	ld a,(Cuad_objeto)
 562+ 9B4D E6 01        	and 1
 563+ 9B4F 20 0F        	jr nz,1F
 564+ 9B51 2A AC 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9B54 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9B55 22 AC 88     	ld (Posicion_actual),hl
 567+ 9B58 CD 31 9C     	call Genera_coordenadas
 568+ 9B5B CD B7 9B     	call Dec_CTRL_DESPLZ
 569+ 9B5E 18 03        	jr 2F
 570+ 9B60 CD B7 9B     1 call Dec_CTRL_DESPLZ
 571+ 9B63 C9           2 ret
 572+ 9B64
 573+ 9B64              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9B64
 575+ 9B64 3A B2 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9B67 FE F7        	cp $f7
 577+ 9B69 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9B6B 30 2C        	jr nc,3F
 579+ 9B6D
 580+ 9B6D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9B6D
 582+ 9B6D 06 00        	ld b,0
 583+ 9B6F 04           4 inc b
 584+ 9B70 3C           	inc a
 585+ 9B71 FE F7        	cp $f7
 586+ 9B73 20 FA        	jr nz,4B
 587+ 9B75 3E FF        	ld a,$ff
 588+ 9B77 90           	sub b
 589+ 9B78 32 B2 88     	ld (CTRL_DESPLZ),a
 590+ 9B7B 18 1C        	jr 3F
 591+ 9B7D
 592+ 9B7D              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9B7D
 594+ 9B7D 21 AB 88     1 ld hl,Columns
 595+ 9B80 35           	dec (hl)
 596+ 9B81 AF           	xor a
 597+ 9B82 32 B2 88     	ld (CTRL_DESPLZ),a
 598+ 9B85 3A BE 88     	ld a,(Cuad_objeto)
 599+ 9B88 E6 01        	and 1
 600+ 9B8A 28 0A        	jr z,2F
 601+ 9B8C 2A AC 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9B8F 2B           	dec hl
 603+ 9B90 22 AC 88     	ld (Posicion_actual),hl
 604+ 9B93 CD 31 9C     	call Genera_coordenadas
 605+ 9B96
 606+ 9B96              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9B96
 608+ 9B96 CD 31 8C     2 call Inicia_puntero_objeto_izq
 609+ 9B99 C9           3 ret
 610+ 9B9A
 611+ 9B9A              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9B9A              ;
 613+ 9B9A              ;	19/10/22
 614+ 9B9A              ;
 615+ 9B9A              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9B9A              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9B9A
 618+ 9B9A 3A B0 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9B9D FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9B9F C9           	ret
 621+ 9BA0
 622+ 9BA0              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9BA0              ;
 624+ 9BA0              ;	19/10/22
 625+ 9BA0              ;
 626+ 9BA0              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9BA0              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9BA0
 629+ 9BA0 3A B0 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9BA3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9BA5 C9           	ret
 632+ 9BA6
 633+ 9BA6              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9BA6              ;
 635+ 9BA6              ;	24/7/22
 636+ 9BA6              ;
 637+ 9BA6              ;	Inc_CTRL_DESPLZ
 638+ 9BA6              ;
 639+ 9BA6              ;
 640+ 9BA6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9BA6
 642+ 9BA6 21 B2 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9BA9 3A C0 88     	ld a,(Vel_right)
 644+ 9BAC A7           	and a
 645+ 9BAD 28 06        	jr z,1F
 646+ 9BAF 47           	ld b,a
 647+ 9BB0 34           3 inc (hl)
 648+ 9BB1 10 FD        	djnz 3B
 649+ 9BB3 18 01        	jr 2F
 650+ 9BB5 34           1 inc (hl)
 651+ 9BB6 C9           2 ret
 652+ 9BB7
 653+ 9BB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9BB7              ;
 655+ 9BB7              ;	5/2/23
 656+ 9BB7              ;
 657+ 9BB7              ;	Dec_CTRL_DESPLZ
 658+ 9BB7              ;
 659+ 9BB7              ;
 660+ 9BB7              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9BB7
 662+ 9BB7 21 B2 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9BBA 3A BF 88     	ld a,(Vel_left)
 664+ 9BBD A7           	and a
 665+ 9BBE 28 06        	jr z,1F
 666+ 9BC0 47           	ld b,a
 667+ 9BC1 35           3 dec (hl)
 668+ 9BC2 10 FD        	djnz 3B
 669+ 9BC4 18 01        	jr 2F
 670+ 9BC6 35           1 dec (hl)
 671+ 9BC7 C9           2 ret
 672+ 9BC8
 673+ 9BC8              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9BC8
 675+ 9BC8 2A AC 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9BCB 01 1F 00     	ld bc,31
 677+ 9BCE A7           	and a
 678+ 9BCF ED 4A        	adc hl,bc
 679+ 9BD1 22 AC 88     	ld (Posicion_actual),hl
 680+ 9BD4 21 D4 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9BD7 CB C6        	set 0,(hl)
 682+ 9BD9 C9           	ret
 683+ 9BDA
 684+ 9BDA              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9BDA
 686+ 9BDA 2A AC 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9BDD 01 1F 00     	ld bc,31
 688+ 9BE0 A7           	and a
 689+ 9BE1 ED 42        	sbc hl,bc
 690+ 9BE3 22 AC 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9BE6 21 D4 88     	ld hl,Ctrl_0
 692+ 9BE9 CB CE        	set 1,(hl)
 693+ 9BEB C9           	ret
 694+ 9BEC
 695+ 9BEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9BEC
 697+ 9BEC 24           Reaparece_abajo inc h
 698+ 9BED 01 E0 17     	ld bc,$17e0
 699+ 9BF0 A7           	and a
 700+ 9BF1 ED 4A        	adc hl,bc
 701+ 9BF3 22 AC 88     	ld (Posicion_actual),hl
 702+ 9BF6 21 D4 88     	ld hl,Ctrl_0
 703+ 9BF9 CB D6        	set 2,(hl)
 704+ 9BFB C9           	ret
 705+ 9BFC
 706+ 9BFC              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9BFC
 708+ 9BFC 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9BFF A7           	and a
 710+ 9C00 ED 42        	sbc hl,bc
 711+ 9C02 22 AC 88     	ld (Posicion_actual),hl
 712+ 9C05 21 D4 88     	ld hl,Ctrl_0
 713+ 9C08 CB DE        	set 3,(hl)
 714+ 9C0A C9           	ret
 715+ 9C0B
 716+ 9C0B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C0B              ;
 718+ 9C0B              ;	15/07/23
 719+ 9C0B
 720+ 9C0B              Reinicio
 721+ 9C0B
 722+ 9C0B              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C0B
 724+ 9C0B AF           	xor a
 725+ 9C0C 21 D9 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C0F CD 2D 9C     	call Limpia_contenido_hl
 727+ 9C12
 728+ 9C12 21 AC 88     	ld hl,Posicion_actual
 729+ 9C15 CD 2D 9C     	call Limpia_contenido_hl
 730+ 9C18
 731+ 9C18 CD 5D 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C1B CD E7 9E     	call Inicia_Puntero_mov
 733+ 9C1E
 734+ 9C1E 21 DB 88     	ld hl,Incrementa_puntero
 735+ 9C21 06 05        	ld b,5
 736+ 9C23 77           1 ld (hl),a
 737+ 9C24 23           	inc hl
 738+ 9C25 10 FC        	djnz 1B
 739+ 9C27
 740+ 9C27 21 E5 88     	ld hl,Ctrl_2
 741+ 9C2A CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9C2C
 743+ 9C2C C9           	ret
 744+ 9C2D
 745+ 9C2D 77           Limpia_contenido_hl	ld (hl),a
 746+ 9C2E 23           	inc hl
 747+ 9C2F 77           	ld (hl),a
 748+ 9C30 C9           	ret
 749+ 9C31
 750+ 9C31
# file closed: Direcciones.asm
1515  9C31              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C31              ; ------------------------------------------------------------------------
   2+ 9C31              ;
   3+ 9C31              ;	02/04/23
   4+ 9C31              ;
   5+ 9C31              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C31              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C31              ;
   8+ 9C31              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C31              ;
  10+ 9C31              ;	Modifica: A,BC y DE.
  11+ 9C31
  12+ 9C31 C5           Genera_coordenadas push bc
  13+ 9C32 E5           	push hl
  14+ 9C33 D5           	push de
  15+ 9C34
  16+ 9C34 2A AC 88     	ld hl,(Posicion_actual)
  17+ 9C37
  18+ 9C37 7D           	ld a,l
  19+ 9C38 E6 1F        	and $1f
  20+ 9C3A 32 B0 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C3D
  22+ 9C3D CD A6 98     	call calcula_tercio
  23+ 9C40 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C41
  25+ 9C41 1E 00        	ld e,0
  26+ 9C43 7D           	ld a,l
  27+ 9C44 E6 E0        	and $e0
  28+ 9C46 28 01        	jr z,1F
  29+ 9C48 04           	inc b
  30+ 9C49
  31+ 9C49 04           1 inc b
  32+ 9C4A 05           	dec b
  33+ 9C4B 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C4D              ;														; _ , salimos.
  35+ 9C4D 1C           3 inc e
  36+ 9C4E D6 20        	sub 32
  37+ 9C50 20 FB        	jr nz,3B
  38+ 9C52 10 F5        	djnz 1B
  39+ 9C54
  40+ 9C54 7B           2 ld a,e
  41+ 9C55 32 B1 88     	ld (Coordenada_y),a
  42+ 9C58
  43+ 9C58 D1           	pop de
  44+ 9C59 E1           	pop hl
  45+ 9C5A C1           	pop bc
  46+ 9C5B
  47+ 9C5B C9           	ret
  48+ 9C5C
  49+ 9C5C              ; ------------------------------------------------------------------------
  50+ 9C5C              ;	28/05/23
  51+ 9C5C              ;
  52+ 9C5C              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C5C              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C5C              ;
  55+ 9C5C              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C5C              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C5C              ;
  58+ 9C5C              ;		DE="$120d"
  59+ 9C5C              ;
  60+ 9C5C              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C5C              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C5C              ;
  63+ 9C5C              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C5C
  65+ 9C5C              ;	Modifica: A,BC y DE.
  66+ 9C5C
  67+ 9C5C
  68+ 9C5C              Genera_coordenadas_disparo
  69+ 9C5C
  70+ 9C5C              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C5C
  72+ 9C5C 7D           	ld a,l
  73+ 9C5D E6 1F        	and $1f
  74+ 9C5F 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C60 CD A6 98     	call calcula_tercio
  76+ 9C63 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C64 1E 00        	ld e,0
  78+ 9C66 7D           	ld a,l
  79+ 9C67 E6 E0        	and $e0
  80+ 9C69 28 01        	jr z,1F
  81+ 9C6B 04           	inc b
  82+ 9C6C 1C           1 inc e
  83+ 9C6D D6 20        	sub 32
  84+ 9C6F 20 FB        	jr nz,1B
  85+ 9C71 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C73 C9           	ret
  87+ 9C74
# file closed: Genera_coordenadas.asm
1516  9C74              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C74              ; Relojes y temporizaciones.
   2+ 9C74
   3+ 9C74              ; ------------------------------------------------------
   4+ 9C74              ;
   5+ 9C74              ;	16/7/23
   6+ 9C74              ;
   7+ 9C74              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C74              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C74              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C74              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C74              ;
  12+ 9C74              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C74              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C74
  15+ 9C74              ; Disparo_entidad db 1
  16+ 9C74              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C74              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C74
  19+ 9C74              Habilita_disparos
  20+ 9C74
  21+ 9C74 7E           	ld a,(hl)
  22+ 9C75 A7           	and a
  23+ 9C76 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C77
  25+ 9C77 EB           	ex de,hl
  26+ 9C78
  27+ 9C78 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C79 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C7A
  30+ 9C7A              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C7A
  32+ 9C7A 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C7B 7E           	ld a,(hl)
  34+ 9C7C 23           	inc hl
  35+ 9C7D 77           	ld (hl),a
  36+ 9C7E
  37+ 9C7E EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C7F 3E 01        	ld a,1
  39+ 9C81 77           	ld (hl),a
  40+ 9C82 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1517  9C83              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C83
   2+ 9C83
   3+ 9C83              ;   07/07/23
   4+ 9C83              ;
   5+ 9C83              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C83              ;
   7+ 9C83              ;   Codificación:
   8+ 9C83              ;
   9+ 9C83              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C83              ;
  11+ 9C83              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C83              ;
  13+ 9C83              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C83              ;
  15+ 9C83              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C83              ;
  17+ 9C83              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C83              ;                               ..... %01000010 Vel_up 4
  19+ 9C83              ;                                               Vel_down 2
  20+ 9C83              ;                               ..... $42
  21+ 9C83              ;
  22+ 9C83              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C83              ;
  24+ 9C83              ;                               ..... %01000010 Vel_left 4
  25+ 9C83              ;                                               Vel_right 2
  26+ 9C83              ;                               ..... $42
  27+ 9C83              ;
  28+ 9C83              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C83              ;
  30+ 9C83              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C83              ;
  32+ 9C83              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C83              ;
  34+ 9C83              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C83              ;                                     $53
  36+ 9C83              ;
  37+ 9C83              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C83              ;
  39+ 9C83              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C83              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C83              ;
  42+ 9C83              ;                       Arriba ..... $81
  43+ 9C83              ;                       Arriba - izquierda ..... $a1
  44+ 9C83              ;                       Arriba - derecha ..... $91
  45+ 9C83              ;
  46+ 9C83              ;                       Abajo ..... $41
  47+ 9C83              ;                       Abajo - izquierda ..... $61
  48+ 9C83              ;                       Abajo - derecha ..... $51
  49+ 9C83              ;
  50+ 9C83              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C83              ;
  52+ 9C83              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C83              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C83              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C83              ;
  56+ 9C83              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C83              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C83              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C83              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C83              ;
  61+ 9C83              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C83              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C83              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C83              ;
  65+ 9C83              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C83              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C83              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C83              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C83
  70+ 9C83              ; ----- ----- ----- ----- -----
  71+ 9C83
  72+ 9C83 AF 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C85 B7 9C            defw F_1
  74+ 9C87 C1 9C            defw F_2
  75+ 9C89 CB 9C            defw Codo_abajo_derecha
  76+ 9C8B FF 9C            defw Derecha_y_subiendo
  77+ 9C8D 09 9D            defw Derecha_y_subiendo_1
  78+ 9C8F 13 9D            defw F_3
  79+ 9C91 1D 9D            defw F_4
  80+ 9C93 27 9D            defw Derecha_y_bajando
  81+ 9C95 31 9D            defw Derecha_y_bajando_1
  82+ 9C97 3B 9D            defw Derecha_y_bajando_2
  83+ 9C99 45 9D            defw Codo_derecha_abajo
  84+ 9C9B 75 9D            defw Codo_abajo_izq.
  85+ 9C9D A9 9D            defw Izquierda_y_subiendo
  86+ 9C9F B3 9D            defw Izquierda_y_subiendo_1
  87+ 9CA1 BD 9D            defw F_5
  88+ 9CA3 C7 9D            defw F_6
  89+ 9CA5 D1 9D            defw Izquierda_y_bajando
  90+ 9CA7 DB 9D            defw Izquierda_y_bajando_1
  91+ 9CA9 E5 9D            defw Izquierda_y_bajando_2
  92+ 9CAB EF 9D            defw Codo_izquierda_abajo
  93+ 9CAD 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9CAF
  95+ 9CAF 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9CB3 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9CB7
  98+ 9CB7 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9CBB 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9CBF 08 00
 100+ 9CC1 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9CC5 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9CC9 0F FE
 102+ 9CCB
 103+ 9CCB 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9CCF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9CD3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9CD7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9CDB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9CDF 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9CE3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9CE7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9CEB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CEF 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9CF3 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9CF7 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9CFB 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9CFF
 117+ 9CFF 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D03 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D07 06 00
 119+ 9D09
 120+ 9D09 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D0D 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D11 02 00
 122+ 9D13
 123+ 9D13 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D17 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D1B 04 00
 125+ 9D1D 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D21 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D25 08 00
 127+ 9D27
 128+ 9D27 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D2B 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D2F 02 00
 130+ 9D31
 131+ 9D31 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D35 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D39 06 00
 133+ 9D3B
 134+ 9D3B 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D3F 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D43 06 00
 136+ 9D45
 137+ 9D45              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9D45
 139+ 9D45 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D49 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D4D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D51 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D55 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D59 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D5D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D61 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D65 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D69 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D6D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D71 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D75
 152+ 9D75 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D79 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D7D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D81 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D85 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D89 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D8D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D91 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D95 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D99 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D9D 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9DA1 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9DA5 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9DA9
 166+ 9DA9 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9DAD 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9DB1 06 00
 168+ 9DB3
 169+ 9DB3 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9DB7 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9DBB 02 00
 171+ 9DBD
 172+ 9DBD 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9DC1 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9DC5 04 00
 174+ 9DC7 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9DCB 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9DCF 08 00
 176+ 9DD1
 177+ 9DD1 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9DD5 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9DD9 02 00
 179+ 9DDB
 180+ 9DDB 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9DDF 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9DE3 06 00
 182+ 9DE5
 183+ 9DE5 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9DE9 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9DED 06 00
 185+ 9DEF
 186+ 9DEF 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9DF3 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9DF7 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9DFB 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9DFF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E03 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E07 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E0B 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E0F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E13 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E17 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E1B 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E1F
 199+ 9E1F              ; ----- ----- ----- ----- -----
 200+ 9E1F              ;
 201+ 9E1F              ;   27/06/23
 202+ 9E1F
 203+ 9E1F              Movimiento
 204+ 9E1F
 205+ 9E1F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E1F
 207+ 9E1F              ;    ld hl,(Posicion_actual)
 208+ 9E1F
 209+ 9E1F 3A E5 88         ld a,(Ctrl_2)
 210+ 9E22 CB 57            bit 2,a
 211+ 9E24 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E26
 213+ 9E26 2A D7 88         ld hl,(Puntero_mov)
 214+ 9E29 7E               ld a,(hl)
 215+ 9E2A
 216+ 9E2A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E2A
 218+ 9E2A              Inicia_desplazamiento.
 219+ 9E2A
 220+ 9E2A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E2A
 222+ 9E2A CD 1E 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E2D
 224+ 9E2D              ; Iniciamos (Repetimos_mov).
 225+ 9E2D
 226+ 9E2D 7E               ld a,(hl)
 227+ 9E2E E6 0F            and $0f
 228+ 9E30 32 DD 88         ld (Repetimos_desplazamiento),a
 229+ 9E33 32 DE 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9E36
 231+ 9E36              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E36
 233+ 9E36 23               inc hl
 234+ 9E37 7E               ld a,(hl)
 235+ 9E38 32 E0 88         ld (Cola_de_desplazamiento),a
 236+ 9E3B 2B               dec hl
 237+ 9E3C
 238+ 9E3C 21 E5 88         ld hl,Ctrl_2
 239+ 9E3F CB D6            set 2,(hl)
 240+ 9E41
 241+ 9E41              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E41              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E41
 244+ 9E41              Desplazamiento_iniciado
 245+ 9E41
 246+ 9E41 CD F2 9E         call Aplica_desplazamiento
 247+ 9E44
 248+ 9E44 3A E5 88         ld a,(Ctrl_2)
 249+ 9E47 CB 67            bit 4,a
 250+ 9E49 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E4A
 252+ 9E4A 21 DD 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E4D 35               dec (hl)
 254+ 9E4E C0               ret nz
 255+ 9E4F
 256+ 9E4F              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E4F              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E4F              ; Analiza (Cola_de_desplazamiento).
 259+ 9E4F
 260+ 9E4F 3A E0 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E52 A7               and a
 262+ 9E53 CC 47 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E56 28 30            jr z,Reinicia_el_movimiento
 264+ 9E58
 265+ 9E58 FE FF            cp $ff
 266+ 9E5A 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E5C
 268+ 9E5C FE FE            cp $fe
 269+ 9E5E CC CB 9E         call z,Fijamos_bucle
 270+ 9E61 28 25            jr z,Reinicia_el_movimiento
 271+ 9E63
 272+ 9E63 FE FD            cp $fd
 273+ 9E65 20 11            jr nz,1F
 274+ 9E67
 275+ 9E67              ; ---
 276+ 9E67              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E67
 278+ 9E67 3A E5 88         ld a,(Ctrl_2)
 279+ 9E6A CB 5F            bit 3,a
 280+ 9E6C 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E6E
 282+ 9E6E              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E6E
 284+ 9E6E 21 E5 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E71 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E73
 287+ 9E73 CD DC 9E         call Inicia_Repetimos_movimiento
 288+ 9E76 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E78              ; ---
 290+ 9E78
 291+ 9E78 FE 01        1 cp 1
 292+ 9E7A CA B5 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E7D
 294+ 9E7D 3D               dec a
 295+ 9E7E 32 E0 88         ld (Cola_de_desplazamiento),a
 296+ 9E81
 297+ 9E81 3A DE 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E84 32 DD 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E87              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E87 C9               ret
 301+ 9E88
 302+ 9E88              Reinicia_el_movimiento
 303+ 9E88
 304+ 9E88 3A E5 88         ld a,(Ctrl_2)
 305+ 9E8B CB 5F            bit 3,a
 306+ 9E8D 28 1B            jr z,2F
 307+ 9E8F
 308+ 9E8F              ; (Cola_de_desplazamiento)="254".
 309+ 9E8F
 310+ 9E8F 21 DF 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9E92 35               dec (hl)
 312+ 9E93 20 15            jr nz,2F
 313+ 9E95
 314+ 9E95              ; Fin de las repeticiones del último movimiento.
 315+ 9E95
 316+ 9E95 21 E5 88         ld hl,Ctrl_2
 317+ 9E98 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9E9A
 319+ 9E9A 2A D7 88         ld hl,(Puntero_mov)
 320+ 9E9D 23               inc hl
 321+ 9E9E 23               inc hl
 322+ 9E9F 23               inc hl
 323+ 9EA0 22 D7 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9EA3              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9EA3 7E               ld a,(hl)
 326+ 9EA4 32 E0 88         ld (Cola_de_desplazamiento),a
 327+ 9EA7
 328+ 9EA7 C3 4F 9E         jp Cola
 329+ 9EAA
 330+ 9EAA CD E7 9E     2 call Inicia_Puntero_mov
 331+ 9EAD
 332+ 9EAD 21 E5 88         ld hl,Ctrl_2
 333+ 9EB0 CB 96            res 2,(hl)
 334+ 9EB2
 335+ 9EB2 C3 1F 9E         jp Movimiento
 336+ 9EB5
 337+ 9EB5              Siguiente_desplazamiento
 338+ 9EB5
 339+ 9EB5              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9EB5              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9EB5
 342+ 9EB5 21 E5 88         ld hl,Ctrl_2
 343+ 9EB8 CB 96            res 2,(hl)
 344+ 9EBA
 345+ 9EBA 2A D7 88         ld hl,(Puntero_mov)
 346+ 9EBD 23               inc hl
 347+ 9EBE 23               inc hl
 348+ 9EBF 22 D7 88         ld (Puntero_mov),hl
 349+ 9EC2
 350+ 9EC2 7E               ld a,(hl)
 351+ 9EC3 A7               and a
 352+ 9EC4 CC 47 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9EC7 CA 88 9E         jp z,Reinicia_el_movimiento
 354+ 9ECA
 355+ 9ECA C9               ret
 356+ 9ECB
 357+ 9ECB              ; Subrutinas -----------------------------------------
 358+ 9ECB              ; ---------- --------- --------- ---------- ----------
 359+ 9ECB              ;
 360+ 9ECB              ;   24/07/23
 361+ 9ECB              ;
 362+ 9ECB              ;   Fijamos_bucle
 363+ 9ECB              ;
 364+ 9ECB              ;
 365+ 9ECB
 366+ 9ECB              Fijamos_bucle
 367+ 9ECB
 368+ 9ECB 3A DB 88         ld a,(Incrementa_puntero)
 369+ 9ECE 3C               inc a
 370+ 9ECF 32 DC 88         ld (Incrementa_puntero_backup),a
 371+ 9ED2
 372+ 9ED2 CD 47 9F         call Incrementa_Puntero_indice_mov
 373+ 9ED5 2A D5 88         ld hl,(Puntero_indice_mov)
 374+ 9ED8 22 D9 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9EDB C9               ret
 376+ 9EDC
 377+ 9EDC              ; ---------- --------- --------- ---------- ----------
 378+ 9EDC              ;
 379+ 9EDC              ;   07/7/23
 380+ 9EDC              ;
 381+ 9EDC              ;   Inicia_Repetimos_movimiento
 382+ 9EDC              ;
 383+ 9EDC              ;
 384+ 9EDC
 385+ 9EDC              Inicia_Repetimos_movimiento
 386+ 9EDC
 387+ 9EDC              ; Iniciamos (Repetimos_movimiento).
 388+ 9EDC
 389+ 9EDC DD 2A D7 88      ld ix,(Puntero_mov)
 390+ 9EE0 DD 7E 02         ld a,(ix+2)
 391+ 9EE3 32 DF 88         ld (Repetimos_movimiento),a
 392+ 9EE6
 393+ 9EE6 C9               ret
 394+ 9EE7
 395+ 9EE7              ; ---------- --------- --------- ---------- ----------
 396+ 9EE7              ;
 397+ 9EE7              ;   26/6/23
 398+ 9EE7              ;
 399+ 9EE7              ;   Inicia_Puntero_mov
 400+ 9EE7              ;
 401+ 9EE7              ;
 402+ 9EE7
 403+ 9EE7 2A D5 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9EEA 5E               ld e,(hl)
 405+ 9EEB 23               inc hl
 406+ 9EEC 56               ld d,(hl)
 407+ 9EED EB               ex de,hl
 408+ 9EEE 22 D7 88         ld (Puntero_mov),hl
 409+ 9EF1 C9               ret
 410+ 9EF2
 411+ 9EF2              ; ---------- --------- --------- ---------- ----------
 412+ 9EF2              ;
 413+ 9EF2              ;   27/06/23
 414+ 9EF2              ;
 415+ 9EF2              ;   Aplica_movimiento.
 416+ 9EF2
 417+ 9EF2              Aplica_desplazamiento
 418+ 9EF2
 419+ 9EF2              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9EF2
 421+ 9EF2 2A D7 88         ld hl, (Puntero_mov)
 422+ 9EF5
 423+ 9EF5 7E               ld a,(hl)
 424+ 9EF6 E6 F0            and $f0
 425+ 9EF8 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9EF9
 427+ 9EF9 CB 7E            bit 7,(hl)
 428+ 9EFB 28 03            jr z,1F
 429+ 9EFD CD 1D 99         call Mov_up
 430+ 9F00 2A D7 88     1 ld hl, (Puntero_mov)
 431+ 9F03 CB 76            bit 6,(hl)
 432+ 9F05 28 03            jr z,2F
 433+ 9F07 CD EC 98         call Mov_down
 434+ 9F0A 2A D7 88     2 ld hl, (Puntero_mov)
 435+ 9F0D CB 6E            bit 5,(hl)
 436+ 9F0F 28 03            jr z,3F
 437+ 9F11 CD 7E 9A         call Mov_left
 438+ 9F14 2A D7 88     3 ld hl, (Puntero_mov)
 439+ 9F17 CB 66            bit 4,(hl)
 440+ 9F19 C8               ret z
 441+ 9F1A CD 60 99         call Mov_right
 442+ 9F1D C9               ret
 443+ 9F1E
 444+ 9F1E              ; ---------- --------- --------- ---------- ----------
 445+ 9F1E              ;
 446+ 9F1E              ;   26/06/23
 447+ 9F1E              ;
 448+ 9F1E              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F1E
 450+ 9F1E              Ajusta_velocidad_desplazamiento
 451+ 9F1E
 452+ 9F1E              ; 1er byte de la cadena de movimiento.
 453+ 9F1E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F1E
 455+ 9F1E CD 3C 9F         call Extrae_nibble_alto
 456+ 9F21
 457+ 9F21 32 C1 88         ld (Vel_up),a
 458+ 9F24 79               ld a,c
 459+ 9F25 E6 0F            and $0f
 460+ 9F27 32 C2 88         ld (Vel_down),a
 461+ 9F2A
 462+ 9F2A              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F2A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F2A
 465+ 9F2A 23               inc hl
 466+ 9F2B CD 3C 9F         call Extrae_nibble_alto
 467+ 9F2E
 468+ 9F2E 32 BF 88         ld (Vel_left),a
 469+ 9F31 79               ld a,c
 470+ 9F32 E6 0F            and $0f
 471+ 9F34 32 C0 88         ld (Vel_right),a
 472+ 9F37
 473+ 9F37              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F37
 475+ 9F37 23               inc hl
 476+ 9F38 22 D7 88         ld (Puntero_mov),hl
 477+ 9F3B C9               ret
 478+ 9F3C
 479+ 9F3C 06 04        Extrae_nibble_alto ld b,4
 480+ 9F3E 7E               ld a,(hl)
 481+ 9F3F 4F               ld c,a
 482+ 9F40 E6 F0            and $f0
 483+ 9F42 CB 3F        1 srl a
 484+ 9F44 10 FC            djnz 1B
 485+ 9F46 C9               ret
 486+ 9F47
 487+ 9F47              ; ---------- --------- --------- ---------- ----------
 488+ 9F47              ;
 489+ 9F47              ;   5/7/23
 490+ 9F47              ;
 491+ 9F47              ;   Incrementa_Puntero_indice_mov
 492+ 9F47
 493+ 9F47              Incrementa_Puntero_indice_mov
 494+ 9F47
 495+ 9F47 21 DB 88         ld hl,Incrementa_puntero
 496+ 9F4A 34               inc (hl)
 497+ 9F4B
 498+ 9F4B 2A D5 88         ld hl,(Puntero_indice_mov)
 499+ 9F4E 01 02 00         ld bc,2
 500+ 9F51 A7               and a
 501+ 9F52 09               add hl,bc
 502+ 9F53 22 D5 88         ld (Puntero_indice_mov),hl
 503+ 9F56
 504+ 9F56 7E               ld a,(hl)
 505+ 9F57 A7               and a
 506+ 9F58
 507+ 9F58              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F58
 509+ 9F58              ;    jr z,$
 510+ 9F58
 511+ 9F58              ;! Reinicia el Patrón de movimiento.
 512+ 9F58
 513+ 9F58 CC 5D 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F5B
 515+ 9F5B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F5C
 517+ 9F5C C9               ret
 518+ 9F5D
 519+ 9F5D
 520+ 9F5D              ; ---------- --------- --------- ---------- ----------
 521+ 9F5D              ;
 522+ 9F5D              ;   24/07/23
 523+ 9F5D              ;
 524+ 9F5D              ;   Inicializa_Puntero_indice_mov
 525+ 9F5D
 526+ 9F5D              Inicializa_Puntero_indice_mov
 527+ 9F5D
 528+ 9F5D              ; Existe etiqueta de bucle principal???
 529+ 9F5D
 530+ 9F5D 2A D9 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F60 24               inc h
 532+ 9F61 25               dec h
 533+ 9F62 28 05            jr z,2F
 534+ 9F64
 535+ 9F64 22 D5 88         ld (Puntero_indice_mov),hl
 536+ 9F67 18 14            jr 3F
 537+ 9F69
 538+ 9F69              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F69
 540+ 9F69 3A DB 88     2 ld a,(Incrementa_puntero)
 541+ 9F6C 47               ld b,a
 542+ 9F6D
 543+ 9F6D 2A D5 88         ld hl,(Puntero_indice_mov)
 544+ 9F70 2B           1 dec hl
 545+ 9F71 2B               dec hl
 546+ 9F72 10 FC            djnz 1B
 547+ 9F74 22 D5 88         ld (Puntero_indice_mov),hl
 548+ 9F77
 549+ 9F77 AF               xor a
 550+ 9F78 32 DB 88         ld (Incrementa_puntero),a
 551+ 9F7B 18 06            jr 4F
 552+ 9F7D
 553+ 9F7D 3A DC 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F80 32 DB 88         ld (Incrementa_puntero),a
 555+ 9F83 C9           4 ret
 556+ 9F84
 557+ 9F84
 558+ 9F84
# file closed: Patrones_de_mov.asm
1518  9F84              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F84              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F84              ;
   3+ 9F84              ;	27/10/23
   4+ 9F84              ;
   5+ 9F84              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F84
   7+ 9F84              ;	ADC HL,SP	LD (addr),SP
   8+ 9F84              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F84              ;	ADD IX,SP	LD SP,nn
  10+ 9F84              ; 	ADD IY,SP	LD SP,HL
  11+ 9F84              ;				LD SP,IX
  12+ 9F84              ;	DEC SP		LD SP,IY
  13+ 9F84
  14+ 9F84              ;	EX (SP),HL
  15+ 9F84              ;	EX (SP),IX
  16+ 9F84              ;	EX (SP),IY
  17+ 9F84
  18+ 9F84              ;	INC SP
  19+ 9F84
  20+ 9F84                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 F8 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 CA 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A E7 88         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 00 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A D4 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 04 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A FE 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A E7 88         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 00 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A D4 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 04 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B F8 88      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 FE 88     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B F8 88  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC FB               ei
 107+ 7FFD C9               ret
 108+ 7FFE
 109+ 7FFE              ; -----------------------------------------------------------------------------
 110+ 7FFE              ;
 111+ 7FFE              ;   21/11/23
 112+ 7FFE
 113+ 7FFE              Limpia_y_reinicia_Stack_Snapshot
 114+ 7FFE
 115+ 7FFE              ;   Limpia Album_de_fotos.
 116+ 7FFE
 117+ 7FFE 2A FE 88         ld hl,(Stack_snapshot)
 118+ 8001 7D               ld a,l
 119+ 8002 A7               and a
 120+ 8003 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8004
 122+ 8004 47               ld b,a
 123+ 8005 04               inc b
 124+ 8006
 125+ 8006 36 00        1 ld (hl),0
 126+ 8008 2D               dec l
 127+ 8009 10 FB            djnz 1B
 128+ 800B
 129+ 800B              ;   Reinicializa (Stack_snapshot).
 130+ 800B
 131+ 800B AF               xor a
 132+ 800C 32 FE 88         ld (Stack_snapshot),a
 133+ 800F
 134+ 800F C9               ret
# file closed: Guarda_foto_registros.asm
1519  8010
1520  8010              	SAVESNA "Pruebas.sna", START
1521  8010
1522  8010
1523  8010
1524  8010
# file closed: Banco_de_pruebas.asm
