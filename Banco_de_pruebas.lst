# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 48 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  9+  83E8              ;                    _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AF 84        	defw Entidad_1
 98+  846A EA 84        	defw Entidad_2
 99+  846C 25 85        	defw Entidad_3
100+  846E 60 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
128+  848E
129+  848E 00 00        	db 0,0											; Variables_de_borrado
130+  8490 00 00        	defw 0											;	" " " " " " "
131+  8492 00 00        	defw 0											;	" " " " " " "
132+  8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
133+  8498
134+  8498 00 00        	db 0,0											; Variables_de_pintado
135+  849A 00 00        	defw 0											;	" " " " " " "
136+  849C 00 00        	defw 0											;	" " " " " " "
137+  849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
138+  84A2
139+  84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
140+  84A4
141+  84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
142+  84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
143+  84AB
144+  84AB 00           	db 0 											; (Columnas).
145+  84AC 00 00        	defw 0											; (Limite_horizontal).
146+  84AE 00           	db 0											; (Limite_vertical).
147+  84AF
148+  84AF              ; ---------- ---------- ---------- ---------- ----------
149+  84AF
150+  84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
151+  84B1 00 00        	defw 0											; (Posicion_actual).
152+  84B3 00 00        	defw 0 											; (Puntero_objeto).
153+  84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
154+  84B8
155+  84B8 00           	db %00000000 									; (Attr).
156+  84B9
157+  84B9 00 00        	defw 0											; (Indice_Sprite_der).
158+  84BB 00 00        	defw 0											; (Indice_Sprite_izq).
159+  84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
160+  84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
161+  84C1
162+  84C1 00 00        	defw 0											; (Posicion_inicio).
163+  84C3 00           	db 0											; (Cuad_objeto).
164+  84C4
165+  84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
166+  84C8
167+  84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
168+  84C9
169+  84C9 00 00        	db 0,0										    ; Variables_de_borrado
170+  84CB 00 00        	defw 0											;	" " " " " " "
171+  84CD 00 00        	defw 0											;	" " " " " " "
172+  84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
173+  84D3
174+  84D3 00 00        	db 0,0											; Variables_de_pintado
175+  84D5 00 00        	defw 0											;	" " " " " " "
176+  84D7 00 00        	defw 0											;	" " " " " " "
177+  84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
178+  84DD
179+  84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
180+  84DF
181+  84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
182+  84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
183+  84E6
184+  84E6 00           	db 0 											; (Columnas).
185+  84E7 00 00        	defw 0											; (Limite_horizontal).
186+  84E9 00           	db 0											; (Limite_vertical).
187+  84EA
188+  84EA              ; ---------- ---------- ---------- ---------- ----------
189+  84EA
190+  84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
191+  84EC 00 00        	defw 0                                          ; (Posicion_actual).
192+  84EE 00 00        	defw 0											; (Puntero_objeto).
193+  84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
194+  84F3
195+  84F3 02           	db %00000010									; (Attr).
196+  84F4
197+  84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
198+  84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
199+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
200+  84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
201+  84FC
202+  84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
203+  84FE 03           	db 3											; (Cuad_objeto).
204+  84FF
205+  84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
206+  8503
207+  8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
208+  8504
209+  8504 00 00        	db 0,0											; Variables_de_borrado
210+  8506 00 00        	defw 0										 	;	" " " " " " "
211+  8508 00 00        	defw 0											;	" " " " " " "
212+  850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
213+  850E
214+  850E 00 00        	db 0,0											; Variables_de_pintado
215+  8510 00 00        	defw 0											;	" " " " " " "
216+  8512 00 00        	defw 0											;	" " " " " " "
217+  8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
218+  8518
219+  8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
220+  851A
221+  851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
222+  851E
223+  851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
224+  8521
225+  8521 00           	db 0 											; (Columnas).
226+  8522 00 00        	defw 0											; (Limite_horizontal).
227+  8524 00           	db 0											; (Limite_vertical).
228+  8525
229+  8525              ; ---------- ---------- ---------- ---------- ----------
230+  8525
231+  8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
232+  8527 00 00        	defw 0                                          ; (Posicion_actual).
233+  8529 00 00        	defw 0											; (Puntero_objeto).
234+  852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
235+  852E
236+  852E 04           	db %00000100									; (Attr).
237+  852F
238+  852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
239+  8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
240+  8533
241+  8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
242+  8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
243+  8537
244+  8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
245+  8539 01           	db 1											; (Cuad_objeto).
246+  853A
247+  853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
248+  853E
249+  853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
250+  853F
251+  853F 00 00        	db 0,0											; Variables_de_borrado
252+  8541 00 00        	defw 0										 	;	" " " " " " "
253+  8543 00 00        	defw 0											;	" " " " " " "
254+  8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
255+  8549
256+  8549 00 00        	db 0,0											; Variables_de_pintado
257+  854B 00 00        	defw 0											;	" " " " " " "
258+  854D 00 00        	defw 0											;	" " " " " " "
259+  854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
260+  8553
261+  8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
262+  8555
263+  8555 E1 95 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
264+  8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
265+  855C
266+  855C 00           	db 0 											; (Columnas).
267+  855D 00 00        	defw 0											; (Limite_horizontal).
268+  855F 00           	db 0											; (Limite_vertical).
269+  8560
270+  8560              ; ---------- ---------- ---------- ---------- ----------
271+  8560
272+  8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
273+  8562 00 00        	defw 0                                          ; (Posicion_actual).
274+  8564 00 00        	defw 0 											; (Puntero_objeto).
275+  8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
276+  8569
277+  8569 01           	db %00000001									; (Attr).
278+  856A
279+  856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
280+  856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
281+  856E
282+  856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
283+  8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
284+  8572
285+  8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
286+  8574 00           	db 0											; (Cuad_objeto).
287+  8575
288+  8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
289+  8579
290+  8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
291+  857A
292+  857A 00 00        	db 0,0											; Variables_de_borrado
293+  857C 00 00        	defw 0										 	;	" " " " " " "
294+  857E 00 00        	defw 0											;	" " " " " " "
295+  8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
296+  8584
297+  8584 00 00        	db 0,0											; Variables_de_pintado
298+  8586 00 00        	defw 0											;	" " " " " " "
299+  8588 00 00        	defw 0											;	" " " " " " "
300+  858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
301+  858E
302+  858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
303+  8590
304+  8590 D1 95 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
305+  8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
306+  8597
307+  8597 00           	db 0 											; (Columnas).
308+  8598 00 00        	defw 0											; (Limite_horizontal).
309+  859A 00           	db 0											; (Limite_vertical).
310+  859B
# file closed: Entidades_y_disparos.asm
 21   859B
 22   859B              ; ******************************************************************************************************************************************************************************************
 23   859B              ; Constantes.
 24   859B              ; ******************************************************************************************************************************************************************************************
 25   859B              ;
 26   859B              ; 8/11/22
 27   859B              ;
 28   859B              ; Constantes generales.
 29   859B              ;
 30   859B
 31   859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   859B
 36   859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   859B              ;                               				        ; De momento situamos este almacén en $7000.
 39   859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   859B              ;                               				        ; De momento situamos este almacén en $7060.
 42   859B
 43   859B              ; ******************************************************************************************************************************************************************************************
 44   859B              ; Variables.
 45   859B              ; ******************************************************************************************************************************************************************************************
 46   859B              ;
 47   859B              ; 10/11/22
 48   859B              ;
 49   859B              ; Variables de DRAW. (Motor principal).
 50   859B              ;
 51   859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   859B
 53   859B 02           Filas db 2												; Filas. [DRAW]
 54   859C 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   85A3
 60   85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 61   85A3
 62   85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   85A4 04           Attr db %00000100										; Atributos de la entidad:
 66   85A5
 67   85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A5              ;
 69   85A5              ;	COLORES: 0 ..... NEGRO
 70   85A5              ;    		 1 ..... AZUL
 71   85A5              ; 			 2 ..... ROJO
 72   85A5              ;			 3 ..... MAGENTA
 73   85A5              ; 			 4 ..... VERDE
 74   85A5              ; 			 5 ..... CIAN
 75   85A5              ;			 6 ..... AMARILLO
 76   85A5              ; 			 7 ..... BLANCO
 77   85A5
 78   85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A9 00 00        Puntero_DESPLZ_der defw 0
 81   85AB 00 00        Puntero_DESPLZ_izq defw 0
 82   85AD
 83   85AD 41 47        Posicion_inicio defw $4741								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85B0
 86   85B0              ; Variables de objeto. (Características).
 87   85B0
 88   85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85B4
 93   85B4 00           Impacto db 0											; Impacto. "1" existe impacto en la entidad.
 94   85B5
 95   85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 96   85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 97   85B9 00 00        	defw 0
 98   85BB 00 00 00 00  	db 0,0,0,0
 99   85BF
100   85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
101   85C1 00 00        	defw 0
102   85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
103   85C5 00 00 00 00  	db 0,0,0,0
104   85C9
105   85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
106   85C9
107   85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
108   85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
109   85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
110   85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
111   85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
112   85CA              ;
113   85CA              ; 														DESCRIPCIÖN:
114   85CA              ;
115   85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
116   85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
117   85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
118   85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
119   85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
120   85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
121   85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
122   85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
123   85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
124   85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
125   85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
126   85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
127   85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
128   85CA              ;
129   85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
130   85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
131   85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
132   85CA
133   85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
134   85CB
135   85CB              ; Movimiento.
136   85CB
137   85CB DB 95        Puntero_indice_mov defw Indice_mov_Escaloncitos_derecha_abajo ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
138   85CD 00 00        Puntero_mov defw 0
139   85CF 00           Contador_db_mov db 0
140   85D0 00           Incrementa_puntero db 0
141   85D1 00           Repetimos_db db 0
142   85D2
143   85D2              ; Variables de funcionamiento. [DRAW].
144   85D2
145   85D2 00           Columnas db 0
146   85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
147   85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
148   85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
149   85D6
150   85D6              ; 59 Bytes por entidad.
151   85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
152   85D6              ;					         		---------;      ;---------
153   85D6
154   85D6
155   85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
156   85D6
157   85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
158   85D7
159   85D7              ;														DESCRIPCIÓN:
160   85D7              ;
161   85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
162   85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
163   85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
164   85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
165   85D7
166   85D7
167   85D7
168   85D7
169   85D7
170   85D7
171   85D7              ; Gestión de ENTIDADES.
172   85D7
173   85D7 00 00        Puntero_store_entidades defw 0
174   85D9 00 00        Puntero_restore_entidades defw 0
175   85DB 00 00        Indice_restore defw 0
176   85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
177   85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
178   85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
179   85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
180   85DF              ;														; _ (Numero_de_malotes)="0".
181   85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
182   85E1              ;														; _variable para almacenar lo posición del puntero_
183   85E1              ; 														; _de pila, SP.
184   85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
185   85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
186   85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
187   85E5              ;														; _el snapshot de los registros de la siguiente entidad.
188   85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
189   85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
190   85E7              ;														; _el snapshot de los registros del siguiente disparo.
191   85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
192   85E7
193   85E7              ; Gestión de Disparos.
194   85E7
195   85E7 00           Numero_de_disparotes db 0
196   85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
197   85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
198   85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
199   85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
200   85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
201   85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
202   85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
203   85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
204   85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
205   85F3
206   85F3
207   85F3              ; Gestión de FRAMES.
208   85F3
209   85F3 00           Switch db 0
210   85F4
211   85F4              ; Variables de Raster y localización en pantalla.
212   85F4
213   85F4 00 FF        Temp_Raster defw $ff00
214   85F6
215   85F6              ; Rutina principal *************************************************************************************************************************************************************************
216   85F6              ;
217   85F6              ;	14/11/22
218   85F6
219   85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
220   85F9
221   85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
222   85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
223   85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
224   85FF F3           	DI
225   8600
226   8600 3E 07        	ld a,%00000111
227   8602 CD F5 91     	call Cls
228   8605
229   8605              ;	call Pinta_FILAS
230   8605
231   8605 CD 5E 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
232   8608
233   8608 21 DD 85     	ld hl,Numero_de_entidades
234   860B 46           	ld b,(hl)
235   860C 04           	inc b
236   860D 05           	dec b
237   860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
238   8610
239   8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
240   8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
241   8610              ;	Pintamos el resto de entidades:
242   8610
243   8610 CD 57 87     	call Inicia_punteros_de_entidades
244   8613
245   8613              ;	INICIA ENTIDADES!!!!!
246   8613
247   8613 C5           1 push bc  												; Guardo el contador de entidades.
248   8614 CD B1 87      	call Inicia_Puntero_objeto
249   8617 CD 45 8C     	call Draw
250   861A CD A0 7F     	call Guarda_foto_registros
251   861D CD F9 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
252   8620 C1           	pop bc
253   8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
254   8623
255   8623              ; 	INICIA AMADEUS!!!!!
256   8623
257   8623 CD 3A 88     3 call Restore_Amadeus
258   8626 CD B1 87     	call Inicia_Puntero_objeto
259   8629 CD 45 8C     	call Draw
260   862C CD A0 7F     	call Guarda_foto_registros
261   862F CD 4C 88     	call Store_Amadeus
262   8632
263   8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
264   8632
265   8632 CD 6D 87     	call Inicia_Puntero_Disparo_Entidades
266   8635 CD 74 87     	call Inicia_Puntero_Disparo_Amadeus
267   8638
268   8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
269   8638
270   8638 CD 57 87     	call Inicia_punteros_de_entidades
271   863B CD 28 88     	call Restore_Primera_entidad
272   863E
273   863E 3A DD 85     	ld a,(Numero_de_entidades)
274   8641 3C           	inc a
275   8642 32 DE 85     	ld (Numero_de_malotes),a
276   8645
277   8645 FB           2 ei
278   8646 18 FD        	jr 2B
279   8648
280   8648              ; -----------------------------------------------------------------------------------
281   8648
282   8648              Frame
283   8648
284   8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
285   8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
286   8648
287   8648 3E 02            ld a,2
288   864A D3 FE            out ($fe),a
289   864C CD 49 8F     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
290   864F CD 82 8F     	call Extrae_foto_disparos
291   8652 3E 01            ld a,1
292   8654 D3 FE            out ($fe),a
293   8656
294   8656              ; ----------------------------------------------------------------------
295   8656
296   8656              ;	Existe colisión?????
297   8656
298   8656 3A EC 85     	ld a,(Impacto2)
299   8659 A7           	and a
300   865A 28 02        	jr z,5F
301   865C
302   865C              ; A="1" Impacto en entidad por disparo de Amadeus.
303   865C              ; A="2"	Impacto en Amadeus por disparo en entidad.
304   865C
305   865C 18 FE        	jr $
306   865E
307   865E AF           5 xor a
308   865F 32 EC 85     	ld (Impacto2),a										; Flag (Impacto) a "0".
309   8662
310   8662 CD D7 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
311   8665 CD F5 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
312   8668
313   8668 21 00 70     	ld hl,Album_de_fotos
314   866B 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
315   866E              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
316   866E 3A DD 85         ld a,(Numero_de_entidades)
317   8671 47               ld b,a
318   8672 A7           	and a
319   8673 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
320   8675
321   8675 C5           2 push bc
322   8676 CD C2 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
323   8679
324   8679 3A C9 85     	ld a,(Ctrl_0)
325   867C CB 67        	bit 4,a
326   867E 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
327   8680
328   8680              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
329   8680              ; Las entidades sólo generan disparo cuando se mueven.
330   8680              ; 16/02/23.
331   8680              ; [[[
332   8680 CD 95 88     	call Detecta_disparo_entidad
333   8683              ; ]]]
334   8683 CD 1E 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
335   8686
336   8686 21 C9 85     1 ld hl,Ctrl_0
337   8689 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
338   868B AF           	xor a
339   868C 32 CA 85     	ld (Obj_dibujado),a
340   868F
341   868F CD F9 87     6 call Store_Restore_entidades
342   8692 C1           	pop bc
343   8693 10 E0        	djnz 2B
344   8695
345   8695              ; Tras la gestión de las entidades, ... AMADEUS.
346   8695
347   8695 CD 3A 88     4 call Restore_Amadeus
348   8698 CD EF 86     	call Mov_Amadeus
349   869B 3A C9 85     	ld a,(Ctrl_0)
350   869E CB 67        	bit 4,a
351   86A0 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
352   86A2 CD 1E 87     	call Guarda_foto_entidad_a_pintar
353   86A5
354   86A5 21 C9 85     3 ld hl,Ctrl_0
355   86A8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
356   86AA AF           	xor a
357   86AB 32 CA 85     	ld (Obj_dibujado),a
358   86AE CD 4C 88     	call Store_Amadeus
359   86B1
360   86B1              ; -----
361   86B1
362   86B1 CD 57 87     	call Inicia_punteros_de_entidades
363   86B4 CD 28 88     	call Restore_Primera_entidad
364   86B7
365   86B7              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
366   86B7
367   86B7 CD 7B 87     	call Calcula_numero_de_malotes
368   86BA CD 93 87     	call Calcula_numero_de_disparotes
369   86BD
370   86BD 3E 04        	ld a,4
371   86BF D3 FE        	out ($fe),a
372   86C1 C9           	ret
373   86C2
374   86C2              ; --------------------------------------------------------------------------------------------------------------
375   86C2              ;
376   86C2              ;	27/03/23
377   86C2
378   86C2              Mov_obj
379   86C2
380   86C2              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
381   86C2
382   86C2 AF           	xor a
383   86C3 32 CA 85     	ld (Obj_dibujado),a
384   86C6 CD 28 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
385   86C9              ;														; Obj_dibujado="0".
386   86C9              ; Movemos Entidades malignas.
387   86C9
388   86C9 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
389   86CC 24           	inc h                                               ; Salimos de la rutina.
390   86CD 25           	dec h
391   86CE C8           	ret z
392   86CF
393   86CF CD E3 95     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
394   86D2
395   86D2 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
396   86D5 CB 67        	bit 4,a
397   86D7 C8           	ret z
398   86D8
399   86D8              ; Ha habido desplazamiento de la entidad maligna. :-).
400   86D8              ; Ha llegado a zona de AMADEUS ???
401   86D8
402   86D8 3A A2 85     	ld a,(Coordenada_y)
403   86DB FE 14        	cp $14
404   86DD D4 51 8A     	call nc, Detecta_colision_nave_entidad
405   86E0
406   86E0              ; ---------
407   86E0
408   86E0 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
409   86E2 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
410   86E5 CD 28 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
411   86E8 CD 3F 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
412   86EB CD 0E 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
413   86EE C9           	ret													; _de la misma.
414   86EF
415   86EF              ; --------------------------------------------------------------------------------------------------------------
416   86EF              ;
417   86EF              ;	29/1/23
418   86EF
419   86EF              Mov_Amadeus
420   86EF
421   86EF AF           	xor a
422   86F0 32 CA 85     	ld (Obj_dibujado),a
423   86F3 CD 28 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
424   86F6              ;														; Obj_dibujado="0".
425   86F6              ; Movemos Amadeus.
426   86F6
427   86F6 CD 72 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
428   86F9 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
429   86FC CB 67        	bit 4,a
430   86FE C8           	ret z
431   86FF
432   86FF              ; ---------
433   86FF
434   86FF 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
435   8701 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
436   8704 CD 28 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
437   8707 CD 3F 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
438   870A CD 0E 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
439   870D C9           	ret													; _de la nave.
440   870E
441   870E              ; --------------------------------------------------------------------------------------------------------------
442   870E              ;
443   870E              ;	31/01/23
444   870E              ;
445   870E              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
446   870E
447   870E              Guarda_foto_entidad_a_borrar
448   870E
449   870E CD 1F 8F     	call Prepara_draw
450   8711 CD 59 8E     	call calcula_CColumnass
451   8714 CD 90 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
452   8717 CD E5 8E     	call Define_rutina_de_impresion
453   871A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
454   871D C9           	ret
455   871E
456   871E              ; --------------------------------------------------------------------------------------------------------------
457   871E              ;
458   871E              ;	31/01/23
459   871E              ;
460   871E              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
461   871E              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
462   871E
463   871E              Guarda_foto_entidad_a_pintar
464   871E
465   871E CD 4B 87     	call Repone_pintar
466   8721 CD 45 8C     	call Draw
467   8724 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
468   8727 C9           	ret
469   8728
470   8728              ; --------------------------------------------------------------------------------------------------------------
471   8728              ;
472   8728              ;
473   8728
474   8728 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
475   872B 3A CA 85     	ld a,(Obj_dibujado)
476   872E A7           	and a
477   872F 28 05        	jr z,1F
478   8731 11 BF 85     	ld de,Variables_de_pintado
479   8734 18 03        	jr 2F
480   8736 11 B5 85     1 ld de,Variables_de_borrado
481   8739 01 08 00     2 ld bc,8
482   873C ED B0        	ldir
483   873E C9           	ret
484   873F
485   873F              ; --------------------------------------------------------------------------------------------------------------
486   873F
487   873F 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
488   8742 11 9B 85     	ld de,Filas
489   8745 01 08 00     	ld bc,8
490   8748 ED B0        	ldir
491   874A C9           	ret
492   874B
493   874B 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
494   874E 11 9B 85     	ld de,Filas
495   8751 01 08 00     	ld bc,8
496   8754 ED B0        	ldir
497   8756 C9           	ret
498   8757
499   8757              ; *************************************************************************************************************************************************************
500   8757              ;
501   8757              ; 8/1/23
502   8757              ;
503   8757              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
504   8757              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
505   8757              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
506   8757
507   8757              ; Destruye HL y DE !!!!!
508   8757
509   8757              Inicia_punteros_de_entidades
510   8757
511   8757 21 68 84     	ld hl,Indice_de_entidades
512   875A CD AB 87         call Extrae_address
513   875D 22 D7 85         ld (Puntero_store_entidades),hl
514   8760 21 6A 84     	ld hl,Indice_de_entidades+2
515   8763 22 DB 85     	ld (Indice_restore),hl
516   8766 CD AB 87     	call Extrae_address
517   8769 22 D9 85     	ld (Puntero_restore_entidades),hl
518   876C C9               ret
519   876D
520   876D              ; *************************************************************************************************************************************************************
521   876D              ;
522   876D              ; 8/1/23
523   876D              ;
524   876D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
525   876D
526   876D 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
527   8770 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
528   8773 C9           	ret
529   8774 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
530   8777 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
531   877A C9           	ret
532   877B
533   877B              ; -------------------------------------------------------------------------------------------------------------
534   877B              ;
535   877B              ; 28/2/23
536   877B              ;
537   877B
538   877B              Calcula_numero_de_malotes
539   877B
540   877B 21 00 70     	ld hl,Album_de_fotos
541   877E EB           	ex de,hl
542   877F 2A E3 85     	ld hl,(Stack_snapshot)
543   8782
544   8782 06 00        	ld b,0
545   8784 7D           	ld a,l
546   8785 93           	sub e
547   8786 28 07        	jr z,1F
548   8788
549   8788              ; Nº de malotes no es "0".
550   8788
551   8788 D6 06        2 sub 6
552   878A 04           	inc b
553   878B A7           	and a
554   878C 20 FA        	jr nz,2B
555   878E 78           	ld a,b
556   878F
557   878F 32 DE 85     1 ld (Numero_de_malotes),a
558   8792 C9           	ret
559   8793
560   8793              ; -------------------------------------------------------------------------------------------------------------
561   8793              ;
562   8793              ; 28/2/23
563   8793              ;
564   8793
565   8793              Calcula_numero_de_disparotes
566   8793
567   8793 21 60 70     	ld hl,Album_de_fotos_disparos
568   8796 EB           	ex de,hl
569   8797 2A E5 85     	ld hl,(Stack_snapshot_disparos)
570   879A
571   879A 06 00        	ld b,0
572   879C 7D           	ld a,l
573   879D 93           	sub e
574   879E 28 07        	jr z,1F
575   87A0
576   87A0              ; Nº de malotes no es "0".
577   87A0
578   87A0 D6 06        2 sub 6
579   87A2 04           	inc b
580   87A3 A7           	and a
581   87A4 20 FA        	jr nz,2B
582   87A6 78           	ld a,b
583   87A7
584   87A7 32 E7 85     1 ld (Numero_de_disparotes),a
585   87AA C9           	ret
586   87AB              ; *************************************************************************************************************************************************************
587   87AB              ;
588   87AB              ; 20/10/22
589   87AB              ;
590   87AB              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
591   87AB              ;
592   87AB              ; Destruye el puntero y DE !!!!!
593   87AB
594   87AB 5E           Extrae_address ld e,(hl)
595   87AC 23           	inc hl
596   87AD 56           	ld d,(hl)
597   87AE 2B           	dec hl
598   87AF EB           	ex de,hl
599   87B0 C9           	ret
600   87B1
601   87B1              ; *************************************************************************************************************************************************************
602   87B1              ;
603   87B1              ;	7/2/23
604   87B1              ;
605   87B1              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
606   87B1              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
607   87B1              ;
608   87B1              ;   Destruye HL y BC !!!!!,
609   87B1              ;
610   87B1              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
611   87B1              ;					"0" ..... Izquierda.
612   87B1
613   87B1              Inicia_Puntero_objeto
614   87B1
615   87B1 3A AF 85     	ld a,(Cuad_objeto)
616   87B4 E6 01        	and 1
617   87B6 F5           	push af
618   87B7 CC D5 87     	call z,Inicia_puntero_objeto_izq
619   87BA F1           	pop af
620   87BB 28 2B        	jr z,1F
621   87BD CD C2 87     	call Inicia_puntero_objeto_der
622   87C0 18 26        	jr 1F
623   87C2
624   87C2              ; Arrancamos desde la parte izquierda de la pantalla.
625   87C2              ; Iniciamos (Indice_Sprite_der).
626   87C2
627   87C2 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
628   87C5 22 A9 85     	ld (Puntero_DESPLZ_der),hl
629   87C8 CD AB 87     	call Extrae_address
630   87CB 22 9F 85     	ld (Puntero_objeto),hl
631   87CE
632   87CE 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
633   87D1              ;	call Extrae_address
634   87D1 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
635   87D4 C9           	ret
636   87D5
637   87D5              ; Arrancamos desde la parte derecha de la pantalla.
638   87D5              ; Iniciamos (Indice_Sprite_izq).
639   87D5
640   87D5 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
641   87D8 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
642   87DB CD AB 87     	call Extrae_address
643   87DE 22 9F 85     	ld (Puntero_objeto),hl
644   87E1
645   87E1 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
646   87E4              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
647   87E4 22 A9 85     	ld (Puntero_DESPLZ_der),hl
648   87E7 C9           	ret
649   87E8
650   87E8              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
651   87E8
652   87E8 21 38 83     1 ld hl,Amadeus
653   87EB ED 4B 9F 85  	ld bc,(Puntero_objeto)
654   87EF B7 ED 42     	sub hl,bc
655   87F2 C0           	ret nz
656   87F3 21 C9 85     	ld hl,Ctrl_0
657   87F6 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
658   87F8 C9           	ret 												; _de nuestra nave en los extremos.
659   87F9
660   87F9              ; *************************************************************************************************************************************************************
661   87F9              ;
662   87F9              ;	8/1/23
663   87F9              ;
664   87F9              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
665   87F9              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
666   87F9
667   87F9              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
668   87F9              ;	_de la 2ª y 3ª entidad respectivamente.
669   87F9
670   87F9              Store_Restore_entidades
671   87F9
672   87F9 E5           	push hl
673   87FA D5           	push de
674   87FB C5            	push bc
675   87FC
676   87FC              ;	STORE !!!!!
677   87FC              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
678   87FC
679   87FC 21 9B 85     	ld hl,Filas
680   87FF ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
681   8803 01 3B 00     	ld bc,59
682   8806 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
683   8808
684   8808              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
685   8808
686   8808 2A D9 85     	ld hl,(Puntero_restore_entidades)
687   880B 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
688   880E 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
689   8811 01 3B 00     	ld bc,59
690   8814 ED B0        	ldir
691   8816
692   8816              ;	Incrementa RESTORE !!!!!
693   8816
694   8816 2A DB 85         ld hl,(Indice_restore)
695   8819 23           	inc hl
696   881A 23           	inc hl
697   881B 22 DB 85     	ld (Indice_restore),hl
698   881E CD AB 87         call Extrae_address
699   8821 22 D9 85         ld (Puntero_restore_entidades),hl
700   8824 C1           	pop bc
701   8825 D1           	pop de
702   8826 E1           	pop hl
703   8827 C9           	ret
704   8828
705   8828              ; **************************************************************************************************
706   8828              ;
707   8828              ;	29/10/22
708   8828              ;
709   8828              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
710   8828
711   8828 E5           Restore_Primera_entidad push hl
712   8829 D5           	push de
713   882A C5            	push bc
714   882B 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
715   882E 11 9B 85     	ld de,Filas
716   8831 01 3B 00     	ld bc,59
717   8834 ED B0        	ldir
718   8836 C1           	pop bc
719   8837 D1           	pop de
720   8838 E1           	pop hl
721   8839 C9           	ret
722   883A
723   883A              ; **************************************************************************************************
724   883A              ;
725   883A              ;	25/01/23
726   883A              ;
727   883A              ;	Restore_Amadeus
728   883A              ;
729   883A              ;	Cargamos en DRAW los parámetros de Amadeus.
730   883A              ;
731   883A
732   883A E5           Restore_Amadeus	push hl
733   883B D5           	push de
734   883C C5            	push bc
735   883D 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
736   8840 11 9B 85     	ld de,Filas
737   8843 01 3B 00     	ld bc,59
738   8846 ED B0        	ldir
739   8848 C1           	pop bc
740   8849 D1           	pop de
741   884A E1           	pop hl
742   884B C9           	ret
743   884C
744   884C              ; *************************************************************************************************************************************************************
745   884C              ;
746   884C              ;	29/01/23
747   884C              ;
748   884C              ;	Store_Amadeus
749   884C              ;
750   884C              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
751   884C              ;
752   884C
753   884C E5           Store_Amadeus push hl
754   884D D5           	push de
755   884E C5            	push bc
756   884F 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
757   8852 11 74 84     	ld de,Amadeus_db
758   8855 01 3B 00     	ld bc,59
759   8858 ED B0        	ldir
760   885A C1           	pop bc
761   885B D1           	pop de
762   885C E1           	pop hl
763   885D C9           	ret
764   885E
765   885E              ; **************************************************************************************************
766   885E
767   885E              ; Teclado.
768   885E
769   885E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
770   8860 DB FE        	in a,($fe)
771   8862 E6 01        	and $01
772   8864 28 02        	jr z,1f
773   8866 18 F6        	jr Pulsa_ENTER
774   8868 C9           1 ret
775   8869
776   8869              ; **************************************************************************************************
777   8869              ;
778   8869              ; Temporización.
779   8869
780   8869              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
781   8869              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
782   8869              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
783   8869              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
784   8869
785   8869              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
786   8869              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
787   8869              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
788   8869
789   8869              ; A partir de $4f61 no hace falta DELAY.
790   8869
791   8869              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
792   8869
793   8869 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
794   886C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
795   886D 78           	LD A,B
796   886E A7           	AND A
797   886F 20 FB        	JR NZ,wait
798   8871 C9           	RET
799   8872
800   8872              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
801   8872              ;
802   8872              ;	5/3/23
803   8872              ;
804   8872              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
805   8872
806   8872              Movimiento_Amadeus
807   8872
808   8872              ; Disparo.
809   8872
810   8872 3E F7        	ld a,$f7												; "5" para disparar.
811   8874 DB FE        	in a,($fe)
812   8876 E6 10        	and $10
813   8878 CC D2 88     	call z,Genera_disparo
814   887B
815   887B 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
816   887D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
817   887F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
818   8881 CC 83 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
819   8884 3E F7        	ld a,$f7
820   8886 DB FE        	in a,($fe)
821   8888 E6 01        	and $01
822   888A C8           	ret z
823   888B
824   888B 3E F7        	ld a,$f7
825   888D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
826   888F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
827   8891 CC 65 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
828   8894 C9           	ret
829   8895
830   8895              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
831   8895              ;
832   8895              ;	Rutina provisional para que los malotes cagen balas.
833   8895
834   8895 3E 7F        Detecta_disparo_entidad ld a,$7f
835   8897 DB FE        	in a,($fe)
836   8899 E6 01        	and 1
837   889B C0           	ret nz
838   889C CD D2 88     	call Genera_disparo
839   889F C9           	ret
840   88A0
841   88A0              ; Pinta indicadores de FILAS. ------------------------------------------------------
842   88A0
843   88A0 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
844   88A3
845   88A3              ; ----------
846   88A3 06 20        	ld b,32
847   88A5 E5           2 push hl
848   88A6 C5           	push bc
849   88A7              ; ----------
850   88A7
851   88A7 06 BF        	ld b,$bf
852   88A9 36 80        1 ld (hl),%10000000
853   88AB CD 2B 8F     	call NextScan
854   88AE 10 F9        	djnz 1B
855   88B0
856   88B0              ; ----------
857   88B0 C1           	pop bc
858   88B1 E1           	pop hl
859   88B2 2C           	inc l
860   88B3 10 F0        	djnz 2B
861   88B5              ; ----------
862   88B5
863   88B5 06 03        	ld b,3
864   88B7 21 00 47         ld hl,$4700
865   88BA CD C0 88     3 call Bucle_1
866   88BD 10 FB            djnz 3B
867   88BF C9               ret
868   88C0
869   88C0 C5           Bucle_1 push bc
870   88C1 E5                   push hl
871   88C2 D1                   pop de
872   88C3 13                   inc de
873   88C4 01 FF 00             ld bc,255
874   88C7 36 FF                ld (hl),255
875   88C9 ED B0                ldir
876   88CB 23                   inc hl
877   88CC 3E 07                ld a,7
878   88CE 84                   add a,h
879   88CF 67                   ld h,a
880   88D0 C1                   pop bc
881   88D1 C9                   ret
882   88D2
883   88D2              ; ---------------------------------------------------------------
884   88D2
885   88D2              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88D2              ; ******************************************************************************************************************************************************************************************
  2+  88D2              ;
  3+  88D2              ;   27/03/23
  4+  88D2              ;
  5+  88D2              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88D2              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88D2              ;
  8+  88D2              ;
  9+  88D2              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88D2              ;
 11+  88D2              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88D2              ;               _ hacen las entidades hacia abajo.
 13+  88D2              ;
 14+  88D2              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88D2              ;
 16+  88D2              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88D2              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88D2              ;
 19+  88D2              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88D2              ;           _ la bala.
 21+  88D2              ;
 22+  88D2              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88D2              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88D2              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88D2              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88D2              ;           _ en el momento de generarse la bala)).
 27+  88D2
 28+  88D2              Genera_disparo
 29+  88D2
 30+  88D2              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88D2              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88D2              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88D2              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88D2              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88D2              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88D2              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88D2
 38+  88D2              ; Exclusiones:
 39+  88D2
 40+  88D2 3A D2 85         ld a,(Columnas)
 41+  88D5 47               ld b,a
 42+  88D6 3A 9C 85         ld a,(Columns)
 43+  88D9 B8               cp b
 44+  88DA C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88DB
 46+  88DB              ; ----- ----- -----
 47+  88DB
 48+  88DB 3A C9 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
 49+  88DE CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
 50+  88E0 20 06            jr nz,16F
 51+  88E2
 52+  88E2 3A A2 85         ld a,(Coordenada_y)
 53+  88E5 FE 14            cp $14
 54+  88E7 D0               ret nc
 55+  88E8
 56+  88E8              ; ----- ----- -----
 57+  88E8
 58+  88E8              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 59+  88E8
 60+  88E8 21 F2 83     16 ld hl,ON_Disparo_2A
 61+  88EB CD AB 87         call Extrae_address
 62+  88EE 24               inc h
 63+  88EF 25               dec h
 64+  88F0 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
 65+  88F2
 66+  88F2 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 67+  88F5 A7               and a
 68+  88F6 ED 52            sbc hl,de
 69+  88F8 D0               ret nc
 70+  88F9
 71+  88F9              ; ----- ----- -----
 72+  88F9
 73+  88F9 21 00 80     14 ld hl,Indice_disparo
 74+  88FC 3A A3 85         ld a,(CTRL_DESPLZ)
 75+  88FF 4F               ld c,a
 76+  8900 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 77+  8902              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 78+  8902              ;                                            ""        ""       "f9", B="1"
 79+  8902              ;                                            ""        ""       "fb", B="2"
 80+  8902              ;                                            ""        ""       "fb", B="3"
 81+  8902 A7               and a
 82+  8903 28 10            jr z,1F
 83+  8905 E6 01            and 1
 84+  8907 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 85+  8908
 86+  8908 79               ld a,c
 87+  8909 16 F9            ld d,$f9
 88+  890B 23           2 inc hl
 89+  890C 23               inc hl
 90+  890D 04               inc b
 91+  890E BA               cp d
 92+  890F 28 04            jr z,1F
 93+  8911 14               inc d
 94+  8912 14               inc d
 95+  8913 18 F6            jr 2B
 96+  8915
 97+  8915 CD AB 87     1 call Extrae_address
 98+  8918 E5               push hl
 99+  8919 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
100+  891B DD 21 BE 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
101+  891F
102+  891F              ;	Se cumplen las condiciones necesarias para generar un disparo.
103+  891F              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
104+  891F
105+  891F 3A AF 85     	ld a,(Cuad_objeto)
106+  8922 FE 02            cp 2
107+  8924 38 60            jr c,3F
108+  8926 28 5E            jr z,3F
109+  8928
110+  8928              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
111+  8928
112+  8928 E6 01            and 1
113+  892A 28 2D            jr z,4F
114+  892C
115+  892C              ; 	Estamos en el 3er cuadrante de pantalla.
116+  892C              ; 	3er CUAD. ----- ----- ----- ----- -----
117+  892C              ;
118+  892C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
119+  892C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
120+  892C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
121+  892C
122+  892C 2A 9D 85     	ld hl,(Posicion_actual)
123+  892F
124+  892F              ;   Amadeus o entidad ???.
125+  892F
126+  892F 3A C9 85         ld a,(Ctrl_0)
127+  8932 CB 77            bit 6,a
128+  8934 28 0D            jr z,8F
129+  8936
130+  8936              ; 	Dispara Amadeus.
131+  8936
132+  8936 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
133+  8938 CD 3A 8F         call PreviousScan
134+  893B CD 3A 8F         call PreviousScan
135+  893E
136+  893E              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
137+  893E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
138+  893E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
139+  893E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
140+  893E
141+  893E CD B0 89         call Ajusta_disparo_parte_izquierda
142+  8941 18 0E            jr 10F
143+  8943
144+  8943              ; 	Dispara Entidad.
145+  8943
146+  8943 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
147+  8945
148+  8945              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
149+  8945              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
150+  8945
151+  8945 C5               push bc
152+  8946 06 10            ld b,16
153+  8948 CD 2B 8F     9 call NextScan
154+  894B 10 FB            djnz 9B
155+  894D C1               pop bc
156+  894E
157+  894E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
158+  894E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
159+  894E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
160+  894E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
161+  894E
162+  894E CD B0 89         call Ajusta_disparo_parte_izquierda
163+  8951
164+  8951 CD 25 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
165+  8954              ;                                                   ; _al generar el disparo.
166+  8954
167+  8954              ; 	LLegados a este punto tendremos:
168+  8954              ;
169+  8954              ;       Puntero_objeto_disparo en IY.
170+  8954              ;       Rutinas_de_impresion en IX.
171+  8954              ;       Puntero_de_impresion en HL.
172+  8954              ;       Impacto/Dirección en BC.
173+  8954
174+  8954 CD B8 89         call Almacena_disparo
175+  8957 18 4F            jr 6F                                           ; RET.
176+  8959
177+  8959
178+  8959              ; 	Estamos en el 4º cuadrante de pantalla.
179+  8959              ; 	4º CUAD. ----- ----- ----- ----- -----
180+  8959              ;
181+  8959              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
182+  8959              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
183+  8959              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
184+  8959
185+  8959 2A 9D 85     4 ld hl,(Posicion_actual)
186+  895C
187+  895C              ;   Amadeus o entidad ???.
188+  895C
189+  895C 3A C9 85         ld a,(Ctrl_0)
190+  895F CB 77            bit 6,a
191+  8961 28 0D            jr z,11F
192+  8963
193+  8963              ; 	Dispara Amadeus.
194+  8963
195+  8963 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
196+  8965 CD 3A 8F         call PreviousScan
197+  8968 CD 3A 8F         call PreviousScan
198+  896B
199+  896B              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
200+  896B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
201+  896B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
202+  896B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
203+  896B
204+  896B CD A9 89         call Ajusta_disparo_parte_derecha
205+  896E 18 0E            jr 13F
206+  8970
207+  8970              ; 	Dispara Entidad.
208+  8970
209+  8970 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
210+  8972
211+  8972              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
212+  8972              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
213+  8972
214+  8972 C5               push bc
215+  8973
216+  8973 06 10            ld b,16
217+  8975 CD 2B 8F     12 call NextScan
218+  8978 10 FB            djnz 12B
219+  897A
220+  897A C1               pop bc
221+  897B
222+  897B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
223+  897B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
224+  897B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
225+  897B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
226+  897B
227+  897B CD A9 89         call Ajusta_disparo_parte_derecha
228+  897E
229+  897E CD 25 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
230+  8981              ;                                                     ; _al generar el disparo.
231+  8981
232+  8981              ; LLegados a este punto tendremos:
233+  8981              ;
234+  8981              ;       Puntero_objeto_disparo en IY.
235+  8981              ;       Rutinas_de_impresion en IX.
236+  8981              ;       Puntero_de_impresion en HL.
237+  8981              ;       Impacto/Dirección en BC.
238+  8981
239+  8981 CD B8 89         call Almacena_disparo
240+  8984 18 22            jr 6F                                           ; RET.
241+  8986
242+  8986              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
243+  8986
244+  8986 28 11        3 jr z,5F
245+  8988
246+  8988              ; 	1er CUAD. ----- ----- ----- ----- -----
247+  8988              ;
248+  8988              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
249+  8988              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
250+  8988              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
251+  8988              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
252+  8988
253+  8988              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
254+  8988              ;	   ""        ""       "f9", B="1"
255+  8988              ;	   ""        ""       "fb", B="2"
256+  8988              ; 	   ""        ""       "fb", B="3"
257+  8988
258+  8988 2A 9D 85     	ld hl,(Posicion_actual)
259+  898B CD 2B 8F     	call NextScan
260+  898E
261+  898E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
262+  898E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
263+  898E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
264+  898E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
265+  898E
266+  898E CD B0 89         call Ajusta_disparo_parte_izquierda
267+  8991
268+  8991              ; 	No se produce impacto. B="$80"
269+  8991              ; 	Dirección del proyectil hacia abajo. C="$80"
270+  8991
271+  8991 01 80 80         ld bc,$8080
272+  8994
273+  8994              ; 	LLegados a este punto tendremos:
274+  8994              ;
275+  8994              ;       Puntero_objeto_disparo en IY.
276+  8994              ;       Rutinas_de_impresion en IX.
277+  8994              ;       Puntero_de_impresion en HL.
278+  8994              ;       Impacto/Dirección en BC.
279+  8994
280+  8994 CD B8 89         call Almacena_disparo
281+  8997 18 0F            jr 6F                                           ; RET.
282+  8999
283+  8999              ; 	Estamos en el 2º cuadrante de pantalla.
284+  8999              ; 	2º CUAD. ----- ----- ----- ----- -----
285+  8999              ;
286+  8999              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
287+  8999              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
288+  8999              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
289+  8999              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
290+  8999
291+  8999 2A 9D 85     5 ld hl,(Posicion_actual)
292+  899C CD 2B 8F     	call NextScan
293+  899F
294+  899F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
295+  899F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
296+  899F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
297+  899F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
298+  899F
299+  899F CD A9 89         call Ajusta_disparo_parte_derecha
300+  89A2
301+  89A2              ; 	No se produce impacto. B="$80"
302+  89A2              ; 	Dirección del proyectil hacia abajo. C="80"
303+  89A2
304+  89A2 01 80 80     15 ld bc,$8080
305+  89A5
306+  89A5              ; 	LLegados a este punto tendremos:
307+  89A5              ;
308+  89A5              ;       Puntero_objeto_disparo en IY.
309+  89A5              ;       Rutinas_de_impresion en IX.
310+  89A5              ;       Puntero_de_impresion en HL.
311+  89A5              ;       Impacto/Dirección en BC.
312+  89A5
313+  89A5 CD B8 89         call Almacena_disparo
314+  89A8
315+  89A8 C9           6 ret
316+  89A9
317+  89A9              ; ----------------------------------------------------------------
318+  89A9              ;
319+  89A9              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
320+  89A9              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
321+  89A9              ;	_ (lado izq. o derecho), de la entidad que lo genera.
322+  89A9
323+  89A9 78           Ajusta_disparo_parte_derecha ld a,b
324+  89AA FE 02            cp 2
325+  89AC 38 01            jr c,1F
326+  89AE 23               inc hl
327+  89AF C9           1 ret
328+  89B0
329+  89B0 78           Ajusta_disparo_parte_izquierda ld a,b
330+  89B1 FE 01        	cp 1
331+  89B3 20 01        	jr nz,1F
332+  89B5 2B           	dec hl
333+  89B6 2B           1 dec hl
334+  89B7 C9               ret
335+  89B8
336+  89B8              ; ----------------------------------------------------------------
337+  89B8              ;
338+  89B8              ;   25/02/23
339+  89B8              ;
340+  89B8              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
341+  89B8              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
342+  89B8
343+  89B8              Almacena_disparo
344+  89B8
345+  89B8 E5               push hl  										; HL contiene el puntero de impresión.
346+  89B9 F1               pop af
347+  89BA 08               ex af,af                                        ; Puntero_de_impresion en AF'.
348+  89BB
349+  89BB 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
350+  89BC E6 01            and 1
351+  89BE 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
352+  89C0              ;                                                   ; _ es Amadeus o una entidad la que dispara.
353+  89C0              ; 	Dispara AMADEUS.
354+  89C0
355+  89C0              ;	Comprobamos que a Amadeus aún le quedan disparos.
356+  89C0              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
357+  89C0              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
358+  89C0              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
359+  89C0
360+  89C0 C5               push bc
361+  89C1 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
362+  89C4 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
363+  89C7 A7               and a
364+  89C8 ED 42            sbc hl,bc
365+  89CA CC 74 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
366+  89CD C1               pop bc
367+  89CE 28 54            jr z,4F
368+  89D0
369+  89D0 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
370+  89D3 23               inc hl
371+  89D4 23               inc hl
372+  89D5 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
373+  89D8              ;                                                   ; _ Disparo_(+1).
374+  89D8 18 18            jr 2F
375+  89DA
376+  89DA              ; Dispara una entidad.
377+  89DA
378+  89DA C5           1 push bc
379+  89DB 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
380+  89DE 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
381+  89E1 A7               and a
382+  89E2 ED 42            sbc hl,bc
383+  89E4 CC 6D 87         call z,Inicia_Puntero_Disparo_Entidades
384+  89E7 C1               pop bc
385+  89E8 28 3A            jr z,4F
386+  89EA
387+  89EA 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
388+  89ED 23               inc hl
389+  89EE 23               inc hl
390+  89EF 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
391+  89F2              ;                                                   ; _ Disparo_(+1).
392+  89F2 CD AB 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
393+  89F5              ;                                                   ; _ los 8 bytes que definen el disparo:
394+  89F5              ;
395+  89F5              ;                                                     Puntero_objeto_disparo en IY.
396+  89F5              ;                                                     Rutinas_de_impresion en IX.
397+  89F5              ;                                                     Puntero_de_impresion en HL.
398+  89F5              ;                                                     Impacto/Dirección en BC.
399+  89F5
400+  89F5 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
401+  89F6 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
402+  89F7 23               inc hl                                          ; _ al siguiente.
403+  89F8 A7               and a
404+  89F9 20 C0            jr nz,3B
405+  89FB
406+  89FB 08               ex af,af
407+  89FC ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
408+  8A00 F9               ld sp,hl
409+  8A01
410+  8A01 DD E5            push ix                                         ; Rutina de impresión.
411+  8A03 F5               push af                                         ; Puntero de impresión.
412+  8A04 FD E5            push iy                                         ; Puntero objeto.
413+  8A06 C5               push bc                                         ; Control.
414+  8A07
415+  8A07 ED 7B DF 85      ld sp,(Stack)
416+  8A0B
417+  8A0B              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
418+  8A0B
419+  8A0B 21 D6 85     	ld hl,Ctrl_1
420+  8A0E CB C6        	set 0,(hl)
421+  8A10
422+  8A10 DD E5        	push ix
423+  8A12 E1               pop hl
424+  8A13 F5               push af
425+  8A14 DD E1            pop ix
426+  8A16
427+  8A16 CD A0 7F     	call Guarda_foto_registros
428+  8A19
429+  8A19 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
430+  8A1C CB 86        	res 0,(hl)
431+  8A1E
432+  8A1E              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
433+  8A1E              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
434+  8A1E
435+  8A1E CD 74 87         call Inicia_Puntero_Disparo_Amadeus
436+  8A21 CD 6D 87         call Inicia_Puntero_Disparo_Entidades
437+  8A24
438+  8A24 C9           4 ret
439+  8A25
440+  8A25              ; ----------------------------------------------------------------
441+  8A25              ;
442+  8A25              ;   4/3/23
443+  8A25              ;
444+  8A25              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
445+  8A25              ;   _ al generarse el disparo.
446+  8A25              ;
447+  8A25              ;       "$80" ..... No se produce colisión.
448+  8A25              ;       "$81" ..... Se produce colisión.
449+  8A25
450+  8A25              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
451+  8A25              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
452+  8A25
453+  8A25
454+  8A25 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
455+  8A27 E5               push hl                                        ; Puntero de impresión.
456+  8A28 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
457+  8A2A CD 41 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
458+  8A2D E1               pop hl
459+  8A2E E5               push hl
460+  8A2F CD 2B 8F         call NextScan
461+  8A32
462+  8A32 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
463+  8A33 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
464+  8A35 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
465+  8A37              ;                                                  ; _ 2º scanline si esto es así.
466+  8A37 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
467+  8A39 CD 41 8A         call Bucle_2
468+  8A3C
469+  8A3C 43           2 ld b,e
470+  8A3D E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
471+  8A3E FD E1            pop iy
472+  8A40 C9               ret
473+  8A41
474+  8A41               ; ---------- ----------
475+  8A41
476+  8A41 06 02        Bucle_2 ld b,2
477+  8A43 FD 7E 00     2 ld a,(iy)
478+  8A46 A6               and (hl)
479+  8A47 28 02            jr z,1F
480+  8A49 1E 81            ld e,$81
481+  8A4B 23           1 inc hl
482+  8A4C FD 23            inc iy
483+  8A4E 10 F3            djnz 2B
484+  8A50 C9               ret
485+  8A51
486+  8A51              ; -------------------------------------------------------------------------------------------------------------
487+  8A51              ;
488+  8A51              ;   01/04/23
489+  8A51              ;
490+  8A51              ;
491+  8A51              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
492+  8A51              ;   Vamos a comprobar si existe colisión con Amadeus. Consideramos que se produce colisión_
493+  8A51              ;   _ si hay contacto de los dos scanlines inferiores que forman la entidad con la nave.
494+  8A51              ;
495+  8A51              ;   INPUTS: IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
496+  8A51              ;           IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
497+  8A51
498+  8A51              Detecta_colision_nave_entidad
499+  8A51
500+  8A51              ; Antes de nada, averiguaremos si la entidad ocupa alguna de las columnas que ocupa Amadeus en pantalla.
501+  8A51              ; Guardamos las coordenadas_X de la entidad en el almacen:
502+  8A51
503+  8A51              ; Preparamos registros:
504+  8A51
505+  8A51 21 A1 85         ld hl,Filas+6
506+  8A54 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
507+  8A55 23               inc hl
508+  8A56 23               inc hl
509+  8A57 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
510+  8A58 21 AF 85         ld hl,Filas+20
511+  8A5B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
512+  8A5C 21 F0 85         ld hl,Coordenadas_X_Entidad
513+  8A5F
514+  8A5F CD 32 8C         call Guarda_coordenadas_X
515+  8A62
516+  8A62              ; Guardamos las coordenadas_X de Amadeus en el almacen:
517+  8A62
518+  8A62              ; Preparamos registros:
519+  8A62
520+  8A62 21 7A 84         ld hl,Amadeus_db+6
521+  8A65 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
522+  8A66 23               inc hl
523+  8A67 23               inc hl
524+  8A68 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
525+  8A69 21 88 84         ld hl,Amadeus_db+20
526+  8A6C 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
527+  8A6D 21 ED 85         ld hl,Coordenadas_X_Amadeus
528+  8A70
529+  8A70 CD 32 8C         call Guarda_coordenadas_X
530+  8A73
531+  8A73 18 FE            jr $
532+  8A75
533+  8A75
534+  8A75              ; Si coinciden las columnas de la entidad con las de Amadeus, llamaremos a la rutina [Calcula_puntero_de_impresion]. Nos proporcionara:
535+  8A75              ; Puntero_de_impresión de la entidad en IX y puntero_objeto en IY.
536+  8A75
537+  8A75 2A 9D 85         ld hl,(Posicion_actual)
538+  8A78 CD 90 8E         call Calcula_puntero_de_impresion
539+  8A7B
540+  8A7B              ; Con estos datos podremos situar HL en el penúltimo scanline del puntero_de_impresión de la entidad y_
541+  8A7B              ; _ el registro IY en el 1er dato del penúltimo scanline que forma la entidad, (Puntero_objeto).
542+  8A7B
543+  8A7B 06 0E            ld b,14
544+  8A7D DD E5            push ix
545+  8A7F E1               pop hl
546+  8A80 CD 2B 8F     1 call NextScan
547+  8A83 10 FB            djnz 1B
548+  8A85 E5               push hl
549+  8A86 DD E1            pop ix                                         ; Puntero_de_impresion de la entidad implicada en el penúltimo scanline.
550+  8A88
551+  8A88 FD E5            push iy
552+  8A8A E1               pop hl
553+  8A8B
554+  8A8B              ; Sumaremos 28/42 bytes en función de las (Columns) que formen la entidad.
555+  8A8B
556+  8A8B 3A 9C 85         ld a,(Columns)
557+  8A8E E6 01            and 1
558+  8A90 20 05            jr nz,2F
559+  8A92 01 1C 00         ld bc,28
560+  8A95 18 03            jr 3F
561+  8A97 01 2A 00     2 ld bc,42
562+  8A9A A7           3 and a
563+  8A9B ED 4A            adc hl,bc
564+  8A9D E5               push hl
565+  8A9E FD E1            pop iy                                          ; Puntero_objeto de la entidad implicada apuntando al 1er dato del penúltimo_
566+  8AA0              ;                                                   ; _ scanline.
567+  8AA0 DD E5            push ix
568+  8AA2 E1               pop hl
569+  8AA3
570+  8AA3 E5               push hl
571+  8AA4
572+  8AA4              ; Llegados a este punto, HL apunta al puntero de impresión del penúltimo scanline de pantalla de la entidad.
573+  8AA4              ; IY apunta a los "datos" del penúltimo scanline que forman la entidad.
574+  8AA4
575+  8AA4              ; debugggg -----------------------------------------
576+  8AA4
577+  8AA4              ;    call Guarda_coordenadas_X_de_Amadeus
578+  8AA4              ; (Colisiones en filas 16 y 17).
579+  8AA4              ;    ld hl,Coordenadas_X_Amadeus
580+  8AA4              ;    ld a,(hl)
581+  8AA4              ;18 cp d
582+  8AA4              ;    jr nz,17F
583+  8AA4              ; Colisión Amadeus !!!!!!!!!!
584+  8AA4              ;    pop hl
585+  8AA4              ;    jr 14F
586+  8AA4              ;17 inc hl
587+  8AA4              ;    ld a,(hl)
588+  8AA4              ;    and a
589+  8AA4              ;    jr z,15F                                             ; No hay colisión con Amadeus.
590+  8AA4              ;    jr 18B
591+  8AA4
592+  8AA4              ; debuggggg -------------------------------
593+  8AA4
594+  8AA4 1E 00            ld e,0                                         ; E,(Impacto)="0".
595+  8AA6 CD C5 8A         call Bucle_3                                   ; Comprobamos el 1er scanline.
596+  8AA9
597+  8AA9 7B               ld a,e
598+  8AAA E6 01            and 1
599+  8AAC 28 15            jr z,4F
600+  8AAE
601+  8AAE E1               pop hl
602+  8AAF E5               push hl
603+  8AB0 CD 2B 8F         call NextScan
604+  8AB3
605+  8AB3 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
606+  8AB4 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
607+  8AB6 28 0B            jr z,4F                                        ; _ de atributos. Evitamos comprobar colisión en el _
608+  8AB8 30 09            jr nc,4F
609+  8ABA              ;                                                  ; _ 2º scanline si esto es así.
610+  8ABA 1E 00            ld e,0                                         ; ----- ( ) -----
611+  8ABC CD C5 8A         call Bucle_3
612+  8ABF
613+  8ABF 7B               ld a,e
614+  8AC0 A7               and a
615+  8AC1 20 FE            jr nz,$
616+  8AC3
617+  8AC3 E1           4 pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
618+  8AC4 C9               ret
619+  8AC5
620+  8AC5               ; ---------- ----------
621+  8AC5
622+  8AC5 3A D2 85     Bucle_3 ld a,(Columnas)
623+  8AC8 47               ld b,a
624+  8AC9 FD 7E 00     2 ld a,(iy)
625+  8ACC A6               and (hl)
626+  8ACD 28 02            jr z,1F
627+  8ACF
628+  8ACF 1E 01            ld e,1
629+  8AD1
630+  8AD1 23           1 inc hl
631+  8AD2 FD 23            inc iy
632+  8AD4 10 F3            djnz 2B
633+  8AD6 C9               ret
634+  8AD7
635+  8AD7              ; -------------------------------------------------------------------------------------------------------------
636+  8AD7              ;
637+  8AD7              ;   13/03/23
638+  8AD7              ;
639+  8AD7              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
640+  8AD7              ;
641+  8AD7              ;   DESTRUYE: HL,BC,DE y A.
642+  8AD7
643+  8AD7 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
644+  8ADA 7E               ld a,(hl)
645+  8ADB A7               and a
646+  8ADC C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
647+  8ADD
648+  8ADD 44               ld b,h
649+  8ADE 4D               ld c,l
650+  8ADF 2A E5 85         ld hl,(Stack_snapshot_disparos)
651+  8AE2 E5               push hl
652+  8AE3 A7               and a
653+  8AE4 ED 42            sbc hl,bc
654+  8AE6 E5               push hl
655+  8AE7 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
656+  8AE8
657+  8AE8 E1               pop hl
658+  8AE9 54               ld d,h
659+  8AEA 5D               ld e,l
660+  8AEB 1B               dec de
661+  8AEC ED B8            lddr                                                ; Limpiamos.
662+  8AEE
663+  8AEE 21 60 70         ld hl,Album_de_fotos_disparos
664+  8AF1 22 E5 85         ld (Stack_snapshot_disparos),hl
665+  8AF4
666+  8AF4 C9               ret
667+  8AF5
668+  8AF5              ; -------------------------------------------------------------------------------------------------------------
669+  8AF5              ;
670+  8AF5              ;   28/03/23
671+  8AF5              ;
672+  8AF5
673+  8AF5 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
674+  8AF8 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
675+  8AFB
676+  8AFB CD AB 87     2 call Extrae_address
677+  8AFE 7E               ld a,(hl)
678+  8AFF A7               and a
679+  8B00 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
680+  8B02
681+  8B02              ; ----- ----- ----- ----- ----- -----
682+  8B02
683+  8B02 C5               push bc
684+  8B03 CD AD 8B         call foto_disparo_a_borrar
685+  8B06
686+  8B06              ; Existe colisión con este disparo???
687+  8B06
688+  8B06 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
689+  8B07 7E               ld a,(hl)
690+  8B08 2B               dec hl
691+  8B09 E6 01            and 1
692+  8B0B 28 0C            jr z,9F
693+  8B0D
694+  8B0D              ; Elimino el disparo de la base de datos.
695+  8B0D
696+  8B0D E5               push hl
697+  8B0E CD 27 8C         call Elimina_disparo_de_base_de_datos
698+  8B11 E1               pop hl
699+  8B12 3E 01            ld a,1
700+  8B14 32 EC 85         ld (Impacto2),a                                       ; Indicamos que se ha producido Impacto en una entidad.
701+  8B17 18 06            jr 11F
702+  8B19
703+  8B19 CD D6 8B     9 call Mueve_disparo
704+  8B1C CD AD 8B         call foto_disparo_a_borrar
705+  8B1F
706+  8B1F C1           11 pop bc
707+  8B20
708+  8B20 18 04            jr 7F
709+  8B22
710+  8B22              ; ----- ----- ----- ----- ----- -----
711+  8B22
712+  8B22 ED 42        1 sbc hl,bc
713+  8B24 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
714+  8B26
715+  8B26 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
716+  8B29 23               inc hl
717+  8B2A 23               inc hl
718+  8B2B 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
719+  8B2E 18 CB            jr 2B
720+  8B30
721+  8B30 CD 74 87     3 call Inicia_Puntero_Disparo_Amadeus
722+  8B33
723+  8B33 01 66 84         ld bc,Disparo_11
724+  8B36 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
725+  8B39
726+  8B39 CD AB 87     5 call Extrae_address
727+  8B3C 7E               ld a,(hl)
728+  8B3D A7               and a
729+  8B3E 28 5B            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
730+  8B40
731+  8B40              ; ----- ----- ----- ----- ----- -----
732+  8B40
733+  8B40 C5               push bc
734+  8B41 CD AD 8B         call foto_disparo_a_borrar
735+  8B44
736+  8B44              ; Existe colisión con este disparo???
737+  8B44
738+  8B44 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
739+  8B45 7E               ld a,(hl)
740+  8B46 2B               dec hl
741+  8B47 E6 01            and 1
742+  8B49 28 47            jr z,10F
743+  8B4B
744+  8B4B              ; La colisión se produce con Amadeus???
745+  8B4B              ; Amadeus siempre tiene (Coordenada_y)="$16".
746+  8B4B
747+  8B4B E5               push hl
748+  8B4C
749+  8B4C 06 04            ld b,4
750+  8B4E 23           16 inc hl
751+  8B4F 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
752+  8B51
753+  8B51 CD AB 87         call Extrae_address
754+  8B54 CD 42 95         call Genera_coordenadas_disparo
755+  8B57 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
756+  8B58 FE 16            cp $16
757+  8B5A 38 24            jr c,15F
758+  8B5C
759+  8B5C              ; (Colisiones en filas 16 y 17).
760+  8B5C
761+  8B5C D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
762+  8B5D
763+  8B5D              ; Preparamos los registros para llamar a [Guarda_coordenadas_X_de_Amadeus]
764+  8B5D
765+  8B5D 21 7A 84         ld hl,Amadeus_db+6
766+  8B60 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
767+  8B61 23               inc hl
768+  8B62 23               inc hl
769+  8B63 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
770+  8B64 21 88 84         ld hl,Amadeus_db+20
771+  8B67 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
772+  8B68 21 ED 85         ld hl,Coordenadas_X_Amadeus
773+  8B6B
774+  8B6B CD 32 8C         call Guarda_coordenadas_X
775+  8B6E
776+  8B6E D1               pop de                                               ; Coordenadas del disparo en DE. D Coordenada_X.
777+  8B6F
778+  8B6F 21 ED 85         ld hl,Coordenadas_X_Amadeus
779+  8B72 7E               ld a,(hl)
780+  8B73 BA           18 cp d
781+  8B74 20 03            jr nz,17F
782+  8B76
783+  8B76              ; Colisión Amadeus !!!!!!!!!!
784+  8B76
785+  8B76 E1               pop hl
786+  8B77 18 0D            jr 14F
787+  8B79
788+  8B79 23           17 inc hl
789+  8B7A 7E               ld a,(hl)
790+  8B7B A7               and a
791+  8B7C 28 02            jr z,15F                                             ; No hay colisión con Amadeus.
792+  8B7E 18 F3            jr 18B
793+  8B80
794+  8B80              ; No hay colisión. Amadeus se encuentra en una línea inferior.
795+  8B80              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
796+  8B80
797+  8B80 E1           15  pop hl
798+  8B81 23               inc hl
799+  8B82 35               dec (hl)
800+  8B83 2B               dec hl
801+  8B84 18 0C            jr 10F
802+  8B86
803+  8B86              ; -----------------------debug
804+  8B86
805+  8B86              ; Elimino el disparo de la base de datos.
806+  8B86
807+  8B86 E5           14 push hl
808+  8B87 CD 27 8C         call Elimina_disparo_de_base_de_datos
809+  8B8A E1               pop hl
810+  8B8B
811+  8B8B 3E 02            ld a,2                                               ; Indicamos que se ha producido Impacto en Amadeus.
812+  8B8D 32 EC 85         ld (Impacto2),a
813+  8B90 18 06            jr 12F
814+  8B92
815+  8B92 CD D6 8B     10 call Mueve_disparo
816+  8B95 CD AD 8B         call foto_disparo_a_borrar
817+  8B98 C1           12 pop bc
818+  8B99
819+  8B99 18 04            jr 8F
820+  8B9B
821+  8B9B              ; ----- ----- ----- ----- ----- -----
822+  8B9B
823+  8B9B ED 42        4 sbc hl,bc
824+  8B9D 28 0A            jr z,6F
825+  8B9F
826+  8B9F 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
827+  8BA2 23               inc hl
828+  8BA3 23               inc hl
829+  8BA4 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
830+  8BA7 18 90            jr 5B
831+  8BA9
832+  8BA9 CD 6D 87     6 call Inicia_Puntero_Disparo_Entidades
833+  8BAC C9               ret
834+  8BAD
835+  8BAD              ; ------------------------------------------------------------------
836+  8BAD
837+  8BAD              foto_disparo_a_borrar
838+  8BAD
839+  8BAD 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
840+  8BAE A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
841+  8BAF C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
842+  8BB0
843+  8BB0 E5               push hl
844+  8BB1 23               inc hl
845+  8BB2 23               inc hl
846+  8BB3 ED 73 DF 85      ld (Stack),sp
847+  8BB7 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
848+  8BB8 FD E1            pop iy
849+  8BBA DD E1            pop ix
850+  8BBC E1               pop hl
851+  8BBD ED 7B DF 85      ld sp,(Stack)
852+  8BC1 3A D6 85         ld a,(Ctrl_1)
853+  8BC4 CB C7            set 0,a
854+  8BC6 32 D6 85         ld (Ctrl_1),a
855+  8BC9 CD A0 7F         call Guarda_foto_registros
856+  8BCC 3A D6 85         ld a,(Ctrl_1)
857+  8BCF CB 87            res 0,a
858+  8BD1 32 D6 85         ld (Ctrl_1),a
859+  8BD4 E1               pop hl
860+  8BD5 C9               ret
861+  8BD6
862+  8BD6 E5           Mueve_disparo push hl
863+  8BD7 7E               ld a,(hl)
864+  8BD8 06 04            ld b,4
865+  8BDA 23           1 inc hl
866+  8BDB 10 FD            djnz 1B
867+  8BDD
868+  8BDD              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
869+  8BDD
870+  8BDD CD AB 87         call Extrae_address
871+  8BE0
872+  8BE0 E6 01            and 1
873+  8BE2 28 2A            jr z,2F
874+  8BE4
875+  8BE4              ; Disparo hacia arriba, (Amadeus).
876+  8BE4
877+  8BE4              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
878+  8BE4              ; _ de la dificultad.
879+  8BE4
880+  8BE4 CD 3A 8F         call PreviousScan
881+  8BE7 CD 3A 8F         call PreviousScan
882+  8BEA CD 3A 8F         call PreviousScan
883+  8BED
884+  8BED              ; Detecta si el disparo de Amadeus sale de pantalla:
885+  8BED
886+  8BED 7C               ld a,h
887+  8BEE FE 40            cp $40
888+  8BF0 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
889+  8BF2
890+  8BF2              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
891+  8BF2
892+  8BF2 EB               ex de,hl
893+  8BF3 06 04            ld b,4
894+  8BF5 2B           6 dec hl
895+  8BF6 10 FD            djnz 6B
896+  8BF8
897+  8BF8 CD 27 8C         call Elimina_disparo_de_base_de_datos
898+  8BFB
899+  8BFB 18 0C            jr 4F
900+  8BFD
901+  8BFD              ; Se ha desplazado la bala, compruebo colisión.
902+  8BFD
903+  8BFD D5           3 push de
904+  8BFE C5               push bc
905+  8BFF CD 25 8A         call Comprueba_Colision
906+  8C02 78               ld a,b
907+  8C03 C1               pop bc
908+  8C04 D1               pop de
909+  8C05
910+  8C05 EB               ex de,hl
911+  8C06
912+  8C06 73               ld (hl),e
913+  8C07 23               inc hl
914+  8C08 72               ld (hl),d
915+  8C09
916+  8C09 E1           4 pop hl
917+  8C0A 23               inc hl
918+  8C0B 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
919+  8C0C 2B               dec hl
920+  8C0D C9               ret
921+  8C0E
922+  8C0E              ; Disparo hacia abajo, (Entidad).
923+  8C0E
924+  8C0E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
925+  8C0E              ; _ de la dificultad.
926+  8C0E
927+  8C0E CD 2B 8F     2 call NextScan
928+  8C11 CD 2B 8F         call NextScan
929+  8C14 CD 2B 8F         call NextScan
930+  8C17
931+  8C17              ; Detecta si el disparo de la entidad sale de la pantalla.
932+  8C17
933+  8C17 7C               ld a,h
934+  8C18 FE 58            cp $58
935+  8C1A 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
936+  8C1C
937+  8C1C EB               ex de,hl
938+  8C1D 06 04            ld b,4
939+  8C1F 2B           5 dec hl
940+  8C20 10 FD            djnz 5B
941+  8C22
942+  8C22 CD 27 8C         call Elimina_disparo_de_base_de_datos
943+  8C25
944+  8C25 18 E2            jr 4B
945+  8C27
946+  8C27              ; HL apunta al primer byte de la base de datos del disparo.
947+  8C27 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
948+  8C2A AF               xor a
949+  8C2B 77               ld (hl),a
950+  8C2C 54               ld d,h
951+  8C2D 5D               ld e,l
952+  8C2E 13               inc de
953+  8C2F ED B0            ldir
954+  8C31 C9               ret
955+  8C32
956+  8C32              ; -----------------------------------------------------------------
957+  8C32              ;
958+  8C32              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
959+  8C32              ;
960+  8C32              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
961+  8C32              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
962+  8C32              ;
963+  8C32              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
964+  8C32              ;
965+  8C32              ;   INPUTS:
966+  8C32              ;
967+  8C32              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
968+  8C32              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
969+  8C32              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
970+  8C32
971+  8C32              ;   MODIFICA: A, HL, DE y C
972+  8C32
973+  8C32 72           Guarda_coordenadas_X ld (hl),d               ; Cargamos la 1ª Coordenada_X en su almacen.
974+  8C33 79               ld a,c
975+  8C34 E6 01            and 1
976+  8C36 20 03            jr nz,1F
977+  8C38 14               inc d
978+  8C39 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
979+  8C3B
980+  8C3B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
981+  8C3B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
982+  8C3B
983+  8C3B 15           1 dec d
984+  8C3C 23           2 inc hl
985+  8C3D 72               ld (hl),d
986+  8C3E
987+  8C3E 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
988+  8C3F A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
989+  8C40 C8               ret z
990+  8C41
991+  8C41 AF               xor a
992+  8C42 5F               ld e,a
993+  8C43 18 ED            jr Guarda_coordenadas_X
# file closed: Disparo.asm
886   8C45              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8C45              ; ******************************************************************************************************************************************************************************************
  2+  8C45              ;
  3+  8C45              ; 01/23
  4+  8C45              ;
  5+  8C45              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8C45
  7+  8C45 CD 1F 8F     Draw call Prepara_draw
  8+  8C48 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8C49 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8C4A 28 05        	jr z,2F
 11+  8C4C
 12+  8C4C 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8C4F 18 0C        	jr 1F
 14+  8C51 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8C54 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8C57 CD E6 8D     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8C5A              ;													; _la esquina superior izquierda de la pantalla.
 18+  8C5A CD 65 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8C5D 3A C9 85     1 ld a,(Ctrl_0)
 20+  8C60 CB 6F        	bit 5,a
 21+  8C62 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8C64
 23+  8C64 CD 7C 8C     	call Comprueba_limite_horizontal
 24+  8C67 CD 0C 8D     	call Comprueba_limite_vertical
 25+  8C6A
 26+  8C6A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8C6A
 28+  8C6A CD 59 8E     3 call calcula_CColumnass
 29+  8C6D CD 90 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8C70 CD E5 8E     	call Define_rutina_de_impresion
 31+  8C73
 32+  8C73 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8C76 CB AF        	res 5,a											; _a ser de utilidad.
 34+  8C78 32 C9 85     	ld (Ctrl_0),a
 35+  8C7B
 36+  8C7B C9           	ret
 37+  8C7C
 38+  8C7C              ; *******************************************************************************************************************************************************************************************
 39+  8C7C              ;	21/01/23
 40+  8C7C              ;
 41+  8C7C              ; 	Comprueba_limite_horizontal.
 42+  8C7C              ;
 43+  8C7C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8C7C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8C7C              ;
 46+  8C7C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8C7C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8C7C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8C7C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8C7C
 51+  8C7C
 52+  8C7C
 53+  8C7C 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8C7F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8C81 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8C83 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8C85 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8C88 18 09            jr 6F
 59+  8C8A CB 5F        1 bit 3,a
 60+  8C8C 28 0A            jr z,2F
 61+  8C8E E6 F7            and $f7
 62+  8C90 32 C9 85         ld (Ctrl_0),a
 63+  8C93 CD E6 8D     6 call Inicializacion
 64+  8C96 18 5B            jr 5F
 65+  8C98 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8C99
 67+  8C99              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8C99              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8C99
 70+  8C99 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8C9A 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8C9D CD EB 91     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8CA0 67           	ld h,a
 74+  8CA1 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8CA2 CD EB 91     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8CA5 67           	ld h,a
 77+  8CA6 A7           	and a
 78+  8CA7 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8CA9 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8CAA 3A AF 85     	ld a,(Cuad_objeto)
 81+  8CAD FE 02        	cp 2
 82+  8CAF 38 1E        	jr c,3F
 83+  8CB1 28 1C        	jr z,3F
 84+  8CB3 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8CB4 28 23            jr z,7F
 86+  8CB6 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8CB8 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8CBA E1           	pop hl
 89+  8CBB
 90+  8CBB              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8CBB              ; _para indicar con E="2" en caso necesario.
 92+  8CBB
 93+  8CBB E5               push hl
 94+  8CBC C5               push bc
 95+  8CBD CD EB 91     	call calcula_tercio
 96+  8CC0 FE 01        	cp 1
 97+  8CC2 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8CC4 CD F4 8C         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8CC7 28 26            jr z,9F
100+  8CC9 38 24            jr c,9F
101+  8CCB 1E 00        11 ld e,0
102+  8CCD 18 22            jr 8F
103+  8CCF 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8CD0 28 07        	jr z, 7F
105+  8CD2 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8CD4 1E 00         	ld e,0
107+  8CD6 E1           	pop hl
108+  8CD7 18 04        	jr 4F
109+  8CD9 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8CDB 18 15            jr 10F
111+  8CDD
112+  8CDD              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8CDD              ; _para indicar con E="2" en caso necesario.
114+  8CDD
115+  8CDD E5           4 push hl
116+  8CDE C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8CDF CD EB 91     	call calcula_tercio
118+  8CE2 FE 01        	cp 1
119+  8CE4 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8CE6 CD F4 8C         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8CE9 28 04            jr z,9F
122+  8CEB 30 02            jr nc,9F
123+  8CED 18 02        	jr 8F
124+  8CEF 1E 02        9 ld e,2
125+  8CF1 C1           8 pop bc
126+  8CF2 E1           10 pop hl
127+  8CF3 C9           5 ret
128+  8CF4
129+  8CF4              ; --------------------
130+  8CF4              ;
131+  8CF4              ; 25/08/22
132+  8CF4
133+  8CF4 CD EB 91     Comprueba_centro call calcula_tercio
134+  8CF7 67               ld h,a
135+  8CF8 08           	ex af,af
136+  8CF9 FE 02        	cp 2
137+  8CFB 38 07        	jr c,1F
138+  8CFD 28 05        	jr z,1F
139+  8CFF 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8D02 18 03        	jr 2F
141+  8D04 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8D07 08           2 ex af,af
143+  8D08 A7               and a
144+  8D09 ED 42            sbc hl,bc
145+  8D0B C9               ret
146+  8D0C
147+  8D0C              ; *********************************************************************************************************************************************************************************************
148+  8D0C              ;
149+  8D0C              ;   16/8/22
150+  8D0C              ;
151+  8D0C              ;	Comprueba_limite_vertical
152+  8D0C              ;
153+  8D0C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8D0C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8D0C              ;
156+  8D0C
157+  8D0C 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8D0F 7D           	ld a,l
159+  8D10 E6 1F        	and $1F
160+  8D12 57           	ld d,a
161+  8D13 3A D5 85     	ld a,(Limite_vertical)
162+  8D16 BA           	cp d 											; Límite - Posición.
163+  8D17 08           	ex af,af 										; Resultado de CP d en F'.
164+  8D18 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8D1B CB 47        	bit 0,a
166+  8D1D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8D1F
168+  8D1F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8D1F
170+  8D1F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8D20 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8D22
173+  8D22              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8D22              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8D22
176+  8D22 3A A1 85         ld a,(Coordenada_X)
177+  8D25 16 0F            ld d,Centro_izquierda
178+  8D27 A7               and a
179+  8D28 92               sub d 											 ; Posición - Centro_izquierda.
180+  8D29 28 1E            jr z,3F
181+  8D2B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8D2D              ;                                                    ; _salimos sin modificar nada.
183+  8D2D 18 0E            jr 2F
184+  8D2F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8D30 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8D32
187+  8D32              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8D32              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8D32
190+  8D32 3A A1 85         ld a,(Coordenada_X)
191+  8D35 16 10            ld d,Centro_derecha
192+  8D37 A7               and a
193+  8D38 92               sub d
194+  8D39 28 0E            jr z,3F
195+  8D3B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8D3D              ;                                                    ; _salimos sin modificar nada.
197+  8D3D CB 43        2 bit 0,e
198+  8D3F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8D41 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8D42 CD D6 8D         call Modificaccionne
201+  8D45 C1           	pop bc
202+  8D46 CD E6 8D         call Inicializacion
203+  8D49 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8D4A
205+  8D4A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8D4A
207+  8D4A C5           4 push bc
208+  8D4B 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8D4E 0A           	ld a,(bc)
210+  8D4F 3D           	dec a
211+  8D50 47           	ld b,a 											 ; Columnas-1 en B.
212+  8D51 7D           	ld a,l
213+  8D52 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8D53 CB 47        	bit 0,a
215+  8D55 28 03        	jr z,5F
216+  8D57 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8D58 18 2E        	jr 7F
218+  8D5A
219+  8D5A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8D5A
221+  8D5A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8D5B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8D5C 3A C9 85     	ld a,(Ctrl_0)
224+  8D5F CB 4F        	bit 1,a
225+  8D61 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8D63 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8D64
228+  8D64              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8D64
230+  8D64 1C               inc e
231+  8D65 1D               dec e
232+  8D66 20 07            jr nz,12F
233+  8D68 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8D69 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8D6A 22 9D 85     	ld (Posicion_actual),hl
236+  8D6D 18 44        13 jr 9F
237+  8D6F CB 43        12 bit 0,e
238+  8D71 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8D73              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8D73 C1           	pop bc
241+  8D74 18 D3        	jr 3B
242+  8D76 80           14 add b
243+  8D77 6F               ld l,a
244+  8D78 22 9D 85     	ld (Posicion_actual),hl
245+  8D7B CD D6 8D         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8D7E 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8D80 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8D82 32 C9 85         ld (Ctrl_0),a
249+  8D85 F1           	pop af
250+  8D86 18 2B        	jr 9F
251+  8D88
252+  8D88              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8D88
254+  8D88 F5           7 push af
255+  8D89 3A C9 85     	ld a,(Ctrl_0)
256+  8D8C CB 47        	bit 0,a
257+  8D8E 20 1D        	jr nz,8F
258+  8D90 F1           	pop af
259+  8D91
260+  8D91              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8D91
262+  8D91 1C           	inc e
263+  8D92 1D               dec e
264+  8D93 20 07            jr nz,10F
265+  8D95 90           	sub b
266+  8D96 6F               ld l,a
267+  8D97 22 9D 85     	ld (Posicion_actual),hl
268+  8D9A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8D9C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8D9C CB 43        10 bit 0,e
271+  8D9E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8DA0              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8DA0 C1           	pop bc
274+  8DA1 18 A6        	jr 3B
275+  8DA3 90           16 sub b
276+  8DA4 6F               ld l,a
277+  8DA5 22 9D 85     	ld (Posicion_actual),hl
278+  8DA8 CD D6 8D         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8DAB 18 06            jr 9F
280+  8DAD E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8DAF 32 C9 85         ld (Ctrl_0),a
282+  8DB2 F1           	pop af
283+  8DB3 C1           9 pop bc
284+  8DB4 1E 00        	ld e,0
285+  8DB6 CD E6 8D         call Inicializacion
286+  8DB9 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8DBA 08           	ex af,af
288+  8DBB F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8DBC 18 8B            jr 3B
290+  8DBE
291+  8DBE              ; --------------------
292+  8DBE
293+  8DBE 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8DC0 CD 3A 8F     1 call PreviousScan
295+  8DC3 10 FB            djnz 1B
296+  8DC5 22 9D 85     	ld (Posicion_actual),hl
297+  8DC8 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8DC9 C9           	ret
299+  8DCA
300+  8DCA              ; --------------------
301+  8DCA
302+  8DCA 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8DCC CD 2B 8F     1 call NextScan
304+  8DCF 10 FB            djnz 1B
305+  8DD1 22 9D 85     	ld (Posicion_actual),hl
306+  8DD4 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8DD5 C9           	ret
308+  8DD6
309+  8DD6              ; --------------------
310+  8DD6              ;
311+  8DD6              ;	22/01/23
312+  8DD6              ;
313+  8DD6              ;	E="1". Hemos cambiado de cuadrante.
314+  8DD6              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8DD6              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8DD6
317+  8DD6
318+  8DD6              Modificaccionne
319+  8DD6
320+  8DD6 3A AF 85     	ld a,(Cuad_objeto)
321+  8DD9 FE 02        	cp 2
322+  8DDB CC BE 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8DDE DC BE 8D         call c,Modifica_Pos_actual
324+  8DE1 C8           	ret z
325+  8DE2 CD CA 8D         call Modifica_Pos_actual2
326+  8DE5 C9               ret
327+  8DE6
328+  8DE6              ; *************************************************************************************************************************************************************************************************
329+  8DE6              ;
330+  8DE6              ;	13/8/22
331+  8DE6              ;
332+  8DE6              ;	Inicializacion
333+  8DE6              ;
334+  8DE6              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8DE6              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8DE6              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8DE6              ;
338+  8DE6              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8DE6              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8DE6              ;	_ desaparece/aparece.
341+  8DE6
342+  8DE6              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8DE6              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8DE6              ;
345+  8DE6              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8DE6              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8DE6              ; 		   [E] ="0"
348+  8DE6
349+  8DE6              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8DE6
351+  8DE6 CD EB 91     Inicializacion call calcula_tercio
352+  8DE9 28 36        	jr z,primit
353+  8DEB E6 02        	and 2
354+  8DED 20 07        	jr nz,segmit
355+  8DEF 7D           	ld a,l
356+  8DF0 FE 7F        	cp $7f
357+  8DF2 38 2D        	jr c,primit
358+  8DF4 28 2B        	jr z,primit
359+  8DF6 CD 53 8E     segmit call column
360+  8DF9 38 13        	jr c,tercuad
361+  8DFB 3E 04        cuarcuad ld a,4
362+  8DFD 32 AF 85     	ld (Cuad_objeto),a
363+  8E00 21 20 48     	ld hl,$4820
364+  8E03 22 D3 85     	ld (Limite_horizontal),hl
365+  8E06 21 D5 85     	ld hl,Limite_vertical
366+  8E09 36 0D        	ld (hl),$0d
367+  8E0B 08           	ex af,af
368+  8E0C 18 3C        	jr 1F
369+  8E0E              tercuad
370+  8E0E 3E 03        	ld a,3
371+  8E10 32 AF 85     	ld (Cuad_objeto),a
372+  8E13 21 20 48     	ld hl,$4820
373+  8E16 22 D3 85     	ld (Limite_horizontal),hl
374+  8E19 21 D5 85     	ld hl,Limite_vertical
375+  8E1C 36 12        	ld (hl),$12
376+  8E1E 08           	ex af,af
377+  8E1F 18 29        	jr 1F
378+  8E21 CD 53 8E     primit call column
379+  8E24 38 13        	jr c, primcuad
380+  8E26              segcuad
381+  8E26 3E 02        	ld a,2
382+  8E28 32 AF 85     	ld (Cuad_objeto),a
383+  8E2B 21 C0 4F     	ld hl,$4fc0
384+  8E2E 22 D3 85     	ld (Limite_horizontal),hl
385+  8E31 21 D5 85     	ld hl,Limite_vertical
386+  8E34 36 0D        	ld (hl),$0d
387+  8E36 08           	ex af,af
388+  8E37 18 11        	jr 1F
389+  8E39              primcuad
390+  8E39 3E 01        	ld a,1
391+  8E3B 32 AF 85     	ld (Cuad_objeto),a
392+  8E3E 21 C0 4F     	ld hl,$4fc0
393+  8E41 22 D3 85     	ld (Limite_horizontal),hl
394+  8E44 21 D5 85     	ld hl,Limite_vertical
395+  8E47 36 12        	ld (hl),$12
396+  8E49 08           	ex af,af
397+  8E4A CD 17 95     1 call Genera_coordenadas
398+  8E4D 21 C9 85     	ld hl,Ctrl_0
399+  8E50 CB EE        	set 5,(hl)
400+  8E52 C9           	ret
401+  8E53
402+  8E53              ; ------------------------------------------------------------------------------------------------------------------
403+  8E53
404+  8E53              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8E53              ;
406+  8E53              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8E53
408+  8E53 7D           column ld a,l
409+  8E54 E6 1F        	and $1f
410+  8E56 FE 10         	cp $10
411+  8E58 C9            	ret
412+  8E59
413+  8E59              ; --------------------------------------------------------------------------------------------------------------------
414+  8E59              ;
415+  8E59              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8E59              ;
417+  8E59              ; 14/12/22
418+  8E59              ;
419+  8E59              ;	Modifica: A y BC.
420+  8E59
421+  8E59 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8E5C E6 01        	and 1
423+  8E5E 28 17        	jr z,1F
424+  8E60
425+  8E60              ; Nos encontramos en la parte izquierda de la pantalla
426+  8E60
427+  8E60 3A A1 85     	ld a,(Coordenada_X)
428+  8E63 47           	ld b,a
429+  8E64 04           	inc b											; (Coordenada_X)+1 en B.
430+  8E65 79           	ld a,c
431+  8E66 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8E67 38 08        	jr c,2F
433+  8E69 47           	ld b,a
434+  8E6A 79           	ld a,c
435+  8E6B 90           	sub b
436+  8E6C 32 D2 85     	ld (Columnas),a
437+  8E6F 18 1B        	jr 4F
438+  8E71 79           2 ld a,c
439+  8E72 32 D2 85     	ld (Columnas),a
440+  8E75 18 15        	jr 4F
441+  8E77
442+  8E77              ; Nos encontramos en la parte derecha de la pantalla.
443+  8E77
444+  8E77 3A A1 85     1 ld a,(Coordenada_X)
445+  8E7A 81           	add c
446+  8E7B 3D           	dec a
447+  8E7C D6 1F        	sub $1f
448+  8E7E 38 08        	jr c,3F
449+  8E80 47           	ld b,a
450+  8E81 79           	ld a,c
451+  8E82 90           	sub b
452+  8E83 32 D2 85     	ld (Columnas),a
453+  8E86 18 04        	jr 4F
454+  8E88 79           3 ld a,c
455+  8E89 32 D2 85     	ld (Columnas),a
456+  8E8C D9           4 exx
457+  8E8D 4F           	ld c,a
458+  8E8E D9           	exx
459+  8E8F C9            ret
460+  8E90
461+  8E90              ; --------------------------------------------------------------------------------------------------------------------
462+  8E90              ;
463+  8E90              ; 7/1/23
464+  8E90              ;
465+  8E90              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8E90              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8E90              ;
468+  8E90              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8E90              ;	DESTRUYE: HL,B Y A.
470+  8E90
471+  8E90 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8E93 FE 02        	cp 2
473+  8E95 38 18        	jr c,1F
474+  8E97 28 16        	jr z,1F
475+  8E99 E6 01        	and 1
476+  8E9B 28 0D        	jr z,3F
477+  8E9D
478+  8E9D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8E9D
480+  8E9D CD D9 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8EA0
482+  8EA0 7D           9 ld a,l
483+  8EA1 E6 1F        	and $1f
484+  8EA3 28 2A        	jr z,7F
485+  8EA5 2B           	dec hl
486+  8EA6 10 F8        	djnz 9B
487+  8EA8 18 25        	jr 7F
488+  8EAA
489+  8EAA              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8EAA
491+  8EAA 2A 9D 85     3 ld hl,(Posicion_actual)
492+  8EAD 18 20        	jr 7F
493+  8EAF
494+  8EAF 28 14        1 jr z,2F
495+  8EB1
496+  8EB1              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8EB1
498+  8EB1 CD D9 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8EB4 7D           4 ld a,l
500+  8EB5 E6 1F        	and $1f
501+  8EB7 28 03        	jr z,6F
502+  8EB9 2B           	dec hl
503+  8EBA 10 F8        	djnz 4B
504+  8EBC 06 0F        6 ld b,15
505+  8EBE CD 3A 8F     5 call PreviousScan
506+  8EC1 10 FB        	djnz 5B
507+  8EC3 18 0A        	jr 7F
508+  8EC5
509+  8EC5              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8EC5
511+  8EC5 CD D9 8E     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8EC8 06 0F        	ld b,15
513+  8ECA CD 3A 8F     8 call PreviousScan
514+  8ECD 10 FB        	djnz 8B
515+  8ECF
516+  8ECF E5           7 push hl
517+  8ED0 DD E1        	pop ix
518+  8ED2
519+  8ED2 2A 9F 85     	ld hl,(Puntero_objeto)
520+  8ED5 E5           	push hl
521+  8ED6 FD E1        	pop iy
522+  8ED8
523+  8ED8 C9           	ret
524+  8ED9
525+  8ED9              ; --------------------------------------------------------------------------------------------------------------------
526+  8ED9              ;
527+  8ED9              ;	2/1/23
528+  8ED9              ;
529+  8ED9              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8ED9              ;
531+  8ED9              ;	Tras esta rutina tenemos:
532+  8ED9              ;
533+  8ED9              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8ED9              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8ED9              ;
536+  8ED9              ;	DESTRUYE!!!!! HL,B y A.
537+  8ED9
538+  8ED9 2A 9D 85     Operandos ld hl,(Posicion_actual)
539+  8EDC 3A D2 85     	ld a,(Columnas)
540+  8EDF 3D           	dec a
541+  8EE0 20 01        	jr nz,1F
542+  8EE2 3C           	inc a
543+  8EE3 47           1 ld b,a
544+  8EE4 C9           	ret
545+  8EE5
546+  8EE5              ; --------------------------------------------------------------------------------------------------------------------
547+  8EE5              ;
548+  8EE5              ;	3/1/23
549+  8EE5              ;
550+  8EE5              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8EE5              ;
552+  8EE5              ;	Destruye: A,B,HL y DE.
553+  8EE5
554+  8EE5              Define_rutina_de_impresion
555+  8EE5
556+  8EE5 3A 9C 85     	ld a,(Columns)
557+  8EE8 47           	ld b,a
558+  8EE9 3A D2 85     	ld a,(Columnas)
559+  8EEC B8           	cp b
560+  8EED 20 0D        	jr nz,2f
561+  8EEF
562+  8EEF              ;	La entidad se imprime entera.
563+  8EEF
564+  8EEF 21 BB 8F     	ld hl, Indice_entidades_completas
565+  8EF2 E6 01        	and 1
566+  8EF4 28 02        	jr z,1F
567+  8EF6
568+  8EF6 23           	inc hl
569+  8EF7 23           	inc hl
570+  8EF8
571+  8EF8 CD AB 87     1 call Extrae_address
572+  8EFB C9           	ret		;	ret
573+  8EFC
574+  8EFC              ;	La entidad no se imprime entera en pantalla.
575+  8EFC
576+  8EFC 3A AF 85     2 ld a,(Cuad_objeto)
577+  8EFF E6 01        	and 1
578+  8F01 28 17        	jr z,3F
579+  8F03
580+  8F03              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8F03
582+  8F03 21 BF 8F     	ld hl, Indice_entidades_incompletas_izquierda
583+  8F06 3A 9C 85     4 ld a,(Columns)
584+  8F09 E6 01        	and 1
585+  8F0B 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8F0D
587+  8F0D 23           	inc hl
588+  8F0E 23           	inc hl
589+  8F0F
590+  8F0F 3A D2 85     	ld a,(Columnas)
591+  8F12 E6 01        	and 1
592+  8F14 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8F16
594+  8F16 23           	inc hl
595+  8F17 23           	inc hl
596+  8F18
597+  8F18 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8F1A
599+  8F1A 21 C5 8F     3 ld hl, Indice_entidades_incompletas_derecha
600+  8F1D 18 E7        	jr 4B
601+  8F1F
602+  8F1F              ; --------------------------------------------------------------------------------------------------------------------
603+  8F1F              ;
604+  8F1F              ;	Prepara_draw
605+  8F1F              ;
606+  8F1F              ;	Es una rutina de carga.
607+  8F1F              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8F1F              ;
609+  8F1F              ;	FUNCIONAMIENTO:
610+  8F1F              ;
611+  8F1F              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8F1F              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8F1F              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8F1F              ;
615+  8F1F              ;	DESTRUYE:
616+  8F1F              ;
617+  8F1F              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8F1F
619+  8F1F 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8F22 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8F23 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8F24 4E           	ld c,(hl)
623+  8F25 2A 9D 85     	ld hl,(Posicion_actual)
624+  8F28 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8F2A C9           	ret
626+  8F2B
627+  8F2B              ;----------------------------------------------------------------------------------------------------------------
628+  8F2B              ;
629+  8F2B              ;	5/08/22
630+  8F2B              ;
631+  8F2B              ;   NextScan.
632+  8F2B              ;
633+  8F2B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8F2B              ;
635+  8F2B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8F2B              ;
637+  8F2B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8F2B              ;
639+  8F2B              ;       DESTRUIDOS: AF y HL !!!
640+  8F2B              ;
641+  8F2B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8F2B              ;
643+  8F2B
644+  8F2B 24           NextScan inc h          ; Incrementamos el scanline.
645+  8F2C 7C               ld a,h
646+  8F2D E6 07            and 7
647+  8F2F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8F30
649+  8F30 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8F31 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8F33 6F               ld l,a
652+  8F34 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8F35
654+  8F35 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8F36 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8F38 67               ld h,a
657+  8F39 C9               ret
658+  8F3A
659+  8F3A              ;----------------------------------------------------------------------------------------------------------------
660+  8F3A              ;
661+  8F3A              ;	5/08/22
662+  8F3A              ;
663+  8F3A              ;   PreviousScan.
664+  8F3A              ;
665+  8F3A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8F3A              ;
667+  8F3A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8F3A              ;
669+  8F3A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8F3A              ;
671+  8F3A              ;       DESTRUIDOS: AF y HL !!!
672+  8F3A              ;
673+  8F3A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8F3A              ;
675+  8F3A
676+  8F3A 7C           PreviousScan ld a,h
677+  8F3B 25               dec h               ; Dec H.
678+  8F3C E6 07            and 7
679+  8F3E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8F3F
681+  8F3F 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8F40 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8F42 6F               ld l,a
684+  8F43 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8F44
686+  8F44 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8F45 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8F47 67               ld h,a
689+  8F48 C9               ret
690+  8F49
691+  8F49              ; -----------------------------------------------------------------------------------
692+  8F49              ;
693+  8F49              ;	28/2/23
694+  8F49              ;
695+  8F49              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8F49              ;	Extrae fotos de Album_de_fotos.
697+  8F49
698+  8F49 3A DE 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8F4C A7           	and a
700+  8F4D C8           	ret z
701+  8F4E ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8F52 31 00 70     	ld sp,Album_de_fotos
703+  8F55
704+  8F55 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8F57 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8F58 D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8F59
708+  8F59 ED 73 E1 85  	ld (Stack_2),sp
709+  8F5D ED 7B DF 85  	ld sp,(Stack)
710+  8F61
711+  8F61              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8F61
713+  8F61 3E CD        	ld a,$cd
714+  8F63 32 6B 8F     	ld (Imprime),a
715+  8F66 EB           	ex de,hl
716+  8F67 22 6C 8F     	ld (Imprime+1),hl
717+  8F6A EB           	ex de,hl
718+  8F6B
719+  8F6B              ; Ejecuta la llamada:	CALL $xx,xx
720+  8F6B
721+  8F6B 00 00 00     Imprime db 0,0,0
722+  8F6E
723+  8F6E 3A DE 85     	ld a,(Numero_de_malotes)
724+  8F71 3D           	dec a
725+  8F72 28 09        	jr z,1F
726+  8F74 32 DE 85      	ld (Numero_de_malotes),a
727+  8F77
728+  8F77 ED 7B E1 85   	ld sp,(Stack_2)
729+  8F7B 18 D8        	jr 2B
730+  8F7D
731+  8F7D AF           1 xor a
732+  8F7E 32 E1 85     	ld (Stack_2),a
733+  8F81 C9           	ret
734+  8F82
735+  8F82              ; -----------------------------------------------------------------------------------
736+  8F82              ;
737+  8F82              ;	28/2/23
738+  8F82              ;
739+  8F82              ;	Pinta los disparos generados.
740+  8F82
741+  8F82              Extrae_foto_disparos
742+  8F82
743+  8F82 3A E7 85     	ld a,(Numero_de_disparotes)
744+  8F85 A7           	and a
745+  8F86 C8           	ret z
746+  8F87 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8F8B 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8F8E
749+  8F8E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8F90 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8F91 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8F92
753+  8F92 ED 73 E1 85  	ld (Stack_2),sp
754+  8F96 ED 7B DF 85  	ld sp,(Stack)
755+  8F9A
756+  8F9A              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8F9A
758+  8F9A 3E CD        	ld a,$cd
759+  8F9C 32 A4 8F     	ld (Imprime2),a
760+  8F9F EB           	ex de,hl
761+  8FA0 22 A5 8F     	ld (Imprime2+1),hl
762+  8FA3 EB           	ex de,hl
763+  8FA4
764+  8FA4              ; Ejecuta la llamada:	CALL $xx,xx
765+  8FA4
766+  8FA4 00 00 00     Imprime2 db 0,0,0
767+  8FA7
768+  8FA7 3A E7 85     	ld a,(Numero_de_disparotes)
769+  8FAA 3D           	dec a
770+  8FAB 28 09        	jr z,1F
771+  8FAD 32 E7 85      	ld (Numero_de_disparotes),a
772+  8FB0
773+  8FB0 ED 7B E1 85  	ld sp,(Stack_2)
774+  8FB4 18 D8        	jr 2B
775+  8FB6
776+  8FB6 AF           1 xor a
777+  8FB7 32 E1 85     	ld (Stack_2),a
778+  8FBA C9           	ret
779+  8FBB
# file closed: Draw_XOR.asm
887   8FBB              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8FBB              ;   índices de Rutinas de impresión.
  2+  8FBB
  3+  8FBB CB 8F        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8FBD F8 8F            defw Pinta_Amadeus_3x2
  5+  8FBF
  6+  8FBF 4E 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8FC1 EE 90            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8FC3 A2 90            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8FC5
 10+  8FC5 78 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8FC7 7C 91            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8FC9 30 91            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8FCB
 14+  8FCB
 15+  8FCB              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8FCB              ;
 17+  8FCB              ;   12/12/22
 18+  8FCB              ;
 19+  8FCB              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8FCB              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8FCB              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8FCB              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8FCB              ;
 24+  8FCB              ;   Modifica: DE y HL.
 25+  8FCB
 26+  8FCB ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8FCF FD F9        	ld sp,iy
 28+  8FD1 06 10            ld b,16
 29+  8FD3 D1           1 pop de
 30+  8FD4 7B               ld a,e
 31+  8FD5 AE               xor (hl)
 32+  8FD6 77           	ld (hl),a
 33+  8FD7 23           	inc hl
 34+  8FD8 7A               ld a,d
 35+  8FD9 AE               xor (hl)
 36+  8FDA 77           	ld (hl),a
 37+  8FDB 2B           	dec hl
 38+  8FDC 24           	inc h
 39+  8FDD 7C               ld a,h
 40+  8FDE E6 07            and 7
 41+  8FE0 20 0A            jr nz,2F
 42+  8FE2 7D               ld a,l
 43+  8FE3 C6 20            add a,$20
 44+  8FE5 6F               ld l,a
 45+  8FE6 38 04            jr c,2F
 46+  8FE8 7C               ld a,h
 47+  8FE9 D6 08            sub 8
 48+  8FEB 67               ld h,a
 49+  8FEC 7C           2 ld a,h
 50+  8FED FE 58            cp $58
 51+  8FEF 28 02            jr z,3F
 52+  8FF1 10 E0            djnz 1B
 53+  8FF3 ED 7B DF 85  3 ld sp,(Stack)
 54+  8FF7 C9           	ret
 55+  8FF8
 56+  8FF8 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8FFC FD F9        	ld sp,iy
 58+  8FFE 06 08            ld b,8
 59+  9000 D1           1 pop de
 60+  9001 7B               ld a,e
 61+  9002 AE               xor (hl)
 62+  9003 77           	ld (hl),a
 63+  9004 23           	inc hl
 64+  9005 7A               ld a,d
 65+  9006 AE               xor (hl)
 66+  9007 77           	ld (hl),a
 67+  9008 23           	inc hl
 68+  9009 D1           	pop de
 69+  900A 7B               ld a,e
 70+  900B AE               xor (hl)
 71+  900C 77           	ld (hl),a
 72+  900D 2B           	dec hl
 73+  900E 2B           	dec hl
 74+  900F 24           	inc h
 75+  9010 7C               ld a,h
 76+  9011 E6 07            and 7
 77+  9013 20 0A            jr nz,2F
 78+  9015 7D               ld a,l
 79+  9016 C6 20            add a,$20
 80+  9018 6F               ld l,a
 81+  9019 38 04            jr c,2F
 82+  901B 7C               ld a,h
 83+  901C D6 08            sub 8
 84+  901E 67               ld h,a
 85+  901F 7C           2 ld a,h
 86+  9020 FE 58            cp $58
 87+  9022 28 25            jr z,4F
 88+  9024 7A               ld a,d
 89+  9025 AE               xor (hl)
 90+  9026 77               ld (hl),a
 91+  9027 D1           	pop de
 92+  9028 23           	inc hl
 93+  9029 7B               ld a,e
 94+  902A AE               xor (hl)
 95+  902B 77           	ld (hl),a
 96+  902C 23           	inc hl
 97+  902D 7A               ld a,d
 98+  902E AE               xor (hl)
 99+  902F 77           	ld (hl),a
100+  9030 2B           	dec hl
101+  9031 2B           	dec hl
102+  9032 24           	inc h
103+  9033 7C               ld a,h
104+  9034 E6 07            and 7
105+  9036 20 0A            jr nz,3F
106+  9038 7D               ld a,l
107+  9039 C6 20            add a,$20
108+  903B 6F               ld l,a
109+  903C 38 04            jr c,3F
110+  903E 7C               ld a,h
111+  903F D6 08            sub 8
112+  9041 67               ld h,a
113+  9042 7C           3 ld a,h
114+  9043 FE 58            cp $58
115+  9045 28 02            jr z,4F
116+  9047 10 B7            djnz 1B
117+  9049 ED 7B DF 85  4 ld sp,(Stack)
118+  904D C9           	ret
119+  904E
120+  904E              ; ---------------------------------------------------
121+  904E
122+  904E ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  9052 FD F9        	ld sp,iy
124+  9054
125+  9054              ; >>>
126+  9054
127+  9054 06 10            ld b,16
128+  9056 D1           1 pop de
129+  9057 7A           	ld a,d
130+  9058 AE           	xor (hl)
131+  9059 77           	ld (hl),a
132+  905A 24           	inc h
133+  905B 7C               ld a,h
134+  905C E6 07            and 7
135+  905E 20 0C            jr nz,2F
136+  9060 7D               ld a,l
137+  9061 C6 20            add a,$20
138+  9063 6F               ld l,a
139+  9064 38 06            jr c,2F
140+  9066 7C               ld a,h
141+  9067 D6 08            sub 8
142+  9069 67               ld h,a
143+  906A 18 00            jr 2F
144+  906C 7C           2 ld a,h
145+  906D FE 58            cp $58
146+  906F 28 02            jr z,3F
147+  9071 10 E3            djnz 1B
148+  9073 ED 7B DF 85  3 ld sp,(Stack)
149+  9077 C9           	ret
150+  9078
151+  9078 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  907C FD F9        	ld sp,iy
153+  907E
154+  907E              ; >>>
155+  907E
156+  907E 06 10            ld b,16
157+  9080 D1           1 pop de
158+  9081 7B           	ld a,e
159+  9082 AE           	xor (hl)
160+  9083 77           	ld (hl),a
161+  9084 24           	inc h
162+  9085 7C               ld a,h
163+  9086 E6 07            and 7
164+  9088 20 0C            jr nz,2F
165+  908A 7D               ld a,l
166+  908B C6 20            add a,$20
167+  908D 6F               ld l,a
168+  908E 38 06            jr c,2F
169+  9090 7C               ld a,h
170+  9091 D6 08            sub 8
171+  9093 67               ld h,a
172+  9094 18 00            jr 2F
173+  9096 7C           2 ld a,h
174+  9097 FE 58            cp $58
175+  9099 28 02            jr z,3F
176+  909B 10 E3            djnz 1B
177+  909D ED 7B DF 85  3 ld sp,(Stack)
178+  90A1 C9           	ret
179+  90A2
180+  90A2              ; ---------------------------------------------------
181+  90A2
182+  90A2 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  90A6 FD F9        	ld sp,iy
184+  90A8 06 08            ld b,8
185+  90AA D1           1 pop de
186+  90AB 7A           	ld a,d
187+  90AC AE           	xor (hl)
188+  90AD 77           	ld (hl),a
189+  90AE 23           	inc hl
190+  90AF D1           	pop de
191+  90B0 7B           	ld a,e
192+  90B1 AE           	xor (hl)
193+  90B2 77           	ld (hl),a
194+  90B3 2B           	dec hl
195+  90B4 24            	inc h
196+  90B5 7C               ld a,h
197+  90B6 E6 07            and 7
198+  90B8 20 0A            jr nz,2F
199+  90BA 7D               ld a,l
200+  90BB C6 20            add a,$20
201+  90BD 6F               ld l,a
202+  90BE 38 04            jr c,2F
203+  90C0 7C               ld a,h
204+  90C1 D6 08            sub 8
205+  90C3 67               ld h,a
206+  90C4 7C           2 ld a,h
207+  90C5 FE 58            cp $58
208+  90C7 28 20            jr z,4F
209+  90C9 D1               pop de
210+  90CA 7B           	ld a,e
211+  90CB AE           	xor (hl)
212+  90CC 77           	ld (hl),a
213+  90CD 23           	inc hl
214+  90CE 7A           	ld a,d
215+  90CF AE           	xor (hl)
216+  90D0 77           	ld (hl),a
217+  90D1 2B           	dec hl
218+  90D2 24           	inc h
219+  90D3 7C               ld a,h
220+  90D4 E6 07            and 7
221+  90D6 20 0A            jr nz,3F
222+  90D8 7D               ld a,l
223+  90D9 C6 20            add a,$20
224+  90DB 6F               ld l,a
225+  90DC 38 04            jr c,3F
226+  90DE 7C               ld a,h
227+  90DF D6 08            sub 8
228+  90E1 67               ld h,a
229+  90E2 7C           3 ld a,h
230+  90E3 FE 58            cp $58
231+  90E5 28 02            jr z,4F
232+  90E7 10 C1            djnz 1B
233+  90E9 ED 7B DF 85  4 ld sp,(Stack)
234+  90ED C9           	ret
235+  90EE
236+  90EE ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  90F2 FD F9        	ld sp,iy
238+  90F4 06 08            ld b,8
239+  90F6 D1           1 pop de
240+  90F7 D1           	pop de
241+  90F8 7B           	ld a,e
242+  90F9 AE           	xor (hl)
243+  90FA 77           	ld (hl),a
244+  90FB 24            	inc h
245+  90FC 7C               ld a,h
246+  90FD E6 07            and 7
247+  90FF 20 0A            jr nz,2F
248+  9101 7D               ld a,l
249+  9102 C6 20            add a,$20
250+  9104 6F               ld l,a
251+  9105 38 04            jr c,2F
252+  9107 7C               ld a,h
253+  9108 D6 08            sub 8
254+  910A 67               ld h,a
255+  910B 7C           2 ld a,h
256+  910C FE 58            cp $58
257+  910E 28 1B            jr z,4F
258+  9110 D1               pop de
259+  9111 7A           	ld a,d
260+  9112 AE           	xor (hl)
261+  9113 77           	ld (hl),a
262+  9114 24           	inc h
263+  9115 7C               ld a,h
264+  9116 E6 07            and 7
265+  9118 20 0A            jr nz,3F
266+  911A 7D               ld a,l
267+  911B C6 20            add a,$20
268+  911D 6F               ld l,a
269+  911E 38 04            jr c,3F
270+  9120 7C               ld a,h
271+  9121 D6 08            sub 8
272+  9123 67               ld h,a
273+  9124 7C           3 ld a,h
274+  9125 FE 58            cp $58
275+  9127 28 02            jr z,4F
276+  9129 10 CB            djnz 1B
277+  912B ED 7B DF 85  4 ld sp,(Stack)
278+  912F C9           	ret
279+  9130
280+  9130 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  9134 FD F9        	ld sp,iy
282+  9136 06 08            ld b,8
283+  9138 D1           1 pop de
284+  9139 7B           	ld a,e
285+  913A AE           	xor (hl)
286+  913B 77           	ld (hl),a
287+  913C 23           	inc hl
288+  913D 7A           	ld a,d
289+  913E AE           	xor (hl)
290+  913F 77           	ld (hl),a
291+  9140 2B           	dec hl
292+  9141 24             	inc h
293+  9142 7C               ld a,h
294+  9143 E6 07            and 7
295+  9145 20 0A            jr nz,2F
296+  9147 7D               ld a,l
297+  9148 C6 20            add a,$20
298+  914A 6F               ld l,a
299+  914B 38 04            jr c,2F
300+  914D 7C               ld a,h
301+  914E D6 08            sub 8
302+  9150 67               ld h,a
303+  9151 7C           2 ld a,h
304+  9152 FE 58            cp $58
305+  9154 28 21            jr z,4F
306+  9156 D1               pop de
307+  9157 7A           	ld a,d
308+  9158 AE           	xor (hl)
309+  9159 77           	ld (hl),a
310+  915A 23           	inc hl
311+  915B D1               pop de
312+  915C 7B           	ld a,e
313+  915D AE           	xor (hl)
314+  915E 77           	ld (hl),a
315+  915F 2B           	dec hl
316+  9160 24           	inc h
317+  9161 7C               ld a,h
318+  9162 E6 07            and 7
319+  9164 20 0A            jr nz,3F
320+  9166 7D               ld a,l
321+  9167 C6 20            add a,$20
322+  9169 6F               ld l,a
323+  916A 38 04            jr c,3F
324+  916C 7C               ld a,h
325+  916D D6 08            sub 8
326+  916F 67               ld h,a
327+  9170 7C           3 ld a,h
328+  9171 FE 58            cp $58
329+  9173 28 02            jr z,4F
330+  9175 10 C1            djnz 1B
331+  9177 ED 7B DF 85  4 ld sp,(Stack)
332+  917B C9           	ret
333+  917C
334+  917C ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  9180 FD F9        	ld sp,iy
336+  9182 06 08            ld b,8
337+  9184 D1           1 pop de
338+  9185 7B           	ld a,e
339+  9186 AE           	xor (hl)
340+  9187 77           	ld (hl),a
341+  9188 24            	inc h
342+  9189 7C               ld a,h
343+  918A E6 07            and 7
344+  918C 20 0A            jr nz,2F
345+  918E 7D               ld a,l
346+  918F C6 20            add a,$20
347+  9191 6F               ld l,a
348+  9192 38 04            jr c,2F
349+  9194 7C               ld a,h
350+  9195 D6 08            sub 8
351+  9197 67               ld h,a
352+  9198 7C           2 ld a,h
353+  9199 FE 58            cp $58
354+  919B 28 1C            jr z,4F
355+  919D D1               pop de
356+  919E 7A           	ld a,d
357+  919F AE           	xor (hl)
358+  91A0 77           	ld (hl),a
359+  91A1 24           	inc h
360+  91A2 7C               ld a,h
361+  91A3 E6 07            and 7
362+  91A5 20 0A            jr nz,3F
363+  91A7 7D               ld a,l
364+  91A8 C6 20            add a,$20
365+  91AA 6F               ld l,a
366+  91AB 38 04            jr c,3F
367+  91AD 7C               ld a,h
368+  91AE D6 08            sub 8
369+  91B0 67               ld h,a
370+  91B1 7C           3 ld a,h
371+  91B2 FE 58            cp $58
372+  91B4 28 03            jr z,4F
373+  91B6 D1               pop de
374+  91B7 10 CB            djnz 1B
375+  91B9 ED 7B DF 85  4 ld sp,(Stack)
376+  91BD C9           	ret
377+  91BE
378+  91BE              ; ---------------------------------------------------
379+  91BE              ;
380+  91BE              ;   27/02/23
381+  91BE              ;
382+  91BE              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  91BE              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  91BE              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  91BE
386+  91BE ED 73 DF 85  Pinta_Disparo ld (Stack),sp
387+  91C2 FD F9            ld sp,iy
388+  91C4 06 02            ld b,2
389+  91C6 D1           1 pop de
390+  91C7 7B               ld a,e
391+  91C8 AE               xor (hl)
392+  91C9 77               ld (hl),a
393+  91CA 23               inc hl
394+  91CB 7A               ld a,d
395+  91CC AE               xor (hl)
396+  91CD 77               ld (hl),a
397+  91CE 2B               dec hl
398+  91CF
399+  91CF 24               inc h
400+  91D0 7C               ld a,h
401+  91D1 E6 07            and 7
402+  91D3 20 0A            jr nz,2F
403+  91D5 7D               ld a,l
404+  91D6 C6 20            add a,$20
405+  91D8 6F               ld l,a
406+  91D9 38 04            jr c,2F
407+  91DB 7C               ld a,h
408+  91DC D6 08            sub 8
409+  91DE 67               ld h,a
410+  91DF 7C           2 ld a,h
411+  91E0 FE 58            cp $58
412+  91E2 28 02            jr z,3F
413+  91E4
414+  91E4 10 E0            djnz 1B
415+  91E6 ED 7B DF 85  3 ld sp,(Stack)
416+  91EA C9               ret
417+  91EB
# file closed: Rutinas_de_impresion_sprites.asm
888   91EB              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  91EB              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  91EB              ;
  3+  91EB              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  91EB              ;
  5+  91EB              ; *****************************************************************************************************************************************************************************************
  6+  91EB              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  91EB
  8+  91EB 7C           calcula_tercio ld a,h
  9+  91EC E6 18        	and $18
 10+  91EE CB 2F        	sra a
 11+  91F0 CB 2F        	sra a
 12+  91F2 CB 2F        	sra a
 13+  91F4 C9           	ret
 14+  91F5
# file closed: calcula_tercio.asm
889   91F5              	include "Cls.asm"
# file opened: Cls.asm
  1+  91F5              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  91F5              ;
  3+  91F5              ;
  4+  91F5              ;	CLS.
  5+  91F5              ;
  6+  91F5              ;	Limpia la pantalla y define sus atributos.
  7+  91F5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  91F5              ;
  9+  91F5              ;	COLORES: 0 ..... NEGRO
 10+  91F5              ;    		 1 ..... AZUL
 11+  91F5              ; 			 2 ..... ROJO
 12+  91F5              ;			 3 ..... MAGENTA
 13+  91F5              ; 			 4 ..... VERDE
 14+  91F5              ; 			 5 ..... CIAN
 15+  91F5              ;			 6 ..... AMARILLO
 16+  91F5              ; 			 7 ..... BLANCO
 17+  91F5              ;
 18+  91F5              ;	INPUT: A contiene los atributos de pantalla.
 19+  91F5              ;
 20+  91F5              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  91F5
 22+  91F5
 23+  91F5 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  91F8 11 01 40     	LD DE,$4001
 25+  91FB 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  91FE 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  9200 ED B0        	LDIR
 28+  9202 01 FF 02     	LD BC,767
 29+  9205 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  9206 ED B0        	LDIR
 31+  9208 C9           	ret
 32+  9209
# file closed: Cls.asm
890   9209              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  9209              ; ******************************************************************************************************************************************************************************************
  2+  9209              ;
  3+  9209              ;   22/01/23
  4+  9209              ;
  5+  9209              ;	Mov_down
  6+  9209              ;
  7+  9209              ; 	Mueve el Sprite X px hacia abajo.
  8+  9209              ;
  9+  9209              ;
 10+  9209 21 C9 85     Mov_down ld hl,Ctrl_0
 11+  920C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  920E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  920E              ; 																	; _ en el caso de que no lo haya.
 14+  920E 3A B3 85     	ld a,(Vel_down)
 15+  9211 47           	ld b,a
 16+  9212 2A 9D 85         ld hl,(Posicion_actual)
 17+  9215 CD EB 91     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  9218 E6 02        	and 2
 19+  921A 28 0F        	jr z,1F
 20+  921C
 21+  921C              ; Nos encontramos en el último tercio de pantalla.
 22+  921C              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  921C
 24+  921C 7C           	ld a,h
 25+  921D FE 57        	cp $57
 26+  921F 20 0A        	jr nz,1F
 27+  9221 7D           	ld a,l
 28+  9222 C6 20        	add $20
 29+  9224 30 05        	jr nc,1F
 30+  9226
 31+  9226              ; ------------------------------
 32+  9226 CD 01 95     	call Reaparece_arriba
 33+  9229              ;	call Reinicio
 34+  9229              ; ------------------------------
 35+  9229
 36+  9229 18 08        	jr 3F
 37+  922B CD 2B 8F     1 call NextScan
 38+  922E 22 9D 85     	ld (Posicion_actual),hl
 39+  9231 10 E2            djnz 2B
 40+  9233 CD 17 95     3 call Genera_coordenadas
 41+  9236 C9           	ret
 42+  9237
 43+  9237              ; ******************************************************************************************************************************************************************************************
 44+  9237              ;
 45+  9237              ;   22/01/23
 46+  9237              ;
 47+  9237              ;	Mov_up
 48+  9237              ;
 49+  9237              ; 	Mueve el Sprite hacia arriba.
 50+  9237              ;
 51+  9237              ;
 52+  9237 21 C9 85     Mov_up ld hl,Ctrl_0
 53+  923A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  923C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  923C              ; 																		; _ en el caso de que no lo haya.
 56+  923C 3A B2 85     	ld a,(Vel_up)
 57+  923F 47           	ld b,a
 58+  9240 2A 9D 85     	ld hl,(Posicion_actual)
 59+  9243 CD EB 91     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  9246 A7           	and a
 61+  9247 20 10        	jr nz,1F
 62+  9249
 63+  9249              ; Nos encontramos en el 1er tercio de pantalla.
 64+  9249              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  9249
 66+  9249 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  924A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  924C 20 0B            jr nz,1F
 69+  924E 7D               ld a,l
 70+  924F D6 20            sub $20
 71+  9251 30 06            jr nc,1F
 72+  9253 25               dec h
 73+  9254
 74+  9254              ; -----------------------------
 75+  9254 CD F1 94         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  9257              ;	call Reinicio
 77+  9257              ; -----------------------------
 78+  9257
 79+  9257 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  9259 CD 3A 8F     1 call PreviousScan
 81+  925C 22 9D 85     	ld (Posicion_actual),hl
 82+  925F 10 E2            djnz 3B
 83+  9261 CD 17 95     2 call Genera_coordenadas
 84+  9264 C9           	ret
 85+  9265
 86+  9265              ; ******************************************************************************************************************************************************************************************
 87+  9265              ;
 88+  9265              ;	19/10/22
 89+  9265              ;
 90+  9265              ;	Mov_right.
 91+  9265              ;
 92+  9265              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  9265              ;
 94+  9265
 95+  9265 21 C9 85     Mov_right ld hl,Ctrl_0
 96+  9268 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  926A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  926A              ; 																	; _ en el caso de que no lo haya.
 99+  926A 3A C9 85     	ld a,(Ctrl_0)
100+  926D CB 77        	bit 6,a
101+  926F 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9271
103+  9271 CD 9F 94     	call Stop_Amadeus_right
104+  9274 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  9275 18 4D        	jr 8F
106+  9277
107+  9277 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  927A FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  927C 20 46        	jr nz,8F
110+  927E
111+  927E 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9281 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  9282 28 40        	jr z,8F
114+  9284
115+  9284              ; ---------- ---------- ----------
116+  9284              ;
117+  9284              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  9284
119+  9284 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  9287 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  9289 28 11        	jr z,1F
122+  928B 38 06        	jr c,6F
123+  928D FE 04        	cp 4
124+  928F 28 14        	jr z,7F
125+  9291 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9293
127+  9293              ; ---------- ---------- ----------
128+  9293              ;
129+  9293              ; Perfiles de velocidad
130+  9293              ;
131+  9293
132+  9293 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
133+  9296 FE FE        	cp $fe
134+  9298 20 2A        	jr nz,8F
135+  929A 18 10        	jr 3F
136+  929C 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
137+  929F FE FD        	cp $fd
138+  92A1 20 21        	jr nz,8F
139+  92A3 18 07        	jr 3F
140+  92A5 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
141+  92A8 FE FB        	cp $fb
142+  92AA 20 18        	jr nz,8F
143+  92AC
144+  92AC              ; ---------- ---------- ----------
145+  92AC
146+  92AC              3
147+  92AC CD DF 94     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  92AF              ;	call Reinicio
149+  92AF
150+  92AF              ; ---------- ---------- ----------
151+  92AF              ;
152+  92AF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  92AF
154+  92AF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  92B1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  92B2 CD CB 92     	call DESPLZ_DER
157+  92B5 C1           	pop bc
158+  92B6 10 F9        	djnz 5B
159+  92B8 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  92BB 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  92BC 22 9D 85     	ld (Posicion_actual),hl
162+  92BF CD 17 95     	call Genera_coordenadas
163+  92C2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  92C4
165+  92C4              ; ---------- ---------- ----------
166+  92C4
167+  92C4 2A 9D 85     8 ld hl,(Posicion_actual)
168+  92C7 CD CB 92     	call DESPLZ_DER
169+  92CA C9           2 ret
170+  92CB
171+  92CB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  92CB              ;
173+  92CB              ;	22/9/22
174+  92CB              ;
175+  92CB
176+  92CB CD DA 92     DESPLZ_DER call Desplaza_derecha
177+  92CE CD 26 93         call modifica_parametros_1er_DESPLZ_2
178+  92D1 CD 4F 93         call Ciclo_completo
179+  92D4 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  92D7 CB FE        	set 7,(hl)
181+  92D9 C9           	ret
182+  92DA
183+  92DA              ; ******************************************************************************************************************************************************************************************
184+  92DA              ;	15/02/23
185+  92DA              ;
186+  92DA
187+  92DA 3A B1 85     Desplaza_derecha ld a,(Vel_right)
188+  92DD 47           	ld b,a
189+  92DE 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
190+  92E1 23           1 inc hl
191+  92E2 23           	inc hl
192+  92E3 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  92E5 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  92E8 CD AB 87     	call Extrae_address
195+  92EB 22 9F 85     	ld (Puntero_objeto),hl
196+  92EE
197+  92EE              ; Modifica (Puntero_DESPLZ_izq).
198+  92EE
199+  92EE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  92EE              ; Cuántos movimientos hemos hecho ??
201+  92EE              ; DE contiene (Puntero_DESPLZ_der).
202+  92EE
203+  92EE 2A A5 85     7 ld hl,(Indice_Sprite_der)
204+  92F1 EB           	ex de,hl
205+  92F2 A7           	and a
206+  92F3 ED 52        	sbc hl,de
207+  92F5 CB 3D        	srl l
208+  92F7 3E 08        6 ld a,8
209+  92F9 95           	sub l
210+  92FA 30 1E        	jr nc,3F
211+  92FC
212+  92FC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  92FC              ; B="0".
214+  92FC
215+  92FC 04           4 inc b
216+  92FD 3C           	inc a
217+  92FE 20 FC        	jr nz,4B
218+  9300 78           	ld a,b
219+  9301 08           	ex af,af
220+  9302 2A A5 85     	ld hl,(Indice_Sprite_der)
221+  9305 23           5 inc hl
222+  9306 23           	inc hl
223+  9307 10 FC        	djnz 5B
224+  9309 22 A9 85     	ld (Puntero_DESPLZ_der),hl
225+  930C CD AB 87     	call Extrae_address
226+  930F 22 9F 85     	ld (Puntero_objeto),hl
227+  9312
228+  9312              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  9312              ; _(Posicion_actual).
230+  9312
231+  9312 21 9D 85     	ld hl,Posicion_actual
232+  9315 34           	inc (hl)
233+  9316 08               ex af,af
234+  9317 6F           	ld l,a
235+  9318 18 DD        	jr 6B
236+  931A
237+  931A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  931A
239+  931A 47           3 ld b,a
240+  931B 2A A7 85     	ld hl,(Indice_Sprite_izq)
241+  931E 23           2 inc hl
242+  931F 23           	inc hl
243+  9320 10 FC        	djnz 2B
244+  9322 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
245+  9325 C9           8 ret
246+  9326
247+  9326              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  9326              ;
249+  9326              ;	24/7/22
250+  9326              ;
251+  9326              ;	modifica_parametros_1er_DESPLZ_2
252+  9326              ;
253+  9326              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  9326              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  9326              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  9326
257+  9326 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  9329 A7           	and a
259+  932A 20 1F        	jr nz,1F
260+  932C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  932E 32 A3 85         ld (CTRL_DESPLZ),a
262+  9331
263+  9331 21 9C 85     	ld hl,Columns
264+  9334 34           	inc (hl)
265+  9335 3A AF 85     	ld a,(Cuad_objeto)
266+  9338 E6 01        	and 1
267+  933A 28 0F        	jr z,1F
268+  933C 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  933F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  9340 22 9D 85     	ld (Posicion_actual),hl
271+  9343 CD 17 95     	call Genera_coordenadas
272+  9346 CD AB 94     	call Inc_CTRL_DESPLZ
273+  9349 18 03        	jr 2F
274+  934B CD AB 94     1 call Inc_CTRL_DESPLZ
275+  934E C9           2 ret
276+  934F
277+  934F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  934F              ;
279+  934F              ;	24/7/22
280+  934F              ;
281+  934F              ;	Ciclo_completo.
282+  934F              ;
283+  934F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  934F              ;
285+  934F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  934F              ; 	Decrementamos (Columns).
287+  934F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  934F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  934F
290+  934F
291+  934F 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  9352 FE FF        	cp $ff
293+  9354 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  9356 E6 F0        	and $f0
295+  9358 20 28        	jr nz,3F
296+  935A
297+  935A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  935A
299+  935A 3A A3 85     	ld a,(CTRL_DESPLZ)
300+  935D 47           	ld b,a
301+  935E 3E F8        	ld a,$f8
302+  9360 80           	add b
303+  9361 32 A3 85     	ld (CTRL_DESPLZ),a
304+  9364 18 1C        	jr 3F
305+  9366 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  9369 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  936A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  936B 32 A3 85     	ld (CTRL_DESPLZ),a
309+  936E 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9371 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9373 20 0A        	jr nz,2F
312+  9375 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  9378 23           	inc hl
314+  9379 22 9D 85     	ld (Posicion_actual),hl
315+  937C CD 17 95     	call Genera_coordenadas
316+  937F
317+  937F              ; Inicia el puntero de Sprite.
318+  937F
319+  937F CD C2 87     2 call Inicia_puntero_objeto_der
320+  9382 C9           3 ret
321+  9383
322+  9383              ; ******************************************************************************************************************************************************************************************
323+  9383              ;
324+  9383              ;	15/02/23
325+  9383              ;
326+  9383              ;	Mov_left.
327+  9383              ;
328+  9383              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9383              ;
330+  9383              Mov_left
331+  9383
332+  9383 21 C9 85     	ld hl,Ctrl_0
333+  9386 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  9388              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  9388              ; 																	; _ en el caso de que no lo haya.
336+  9388 3A C9 85     	ld a,(Ctrl_0)
337+  938B CB 77        	bit 6,a
338+  938D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  938F
340+  938F CD A5 94     	call Stop_Amadeus_left
341+  9392 C8           	ret z
342+  9393 20 4A        	jr nz,8F
343+  9395
344+  9395 3A A1 85     11 ld a,(Coordenada_X)
345+  9398 A7           	and a
346+  9399 20 44        	jr nz,8F
347+  939B
348+  939B 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  939E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  939F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  93A1
352+  93A1              ; ---------- ---------- ----------
353+  93A1
354+  93A1 3A B0 85     	ld a,(Vel_left)
355+  93A4 FE 02        	cp 2
356+  93A6 28 0F        	jr z,1F
357+  93A8 38 04        	jr c,6F
358+  93AA FE 04        	cp 4
359+  93AC 28 12        	jr z,7F
360+  93AE
361+  93AE              ; ---------- ---------- ----------
362+  93AE
363+  93AE 3A A3 85     6 ld a,(CTRL_DESPLZ)
364+  93B1 FE F9        	cp $f9
365+  93B3 20 2A        	jr nz,8F
366+  93B5 18 10        	jr 4F
367+  93B7 3A A3 85     1 ld a,(CTRL_DESPLZ)
368+  93BA FE FA        	cp $fa
369+  93BC 20 21        	jr nz,8F
370+  93BE 18 07        	jr 4F
371+  93C0 3A A3 85     7 ld a,(CTRL_DESPLZ)
372+  93C3 FE FC        	cp $fc
373+  93C5 20 18        	jr nz,8F
374+  93C7
375+  93C7              ; ---------- ---------- ----------
376+  93C7
377+  93C7              4
378+  93C7 CD CD 94     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  93CA              ;	call Reinicio
380+  93CA
381+  93CA              ; ---------- ---------- ----------
382+  93CA
383+  93CA 06 03        	ld b,3 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  93CC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  93CD
386+  93CD              ;	ld hl,(Indice_Sprite_izq)
387+  93CD              ;	ld (Puntero_DESPLZ_izq),hl
388+  93CD
389+  93CD CD E6 93     	call DESPLZ_IZQ
390+  93D0 C1           	pop bc
391+  93D1 10 F9        	djnz 5B
392+  93D3 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  93D6 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  93D7 22 9D 85     	ld (Posicion_actual),hl
395+  93DA CD 17 95     	call Genera_coordenadas
396+  93DD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  93DF
398+  93DF              ; ---------- ---------- ----------
399+  93DF
400+  93DF              ; Movemos, no hay recolocación.
401+  93DF
402+  93DF 2A 9D 85     8 ld hl,(Posicion_actual)
403+  93E2 CD E6 93     	call DESPLZ_IZQ
404+  93E5 C9           2 ret
405+  93E6
406+  93E6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
407+  93E6              ;
408+  93E6              ;	22/9/22
409+  93E6
410+  93E6              DESPLZ_IZQ
411+  93E6
412+  93E6 CD F5 93     	call Desplaza_izquierda
413+  93E9 CD 41 94         call modifica_parametros_1er_DESPLZ
414+  93EC CD 69 94     	call Ciclo_completo_2
415+  93EF 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
416+  93F2 CB BE        	res 7,(hl)
417+  93F4 C9           	ret
418+  93F5
419+  93F5              Desplaza_izquierda
420+  93F5
421+  93F5 3A B0 85     	ld a,(Vel_left)
422+  93F8 47           	ld b,a
423+  93F9 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
424+  93FC 23           1 inc hl
425+  93FD 23           	inc hl
426+  93FE 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
427+  9400 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
428+  9403 CD AB 87     	call Extrae_address
429+  9406 22 9F 85     	ld (Puntero_objeto),hl
430+  9409
431+  9409              ; Modifica (Puntero_DESPLZ_der).
432+  9409
433+  9409              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
434+  9409              ; Cuántos movimientos hemos hecho ??
435+  9409              ; DE contiene (Puntero_DESPLZ_izq).
436+  9409
437+  9409 2A A7 85     7 ld hl,(Indice_Sprite_izq)
438+  940C EB           	ex de,hl
439+  940D A7           	and a
440+  940E ED 52        	sbc hl,de
441+  9410 CB 3D        	srl l
442+  9412 3E 08        6 ld a,8
443+  9414 95           	sub l
444+  9415 30 1E        	jr nc,3F
445+  9417
446+  9417              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
447+  9417              ; B="0".
448+  9417
449+  9417 04           4 inc b
450+  9418 3C           	inc a
451+  9419 20 FC        	jr nz,4B
452+  941B 78           	ld a,b
453+  941C 08           	ex af,af
454+  941D 2A A7 85     	ld hl,(Indice_Sprite_izq)
455+  9420 23           5 inc hl
456+  9421 23           	inc hl
457+  9422 10 FC        	djnz 5B
458+  9424 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
459+  9427 CD AB 87     	call Extrae_address
460+  942A 22 9F 85     	ld (Puntero_objeto),hl
461+  942D
462+  942D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
463+  942D              ; _(Posicion_actual).
464+  942D
465+  942D 21 9D 85     	ld hl,Posicion_actual
466+  9430 35           	dec (hl)
467+  9431 08           	ex af,af
468+  9432 6F           	ld l,a
469+  9433 18 DD        	jr 6B
470+  9435
471+  9435              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
472+  9435
473+  9435 47           3 ld b,a
474+  9436 2A A5 85     	ld hl,(Indice_Sprite_der)
475+  9439 23           2 inc hl
476+  943A 23           	inc hl
477+  943B 10 FC        	djnz 2B
478+  943D 22 A9 85     	ld (Puntero_DESPLZ_der),hl
479+  9440 C9           8 ret
480+  9441
481+  9441              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
482+  9441              ;
483+  9441              ;	modifica_parametros_1er_DESPLZ
484+  9441              ;
485+  9441              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
486+  9441              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
487+  9441              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
488+  9441
489+  9441 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
490+  9444 A7           	and a
491+  9445 20 1E        	jr nz,1F
492+  9447 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
493+  9448 32 A3 85         ld (CTRL_DESPLZ),a
494+  944B 21 9C 85     	ld hl,Columns
495+  944E 34           	inc (hl)
496+  944F 3A AF 85     	ld a,(Cuad_objeto)
497+  9452 E6 01        	and 1
498+  9454 20 0F        	jr nz,1F
499+  9456 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
500+  9459 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
501+  945A 22 9D 85     	ld (Posicion_actual),hl
502+  945D CD 17 95     	call Genera_coordenadas
503+  9460 CD BC 94     	call Dec_CTRL_DESPLZ
504+  9463 18 03        	jr 2F
505+  9465 CD BC 94     1 call Dec_CTRL_DESPLZ
506+  9468 C9           2 ret
507+  9469
508+  9469              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
509+  9469
510+  9469 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
511+  946C FE F7        	cp $f7
512+  946E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
513+  9470 30 2C        	jr nc,3F
514+  9472
515+  9472              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
516+  9472
517+  9472 06 00        	ld b,0
518+  9474 04           4 inc b
519+  9475 3C           	inc a
520+  9476 FE F7        	cp $f7
521+  9478 20 FA        	jr nz,4B
522+  947A 3E FF        	ld a,$ff
523+  947C 90           	sub b
524+  947D 32 A3 85     	ld (CTRL_DESPLZ),a
525+  9480 18 1C        	jr 3F
526+  9482
527+  9482              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
528+  9482
529+  9482 21 9C 85     1 ld hl,Columns
530+  9485 35           	dec (hl)
531+  9486 AF           	xor a
532+  9487 32 A3 85     	ld (CTRL_DESPLZ),a
533+  948A 3A AF 85     	ld a,(Cuad_objeto)
534+  948D E6 01        	and 1
535+  948F 28 0A        	jr z,2F
536+  9491 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
537+  9494 2B           	dec hl
538+  9495 22 9D 85     	ld (Posicion_actual),hl
539+  9498 CD 17 95     	call Genera_coordenadas
540+  949B
541+  949B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
542+  949B
543+  949B CD D5 87     2 call Inicia_puntero_objeto_izq
544+  949E C9           3 ret
545+  949F
546+  949F              ; ---------- ---------- ---------- ---------- ---------- ----------
547+  949F              ;
548+  949F              ;	19/10/22
549+  949F              ;
550+  949F              ;	(cp 29) para un Amadeus de 3 Columns.
551+  949F              ;	(cp 30)   ""  ""    ""     2 Columns.
552+  949F
553+  949F 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
554+  94A2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
555+  94A4 C9           	ret
556+  94A5
557+  94A5              ; ---------- ---------- ---------- ---------- ---------- ----------
558+  94A5              ;
559+  94A5              ;	19/10/22
560+  94A5              ;
561+  94A5              ;	(cp 2) para un Amadeus de 3 Columns.
562+  94A5              ;	(cp 1)   ""  ""    ""     2 Columns.
563+  94A5
564+  94A5 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
565+  94A8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
566+  94AA C9           	ret
567+  94AB
568+  94AB              ; ---------- ---------- ---------- ---------- ---------- ----------
569+  94AB              ;
570+  94AB              ;	24/7/22
571+  94AB              ;
572+  94AB              ;	Inc_CTRL_DESPLZ
573+  94AB              ;
574+  94AB              ;
575+  94AB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
576+  94AB
577+  94AB 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
578+  94AE 3A B1 85     	ld a,(Vel_right)
579+  94B1 A7           	and a
580+  94B2 28 06        	jr z,1F
581+  94B4 47           	ld b,a
582+  94B5 34           3 inc (hl)
583+  94B6 10 FD        	djnz 3B
584+  94B8 18 01        	jr 2F
585+  94BA 34           1 inc (hl)
586+  94BB C9           2 ret
587+  94BC
588+  94BC              ; ---------- ---------- ---------- ---------- ---------- ----------
589+  94BC              ;
590+  94BC              ;	5/2/23
591+  94BC              ;
592+  94BC              ;	Dec_CTRL_DESPLZ
593+  94BC              ;
594+  94BC              ;
595+  94BC              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
596+  94BC
597+  94BC 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
598+  94BF 3A B0 85     	ld a,(Vel_left)
599+  94C2 A7           	and a
600+  94C3 28 06        	jr z,1F
601+  94C5 47           	ld b,a
602+  94C6 35           3 dec (hl)
603+  94C7 10 FD        	djnz 3B
604+  94C9 18 01        	jr 2F
605+  94CB 35           1 dec (hl)
606+  94CC C9           2 ret
607+  94CD
608+  94CD              ; ---------- ---------- ---------- ---------- ---------- ----------
609+  94CD
610+  94CD 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
611+  94D0 01 1F 00     	ld bc,31
612+  94D3 A7           	and a
613+  94D4 ED 4A        	adc hl,bc
614+  94D6 22 9D 85     	ld (Posicion_actual),hl
615+  94D9 21 C9 85     	ld hl,Ctrl_0														; $xxx1
616+  94DC CB C6        	set 0,(hl)
617+  94DE C9           	ret
618+  94DF
619+  94DF              ; ---------- ---------- ---------- ---------- ---------- ----------
620+  94DF
621+  94DF 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
622+  94E2 01 1F 00     	ld bc,31
623+  94E5 A7           	and a
624+  94E6 ED 42        	sbc hl,bc
625+  94E8 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
626+  94EB 21 C9 85     	ld hl,Ctrl_0
627+  94EE CB CE        	set 1,(hl)
628+  94F0 C9           	ret
629+  94F1
630+  94F1              ; ---------- ---------- ---------- ---------- ---------- ----------
631+  94F1
632+  94F1 24           Reaparece_abajo inc h
633+  94F2 01 E0 17     	ld bc,$17e0
634+  94F5 A7           	and a
635+  94F6 ED 4A        	adc hl,bc
636+  94F8 22 9D 85     	ld (Posicion_actual),hl
637+  94FB 21 C9 85     	ld hl,Ctrl_0
638+  94FE CB D6        	set 2,(hl)
639+  9500 C9           	ret
640+  9501
641+  9501              ; ---------- ---------- ---------- ---------- ---------- ----------
642+  9501
643+  9501 01 E0 17     Reaparece_arriba ld bc,$17e0
644+  9504 A7           	and a
645+  9505 ED 42        	sbc hl,bc
646+  9507 22 9D 85     	ld (Posicion_actual),hl
647+  950A 21 C9 85     	ld hl,Ctrl_0
648+  950D CB DE        	set 3,(hl)
649+  950F C9           	ret
650+  9510
651+  9510              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
652+  9510
653+  9510 2A AD 85     Reinicio ld hl,(Posicion_inicio)
654+  9513 22 9D 85     	ld (Posicion_actual),hl
655+  9516 C9           	ret
# file closed: Direcciones.asm
891   9517              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  9517              ; ------------------------------------------------------------------------
  2+  9517              ;
  3+  9517              ;	02/04/23
  4+  9517              ;
  5+  9517              ;	Proporciona las coordenadas del objeto a imprimir.
  6+  9517              ;	Fila superior "0", Columna izquierda "0".
  7+  9517              ;
  8+  9517              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  9+  9517              ;
 10+  9517              ;	Modifica: A,BC y DE.
 11+  9517
 12+  9517 C5           Genera_coordenadas push bc
 13+  9518 E5           	push hl
 14+  9519 D5           	push de
 15+  951A
 16+  951A 2A 9D 85     	ld hl,(Posicion_actual)
 17+  951D
 18+  951D 7D           	ld a,l
 19+  951E E6 1F        	and $1f
 20+  9520 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
 21+  9523
 22+  9523 CD EB 91     	call calcula_tercio
 23+  9526 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
 24+  9527
 25+  9527 1E 00        	ld e,0
 26+  9529 7D           	ld a,l
 27+  952A E6 E0        	and $e0
 28+  952C 28 01        	jr z,1F
 29+  952E 04           	inc b
 30+  952F
 31+  952F 04           1 inc b
 32+  9530 05           	dec b
 33+  9531 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
 34+  9533              ;														; _ , salimos.
 35+  9533 1C           3 inc e
 36+  9534 D6 20        	sub 32
 37+  9536 20 FB        	jr nz,3B
 38+  9538 10 F5        	djnz 1B
 39+  953A
 40+  953A 7B           2 ld a,e
 41+  953B 32 A2 85     	ld (Coordenada_y),a
 42+  953E
 43+  953E D1           	pop de
 44+  953F E1           	pop hl
 45+  9540 C1           	pop bc
 46+  9541
 47+  9541 C9           	ret
 48+  9542
 49+  9542              ; ------------------------------------------------------------------------
 50+  9542              ;	28/03/23
 51+  9542              ;
 52+  9542              ;	Proporciona las coordenadas del disparo a imprimir.
 53+  9542              ;	Fila superior "0", Columna izquierda "0".
 54+  9542              ;
 55+  9542              ;	Input: HL contendrá la posición del proyectil en pantalla.
 56+  9542              ;	Output: DE contendrá las coordenadas del disparo:
 57+  9542              ;
 58+  9542              ;		DE="$120d"
 59+  9542              ;
 60+  9542              ;		D, (Coordenada_X), Columnas, $12
 61+  9542              ;		E, (Coordenada_y), Filas, $0d
 62+  9542              ;
 63+  9542              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
 64+  9542
 65+  9542              ;	Modifica: A,BC y DE.
 66+  9542
 67+  9542
 68+  9542              Genera_coordenadas_disparo
 69+  9542
 70+  9542              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
 71+  9542
 72+  9542 7D           	ld a,l
 73+  9543 E6 1F        	and $1f
 74+  9545 57           	ld d,a 												; Columnas en D. Coordenada_X.
 75+  9546 CD EB 91     	call calcula_tercio
 76+  9549 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
 77+  954A 1E 00        	ld e,0
 78+  954C 7D           	ld a,l
 79+  954D E6 E0        	and $e0
 80+  954F 28 01        	jr z,1F
 81+  9551 04           	inc b
 82+  9552 1C           1 inc e
 83+  9553 D6 20        	sub 32
 84+  9555 20 FB        	jr nz,1B
 85+  9557 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
 86+  9559 C9           	ret
 87+  955A
# file closed: Genera_coordenadas.asm
892   955A              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  955A
  2+  955A
  3+  955A              ;   11/8/22
  4+  955A              ;
  5+  955A              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  955A              ;
  7+  955A              ;   Mov_obj.asm
  8+  955A              ;
  9+  955A              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  955A              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  955A              ;
 12+  955A              ;   Codificación:
 13+  955A              ;
 14+  955A              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  955A
 16+  955A              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  955A
 18+  955A 02 40 00     Arriba db 2,%01000000,0
 19+  955D 02 80 00     Abajo db 2,%10000000,0
 20+  9560 02 20 00     Derecha db 2,%00100000,0
 21+  9563 02 10 00     Izquierda db 2,%00010000,0
 22+  9566 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  956A 60 42 60 40
 22+  956E 63
 23+  956F 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9573 22 A3 80 A0
 24+  9577 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  957B 84 A0 83 A0
 25+  957F 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9583 80 A3 22 A0
 26+  9587 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  958B 40 60 42 60
 27+  958F 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9593
 29+  9593 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 30+  9597 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 31+  959B 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
 31+  959F 84 00
 32+  95A1 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 32+  95A5 84 00
 33+  95A7 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 34+  95AB 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  95AF 1F 1F 1F 1F
 35+  95B3 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 35+  95B7 1F 1F 1F 1F
 35+  95BB 1F
 36+  95BC 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 36+  95C0 2F 2F 2F 2F
 36+  95C4 2F 2F
 37+  95C6 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 37+  95CA 2F 2F 00
 38+  95CD
 39+  95CD              ; ----- ----- ----- ----- -----
 40+  95CD
 41+  95CD AB 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  95CF A7 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  95D1 63 95        Indice_mov_Izquierda defw Izquierda
 44+  95D3 60 95        Indice_mov_Derecha defw Derecha
 45+  95D5 5D 95        Indice_mov_Abajo defw Abajo
 46+  95D7 5A 95        Indice_mov_Arriba defw Arriba
 47+  95D9 97 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  95DB 9B 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  95DD 93 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  95DF A1 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  95E1 66 95        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  95E3              ; ----- ----- ----- ----- -----
 53+  95E3
 54+  95E3 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  95E6 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  95E7 28 02            jr z,1F
 57+  95E9 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  95EB 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  95EE C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  95F0 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  95F3              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  95F3 2A CD 85         ld hl,(Puntero_mov)
 63+  95F6 7E               ld a,(hl)
 64+  95F7 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  95FA 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  95FB 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  95FE
 68+  95FE 3A D1 85     Decoder ld a,(Repetimos_db)
 69+  9601 A7               and a
 70+  9602 20 0C            jr nz,12F
 71+  9604 2A CD 85         ld hl,(Puntero_mov)
 72+  9607 7E               ld a,(hl)
 73+  9608 A7               and a
 74+  9609 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  960B E6 0F            and $0f
 76+  960D 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  9610              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  9610 2A CD 85     12 ld hl,(Puntero_mov)
 79+  9613 CB 7E            bit 7,(hl)
 80+  9615 28 03            jr z,2F
 81+  9617 CD 09 92         call Mov_down
 82+  961A 2A CD 85     2 ld hl, (Puntero_mov)
 83+  961D CB 76            bit 6,(hl)
 84+  961F 28 03            jr z,3F
 85+  9621 CD 37 92         call Mov_up
 86+  9624 2A CD 85     3 ld hl, (Puntero_mov)
 87+  9627 CB 6E            bit 5,(hl)
 88+  9629 28 03            jr z,4F
 89+  962B CD 65 92         call Mov_right
 90+  962E 2A CD 85     4 ld hl, (Puntero_mov)
 91+  9631 CB 66            bit 4,(hl)
 92+  9633 28 03            jr z,5F
 93+  9635 CD 83 93         call Mov_left
 94+  9638
 95+  9638              ; ---------- --------- --------- ---------- ----------
 96+  9638
 97+  9638 3A D1 85     5 ld a,(Repetimos_db)
 98+  963B A7               and a
 99+  963C 28 07            jr z,6F
100+  963E 3D               dec a
101+  963F 32 D1 85         ld (Repetimos_db),a
102+  9642 28 01            jr z,6f
103+  9644 C9           11 ret
104+  9645 21 CF 85     6 ld hl,Contador_db_mov
105+  9648 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  9649 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  964C 23               inc hl
108+  964D 22 CD 85         ld (Puntero_mov),hl
109+  9650 18 F2            jr 11B
110+  9652 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  9655 3A D0 85         ld a,(Incrementa_puntero)
112+  9658 47               ld b,a
113+  9659 23           8 inc hl
114+  965A 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  965C 5E               ld e,(hl)
116+  965D 23               inc hl
117+  965E 56               ld d,(hl)
118+  965F EB               ex de,hl
119+  9660 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9663 18 DF            jr 11B
121+  9665
122+  9665              ; ---------- --------- --------- ---------- ----------
123+  9665              ;
124+  9665              ;   11/8/22
125+  9665              ;
126+  9665              ;   Prepara_Puntero_mov
127+  9665
128+  9665 E5           Prepara_Puntero_mov push hl
129+  9666 D5               push de
130+  9667 2A CB 85         ld hl,(Puntero_indice_mov)
131+  966A 5E               ld e,(hl)
132+  966B 23               inc hl
133+  966C 56               ld d,(hl)
134+  966D EB               ex de,hl
135+  966E 22 CD 85         ld (Puntero_mov),hl
136+  9671 D1               pop de
137+  9672 E1               pop hl
138+  9673 C9               ret
139+  9674
140+  9674              ; ---------- --------- --------- ---------- ----------
141+  9674              ;
142+  9674              ;   11/8/22
143+  9674              ;
144+  9674              ;   Reinicia_el_movimiento
145+  9674
146+  9674 CD 65 96     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  9677 AF               xor a
148+  9678 32 CF 85         ld (Contador_db_mov),a
149+  967B 32 D0 85         ld (Incrementa_puntero),a
150+  967E C3 E3 95         jp Movimiento
151+  9681 C9               ret
152+  9682              ; ---------- --------- --------- ---------- ----------
153+  9682
154+  9682
155+  9682
156+  9682
157+  9682
158+  9682
159+  9682
160+  9682
161+  9682
162+  9682
163+  9682
164+  9682
165+  9682
166+  9682
167+  9682
168+  9682
169+  9682
170+  9682
# file closed: Patrones_de_mov.asm
893   9682              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9682              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9682              ;
  3+  9682              ;	3/1/23
  4+  9682              ;
  5+  9682              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9682
  7+  9682              ;	ADC HL,SP	LD (addr),SP
  8+  9682              ;	ADD HL,SP	LD SP,(addr)
  9+  9682              ;	ADD IX,SP	LD SP,nn
 10+  9682              ; 	ADD IY,SP	LD SP,HL
 11+  9682              ;				LD SP,IX
 12+  9682              ;	DEC SP		LD SP,IY
 13+  9682
 14+  9682              ;	EX (SP),HL
 15+  9682              ;	EX (SP),IX
 16+  9682              ;	EX (SP),IY
 17+  9682
 18+  9682              ;	INC SP
 19+  9682
 20+  9682
 21+  9682                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D6 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 E3 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B DF 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
894   7FD4
895   7FD4              	SAVESNA "Pruebas.sna", START
896   7FD4
897   7FD4
898   7FD4
# file closed: Banco_de_pruebas.asm
