# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 55 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD E5 A3     	call Pinta_disparos_Amadeus
  74  82F6 CD B0 A0     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 7E 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD CF 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 7C 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 7C 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 7F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD ED 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 2B 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 167+ 89AE              ;
 168+ 89AE              ;	28/05/24
 169+ 89AE              ;
 170+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 171+ 89AE              ;
 172+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 173+ 89AE
 174+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 175+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 176+ 89B1 00           	db 0												; (Contador_de_vueltas).
 177+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 178+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 179+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 180+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 181+ 89B9 00           	db 0												; (Velocidad).
 182+ 89BA
 183+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 184+ 89BA              ;
 185+ 89BA              ;	22/01/24
 186+ 89BA              ;
 187+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 188+ 89BA              ;
 189+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 190+ 89BA
 191+ 89BA
 192+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 193+ 89BD 00           	db 0												; (Contador_de_vueltas).
 194+ 89BE 00           	db 0												; (Impacto).
 195+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 196+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 197+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 198+ 89C5 00           	db 0												; (Velocidad).
 199+ 89C6
 200+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 201+ 89C6
 202+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 203+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 204+ 89CA 00           	db 0												; (Impacto).
 205+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 206+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 207+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 208+ 89D1 00           	db 0												; (Velocidad).
 209+ 89D2
 210+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 211+ 89D2
 212+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 213+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 214+ 89D6 00           	db 0												; (Impacto).
 215+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 89DD 00           	db 0												; (Velocidad).
 219+ 89DE
 220+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 221+ 89DE
 222+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 223+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 224+ 89E2 00           	db 0												; (Impacto).
 225+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 226+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 227+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 228+ 89E9 00           	db 0												; (Velocidad).
 229+ 89EA
 230+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 231+ 89EA
 232+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 233+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 234+ 89EE 00           	db 0												; (Impacto).
 235+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 236+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 237+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 238+ 89F5 00           	db 0												; (Velocidad).
 239+ 89F6
 240+ 89F6              	org $8a00
 241+ 8A00
 242+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 243+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 244+ 8A04 00           	db 0												; (Impacto).
 245+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 246+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 247+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 248+ 8A0B 00           	db 0												; (Velocidad).
 249+ 8A0C
 250+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 251+ 8A0C
 252+ 8A0C              ;Caja_7 db 0,0,0										; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 253+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 254+ 8A0C              ;	db 0												; (Impacto).
 255+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 256+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 257+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 258+ 8A0C              ;	db 0												; (Velocidad).
 259+ 8A0C
 260+ 8A0C              ; -------------------------------------------------------------------------------------
 261+ 8A0C              ;
 262+ 8A0C              ;	2/1/25
 263+ 8A0C              ;
 264+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 265+ 8A0C              ;
 266+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 267+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 268+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 269+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 270+ 8A0C
 271+ 8A0C              Indice_de_definiciones_de_entidades
 272+ 8A0C
 273+ 8A0C 10 8A        	defw Entidad_1
 274+ 8A0E 19 8A        	defw Entidad_2
 275+ 8A10
 276+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 277+ 8A10
 278+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 279+ 8A10
 280+ 8A10 81           Entidad_1 db $81			                     		; (Tipo).
 281+ 8A11 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 282+ 8A13 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 283+ 8A15
 284+ 8A15              ; Aleatoriedad en la posición de inicio de la entidad.
 285+ 8A15              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 286+ 8A15
 287+ 8A15 02 40        	defw $4002											; (Posicion_inicio).
 288+ 8A17 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 289+ 8A19
 290+ 8A19              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 291+ 8A19
 292+ 8A19 81           Entidad_2 db $81			                   			; (Tipo).
 293+ 8A1A 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 294+ 8A1C 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 295+ 8A1E 40 50        	defw $5040                                      	; (Posicion_inicio).
 296+ 8A20 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 297+ 8A22
 298+ 8A22              ; -------------------------------------------------------------------------------------
 299+ 8A22              ;
 300+ 8A22              ;	28/05/24
 301+ 8A22              ;
 302+ 8A22              ;	Definición de Amadeus.
 303+ 8A22              ;
 304+ 8A22              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 305+ 8A22              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 306+ 8A22
 307+ 8A22 00           Definicion_Amadeus db 0			                     	; (Tipo).
 308+ 8A23 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 309+ 8A25 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 310+ 8A27 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 311+ 8A29 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A2B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A2B
   2+ 8A2B
   3+ 8A2B              ;   07/07/23
   4+ 8A2B              ;
   5+ 8A2B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A2B              ;
   7+ 8A2B              ;   Codificación:
   8+ 8A2B              ;
   9+ 8A2B              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A2B              ;
  11+ 8A2B              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A2B              ;
  13+ 8A2B              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A2B              ;
  15+ 8A2B              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A2B              ;
  17+ 8A2B              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A2B              ;                               ..... %01000010 Vel_up 4
  19+ 8A2B              ;                                               Vel_down 2
  20+ 8A2B              ;                               ..... $42
  21+ 8A2B              ;
  22+ 8A2B              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A2B              ;
  24+ 8A2B              ;                               ..... %01000010 Vel_left 4
  25+ 8A2B              ;                                               Vel_right 2
  26+ 8A2B              ;                               ..... $42
  27+ 8A2B              ;
  28+ 8A2B              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A2B              ;
  30+ 8A2B              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A2B              ;
  32+ 8A2B              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A2B              ;
  34+ 8A2B              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A2B              ;                                     $53
  36+ 8A2B              ;
  37+ 8A2B              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A2B              ;
  39+ 8A2B              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A2B              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A2B              ;
  42+ 8A2B              ;                       Arriba ..... $81
  43+ 8A2B              ;                       Arriba - izquierda ..... $a1
  44+ 8A2B              ;                       Arriba - derecha ..... $91
  45+ 8A2B              ;
  46+ 8A2B              ;                       Abajo ..... $41
  47+ 8A2B              ;                       Abajo - izquierda ..... $61
  48+ 8A2B              ;                       Abajo - derecha ..... $51
  49+ 8A2B              ;
  50+ 8A2B              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A2B              ;
  52+ 8A2B              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A2B              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A2B              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A2B              ;
  56+ 8A2B              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A2B              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A2B              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A2B              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A2B              ;
  61+ 8A2B              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A2B              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A2B              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A2B              ;
  65+ 8A2B              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A2B              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A2B              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A2B              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A2B
  70+ 8A2B              ; ----- ----- ----- ----- -----
  71+ 8A2B
  72+ 8A2B 57 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A2D 5F 8A            defw F_1
  74+ 8A2F 69 8A            defw F_2
  75+ 8A31 73 8A            defw Codo_abajo_derecha
  76+ 8A33 A7 8A            defw Derecha_y_subiendo
  77+ 8A35 B1 8A            defw Derecha_y_subiendo_1
  78+ 8A37 BB 8A            defw F_3
  79+ 8A39 C5 8A            defw F_4
  80+ 8A3B CF 8A            defw Derecha_y_bajando
  81+ 8A3D D9 8A            defw Derecha_y_bajando_1
  82+ 8A3F E3 8A            defw Derecha_y_bajando_2
  83+ 8A41 ED 8A            defw Codo_derecha_abajo
  84+ 8A43 1D 8B            defw Codo_abajo_izq.
  85+ 8A45 51 8B            defw Izquierda_y_subiendo
  86+ 8A47 5B 8B            defw Izquierda_y_subiendo_1
  87+ 8A49 65 8B            defw F_5
  88+ 8A4B 6F 8B            defw F_6
  89+ 8A4D 79 8B            defw Izquierda_y_bajando
  90+ 8A4F 83 8B            defw Izquierda_y_bajando_1
  91+ 8A51 8D 8B            defw Izquierda_y_bajando_2
  92+ 8A53 97 8B            defw Codo_izquierda_abajo
  93+ 8A55 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A57
  95+ 8A57
  96+ 8A57              ; Notas de aleatoriedad.
  97+ 8A57
  98+ 8A57              ;   Bajo_decelerando+3 (1-2)                - Define lo que baja la entidad.
  99+ 8A57              ;   Derecha_y_subiendo+8 (11)               - (11) Cuando la posición de inicio es $4001
 100+ 8A57              ;   Izquierda_y_subiendo+8 (11)             - (11) Cuando la posición de inicio es $4001
 101+ 8A57
 102+ 8A57              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
 103+ 8A57
 104+ 8A57              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
 105+ 8A57              ;                               Izquierda_y_subiendo+8 (11)
 106+ 8A57              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
 107+ 8A57              ;                               Izquierda_y_subiendo+8 (8)
 108+ 8A57              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
 109+ 8A57              ;                               Izquierda_y_subiendo+8 (8)
 110+ 8A57              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
 111+ 8A57              ;                               Izquierda_y_subiendo+8 (8)
 112+ 8A57              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
 113+ 8A57              ;                               Izquierda_y_subiendo+8 (8)
 114+ 8A57              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
 115+ 8A57              ;                               Izquierda_y_subiendo+8 (7)
 116+ 8A57              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
 117+ 8A57              ;                               Izquierda_y_subiendo+8 (7)
 118+ 8A57              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
 119+ 8A57              ;                               Izquierda_y_subiendo+8 (7)
 120+ 8A57
 121+ 8A57
 122+ 8A57
 123+ 8A57
 124+ 8A57 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 125+ 8A5B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 126+ 8A5F
 127+ 8A5F 11 11 41 01  F_1 db $11,$11,$41,1
 128+ 8A63 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 128+ 8A67 08 00
 129+ 8A69
 130+ 8A69 11 11 41 01  F_2 db $11,$11,$41,1
 131+ 8A6D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 131+ 8A71 0F FE
 132+ 8A73
 133+ 8A73 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 134+ 8A77 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 135+ 8A7B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 136+ 8A7F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 137+ 8A83 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 138+ 8A87 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 139+ 8A8B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 140+ 8A8F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 8A93 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 8A97 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 143+ 8A9B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 144+ 8A9F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 145+ 8AA3 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 146+ 8AA7
 147+ 8AA7 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 148+ 8AAB 11 11 91 FD      db $11,$11,$91,253,11,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 148+ 8AAF 0B 00
 149+ 8AB1
 150+ 8AB1 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 151+ 8AB5 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 151+ 8AB9 02 00
 152+ 8ABB
 153+ 8ABB 11 11 11 01  F_3 db $11,$11,$11,1
 154+ 8ABF 11 11 01 FD      db $11,$11,$01,253,4,0
 154+ 8AC3 04 00
 155+ 8AC5 11 11 11 01  F_4 db $11,$11,$11,1
 156+ 8AC9 11 11 02 FD      db $11,$11,$02,253,8,0
 156+ 8ACD 08 00
 157+ 8ACF
 158+ 8ACF 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 159+ 8AD3 11 11 51 FD      db $11,$11,$51,253,2,0
 159+ 8AD7 02 00
 160+ 8AD9
 161+ 8AD9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 162+ 8ADD 11 11 51 FD      db $11,$11,$51,253,6,0
 162+ 8AE1 06 00
 163+ 8AE3
 164+ 8AE3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 165+ 8AE7 11 11 51 FD      db $11,$11,$51,253,6,0
 165+ 8AEB 06 00
 166+ 8AED
 167+ 8AED              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 168+ 8AED
 169+ 8AED 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 170+ 8AF1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 171+ 8AF5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 172+ 8AF9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 173+ 8AFD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 174+ 8B01 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 175+ 8B05 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 176+ 8B09 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 177+ 8B0D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 178+ 8B11 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 179+ 8B15 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 180+ 8B19 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 181+ 8B1D
 182+ 8B1D 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 183+ 8B21 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 184+ 8B25 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 185+ 8B29 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 186+ 8B2D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 187+ 8B31 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 188+ 8B35 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 189+ 8B39 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 190+ 8B3D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 191+ 8B41 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 192+ 8B45 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 193+ 8B49 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 194+ 8B4D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 195+ 8B51
 196+ 8B51 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 197+ 8B55 11 11 A1 FD      db $11,$11,$a1,253,11,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 197+ 8B59 0B 00
 198+ 8B5B
 199+ 8B5B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 200+ 8B5F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 200+ 8B63 02 00
 201+ 8B65
 202+ 8B65 11 11 21 01  F_5 db $11,$11,$21,1
 203+ 8B69 11 11 01 FD      db $11,$11,$01,253,4,0
 203+ 8B6D 04 00
 204+ 8B6F
 205+ 8B6F 11 11 21 01  F_6 db $11,$11,$21,1
 206+ 8B73 11 11 02 FD      db $11,$11,$02,253,8,0
 206+ 8B77 08 00
 207+ 8B79
 208+ 8B79 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 209+ 8B7D 11 11 61 FD      db $11,$11,$61,253,2,0
 209+ 8B81 02 00
 210+ 8B83
 211+ 8B83 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 212+ 8B87 11 11 61 FD      db $11,$11,$61,253,6,0
 212+ 8B8B 06 00
 213+ 8B8D
 214+ 8B8D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 215+ 8B91 11 11 61 FD      db $11,$11,$61,253,6,0
 215+ 8B95 06 00
 216+ 8B97
 217+ 8B97 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 218+ 8B9B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 219+ 8B9F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 220+ 8BA3 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 221+ 8BA7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 222+ 8BAB 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 223+ 8BAF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 224+ 8BB3 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 225+ 8BB7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 226+ 8BBB 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 227+ 8BBF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 228+ 8BC3 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 229+ 8BC7
 230+ 8BC7
 231+ 8BC7
 232+ 8BC7
 233+ 8BC7
 234+ 8BC7
 235+ 8BC7
 236+ 8BC7
 237+ 8BC7
 238+ 8BC7
# file closed: Patrones_de_mov.asm
 149  8BC7              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BC7              ; 19/1/24
   2+ 8BC7
   3+ 8BC7              Indice_de_niveles
   4+ 8BC7
   5+ 8BC7 CF 8B        	defw Nivel_1
   6+ 8BC9 D1 8B        	defw Nivel_2
   7+ 8BCB
   8+ 8BCB              ;	...
   9+ 8BCB              ;	...
  10+ 8BCB              ;	+ Niveles ...
  11+ 8BCB
  12+ 8BCB 00 00        	defw 0
  13+ 8BCD 00 00        	defw 0
  14+ 8BCF
  15+ 8BCF 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BD0 01           	db 1										; Tipo de entidad que vamos a introducir en las 6 cajas de DRAW.
  17+ 8BD1
  18+ 8BD1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BD2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BD6 01 02
  20+ 8BD8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BDC 01 02
  21+ 8BDE
# file closed: Niveles.asm
 150  8BDE
 151  8BDE              ; --------------------------------------------------------------------------------
 152  8BDE              ;
 153  8BDE              ; 12/05/24
 154  8BDE              ;
 155  8BDE              ; Parámetros DRAW.
 156  8BDE              ;
 157  8BDE
 158  8BDE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BDE
 160  8BDE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BDF              ;															- Patrón de movimiento.
 162  8BDF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BE0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BE1
 165  8BE1 01           Contador_de_vueltas db 1								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BE2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BE2              ;														; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 168  8BE2
 169  8BE2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 170  8BE2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 171  8BE2              ; Ejemplos.
 172  8BE2
 173  8BE2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 174  8BE2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 175  8BE2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 176  8BE2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 177  8BE2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 178  8BE2
 179  8BE2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 180  8BE3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 181  8BE3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 182  8BE3
 183  8BE3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 184  8BE5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 185  8BE5
 186  8BE5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 187  8BE7
 188  8BE7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 189  8BE7
 190  8BE7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 191  8BE9              ;														; _palabras que componen el "movimiento_masticado".
 192  8BE9
 193  8BE9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 194  8BE9
 195  8BE9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 196  8BEA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 197  8BEA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 198  8BEA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 199  8BEA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 200  8BEA
 201  8BEA 00           Ctrl_2 db 0
 202  8BEB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 203  8BEB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 204  8BEB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 205  8BEB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 206  8BEB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 207  8BEB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 208  8BEB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 209  8BEB              ;
 210  8BEB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 211  8BEB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 212  8BEB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 213  8BEB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 214  8BEB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 215  8BEB              ;														BIT 4, ???
 216  8BEB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 217  8BEB
 218  8BEB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 219  8BEC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 220  8BEC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 221  8BEC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 222  8BEC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 223  8BEC              ;
 224  8BEC              ; 														DESCRIPCIÖN:
 225  8BEC              ;
 226  8BEC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 227  8BEC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 228  8BEC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 229  8BEC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 230  8BEC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 231  8BEC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 232  8BEC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 233  8BEC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 234  8BEC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BEC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BEC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BEC              ;
 238  8BEC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BEC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BEC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BEC
 242  8BEC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BEC
 244  8BEC 00           Filas db 0												; Filas. [DRAW]
 245  8BED 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BEE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BF0 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BF2
 249  8BF2              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BF2
 251  8BF2 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BF3              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BF3              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BF3
 255  8BF3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BF3
 257  8BF3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BF3              ;
 259  8BF3              ;	COLORES: 0 ..... NEGRO
 260  8BF3              ;    		 1 ..... AZUL
 261  8BF3              ; 			 2 ..... ROJO
 262  8BF3              ;			 3 ..... MAGENTA
 263  8BF3              ; 			 4 ..... VERDE
 264  8BF3              ; 			 5 ..... CIAN
 265  8BF3              ;			 6 ..... AMARILLO
 266  8BF3              ; 			 7 ..... BLANCO
 267  8BF3
 268  8BF3 00 00        Indice_Sprite_der defw 0
 269  8BF5 00 00        Indice_Sprite_izq defw 0
 270  8BF7 00 00        Puntero_DESPLZ_der defw 0
 271  8BF9 00 00        Puntero_DESPLZ_izq defw 0
 272  8BFB
 273  8BFB 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BFD 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BFE
 276  8BFE 03           Mode db 3												;	Mode_1 ..... El objeto aparece por la izquierda, Puntero_objeto se sitúa en la última columna de la derecha del Sprite. Imprime 1 columna.
 277  8BFF              ;														;	Mode_2 ..... El objeto aparece por la izquierda, Puntero_objeto se sitúa en la penúltima columna de la derecha del Sprite. Imprime 2 columnas.
 278  8BFF              ;														;	Mode_3 ..... El objeto aparece completo en pantalla, Imprime las 3 columnas.
 279  8BFF              ;														;	Mode_4 ..... El objeto desaparece por el lado derecho de la pantalla, Imprime las 2 primeras columnas del Sprite.
 280  8BFF              ;														;	Mode_5 ..... El objeto desaparece por el lado derecho de la pantalla, Imprime la 1ª columna del Sprite.
 281  8BFF
 282  8BFF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 283  8C01              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 284  8C01 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 285  8C02
 286  8C02              ; variables de control general.
 287  8C02
 288  8C02 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 289  8C03
 290  8C03              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 291  8C03
 292  8C03              Perfiles_de_velocidad
 293  8C03
 294  8C03 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 295  8C04 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 296  8C05 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 297  8C06 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 298  8C07
 299  8C07              ; Contadores de 16 bits.
 300  8C07
 301  8C07 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 302  8C09 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 303  8C0B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 304  8C0D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 305  8C0F
 306  8C0F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 307  8C0F
 308  8C0F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 309  8C11 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 310  8C13 00 00        Puntero_indice_mov_bucle defw 0							;
 311  8C15              ;
 312  8C15              ;
 313  8C15 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 314  8C16              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 315  8C16              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 316  8C16 00           Incrementa_puntero_backup db 0
 317  8C17 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 318  8C18              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 319  8C18 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 320  8C19 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 321  8C1A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 322  8C1B              ;
 323  8C1B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 324  8C1B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 325  8C1B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 326  8C1B              ;
 327  8C1B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 328  8C1B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 329  8C1B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 330  8C1B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 331  8C1B              ;
 332  8C1B              ;														;	"$ff" ..... Bucle infinito de repetición.
 333  8C1B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 334  8C1B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 335  8C1B
 336  8C1B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 337  8C1C
 338  8C1C              ;														DESCRIPCIÓN:
 339  8C1C              ;
 340  8C1C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 341  8C1C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 342  8C1C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 343  8C1C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 344  8C1C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 345  8C1C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 346  8C1C
 347  8C1C              ;														BIT 3, Recarga de nueva oleada.
 348  8C1C              ;														BIT 4, Recarga de nueva oleada.
 349  8C1C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 350  8C1C              ;														BIT 6, **** Frame completo.
 351  8C1C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 352  8C1C
 353  8C1C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 354  8C1E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 355  8C1E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 356  8C1E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 357  8C1E
 358  8C1E              ; Gestión de ENTIDADES y CAJAS.
 359  8C1E
 360  8C1E 00 00        Puntero_store_caja defw 0
 361  8C20 00 00        Puntero_restore_caja defw 0
 362  8C22 00 00        Indice_restore_caja defw 0
 363  8C24 00 00        Puntero_indice_master defw 0
 364  8C26
 365  8C26 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 366  8C27 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 367  8C28 00           Entidades_en_curso db 0									; Entidades en pantalla.
 368  8C29
 369  8C29 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 370  8C2B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 371  8C2D              ;														; _ puntero (Indice_entidades).
 372  8C2D
 373  8C2D              ;---------------------------------------------------------------------------------------------------------------
 374  8C2D              ;
 375  8C2D              ;	13/10/24
 376  8C2D              ;
 377  8C2D              ;	Álbumes.
 378  8C2D
 379  8C2D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 380  8C2F              ;														; _variable para almacenar lo posición del puntero_
 381  8C2F              ; 														; _de pila, SP.
 382  8C2F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 383  8C31              ;														; La utiliza la rutina [Extrae_foto_registros].
 384  8C31
 385  8C31              ; Impresión. ----------------------------------------------------------------------------------------------------
 386  8C31
 387  8C31 00 00        Album_de_pintado defw 0
 388  8C33 00 00        Album_de_borrado defw 0
 389  8C35 00 00        Album_de_pintado_Amadeus defw 0
 390  8C37 00 00        Album_de_borrado_Amadeus defw 0
 391  8C39
 392  8C39 00 00        Album_de_pintado_disparos_Amadeus defw 0
 393  8C3B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 394  8C3D
 395  8C3D 00 00        Album_de_pintado_disparos_Entidades defw 0
 396  8C3F 00 00        Album_de_borrado_disparos_Entidades defw 0
 397  8C41
 398  8C41
 399  8C41 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 400  8C43
 401  8C43 00           Num_de_bytes_album_de_disparos db 0
 402  8C44 00           Num_de_bytes_album_de_disparos_borrado db 0
 403  8C45
 404  8C45 07           Numero_de_disparos_de_entidades db 7
 405  8C46
 406  8C46 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 407  8C47 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 408  8C48
 409  8C48 00 00        Techo_Scanlines_album defw 0
 410  8C4A 00 00        Techo_Scanlines_album_2 defw 0
 411  8C4C 00           Switch db 0
 412  8C4D 00 00        Techo defw 0
 413  8C4F 00 00        Scanlines_album_SP defw 0
 414  8C51 00 89        India_SP defw Tabla_de_pintado
 415  8C53 03 89        India_2_SP defw Tabla_de_pintado+3
 416  8C55
 417  8C55 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 418  8C56              ;
 419  8C56              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 420  8C56              ;!															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 421  8C56              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 422  8C56              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 423  8C56              ;																Habilita el borrado/pintado de sprites.
 424  8C56              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 425  8C56              ;																_ a la baja.
 426  8C56              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 427  8C56              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 428  8C56              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 429  8C56              ; 																_ el último frame de la explosión de nuestra nave.
 430  8C56              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 431  8C56              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 432  8C56
 433  8C56 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 434  8C57              ;
 435  8C57              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 436  8C57
 437  8C57 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 438  8C58              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 439  8C58              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 440  8C58
 441  8C58              ; Gestión de Disparos.
 442  8C58
 443  8C58 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 444  8C5A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 445  8C5C 00           Impacto2 db 0											; Byte de control de impactos.
 446  8C5D
 447  8C5D              ;
 448  8C5D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 449  8C5D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 450  8C5D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 451  8C5D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 452  8C5D
 453  8C5D
 454  8C5D
 455  8C5D
 456  8C5D
 457  8C5D
 458  8C5D
 459  8C5D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 460  8C5F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 461  8C5F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 462  8C5F
 463  8C5F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 464  8C61              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 465  8C61 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 466  8C64              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 467  8C64 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 468  8C67              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 469  8C67
 470  8C67              ;---------------------------------------------------------------------------------------------------------------
 471  8C67
 472  8C67              ; Relojes y temporizaciones.
 473  8C67
 474  8C67 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 475  8C68 05           Clock_explosion_Amadeus db 5
 476  8C69 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 477  8C6A
 478  8C6A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 479  8C6C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 480  8C6E 00           Numero_rnd_disparos db 0
 481  8C6F
 482  8C6F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 483  8C71 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 484  8C72 A0           CLOCK_disparos_de_entidades db $a0
 485  8C73
 486  8C73              ;---------------------------------------------------------------------------------------------------------------
 487  8C73
 488  8C73              ; Gestión de NIVELES.
 489  8C73
 490  8C73 00           Nivel db 0												; Nivel actual del juego.
 491  8C74 00 00        Puntero_indice_NIVELES defw 0
 492  8C76 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 493  8C78              ; 														; _ que definen el NIVEL.
 494  8C78
 495  8C78              ; ---------------------------------------------------------------------------------------------------------------
 496  8C78
 497  8C78              ; Temporizaciones Shield.
 498  8C78
 499  8C78 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 500  8C7C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 501  8C7E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 502  8C7F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 503  8C80 00           Shield_3 db 0
 504  8C81
 505  8C81 07           Lives db 7
 506  8C82
 507  8C82              ; 	INICIO  *************************************************************************************************************************************************************************
 508  8C82              ;
 509  8C82              ;	13/11/24
 510  8C82
 511  8C82              START
 512  8C82
 513  8C82 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 514  8C85 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 515  8C87 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 516  8C89 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 517  8C8B F3           	DI
 518  8C8C
 519  8C8C              ; Limpiamos pantalla.
 520  8C8C
 521  8C8C              ;	ld a,%00000111
 522  8C8C              ;	call Cls
 523  8C8C CD C4 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 524  8C8F
 525  8C8F              INICIALIZACION
 526  8C8F
 527  8C8F 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 528  8C91 CD 5F 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 529  8C94 CD 14 8F     	call Extrae_numero_aleatorio_y_avanza
 530  8C97 6F           	ld l,a
 531  8C98 26 00        	ld h,0
 532  8C9A 22 6F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 533  8C9D
 534  8C9D              ;	Inicia los álbumes de líneas.
 535  8C9D
 536  8C9D CD 19 91     	call Inicia_albumes_de_lineas
 537  8CA0 CD 29 91     	call Inicia_albumes_de_lineas_Amadeus
 538  8CA3 CD 36 91     	call Inicia_albumes_de_disparos
 539  8CA6
 540  8CA6              ;	Inicia 1er Nivel.
 541  8CA6
 542  8CA6 CD BE 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 543  8CA9 CD 8F 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 544  8CAC              ;														   _reponiendo entidades eliminadas.
 545  8CAC CD F4 93     	call Prepara_Cajas_de_Entidades
 546  8CAF
 547  8CAF CD 45 94     	call Inicia_Amadeus
 548  8CB2
 549  8CB2              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 550  8CB2              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 551  8CB2              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 552  8CB2 11 AE 89     	ld de,Amadeus_BOX
 553  8CB5 CD 31 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 554  8CB8 CD 88 94     	call Limpiamos_bandeja_DRAW
 555  8CBB
 556  8CBB              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 557  8CBB
 558  8CBB 06 3C        	ld b,60
 559  8CBD CD 08 9F     2 call Amadeus_a_izquierda
 560  8CC0 10 FB        	djnz 2B
 561  8CC2
 562  8CC2 CD F7 90     	call Genera_datos_de_impresion_Amadeus
 563  8CC5
 564  8CC5              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 565  8CC5
 566  8CC5 CD 52 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 567  8CC8
 568  8CC8 CD CF 91     	call Inicia_Shield
 569  8CCB
 570  8CCB 2A 4F 8C     6 ld hl,(Scanlines_album_SP)
 571  8CCE 22 48 8C     	ld (Techo_Scanlines_album),hl
 572  8CD1
 573  8CD1 2A 33 8C     	ld hl,(Album_de_borrado)
 574  8CD4 22 4F 8C     	ld (Scanlines_album_SP),hl
 575  8CD7
 576  8CD7 21 00 89     	ld hl,Tabla_de_pintado
 577  8CDA 22 51 8C     	ld (India_SP),hl
 578  8CDD
 579  8CDD 21 55 8C     	ld hl,Ctrl_3
 580  8CE0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 581  8CE2 CB D6        	set 2,(hl)
 582  8CE4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 583  8CE6
 584  8CE6 FB           	ei 													; Ha de apuntar a $5c3a.
 585  8CE7
 586  8CE7 76           	halt
 587  8CE8
 588  8CE8              ; ------------------------------------
 589  8CE8
 590  8CE8              Main
 591  8CE8              ;
 592  8CE8              ; 07/11/24.
 593  8CE8
 594  8CE8              ; Gestión de disparos.
 595  8CE8
 596  8CE8 CD E9 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 597  8CEB CD F6 A0     	call Motor_de_disparos_entidades
 598  8CEE CD 91 A3     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 599  8CF1
 600  8CF1              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 601  8CF1              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 602  8CF1              ; Este hecho lo indica el bit2 de (Impacto2).
 603  8CF1
 604  8CF1 CD 32 A5     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 605  8CF4
 606  8CF4              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 607  8CF4
 608  8CF4 21 72 8C     	ld hl,CLOCK_disparos_de_entidades
 609  8CF7 35           	dec (hl)
 610  8CF8 CC 2A 8E     	call z,Autoriza_disparo_de_entidades
 611  8CFB
 612  8CFB 2A 6F 8C     	ld hl,(Clock_next_entity)
 613  8CFE ED 4B 78 5C  	ld bc,(FRAMES)
 614  8D02 A7           	and a
 615  8D03 ED 42        	sbc hl,bc
 616  8D05 20 21        	jr nz,1F
 617  8D07
 618  8D07              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 619  8D07
 620  8D07 CD 14 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 621  8D0A CD 2B 8F     	call Define_Clock_next_entity
 622  8D0D
 623  8D0D              ; GESTIÓN DE ENTIDADES.
 624  8D0D
 625  8D0D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 626  8D0D              ; _ (Clock_next_entity) para la siguiente entidad.
 627  8D0D
 628  8D0D              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 629  8D0D              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 630  8D0D              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 631  8D0D
 632  8D0D 21 27 8C     	ld hl,Numero_parcial_de_entidades
 633  8D10 46           	ld b,(hl)
 634  8D11
 635  8D11 04           	inc b
 636  8D12 05           	dec b
 637  8D13
 638  8D13 F3           	di
 639  8D14 28 FE        	jr z,$													;! Nivel superado !!!!!
 640  8D16 FB           	ei
 641  8D17
 642  8D17 3A 28 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 643  8D1A B8           	cp b
 644  8D1B 28 0B        	jr z,1F
 645  8D1D 30 09        	jr nc,1F
 646  8D1F
 647  8D1F              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 648  8D1F
 649  8D1F 3C           	inc a
 650  8D20 32 28 8C     	ld (Entidades_en_curso),a
 651  8D23
 652  8D23 21 56 8C     	ld hl,Ctrl_4
 653  8D26 CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 654  8D28
 655  8D28              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 656  8D28
 657  8D28              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 658  8D28              ;	call Define_Clock_next_entity
 659  8D28
 660  8D28 3A 28 8C     1 ld a,(Entidades_en_curso)
 661  8D2B A7           	and a
 662  8D2C CA D0 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 663  8D2F 47           	ld b,a													; No hay entidades que gestionar.
 664  8D30
 665  8D30              ; ( Código que ejecutamos con cada entidad: ).
 666  8D30
 667  8D30              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 668  8D30              ;
 669  8D30              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 670  8D30
 671  8D30 21 00 89     	ld hl,Tabla_de_pintado
 672  8D33 22 51 8C     	ld (India_SP),hl
 673  8D36
 674  8D36 21 55 8C     	ld hl,Ctrl_3
 675  8D39 CB D6        	set 2,(hl)
 676  8D3B CD BE 8E     	call Change
 677  8D3E
 678  8D3E C5           2 push bc 												; Nº de entidades en curso.
 679  8D3F
 680  8D3F DD 2A 1E 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 681  8D43 CD A0 91     	call Salta_caja_de_entidades_vacia
 682  8D46
 683  8D46              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 684  8D46
 685  8D46 DD 7E 00     	ld a,(ix+0)
 686  8D49 CB 7F        	bit 7,a
 687  8D4B 28 11        	jr z,5F
 688  8D4D
 689  8D4D              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 690  8D4D
 691  8D4D 21 56 8C     	ld hl,Ctrl_4
 692  8D50 CB 46        	bit 0,(hl)
 693  8D52 CC AF 91     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 694  8D55 28 E8        	jr z,6B
 695  8D57
 696  8D57 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 697  8D59 CB BF        	res 7,a
 698  8D5B DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 699  8D5E
 700  8D5E              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 701  8D5E              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 702  8D5E
 703  8D5E 3A 5C 8C     5 ld a,(Impacto2)
 704  8D61 CB 5F        	bit 3,a
 705  8D63 C4 28 A3     	call nz,Compara_con_coordenadas_de_disparo
 706  8D66
 707  8D66              ; Existe colisión entre esta entidad y Amadeus ???
 708  8D66
 709  8D66 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 710  8D69 CB 4F        	bit 1,a
 711  8D6B C4 BA 92     	call nz,Genera_explosion
 712  8D6E 20 43        	jr nz,Gestiona_siguiente_entidad
 713  8D70
 714  8D70 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 715  8D73 A7           	and a
 716  8D74 28 0C        	jr z,3F
 717  8D76
 718  8D76              ; IMPACTO en entidad por colisión con Amadeus.
 719  8D76
 720  8D76              ; 5/7/24
 721  8D76              ; Nota importante:
 722  8D76              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 723  8D76              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 724  8D76              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 725  8D76
 726  8D76 3A B2 89     	ld a,(Impacto_Amadeus)
 727  8D79 A7           	and a
 728  8D7A C4 BA 92     	call nz,Genera_explosion
 729  8D7D 20 34        	jr nz,Gestiona_siguiente_entidad
 730  8D7F
 731  8D7F              ; Falsa colisión !!!
 732  8D7F
 733  8D7F 32 E2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 734  8D82
 735  8D82              ; -------------------------------------------
 736  8D82
 737  8D82 CD 6F 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 738  8D85 CD 96 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 739  8D88 CD 96 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 740  8D8B
 741  8D8B DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 742  8D8D DD 2A E3 8B  	ld ix,(Puntero_de_impresion)
 743  8D91 CD A2 95     	call Genera_datos_de_impresion
 744  8D94 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 745  8D96
 746  8D96 CD AB 94     	call Decrementa_Contador_de_mov_masticados
 747  8D99
 748  8D99              ; -------------------------------------------
 749  8D99
 750  8D99              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 751  8D99
 752  8D99 2A E3 8B     	ld hl,(Puntero_de_impresion)
 753  8D9C CD 76 95     	call Genera_coordenadas
 754  8D9F
 755  8D9F ED 4B DF 8B  	ld bc,(Coordenada_X)
 756  8DA3
 757  8DA3 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 758  8DA6 DD 70 02     	ld (ix+2),b
 759  8DA9
 760  8DA9              ; TODO: Generamos disparo ???
 761  8DA9
 762  8DA9 3A 47 8C     	ld a,(Permiso_de_disparo_Entidades)
 763  8DAC A7           	and a
 764  8DAD C4 3F 8E     	call nz,Entidad_genera_disparo_si_procede
 765  8DB0
 766  8DB0 CD AC A4     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 767  8DB3
 768  8DB3              Gestiona_siguiente_entidad
 769  8DB3
 770  8DB3 CD AF 91     	call Incrementa_punteros_de_cajas
 771  8DB6
 772  8DB6 C1           	pop bc
 773  8DB7 10 85        	djnz 2B
 774  8DB9
 775  8DB9              ; Hemos gestionado todas las entidades.
 776  8DB9              ; ----- ----- -----
 777  8DB9
 778  8DB9 CD 83 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 779  8DBC CD 9A 8F     	call Ordena_tabla_de_impresion
 780  8DBF CD 52 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 781  8DC2
 782  8DC2 CD 40 8F     	call Borra_diferencia
 783  8DC5
 784  8DC5 3A 55 8C     	ld a,(Ctrl_3)
 785  8DC8 CB 5F        	bit 3,a
 786  8DCA 20 04        	jr nz,Gestion_de_Amadeus
 787  8DCC
 788  8DCC EB           	ex de,hl
 789  8DCD 71           	ld (hl),c
 790  8DCE 2C           	inc l
 791  8DCF 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 792  8DD0
 793  8DD0              ;! GESTIONA AMADEUS !!!!!!!!!!
 794  8DD0
 795  8DD0              Gestion_de_Amadeus
 796  8DD0
 797  8DD0 21 55 8C     	ld hl,Ctrl_3
 798  8DD3 CB 76        	bit 6,(hl)
 799  8DD5 28 13        	jr z,Amadeus_vivo
 800  8DD7
 801  8DD7              ; Amadeus ha sido destruido.
 802  8DD7              ; Decrementa (Temp_new_live).
 803  8DD7
 804  8DD7 21 69 8C     	ld hl,Temp_new_live
 805  8DDA 35           	dec (hl)
 806  8DDB 20 26        	jr nz,End_frame
 807  8DDD
 808  8DDD              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 809  8DDD
 810  8DDD 21 81 8C     	ld hl,Lives
 811  8DE0 35           	dec (hl)
 812  8DE1
 813  8DE1              ;! Fin del juego
 814  8DE1
 815  8DE1 F3           	di
 816  8DE2 28 FE        	jr z,$														;! GAME OVER !!!!!
 817  8DE4 FB           	ei
 818  8DE5
 819  8DE5              ; Nueva nave.
 820  8DE5
 821  8DE5 CD 5C 8E     	call Reinicia_Amadeus
 822  8DE8 18 19        	jr End_frame
 823  8DEA
 824  8DEA              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 825  8DEA
 826  8DEA              Amadeus_vivo
 827  8DEA
 828  8DEA 3A B2 89     	ld a,(Impacto_Amadeus)
 829  8DED A7           	and a
 830  8DEE C4 2A 93     	call nz, Genera_explosion_Amadeus
 831  8DF1 20 10        	jr nz, End_frame
 832  8DF3
 833  8DF3 CD 97 92     	call Teclado
 834  8DF6 21 55 8C     	ld hl,Ctrl_3
 835  8DF9
 836  8DF9 CB 6E        	bit 5,(hl)
 837  8DFB 28 06        	jr z,End_frame
 838  8DFD
 839  8DFD              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 840  8DFD
 841  8DFD CD D9 8E     	call Change_Amadeus
 842  8E00 CD F7 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 843  8E03
 844  8E03              End_frame
 845  8E03
 846  8E03              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 847  8E03              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 848  8E03
 849  8E03 CD 53 A2     	call Genera_datos_de_impresion_disparos_Entidades
 850  8E06 CD 17 A4     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 851  8E09 CD 6D A3     	call Calcula_bytes_pintado_disparos
 852  8E0C CD 7A A3     	call Limpia_album_de_pintado_disparos_entidades
 853  8E0F
 854  8E0F              ; ------------ ------------- --------------
 855  8E0F
 856  8E0F 2A 33 8C     	ld hl,(Album_de_borrado)
 857  8E12 22 4F 8C     	ld (Scanlines_album_SP),hl
 858  8E15
 859  8E15 21 55 8C     	ld hl,Ctrl_3
 860  8E18 CB C6        	set 0,(hl) 											; Indica Frame completo.
 861  8E1A CB 9E        	res 3,(hl)
 862  8E1C CB A6        	res 4,(hl)
 863  8E1E
 864  8E1E 21 56 8C     	ld hl,Ctrl_4
 865  8E21 CB 86        	res 0,(hl)
 866  8E23
 867  8E23 AF           	xor a
 868  8E24 D3 FE        	out ($fe),a
 869  8E26
 870  8E26 76           	halt
 871  8E27
 872  8E27 C3 E8 8C     	jp Main
 873  8E2A
 874  8E2A              ;------------------------------------------
 875  8E2A              ;
 876  8E2A              ;	07/11/24
 877  8E2A
 878  8E2A              Autoriza_disparo_de_entidades
 879  8E2A
 880  8E2A 3E 01        	ld a,1
 881  8E2C 32 47 8C     	ld (Permiso_de_disparo_Entidades),a
 882  8E2F
 883  8E2F 3A 71 8C     	ld a,(Repone_CLOCK_disparos)
 884  8E32 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 885  8E34 38 02        	jr c,1F
 886  8E36
 887  8E36              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 888  8E36              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 889  8E36              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 890  8E36
 891  8E36 D6 04        	sub 4								; Aumenta la cadencia del disparo.
 892  8E38
 893  8E38 32 71 8C     1 ld (Repone_CLOCK_disparos),a
 894  8E3B 32 72 8C     	ld (CLOCK_disparos_de_entidades),a
 895  8E3E
 896  8E3E C9           	ret
 897  8E3F
 898  8E3F              ;------------------------------------------
 899  8E3F              ;
 900  8E3F              ;	14/09/24
 901  8E3F              ;
 902  8E3F              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 903  8E3F
 904  8E3F              Entidad_genera_disparo_si_procede
 905  8E3F
 906  8E3F 2A 6C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 907  8E42 CB 06        	rlc (hl)
 908  8E44
 909  8E44 DC A3 A2     	call c,Genera_disparo_de_entidad_maldosa
 910  8E47
 911  8E47 C9           	ret
 912  8E48
 913  8E48              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 914  8E48              ;
 915  8E48              ;	30/09/24
 916  8E48
 917  8E48              Actuaiza_sp_de_disparos_de_entidades
 918  8E48
 919  8E48 2A 6C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 920  8E4B 23           	inc hl
 921  8E4C 22 6C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 922  8E4F
 923  8E4F 11 FD 88     	ld de,Numeros_aleatorios+7
 924  8E52 7B           	ld a,e
 925  8E53 95           	sub l
 926  8E54 C0           	ret nz
 927  8E55
 928  8E55 21 F6 88     1 ld hl,Numeros_aleatorios
 929  8E58 22 6C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 930  8E5B C9           	ret
 931  8E5C
 932  8E5C              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 933  8E5C              ;
 934  8E5C              ;	24/07/24
 935  8E5C
 936  8E5C              Reinicia_Amadeus
 937  8E5C
 938  8E5C              ;	Reinicia posición y estado.
 939  8E5C
 940  8E5C 21 CF 50     	ld hl,$50cf
 941  8E5F 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 942  8E62 21 CC DC     	ld hl,$dccc
 943  8E65 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 944  8E68 21 3D 00     	ld hl,$003d
 945  8E6B 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 946  8E6E
 947  8E6E              ;	limpiamos el álbum de borrado.
 948  8E6E
 949  8E6E 2A 37 8C     	ld hl,(Album_de_borrado_Amadeus)
 950  8E71
 951  8E71 AF           	xor a
 952  8E72 77           	ld (hl),a
 953  8E73
 954  8E73 E5           	push hl
 955  8E74 D1           	pop de
 956  8E75 13           	inc de
 957  8E76
 958  8E76 01 23 00     	ld bc,35
 959  8E79 ED B0        	ldir
 960  8E7B
 961  8E7B CD F7 90     	call Genera_datos_de_impresion_Amadeus
 962  8E7E
 963  8E7E              ;	Reinicia temporizaciones.
 964  8E7E
 965  8E7E CD CF 91     	call Inicia_Shield
 966  8E81
 967  8E81 3E 5A        	ld a,90
 968  8E83 32 7E 8C     	ld (Shield),a
 969  8E86
 970  8E86 3E 64        	ld a,100
 971  8E88 32 69 8C     	ld (Temp_new_live),a
 972  8E8B
 973  8E8B              ; 	Restauramos el FLAG: Amadeus vivo.
 974  8E8B
 975  8E8B 21 55 8C     	ld hl,Ctrl_3
 976  8E8E CB B6        	res 6,(hl)
 977  8E90
 978  8E90              ;	Fuerza la impresión de la nave en el siguiente frame.
 979  8E90
 980  8E90 21 55 8C      	ld hl,Ctrl_3
 981  8E93 CB EE        	set 5,(hl)
 982  8E95
 983  8E95 C9           	ret
 984  8E96
 985  8E96              ; --------------------------------------------------------------------------------------------------------------
 986  8E96              ;
 987  8E96              ;	23/11/24
 988  8E96
 989  8E96              Ajusta_velocidad_entidad
 990  8E96
 991  8E96 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 992  8E99 A7           	and a
 993  8E9A C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 994  8E9B              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 995  8E9B              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 996  8E9B
 997  8E9B
 998  8E9B              ; Incrementa (Contador_de_vueltas)x2.
 999  8E9B              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
1000  8E9B
1001  8E9B              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
1002  8E9B              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
1003  8E9B              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
1004  8E9B              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1005  8E9B              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1006  8E9B
1007  8E9B
1008  8E9B CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1009  8E9D DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1010  8EA0 E6 10        	and $10
1011  8EA2 C8           	ret z
1012  8EA3
1013  8EA3              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1014  8EA3
1015  8EA3 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1016  8EA6 CB 2F        	sra a
1017  8EA8 CB 2F        	sra a
1018  8EAA DD 77 0B     	ld (ix+11),a
1019  8EAD
1020  8EAD DD 6E 07     	ld l,(ix+7)
1021  8EB0 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1022  8EB3
1023  8EB3              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1024  8EB3 23           	inc hl
1025  8EB4 23           	inc hl
1026  8EB5 23           	inc hl
1027  8EB6 23           	inc hl
1028  8EB7              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1029  8EB7
1030  8EB7 DD 75 07     	ld (ix+7),l
1031  8EBA DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1032  8EBD
1033  8EBD C9           	ret
1034  8EBE
1035  8EBE              ; --------------------------------------------------------------------------------------------------------------
1036  8EBE              ;
1037  8EBE              ;	25/08/24
1038  8EBE
1039  8EBE              Change
1040  8EBE
1041  8EBE 3A 4C 8C     	ld a,(Switch)
1042  8EC1 EE 01        	xor 1
1043  8EC3 32 4C 8C     	ld (Switch),a
1044  8EC6 2A 31 8C     	ld hl,(Album_de_pintado)
1045  8EC9 ED 5B 33 8C  	ld de,(Album_de_borrado)
1046  8ECD EB           	ex de,hl
1047  8ECE 22 31 8C     	ld (Album_de_pintado),hl
1048  8ED1 22 4F 8C     	ld (Scanlines_album_SP),hl
1049  8ED4 ED 53 33 8C  	ld (Album_de_borrado),de
1050  8ED8 C9           	ret
1051  8ED9
1052  8ED9              Change_Amadeus
1053  8ED9
1054  8ED9 2A 35 8C     	ld hl,(Album_de_pintado_Amadeus)
1055  8EDC ED 5B 37 8C  	ld de,(Album_de_borrado_Amadeus)
1056  8EE0 EB           	ex de,hl
1057  8EE1 22 35 8C     	ld (Album_de_pintado_Amadeus),hl
1058  8EE4 ED 53 37 8C  	ld (Album_de_borrado_Amadeus),de
1059  8EE8 C9           	ret
1060  8EE9
1061  8EE9              Change_Disparos
1062  8EE9
1063  8EE9              ; Álbumes de Amadeus.
1064  8EE9
1065  8EE9 2A 39 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1066  8EEC ED 5B 3B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1067  8EF0 EB           	ex de,hl
1068  8EF1 22 39 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1069  8EF4 ED 53 3B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1070  8EF8 CD 62 A3     	call Limpia_album_de_pintado_disparos_Amadeus
1071  8EFB
1072  8EFB              ; Álbumes de entidades.
1073  8EFB
1074  8EFB 2A 3D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1075  8EFE ED 5B 3F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1076  8F02 EB           	ex de,hl
1077  8F03 22 3D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1078  8F06 ED 53 3F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1079  8F0A 22 41 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1080  8F0D
1081  8F0D 3A 43 8C     	ld a,(Num_de_bytes_album_de_disparos)
1082  8F10 32 44 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1083  8F13
1084  8F13 C9           	ret
1085  8F14
1086  8F14              ; ------------------------------------
1087  8F14              ;
1088  8F14              ; 1/05/24
1089  8F14
1090  8F14              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1091  8F14              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1092  8F14
1093  8F14              ;	DESTRUYE: HL,DE,A
1094  8F14              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1095  8F14
1096  8F14              ;	Variables implicadas: (RND_SP).
1097  8F14
1098  8F14              Extrae_numero_aleatorio_y_avanza
1099  8F14
1100  8F14 21 FD 88     	ld hl,Numeros_aleatorios+7
1101  8F17 EB           	ex de,hl
1102  8F18 2A 6A 8C     	ld hl,(RND_SP)
1103  8F1B
1104  8F1B 7B           	ld a,e
1105  8F1C 95           	sub l
1106  8F1D 20 06        	jr nz,1F
1107  8F1F
1108  8F1F              ; Sitúa HL al principio de la tabla de nº aleatorios.
1109  8F1F
1110  8F1F 21 F6 88     	ld hl,Numeros_aleatorios
1111  8F22 22 6A 8C     	ld (RND_SP),HL
1112  8F25
1113  8F25              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1114  8F25
1115  8F25 7E           1 ld a,(hl)
1116  8F26 23           	inc hl
1117  8F27 22 6A 8C     	ld (RND_SP),hl
1118  8F2A C9           	ret
1119  8F2B
1120  8F2B              ; ------------------------------------
1121  8F2B              ;
1122  8F2B              ; 1/05/24
1123  8F2B
1124  8F2B              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1125  8F2B              ; (1 a 4 segundos).
1126  8F2B              ; Actualizamos (Clock_next_entity) con A.
1127  8F2B
1128  8F2B              ;	DESTRUYE: A y B.
1129  8F2B              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1130  8F2B              ;			 Actualiza (Clock_next_entity) con A.
1131  8F2B
1132  8F2B              ;	Variables implicadas: (Clock_next_entity).
1133  8F2B
1134  8F2B              ; Notas:
1135  8F2B
1136  8F2B              ; 	$32 1 seg.
1137  8F2B              ; 	$64 2 seg.
1138  8F2B              ; 	$96 3 seg.
1139  8F2B              ; 	$c8 4 seg.
1140  8F2B              ; 	$fa 5 seg.
1141  8F2B
1142  8F2B              ; $ffff 1310,7 seg, 22 minutos.
1143  8F2B
1144  8F2B              ;	$0100  5 seg. aproximadamente.
1145  8F2B              ;	$0200 10 seg. aproximadamente.
1146  8F2B              ;	$0300 15 seg. aproximadamente.
1147  8F2B              ;	$0400 20 seg. aproximadamente.
1148  8F2B              ;	$0500 25 seg. aproximadamente.
1149  8F2B              ;	$0600 30 seg. aproximadamente.
1150  8F2B
1151  8F2B              Define_Clock_next_entity
1152  8F2B
1153  8F2B FE 34        	cp $34
1154  8F2D 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1155  8F2F
1156  8F2F              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1157  8F2F
1158  8F2F 4F           3 ld c,a
1159  8F30 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1160  8F32 2A 78 5C     	ld hl,(FRAMES)
1161  8F35 A7           	and a
1162  8F36 ED 4A        	adc hl,bc
1163  8F38 22 6F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1164  8F3B C9           	ret
1165  8F3C
1166  8F3C 3E 34        1 ld a,$34
1167  8F3E 18 EF        	jr 3B
1168  8F40
1169  8F40              ; ------------------------------------
1170  8F40              ;
1171  8F40              ; 18/03/24
1172  8F40
1173  8F40              Borra_diferencia
1174  8F40
1175  8F40 ED 4B 4F 8C  	ld bc,(Scanlines_album_SP)
1176  8F44
1177  8F44 3A 4C 8C     	ld a,(Switch)
1178  8F47 A7           	and a
1179  8F48 28 08        	jr z,2F
1180  8F4A
1181  8F4A 2A 4A 8C     	ld hl,(Techo_Scanlines_album_2)
1182  8F4D 11 4A 8C     	ld de,Techo_Scanlines_album_2
1183  8F50 18 06        	jr 3F
1184  8F52
1185  8F52 2A 48 8C     2 ld hl,(Techo_Scanlines_album)
1186  8F55 11 48 8C     	ld de,Techo_Scanlines_album
1187  8F58
1188  8F58              ; Diferencia.
1189  8F58
1190  8F58 ED 42        3 sbc hl,bc
1191  8F5A
1192  8F5A C8           	ret z
1193  8F5B D8           	ret c
1194  8F5C
1195  8F5C              ; Nuevo techo, (más bajo que el anterior).
1196  8F5C              ; Fijamos nuevo techo y borramos bytes sobrantes.
1197  8F5C
1198  8F5C EB           	ex de,hl
1199  8F5D
1200  8F5D 71           	ld (hl),c
1201  8F5E 2C           	inc l
1202  8F5F 70           	ld (hl),b
1203  8F60
1204  8F60 AF           	xor a
1205  8F61 43           	ld b,e
1206  8F62
1207  8F62 2A 4F 8C     	ld hl,(Scanlines_album_SP)
1208  8F65
1209  8F65 77           1 ld (hl),a
1210  8F66 23           	inc hl
1211  8F67 10 FC        	djnz 1B
1212  8F69
1213  8F69              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1214  8F69
1215  8F69 21 55 8C     	ld hl,Ctrl_3
1216  8F6C CB DE        	set 3,(hl)
1217  8F6E
1218  8F6E C9           	ret
1219  8F6F
1220  8F6F              ; --------------------------------------------------------------------------------------------------------------
1221  8F6F              ;
1222  8F6F              ;	23/11/24
1223  8F6F              ;
1224  8F6F              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1225  8F6F
1226  8F6F              Entidad_a_Tabla_de_pintado
1227  8F6F
1228  8F6F              ; Almacena la Coordenada Y de la entidad en curso.
1229  8F6F
1230  8F6F              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1231  8F6F
1232  8F6F DD 7E 02     	ld a,(ix+2)
1233  8F72 2A 51 8C     	ld hl,(India_SP)
1234  8F75 77           	ld (hl),a
1235  8F76 2C           	inc l
1236  8F77
1237  8F77              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1238  8F77
1239  8F77 ED 5B 4F 8C  	ld de,(Scanlines_album_SP)
1240  8F7B
1241  8F7B 73           	ld (hl),e
1242  8F7C 2C           	inc l
1243  8F7D 72           	ld (hl),d
1244  8F7E 2C           	inc l
1245  8F7F
1246  8F7F 22 51 8C     	ld (India_SP),hl
1247  8F82
1248  8F82 C9           	ret
1249  8F83
1250  8F83              ; --------------------------------------------------------------------------------------------------------------
1251  8F83              ;
1252  8F83              ;	27/03/24
1253  8F83              ;
1254  8F83
1255  8F83              Inicializa_India_y_limpia_Tabla_de_impresion
1256  8F83
1257  8F83 2A 51 8C     	ld hl,(India_SP)
1258  8F86 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1259  8F89
1260  8F89 79           	ld a,c
1261  8F8A 95           	sub l
1262  8F8B 28 06        	jr z,2F
1263  8F8D 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1264  8F8E              ;														; _ y pasamos a inicializar (India_SP).
1265  8F8E AF           	xor a
1266  8F8F
1267  8F8F 77           1 ld (hl),a
1268  8F90 2C           	inc l
1269  8F91 10 FC        	djnz 1B												; Limpia Tabla.
1270  8F93
1271  8F93 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1272  8F96 22 51 8C     	ld (India_SP),hl
1273  8F99
1274  8F99 C9           	ret
1275  8F9A
1276  8F9A              ; --------------------------------------------------------------------------------------------------------------
1277  8F9A              ;
1278  8F9A              ;	31/3/24
1279  8F9A
1280  8F9A              Ordena_tabla_de_impresion
1281  8F9A
1282  8F9A              ; 5794 T/states.
1283  8F9A              ; 6278 T/states.
1284  8F9A              ; 5310 T/states.
1285  8F9A
1286  8F9A              ; Inicializamos punteros (India_SP) e (India_2_SP).
1287  8F9A              ; Inicializamos contador de comparaciones, [C].
1288  8F9A              ; Cargamos los registros A y B para efectuar comparación.
1289  8F9A
1290  8F9A FD 2E 00     	ld iyl,0
1291  8F9D
1292  8F9D 3A 28 8C     	ld a,(Entidades_en_curso)
1293  8FA0 FE 04        	cp 4 	;	4
1294  8FA2 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1295  8FA3
1296  8FA3 3D           	dec a
1297  8FA4 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1298  8FA5 51           	ld d,c 										; Copia de respaldo.
1299  8FA6
1300  8FA6 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1301  8FA7
1302  8FA7 21 03 89     	ld hl,Tabla_de_pintado+3
1303  8FAA 46           	ld b,(hl)
1304  8FAB 22 53 8C     	ld (India_2_SP),hl
1305  8FAE
1306  8FAE B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1307  8FAF DC D7 8F     	call c, Avanza_India_2_SP
1308  8FB2 CC D7 8F     	call z, Avanza_India_2_SP
1309  8FB5
1310  8FB5 FD 2D        	dec iyl
1311  8FB7 28 18        	jr z,2F
1312  8FB9
1313  8FB9
1314  8FB9              ; --------------------------------------------------------------------------------------------------------------
1315  8FB9              ;
1316  8FB9              ;	7/4/24
1317  8FB9
1318  8FB9              Trueque
1319  8FB9
1320  8FB9              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1321  8FB9              ;  			A contiene en nº de fila de (India_SP).
1322  8FB9              ;			HL contiene (India_2_SP).
1323  8FB9
1324  8FB9 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1325  8FBA E5           	push hl										; Preservo (India_2_SP).
1326  8FBB
1327  8FBB ED 5B 51 8C  	ld de,(India_SP)
1328  8FBF EB           	ex de,hl
1329  8FC0 70           	ld (hl),b
1330  8FC1 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1331  8FC2
1332  8FC2 CD 03 90     	call Intercambia_1_byte
1333  8FC5 CD 03 90     	call Intercambia_1_byte
1334  8FC8
1335  8FC8
1336  8FC8              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1337  8FC8              ; Recuperamos (India_2_SP) en HL.
1338  8FC8
1339  8FC8 2A 51 8C     	ld hl,(India_SP)
1340  8FCB 7E           	ld a,(hl)
1341  8FCC
1342  8FCC E1           	pop hl
1343  8FCD D1           	pop de
1344  8FCE
1345  8FCE              ; --------------------------------------------------------------------------------------------------------------
1346  8FCE
1347  8FCE CD D7 8F     	call Avanza_India_2_SP
1348  8FD1
1349  8FD1 14           2 inc d
1350  8FD2 15           	dec d
1351  8FD3 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1352  8FD4 18 D8        	jr 1B
1353  8FD6
1354  8FD6 C9           	ret
1355  8FD7
1356  8FD7              ; ----- ----- ----- ----- -----
1357  8FD7
1358  8FD7              Avanza_India_2_SP
1359  8FD7
1360  8FD7 0D           	dec c
1361  8FD8 28 0A        	jr z,Avanza_punteros_indios
1362  8FDA
1363  8FDA FD 2C        	inc iyl
1364  8FDC
1365  8FDC 2C           	inc l
1366  8FDD 2C           	inc l
1367  8FDE 2C           	inc l
1368  8FDF
1369  8FDF 46           	ld b,(hl)
1370  8FE0 22 53 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1371  8FE3
1372  8FE3 C9           	ret
1373  8FE4
1374  8FE4              ; ----- ----- ----- ----- -----
1375  8FE4
1376  8FE4              Avanza_punteros_indios
1377  8FE4
1378  8FE4 15           	dec d
1379  8FE5 28 15        	jr z,Prepara_salida
1380  8FE7
1381  8FE7 4A           	ld c,d
1382  8FE8
1383  8FE8 2A 51 8C     	ld hl,(India_SP)
1384  8FEB 2C           	inc l
1385  8FEC 2C           	inc l
1386  8FED 2C           	inc l
1387  8FEE 7E           	ld a,(hl)
1388  8FEF 22 51 8C     	ld (India_SP),hl
1389  8FF2
1390  8FF2 2C           	inc l
1391  8FF3 2C           	inc l
1392  8FF4 2C           	inc l
1393  8FF5 46           	ld b,(hl)
1394  8FF6 22 53 8C     	ld (India_2_SP),hl
1395  8FF9
1396  8FF9 FD 2C        	inc iyl
1397  8FFB
1398  8FFB C9           	ret
1399  8FFC
1400  8FFC              Prepara_salida
1401  8FFC
1402  8FFC 21 00 89     	ld hl,Tabla_de_pintado
1403  8FFF 22 51 8C     	ld (India_SP),hl
1404  9002 C9           	ret
1405  9003
1406  9003
1407  9003 2C           Intercambia_1_byte inc l
1408  9004 1C           	inc e
1409  9005 46           	ld b,(hl)
1410  9006 1A           	ld a,(de)
1411  9007 EB           	ex de,hl
1412  9008 70           	ld (hl),b
1413  9009 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1414  900A C9           	ret
1415  900B
1416  900B              ; -----------------------------------------------------------------------------------
1417  900B              ;
1418  900B              ;	20/01/24
1419  900B              ;
1420  900B              ;
1421  900B
1422  900B              Construye_movimientos_masticados_entidad
1423  900B
1424  900B 2A E5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1425  900E E5           	push hl
1426  900F
1427  900F CD 8B 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados), +5.
1428  9012
1429  9012              ; Tenemos una posición de inicio aleatoria, ("$01 - $1f"). Necesitamos definir (Cuad_objeto) para [Inicia_Puntero_objeto].
1430  9012              ; A contiene la coordenada X de la posición de inicio de la entidad.
1431  9012
1432  9012 CD 6E 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1433  9015              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1434  9015 CD C9 9B     	call Recompone_posicion_inicio
1435  9018
1436  9018 CD 30 99     1 call Draw
1437  901B
1438  901B CD 70 90     	call Guarda_movimiento_masticado
1439  901E
1440  901E 18 37        	jr 2F
1441  9020
1442  9020              ;! Debuggggggg !!!!!!! -----------------------------------------------------------------------------------------------------------
1443  9020              ;! Necesitamos pintar cada movimiento para depurar errores en la entrada y salida de las entidades por la pantalla !!!!!!!!!!!!!!!
1444  9020              ;! -------------------------------------------------------------------------------------------------------------------------------
1445  9020              ;! -------------------------------------------------------------------------------------------------------------------------------
1446  9020
1447  9020 F5           	push af
1448  9021 C5           	push bc
1449  9022 D5           	push de
1450  9023 E5           	push hl
1451  9024 FD E5        	push iy
1452  9026 DD E5        	push ix
1453  9028
1454  9028 AF           	xor a
1455  9029 D3 FE            out ($fe),a			; Paper 7, Ink 0, Border 0
1456  902B
1457  902B              ;	8BF2 00           CTRL_DESPLZ
1458  902B              ;	8Be5 00 00        Puntero_de_almacen_de_mov_masticados defw 0	($e0f4)
1459  902B              ;	$ddc0			  Almacén de movimientos masticados.
1460  902B              ;	8BE3 00 00        Puntero_de_impresion defw 0
1461  902B              ;	8Bdf 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
1462  902B              ;	8Be0 00  	      Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
1463  902B              ;	8Bee 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
1464  902B              ;	8Bf0 00 00		  Puntero_objeto defw 0 									; Donde están los datos para pintar el Sprite.
1465  902B
1466  902B              ; -------------------------------------------------------------------------
1467  902B
1468  902B              ; 	Pos_actual $43fe -
1469  902B              ;	Puntero_de_impresion $44be
1470  902B              ;	Puntero_objeto $8540
1471  902B              ;	Ctrl_Desplz $00
1472  902B
1473  902B              ;	En función de la Posicion_actual:
1474  902B
1475  902B              ;	Coordenada_X $1e
1476  902B              ;	Coordenada_y $07
1477  902B
1478  902B              ; -------------------------------------------------------------------------
1479  902B
1480  902B 2A 31 8C     	ld hl,(Album_de_pintado)
1481  902E 22 4F 8C     	ld (Scanlines_album_SP),hl
1482  9031
1483  9031 FD E5        	push iy
1484  9033 D1           	pop de
1485  9034
1486  9034 D5           	push de
1487  9035 CD A2 95     	call Genera_datos_de_impresion
1488  9038 D1           	pop de
1489  9039
1490  9039
1491  9039              ;							; Para ejecutar Rutinas_de_pintado necesitamos:
1492  9039              ;
1493  9039              ;							HL apuntando al álbum de líneas (Scanlines_album_SP)
1494  9039              ;							DE (Puntero objeto).
1495  9039
1496  9039
1497  9039 2A 31 8C     	ld hl,(Album_de_pintado)
1498  903C EB           	ex de,hl
1499  903D CD 96 96     	call Rutinas_de_pintado
1500  9040
1501  9040              ;	ld a,(Coordenada_X)
1502  9040              ;	cp 30
1503  9040              ;	jr z,$
1504  9040              ;	cp 31
1505  9040              ;	jr z,$
1506  9040              ;	cp 0
1507  9040              ;	jr z,$
1508  9040              ;	cp 1
1509  9040              ;	jr z,$
1510  9040
1511  9040              ;	jr $
1512  9040
1513  9040              ;	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
1514  9040 3E 38        	ld a,%00111000
1515  9042 CD 62 95     	call Cls
1516  9045
1517  9045              ; Borra album de pintado.
1518  9045
1519  9045 AF           	xor a
1520  9046 21 00 80     	ld hl,$8000
1521  9049 06 28        	ld b,40
1522  904B 77           23 ld (hl),a
1523  904C 2C           	inc l
1524  904D 10 FC        	djnz 23b
1525  904F
1526  904F              ; ----- ----- ----- ----- -----
1527  904F
1528  904F DD E1        	pop ix
1529  9051 FD E1        	pop iy
1530  9053 E1           	pop hl
1531  9054 D1           	pop de
1532  9055 C1           	pop bc
1533  9056 F1           	pop af
1534  9057
1535  9057              ;! -------------------------------------------------------------------------------------------------------------------------------
1536  9057              ;! -------------------------------------------------------------------------------------------------------------------------------
1537  9057              ;! -------------------------------------------------------------------------------------------------------------------------------
1538  9057              ;! -------------------------------------------------------------------------------------------------------------------------------
1539  9057
1540  9057 CD 3B 9F     2 call Movimiento
1541  905A
1542  905A 3A 55 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1543  905D CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1544  905F 28 B7        	jr z,1B
1545  9061
1546  9061              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1547  9061              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1548  9061
1549  9061 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1550  9062 22 E5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1551  9065
1552  9065              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1553  9065
1554  9065 CD 99 A0     	call Situa_en_contador_general_de_mov_masticados
1555  9068
1556  9068              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1557  9068              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1558  9068
1559  9068 ED 4B E7 8B  	ld bc,(Contador_de_mov_masticados)
1560  906C
1561  906C 71           	ld (hl),c
1562  906D 23           	inc hl
1563  906E 70           	ld (hl),b
1564  906F
1565  906F C9           	ret
1566  9070
1567  9070              ; -------------------------------------
1568  9070              ;
1569  9070              ;	02/01/25
1570  9070              ;
1571  9070              ;	(Cuad_objeto) contendrá "0" o "1" en función de la coordenada X de la posición de inicio.
1572  9070              ;	Necesitamos esta información para seleccionar el puntero_objeto adecuado: derecha o izquierda.
1573  9070              ;
1574  9070              ;	MODIFY: A,HL,(Cuad_objeto).
1575  9070              ;
1576  9070              ;	OUTPUT: A y (Cuad_objeto) contienen "0" o "1" en función del lado de la pantalla donde inicien su baile.
1577  9070
1578  9070              ;Cuad1_or_cuad2
1579  9070
1580  9070              ;	ld hl,(Posicion_inicio)
1581  9070              ;	ld a,l
1582  9070              ;	and $1f
1583  9070              ;	cp $10
1584  9070              ;	jr c,1F
1585  9070              ;	ld a,1
1586  9070              ;	jr 2F
1587  9070
1588  9070              ;1 xor a
1589  9070              ;2 ld (Cuad_objeto),a
1590  9070              ;	ret
1591  9070
1592  9070              ; -----------------------------------------------------------------------------------
1593  9070              ;
1594  9070              ;	28/12/23
1595  9070              ;
1596  9070              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1597  9070              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1598  9070
1599  9070              Guarda_movimiento_masticado
1600  9070
1601  9070 ED 73 2D 8C  	ld (Stack),sp
1602  9074 ED 7B E5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1603  9078
1604  9078 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1605  907A FD E5            push iy 												; Pushea Puntero_objeto.
1606  907C
1607  907C ED 7B 2D 8C      ld sp,(Stack)
1608  9080
1609  9080 2A E7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1610  9083 23           	inc hl
1611  9084 22 E7 8B     	ld (Contador_de_mov_masticados),hl
1612  9087
1613  9087 CD 8B 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1614  908A              ;															; _ el (Contador_de_mov_masticados).
1615  908A C9               ret
1616  908B              ; --------------------------------------------------------------------------------------------------------------
1617  908B              ;
1618  908B              ;	2/1/25
1619  908B              ;
1620  908B              ;	Incrementa el (Puntero_de_almacen_de_mov_masticados) en "+5".
1621  908B
1622  908B              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1623  908B              ;
1624  908B
1625  908B              Actualiza_Puntero_de_almacen_de_mov_masticados
1626  908B
1627  908B
1628  908B 2A E5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1629  908E
1630  908E              ;	inc hl
1631  908E 23           	inc hl
1632  908F 23           	inc hl
1633  9090 23           	inc hl
1634  9091 23           	inc hl
1635  9092
1636  9092 22 E5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1637  9095
1638  9095 C9           	ret
1639  9096
1640  9096              ; ------------------------------------------
1641  9096              ;
1642  9096              ;	23/11/24
1643  9096              ;
1644  9096              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1645  9096
1646  9096
1647  9096              Obtenemos_puntero_de_impresion
1648  9096
1649  9096 DD 6E 07     	ld l,(ix+7)
1650  9099 DD 66 08     	ld h,(ix+8)
1651  909C
1652  909C              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1653  909C
1654  909C ED 73 2D 8C  	ld (Stack),sp
1655  90A0 F9           	ld sp,hl
1656  90A1
1657  90A1 AF           	xor a
1658  90A2 67           	ld h,a
1659  90A3 6C           	ld l,h															; ld hl,"0"
1660  90A4
1661  90A4 D1           	pop de															; (Puntero_objeto) en DE.
1662  90A5 C1           	pop bc
1663  90A6
1664  90A6              ; 	Almacena (Puntero_de_impresion) en caja.
1665  90A6
1666  90A6 DD 71 05     	ld (ix+5),c
1667  90A9 DD 70 06     	ld (ix+6),b
1668  90AC
1669  90AC ED 43 E3 8B  	ld (Puntero_de_impresion),bc
1670  90B0
1671  90B0              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1672  90B0
1673  90B0 39           	add hl,sp
1674  90B1 DD 75 07     	ld (ix+7),l
1675  90B4 DD 74 08     	ld (ix+8),h
1676  90B7
1677  90B7 C1           	pop bc
1678  90B8
1679  90B8 79           	ld a,c
1680  90B9 80           	add b															; Comprueba si ya no hay datos en el almacén.
1681  90BA
1682  90BA ED 7B 2D 8C  	ld sp,(Stack)
1683  90BE
1684  90BE CC B9 94     	call z,Reinicia_entidad_maliciosa
1685  90C1
1686  90C1 C9           	ret
1687  90C2
1688  90C2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1689  90C2              ;
1690  90C2              ;	25/11/24
1691  90C2
1692  90C2              Cargamos_registros_con_explosion
1693  90C2
1694  90C2 DD 6E 07     	ld l,(ix+7)
1695  90C5 DD 66 08     	ld h,(ix+8)
1696  90C8 CD 68 91     	call Extrae_address
1697  90CB EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1698  90CC
1699  90CC DD 6E 05     	ld l,(ix+5)
1700  90CF DD 66 06     	ld h,(ix+6)
1701  90D2
1702  90D2 E5           	push hl
1703  90D3 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1704  90D5
1705  90D5 C9           	ret
1706  90D6
1707  90D6
1708  90D6              Cargamos_registros_con_explosion_Amadeus
1709  90D6
1710  90D6 2A B5 89     	ld hl,(Pamm_Amadeus)
1711  90D9 CD 68 91     	call Extrae_address
1712  90DC
1713  90DC 5D           	ld e,l
1714  90DD 54           	ld d,h
1715  90DE
1716  90DE DD 2A B3 89  	ld ix,(p.imp.amadeus)
1717  90E2
1718  90E2 C9           	ret
1719  90E3
1720  90E3              ; --------------------------------------------------------------------------------------------------------------
1721  90E3              ;
1722  90E3              ;	17/06/24
1723  90E3              ;
1724  90E3              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1725  90E3              ;
1726  90E3              ;	IX contiene el puntero de impresión.
1727  90E3              ;	DE contiene (Puntero_objeto).
1728  90E3
1729  90E3
1730  90E3              Cargamos_registros_con_mov_masticado_Amadeus
1731  90E3
1732  90E3 ED 73 2D 8C  	ld (Stack),sp
1733  90E7 ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1734  90EB D1           	pop de 															; DE contiene Puntero_objeto
1735  90EC DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1736  90EE DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1737  90F2 ED 7B 2D 8C  	ld sp,(Stack)
1738  90F6 C9           	ret
1739  90F7
1740  90F7              ; ---------------------------------------------------------------------------------------------------------------------
1741  90F7              ;
1742  90F7              ;	18/6/24
1743  90F7              ;
1744  90F7              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1745  90F7
1746  90F7              Genera_datos_de_impresion_Amadeus
1747  90F7
1748  90F7 3A B2 89     	ld a,(Impacto_Amadeus)
1749  90FA A7           	and a
1750  90FB 20 03        	jr nz,1F
1751  90FD
1752  90FD              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1753  90FD              ; _apuntando a la correspondiente explosión.
1754  90FD
1755  90FD CD E3 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1756  9100
1757  9100 DD 7D        1 ld a,ixl
1758  9102 E6 1F        	and $1f
1759  9104 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1760  9107
1761  9107 2A 4F 8C     	ld hl,(Scanlines_album_SP)
1762  910A E5           	push hl
1763  910B
1764  910B 2A 35 8C     	ld hl,(Album_de_pintado_Amadeus)
1765  910E 22 4F 8C     	ld (Scanlines_album_SP),hl
1766  9111
1767  9111 CD A2 95     	call Genera_datos_de_impresion
1768  9114
1769  9114 E1           	pop hl
1770  9115 22 4F 8C     	ld (Scanlines_album_SP),hl
1771  9118
1772  9118 C9           	ret
1773  9119
1774  9119              ; ---------------------------------------------------------------------------------------------------------------------
1775  9119              ;
1776  9119              ;	13/03/24
1777  9119              ;
1778  9119              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1779  9119
1780  9119              Inicia_albumes_de_lineas
1781  9119
1782  9119 21 00 80     	ld hl,Scanlines_album
1783  911C 22 31 8C     	ld (Album_de_pintado),hl
1784  911F 22 4F 8C     	ld (Scanlines_album_SP),hl
1785  9122
1786  9122 21 1A 81     	ld hl,Scanlines_album_2
1787  9125 22 33 8C     	ld (Album_de_borrado),hl
1788  9128
1789  9128 C9           	ret
1790  9129
1791  9129              Inicia_albumes_de_lineas_Amadeus
1792  9129
1793  9129 21 34 82     	ld hl,Amadeus_scanlines_album
1794  912C 22 35 8C     	ld (Album_de_pintado_Amadeus),hl
1795  912F 21 58 82     	ld hl,Amadeus_scanlines_album_2
1796  9132 22 37 8C     	ld (Album_de_borrado_Amadeus),hl
1797  9135
1798  9135 C9           	ret
1799  9136
1800  9136              Inicia_albumes_de_disparos
1801  9136
1802  9136 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1803  9139 22 39 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1804  913C 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1805  913F 22 3B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1806  9142
1807  9142 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1808  9145 22 3D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1809  9148 22 41 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1810  914B
1811  914B 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1812  914E 22 3F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1813  9151
1814  9151 C9           	ret
1815  9152
1816  9152              ; ---------------------------------------------------------------------------------------------------------------------
1817  9152              ;
1818  9152              ; 8/1/23
1819  9152              ;
1820  9152              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1821  9152              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1822  9152              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1823  9152
1824  9152              ; Destruye HL y DE !!!!!
1825  9152
1826  9152              Inicia_punteros_de_cajas
1827  9152
1828  9152 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1829  9155 CD 68 91         call Extrae_address
1830  9158 22 1E 8C         ld (Puntero_store_caja),hl
1831  915B 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1832  915E 22 22 8C     	ld (Indice_restore_caja),hl
1833  9161 CD 68 91     	call Extrae_address
1834  9164 22 20 8C     	ld (Puntero_restore_caja),hl
1835  9167 C9               ret
1836  9168
1837  9168              ; *************************************************************************************************************************************************************
1838  9168
1839  9168              ;
1840  9168              ; 20/10/22
1841  9168              ;
1842  9168              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1843  9168              ;
1844  9168              ; Destruye el puntero y DE !!!!!
1845  9168
1846  9168 5E           Extrae_address ld e,(hl)
1847  9169 23           	inc hl
1848  916A 56           	ld d,(hl)
1849  916B 2B           	dec hl
1850  916C EB           	ex de,hl
1851  916D C9           	ret
1852  916E
1853  916E              ; *************************************************************************************************************************************************************
1854  916E              ;
1855  916E              ;	4/1/25
1856  916E              ;
1857  916E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1858  916E              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1859  916E              ;
1860  916E              ;   Destruye A,HL y BC !!!!!
1861  916E
1862  916E              ;	Futura variable (Mode):
1863  916E
1864  916E              ;	Mode_1 ..... El objeto aparece por la izquierda, Puntero_objeto se sitúa en la última columna de la derecha del Sprite. Imprime 1 columna.
1865  916E              ;	Mode_2 ..... El objeto aparece por la izquierda, Puntero_objeto se sitúa en la penúltima columna de la derecha del Sprite. Imprime 2 columnas.
1866  916E              ;	Mode_3 ..... El objeto aparece completo en pantalla, Imprime las 3 columnas.
1867  916E              ;	Mode_4 ..... El objeto desaparece por el lado derecho de la pantalla, Imprime las 2 primeras columnas del Sprite.
1868  916E              ;	Mode_5 ..... El objeto desaparece por el lado derecho de la pantalla, Imprime la 1ª columna del Sprite.
1869  916E
1870  916E              Inicia_Puntero_objeto
1871  916E
1872  916E 2A FB 8B     	ld hl,(Posicion_inicio)
1873  9171 7D           	ld a,l
1874  9172 E6 1F        	and $1f
1875  9174 FE 10        	cp $10
1876  9176 38 02        	jr c,Inicia_puntero_objeto_der
1877  9178 18 13        	jr Inicia_puntero_objeto_izq
1878  917A
1879  917A              Inicia_puntero_objeto_der
1880  917A
1881  917A              ; 	Arrancamos desde la parte izquierda de la pantalla.
1882  917A              ; 	Iniciamos (Indice_Sprite_der).
1883  917A
1884  917A 2A F3 8B     	ld hl,(Indice_Sprite_der)
1885  917D 22 F7 8B     	ld (Puntero_DESPLZ_der),hl
1886  9180 CD 68 91     	call Extrae_address
1887  9183 22 F0 8B     	ld (Puntero_objeto),hl
1888  9186
1889  9186 2A F5 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1890  9189 22 F9 8B     	ld (Puntero_DESPLZ_izq),hl
1891  918C
1892  918C
1893  918C              ;	Antes de nada averiguaremos si el objeto está apareciendo por el lado izquierdo de la pantalla o si ya está visible completamente.
1894  918C              ;	En los cuadrantes 1 y 3 de pantalla, la coordenada X del (Puntero_de_impresión) será la coordenada X de la (Posicion_inicio)-2.
1895  918C              ;	Dado que los sprites constan de 3 columnas, la coordenada_X de la posición de inicio ha de ser "$02" o superior.
1896  918C
1897  918C              ;	cp 2
1898  918C              ;	ret nc												; Mode_3
1899  918C
1900  918C              ;	Apareciendo-desapareciendo por la parte izquierda de la pantalla:
1901  918C
1902  918C              ;	ld hl,Mode											; (Columnas) de momento indica Mode. Inicialmente (Columnas)="3".
1903  918C              ;	dec (hl)
1904  918C              ;	dec a
1905  918C              ;	jr z,Modifica_puntero_objeto_der
1906  918C              ;	dec (hl)
1907  918C
1908  918C              Modifica_puntero_objeto_der
1909  918C
1910  918C              ;	ld a,(Mode)
1911  918C
1912  918C              ;	ld hl,(Puntero_objeto)
1913  918C              ;	inc l
1914  918C              ;	dec a
1915  918C              ;	jr nz,1F
1916  918C              ;	inc l
1917  918C
1918  918C              ;1 ld (Puntero_objeto),hl
1919  918C
1920  918C C9           	ret
1921  918D
1922  918D              ; Arrancamos desde la parte derecha de la pantalla.
1923  918D              ; Iniciamos (Indice_Sprite_izq).
1924  918D
1925  918D              Inicia_puntero_objeto_izq
1926  918D
1927  918D 2A F5 8B     	ld hl,(Indice_Sprite_izq)
1928  9190 22 F9 8B     	ld (Puntero_DESPLZ_izq),hl
1929  9193 CD 68 91     	call Extrae_address
1930  9196 22 F0 8B     	ld (Puntero_objeto),hl
1931  9199
1932  9199 2A F3 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1933  919C 22 F7 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1934  919F
1935  919F              ;	Antes de nada averiguaremos si el objeto está apareciendo por el lado derecho de la pantalla o si ya está visible completamente.
1936  919F              ;	En los cuadrantes 2 y 4 de pantalla, la coordenada X del (Puntero_de_impresión) será la coordenada X de la (Posicion_inicio).
1937  919F              ;	Por lo tanto si la coordenada_X de la posición de inicio supera la columna $fd el objeto no aparecerá completo en pantalla.
1938  919F
1939  919F              ;	cp 30
1940  919F              ;	ret c												; Mode_3
1941  919F              ;	push af
1942  919F
1943  919F              ;	Desapareciendo-apareciendo por la parte derecha de la pantalla.
1944  919F
1945  919F              ;	ld hl,Mode
1946  919F              ;	inc (hl)
1947  919F              ;	pop af
1948  919F              ;	ret z												; Columnas/Mode "4".
1949  919F              ;	inc (hl)
1950  919F C9           	ret													; Columnas/Mode "5".
1951  91A0
1952  91A0              ; **************************************************************************************************
1953  91A0              ;
1954  91A0              ;	27/11/24
1955  91A0              ;
1956  91A0              ;	INPUT: IX contiene (Puntero_store_caja).
1957  91A0              ;
1958  91A0              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1959  91A0
1960  91A0              Salta_caja_de_entidades_vacia
1961  91A0
1962  91A0 DD 7E 00     	ld a,(ix+0)
1963  91A3 A7           	and a
1964  91A4 C0           	ret nz
1965  91A5
1966  91A5 CD AF 91     	call Incrementa_punteros_de_cajas
1967  91A8 DD 2A 1E 8C  	ld ix,(Puntero_store_caja)
1968  91AC 18 F2        	jr Salta_caja_de_entidades_vacia
1969  91AE
1970  91AE C9           	ret
1971  91AF
1972  91AF              ; **************************************************************************************************
1973  91AF              ;
1974  91AF              ;	08/05/23
1975  91AF              ;
1976  91AF              ;	Incrementamos los dos punteros de entidades. (+1).
1977  91AF
1978  91AF              Incrementa_punteros_de_cajas
1979  91AF
1980  91AF 2A 20 8C     	ld hl,(Puntero_restore_caja)
1981  91B2 22 1E 8C     	ld (Puntero_store_caja),hl
1982  91B5 2A 22 8C     	ld hl,(Indice_restore_caja)
1983  91B8 23           	inc hl
1984  91B9 23           	inc hl
1985  91BA 22 22 8C     	ld (Indice_restore_caja),hl
1986  91BD CD 68 91         call Extrae_address
1987  91C0 22 20 8C         ld (Puntero_restore_caja),hl
1988  91C3 C9               ret
1989  91C4
1990  91C4              ; -----------------------------------------------------------
1991  91C4
1992  91C4              ; Teclado.
1993  91C4
1994  91C4 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1995  91C6 DB FE        	in a,($fe)
1996  91C8 E6 01        	and $01
1997  91CA 28 02        	jr z,1f
1998  91CC 18 F6        	jr Pulsa_ENTER
1999  91CE C9           1 ret
2000  91CF
2001  91CF              ; **************************************************************************************************
2002  91CF              ;
2003  91CF              ; Temporización.
2004  91CF
2005  91CF              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
2006  91CF              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
2007  91CF              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
2008  91CF              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
2009  91CF
2010  91CF              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
2011  91CF              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
2012  91CF              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
2013  91CF
2014  91CF              ; A partir de $4f61 no hace falta DELAY.
2015  91CF
2016  91CF              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
2017  91CF
2018  91CF              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
2019  91CF              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
2020  91CF              ;	LD A,B
2021  91CF              ;	AND A
2022  91CF              ;	JR NZ,wait
2023  91CF              ;	RET
2024  91CF
2025  91CF              ; ---------------------------------------------------------------------------------------------------------------
2026  91CF              ;
2027  91CF              ;	13/07/24
2028  91CF              ;
2029  91CF
2030  91CF              Inicia_Shield
2031  91CF
2032  91CF 21 78 8C     	ld hl,Datos_Shield
2033  91D2 22 7C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
2034  91D5
2035  91D5 7E           	ld a,(hl)
2036  91D6 32 7F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
2037  91D9
2038  91D9 3E 01        	ld a,1
2039  91DB 32 80 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2040  91DE
2041  91DE C9           	ret
2042  91DF
2043  91DF              ; ---------- ---------- ---------- ---------- ----------
2044  91DF              ;
2045  91DF              ;	30/11/24
2046  91DF              ;
2047  91DF              ;	Limpia la caja de entidades de una entidad eliminada.
2048  91DF              ;
2049  91DF              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
2050  91DF              ;	MODIFY: A,BC,DE y HL.
2051  91DF
2052  91DF              Limpia_caja_de_entidades
2053  91DF
2054  91DF DD E5        	push ix
2055  91E1 E1           	pop hl
2056  91E2 AF           	xor a
2057  91E3 77           	ld (hl),a
2058  91E4 5D           	ld e,l
2059  91E5 54           	ld d,h
2060  91E6 1C           	inc e
2061  91E7 01 0B 00     	ld bc,11
2062  91EA ED B0        	ldir
2063  91EC C9           	ret
2064  91ED
2065  91ED              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2066  91ED              ;
2067  91ED              ;	4/6/24
2068  91ED              ;
2069  91ED              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2070  91ED              ;
2071  91ED              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2072  91ED              ;
2073  91ED
2074  91ED              Actualiza_pantalla
2075  91ED
2076  91ED 3E 02        	ld a,2
2077  91EF D3 FE        	out ($fe),a
2078  91F1
2079  91F1 3A 55 8C     	ld a,(Ctrl_3)
2080  91F4 CB 57        	bit 2,a
2081  91F6 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2082  91F8
2083  91F8              Borrando_entidades
2084  91F8
2085  91F8 2A 4F 8C     	ld hl,(Scanlines_album_SP)
2086  91FB CD 68 91     	call Extrae_address
2087  91FE 24           	inc h
2088  91FF 25           	dec h
2089  9200 28 05        	jr z,Pintando_entidades
2090  9202 CD 96 96     	call Rutinas_de_pintado												; Borra.
2091  9205 18 F1        	jr Borrando_entidades
2092  9207
2093  9207              Pintando_entidades
2094  9207
2095  9207 2A 51 8C     	ld hl,(India_SP)
2096  920A 2C           	inc l
2097  920B CD 68 91     	call Extrae_address
2098  920E 24           	inc h
2099  920F 25           	dec h
2100  9210 28 0E        	jr z,Ejecuta_escudo
2101  9212 1C           	inc e
2102  9213 1C           	inc e
2103  9214 ED 53 51 8C  	ld (India_SP),de
2104  9218 CD 68 91     	call Extrae_address
2105  921B CD 96 96     	call Rutinas_de_pintado
2106  921E 18 E7        	jr Pintando_entidades
2107  9220
2108  9220              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2109  9220
2110  9220              Ejecuta_escudo
2111  9220
2112  9220 3A 7E 8C     	ld a,(Shield)
2113  9223 A7           	and a
2114  9224 20 2F        	jr nz,Aplica_Shield
2115  9226
2116  9226              Borrando_Amadeus
2117  9226
2118  9226 21 55 8C     	ld hl,Ctrl_3
2119  9229 CB 6E        	bit 5,(hl)
2120  922B 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2121  922D
2122  922D 2A 37 8C     	ld hl,(Album_de_borrado_Amadeus)
2123  9230 CD 68 91     	call Extrae_address
2124  9233 24           	inc h
2125  9234 25           	dec h
2126  9235 28 03        	jr z,Pintando_Amadeus
2127  9237 CD 96 96     	call Rutinas_de_pintado
2128  923A
2129  923A              Pintando_Amadeus
2130  923A
2131  923A 2A 35 8C     	ld hl,(Album_de_pintado_Amadeus)
2132  923D CD 68 91     	call Extrae_address
2133  9240 24           	inc h
2134  9241 25           	dec h
2135  9242 28 03        	jr z,1F
2136  9244 CD 96 96     	call Rutinas_de_pintado
2137  9247
2138  9247              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2139  9247
2140  9247 21 55 8C     1 ld hl,Ctrl_3
2141  924A CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2142  924C CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2143  924E CB AE        	res 5,(hl)
2144  9250
2145  9250 3E 01        	ld a,1												; Borde azul.
2146  9252 D3 FE        	out ($fe),a
2147  9254
2148  9254 C9           	ret
2149  9255
2150  9255              Aplica_Shield
2151  9255
2152  9255              ;	Bit 1 "1" (Shield_3) Sólo borra.
2153  9255              ;		  "0"     ""     Borra/Pinta.
2154  9255              ;	Bit 2    ""  RET.	 No borra, no pinta.
2155  9255
2156  9255 21 80 8C     	ld hl,Shield_3
2157  9258
2158  9258 CB 5E        	bit 3,(hl)
2159  925A 20 DE        	jr nz,Pintando_Amadeus
2160  925C
2161  925C CB 56        	bit 2,(hl)
2162  925E 20 E7        	jr nz,1B
2163  9260
2164  9260 CB 4E        	bit 1,(hl)
2165  9262 C4 69 92     	call nz,Borra_Amadeus_shield
2166  9265
2167  9265 28 BF        	jr z,Borrando_Amadeus
2168  9267 18 DE        	jr 1B
2169  9269
2170  9269              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2171  9269
2172  9269              Borra_Amadeus_shield
2173  9269
2174  9269 3A 55 8C     	ld a,(Ctrl_3)
2175  926C CB 6F        	bit 5,a
2176  926E 28 08        	jr z,1F
2177  9270
2178  9270 2A 37 8C     	ld hl,(Album_de_borrado_Amadeus)
2179  9273 CD 68 91     	call Extrae_address
2180  9276 18 06        	jr 2F
2181  9278
2182  9278 2A 35 8C     1 ld hl,(Album_de_pintado_Amadeus)
2183  927B CD 68 91     	call Extrae_address
2184  927E
2185  927E CD 96 96     2 call Rutinas_de_pintado
2186  9281
2187  9281 AF           	xor a
2188  9282 3C           	inc a											; Asegura NZ en la salida de la rutina.
2189  9283
2190  9283 C9           	ret
2191  9284
2192  9284              Pinta_Amadeus_shield
2193  9284
2194  9284 2A 35 8C     	ld hl,(Album_de_pintado_Amadeus)
2195  9287 CD 68 91     	call Extrae_address
2196  928A CD 96 96     	call Rutinas_de_pintado
2197  928D
2198  928D AF           	xor a
2199  928E 3C           	inc a											; Asegura NZ en la salida de la rutina.
2200  928F
2201  928F C9           	ret
2202  9290
2203  9290              Borra_Pinta_Amadeus_shield
2204  9290
2205  9290 CD 69 92     	call Borra_Amadeus_shield
2206  9293 CD 84 92     	call Pinta_Amadeus_shield
2207  9296 C9           	ret
2208  9297
2209  9297              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2210  9297              ;
2211  9297              ;	19/6/24
2212  9297              ;
2213  9297
2214  9297              Teclado
2215  9297
2216  9297              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2217  9297
2218  9297 3E F7        	ld a,$f7												; "5" para disparar.
2219  9299 DB FE        	in a,($fe)
2220  929B E6 10        	and $10
2221  929D
2222  929D CC 36 A4     	call z,Genera_disparo_Amadeus
2223  92A0
2224  92A0 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2225  92A2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2226  92A4 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2227  92A6 CC 08 9F         call z,Amadeus_a_izquierda
2228  92A9
2229  92A9 3E F7        	ld a,$f7
2230  92AB DB FE        	in a,($fe)
2231  92AD E6 01        	and $01
2232  92AF C8           	ret z
2233  92B0
2234  92B0 3E F7        	ld a,$f7
2235  92B2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2236  92B4 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2237  92B6 CC 20 9F     	call z,Amadeus_a_derecha
2238  92B9
2239  92B9 C9           	ret
2240  92BA
2241  92BA              ; ------------------------------------------------------------------------------------------------------------------------
2242  92BA              ;
2243  92BA              ;	06/07/24
2244  92BA              ;
2245  92BA
2246  92BA              Genera_explosion
2247  92BA
2248  92BA 21 67 8C     	ld hl,Clock_explosion
2249  92BD 35           	dec (hl)
2250  92BE 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2251  92C0
2252  92C0              Borra_entidad_colisionada
2253  92C0
2254  92C0 CD 6F 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2255  92C3
2256  92C3 DD E5        	push ix
2257  92C5 CD C2 90     	call Cargamos_registros_con_explosion
2258  92C8 CD A2 95     	call Genera_datos_de_impresion
2259  92CB DD E1        	pop ix
2260  92CD
2261  92CD AF           	xor a
2262  92CE 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2263  92CF
2264  92CF C9           	ret
2265  92D0
2266  92D0              Siguiente_frame_explosion
2267  92D0
2268  92D0 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2269  92D2
2270  92D2              ; Avanza Frame de explosión.
2271  92D2
2272  92D2 DD 6E 07     	ld l,(ix+7)
2273  92D5 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2274  92D8
2275  92D8 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2276  92DB
2277  92DB 79           	ld a,c
2278  92DC 95           	sub l
2279  92DD 20 41        	jr nz,1F
2280  92DF
2281  92DF
2282  92DF              ; Fín de la entidad !!!!!!!!!!!!!
2283  92DF              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2284  92DF
2285  92DF              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2286  92DF              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2287  92DF              ; Entidades_en_curso db 0								; Entidades en pantalla.
2288  92DF
2289  92DF              ; La entidad eliminada, es la última del nivel ?
2290  92DF
2291  92DF 3A 26 8C     	ld a,(Numero_de_entidades)
2292  92E2 A7           	and a
2293  92E3 28 30        	jr z,2F
2294  92E5
2295  92E5              ; Decrementa (Numero_de_entidades)
2296  92E5
2297  92E5 3D           	dec a
2298  92E6 32 26 8C     	ld (Numero_de_entidades),a
2299  92E9 21 28 8C     	ld hl,Entidades_en_curso
2300  92EC 35           	dec (hl)
2301  92ED
2302  92ED              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2303  92ED              ; IX apunta al 1er .db de la entidad eliminada.
2304  92ED
2305  92ED 2A 24 8C     	ld hl,(Puntero_indice_master)
2306  92F0 CD 68 91     	call Extrae_address
2307  92F3
2308  92F3 DD E5        	push ix
2309  92F5 D1           	pop de
2310  92F6
2311  92F6 01 0C 00     	ld bc,12
2312  92F9 ED B0        	ldir
2313  92FB
2314  92FB              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2315  92FB
2316  92FB CD 96 90     	call Obtenemos_puntero_de_impresion
2317  92FE
2318  92FE DD 6E 05     	ld l,(ix+5)
2319  9301 2C           	inc l
2320  9302 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2321  9305
2322  9305 CD 76 95     	call Genera_coordenadas
2323  9308
2324  9308 ED 4B DF 8B  	ld bc,(Coordenada_X)
2325  930C
2326  930C DD 71 01     	ld (ix+1),c
2327  930F DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2328  9312
2329  9312 AF           	xor a
2330  9313 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2331  9314
2332  9314 C9           	ret
2333  9315
2334  9315              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2335  9315
2336  9315 21 27 8C     2 ld hl,Numero_parcial_de_entidades
2337  9318 35           	dec (hl)
2338  9319 23           	inc hl
2339  931A 35           	dec (hl)
2340  931B
2341  931B CD DF 91     	call Limpia_caja_de_entidades
2342  931E 18 A0        	jr Borra_entidad_colisionada
2343  9320
2344  9320 23           1 inc hl
2345  9321 23           	inc hl
2346  9322
2347  9322 DD 75 07     	ld (ix+7),l
2348  9325 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2349  9328
2350  9328 18 96        	jr Borra_entidad_colisionada
2351  932A
2352  932A              ; ----- ----- ----- ----- -----
2353  932A
2354  932A              Genera_explosion_Amadeus
2355  932A
2356  932A 21 68 8C     	ld hl,Clock_explosion_Amadeus
2357  932D 35           	dec (hl)
2358  932E 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2359  9330
2360  9330              Borra_Amadeus_impactado
2361  9330
2362  9330 CD D9 8E     	call Change_Amadeus
2363  9333 CD D6 90     	call Cargamos_registros_con_explosion_Amadeus
2364  9336 CD F7 90     	call Genera_datos_de_impresion_Amadeus
2365  9339
2366  9339 21 55 8C     	ld hl,Ctrl_3
2367  933C CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2368  933E
2369  933E AF           	xor a
2370  933F 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2371  9340
2372  9340 C9           	ret
2373  9341
2374  9341              Siguiente_frame_explosion_Amadeus
2375  9341
2376  9341 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2377  9343
2378  9343              ; Avanza Frame de explosión.
2379  9343
2380  9343 2A B5 89     	ld hl,(Pamm_Amadeus)
2381  9346 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2382  9349
2383  9349 79           	ld a,c
2384  934A 95           	sub l
2385  934B 20 0B        	jr nz,1F
2386  934D
2387  934D              ; Fín de Amadeus !!!!!!!!!!!!!
2388  934D              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2389  934D
2390  934D AF           	xor a
2391  934E 32 B2 89     	ld (Impacto_Amadeus),a
2392  9351 21 55 8C     	ld hl,Ctrl_3
2393  9354 CB F6        	set 6,(hl)
2394  9356
2395  9356 18 D8        	jr Borra_Amadeus_impactado
2396  9358
2397  9358 23           1 inc hl
2398  9359 23           	inc hl
2399  935A 22 B5 89     	ld (Pamm_Amadeus),hl
2400  935D 18 D1        	jr Borra_Amadeus_impactado
2401  935F
2402  935F              ; ---------------------------------------------------------------
2403  935F
2404  935F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 935F              ; ******************************************************************************************************************************************************************************************
   2+ 935F              ;
   3+ 935F              ;   21/04/24
   4+ 935F              ;
   5+ 935F              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 935F              ;   (XOR) bit a bit.
   7+ 935F              ;
   8+ 935F              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 935F
  10+ 935F              Derivando_RND
  11+ 935F
  12+ 935F 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9362
  14+ 9362 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9364 C5               push bc
  16+ 9365              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9365 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9368              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9368
  20+ 9368 A7           6 and a                                 ; Carry a "0".
  21+ 9369 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 936B 30 02            jr nc,1F
  23+ 936D
  24+ 936D CB C1            set 0,c
  25+ 936F
  26+ 936F 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9370 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9372 5F               ld e,a
  29+ 9373
  30+ 9373 7A               ld a,d
  31+ 9374 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9376 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9378
  34+ 9378 CB 3F            srl a
  35+ 937A
  36+ 937A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 937B
  38+ 937B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 937C 28 04            jr z,4F
  40+ 937E
  41+ 937E CB FF            set 7,a
  42+ 9380 18 02            jr 5F
  43+ 9382
  44+ 9382 CB BF        4 res 7,a
  45+ 9384
  46+ 9384 CB 21        5 sla c
  47+ 9386 10 E0            djnz 6B
  48+ 9388
  49+ 9388 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9389
  51+ 9389 77               ld (hl),a
  52+ 938A 23               inc hl
  53+ 938B C1               pop bc
  54+ 938C 10 D4            djnz 3B
  55+ 938E
  56+ 938E C9               ret
  57+ 938F
  58+ 938F
  59+ 938F
# file closed: RND_Derivando.asm
2405  938F              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 938F              ;---------------------------------------------------------------------------------------------------------------
   2+ 938F              ;
   3+ 938F              ;   13/11/24
   4+ 938F
   5+ 938F              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 938F
   7+ 938F              Genera_movimientos_masticados_del_nivel
   8+ 938F
   9+ 938F              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 938F
  11+ 938F              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 938F              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 938F              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 938F
  15+ 938F 2D           	dec l
  16+ 9390 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9391 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9392 4E           	ld c,(hl)
  19+ 9393
  20+ 9393 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9394 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9395
  23+ 9395              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9395
  25+ 9395 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9396
  27+ 9396 CD D1 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9399
  29+ 9399              ;	Caja Master inicializada ???
  30+ 9399
  31+ 9399 7E           	ld a,(hl)
  32+ 939A A7           	and a
  33+ 939B 20 1A        	jr nz,Movimientos_masticados_construidos
  34+ 939D
  35+ 939D              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 939D
  37+ 939D C1           	pop bc
  38+ 939E 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 939F C5           	push bc
  40+ 93A0
  41+ 93A0 CD 73 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 93A3 CD 07 95     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 93A6 CD E1 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  44+ 93A9
  45+ 93A9              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  46+ 93A9
  47+ 93A9              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  48+ 93A9              ;	ld a,(hl)
  49+ 93A9              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  50+ 93A9              ;	and a
  51+ 93A9              ;	jr nz,2F													; No queremos que la entidad se inicie en la columna "0", en ese caso será "1".
  52+ 93A9
  53+ 93A9              ;	inc a														; (Posicion_inicio) $4001.
  54+ 93A9
  55+ 93A9              ;2 ld hl,Posicion_inicio
  56+ 93A9              ;	ld (hl),a
  57+ 93A9
  58+ 93A9              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  59+ 93A9              ;	Generamos "Movimientos masticados" de la entidad.
  60+ 93A9
  61+ 93A9 CD 0B 90     	call Construye_movimientos_masticados_entidad
  62+ 93AC
  63+ 93AC 2A 24 8C     	ld hl,(Puntero_indice_master)
  64+ 93AF CD 68 91     	call Extrae_address
  65+ 93B2
  66+ 93B2 5D           	ld e,l
  67+ 93B3 54           	ld d,h
  68+ 93B4
  69+ 93B4 CD 31 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  70+ 93B7
  71+ 93B7              Movimientos_masticados_construidos
  72+ 93B7
  73+ 93B7 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  74+ 93B8
  75+ 93B8 E1           	pop hl														; Pop (Datos_de_nivel).
  76+ 93B9 2C           	inc l														; Datos_de_nivel +1 en HL.
  77+ 93BA
  78+ 93BA 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  79+ 93BB 10 D6        	djnz 1B														; dec (Numero_de_entidades).
  80+ 93BD
  81+ 93BD C9           	ret
  82+ 93BE
  83+ 93BE              ;---------------------------------------------------------------------------------------------------------------
  84+ 93BE              ;
  85+ 93BE              ;   9/11/24
  86+ 93BE              ;
  87+ 93BE              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  88+ 93BE              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  89+ 93BE              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  90+ 93BE              ;	_ de la 1ª entidad del Nivel.
  91+ 93BE              ;
  92+ 93BE              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  93+ 93BE
  94+ 93BE              ;	MODIFICA: HL,DE y A.
  95+ 93BE              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  96+ 93BE
  97+ 93BE              Inicializa_1er_Nivel
  98+ 93BE
  99+ 93BE              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
 100+ 93BE
 101+ 93BE 21 C7 8B     	ld hl,Indice_de_niveles
 102+ 93C1 CD 68 91     	call Extrae_address
 103+ 93C4 ED 53 74 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 104+ 93C8
 105+ 93C8 7E           	ld a,(hl)
 106+ 93C9 32 26 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 107+ 93CC
 108+ 93CC 2C           	inc l
 109+ 93CD 22 76 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 110+ 93D0
 111+ 93D0 C9           	ret
 112+ 93D1
 113+ 93D1              ; ----------------------
 114+ 93D1              ;
 115+ 93D1              ;	13/11/24
 116+ 93D1              ;
 117+ 93D1
 118+ 93D1              Situa_en_Caja_Master
 119+ 93D1
 120+ 93D1 CD F2 94         call Calcula_salto_en_BC
 121+ 93D4 21 58 89         ld hl,Indice_de_cajas_master
 122+ 93D7 A7               and a
 123+ 93D8 ED 4A            adc hl,bc
 124+ 93DA 22 24 8C       	ld (Puntero_indice_master),hl
 125+ 93DD CD 68 91     	call Extrae_address
 126+ 93E0 C9           	ret
 127+ 93E1
 128+ 93E1              ; ----------------------
 129+ 93E1
 130+ 93E1              ; Fija_velocidades ld de,Perfiles_de_velocidad
 131+ 93E1              ; 	ld bc,4
 132+ 93E1              ; 	ldir
 133+ 93E1              ; 	ret
 134+ 93E1
 135+ 93E1              Situa_Puntero_indice_mov
 136+ 93E1
 137+ 93E1 3A DE 8B     	ld a,(Tipo)  			  	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 138+ 93E4 CD F2 94         call Calcula_salto_en_BC
 139+ 93E7 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 140+ 93EA A7               and a
 141+ 93EB ED 4A            adc hl,bc
 142+ 93ED CD 68 91         call Extrae_address
 143+ 93F0 22 0F 8C         ld (Puntero_indice_mov),hl
 144+ 93F3 C9               ret
 145+ 93F4
 146+ 93F4              ;---------------------------------------------------------------------------------------------------------------
 147+ 93F4              ;
 148+ 93F4              ;   13/11/24
 149+ 93F4              ;
 150+ 93F4              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 151+ 93F4
 152+ 93F4
 153+ 93F4              Prepara_Cajas_de_Entidades
 154+ 93F4
 155+ 93F4              ; Preparamos los punteros de las cajas de entidades:
 156+ 93F4
 157+ 93F4 CD 52 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 158+ 93F7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 159+ 93F7 CD 3A 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 160+ 93FA
 161+ 93FA 2A 76 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 162+ 93FD
 163+ 93FD              ; En este punto:
 164+ 93FD              ;
 165+ 93FD              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 166+ 93FD              ; B contiene (Numero_parcial_de_entidades).
 167+ 93FD
 168+ 93FD C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 169+ 93FE
 170+ 93FE 7E           	ld a,(hl)
 171+ 93FF
 172+ 93FF CD D1 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 173+ 9402
 174+ 9402 ED 5B 1E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 175+ 9406
 176+ 9406 D5           	push de
 177+ 9407 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 178+ 9409
 179+ 9409 01 0C 00     	ld bc,12
 180+ 940C ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 181+ 940E              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 182+ 940E
 183+ 940E              ; En este punto debemos generar coordenadas y puntero de impresión.:
 184+ 940E              ;
 185+ 940E              ;
 186+ 940E              ; ------------------------------------------------------ IX
 187+ 940E              ; ------------------------------------------------------ IX
 188+ 940E              ; ------------------------------------------------------ IX
 189+ 940E              ; ------------------------------------------------------ IX
 190+ 940E
 191+ 940E DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 192+ 9410
 193+ 9410 CD 96 90     	call Obtenemos_puntero_de_impresion
 194+ 9413
 195+ 9413 DD 6E 05     	ld l,(ix+5)
 196+ 9416 2C           	inc l
 197+ 9417 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 198+ 941A
 199+ 941A D5           	push de														; Push (Puntero_objeto).
 200+ 941B E5           	push hl														; Push (Puntero_de_impresion).
 201+ 941C
 202+ 941C CD 76 95     	call Genera_coordenadas
 203+ 941F
 204+ 941F ED 4B DF 8B  	ld bc,(Coordenada_X)
 205+ 9423
 206+ 9423 DD 71 01     	ld (ix+1),c
 207+ 9426 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 208+ 9429
 209+ 9429 CD 6F 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 210+ 942C
 211+ 942C DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 212+ 942E D1           	pop de														; Pop (Puntero_objeto) en DE.
 213+ 942F
 214+ 942F CD A2 95     	call Genera_datos_de_impresion
 215+ 9432
 216+ 9432 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 217+ 9434
 218+ 9434              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 219+ 9434
 220+ 9434 CD AB 94     	call Decrementa_Contador_de_mov_masticados
 221+ 9437 CD 88 94     	call Limpiamos_bandeja_DRAW
 222+ 943A CD AF 91     	call Incrementa_punteros_de_cajas
 223+ 943D
 224+ 943D              ; Siguiente entidad del Nivel.
 225+ 943D
 226+ 943D 2A 76 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 227+ 9440 23           	inc hl 														; _ entidad del Nivel.
 228+ 9441
 229+ 9441 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 230+ 9442
 231+ 9442 10 B9        	djnz 1B
 232+ 9444
 233+ 9444 C9           	ret
 234+ 9445
 235+ 9445              ; -------------------------------------------------------------------------------------------------------------------
 236+ 9445              ;
 237+ 9445              ;	27/5/24
 238+ 9445              ;
 239+ 9445              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 240+ 9445              ;
 241+ 9445
 242+ 9445              ; 	Cargamos la definición de Amadeus en DRAW.
 243+ 9445              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 244+ 9445
 245+ 9445 21 22 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 246+ 9448 CD 07 95     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 247+ 944B
 248+ 944B
 249+ 944B              Construye_movimientos_masticados_Amadeus
 250+ 944B
 251+ 944B 2A E5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 252+ 944E CD 8B 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 253+ 9451              ;															; _ el (Contador_de_mov_masticados).
 254+ 9451 CD 6E 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 255+ 9454              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 256+ 9454
 257+ 9454              ; Generamos movimientos masticados de Amadeus.
 258+ 9454
 259+ 9454 06 79        	ld b,121												; $0079, 121d.
 260+ 9456
 261+ 9456 C5           1 push bc
 262+ 9457 CD 30 99     	call Draw
 263+ 945A CD 70 90     	call Guarda_movimiento_masticado
 264+ 945D
 265+ 945D CD 63 9C     	call Mov_right
 266+ 9460 CD 63 9C     	call Mov_right											; Amadeus se mueve x2 pixel.
 267+ 9463
 268+ 9463 C1           	pop bc
 269+ 9464 10 F0        	djnz 1B
 270+ 9466
 271+ 9466              ; Todos los movimientos masticados de Amadeus se han creado.
 272+ 9466
 273+ 9466              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 274+ 9466              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 275+ 9466
 276+ 9466 2A E5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 277+ 9469 01 08 00     	ld bc,8
 278+ 946C A7           	and a
 279+ 946D ED 42        	sbc hl,bc
 280+ 946F 22 E5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 281+ 9472
 282+ 9472 C9           	ret
 283+ 9473
 284+ 9473              ; ---------------------------------------------------------------------
 285+ 9473              ;
 286+ 9473              ;	10/02/24
 287+ 9473              ;
 288+ 9473              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 289+ 9473              ;
 290+ 9473              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 291+ 9473
 292+ 9473              Definicion_segun_tipo
 293+ 9473
 294+ 9473 CD F2 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 295+ 9476 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 296+ 9479 CD FD 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 297+ 947C C9           	ret
 298+ 947D
 299+ 947D              ; ---------------------------------------------------------------------
 300+ 947D              ;
 301+ 947D              ;	6/7/24
 302+ 947D
 303+ 947D
 304+ 947D              Store_Restore_cajas
 305+ 947D
 306+ 947D ED 5B 1E 8C  	ld de,(Puntero_store_caja)
 307+ 9481 CD 31 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 308+ 9484 CD AF 91     	call Incrementa_punteros_de_cajas
 309+ 9487 C9           	ret
 310+ 9488
 311+ 9488              ; ---------------------------------------------------------------------
 312+ 9488              ;
 313+ 9488              ;	23/6/24
 314+ 9488              ;
 315+ 9488              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 316+ 9488              ;
 317+ 9488              ;	MODIFY: HL
 318+ 9488
 319+ 9488              Limpiamos_bandeja_DRAW
 320+ 9488
 321+ 9488 ED 73 2D 8C  	ld (Stack),sp
 322+ 948C 31 03 8C     	ld sp,Vel_left
 323+ 948F
 324+ 948F AF           	xor a
 325+ 9490 67           	ld h,a
 326+ 9491 6F           	ld l,a
 327+ 9492
 328+ 9492 E5           	push hl
 329+ 9493 E5           	push hl
 330+ 9494 E5           	push hl
 331+ 9495 E5           	push hl
 332+ 9496 E5           	push hl
 333+ 9497 E5           	push hl
 334+ 9498 E5           	push hl
 335+ 9499 E5           	push hl
 336+ 949A E5           	push hl
 337+ 949B E5           	push hl
 338+ 949C E5           	push hl
 339+ 949D E5           	push hl
 340+ 949E E5           	push hl
 341+ 949F E5           	push hl
 342+ 94A0 E5           	push hl
 343+ 94A1 E5           	push hl
 344+ 94A2 E5           	push hl
 345+ 94A3 E5           	push hl
 346+ 94A4
 347+ 94A4 33           	inc sp
 348+ 94A5
 349+ 94A5 E5           	push hl
 350+ 94A6 ED 7B 2D 8C  	ld sp,(Stack)
 351+ 94AA
 352+ 94AA C9           	ret
 353+ 94AB
 354+ 94AB              ; ---------------------------------------------------------------------
 355+ 94AB              ;
 356+ 94AB              ;	23/11/24
 357+ 94AB              ;
 358+ 94AB              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 359+ 94AB
 360+ 94AB              Decrementa_Contador_de_mov_masticados
 361+ 94AB
 362+ 94AB DD 6E 09     	ld l,(ix+9)
 363+ 94AE DD 66 0A     	ld h,(ix+10)
 364+ 94B1
 365+ 94B1 2B           	dec hl
 366+ 94B2
 367+ 94B2 DD 75 09     	ld (ix+9),l
 368+ 94B5 DD 74 0A     	ld (ix+10),h
 369+ 94B8
 370+ 94B8 C9           	ret
 371+ 94B9
 372+ 94B9              ; ---------------------------------------------------------------------
 373+ 94B9              ;
 374+ 94B9              ;	24/11/24
 375+ 94B9
 376+ 94B9              Reinicia_entidad_maliciosa
 377+ 94B9
 378+ 94B9              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 379+ 94B9
 380+ 94B9 CD 99 A0     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 381+ 94BC CD A6 A0     	call Transfiere_datos_de_contadores
 382+ 94BF
 383+ 94BF              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 384+ 94BF
 385+ 94BF DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 386+ 94C2 CD 73 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 387+ 94C5
 388+ 94C5 7D           	ld a,l
 389+ 94C6 C6 0B        	add 11
 390+ 94C8 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 391+ 94C9
 392+ 94C9 CD 68 91     	call Extrae_address
 393+ 94CC
 394+ 94CC DD 75 07     	ld (ix+7),l
 395+ 94CF DD 74 08     	ld (ix+8),h
 396+ 94D2
 397+ 94D2 CD 96 90     	call Obtenemos_puntero_de_impresion
 398+ 94D5
 399+ 94D5              ; Incrementa (Contador_de_vueltas)x2.
 400+ 94D5              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 401+ 94D5
 402+ 94D5              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 403+ 94D5              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 404+ 94D5              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 405+ 94D5              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 406+ 94D5              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 407+ 94D5
 408+ 94D5 DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 409+ 94D9
 410+ 94D9 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 411+ 94DC CB 2F        	sra a
 412+ 94DE CB 2F        	sra a
 413+ 94E0
 414+ 94E0 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 415+ 94E3
 416+ 94E3 3E 40        	ld a,$40
 417+ 94E5 DD BE 03     	cp (ix+3)
 418+ 94E8 C0           	ret nz
 419+ 94E9
 420+ 94E9              ; Límitador.
 421+ 94E9
 422+ 94E9              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 423+ 94E9
 424+ 94E9 DD CB 03 2E  	sra (ix+3)
 425+ 94ED DD CB 0B 2E  	sra (ix+11)
 426+ 94F1
 427+ 94F1 C9           	ret
 428+ 94F2
 429+ 94F2              ;	------------------------------------------------------------------------------------
 430+ 94F2              ;
 431+ 94F2              ;	09/11/24
 432+ 94F2              ;
 433+ 94F2              ;	INPUTS:	A contiene el (Tipo) de entidad.
 434+ 94F2              ;
 435+ 94F2              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 436+ 94F2              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 437+ 94F2
 438+ 94F2 A7           Calcula_salto_en_BC and a
 439+ 94F3 28 04        	jr z,1F
 440+ 94F5 CB 27        	sla a
 441+ 94F7 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 442+ 94F9 4F           1 ld c,a
 443+ 94FA 06 00        	ld b,0
 444+ 94FC C9           	ret
 445+ 94FD
 446+ 94FD              ; ------------------------------------------------------------------
 447+ 94FD              ;
 448+ 94FD              ;	19/1/24
 449+ 94FD              ;
 450+ 94FD              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 451+ 94FD              ;	Actualiza (Datos_de_entidad) con esa dirección.
 452+ 94FD
 453+ 94FD A7           Situa_en_datos_de_definicion and a
 454+ 94FE ED 4A        	adc hl,bc
 455+ 9500 CD 68 91     	call Extrae_address
 456+ 9503 22 2B 8C         ld (Datos_de_entidad),hl
 457+ 9506 C9           	ret
 458+ 9507
 459+ 9507              ; ----------------------------------------------------------------------------------------------------------
 460+ 9507              ;
 461+ 9507              ;	2/1/25
 462+ 9507              ;
 463+ 9507              ;	Transfiere datos correlativos, (de una definición de entidad) a la Bandeja_DRAW.
 464+ 9507              ;	Utilizaremos la pila para extraer los datos de la definición "popeando" a los registros DE y BC.
 465+ 9507              ;	HL apuntará al DESTINO, (datos DRAW).
 466+ 9507              ;
 467+ 9507              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 9507              ;	_ de entidad.
 469+ 9507              ;
 470+ 9507              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad, (ORIGEN).
 471+ 9507              ;
 472+ 9507              ;	MODIFICA: HL,DE y BC.
 473+ 9507              ;
 474+ 9507
 475+ 9507              Definicion_de_entidad_a_bandeja_DRAW
 476+ 9507
 477+ 9507 ED 73 2D 8C  	ld (Stack),sp
 478+ 950B F9           	ld sp,hl
 479+ 950C 21 DE 8B     	ld hl,Bandeja_DRAW
 480+ 950F
 481+ 950F D1           	pop de 						; (Tipo) en E.
 482+ 9510 73           	ld (hl),e
 483+ 9511
 484+ 9511 3B           	dec sp
 485+ 9512
 486+ 9512 D1           	pop de 						; (Indice_Sprite_der).
 487+ 9513 C1           	pop bc 						; (Indice_Sprite_izq).
 488+ 9514
 489+ 9514 21 F3 8B     	ld hl,Indice_Sprite_der
 490+ 9517
 491+ 9517 73           	ld (hl),e
 492+ 9518 23           	inc hl
 493+ 9519 72           	ld (hl),d
 494+ 951A 23           	inc hl
 495+ 951B 71           	ld (hl),c
 496+ 951C 23           	inc hl
 497+ 951D 70           	ld (hl),b
 498+ 951E
 499+ 951E D1           	pop de 						; (Posicion_inicio).
 500+ 951F
 501+ 951F 21 FB 8B     	ld hl,Posicion_inicio
 502+ 9522
 503+ 9522 73           	ld (hl),e
 504+ 9523 23           	inc hl
 505+ 9524 72           	ld (hl),d
 506+ 9525
 507+ 9525 D1           	pop de 						; (Puntero_de_almacen_de_mov_masticados).
 508+ 9526
 509+ 9526 21 E5 8B     	ld hl,Puntero_de_almacen_de_mov_masticados
 510+ 9529
 511+ 9529 73           	ld (hl),e
 512+ 952A 23           	inc hl
 513+ 952B 72           	ld (hl),d
 514+ 952C
 515+ 952C ED 7B 2D 8C  	ld sp,(Stack)
 516+ 9530
 517+ 9530 C9           	ret
 518+ 9531
 519+ 9531              ; ----------------------------------------------------------------------------------------------------------
 520+ 9531              ;
 521+ 9531              ;	1/8/24
 522+ 9531              ;
 523+ 9531
 524+ 9531              Parametros_de_bandeja_DRAW_a_caja
 525+ 9531
 526+ 9531 21 DE 8B     	ld hl,Bandeja_DRAW
 527+ 9534 01 0C 00     	ld bc,12
 528+ 9537 ED B0        	ldir
 529+ 9539 C9           	ret
 530+ 953A
 531+ 953A              ;---------------------------------------------------------------------------------------------------------------
 532+ 953A              ;
 533+ 953A              ;	13/11/24
 534+ 953A              ;
 535+ 953A              ;	INICIALIZA (Numero_parcial_de_entidades).
 536+ 953A              ;
 537+ 953A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 538+ 953A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 539+ 953A
 540+ 953A              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 541+ 953A              ;			- Actualiza (Numero_de_entidades).
 542+ 953A
 543+ 953A              ;	MODIFICA: A y B.
 544+ 953A
 545+ 953A
 546+ 953A              Inicializa_Numero_parcial_de_entidades
 547+ 953A
 548+ 953A 3A 26 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 549+ 953D FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 550+ 953F 38 0E        	jr c,1F
 551+ 9541 28 0C        	jr z,1F
 552+ 9543
 553+ 9543              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 554+ 9543              ; Actualizamos variables.
 555+ 9543
 556+ 9543 D6 06        	sub 6
 557+ 9545 32 26 8C     	ld (Numero_de_entidades),a
 558+ 9548 3E 06        	ld a,6
 559+ 954A 32 27 8C     	ld (Numero_parcial_de_entidades),a
 560+ 954D 47           	ld b,a
 561+ 954E C9           	ret
 562+ 954F
 563+ 954F              ; El nº total de entidades no supera el nº de cajas de entidades.
 564+ 954F              ; (Numero_de_entidades)="0".
 565+ 954F
 566+ 954F 32 27 8C     1 ld (Numero_parcial_de_entidades),a
 567+ 9552 47           	ld b,a
 568+ 9553 AF           	xor a
 569+ 9554 32 26 8C     	ld (Numero_de_entidades),a
 570+ 9557 C9           	ret
 571+ 9558
# file closed: Rutinas_de_inicio_y_niveles.asm
2406  9558              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9558              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9558              ;
   3+ 9558              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9558              ;
   5+ 9558              ; *****************************************************************************************************************************************************************************************
   6+ 9558              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9558
   8+ 9558 7C           calcula_tercio ld a,h
   9+ 9559 E6 18        	and $18
  10+ 955B CB 2F        	sra a
  11+ 955D CB 2F        	sra a
  12+ 955F CB 2F        	sra a
  13+ 9561 C9           	ret
  14+ 9562
# file closed: calcula_tercio.asm
2407  9562              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9562              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9562              ;
   3+ 9562              ;
   4+ 9562              ;	CLS.
   5+ 9562              ;
   6+ 9562              ;	Limpia la pantalla y define sus atributos.
   7+ 9562              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9562              ;
   9+ 9562              ;	COLORES: 0 ..... NEGRO
  10+ 9562              ;    		 1 ..... AZUL
  11+ 9562              ; 			 2 ..... ROJO
  12+ 9562              ;			 3 ..... MAGENTA
  13+ 9562              ; 			 4 ..... VERDE
  14+ 9562              ; 			 5 ..... CIAN
  15+ 9562              ;			 6 ..... AMARILLO
  16+ 9562              ; 			 7 ..... BLANCO
  17+ 9562              ;
  18+ 9562              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9562              ;
  20+ 9562              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9562
  22+ 9562
  23+ 9562 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9565 11 01 40     	LD DE,$4001
  25+ 9568 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 956B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 956D ED B0        	LDIR
  28+ 956F 01 FF 02     	LD BC,767
  29+ 9572 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9573 ED B0        	LDIR
  31+ 9575 C9           	ret
  32+ 9576
# file closed: Cls.asm
2408  9576              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9576              ; ------------------------------------------------------------------------
   2+ 9576              ;
   3+ 9576              ;	30/1/24
   4+ 9576              ;
   5+ 9576              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9576              ;	Fila superior "0", Columna izquierda "0".
   7+ 9576              ;
   8+ 9576              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9576              ;
  10+ 9576              ;	Modifica: A,BC y DE.
  11+ 9576
  12+ 9576              Genera_coordenadas
  13+ 9576
  14+ 9576 7D           	ld a,l
  15+ 9577 E6 1F        	and $1f
  16+ 9579
  17+ 9579 32 DF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 957C
  19+ 957C 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 957D FE 40        	cp $40
  21+ 957F 38 1C        	jr c,4F
  22+ 9581
  23+ 9581 CD 58 95     	call calcula_tercio
  24+ 9584 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9585
  26+ 9585 1E 00        	ld e,0
  27+ 9587 7D           	ld a,l
  28+ 9588 E6 E0        	and $e0
  29+ 958A 28 01        	jr z,1F
  30+ 958C 04           	inc b
  31+ 958D
  32+ 958D 04           1 inc b
  33+ 958E 05           	dec b
  34+ 958F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9591              ;														; _ , salimos.
  36+ 9591 1C           3 inc e
  37+ 9592 D6 20        	sub 32
  38+ 9594 20 FB        	jr nz,3B
  39+ 9596 10 F5        	djnz 1B
  40+ 9598
  41+ 9598 7B           2 ld a,e
  42+ 9599 32 E0 8B     	ld (Coordenada_y),a
  43+ 959C C9           	ret
  44+ 959D
  45+ 959D AF           4 xor a
  46+ 959E 32 E0 8B     	ld (Coordenada_y),a
  47+ 95A1 C9           	ret
  48+ 95A2
# file closed: Genera_coordenadas.asm
2409  95A2              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 95A2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 95A2              ;
   3+ 95A2              ;	20/09/24
   4+ 95A2              ;
   5+ 95A2              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 95A2              ;   DE contiene Puntero_objeto.
   7+ 95A2              ;   IX contiene el Puntero de impresión.
   8+ 95A2
   9+ 95A2              Genera_datos_de_impresion
  10+ 95A2
  11+ 95A2 ED 73 2D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 95A6
  13+ 95A6 2A 4F 8C         ld hl,(Scanlines_album_SP)
  14+ 95A9
  15+ 95A9 3E 05            ld a,5
  16+ 95AB 85               add l
  17+ 95AC 6F               ld l,a
  18+ 95AD
  19+ 95AD F9               ld sp,hl
  20+ 95AE 22 4F 8C         ld (Scanlines_album_SP),hl
  21+ 95B1
  22+ 95B1 21 00 00         ld hl,0
  23+ 95B4
  24+ 95B4 DD E5            push ix
  25+ 95B6 3B               dec sp
  26+ 95B7 ED 7A            adc hl,sp
  27+ 95B9 D5               push de
  28+ 95BA
  29+ 95BA              ; Recuperamos SP.
  30+ 95BA
  31+ 95BA ED 7B 2D 8C      ld sp,(Stack)
  32+ 95BE
  33+ 95BE E5               push hl
  34+ 95BF F1               pop af
  35+ 95C0 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 95C1
  37+ 95C1              ; Tenemos el encabezado listo.
  38+ 95C1              ; Preparamos registros para generar los scanlines.
  39+ 95C1
  40+ 95C1 DD E5            push ix
  41+ 95C3 E1               pop hl                                          ; 1er scanline en HL.
  42+ 95C4
  43+ 95C4 ED 5B 4F 8C      ld de,(Scanlines_album_SP)
  44+ 95C8
  45+ 95C8              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 95C8              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 95C8
  48+ 95C8 7C               ld a,h
  49+ 95C9 FE 50            cp $50
  50+ 95CB 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 95CD
  52+ 95CD 20 05            jr nz,2F
  53+ 95CF
  54+ 95CF 7D               ld a,l
  55+ 95D0 FE E0            cp $e0
  56+ 95D2 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 95D4
  58+ 95D4 7D           2 ld a,l
  59+ 95D5 FE C0            cp $c0
  60+ 95D7 D2 6D 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 95DA
  62+ 95DA              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 95DA
  64+ 95DA CD AB 9B         call NextScan
  65+ 95DD EB               ex de,hl
  66+ 95DE
  67+ 95DE 73               ld (hl),e
  68+ 95DF 23               inc hl
  69+ 95E0 72               ld (hl),d
  70+ 95E1 23               inc hl
  71+ 95E2
  72+ 95E2 EB               ex de,hl
  73+ 95E3
  74+ 95E3 CD AB 9B         call NextScan
  75+ 95E6 EB               ex de,hl
  76+ 95E7
  77+ 95E7 73               ld (hl),e
  78+ 95E8 23               inc hl
  79+ 95E9 72               ld (hl),d
  80+ 95EA 23               inc hl
  81+ 95EB
  82+ 95EB EB               ex de,hl
  83+ 95EC
  84+ 95EC CD AB 9B         call NextScan
  85+ 95EF EB               ex de,hl
  86+ 95F0
  87+ 95F0 73               ld (hl),e
  88+ 95F1 23               inc hl
  89+ 95F2 72               ld (hl),d
  90+ 95F3 23               inc hl
  91+ 95F4
  92+ 95F4 EB               ex de,hl
  93+ 95F5
  94+ 95F5 CD AB 9B         call NextScan
  95+ 95F8 EB               ex de,hl
  96+ 95F9
  97+ 95F9 73               ld (hl),e
  98+ 95FA 23               inc hl
  99+ 95FB 72               ld (hl),d
 100+ 95FC 23               inc hl
 101+ 95FD
 102+ 95FD EB               ex de,hl
 103+ 95FE
 104+ 95FE CD AB 9B         call NextScan
 105+ 9601 EB               ex de,hl
 106+ 9602
 107+ 9602 73               ld (hl),e
 108+ 9603 23               inc hl
 109+ 9604 72               ld (hl),d
 110+ 9605 23               inc hl
 111+ 9606
 112+ 9606 EB               ex de,hl
 113+ 9607
 114+ 9607 CD AB 9B         call NextScan
 115+ 960A EB               ex de,hl
 116+ 960B
 117+ 960B 73               ld (hl),e
 118+ 960C 23               inc hl
 119+ 960D 72               ld (hl),d
 120+ 960E 23               inc hl
 121+ 960F
 122+ 960F EB               ex de,hl
 123+ 9610
 124+ 9610 CD AB 9B         call NextScan
 125+ 9613 EB               ex de,hl
 126+ 9614
 127+ 9614 73               ld (hl),e
 128+ 9615 23               inc hl
 129+ 9616 72               ld (hl),d
 130+ 9617 23               inc hl
 131+ 9618
 132+ 9618 EB               ex de,hl
 133+ 9619
 134+ 9619 CD AB 9B         call NextScan
 135+ 961C EB               ex de,hl
 136+ 961D
 137+ 961D 73               ld (hl),e
 138+ 961E 23               inc hl
 139+ 961F 72               ld (hl),d
 140+ 9620 23               inc hl
 141+ 9621
 142+ 9621 EB               ex de,hl
 143+ 9622
 144+ 9622 CD AB 9B         call NextScan
 145+ 9625 EB               ex de,hl
 146+ 9626
 147+ 9626 73               ld (hl),e
 148+ 9627 23               inc hl
 149+ 9628 72               ld (hl),d
 150+ 9629 23               inc hl
 151+ 962A
 152+ 962A EB               ex de,hl
 153+ 962B
 154+ 962B CD AB 9B         call NextScan
 155+ 962E EB               ex de,hl
 156+ 962F
 157+ 962F 73               ld (hl),e
 158+ 9630 23               inc hl
 159+ 9631 72               ld (hl),d
 160+ 9632 23               inc hl
 161+ 9633
 162+ 9633 EB               ex de,hl
 163+ 9634
 164+ 9634 CD AB 9B         call NextScan
 165+ 9637 EB               ex de,hl
 166+ 9638
 167+ 9638 73               ld (hl),e
 168+ 9639 23               inc hl
 169+ 963A 72               ld (hl),d
 170+ 963B 23               inc hl
 171+ 963C
 172+ 963C EB               ex de,hl
 173+ 963D
 174+ 963D CD AB 9B         call NextScan
 175+ 9640 EB               ex de,hl
 176+ 9641
 177+ 9641 73               ld (hl),e
 178+ 9642 23               inc hl
 179+ 9643 72               ld (hl),d
 180+ 9644 23               inc hl
 181+ 9645
 182+ 9645 EB               ex de,hl
 183+ 9646
 184+ 9646 CD AB 9B         call NextScan
 185+ 9649 EB               ex de,hl
 186+ 964A
 187+ 964A 73               ld (hl),e
 188+ 964B 23               inc hl
 189+ 964C 72               ld (hl),d
 190+ 964D 23               inc hl
 191+ 964E
 192+ 964E EB               ex de,hl
 193+ 964F
 194+ 964F CD AB 9B         call NextScan
 195+ 9652 EB               ex de,hl
 196+ 9653
 197+ 9653 73               ld (hl),e
 198+ 9654 23               inc hl
 199+ 9655 72               ld (hl),d
 200+ 9656 23               inc hl
 201+ 9657
 202+ 9657 EB               ex de,hl
 203+ 9658
 204+ 9658 CD AB 9B         call NextScan
 205+ 965B EB               ex de,hl
 206+ 965C
 207+ 965C              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 965C              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 965C              ;   _ generar sus scanlines.
 210+ 965C
 211+ 965C              ;    ld (Puntero_de_impresion_disparo),de
 212+ 965C
 213+ 965C 73               ld (hl),e
 214+ 965D 23               inc hl
 215+ 965E 72               ld (hl),d
 216+ 965F 23               inc hl
 217+ 9660
 218+ 9660              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 9660
 220+ 9660 22 4F 8C         ld (Scanlines_album_SP),hl
 221+ 9663
 222+ 9663 EB               ex de,hl
 223+ 9664
 224+ 9664              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 9664
 226+ 9664              ;    call NextScan
 227+ 9664              ;    call NextScan
 228+ 9664
 229+ 9664 22 5A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 9667
 231+ 9667              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 9667
 233+ 9667 08               ex af,af
 234+ 9668
 235+ 9668 F5               push af
 236+ 9669 E1               pop hl
 237+ 966A
 238+ 966A 36 10            ld (hl),16
 239+ 966C
 240+ 966C C9               ret
 241+ 966D
 242+ 966D              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 966D
 244+ 966D              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 966D
 246+ 966D 3E 57            ld a,$57
 247+ 966F 94               sub h
 248+ 9670 47               ld b,a
 249+ 9671
 250+ 9671 3E DF            ld a,$df
 251+ 9673 BD               cp l
 252+ 9674 38 04            jr c,1F
 253+ 9676
 254+ 9676 3E 08            ld a,8
 255+ 9678 80               add b
 256+ 9679 47               ld b,a
 257+ 967A
 258+ 967A              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 967A              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 967A
 261+ 967A 48           1 ld c,b
 262+ 967B 0C               inc c
 263+ 967C
 264+ 967C 04               inc b
 265+ 967D 05               dec b
 266+ 967E 20 02            jr nz,3F
 267+ 9680
 268+ 9680 18 0B            jr 6F
 269+ 9682
 270+ 9682 CD AB 9B     3 call NextScan
 271+ 9685 EB               ex de,hl
 272+ 9686
 273+ 9686 73               ld (hl),e
 274+ 9687 23               inc hl
 275+ 9688 72               ld (hl),d
 276+ 9689 23               inc hl
 277+ 968A
 278+ 968A EB               ex de,hl
 279+ 968B 10 F5            djnz 3B
 280+ 968D
 281+ 968D ED 53 4F 8C  6 ld (Scanlines_album_SP),de
 282+ 9691
 283+ 9691 08           5 ex af,af
 284+ 9692 F5               push af
 285+ 9693 E1               pop hl
 286+ 9694
 287+ 9694 71               ld (hl),c
 288+ 9695
 289+ 9695 C9               ret
 290+ 9696
# file closed: Genera_datos_de_impresion.asm
2410  9696              	include "Rutinas_de_pintado.asm"
# file opened: Rutinas_de_pintado.asm
   1+ 9696              ; -----------------------------------------------------------------------------
   2+ 9696              ;
   3+ 9696              ;   28/12/24
   4+ 9696              ;
   5+ 9696
   6+ 9696              ; Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
   7+ 9696              ; Scanlines_album_2 equ $811a	;    ($811a - $8232)
   8+ 9696              ; Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
   9+ 9696              ; Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  10+ 9696
  11+ 9696              Rutinas_de_pintado
  12+ 9696
  13+ 9696 ED 73 2D 8C      ld (Stack),sp
  14+ 969A
  15+ 969A EB               ex de,hl                                          ; HL se encuentra en el álbum de líneas.
  16+ 969B              ;                                                     ; DE se encuentra en los datos del sprite.
  17+ 969B 2C               inc l
  18+ 969C 2C               inc l
  19+ 969D
  20+ 969D 46               ld b,(hl)                                         ; B contiene el nº de scanlines a imprimir.
  21+ 969E
  22+ 969E 2C               inc l
  23+ 969F
  24+ 969F F9               ld sp,hl                                          ; El SP irá extrayendo scanlines en HL.
  25+ 96A0
  26+ 96A0              ;   Vamos a imprimir una entidad o Amadeus ???
  27+ 96A0
  28+ 96A0 7D               ld a,l
  29+ 96A1 FE 34            cp $34
  30+ 96A3 38 03            jr c,Printing_routines_selector
  31+ 96A5
  32+ 96A5 E1               pop hl
  33+ 96A6 18 0F            jr Pinta_rapido_3Chars                            ; Amadeus SIEMPRE se imprime completo, (3 Chars) y 16 scanlines.
  34+ 96A8
  35+ 96A8              ;   ----- ----- ----- ----- -----
  36+ 96A8
  37+ 96A8              Printing_routines_selector
  38+ 96A8
  39+ 96A8              ;   Seleccionaremos la rutina adecuada en función del nº de columna en el que nos encontremos.
  40+ 96A8              ;   Columnas (2-29) utilizaremos [Print_3Chars], Estas rutinas imiprimen el sprite completo, 3 chars.
  41+ 96A8
  42+ 96A8              ; En que columna nos encontramos?
  43+ 96A8
  44+ 96A8 E1               pop hl                                            ; Dirección de pantalla del 1er scan del sprite
  45+ 96A9
  46+ 96A9 7D               ld a,l
  47+ 96AA E6 1F            and $1f
  48+ 96AC FE 1E            cp 30
  49+ 96AE D2 C9 97         jp nc,Desaparece_por_la_derecha
  50+ 96B1
  51+ 96B1              ; -----------------------------------------------------------------------------------------------------------------------------
  52+ 96B1
  53+ 96B1              Print_3Chars
  54+ 96B1
  55+ 96B1              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
  56+ 96B1              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
  57+ 96B1              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
  58+ 96B1
  59+ 96B1              ;   16 scanlines o menos ???
  60+ 96B1
  61+ 96B1 78               ld a,b
  62+ 96B2 FE 10            cp 16
  63+ 96B4 C2 AF 97         jp nz,Pinta_lento_3Chars                           ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  64+ 96B7
  65+ 96B7              ;   Rutinas:
  66+ 96B7
  67+ 96B7              Pinta_rapido_3Chars                                    ;   1520 t/states.
  68+ 96B7
  69+ 96B7 1A               ld a,(de)
  70+ 96B8 AE               xor (hl)
  71+ 96B9 77               ld (hl),a
  72+ 96BA 2C               inc l
  73+ 96BB 1C               inc e
  74+ 96BC 1A               ld a,(de)
  75+ 96BD AE               xor (hl)
  76+ 96BE 77               ld (hl),a
  77+ 96BF 2C               inc l
  78+ 96C0 1C               inc e
  79+ 96C1 1A               ld a,(de)
  80+ 96C2 AE               xor (hl)
  81+ 96C3 77               ld (hl),a
  82+ 96C4 1C               inc e
  83+ 96C5
  84+ 96C5 E1               pop hl
  85+ 96C6
  86+ 96C6 1A               ld a,(de)
  87+ 96C7 AE               xor (hl)
  88+ 96C8 77               ld (hl),a
  89+ 96C9 2C               inc l
  90+ 96CA 1C               inc e
  91+ 96CB 1A               ld a,(de)
  92+ 96CC AE               xor (hl)
  93+ 96CD 77               ld (hl),a
  94+ 96CE 2C               inc l
  95+ 96CF 1C               inc e
  96+ 96D0 1A               ld a,(de)
  97+ 96D1 AE               xor (hl)
  98+ 96D2 77               ld (hl),a
  99+ 96D3 1C               inc e
 100+ 96D4
 101+ 96D4 E1               pop hl
 102+ 96D5
 103+ 96D5 1A               ld a,(de)
 104+ 96D6 AE               xor (hl)
 105+ 96D7 77               ld (hl),a
 106+ 96D8 2C               inc l
 107+ 96D9 1C               inc e
 108+ 96DA 1A               ld a,(de)
 109+ 96DB AE               xor (hl)
 110+ 96DC 77               ld (hl),a
 111+ 96DD 2C               inc l
 112+ 96DE 1C               inc e
 113+ 96DF 1A               ld a,(de)
 114+ 96E0 AE               xor (hl)
 115+ 96E1 77               ld (hl),a
 116+ 96E2 1C               inc e
 117+ 96E3
 118+ 96E3 E1               pop hl
 119+ 96E4
 120+ 96E4 1A               ld a,(de)
 121+ 96E5 AE               xor (hl)
 122+ 96E6 77               ld (hl),a
 123+ 96E7 2C               inc l
 124+ 96E8 1C               inc e
 125+ 96E9 1A               ld a,(de)
 126+ 96EA AE               xor (hl)
 127+ 96EB 77               ld (hl),a
 128+ 96EC 2C               inc l
 129+ 96ED 1C               inc e
 130+ 96EE 1A               ld a,(de)
 131+ 96EF AE               xor (hl)
 132+ 96F0 77               ld (hl),a
 133+ 96F1 1C               inc e
 134+ 96F2
 135+ 96F2 E1               pop hl
 136+ 96F3
 137+ 96F3 1A               ld a,(de)
 138+ 96F4 AE               xor (hl)
 139+ 96F5 77               ld (hl),a
 140+ 96F6 2C               inc l
 141+ 96F7 1C               inc e
 142+ 96F8 1A               ld a,(de)
 143+ 96F9 AE               xor (hl)
 144+ 96FA 77               ld (hl),a
 145+ 96FB 2C               inc l
 146+ 96FC 1C               inc e
 147+ 96FD 1A               ld a,(de)
 148+ 96FE AE               xor (hl)
 149+ 96FF 77               ld (hl),a
 150+ 9700 1C               inc e
 151+ 9701
 152+ 9701 E1               pop hl
 153+ 9702
 154+ 9702 1A               ld a,(de)
 155+ 9703 AE               xor (hl)
 156+ 9704 77               ld (hl),a
 157+ 9705 2C               inc l
 158+ 9706 1C               inc e
 159+ 9707 1A               ld a,(de)
 160+ 9708 AE               xor (hl)
 161+ 9709 77               ld (hl),a
 162+ 970A 2C               inc l
 163+ 970B 1C               inc e
 164+ 970C 1A               ld a,(de)
 165+ 970D AE               xor (hl)
 166+ 970E 77               ld (hl),a
 167+ 970F 1C               inc e
 168+ 9710
 169+ 9710 E1               pop hl
 170+ 9711
 171+ 9711 1A               ld a,(de)
 172+ 9712 AE               xor (hl)
 173+ 9713 77               ld (hl),a
 174+ 9714 2C               inc l
 175+ 9715 1C               inc e
 176+ 9716 1A               ld a,(de)
 177+ 9717 AE               xor (hl)
 178+ 9718 77               ld (hl),a
 179+ 9719 2C               inc l
 180+ 971A 1C               inc e
 181+ 971B 1A               ld a,(de)
 182+ 971C AE               xor (hl)
 183+ 971D 77               ld (hl),a
 184+ 971E 1C               inc e
 185+ 971F
 186+ 971F E1               pop hl
 187+ 9720
 188+ 9720 1A               ld a,(de)
 189+ 9721 AE               xor (hl)
 190+ 9722 77               ld (hl),a
 191+ 9723 2C               inc l
 192+ 9724 1C               inc e
 193+ 9725 1A               ld a,(de)
 194+ 9726 AE               xor (hl)
 195+ 9727 77               ld (hl),a
 196+ 9728 2C               inc l
 197+ 9729 1C               inc e
 198+ 972A 1A               ld a,(de)
 199+ 972B AE               xor (hl)
 200+ 972C 77               ld (hl),a
 201+ 972D 1C               inc e
 202+ 972E
 203+ 972E E1               pop hl
 204+ 972F
 205+ 972F 1A               ld a,(de)
 206+ 9730 AE               xor (hl)
 207+ 9731 77               ld (hl),a
 208+ 9732 2C               inc l
 209+ 9733 1C               inc e
 210+ 9734 1A               ld a,(de)
 211+ 9735 AE               xor (hl)
 212+ 9736 77               ld (hl),a
 213+ 9737 2C               inc l
 214+ 9738 1C               inc e
 215+ 9739 1A               ld a,(de)
 216+ 973A AE               xor (hl)
 217+ 973B 77               ld (hl),a
 218+ 973C 1C               inc e
 219+ 973D
 220+ 973D E1               pop hl
 221+ 973E
 222+ 973E 1A               ld a,(de)
 223+ 973F AE               xor (hl)
 224+ 9740 77               ld (hl),a
 225+ 9741 2C               inc l
 226+ 9742 1C               inc e
 227+ 9743 1A               ld a,(de)
 228+ 9744 AE               xor (hl)
 229+ 9745 77               ld (hl),a
 230+ 9746 2C               inc l
 231+ 9747 1C               inc e
 232+ 9748 1A               ld a,(de)
 233+ 9749 AE               xor (hl)
 234+ 974A 77               ld (hl),a
 235+ 974B 1C               inc e
 236+ 974C
 237+ 974C E1               pop hl
 238+ 974D
 239+ 974D 1A               ld a,(de)
 240+ 974E AE               xor (hl)
 241+ 974F 77               ld (hl),a
 242+ 9750 2C               inc l
 243+ 9751 1C               inc e
 244+ 9752 1A               ld a,(de)
 245+ 9753 AE               xor (hl)
 246+ 9754 77               ld (hl),a
 247+ 9755 2C               inc l
 248+ 9756 1C               inc e
 249+ 9757 1A               ld a,(de)
 250+ 9758 AE               xor (hl)
 251+ 9759 77               ld (hl),a
 252+ 975A 1C               inc e
 253+ 975B
 254+ 975B E1               pop hl
 255+ 975C
 256+ 975C 1A               ld a,(de)
 257+ 975D AE               xor (hl)
 258+ 975E 77               ld (hl),a
 259+ 975F 2C               inc l
 260+ 9760 1C               inc e
 261+ 9761 1A               ld a,(de)
 262+ 9762 AE               xor (hl)
 263+ 9763 77               ld (hl),a
 264+ 9764 2C               inc l
 265+ 9765 1C               inc e
 266+ 9766 1A               ld a,(de)
 267+ 9767 AE               xor (hl)
 268+ 9768 77               ld (hl),a
 269+ 9769 1C               inc e
 270+ 976A
 271+ 976A E1               pop hl
 272+ 976B
 273+ 976B 1A               ld a,(de)
 274+ 976C AE               xor (hl)
 275+ 976D 77               ld (hl),a
 276+ 976E 2C               inc l
 277+ 976F 1C               inc e
 278+ 9770 1A               ld a,(de)
 279+ 9771 AE               xor (hl)
 280+ 9772 77               ld (hl),a
 281+ 9773 2C               inc l
 282+ 9774 1C               inc e
 283+ 9775 1A               ld a,(de)
 284+ 9776 AE               xor (hl)
 285+ 9777 77               ld (hl),a
 286+ 9778 1C               inc e
 287+ 9779
 288+ 9779 E1               pop hl
 289+ 977A
 290+ 977A 1A               ld a,(de)
 291+ 977B AE               xor (hl)
 292+ 977C 77               ld (hl),a
 293+ 977D 2C               inc l
 294+ 977E 1C               inc e
 295+ 977F 1A               ld a,(de)
 296+ 9780 AE               xor (hl)
 297+ 9781 77               ld (hl),a
 298+ 9782 2C               inc l
 299+ 9783 1C               inc e
 300+ 9784 1A               ld a,(de)
 301+ 9785 AE               xor (hl)
 302+ 9786 77               ld (hl),a
 303+ 9787 1C               inc e
 304+ 9788
 305+ 9788 E1               pop hl
 306+ 9789
 307+ 9789 1A               ld a,(de)
 308+ 978A AE               xor (hl)
 309+ 978B 77               ld (hl),a
 310+ 978C 2C               inc l
 311+ 978D 1C               inc e
 312+ 978E 1A               ld a,(de)
 313+ 978F AE               xor (hl)
 314+ 9790 77               ld (hl),a
 315+ 9791 2C               inc l
 316+ 9792 1C               inc e
 317+ 9793 1A               ld a,(de)
 318+ 9794 AE               xor (hl)
 319+ 9795 77               ld (hl),a
 320+ 9796 1C               inc e
 321+ 9797
 322+ 9797 E1               pop hl
 323+ 9798
 324+ 9798 1A               ld a,(de)
 325+ 9799 AE               xor (hl)
 326+ 979A 77               ld (hl),a
 327+ 979B 2C               inc l
 328+ 979C 1C               inc e
 329+ 979D 1A               ld a,(de)
 330+ 979E AE               xor (hl)
 331+ 979F 77               ld (hl),a
 332+ 97A0 2C               inc l
 333+ 97A1 1C               inc e
 334+ 97A2 1A               ld a,(de)
 335+ 97A3 AE               xor (hl)
 336+ 97A4 77               ld (hl),a
 337+ 97A5 1C               inc e
 338+ 97A6
 339+ 97A6 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 340+ 97AA ED 7B 2D 8C      ld sp,(Stack)
 341+ 97AE C9               ret
 342+ 97AF
 343+ 97AF              Pinta_lento_3Chars
 344+ 97AF
 345+ 97AF E1           1 pop hl
 346+ 97B0
 347+ 97B0 1A               ld a,(de)
 348+ 97B1 AE               xor (hl)
 349+ 97B2 77               ld (hl),a
 350+ 97B3 2C               inc l
 351+ 97B4 1C               inc e
 352+ 97B5 1A               ld a,(de)
 353+ 97B6 AE               xor (hl)
 354+ 97B7 77               ld (hl),a
 355+ 97B8 2C               inc l
 356+ 97B9 1C               inc e
 357+ 97BA 1A               ld a,(de)
 358+ 97BB AE               xor (hl)
 359+ 97BC 77               ld (hl),a
 360+ 97BD 1C               inc e
 361+ 97BE
 362+ 97BE 10 EF            djnz 1B
 363+ 97C0
 364+ 97C0 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 365+ 97C4 ED 7B 2D 8C      ld sp,(Stack)
 366+ 97C8 C9               ret
 367+ 97C9
 368+ 97C9              ; -----------------------------------------------------------------------
 369+ 97C9              ; -----------------------------------------------------------------------
 370+ 97C9              ; -----------------------------------------------------------------------
 371+ 97C9
 372+ 97C9
 373+ 97C9              Desaparece_por_la_derecha
 374+ 97C9
 375+ 97C9              ;   1 o 2 Chars ???
 376+ 97C9
 377+ 97C9 C2 A0 98         jp nz,Print_1Char_right                                 ; "NZ" indica Columna "$1f".
 378+ 97CC
 379+ 97CC              Print_2Chars_right
 380+ 97CC
 381+ 97CC              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
 382+ 97CC              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
 383+ 97CC              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
 384+ 97CC
 385+ 97CC              ;   16 scanlines o menos ???
 386+ 97CC
 387+ 97CC 78               ld a,b
 388+ 97CD FE 10            cp 16
 389+ 97CF C2 8A 98         jp nz,Pinta_lento_2Chars_right                         ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 390+ 97D2
 391+ 97D2              ;   Rutinas:
 392+ 97D2
 393+ 97D2              Pinta_rapido_2Chars_right                                  ;   1520 t/states.
 394+ 97D2
 395+ 97D2 1A               ld a,(de)
 396+ 97D3 AE               xor (hl)
 397+ 97D4 77               ld (hl),a
 398+ 97D5 2C               inc l
 399+ 97D6 1C               inc e
 400+ 97D7 1A               ld a,(de)
 401+ 97D8 AE               xor (hl)
 402+ 97D9 77               ld (hl),a
 403+ 97DA 1C               inc e
 404+ 97DB 1C               inc e
 405+ 97DC
 406+ 97DC E1               pop hl
 407+ 97DD
 408+ 97DD 1A               ld a,(de)
 409+ 97DE AE               xor (hl)
 410+ 97DF 77               ld (hl),a
 411+ 97E0 2C               inc l
 412+ 97E1 1C               inc e
 413+ 97E2 1A               ld a,(de)
 414+ 97E3 AE               xor (hl)
 415+ 97E4 77               ld (hl),a
 416+ 97E5 1C               inc e
 417+ 97E6 1C               inc e
 418+ 97E7
 419+ 97E7 E1               pop hl
 420+ 97E8
 421+ 97E8 1A               ld a,(de)
 422+ 97E9 AE               xor (hl)
 423+ 97EA 77               ld (hl),a
 424+ 97EB 2C               inc l
 425+ 97EC 1C               inc e
 426+ 97ED 1A               ld a,(de)
 427+ 97EE AE               xor (hl)
 428+ 97EF 77               ld (hl),a
 429+ 97F0 1C               inc e
 430+ 97F1 1C               inc e
 431+ 97F2
 432+ 97F2 E1               pop hl
 433+ 97F3
 434+ 97F3 1A               ld a,(de)
 435+ 97F4 AE               xor (hl)
 436+ 97F5 77               ld (hl),a
 437+ 97F6 2C               inc l
 438+ 97F7 1C               inc e
 439+ 97F8 1A               ld a,(de)
 440+ 97F9 AE               xor (hl)
 441+ 97FA 77               ld (hl),a
 442+ 97FB 1C               inc e
 443+ 97FC 1C               inc e
 444+ 97FD
 445+ 97FD E1               pop hl
 446+ 97FE
 447+ 97FE 1A               ld a,(de)
 448+ 97FF AE               xor (hl)
 449+ 9800 77               ld (hl),a
 450+ 9801 2C               inc l
 451+ 9802 1C               inc e
 452+ 9803 1A               ld a,(de)
 453+ 9804 AE               xor (hl)
 454+ 9805 77               ld (hl),a
 455+ 9806 1C               inc e
 456+ 9807 1C               inc e
 457+ 9808
 458+ 9808 E1               pop hl
 459+ 9809
 460+ 9809 1A               ld a,(de)
 461+ 980A AE               xor (hl)
 462+ 980B 77               ld (hl),a
 463+ 980C 2C               inc l
 464+ 980D 1C               inc e
 465+ 980E 1A               ld a,(de)
 466+ 980F AE               xor (hl)
 467+ 9810 77               ld (hl),a
 468+ 9811 1C               inc e
 469+ 9812 1C               inc e
 470+ 9813
 471+ 9813 E1               pop hl
 472+ 9814
 473+ 9814 1A               ld a,(de)
 474+ 9815 AE               xor (hl)
 475+ 9816 77               ld (hl),a
 476+ 9817 2C               inc l
 477+ 9818 1C               inc e
 478+ 9819 1A               ld a,(de)
 479+ 981A AE               xor (hl)
 480+ 981B 77               ld (hl),a
 481+ 981C 1C               inc e
 482+ 981D 1C               inc e
 483+ 981E
 484+ 981E E1               pop hl
 485+ 981F
 486+ 981F 1A               ld a,(de)
 487+ 9820 AE               xor (hl)
 488+ 9821 77               ld (hl),a
 489+ 9822 2C               inc l
 490+ 9823 1C               inc e
 491+ 9824 1A               ld a,(de)
 492+ 9825 AE               xor (hl)
 493+ 9826 77               ld (hl),a
 494+ 9827 1C               inc e
 495+ 9828 1C               inc e
 496+ 9829
 497+ 9829 E1               pop hl
 498+ 982A
 499+ 982A 1A               ld a,(de)
 500+ 982B AE               xor (hl)
 501+ 982C 77               ld (hl),a
 502+ 982D 2C               inc l
 503+ 982E 1C               inc e
 504+ 982F 1A               ld a,(de)
 505+ 9830 AE               xor (hl)
 506+ 9831 77               ld (hl),a
 507+ 9832 1C               inc e
 508+ 9833 1C               inc e
 509+ 9834
 510+ 9834 E1               pop hl
 511+ 9835
 512+ 9835 1A               ld a,(de)
 513+ 9836 AE               xor (hl)
 514+ 9837 77               ld (hl),a
 515+ 9838 2C               inc l
 516+ 9839 1C               inc e
 517+ 983A 1A               ld a,(de)
 518+ 983B AE               xor (hl)
 519+ 983C 77               ld (hl),a
 520+ 983D 1C               inc e
 521+ 983E 1C               inc e
 522+ 983F
 523+ 983F E1               pop hl
 524+ 9840
 525+ 9840 1A               ld a,(de)
 526+ 9841 AE               xor (hl)
 527+ 9842 77               ld (hl),a
 528+ 9843 2C               inc l
 529+ 9844 1C               inc e
 530+ 9845 1A               ld a,(de)
 531+ 9846 AE               xor (hl)
 532+ 9847 77               ld (hl),a
 533+ 9848 1C               inc e
 534+ 9849 1C               inc e
 535+ 984A
 536+ 984A E1               pop hl
 537+ 984B
 538+ 984B 1A               ld a,(de)
 539+ 984C AE               xor (hl)
 540+ 984D 77               ld (hl),a
 541+ 984E 2C               inc l
 542+ 984F 1C               inc e
 543+ 9850 1A               ld a,(de)
 544+ 9851 AE               xor (hl)
 545+ 9852 77               ld (hl),a
 546+ 9853 1C               inc e
 547+ 9854 1C               inc e
 548+ 9855
 549+ 9855 E1               pop hl
 550+ 9856
 551+ 9856 1A               ld a,(de)
 552+ 9857 AE               xor (hl)
 553+ 9858 77               ld (hl),a
 554+ 9859 2C               inc l
 555+ 985A 1C               inc e
 556+ 985B 1A               ld a,(de)
 557+ 985C AE               xor (hl)
 558+ 985D 77               ld (hl),a
 559+ 985E 1C               inc e
 560+ 985F 1C               inc e
 561+ 9860
 562+ 9860 E1               pop hl
 563+ 9861
 564+ 9861 1A               ld a,(de)
 565+ 9862 AE               xor (hl)
 566+ 9863 77               ld (hl),a
 567+ 9864 2C               inc l
 568+ 9865 1C               inc e
 569+ 9866 1A               ld a,(de)
 570+ 9867 AE               xor (hl)
 571+ 9868 77               ld (hl),a
 572+ 9869 1C               inc e
 573+ 986A 1C               inc e
 574+ 986B
 575+ 986B E1               pop hl
 576+ 986C
 577+ 986C 1A               ld a,(de)
 578+ 986D AE               xor (hl)
 579+ 986E 77               ld (hl),a
 580+ 986F 2C               inc l
 581+ 9870 1C               inc e
 582+ 9871 1A               ld a,(de)
 583+ 9872 AE               xor (hl)
 584+ 9873 77               ld (hl),a
 585+ 9874 1C               inc e
 586+ 9875 1C               inc e
 587+ 9876
 588+ 9876 E1               pop hl
 589+ 9877
 590+ 9877 1A               ld a,(de)
 591+ 9878 AE               xor (hl)
 592+ 9879 77               ld (hl),a
 593+ 987A 2C               inc l
 594+ 987B 1C               inc e
 595+ 987C 1A               ld a,(de)
 596+ 987D AE               xor (hl)
 597+ 987E 77               ld (hl),a
 598+ 987F 1C               inc e
 599+ 9880 1C               inc e
 600+ 9881
 601+ 9881 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 602+ 9885 ED 7B 2D 8C      ld sp,(Stack)
 603+ 9889 C9               ret
 604+ 988A
 605+ 988A              Pinta_lento_2Chars_right
 606+ 988A
 607+ 988A E1           2 pop hl
 608+ 988B
 609+ 988B 1A               ld a,(de)
 610+ 988C AE               xor (hl)
 611+ 988D 77               ld (hl),a
 612+ 988E 2C               inc l
 613+ 988F 1C               inc e
 614+ 9890 1A               ld a,(de)
 615+ 9891 AE               xor (hl)
 616+ 9892 77               ld (hl),a
 617+ 9893 1C               inc e
 618+ 9894 1C               inc e
 619+ 9895
 620+ 9895 10 F3            djnz 2B
 621+ 9897
 622+ 9897 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 623+ 989B ED 7B 2D 8C      ld sp,(Stack)
 624+ 989F C9               ret
 625+ 98A0
 626+ 98A0              ; -----------------------------------------------------------------------
 627+ 98A0              ; -----------------------------------------------------------------------
 628+ 98A0
 629+ 98A0              Print_1Char_right
 630+ 98A0
 631+ 98A0
 632+ 98A0              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
 633+ 98A0              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
 634+ 98A0              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
 635+ 98A0
 636+ 98A0              ;   16 scanlines o menos ???
 637+ 98A0
 638+ 98A0 78               ld a,b
 639+ 98A1 FE 10            cp 16
 640+ 98A3 C2 1E 99         jp nz,Pinta_lento_1Char_right                          ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 641+ 98A6
 642+ 98A6              ;   Rutinas:
 643+ 98A6
 644+ 98A6              Pinta_rapido_1Char_right                                  ;   1520 t/states.
 645+ 98A6
 646+ 98A6 1A               ld a,(de)
 647+ 98A7 AE               xor (hl)
 648+ 98A8 77               ld (hl),a
 649+ 98A9 1C               inc e
 650+ 98AA 1C               inc e
 651+ 98AB 1C               inc e
 652+ 98AC
 653+ 98AC E1               pop hl
 654+ 98AD
 655+ 98AD 1A               ld a,(de)
 656+ 98AE AE               xor (hl)
 657+ 98AF 77               ld (hl),a
 658+ 98B0 1C               inc e
 659+ 98B1 1C               inc e
 660+ 98B2 1C               inc e
 661+ 98B3
 662+ 98B3 E1               pop hl
 663+ 98B4
 664+ 98B4 1A               ld a,(de)
 665+ 98B5 AE               xor (hl)
 666+ 98B6 77               ld (hl),a
 667+ 98B7 1C               inc e
 668+ 98B8 1C               inc e
 669+ 98B9 1C               inc e
 670+ 98BA
 671+ 98BA E1               pop hl
 672+ 98BB
 673+ 98BB 1A               ld a,(de)
 674+ 98BC AE               xor (hl)
 675+ 98BD 77               ld (hl),a
 676+ 98BE 1C               inc e
 677+ 98BF 1C               inc e
 678+ 98C0 1C               inc e
 679+ 98C1
 680+ 98C1 E1               pop hl
 681+ 98C2
 682+ 98C2 1A               ld a,(de)
 683+ 98C3 AE               xor (hl)
 684+ 98C4 77               ld (hl),a
 685+ 98C5 1C               inc e
 686+ 98C6 1C               inc e
 687+ 98C7 1C               inc e
 688+ 98C8
 689+ 98C8 E1               pop hl
 690+ 98C9
 691+ 98C9 1A               ld a,(de)
 692+ 98CA AE               xor (hl)
 693+ 98CB 77               ld (hl),a
 694+ 98CC 1C               inc e
 695+ 98CD 1C               inc e
 696+ 98CE 1C               inc e
 697+ 98CF
 698+ 98CF E1               pop hl
 699+ 98D0
 700+ 98D0 1A               ld a,(de)
 701+ 98D1 AE               xor (hl)
 702+ 98D2 77               ld (hl),a
 703+ 98D3 1C               inc e
 704+ 98D4 1C               inc e
 705+ 98D5 1C               inc e
 706+ 98D6
 707+ 98D6 E1               pop hl
 708+ 98D7
 709+ 98D7 1A               ld a,(de)
 710+ 98D8 AE               xor (hl)
 711+ 98D9 77               ld (hl),a
 712+ 98DA 1C               inc e
 713+ 98DB 1C               inc e
 714+ 98DC 1C               inc e
 715+ 98DD
 716+ 98DD E1               pop hl
 717+ 98DE
 718+ 98DE 1A               ld a,(de)
 719+ 98DF AE               xor (hl)
 720+ 98E0 77               ld (hl),a
 721+ 98E1 1C               inc e
 722+ 98E2 1C               inc e
 723+ 98E3 1C               inc e
 724+ 98E4
 725+ 98E4 E1               pop hl
 726+ 98E5
 727+ 98E5 1A               ld a,(de)
 728+ 98E6 AE               xor (hl)
 729+ 98E7 77               ld (hl),a
 730+ 98E8 1C               inc e
 731+ 98E9 1C               inc e
 732+ 98EA 1C               inc e
 733+ 98EB
 734+ 98EB E1               pop hl
 735+ 98EC
 736+ 98EC 1A               ld a,(de)
 737+ 98ED AE               xor (hl)
 738+ 98EE 77               ld (hl),a
 739+ 98EF 1C               inc e
 740+ 98F0 1C               inc e
 741+ 98F1 1C               inc e
 742+ 98F2
 743+ 98F2 E1               pop hl
 744+ 98F3
 745+ 98F3 1A               ld a,(de)
 746+ 98F4 AE               xor (hl)
 747+ 98F5 77               ld (hl),a
 748+ 98F6 1C               inc e
 749+ 98F7 1C               inc e
 750+ 98F8 1C               inc e
 751+ 98F9
 752+ 98F9 E1               pop hl
 753+ 98FA
 754+ 98FA 1A               ld a,(de)
 755+ 98FB AE               xor (hl)
 756+ 98FC 77               ld (hl),a
 757+ 98FD 1C               inc e
 758+ 98FE 1C               inc e
 759+ 98FF 1C               inc e
 760+ 9900
 761+ 9900 E1               pop hl
 762+ 9901
 763+ 9901 1A               ld a,(de)
 764+ 9902 AE               xor (hl)
 765+ 9903 77               ld (hl),a
 766+ 9904 1C               inc e
 767+ 9905 1C               inc e
 768+ 9906 1C               inc e
 769+ 9907
 770+ 9907 E1               pop hl
 771+ 9908
 772+ 9908 1A               ld a,(de)
 773+ 9909 AE               xor (hl)
 774+ 990A 77               ld (hl),a
 775+ 990B 1C               inc e
 776+ 990C 1C               inc e
 777+ 990D 1C               inc e
 778+ 990E
 779+ 990E E1               pop hl
 780+ 990F
 781+ 990F 1A               ld a,(de)
 782+ 9910 AE               xor (hl)
 783+ 9911 77               ld (hl),a
 784+ 9912 1C               inc e
 785+ 9913 1C               inc e
 786+ 9914 1C               inc e
 787+ 9915
 788+ 9915 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 789+ 9919 ED 7B 2D 8C      ld sp,(Stack)
 790+ 991D C9               ret
 791+ 991E
 792+ 991E              Pinta_lento_1Char_right
 793+ 991E
 794+ 991E E1           3 pop hl
 795+ 991F
 796+ 991F 1A               ld a,(de)
 797+ 9920 AE               xor (hl)
 798+ 9921 77               ld (hl),a
 799+ 9922 1C               inc e
 800+ 9923 1C               inc e
 801+ 9924 1C               inc e
 802+ 9925
 803+ 9925 10 F7            djnz 3B
 804+ 9927
 805+ 9927 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 806+ 992B ED 7B 2D 8C      ld sp,(Stack)
 807+ 992F C9               ret
# file closed: Rutinas_de_pintado.asm
2411  9930              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9930              ; ******************************************************************************************************************************************************************************************
   2+ 9930              ;
   3+ 9930              ; 26/06/23
   4+ 9930              ;
   5+ 9930              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9930
   7+ 9930              Draw
   8+ 9930
   9+ 9930              ;	jr $
  10+ 9930
  11+ 9930 CD 9B 9B     	call Prepara_draw
  12+ 9933
  13+ 9933 2A EE 8B     	ld hl,(Posicion_actual)
  14+ 9936 7C            	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  15+ 9937 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  16+ 9938 28 05        	jr z,2F
  17+ 993A
  18+ 993A              ;	Entidad iniciada !!!!!
  19+ 993A
  20+ 993A 3A FD 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  21+ 993D 18 0C        	jr 1F
  22+ 993F
  23+ 993F 2A FB 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  24+ 9942 22 EE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  25+ 9945
  26+ 9945 CD CE 9A     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  27+ 9948              ;													; _la esquina superior izquierda de la pantalla.
  28+ 9948
  29+ 9948 CD FD 9F     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  30+ 994B
  31+ 994B 3A EB 8B     1 ld a,(Ctrl_0)
  32+ 994E CB 6F        	bit 5,a
  33+ 9950 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  34+ 9952
  35+ 9952 CD 64 99     	call Comprueba_limite_horizontal
  36+ 9955 CD F4 99     	call Comprueba_limite_vertical
  37+ 9958
  38+ 9958              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  39+ 9958              ; -----------------------
  40+ 9958              ; -----------------------
  41+ 9958              ; -----------------------
  42+ 9958
  43+ 9958              3
  44+ 9958
  45+ 9958              ;	call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  46+ 9958 CD 47 9B     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  47+ 995B
  48+ 995B 3A EB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  49+ 995E CB AF        	res 5,a											; _a ser de utilidad.
  50+ 9960 32 EB 8B     	ld (Ctrl_0),a
  51+ 9963
  52+ 9963 C9           	ret
  53+ 9964
  54+ 9964              ; *******************************************************************************************************************************************************************************************
  55+ 9964              ;	21/01/23
  56+ 9964              ;
  57+ 9964              ; 	Comprueba_limite_horizontal.
  58+ 9964              ;
  59+ 9964              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  60+ 9964              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  61+ 9964              ;
  62+ 9964              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  63+ 9964              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  64+ 9964              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  65+ 9964              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  66+ 9964
  67+ 9964
  68+ 9964
  69+ 9964 3A EB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  70+ 9967 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  71+ 9969 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  72+ 996B E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  73+ 996D 32 EB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  74+ 9970 18 09            jr 6F
  75+ 9972 CB 5F        1 bit 3,a
  76+ 9974 28 0A            jr z,2F
  77+ 9976 E6 F7            and $f7
  78+ 9978 32 EB 8B         ld (Ctrl_0),a
  79+ 997B CD CE 9A     6 call Inicializacion
  80+ 997E 18 5B            jr 5F
  81+ 9980 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  82+ 9981
  83+ 9981              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  84+ 9981              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  85+ 9981
  86+ 9981 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  87+ 9982 2A FF 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  88+ 9985 CD 58 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  89+ 9988 67           	ld h,a
  90+ 9989 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  91+ 998A CD 58 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  92+ 998D 67           	ld h,a
  93+ 998E A7           	and a
  94+ 998F ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  95+ 9991 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  96+ 9992 3A FD 8B     	ld a,(Cuad_objeto)
  97+ 9995 FE 02        	cp 2
  98+ 9997 38 1E        	jr c,3F
  99+ 9999 28 1C        	jr z,3F
 100+ 999B 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 101+ 999C 28 23            jr z,7F
 102+ 999E 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 103+ 99A0 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 104+ 99A2 E1           	pop hl
 105+ 99A3
 106+ 99A3              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 107+ 99A3              ; _para indicar con E="2" en caso necesario.
 108+ 99A3
 109+ 99A3 E5               push hl
 110+ 99A4 C5               push bc
 111+ 99A5 CD 58 95     	call calcula_tercio
 112+ 99A8 FE 01        	cp 1
 113+ 99AA 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 114+ 99AC CD DC 99         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 115+ 99AF 28 26            jr z,9F
 116+ 99B1 38 24            jr c,9F
 117+ 99B3 1E 00        11 ld e,0
 118+ 99B5 18 22            jr 8F
 119+ 99B7 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 120+ 99B8 28 07        	jr z, 7F
 121+ 99BA 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 122+ 99BC 1E 00         	ld e,0
 123+ 99BE E1           	pop hl
 124+ 99BF 18 04        	jr 4F
 125+ 99C1 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 126+ 99C3 18 15            jr 10F
 127+ 99C5
 128+ 99C5              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 129+ 99C5              ; _para indicar con E="2" en caso necesario.
 130+ 99C5
 131+ 99C5 E5           4 push hl
 132+ 99C6 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 133+ 99C7 CD 58 95     	call calcula_tercio
 134+ 99CA FE 01        	cp 1
 135+ 99CC 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 136+ 99CE CD DC 99         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 137+ 99D1 28 04            jr z,9F
 138+ 99D3 30 02            jr nc,9F
 139+ 99D5 18 02        	jr 8F
 140+ 99D7 1E 02        9 ld e,2
 141+ 99D9 C1           8 pop bc
 142+ 99DA E1           10 pop hl
 143+ 99DB C9           5 ret
 144+ 99DC
 145+ 99DC              ; --------------------
 146+ 99DC              ;
 147+ 99DC              ; 25/08/22
 148+ 99DC
 149+ 99DC CD 58 95     Comprueba_centro call calcula_tercio
 150+ 99DF 67               ld h,a
 151+ 99E0 08           	ex af,af
 152+ 99E1 FE 02        	cp 2
 153+ 99E3 38 07        	jr c,1F
 154+ 99E5 28 05        	jr z,1F
 155+ 99E7 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 156+ 99EA 18 03        	jr 2F
 157+ 99EC 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 158+ 99EF 08           2 ex af,af
 159+ 99F0 A7               and a
 160+ 99F1 ED 42            sbc hl,bc
 161+ 99F3 C9               ret
 162+ 99F4
 163+ 99F4              ; *********************************************************************************************************************************************************************************************
 164+ 99F4              ;
 165+ 99F4              ;   16/8/22
 166+ 99F4              ;
 167+ 99F4              ;	Comprueba_limite_vertical
 168+ 99F4              ;
 169+ 99F4              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 170+ 99F4              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 171+ 99F4              ;
 172+ 99F4
 173+ 99F4 2A EE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 174+ 99F7 7D           	ld a,l
 175+ 99F8 E6 1F        	and $1F
 176+ 99FA 57           	ld d,a
 177+ 99FB 3A 01 8C     	ld a,(Limite_vertical)
 178+ 99FE BA           	cp d 											; Límite - Posición.
 179+ 99FF 08           	ex af,af 										; Resultado de CP d en F'.
 180+ 9A00 3A FD 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 181+ 9A03 CB 47        	bit 0,a
 182+ 9A05 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 183+ 9A07
 184+ 9A07              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 185+ 9A07
 186+ 9A07 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 187+ 9A08 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 188+ 9A0A
 189+ 9A0A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 190+ 9A0A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 191+ 9A0A
 192+ 9A0A 3A DF 8B         ld a,(Coordenada_X)
 193+ 9A0D 16 0F            ld d,Centro_izquierda
 194+ 9A0F A7               and a
 195+ 9A10 92               sub d 											 ; Posición - Centro_izquierda.
 196+ 9A11 28 1E            jr z,3F
 197+ 9A13 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 198+ 9A15              ;                                                    ; _salimos sin modificar nada.
 199+ 9A15 18 0E            jr 2F
 200+ 9A17 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 201+ 9A18 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 202+ 9A1A
 203+ 9A1A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 204+ 9A1A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 205+ 9A1A
 206+ 9A1A 3A DF 8B         ld a,(Coordenada_X)
 207+ 9A1D 16 10            ld d,Centro_derecha
 208+ 9A1F A7               and a
 209+ 9A20 92               sub d
 210+ 9A21 28 0E            jr z,3F
 211+ 9A23 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 212+ 9A25              ;                                                    ; _salimos sin modificar nada.
 213+ 9A25 CB 43        2 bit 0,e
 214+ 9A27 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 215+ 9A29 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 216+ 9A2A CD BE 9A         call Modificaccionne
 217+ 9A2D C1           	pop bc
 218+ 9A2E CD CE 9A         call Inicializacion
 219+ 9A31 C9           3 ret 				 								 ; Salimos de la rutina.
 220+ 9A32
 221+ 9A32              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 222+ 9A32
 223+ 9A32 C5           4 push bc
 224+ 9A33 01 ED 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 225+ 9A36 0A           	ld a,(bc)
 226+ 9A37 3D           	dec a
 227+ 9A38 47           	ld b,a 											 ; Columnas-1 en B.
 228+ 9A39 7D           	ld a,l
 229+ 9A3A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 230+ 9A3B CB 47        	bit 0,a
 231+ 9A3D 28 03        	jr z,5F
 232+ 9A3F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 233+ 9A40 18 2E        	jr 7F
 234+ 9A42
 235+ 9A42              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 236+ 9A42
 237+ 9A42 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 238+ 9A43 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 239+ 9A44 3A EB 8B     	ld a,(Ctrl_0)
 240+ 9A47 CB 4F        	bit 1,a
 241+ 9A49 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 242+ 9A4B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 243+ 9A4C
 244+ 9A4C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 245+ 9A4C
 246+ 9A4C 1C               inc e
 247+ 9A4D 1D               dec e
 248+ 9A4E 20 07            jr nz,12F
 249+ 9A50 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 250+ 9A51 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 251+ 9A52 22 EE 8B     	ld (Posicion_actual),hl
 252+ 9A55 18 44        13 jr 9F
 253+ 9A57 CB 43        12 bit 0,e
 254+ 9A59 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 255+ 9A5B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 256+ 9A5B C1           	pop bc
 257+ 9A5C 18 D3        	jr 3B
 258+ 9A5E 80           14 add b
 259+ 9A5F 6F               ld l,a
 260+ 9A60 22 EE 8B     	ld (Posicion_actual),hl
 261+ 9A63 CD BE 9A         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 262+ 9A66 18 33            jr 9F 											 ; _inicializamos y salimos.
 263+ 9A68 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 264+ 9A6A 32 EB 8B         ld (Ctrl_0),a
 265+ 9A6D F1           	pop af
 266+ 9A6E 18 2B        	jr 9F
 267+ 9A70
 268+ 9A70              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 269+ 9A70
 270+ 9A70 F5           7 push af
 271+ 9A71 3A EB 8B     	ld a,(Ctrl_0)
 272+ 9A74 CB 47        	bit 0,a
 273+ 9A76 20 1D        	jr nz,8F
 274+ 9A78 F1           	pop af
 275+ 9A79
 276+ 9A79              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 277+ 9A79
 278+ 9A79 1C           	inc e
 279+ 9A7A 1D               dec e
 280+ 9A7B 20 07            jr nz,10F
 281+ 9A7D 90           	sub b
 282+ 9A7E 6F               ld l,a
 283+ 9A7F 22 EE 8B     	ld (Posicion_actual),hl
 284+ 9A82 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 285+ 9A84              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 286+ 9A84 CB 43        10 bit 0,e
 287+ 9A86 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 288+ 9A88              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 289+ 9A88 C1           	pop bc
 290+ 9A89 18 A6        	jr 3B
 291+ 9A8B 90           16 sub b
 292+ 9A8C 6F               ld l,a
 293+ 9A8D 22 EE 8B     	ld (Posicion_actual),hl
 294+ 9A90 CD BE 9A         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 295+ 9A93 18 06            jr 9F
 296+ 9A95 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 297+ 9A97 32 EB 8B         ld (Ctrl_0),a
 298+ 9A9A F1           	pop af
 299+ 9A9B C1           9 pop bc
 300+ 9A9C 1E 00        	ld e,0
 301+ 9A9E CD CE 9A         call Inicializacion
 302+ 9AA1 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 303+ 9AA2 08           	ex af,af
 304+ 9AA3 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 305+ 9AA4 18 8B            jr 3B
 306+ 9AA6
 307+ 9AA6              ; --------------------
 308+ 9AA6
 309+ 9AA6 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 310+ 9AA8 CD BA 9B     1 call PreviousScan
 311+ 9AAB 10 FB            djnz 1B
 312+ 9AAD 22 EE 8B     	ld (Posicion_actual),hl
 313+ 9AB0 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 314+ 9AB1 C9           	ret
 315+ 9AB2
 316+ 9AB2              ; --------------------
 317+ 9AB2
 318+ 9AB2 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 319+ 9AB4 CD AB 9B     1 call NextScan
 320+ 9AB7 10 FB            djnz 1B
 321+ 9AB9 22 EE 8B     	ld (Posicion_actual),hl
 322+ 9ABC AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 323+ 9ABD C9           	ret
 324+ 9ABE
 325+ 9ABE              ; --------------------
 326+ 9ABE              ;
 327+ 9ABE              ;	22/01/23
 328+ 9ABE              ;
 329+ 9ABE              ;	E="1". Hemos cambiado de cuadrante.
 330+ 9ABE              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 331+ 9ABE              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 332+ 9ABE
 333+ 9ABE
 334+ 9ABE              Modificaccionne
 335+ 9ABE
 336+ 9ABE 3A FD 8B     	ld a,(Cuad_objeto)
 337+ 9AC1 FE 02        	cp 2
 338+ 9AC3 CC A6 9A         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 339+ 9AC6 DC A6 9A         call c,Modifica_Pos_actual
 340+ 9AC9 C8           	ret z
 341+ 9ACA CD B2 9A         call Modifica_Pos_actual2
 342+ 9ACD C9               ret
 343+ 9ACE
 344+ 9ACE              ; *************************************************************************************************************************************************************************************************
 345+ 9ACE              ;
 346+ 9ACE              ;	4/1/25
 347+ 9ACE              ;
 348+ 9ACE              ;	Inicializacion
 349+ 9ACE              ;
 350+ 9ACE              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 351+ 9ACE              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 352+ 9ACE              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 353+ 9ACE              ;
 354+ 9ACE              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 355+ 9ACE              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 356+ 9ACE              ;	_ desaparece/aparece.
 357+ 9ACE
 358+ 9ACE              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 359+ 9ACE              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 360+ 9ACE              ; 		   [E] ="0"
 361+ 9ACE
 362+ 9ACE              ; 	OUTPUT: DESTRUYE [AF] y [D].
 363+ 9ACE
 364+ 9ACE CD 58 95     Inicializacion call calcula_tercio
 365+ 9AD1 28 36        	jr z,primit
 366+ 9AD3 E6 02        	and 2
 367+ 9AD5 20 07        	jr nz,segmit
 368+ 9AD7 7D           	ld a,l
 369+ 9AD8 FE 7F        	cp $7f
 370+ 9ADA 38 2D        	jr c,primit
 371+ 9ADC 28 2B        	jr z,primit
 372+ 9ADE CD 41 9B     segmit call column
 373+ 9AE1 38 13        	jr c,tercuad
 374+ 9AE3 3E 04        cuarcuad ld a,4
 375+ 9AE5 32 FD 8B     	ld (Cuad_objeto),a
 376+ 9AE8 21 20 48     	ld hl,$4820
 377+ 9AEB 22 FF 8B     	ld (Limite_horizontal),hl
 378+ 9AEE 21 01 8C     	ld hl,Limite_vertical
 379+ 9AF1 36 0D        	ld (hl),$0d
 380+ 9AF3 08           	ex af,af
 381+ 9AF4 18 3C        	jr 1F
 382+ 9AF6              tercuad
 383+ 9AF6 3E 03        	ld a,3
 384+ 9AF8 32 FD 8B     	ld (Cuad_objeto),a
 385+ 9AFB 21 20 48     	ld hl,$4820
 386+ 9AFE 22 FF 8B     	ld (Limite_horizontal),hl
 387+ 9B01 21 01 8C     	ld hl,Limite_vertical
 388+ 9B04 36 12        	ld (hl),$12
 389+ 9B06 08           	ex af,af
 390+ 9B07 18 29        	jr 1F
 391+ 9B09 CD 41 9B     primit call column
 392+ 9B0C 38 13        	jr c, primcuad
 393+ 9B0E              segcuad
 394+ 9B0E 3E 02        	ld a,2
 395+ 9B10 32 FD 8B     	ld (Cuad_objeto),a
 396+ 9B13 21 C0 4F     	ld hl,$4fc0
 397+ 9B16 22 FF 8B     	ld (Limite_horizontal),hl
 398+ 9B19 21 01 8C     	ld hl,Limite_vertical
 399+ 9B1C 36 0D        	ld (hl),$0d
 400+ 9B1E 08           	ex af,af
 401+ 9B1F 18 11        	jr 1F
 402+ 9B21              primcuad
 403+ 9B21 3E 01        	ld a,1
 404+ 9B23 32 FD 8B     	ld (Cuad_objeto),a
 405+ 9B26 21 C0 4F     	ld hl,$4fc0
 406+ 9B29 22 FF 8B     	ld (Limite_horizontal),hl
 407+ 9B2C 21 01 8C     	ld hl,Limite_vertical
 408+ 9B2F 36 12        	ld (hl),$12
 409+ 9B31 08           	ex af,af
 410+ 9B32
 411+ 9B32 C5           1 push bc
 412+ 9B33 E5           	push hl
 413+ 9B34 D5           	push de
 414+ 9B35
 415+ 9B35 2A EE 8B     	ld hl,(Posicion_actual)
 416+ 9B38              ;	call Genera_coordenadas
 417+ 9B38
 418+ 9B38 D1           	pop de
 419+ 9B39 E1           	pop hl
 420+ 9B3A C1           	pop bc
 421+ 9B3B
 422+ 9B3B 21 EB 8B     	ld hl,Ctrl_0
 423+ 9B3E CB EE        	set 5,(hl)
 424+ 9B40 C9           	ret
 425+ 9B41
 426+ 9B41              ; ------------------------------------------------------------------------------------------------------------------
 427+ 9B41
 428+ 9B41              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 429+ 9B41              ;
 430+ 9B41              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 431+ 9B41
 432+ 9B41 7D           column ld a,l
 433+ 9B42 E6 1F        	and $1f
 434+ 9B44 FE 10         	cp $10
 435+ 9B46 C9            	ret
 436+ 9B47
 437+ 9B47              ; --------------------------------------------------------------------------------------------------------------------
 438+ 9B47              ;
 439+ 9B47              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 440+ 9B47              ;
 441+ 9B47              ; 14/12/22
 442+ 9B47              ;
 443+ 9B47              ;	Modifica: A y BC.
 444+ 9B47
 445+ 9B47              ;calcula_CColumnass ld a,(Cuad_objeto)
 446+ 9B47              ;	and 1
 447+ 9B47              ;	jr z,1F
 448+ 9B47
 449+ 9B47              ; Nos encontramos en la parte izquierda de la pantalla
 450+ 9B47
 451+ 9B47              ;	ld a,(Coordenada_X)
 452+ 9B47              ;	ld b,a
 453+ 9B47              ;	inc b											; (Coordenada_X)+1 en B.
 454+ 9B47              ;	ld a,c
 455+ 9B47              ;	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 456+ 9B47              ;	jr c,2F
 457+ 9B47              ;	ld b,a
 458+ 9B47              ;	ld a,c
 459+ 9B47              ;	sub b
 460+ 9B47              ;	ld (Columnas),a
 461+ 9B47              ;	jr 4F
 462+ 9B47              ;2 ld a,c
 463+ 9B47              ;	ld (Columnas),a
 464+ 9B47              ;	jr 4F
 465+ 9B47
 466+ 9B47              ; Nos encontramos en la parte derecha de la pantalla.
 467+ 9B47
 468+ 9B47              ;1 ld a,(Coordenada_X)
 469+ 9B47              ;	add c
 470+ 9B47              ;	dec a
 471+ 9B47              ;	sub $1f
 472+ 9B47              ;	jr c,3F
 473+ 9B47              ;	ld b,a
 474+ 9B47              ;	ld a,c
 475+ 9B47              ;	sub b
 476+ 9B47              ;	ld (Columnas),a
 477+ 9B47              ;	jr 4F
 478+ 9B47              ;3 ld a,c
 479+ 9B47              ;	ld (Columnas),a
 480+ 9B47              ;4 exx
 481+ 9B47              ;	ld c,a
 482+ 9B47              ;	exx
 483+ 9B47              ; ret
 484+ 9B47
 485+ 9B47              ; --------------------------------------------------------------------------------------------------------------------
 486+ 9B47              ;
 487+ 9B47              ;   19/7/23
 488+ 9B47              ;
 489+ 9B47              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 490+ 9B47              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 491+ 9B47              ;
 492+ 9B47              ;	OUTPUT: IX Contienen el puntero de impresión.
 493+ 9B47              ;			HL e IY Contienen (Puntero_objeto).
 494+ 9B47              ;
 495+ 9B47              ;	DESTRUYE: HL,B Y A.
 496+ 9B47
 497+ 9B47 3A FD 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 498+ 9B4A FE 02        	cp 2
 499+ 9B4C 38 18        	jr c,1F
 500+ 9B4E 28 16        	jr z,1F
 501+ 9B50 E6 01        	and 1
 502+ 9B52 28 0D        	jr z,3F
 503+ 9B54
 504+ 9B54              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 505+ 9B54
 506+ 9B54 CD 90 9B     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 507+ 9B57
 508+ 9B57 7D           9 ld a,l
 509+ 9B58 E6 1F        	and $1f
 510+ 9B5A 28 2A        	jr z,7F
 511+ 9B5C 2B           	dec hl
 512+ 9B5D 10 F8        	djnz 9B
 513+ 9B5F 18 25        	jr 7F
 514+ 9B61
 515+ 9B61              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 516+ 9B61
 517+ 9B61 2A EE 8B     3 ld hl,(Posicion_actual)
 518+ 9B64 18 20        	jr 7F
 519+ 9B66
 520+ 9B66 28 14        1 jr z,2F
 521+ 9B68
 522+ 9B68              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 523+ 9B68
 524+ 9B68 CD 90 9B     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 525+ 9B6B
 526+ 9B6B 7D           4 ld a,l
 527+ 9B6C E6 1F        	and $1f
 528+ 9B6E 28 03        	jr z,6F
 529+ 9B70 2B           	dec hl
 530+ 9B71 10 F8        	djnz 4B
 531+ 9B73 06 0F        6 ld b,15
 532+ 9B75 CD BA 9B     5 call PreviousScan
 533+ 9B78 10 FB        	djnz 5B
 534+ 9B7A 18 0A        	jr 7F
 535+ 9B7C
 536+ 9B7C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 537+ 9B7C
 538+ 9B7C CD 90 9B     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 539+ 9B7F 06 0F        	ld b,15
 540+ 9B81 CD BA 9B     8 call PreviousScan
 541+ 9B84 10 FB        	djnz 8B
 542+ 9B86
 543+ 9B86 E5           7 push hl
 544+ 9B87 DD E1        	pop ix
 545+ 9B89
 546+ 9B89 2A F0 8B     	ld hl,(Puntero_objeto)
 547+ 9B8C E5           	push hl
 548+ 9B8D FD E1        	pop iy
 549+ 9B8F
 550+ 9B8F C9           	ret
 551+ 9B90
 552+ 9B90              ; --------------------------------------------------------------------------------------------------------------------
 553+ 9B90              ;
 554+ 9B90              ;	2/1/23
 555+ 9B90              ;
 556+ 9B90              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 557+ 9B90              ;
 558+ 9B90              ;	Tras esta rutina tenemos:
 559+ 9B90              ;
 560+ 9B90              ;	OUTPUT: HL contiene (Posicion_actual).
 561+ 9B90              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 562+ 9B90              ;
 563+ 9B90              ;	DESTRUYE!!!!! HL,B y A.
 564+ 9B90
 565+ 9B90 2A EE 8B     Operandos ld hl,(Posicion_actual)
 566+ 9B93 3E 03        	ld a,3
 567+ 9B95 3D           	dec a
 568+ 9B96 20 01        	jr nz,1F
 569+ 9B98 3C           	inc a
 570+ 9B99 47           1 ld b,a
 571+ 9B9A C9           	ret
 572+ 9B9B
 573+ 9B9B              ; --------------------------------------------------------------------------------------------------------------------
 574+ 9B9B              ;
 575+ 9B9B              ;	Prepara_draw
 576+ 9B9B              ;
 577+ 9B9B              ;	Es una rutina de carga.
 578+ 9B9B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 579+ 9B9B              ;
 580+ 9B9B              ;	FUNCIONAMIENTO:
 581+ 9B9B              ;
 582+ 9B9B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 583+ 9B9B              ;	- LD (Posicion_actual) del objeto en [HL].
 584+ 9B9B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 585+ 9B9B              ;
 586+ 9B9B              ;	DESTRUYE:
 587+ 9B9B              ;
 588+ 9B9B              ;	Logicamente, BC,HL y E quedan destruidos.
 589+ 9B9B
 590+ 9B9B 21 EC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 591+ 9B9E 36 02        	ld (hl),2
 592+ 9BA0 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 593+ 9BA1 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 594+ 9BA2 36 03        	ld (hl),3
 595+ 9BA4 4E           	ld c,(hl)
 596+ 9BA5
 597+ 9BA5 2A EE 8B     	ld hl,(Posicion_actual)
 598+ 9BA8 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 599+ 9BAA
 600+ 9BAA C9           	ret
 601+ 9BAB
 602+ 9BAB              ;----------------------------------------------------------------------------------------------------------------
 603+ 9BAB              ;
 604+ 9BAB              ;	5/08/22
 605+ 9BAB              ;
 606+ 9BAB              ;   NextScan.
 607+ 9BAB              ;
 608+ 9BAB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 609+ 9BAB              ;
 610+ 9BAB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 611+ 9BAB              ;
 612+ 9BAB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 613+ 9BAB              ;
 614+ 9BAB              ;       DESTRUIDOS: AF y HL !!!
 615+ 9BAB              ;
 616+ 9BAB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 617+ 9BAB              ;
 618+ 9BAB
 619+ 9BAB 24           NextScan inc h          ; Incrementamos el scanline.
 620+ 9BAC 7C               ld a,h
 621+ 9BAD E6 07            and 7
 622+ 9BAF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 623+ 9BB0
 624+ 9BB0 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 625+ 9BB1 C6 20            add a,$20           ; Vamos a comprobarlo...
 626+ 9BB3 6F               ld l,a
 627+ 9BB4 D8               ret c               ; Salimos si se produce el cambio de tercio.
 628+ 9BB5
 629+ 9BB5 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 630+ 9BB6 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 631+ 9BB8 67               ld h,a
 632+ 9BB9 C9               ret
 633+ 9BBA
 634+ 9BBA              ;----------------------------------------------------------------------------------------------------------------
 635+ 9BBA              ;
 636+ 9BBA              ;	5/08/22
 637+ 9BBA              ;
 638+ 9BBA              ;   PreviousScan.
 639+ 9BBA              ;
 640+ 9BBA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 641+ 9BBA              ;
 642+ 9BBA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 643+ 9BBA              ;
 644+ 9BBA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 645+ 9BBA              ;
 646+ 9BBA              ;       DESTRUIDOS: AF y HL !!!
 647+ 9BBA              ;
 648+ 9BBA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 649+ 9BBA              ;
 650+ 9BBA
 651+ 9BBA 7C           PreviousScan ld a,h
 652+ 9BBB 25               dec h               ; Dec H.
 653+ 9BBC E6 07            and 7
 654+ 9BBE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 655+ 9BBF
 656+ 9BBF 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 657+ 9BC0 D6 20            sub $20             ; Vamos a comprobarlo...
 658+ 9BC2 6F               ld l,a
 659+ 9BC3 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 660+ 9BC4
 661+ 9BC4 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 662+ 9BC5 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 663+ 9BC7 67               ld h,a
 664+ 9BC8 C9               ret
 665+ 9BC9
 666+ 9BC9
 667+ 9BC9
 668+ 9BC9
 669+ 9BC9
 670+ 9BC9
 671+ 9BC9
 672+ 9BC9
 673+ 9BC9
 674+ 9BC9
 675+ 9BC9
 676+ 9BC9
# file closed: Draw_XOR.asm
2412  9BC9              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9BC9
   2+ 9BC9              ; ******************************************************************************************************************************************************************************************
   3+ 9BC9              ;
   4+ 9BC9              ;   20/05/23
   5+ 9BC9              ;
   6+ 9BC9              ;	Recompone_posicion_inicio
   7+ 9BC9              ;
   8+ 9BC9              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9BC9              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9BC9              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9BC9              ;	_ a una u otra rutina.
  12+ 9BC9
  13+ 9BC9              Recompone_posicion_inicio
  14+ 9BC9
  15+ 9BC9 2A FB 8B     	ld hl,(Posicion_inicio)
  16+ 9BCC 7D           	ld a,l
  17+ 9BCD E6 1F        	and $1f
  18+ 9BCF 28 16        	jr z,1F
  19+ 9BD1
  20+ 9BD1 FE 1F        	cp $1f
  21+ 9BD3 28 0D        	jr z,3F
  22+ 9BD5
  23+ 9BD5 21 EA 8B     	ld hl,Ctrl_2
  24+ 9BD8 CB C6        	set 0,(hl)
  25+ 9BDA 2A F0 8B     	ld hl,(Puntero_objeto)
  26+ 9BDD 22 1C 8C     	ld (Repone_puntero_objeto),hl
  27+ 9BE0 18 08        	jr 2F
  28+ 9BE2
  29+ 9BE2 CD 5A 9D     3 call Mov_left
  30+ 9BE5 18 03        	jr 2F
  31+ 9BE7
  32+ 9BE7 CD 63 9C     1 call Mov_right
  33+ 9BEA 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9BED 22 F0 8B     	ld (Puntero_objeto),hl
  35+ 9BF0 C9           	ret
  36+ 9BF1
  37+ 9BF1              ; ******************************************************************************************************************************************************************************************
  38+ 9BF1              ;
  39+ 9BF1              ;   27/05/23
  40+ 9BF1              ;
  41+ 9BF1              ;	Mov_down
  42+ 9BF1              ;
  43+ 9BF1              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9BF1              ;
  45+ 9BF1              ;
  46+ 9BF1              Mov_down
  47+ 9BF1
  48+ 9BF1 CD 51 9C     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9BF4              ;																	; _ repone (Puntero_objeto).
  50+ 9BF4              ;	ld hl,Ctrl_0
  51+ 9BF4              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9BF4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9BF4              ; 																	; _ en el caso de que no lo haya.
  54+ 9BF4 3A 06 8C     	ld a,(Vel_down)
  55+ 9BF7 47           	ld b,a
  56+ 9BF8 2A EE 8B         ld hl,(Posicion_actual)
  57+ 9BFB CD 58 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9BFE E6 02        	and 2
  59+ 9C00 28 17        	jr z,1F
  60+ 9C02
  61+ 9C02              ; Nos encontramos en el último tercio de pantalla.
  62+ 9C02              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9C02
  64+ 9C02 7C           	ld a,h
  65+ 9C03 FE 57        	cp $57
  66+ 9C05 20 12        	jr nz,1F
  67+ 9C07
  68+ 9C07 7D           	ld a,l
  69+ 9C08 C6 20        	add $20
  70+ 9C0A 30 0D        	jr nc,1F
  71+ 9C0C
  72+ 9C0C              ; ------------------------------
  73+ 9C0C              ;
  74+ 9C0C              ;	12/01/24
  75+ 9C0C
  76+ 9C0C              ;	call Reaparece_arriba
  77+ 9C0C CD E2 9E     	call Reinicio
  78+ 9C0F
  79+ 9C0F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9C0F
  81+ 9C0F 3A 55 8C     	ld a,(Ctrl_3)
  82+ 9C12 CB CF        	set 1,a
  83+ 9C14 32 55 8C     	ld (Ctrl_3),a
  84+ 9C17
  85+ 9C17 18 08        	jr 3F
  86+ 9C19              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9C19              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9C19              ; ------------------------------
  89+ 9C19
  90+ 9C19 CD AB 9B     1 call NextScan
  91+ 9C1C 22 EE 8B     	ld (Posicion_actual),hl
  92+ 9C1F 10 DA            djnz 2B
  93+ 9C21 CD 76 95     3 call Genera_coordenadas
  94+ 9C24 C9           	ret
  95+ 9C25
  96+ 9C25              ; ******************************************************************************************************************************************************************************************
  97+ 9C25              ;
  98+ 9C25              ;   27/05/23
  99+ 9C25              ;
 100+ 9C25              ;	Mov_up
 101+ 9C25              ;
 102+ 9C25              ; 	Mueve el Sprite hacia arriba.
 103+ 9C25              ;
 104+ 9C25              ;
 105+ 9C25              Mov_up
 106+ 9C25
 107+ 9C25 CD 51 9C     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9C28              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9C28              ;	ld hl,Ctrl_0
 110+ 9C28              ;	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9C28              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9C28              ; 																		; _ en el caso de que no lo haya.
 113+ 9C28 3A 05 8C     	ld a,(Vel_up)
 114+ 9C2B 47           	ld b,a
 115+ 9C2C 2A EE 8B     	ld hl,(Posicion_actual)
 116+ 9C2F CD 58 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9C32 A7           	and a
 118+ 9C33 20 10        	jr nz,1F
 119+ 9C35
 120+ 9C35              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9C35              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9C35
 123+ 9C35 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9C36 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9C38 20 0B            jr nz,1F
 126+ 9C3A 7D               ld a,l
 127+ 9C3B D6 20            sub $20
 128+ 9C3D 30 06            jr nc,1F
 129+ 9C3F 25               dec h
 130+ 9C40
 131+ 9C40              ; -----------------------------
 132+ 9C40 CD C3 9E         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9C43              ;	call Reinicio
 134+ 9C43              ; -----------------------------
 135+ 9C43
 136+ 9C43 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9C45 CD BA 9B     1 call PreviousScan
 138+ 9C48 22 EE 8B     	ld (Posicion_actual),hl
 139+ 9C4B 10 E2            djnz 3B
 140+ 9C4D CD 76 95     2 call Genera_coordenadas
 141+ 9C50 C9           	ret
 142+ 9C51
 143+ 9C51              ; -----------------------------
 144+ 9C51              ;
 145+ 9C51              ;	27/5/23
 146+ 9C51              ;
 147+ 9C51              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9C51              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9C51              ;
 150+ 9C51              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9C51              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9C51              ;
 153+ 9C51              ;	Modifica: A y (Puntero_objeto).
 154+ 9C51
 155+ 9C51 3A EA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9C54 CB 47        	bit 0,a
 157+ 9C56 C8           	ret z
 158+ 9C57 CB 87        	res 0,a
 159+ 9C59 32 EA 8B     	ld (Ctrl_2),a
 160+ 9C5C 2A 1C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9C5F 22 F0 8B     	ld (Puntero_objeto),hl
 162+ 9C62 C9           	ret
 163+ 9C63
 164+ 9C63              ; ******************************************************************************************************************************************************************************************
 165+ 9C63              ;
 166+ 9C63              ;	19/10/22
 167+ 9C63              ;
 168+ 9C63              ;	Mov_right.
 169+ 9C63              ;
 170+ 9C63              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9C63              ;
 172+ 9C63
 173+ 9C63              Mov_right
 174+ 9C63
 175+ 9C63 3A EB 8B     	ld a,(Ctrl_0)
 176+ 9C66 CB 77        	bit 6,a
 177+ 9C68 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 178+ 9C6A
 179+ 9C6A CD 71 9E     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 180+ 9C6D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 181+ 9C6E
 182+ 9C6E 21 EB 8B     	ld hl,Ctrl_0
 183+ 9C71 CB E6        	set 4,(hl)
 184+ 9C73 18 4D        	jr 8F
 185+ 9C75
 186+ 9C75 3A DF 8B     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 187+ 9C78 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 188+ 9C7A 20 46        	jr nz,8F
 189+ 9C7C
 190+ 9C7C 3A F2 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 191+ 9C7F A7           	and a 															; _[3] para continuar con el DESPLZ.
 192+ 9C80 28 40        	jr z,8F
 193+ 9C82
 194+ 9C82              ; ---------- ---------- ----------
 195+ 9C82              ;
 196+ 9C82              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 197+ 9C82
 198+ 9C82 3A 04 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 199+ 9C85 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 200+ 9C87 28 11        	jr z,1F
 201+ 9C89 38 06        	jr c,6F
 202+ 9C8B FE 04        	cp 4
 203+ 9C8D 28 14        	jr z,7F
 204+ 9C8F 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 205+ 9C91
 206+ 9C91              ; ---------- ---------- ----------
 207+ 9C91              ;
 208+ 9C91              ; Perfiles de velocidad
 209+ 9C91              ;
 210+ 9C91
 211+ 9C91 3A F2 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 212+ 9C94 FE FE        	cp $fe
 213+ 9C96 20 2A        	jr nz,8F
 214+ 9C98 18 10        	jr 3F
 215+ 9C9A 3A F2 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 216+ 9C9D FE FD        	cp $fd
 217+ 9C9F 20 21        	jr nz,8F
 218+ 9CA1 18 07        	jr 3F
 219+ 9CA3 3A F2 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 220+ 9CA6 FE FB        	cp $fb
 221+ 9CA8 20 18        	jr nz,8F
 222+ 9CAA
 223+ 9CAA              ; ---------- ---------- ----------
 224+ 9CAA
 225+ 9CAA              3
 226+ 9CAA CD B1 9E     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 227+ 9CAD              ;	call Reinicio
 228+ 9CAD
 229+ 9CAD              ; ---------- ---------- ----------
 230+ 9CAD              ;
 231+ 9CAD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 232+ 9CAD
 233+ 9CAD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 234+ 9CAF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 235+ 9CB0 CD C9 9C     	call DESPLZ_DER
 236+ 9CB3 C1           	pop bc
 237+ 9CB4 10 F9        	djnz 5B
 238+ 9CB6 2A EE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 239+ 9CB9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 240+ 9CBA 22 EE 8B     	ld (Posicion_actual),hl
 241+ 9CBD CD 76 95     	call Genera_coordenadas
 242+ 9CC0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 243+ 9CC2
 244+ 9CC2              ; ---------- ---------- ----------
 245+ 9CC2
 246+ 9CC2 2A EE 8B     8 ld hl,(Posicion_actual)
 247+ 9CC5 CD C9 9C     	call DESPLZ_DER
 248+ 9CC8 C9           2 ret
 249+ 9CC9
 250+ 9CC9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 251+ 9CC9              ;
 252+ 9CC9              ;	22/9/22
 253+ 9CC9              ;
 254+ 9CC9
 255+ 9CC9 CD D8 9C     DESPLZ_DER call Desplaza_derecha
 256+ 9CCC CD 24 9D         call modifica_parametros_1er_DESPLZ_2
 257+ 9CCF CD 33 9D         call Ciclo_completo
 258+ 9CD2
 259+ 9CD2 21 EB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 260+ 9CD5 CB FE        	set 7,(hl)
 261+ 9CD7
 262+ 9CD7 C9           	ret
 263+ 9CD8
 264+ 9CD8              ; ******************************************************************************************************************************************************************************************
 265+ 9CD8              ;	15/02/23
 266+ 9CD8              ;
 267+ 9CD8
 268+ 9CD8 3A 04 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9CDB 47           	ld b,a
 270+ 9CDC 2A F7 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9CDF 23           1 inc hl
 272+ 9CE0 23           	inc hl
 273+ 9CE1 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9CE3 22 F7 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9CE6 CD 68 91     	call Extrae_address
 276+ 9CE9 22 F0 8B     	ld (Puntero_objeto),hl
 277+ 9CEC
 278+ 9CEC              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9CEC
 280+ 9CEC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9CEC              ; Cuántos movimientos hemos hecho ??
 282+ 9CEC              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9CEC
 284+ 9CEC 2A F3 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9CEF EB           	ex de,hl
 286+ 9CF0 A7           	and a
 287+ 9CF1 ED 52        	sbc hl,de
 288+ 9CF3 CB 3D        	srl l
 289+ 9CF5 3E 08        6 ld a,8
 290+ 9CF7 95           	sub l
 291+ 9CF8 30 1E        	jr nc,3F
 292+ 9CFA
 293+ 9CFA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9CFA              ; B="0".
 295+ 9CFA
 296+ 9CFA 04           4 inc b
 297+ 9CFB 3C           	inc a
 298+ 9CFC 20 FC        	jr nz,4B
 299+ 9CFE 78           	ld a,b
 300+ 9CFF 08           	ex af,af
 301+ 9D00 2A F3 8B     	ld hl,(Indice_Sprite_der)
 302+ 9D03 23           5 inc hl
 303+ 9D04 23           	inc hl
 304+ 9D05 10 FC        	djnz 5B
 305+ 9D07 22 F7 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9D0A CD 68 91     	call Extrae_address
 307+ 9D0D 22 F0 8B     	ld (Puntero_objeto),hl
 308+ 9D10
 309+ 9D10              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9D10              ; _(Posicion_actual).
 311+ 9D10
 312+ 9D10 21 EE 8B     	ld hl,Posicion_actual
 313+ 9D13 34           	inc (hl)
 314+ 9D14 08               ex af,af
 315+ 9D15 6F           	ld l,a
 316+ 9D16 18 DD        	jr 6B
 317+ 9D18
 318+ 9D18              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9D18
 320+ 9D18 47           3 ld b,a
 321+ 9D19 2A F5 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9D1C 23           2 inc hl
 323+ 9D1D 23           	inc hl
 324+ 9D1E 10 FC        	djnz 2B
 325+ 9D20 22 F9 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9D23 C9           8 ret
 327+ 9D24
 328+ 9D24              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9D24              ;
 330+ 9D24              ;	24/7/22
 331+ 9D24              ;
 332+ 9D24              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9D24              ;
 334+ 9D24              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9D24              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9D24              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9D24
 338+ 9D24              modifica_parametros_1er_DESPLZ_2
 339+ 9D24
 340+ 9D24 3A F2 8B     	ld a,(CTRL_DESPLZ)									 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 341+ 9D27 A7           	and a
 342+ 9D28 20 05        	jr nz,1F
 343+ 9D2A
 344+ 9D2A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 345+ 9D2C 32 F2 8B         ld (CTRL_DESPLZ),a
 346+ 9D2F
 347+ 9D2F CD 7D 9E     1 call Inc_CTRL_DESPLZ
 348+ 9D32
 349+ 9D32 C9           	ret
 350+ 9D33
 351+ 9D33              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 352+ 9D33              ;
 353+ 9D33              ;	24/7/22
 354+ 9D33              ;
 355+ 9D33              ;	Ciclo_completo.
 356+ 9D33              ;
 357+ 9D33              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 358+ 9D33              ;
 359+ 9D33              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 360+ 9D33              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 361+ 9D33
 362+ 9D33
 363+ 9D33              Ciclo_completo
 364+ 9D33
 365+ 9D33 3A F2 8B     	ld a,(CTRL_DESPLZ)
 366+ 9D36 FE FF        	cp $ff
 367+ 9D38 28 0E        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 368+ 9D3A E6 F0        	and $f0
 369+ 9D3C C0           	ret nz
 370+ 9D3D
 371+ 9D3D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 372+ 9D3D
 373+ 9D3D 3A F2 8B     	ld a,(CTRL_DESPLZ)
 374+ 9D40 47           	ld b,a
 375+ 9D41 3E F8        	ld a,$f8
 376+ 9D43 80           	add b
 377+ 9D44 32 F2 8B     	ld (CTRL_DESPLZ),a
 378+ 9D47 C9           	ret
 379+ 9D48
 380+ 9D48 AF           1 xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 381+ 9D49 32 F2 8B     	ld (CTRL_DESPLZ),a
 382+ 9D4C
 383+ 9D4C 2A EE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 384+ 9D4F 23           	inc hl
 385+ 9D50 22 EE 8B     	ld (Posicion_actual),hl
 386+ 9D53
 387+ 9D53 CD 76 95     	call Genera_coordenadas
 388+ 9D56
 389+ 9D56              ; Inicia el puntero de Sprite.
 390+ 9D56
 391+ 9D56 CD 7A 91     	call Inicia_puntero_objeto_der
 392+ 9D59
 393+ 9D59 C9           	ret
 394+ 9D5A
 395+ 9D5A              ; ******************************************************************************************************************************************************************************************
 396+ 9D5A              ;
 397+ 9D5A              ;	15/02/23
 398+ 9D5A              ;
 399+ 9D5A              ;	Mov_left.
 400+ 9D5A              ;
 401+ 9D5A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 402+ 9D5A              ;
 403+ 9D5A              Mov_left
 404+ 9D5A
 405+ 9D5A              ;	ld hl,Ctrl_0
 406+ 9D5A              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 407+ 9D5A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 408+ 9D5A              ; 																	; _ en el caso de que no lo haya.
 409+ 9D5A 3A EB 8B     	ld a,(Ctrl_0)
 410+ 9D5D CB 77        	bit 6,a
 411+ 9D5F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 412+ 9D61
 413+ 9D61 CD 77 9E     	call Stop_Amadeus_left
 414+ 9D64 C8           	ret z
 415+ 9D65 20 4A        	jr nz,8F
 416+ 9D67
 417+ 9D67 3A DF 8B     11 ld a,(Coordenada_X)
 418+ 9D6A A7           	and a
 419+ 9D6B 20 44        	jr nz,8F
 420+ 9D6D
 421+ 9D6D 3A F2 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 422+ 9D70 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 423+ 9D71 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 424+ 9D73
 425+ 9D73              ; ---------- ---------- ----------
 426+ 9D73
 427+ 9D73 3A 03 8C     	ld a,(Vel_left)
 428+ 9D76 FE 02        	cp 2
 429+ 9D78 28 0F        	jr z,1F
 430+ 9D7A 38 04        	jr c,6F
 431+ 9D7C FE 04        	cp 4
 432+ 9D7E 28 12        	jr z,7F
 433+ 9D80
 434+ 9D80              ; ---------- ---------- ----------
 435+ 9D80
 436+ 9D80 3A F2 8B     6 ld a,(CTRL_DESPLZ)
 437+ 9D83 FE F8        	cp $f8
 438+ 9D85 20 2A        	jr nz,8F
 439+ 9D87 18 10        	jr 4F
 440+ 9D89 3A F2 8B     1 ld a,(CTRL_DESPLZ)
 441+ 9D8C FE F9        	cp $f9
 442+ 9D8E 20 21        	jr nz,8F
 443+ 9D90 18 07        	jr 4F
 444+ 9D92 3A F2 8B     7 ld a,(CTRL_DESPLZ)
 445+ 9D95 FE FB        	cp $fb
 446+ 9D97 20 18        	jr nz,8F
 447+ 9D99
 448+ 9D99              ; ---------- ---------- ----------
 449+ 9D99
 450+ 9D99              4
 451+ 9D99 CD 9F 9E     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 452+ 9D9C              ;	call Reinicio
 453+ 9D9C
 454+ 9D9C              ; ---------- ---------- ----------
 455+ 9D9C
 456+ 9D9C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 457+ 9D9E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 458+ 9D9F
 459+ 9D9F              ;	ld hl,(Indice_Sprite_izq)
 460+ 9D9F              ;	ld (Puntero_DESPLZ_izq),hl
 461+ 9D9F
 462+ 9D9F CD B8 9D     	call DESPLZ_IZQ
 463+ 9DA2 C1           	pop bc
 464+ 9DA3 10 F9        	djnz 5B
 465+ 9DA5 2A EE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 466+ 9DA8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 467+ 9DA9 22 EE 8B     	ld (Posicion_actual),hl
 468+ 9DAC CD 76 95     	call Genera_coordenadas
 469+ 9DAF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 470+ 9DB1
 471+ 9DB1              ; ---------- ---------- ----------
 472+ 9DB1
 473+ 9DB1              ; Movemos, no hay recolocación.
 474+ 9DB1
 475+ 9DB1 2A EE 8B     8 ld hl,(Posicion_actual)
 476+ 9DB4 CD B8 9D     	call DESPLZ_IZQ
 477+ 9DB7 C9           2 ret
 478+ 9DB8
 479+ 9DB8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 480+ 9DB8              ;
 481+ 9DB8              ;	22/9/22
 482+ 9DB8
 483+ 9DB8              DESPLZ_IZQ
 484+ 9DB8
 485+ 9DB8 CD C7 9D     	call Desplaza_izquierda
 486+ 9DBB CD 13 9E         call modifica_parametros_1er_DESPLZ
 487+ 9DBE CD 3B 9E     	call Ciclo_completo_2
 488+ 9DC1 21 EB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 489+ 9DC4 CB BE        	res 7,(hl)
 490+ 9DC6 C9           	ret
 491+ 9DC7
 492+ 9DC7              Desplaza_izquierda
 493+ 9DC7
 494+ 9DC7 3A 03 8C     	ld a,(Vel_left)
 495+ 9DCA 47           	ld b,a
 496+ 9DCB 2A F9 8B     	ld hl,(Puntero_DESPLZ_izq)
 497+ 9DCE 23           1 inc hl
 498+ 9DCF 23           	inc hl
 499+ 9DD0 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 500+ 9DD2 22 F9 8B     	ld (Puntero_DESPLZ_izq),hl
 501+ 9DD5 CD 68 91     	call Extrae_address
 502+ 9DD8 22 F0 8B     	ld (Puntero_objeto),hl
 503+ 9DDB
 504+ 9DDB              ; Modifica (Puntero_DESPLZ_der).
 505+ 9DDB
 506+ 9DDB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 507+ 9DDB              ; Cuántos movimientos hemos hecho ??
 508+ 9DDB              ; DE contiene (Puntero_DESPLZ_izq).
 509+ 9DDB
 510+ 9DDB 2A F5 8B     7 ld hl,(Indice_Sprite_izq)
 511+ 9DDE EB           	ex de,hl
 512+ 9DDF A7           	and a
 513+ 9DE0 ED 52        	sbc hl,de
 514+ 9DE2 CB 3D        	srl l
 515+ 9DE4 3E 08        6 ld a,8
 516+ 9DE6 95           	sub l
 517+ 9DE7 30 1E        	jr nc,3F
 518+ 9DE9
 519+ 9DE9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 520+ 9DE9              ; B="0".
 521+ 9DE9
 522+ 9DE9 04           4 inc b
 523+ 9DEA 3C           	inc a
 524+ 9DEB 20 FC        	jr nz,4B
 525+ 9DED 78           	ld a,b
 526+ 9DEE 08           	ex af,af
 527+ 9DEF 2A F5 8B     	ld hl,(Indice_Sprite_izq)
 528+ 9DF2 23           5 inc hl
 529+ 9DF3 23           	inc hl
 530+ 9DF4 10 FC        	djnz 5B
 531+ 9DF6 22 F9 8B     	ld (Puntero_DESPLZ_izq),hl
 532+ 9DF9 CD 68 91     	call Extrae_address
 533+ 9DFC 22 F0 8B     	ld (Puntero_objeto),hl
 534+ 9DFF
 535+ 9DFF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 536+ 9DFF              ; _(Posicion_actual).
 537+ 9DFF
 538+ 9DFF 21 EE 8B     	ld hl,Posicion_actual
 539+ 9E02 35           	dec (hl)
 540+ 9E03 08           	ex af,af
 541+ 9E04 6F           	ld l,a
 542+ 9E05 18 DD        	jr 6B
 543+ 9E07
 544+ 9E07              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 545+ 9E07
 546+ 9E07 47           3 ld b,a
 547+ 9E08 2A F3 8B     	ld hl,(Indice_Sprite_der)
 548+ 9E0B 23           2 inc hl
 549+ 9E0C 23           	inc hl
 550+ 9E0D 10 FC        	djnz 2B
 551+ 9E0F 22 F7 8B     	ld (Puntero_DESPLZ_der),hl
 552+ 9E12 C9           8 ret
 553+ 9E13
 554+ 9E13              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 555+ 9E13              ;
 556+ 9E13              ;	modifica_parametros_1er_DESPLZ
 557+ 9E13              ;
 558+ 9E13              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 559+ 9E13              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 560+ 9E13              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 561+ 9E13
 562+ 9E13 3A F2 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 563+ 9E16 A7           	and a
 564+ 9E17 20 1E        	jr nz,1F
 565+ 9E19 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 566+ 9E1A 32 F2 8B         ld (CTRL_DESPLZ),a
 567+ 9E1D 21 ED 8B     	ld hl,Columns
 568+ 9E20 34           	inc (hl)
 569+ 9E21 3A FD 8B     	ld a,(Cuad_objeto)
 570+ 9E24 E6 01        	and 1
 571+ 9E26 20 0F        	jr nz,1F
 572+ 9E28 2A EE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 573+ 9E2B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 574+ 9E2C 22 EE 8B     	ld (Posicion_actual),hl
 575+ 9E2F CD 76 95     	call Genera_coordenadas
 576+ 9E32 CD 8E 9E     	call Dec_CTRL_DESPLZ
 577+ 9E35 18 03        	jr 2F
 578+ 9E37 CD 8E 9E     1 call Dec_CTRL_DESPLZ
 579+ 9E3A C9           2 ret
 580+ 9E3B
 581+ 9E3B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 582+ 9E3B
 583+ 9E3B 3A F2 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 584+ 9E3E FE F7        	cp $f7
 585+ 9E40 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 586+ 9E42 30 2C        	jr nc,3F
 587+ 9E44
 588+ 9E44              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 589+ 9E44
 590+ 9E44 06 00        	ld b,0
 591+ 9E46 04           4 inc b
 592+ 9E47 3C           	inc a
 593+ 9E48 FE F7        	cp $f7
 594+ 9E4A 20 FA        	jr nz,4B
 595+ 9E4C 3E FF        	ld a,$ff
 596+ 9E4E 90           	sub b
 597+ 9E4F 32 F2 8B     	ld (CTRL_DESPLZ),a
 598+ 9E52 18 1C        	jr 3F
 599+ 9E54
 600+ 9E54              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 601+ 9E54
 602+ 9E54 21 ED 8B     1 ld hl,Columns
 603+ 9E57 35           	dec (hl)
 604+ 9E58 AF           	xor a
 605+ 9E59 32 F2 8B     	ld (CTRL_DESPLZ),a
 606+ 9E5C 3A FD 8B     	ld a,(Cuad_objeto)
 607+ 9E5F E6 01        	and 1
 608+ 9E61 28 0A        	jr z,2F
 609+ 9E63 2A EE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 610+ 9E66 2B           	dec hl
 611+ 9E67 22 EE 8B     	ld (Posicion_actual),hl
 612+ 9E6A CD 76 95     	call Genera_coordenadas
 613+ 9E6D
 614+ 9E6D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 615+ 9E6D
 616+ 9E6D CD 8D 91     2 call Inicia_puntero_objeto_izq
 617+ 9E70 C9           3 ret
 618+ 9E71
 619+ 9E71              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9E71              ;
 621+ 9E71              ;	19/10/22
 622+ 9E71              ;
 623+ 9E71              ;	(cp 29) para un Amadeus de 3 Columns.
 624+ 9E71              ;	(cp 30)   ""  ""    ""     2 Columns.
 625+ 9E71
 626+ 9E71 3A DF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9E74 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 628+ 9E76 C9           	ret
 629+ 9E77
 630+ 9E77              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9E77              ;
 632+ 9E77              ;	19/10/22
 633+ 9E77              ;
 634+ 9E77              ;	(cp 2) para un Amadeus de 3 Columns.
 635+ 9E77              ;	(cp 1)   ""  ""    ""     2 Columns.
 636+ 9E77
 637+ 9E77 3A DF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 638+ 9E7A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 639+ 9E7C C9           	ret
 640+ 9E7D
 641+ 9E7D              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9E7D              ;
 643+ 9E7D              ;	24/7/22
 644+ 9E7D              ;
 645+ 9E7D              ;	Inc_CTRL_DESPLZ
 646+ 9E7D              ;
 647+ 9E7D              ;
 648+ 9E7D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 649+ 9E7D
 650+ 9E7D 21 F2 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 651+ 9E80 3A 04 8C     	ld a,(Vel_right)
 652+ 9E83 A7           	and a
 653+ 9E84 28 06        	jr z,1F
 654+ 9E86 47           	ld b,a
 655+ 9E87 34           3 inc (hl)
 656+ 9E88 10 FD        	djnz 3B
 657+ 9E8A 18 01        	jr 2F
 658+ 9E8C 34           1 inc (hl)
 659+ 9E8D C9           2 ret
 660+ 9E8E
 661+ 9E8E              ; ---------- ---------- ---------- ---------- ---------- ----------
 662+ 9E8E              ;
 663+ 9E8E              ;	5/2/23
 664+ 9E8E              ;
 665+ 9E8E              ;	Dec_CTRL_DESPLZ
 666+ 9E8E              ;
 667+ 9E8E              ;
 668+ 9E8E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 669+ 9E8E
 670+ 9E8E 21 F2 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 671+ 9E91 3A 03 8C     	ld a,(Vel_left)
 672+ 9E94 A7           	and a
 673+ 9E95 28 06        	jr z,1F
 674+ 9E97 47           	ld b,a
 675+ 9E98 35           3 dec (hl)
 676+ 9E99 10 FD        	djnz 3B
 677+ 9E9B 18 01        	jr 2F
 678+ 9E9D 35           1 dec (hl)
 679+ 9E9E C9           2 ret
 680+ 9E9F
 681+ 9E9F              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9E9F
 683+ 9E9F 2A EE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 684+ 9EA2 01 1F 00     	ld bc,31
 685+ 9EA5 A7           	and a
 686+ 9EA6 ED 4A        	adc hl,bc
 687+ 9EA8 22 EE 8B     	ld (Posicion_actual),hl
 688+ 9EAB 21 EB 8B     	ld hl,Ctrl_0														; $xxx1
 689+ 9EAE CB C6        	set 0,(hl)
 690+ 9EB0 C9           	ret
 691+ 9EB1
 692+ 9EB1              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9EB1
 694+ 9EB1 2A EE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 695+ 9EB4 01 1F 00     	ld bc,31
 696+ 9EB7 A7           	and a
 697+ 9EB8 ED 42        	sbc hl,bc
 698+ 9EBA 22 EE 8B     	ld (Posicion_actual),hl 											; $xx1x
 699+ 9EBD 21 EB 8B     	ld hl,Ctrl_0
 700+ 9EC0 CB CE        	set 1,(hl)
 701+ 9EC2 C9           	ret
 702+ 9EC3
 703+ 9EC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9EC3
 705+ 9EC3 24           Reaparece_abajo inc h
 706+ 9EC4 01 E0 17     	ld bc,$17e0
 707+ 9EC7 A7           	and a
 708+ 9EC8 ED 4A        	adc hl,bc
 709+ 9ECA 22 EE 8B     	ld (Posicion_actual),hl
 710+ 9ECD 21 EB 8B     	ld hl,Ctrl_0
 711+ 9ED0 CB D6        	set 2,(hl)
 712+ 9ED2 C9           	ret
 713+ 9ED3
 714+ 9ED3              ; ---------- ---------- ---------- ---------- ---------- ----------
 715+ 9ED3
 716+ 9ED3 01 E0 17     Reaparece_arriba ld bc,$17e0
 717+ 9ED6 A7           	and a
 718+ 9ED7 ED 42        	sbc hl,bc
 719+ 9ED9 22 EE 8B     	ld (Posicion_actual),hl
 720+ 9EDC 21 EB 8B     	ld hl,Ctrl_0
 721+ 9EDF CB DE        	set 3,(hl)
 722+ 9EE1 C9           	ret
 723+ 9EE2
 724+ 9EE2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 725+ 9EE2              ;
 726+ 9EE2              ;	15/07/23
 727+ 9EE2
 728+ 9EE2              Reinicio
 729+ 9EE2
 730+ 9EE2              ; Vamos a reiniciar los punteros y variables de movimiento.
 731+ 9EE2
 732+ 9EE2 AF           	xor a
 733+ 9EE3 21 13 8C     	ld hl,Puntero_indice_mov_bucle
 734+ 9EE6 CD 04 9F     	call Limpia_contenido_hl
 735+ 9EE9
 736+ 9EE9 21 EE 8B     	ld hl,Posicion_actual
 737+ 9EEC CD 04 9F     	call Limpia_contenido_hl
 738+ 9EEF
 739+ 9EEF CD E1 93     	call Situa_Puntero_indice_mov
 740+ 9EF2 CD FD 9F     	call Inicia_Puntero_mov
 741+ 9EF5
 742+ 9EF5 21 15 8C     	ld hl,Incrementa_puntero
 743+ 9EF8 06 05        	ld b,5
 744+ 9EFA 77           1 ld (hl),a
 745+ 9EFB 23           	inc hl
 746+ 9EFC 10 FC        	djnz 1B
 747+ 9EFE
 748+ 9EFE 21 EA 8B     	ld hl,Ctrl_2
 749+ 9F01 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 750+ 9F03
 751+ 9F03 C9           	ret
 752+ 9F04
 753+ 9F04 77           Limpia_contenido_hl	ld (hl),a
 754+ 9F05 23           	inc hl
 755+ 9F06 77           	ld (hl),a
 756+ 9F07 C9           	ret
 757+ 9F08
 758+ 9F08              ; ----------------------------------------------------------------------------------------------------------------
 759+ 9F08              ;
 760+ 9F08              ;	18/6/24
 761+ 9F08              ;
 762+ 9F08
 763+ 9F08              Amadeus_a_izquierda
 764+ 9F08
 765+ 9F08              ;	Actualiza contador de movimientos.
 766+ 9F08
 767+ 9F08 21 B7 89     	ld hl,Comm_Amadeus
 768+ 9F0B 35           	dec (hl)
 769+ 9F0C 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 770+ 9F0E
 771+ 9F0E 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 772+ 9F11 2B           	dec hl
 773+ 9F12 2B           	dec hl
 774+ 9F13 2B           	dec hl
 775+ 9F14 2B           	dec hl
 776+ 9F15 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 777+ 9F18
 778+ 9F18 21 55 8C     	ld hl,Ctrl_3
 779+ 9F1B CB EE        	set 5,(hl)
 780+ 9F1D
 781+ 9F1D C9           	ret
 782+ 9F1E
 783+ 9F1E 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 784+ 9F1F C9           	ret
 785+ 9F20
 786+ 9F20
 787+ 9F20              Amadeus_a_derecha
 788+ 9F20
 789+ 9F20              ;	Actualiza contador de movimientos.
 790+ 9F20
 791+ 9F20 21 B7 89     	ld hl,Comm_Amadeus
 792+ 9F23 34           	inc (hl)
 793+ 9F24 3E 7A        	ld a,$7a
 794+ 9F26 BE           	cp (hl)
 795+ 9F27 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 796+ 9F29
 797+ 9F29 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 798+ 9F2C 23           	inc hl
 799+ 9F2D 23           	inc hl
 800+ 9F2E 23           	inc hl
 801+ 9F2F 23           	inc hl
 802+ 9F30 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 803+ 9F33
 804+ 9F33 21 55 8C     	ld hl,Ctrl_3
 805+ 9F36 CB EE        	set 5,(hl)
 806+ 9F38 C9           	ret
 807+ 9F39
 808+ 9F39 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 809+ 9F3A C9           	ret
# file closed: Direcciones.asm
2413  9F3B              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9F3B              ; ----- ----- ----- ----- -----
   2+ 9F3B              ;
   3+ 9F3B              ;   28/12/23
   4+ 9F3B
   5+ 9F3B              Movimiento
   6+ 9F3B
   7+ 9F3B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9F3B
   9+ 9F3B 3A EA 8B         ld a,(Ctrl_2)
  10+ 9F3E CB 57            bit 2,a
  11+ 9F40 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9F42
  13+ 9F42 2A 11 8C         ld hl,(Puntero_mov)
  14+ 9F45 7E               ld a,(hl)
  15+ 9F46
  16+ 9F46              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9F46
  18+ 9F46              Inicia_desplazamiento.
  19+ 9F46
  20+ 9F46              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9F46
  22+ 9F46 CD 33 A0         call Ajusta_velocidad_desplazamiento
  23+ 9F49
  24+ 9F49              ; Hemos definido (Vel_left),(Vel_right),(Vel_up) y (Vel_down) en la bandeja DRAW. Ahora (Puntero_mov) está situado en el 3er byte del movimiento, (indica dirección y nº de veces que la ejecutamos).
  25+ 9F49
  26+ 9F49              ; Iniciamos (Repetimos_mov).
  27+ 9F49
  28+ 9F49 7E               ld a,(hl)
  29+ 9F4A E6 0F            and $0f
  30+ 9F4C 32 17 8C         ld (Repetimos_desplazamiento),a
  31+ 9F4F 32 18 8C         ld (Repetimos_desplazamiento_backup),a
  32+ 9F52
  33+ 9F52              ; Iniciamos (Cola_de_desplazamiento).
  34+ 9F52
  35+ 9F52 23               inc hl
  36+ 9F53 7E               ld a,(hl)
  37+ 9F54 32 1A 8C         ld (Cola_de_desplazamiento),a
  38+ 9F57 2B               dec hl
  39+ 9F58
  40+ 9F58 21 EA 8B         ld hl,Ctrl_2
  41+ 9F5B CB D6            set 2,(hl)
  42+ 9F5D
  43+ 9F5D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  44+ 9F5D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  45+ 9F5D
  46+ 9F5D              Desplazamiento_iniciado
  47+ 9F5D
  48+ 9F5D              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  49+ 9F5D
  50+ 9F5D              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  51+ 9F5D
  52+ 9F5D              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  53+ 9F5D              ;                               Izquierda_y_subiendo+8 (11)
  54+ 9F5D              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  55+ 9F5D              ;                               Izquierda_y_subiendo+8 (8)
  56+ 9F5D              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  57+ 9F5D              ;                               Izquierda_y_subiendo+8 (8)
  58+ 9F5D              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  59+ 9F5D              ;                               Izquierda_y_subiendo+8 (8)
  60+ 9F5D              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  61+ 9F5D              ;                               Izquierda_y_subiendo+8 (8)
  62+ 9F5D              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  63+ 9F5D              ;                               Izquierda_y_subiendo+8 (7)
  64+ 9F5D              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  65+ 9F5D              ;                               Izquierda_y_subiendo+8 (7)
  66+ 9F5D              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  67+ 9F5D              ;                               Izquierda_y_subiendo+8 (7)
  68+ 9F5D
  69+ 9F5D
  70+ 9F5D
  71+ 9F5D
  72+ 9F5D
  73+ 9F5D              ;    ld bc,Derecha_y_subiendo+2
  74+ 9F5D              ;    ld hl,(Puntero_mov)
  75+ 9F5D              ;    ld a,c
  76+ 9F5D              ;    cp l
  77+ 9F5D              ;    jr nz,3F
  78+ 9F5D
  79+ 9F5D              ;    jr $
  80+ 9F5D
  81+ 9F5D              ;    ld a,(Coordenada_X)
  82+ 9F5D              ;    sub 4
  83+ 9F5D              ;    jr z,4F
  84+ 9F5D
  85+ 9F5D              ;    ld a,(Coordenada_y)                 ; $08 - $0b
  86+ 9F5D
  87+ 9F5D              ;    ld b,a
  88+ 9F5D              ;    ld hl,Derecha_y_subiendo+7
  89+ 9F5D              ;    ld a,(hl)
  90+ 9F5D              ;    sub b
  91+ 9F5D              ;    ld (hl),a
  92+ 9F5D
  93+ 9F5D
  94+ 9F5D CD 07 A0         call Aplica_desplazamiento
  95+ 9F60
  96+ 9F60 21 17 8C         ld hl,Repetimos_desplazamiento
  97+ 9F63 35               dec (hl)
  98+ 9F64 C0               ret nz
  99+ 9F65
 100+ 9F65              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 101+ 9F65              ; Hay que volver a ejecutar este desplazamiento ???.
 102+ 9F65              ; Analiza (Cola_de_desplazamiento).
 103+ 9F65
 104+ 9F65 3A 1A 8C     Cola ld a,(Cola_de_desplazamiento)
 105+ 9F68 A7               and a
 106+ 9F69 CC 5C A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 107+ 9F6C 28 30            jr z,Reinicia_el_movimiento
 108+ 9F6E
 109+ 9F6E FE FF            cp $ff
 110+ 9F70 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 111+ 9F72
 112+ 9F72 FE FE            cp $fe
 113+ 9F74 CC E1 9F         call z,Fijamos_bucle
 114+ 9F77 28 25            jr z,Reinicia_el_movimiento
 115+ 9F79
 116+ 9F79 FE FD            cp $fd
 117+ 9F7B 20 11            jr nz,1F
 118+ 9F7D
 119+ 9F7D              ; ---
 120+ 9F7D              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 121+ 9F7D
 122+ 9F7D 3A EA 8B         ld a,(Ctrl_2)
 123+ 9F80 CB 5F            bit 3,a
 124+ 9F82 20 1A            jr nz,Reinicia_el_movimiento
 125+ 9F84
 126+ 9F84              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 127+ 9F84
 128+ 9F84 21 EA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 129+ 9F87 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 130+ 9F89
 131+ 9F89 CD F2 9F         call Inicia_Repetimos_movimiento
 132+ 9F8C 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 133+ 9F8E              ; ---
 134+ 9F8E
 135+ 9F8E FE 01        1 cp 1
 136+ 9F90 CA CB 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 137+ 9F93
 138+ 9F93 3D               dec a
 139+ 9F94 32 1A 8C         ld (Cola_de_desplazamiento),a
 140+ 9F97
 141+ 9F97 3A 18 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 142+ 9F9A 32 17 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 143+ 9F9D              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 144+ 9F9D C9               ret
 145+ 9F9E
 146+ 9F9E              Reinicia_el_movimiento
 147+ 9F9E
 148+ 9F9E 3A EA 8B         ld a,(Ctrl_2)
 149+ 9FA1 CB 5F            bit 3,a
 150+ 9FA3 28 1B            jr z,2F
 151+ 9FA5
 152+ 9FA5              ; (Cola_de_desplazamiento)="254".
 153+ 9FA5
 154+ 9FA5 21 19 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 155+ 9FA8 35               dec (hl)
 156+ 9FA9 20 15            jr nz,2F
 157+ 9FAB
 158+ 9FAB              ; Fin de las repeticiones del último movimiento.
 159+ 9FAB
 160+ 9FAB 21 EA 8B         ld hl,Ctrl_2
 161+ 9FAE CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 162+ 9FB0
 163+ 9FB0 2A 11 8C         ld hl,(Puntero_mov)
 164+ 9FB3 23               inc hl
 165+ 9FB4 23               inc hl
 166+ 9FB5 23               inc hl
 167+ 9FB6 22 11 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 168+ 9FB9              ;                                                               ; _ para ejecutar su mandato. :)
 169+ 9FB9 7E               ld a,(hl)
 170+ 9FBA 32 1A 8C         ld (Cola_de_desplazamiento),a
 171+ 9FBD
 172+ 9FBD C3 65 9F         jp Cola
 173+ 9FC0
 174+ 9FC0 CD FD 9F     2 call Inicia_Puntero_mov
 175+ 9FC3
 176+ 9FC3 21 EA 8B         ld hl,Ctrl_2
 177+ 9FC6 CB 96            res 2,(hl)
 178+ 9FC8
 179+ 9FC8 C3 3B 9F         jp Movimiento
 180+ 9FCB
 181+ 9FCB              Siguiente_desplazamiento
 182+ 9FCB
 183+ 9FCB              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 184+ 9FCB              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 185+ 9FCB
 186+ 9FCB 21 EA 8B         ld hl,Ctrl_2
 187+ 9FCE CB 96            res 2,(hl)
 188+ 9FD0
 189+ 9FD0 2A 11 8C         ld hl,(Puntero_mov)
 190+ 9FD3 23               inc hl
 191+ 9FD4 23               inc hl
 192+ 9FD5 22 11 8C         ld (Puntero_mov),hl
 193+ 9FD8
 194+ 9FD8 7E               ld a,(hl)
 195+ 9FD9 A7               and a
 196+ 9FDA CC 5C A0         call z,Incrementa_Puntero_indice_mov
 197+ 9FDD CA 9E 9F         jp z,Reinicia_el_movimiento
 198+ 9FE0
 199+ 9FE0 C9               ret
 200+ 9FE1
 201+ 9FE1              ; Subrutinas -----------------------------------------
 202+ 9FE1              ; ---------- --------- --------- ---------- ----------
 203+ 9FE1              ;
 204+ 9FE1              ;   24/07/23
 205+ 9FE1              ;
 206+ 9FE1              ;   Fijamos_bucle
 207+ 9FE1              ;
 208+ 9FE1              ;
 209+ 9FE1
 210+ 9FE1              Fijamos_bucle
 211+ 9FE1
 212+ 9FE1 3A 15 8C         ld a,(Incrementa_puntero)
 213+ 9FE4 3C               inc a
 214+ 9FE5 32 16 8C         ld (Incrementa_puntero_backup),a
 215+ 9FE8
 216+ 9FE8 CD 5C A0         call Incrementa_Puntero_indice_mov
 217+ 9FEB 2A 0F 8C         ld hl,(Puntero_indice_mov)
 218+ 9FEE 22 13 8C         ld (Puntero_indice_mov_bucle),hl
 219+ 9FF1 C9               ret
 220+ 9FF2
 221+ 9FF2              ; ---------- --------- --------- ---------- ----------
 222+ 9FF2              ;
 223+ 9FF2              ;   07/7/23
 224+ 9FF2              ;
 225+ 9FF2              ;   Inicia_Repetimos_movimiento
 226+ 9FF2              ;
 227+ 9FF2              ;
 228+ 9FF2
 229+ 9FF2              Inicia_Repetimos_movimiento
 230+ 9FF2
 231+ 9FF2              ; Iniciamos (Repetimos_movimiento).
 232+ 9FF2
 233+ 9FF2 DD 2A 11 8C      ld ix,(Puntero_mov)
 234+ 9FF6 DD 7E 02         ld a,(ix+2)
 235+ 9FF9 32 19 8C         ld (Repetimos_movimiento),a
 236+ 9FFC
 237+ 9FFC C9               ret
 238+ 9FFD
 239+ 9FFD              ; ---------- --------- --------- ---------- ----------
 240+ 9FFD              ;
 241+ 9FFD              ;   26/6/23
 242+ 9FFD              ;
 243+ 9FFD              ;   Inicia_Puntero_mov
 244+ 9FFD              ;
 245+ 9FFD              ;
 246+ 9FFD
 247+ 9FFD 2A 0F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 248+ A000 CD 68 91         call Extrae_address
 249+ A003 22 11 8C         ld (Puntero_mov),hl
 250+ A006 C9               ret
 251+ A007
 252+ A007              ; ---------- --------- --------- ---------- ----------
 253+ A007              ;
 254+ A007              ;   27/06/23
 255+ A007              ;
 256+ A007              ;   Aplica_movimiento.
 257+ A007
 258+ A007              Aplica_desplazamiento
 259+ A007
 260+ A007              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 261+ A007
 262+ A007 2A 11 8C         ld hl,(Puntero_mov)
 263+ A00A
 264+ A00A 7E               ld a,(hl)
 265+ A00B E6 F0            and $f0
 266+ A00D C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 267+ A00E
 268+ A00E CB 7E            bit 7,(hl)
 269+ A010 28 03            jr z,1F
 270+ A012 CD 25 9C         call Mov_up
 271+ A015
 272+ A015 2A 11 8C     1 ld hl,(Puntero_mov)
 273+ A018 CB 76            bit 6,(hl)
 274+ A01A 28 03            jr z,2F
 275+ A01C CD F1 9B         call Mov_down
 276+ A01F
 277+ A01F 2A 11 8C     2 ld hl,(Puntero_mov)
 278+ A022 CB 6E            bit 5,(hl)
 279+ A024 28 03            jr z,3F
 280+ A026 CD 5A 9D         call Mov_left
 281+ A029
 282+ A029 2A 11 8C     3 ld hl,(Puntero_mov)
 283+ A02C CB 66            bit 4,(hl)
 284+ A02E C8               ret z
 285+ A02F CD 63 9C         call Mov_right
 286+ A032
 287+ A032 C9               ret
 288+ A033
 289+ A033              ; ---------- --------- --------- ---------- ----------
 290+ A033              ;
 291+ A033              ;   26/06/23
 292+ A033              ;
 293+ A033              ;   Ajusta_velocidad_desplazamiento.
 294+ A033
 295+ A033              Ajusta_velocidad_desplazamiento
 296+ A033
 297+ A033              ; 1er byte de la cadena de movimiento.
 298+ A033              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 299+ A033
 300+ A033 CD 51 A0         call Extrae_nibble_alto
 301+ A036
 302+ A036 32 05 8C         ld (Vel_up),a
 303+ A039 79               ld a,c
 304+ A03A E6 0F            and $0f
 305+ A03C 32 06 8C         ld (Vel_down),a
 306+ A03F
 307+ A03F              ; Saltamos al 2º byte de la cadena de movimiento.
 308+ A03F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 309+ A03F
 310+ A03F 23               inc hl
 311+ A040 CD 51 A0         call Extrae_nibble_alto
 312+ A043
 313+ A043 32 03 8C         ld (Vel_left),a
 314+ A046 79               ld a,c
 315+ A047 E6 0F            and $0f
 316+ A049 32 04 8C         ld (Vel_right),a
 317+ A04C
 318+ A04C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 319+ A04C
 320+ A04C 23               inc hl
 321+ A04D 22 11 8C         ld (Puntero_mov),hl
 322+ A050 C9               ret
 323+ A051
 324+ A051 06 04        Extrae_nibble_alto ld b,4
 325+ A053 7E               ld a,(hl)
 326+ A054 4F               ld c,a
 327+ A055 E6 F0            and $f0
 328+ A057 CB 3F        1 srl a
 329+ A059 10 FC            djnz 1B
 330+ A05B C9               ret
 331+ A05C
 332+ A05C              ; ---------- --------- --------- ---------- ----------
 333+ A05C              ;
 334+ A05C              ;   5/7/23
 335+ A05C              ;
 336+ A05C              ;   Incrementa_Puntero_indice_mov
 337+ A05C
 338+ A05C              Incrementa_Puntero_indice_mov
 339+ A05C
 340+ A05C 21 15 8C         ld hl,Incrementa_puntero
 341+ A05F 34               inc (hl)
 342+ A060
 343+ A060 2A 0F 8C         ld hl,(Puntero_indice_mov)
 344+ A063 01 02 00         ld bc,2
 345+ A066 A7               and a
 346+ A067 09               add hl,bc
 347+ A068 22 0F 8C         ld (Puntero_indice_mov),hl
 348+ A06B
 349+ A06B 7E               ld a,(hl)
 350+ A06C A7               and a
 351+ A06D
 352+ A06D              ;! STOP. Fin del patrón de movimiento de la entidad.
 353+ A06D
 354+ A06D              ;    jr z,$
 355+ A06D
 356+ A06D              ;! Reinicia el Patrón de movimiento.
 357+ A06D
 358+ A06D CC 72 A0         call z,Inicializa_Puntero_indice_mov_2
 359+ A070
 360+ A070 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 361+ A071
 362+ A071 C9               ret
 363+ A072
 364+ A072              ; ---------- --------- --------- ---------- ----------
 365+ A072              ;
 366+ A072              ;   15/01/24
 367+ A072              ;
 368+ A072              ;   Inicializa_Puntero_indice_mov
 369+ A072
 370+ A072              Inicializa_Puntero_indice_mov_2
 371+ A072
 372+ A072              ; Existe etiqueta de bucle principal???
 373+ A072
 374+ A072 2A 13 8C         ld hl,(Puntero_indice_mov_bucle)
 375+ A075 24               inc h
 376+ A076 25               dec h
 377+ A077 28 05            jr z,2F
 378+ A079
 379+ A079 22 0F 8C         ld (Puntero_indice_mov),hl
 380+ A07C 18 14            jr 3F
 381+ A07E
 382+ A07E              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 383+ A07E
 384+ A07E 3A 15 8C     2 ld a,(Incrementa_puntero)
 385+ A081 47               ld b,a
 386+ A082
 387+ A082 2A 0F 8C         ld hl,(Puntero_indice_mov)
 388+ A085 2B           1 dec hl
 389+ A086 2B               dec hl
 390+ A087 10 FC            djnz 1B
 391+ A089 22 0F 8C         ld (Puntero_indice_mov),hl
 392+ A08C
 393+ A08C AF               xor a
 394+ A08D 32 15 8C         ld (Incrementa_puntero),a
 395+ A090 18 06            jr 4F
 396+ A092
 397+ A092 3A 16 8C     3 ld a,(Incrementa_puntero_backup)
 398+ A095 32 15 8C         ld (Incrementa_puntero),a
 399+ A098 C9           4 ret
 400+ A099
 401+ A099              ; ----------------------------------------------------------------------
 402+ A099              ;
 403+ A099              ;   24/11/24
 404+ A099              ;
 405+ A099              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 406+ A099
 407+ A099 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 408+ A09C CD F2 94         call Calcula_salto_en_BC
 409+ A09F 21 07 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 410+ A0A2 A7               and a
 411+ A0A3 ED 4A            adc hl,bc
 412+ A0A5 C9               ret
 413+ A0A6
 414+ A0A6              ; ----------------------------------------------------------------------
 415+ A0A6              ;
 416+ A0A6              ;   24/11/24
 417+ A0A6              ;
 418+ A0A6              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 419+ A0A6              ;
 420+ A0A6              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 421+ A0A6
 422+ A0A6 4E           Transfiere_datos_de_contadores ld c,(hl)
 423+ A0A7 23               inc hl
 424+ A0A8 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 425+ A0A9 DD 71 09         ld (ix+9),c
 426+ A0AC DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 427+ A0AF C9               ret
 428+ A0B0
# file closed: Movimiento.asm
2414  A0B0              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ A0B0              ; --------------------------------------------------------------------------------------
   2+ A0B0              ;
   3+ A0B0              ;   25/10/24
   4+ A0B0              ;
   5+ A0B0
   6+ A0B0              Pinta_disparos_Entidades
   7+ A0B0
   8+ A0B0 ED 73 2D 8C      ld (Stack),sp
   9+ A0B4 ED 7B 3F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ A0B8
  11+ A0B8 3E 02            ld a,2
  12+ A0BA 08               ex af,af
  13+ A0BB
  14+ A0BB 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ A0BD              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ A0BD              ;                                     _ No encontraría "0".
  17+ A0BD FD E1        4 pop iy
  18+ A0BF D1               pop de                          ; 1er .db IYL
  19+ A0C0              ;                                   ; 2º  .db IYH
  20+ A0C0              ;                                   ; 3er .db E.
  21+ A0C0              ;   Album vacío ???
  22+ A0C0
  23+ A0C0 FD 7D            ld a,iyl
  24+ A0C2 FD 84            add iyh
  25+ A0C4 83               add e
  26+ A0C5 28 1F            jr z,1F
  27+ A0C7
  28+ A0C7              ;   Imprime album, (contiene datos).
  29+ A0C7
  30+ A0C7 3B               dec sp
  31+ A0C8
  32+ A0C8 E1               pop hl                          ; Puntero de impresión en HL.
  33+ A0C9
  34+ A0C9              ; Imprime el 1er scanline del disparo.
  35+ A0C9
  36+ A0C9 FD 7D            ld a,iyl
  37+ A0CB AE               xor (hl)
  38+ A0CC 77               ld (hl),a
  39+ A0CD
  40+ A0CD 2C               inc l
  41+ A0CE
  42+ A0CE FD 7C            ld a,iyh
  43+ A0D0 AE               xor (hl)
  44+ A0D1 77               ld (hl),a
  45+ A0D2
  46+ A0D2 2C               inc l
  47+ A0D3
  48+ A0D3 7B               ld a,e
  49+ A0D4 AE               xor (hl)
  50+ A0D5 77               ld (hl),a
  51+ A0D6
  52+ A0D6              ; Imprime el 2º scanline del disparo.
  53+ A0D6
  54+ A0D6 E1               pop hl
  55+ A0D7
  56+ A0D7 FD 7D            ld a,iyl
  57+ A0D9 AE               xor (hl)
  58+ A0DA 77               ld (hl),a
  59+ A0DB
  60+ A0DB 2C               inc l
  61+ A0DC
  62+ A0DC FD 7C            ld a,iyh
  63+ A0DE AE               xor (hl)
  64+ A0DF 77               ld (hl),a
  65+ A0E0
  66+ A0E0 2C               inc l
  67+ A0E1
  68+ A0E1 7B               ld a,e
  69+ A0E2 AE               xor (hl)
  70+ A0E3 77               ld (hl),a
  71+ A0E4
  72+ A0E4 10 D7            djnz 4B
  73+ A0E6
  74+ A0E6 08           1 ex af,af
  75+ A0E7 3D               dec a
  76+ A0E8 20 05            jr nz,2F
  77+ A0EA
  78+ A0EA ED 7B 2D 8C      ld sp,(Stack)
  79+ A0EE C9               ret
  80+ A0EF
  81+ A0EF ED 7B 3D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ A0F3 08               ex af,af
  83+ A0F4 18 C5            jr 3B
  84+ A0F6
  85+ A0F6              ; --------------------------------------------------------------------------------------
  86+ A0F6              ;
  87+ A0F6              ;   2/12/24
  88+ A0F6              ;
  89+ A0F6
  90+ A0F6              Motor_de_disparos_entidades
  91+ A0F6
  92+ A0F6 3A 45 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ A0F9 FE 07            cp 7
  94+ A0FB C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ A0FC
  96+ A0FC 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ A0FE 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ A101
  99+ A101 CD 68 91     1 call Extrae_address
 100+ A104 1C               inc e
 101+ A105 1C               inc e
 102+ A106 ED 53 58 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ A10A
 104+ A10A               ; Caja vacía ???
 105+ A10A
 106+ A10A 2D               dec l
 107+ A10B 7E               ld a,(hl)
 108+ A10C A7               and a
 109+ A10D 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A10F
 111+ A10F              ; --- Trabajamos con caja:
 112+ A10F
 113+ A10F 2C               inc l
 114+ A110
 115+ A110              ; --- Existe posibilidad de impacto ???
 116+ A110
 117+ A110 3A 7E 8C         ld a,(Shield)
 118+ A113 A7               and a
 119+ A114 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A116
 121+ A116 CB 46            bit 0,(hl)
 122+ A118 C4 58 A1         call nz, Comprueba_impacto_con_Amadeus
 123+ A11B 20 37            jr nz,3F
 124+ A11D
 125+ A11D CD DF A1     6 call Rota_disparo_si_procede
 126+ A120
 127+ A120              ; ------------------------------------------------------------
 128+ A120
 129+ A120 2D               dec l
 130+ A121 2D               dec l
 131+ A122
 132+ A122 CD 68 91         call Extrae_address
 133+ A125
 134+ A125              ;   (Puntero_de_impresion) del disparo en HL
 135+ A125              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A125
 137+ A125 3A 57 8C         ld a,(Ctrl_5)
 138+ A128 CB 57            bit 2,a
 139+ A12A 28 09            jr z,4F
 140+ A12C
 141+ A12C CB 97            res 2,a
 142+ A12E 32 57 8C         ld (Ctrl_5),a
 143+ A131 2C               inc l
 144+ A132 2C               inc l
 145+ A133 18 0C            jr 5F
 146+ A135
 147+ A135 CB 5F        4 bit 3,a
 148+ A137 28 08            jr z,5F
 149+ A139
 150+ A139 CB 9F            res 3,a
 151+ A13B 32 57 8C         ld (Ctrl_5),a
 152+ A13E 2D               dec l
 153+ A13F 2D               dec l
 154+ A140 2D               dec l
 155+ A141
 156+ A141              ; ---------------------------------------------------------------------
 157+ A141
 158+ A141              ;! Velocidad del disparo de entidades.
 159+ A141
 160+ A141 CD AB 9B     5 call NextScan
 161+ A144 CD AB 9B         call NextScan
 162+ A147
 163+ A147              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A147
 165+ A147 CD BC A1         call Fin_de_disparo_de_entidad
 166+ A14A
 167+ A14A EB               ex de,hl
 168+ A14B
 169+ A14B 73               ld (hl),e
 170+ A14C 23               inc hl
 171+ A14D 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A14E
 173+ A14E 2A 58 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A151 18 02            jr 2F
 175+ A153
 176+ A153 C9               ret
 177+ A154
 178+ A154 EB           3 ex de,hl
 179+ A155 10 AA        2 djnz 1B
 180+ A157
 181+ A157 C9               ret
 182+ A158
 183+ A158              ; ------------- ------------- ------------
 184+ A158              ;
 185+ A158              ;   1/11/24
 186+ A158
 187+ A158              Comprueba_impacto_con_Amadeus
 188+ A158
 189+ A158              ;   El disparo se encuentra en zona de Amadeus.
 190+ A158              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A158
 192+ A158              ;   Modificamos registros, así que guardamos ...
 193+ A158
 194+ A158 C5               push bc
 195+ A159 E5               push hl
 196+ A15A D5               push de
 197+ A15B
 198+ A15B 2D               dec l
 199+ A15C 2D               dec l
 200+ A15D
 201+ A15D CD 68 91         call Extrae_address
 202+ A160
 203+ A160 3A AF 89         ld a,(CX_Amadeus)
 204+ A163 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A164
 206+ A164 7D               ld a,l
 207+ A165 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A167
 209+ A167 06 03            ld b,3
 210+ A169
 211+ A169 B9           1 cp c
 212+ A16A 28 15            jr z,Coincidencia
 213+ A16C 0C               inc c
 214+ A16D 10 FA            djnz 1B
 215+ A16F
 216+ A16F 0D               dec c
 217+ A170 0D               dec c
 218+ A171 0D               dec c
 219+ A172
 220+ A172 3C               inc a
 221+ A173 B9               cp c
 222+ A174 28 0B            jr z,Coincidencia
 223+ A176
 224+ A176 3C               inc a
 225+ A177 B9               cp c
 226+ A178 28 07            jr z,Coincidencia
 227+ A17A
 228+ A17A D1           2 pop de
 229+ A17B E1               pop hl
 230+ A17C C1               pop bc
 231+ A17D
 232+ A17D              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A17D
 234+ A17D CB 86            res 0,(hl)
 235+ A17F AF               xor a                       ; Z before RET.
 236+ A180 C9               ret
 237+ A181
 238+ A181              Coincidencia
 239+ A181
 240+ A181              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A181              ;   Existe posibilidad de impacto.
 242+ A181              ;   Vamos a averiguarlo ...
 243+ A181
 244+ A181 1D               dec e
 245+ A182 1D               dec e
 246+ A183 1D               dec e
 247+ A184
 248+ A184              ; DE en Puntero_objeto del disparo.
 249+ A184              ; HL en Puntero_de_impresión del disparo.
 250+ A184
 251+ A184              ; Comparador:
 252+ A184
 253+ A184 06 03            ld b,3
 254+ A186
 255+ A186 1A           3 ld a,(de)
 256+ A187 4F               ld c,a
 257+ A188 A6               and (hl)
 258+ A189 B9               cp c
 259+ A18A 20 06            jr nz,Amadeus_impactado
 260+ A18C
 261+ A18C 2C               inc l
 262+ A18D 1C               inc e
 263+ A18E
 264+ A18E 10 F6            djnz 3B
 265+ A190
 266+ A190 18 E8            jr 2B
 267+ A192
 268+ A192              Amadeus_impactado
 269+ A192
 270+ A192              ; Borramos disparo.
 271+ A192
 272+ A192              ;   Exclusion.
 273+ A192
 274+ A192 D1               pop de
 275+ A193 E1               pop hl
 276+ A194
 277+ A194 E5               push hl
 278+ A195 D5               push de
 279+ A196
 280+ A196 CD 4A A2         call Borra_6_bytes
 281+ A199
 282+ A199 21 45 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A19C 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A19D
 285+ A19D              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A19D
 287+ A19D 21 B2 89         ld hl,Impacto_Amadeus
 288+ A1A0 36 01            ld (hl),1
 289+ A1A2
 290+ A1A2              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A1A2              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A1A2
 293+ A1A2 3A B3 89         ld a,(p.imp.amadeus)
 294+ A1A5 FE DE            cp $de
 295+ A1A7 20 04            jr nz,1F
 296+ A1A9
 297+ A1A9 3D               dec a
 298+ A1AA 32 B3 89         ld (p.imp.amadeus),a
 299+ A1AD
 300+ A1AD              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A1AD
 302+ A1AD 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A1B0 21 B5 89         ld hl,Pamm_Amadeus
 304+ A1B3
 305+ A1B3 73               ld (hl),e
 306+ A1B4 23               inc hl
 307+ A1B5 72               ld (hl),d
 308+ A1B6
 309+ A1B6 D1               pop de
 310+ A1B7 E1               pop hl
 311+ A1B8 C1               pop bc
 312+ A1B9
 313+ A1B9 AF               xor a
 314+ A1BA 3C               inc a               ; NZ before RET.
 315+ A1BB C9               ret
 316+ A1BC
 317+ A1BC              ; ------------- ------------- ------------
 318+ A1BC              ;
 319+ A1BC              ;   31/10/24
 320+ A1BC
 321+ A1BC              Fin_de_disparo_de_entidad
 322+ A1BC
 323+ A1BC              ; Estamos en zona de Amadeus ??
 324+ A1BC
 325+ A1BC 7C               ld a,h
 326+ A1BD FE 54            cp $54
 327+ A1BF 38 0D            jr c,1F
 328+ A1C1
 329+ A1C1 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A1C2
 331+ A1C2 5D               ld e,l
 332+ A1C3 54               ld d,h
 333+ A1C4
 334+ A1C4 21 E0 57         ld hl,$57e0
 335+ A1C7 ED 52            sbc hl,de
 336+ A1C9
 337+ A1C9 38 6F            jr c,Elimina_disparo_entidad
 338+ A1CB
 339+ A1CB 6B               ld l,e
 340+ A1CC 62               ld h,d
 341+ A1CD
 342+ A1CD D1               pop de
 343+ A1CE
 344+ A1CE 7C           1 ld a,h
 345+ A1CF FE 50            cp $50
 346+ A1D1 D8               ret c
 347+ A1D2
 348+ A1D2 7D               ld a,l
 349+ A1D3 FE C0            cp $c0
 350+ A1D5 D8               ret c
 351+ A1D6
 352+ A1D6              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A1D6              ; Así podremos comprobar si hay colisión más adelante.
 354+ A1D6
 355+ A1D6 1C               inc e
 356+ A1D7 1C               inc e
 357+ A1D8
 358+ A1D8 EB               ex de,hl
 359+ A1D9 CB C6            set 0,(hl)
 360+ A1DB EB               ex de,hl
 361+ A1DC
 362+ A1DC 1D               dec e
 363+ A1DD 1D               dec e
 364+ A1DE
 365+ A1DE C9               ret
 366+ A1DF
 367+ A1DF              ; ----------------------------------------------------------
 368+ A1DF              ;
 369+ A1DF              ;   08/10/24
 370+ A1DF
 371+ A1DF              ;   Estructura de un disparo de entidades.
 372+ A1DF
 373+ A1DF              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A1DF              ; 	defw 0											; Puntero de impresión.
 375+ A1DF              ;	defw 0											; Control.
 376+ A1DF
 377+ A1DF              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A1DF              ;   _de la entidad en el momento de disparar.
 379+ A1DF
 380+ A1DF              ;   El byte alto muestra la siguiente información:
 381+ A1DF              ;
 382+ A1DF              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A1DF              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A1DF              ;
 385+ A1DF              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A1DF              ;
 387+ A1DF              ;                        10xx ..... Izquierda.
 388+ A1DF              ;                        01xx ..... Derecha.
 389+ A1DF              ;                        00xx ..... Recto.
 390+ A1DF
 391+ A1DF              Rota_disparo_si_procede
 392+ A1DF
 393+ A1DF              ;   Nos situamos en el byte alto de (Control).
 394+ A1DF
 395+ A1DF CB 76            bit 6,(hl)
 396+ A1E1 20 2D            jr nz,Rota_a_derecha
 397+ A1E3 CB 7E            bit 7,(hl)
 398+ A1E5 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A1E6
 400+ A1E6              Rota_a_izq
 401+ A1E6
 402+ A1E6 E5               push hl
 403+ A1E7
 404+ A1E7 7D               ld a,l
 405+ A1E8 D6 05            sub 5
 406+ A1EA 6F               ld l,a
 407+ A1EB
 408+ A1EB E5               push hl
 409+ A1EC FD E1            pop iy
 410+ A1EE
 411+ A1EE A7               and a
 412+ A1EF
 413+ A1EF FD CB 02 16      rl (iy+02)
 414+ A1F3 FD CB 01 16      rl (iy+01)
 415+ A1F7 FD CB 00 16      rl (iy+00)
 416+ A1FB
 417+ A1FB 30 3B            jr nc,Exit
 418+ A1FD
 419+ A1FD              ; Desplazamiento completo hasta Carry.
 420+ A1FD              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A1FD
 422+ A1FD FD 36 02 03      ld (iy+02),$03
 423+ A201 FD 36 01 00      ld (iy+01),$00
 424+ A205 FD 36 00 00      ld (iy+00),$00
 425+ A209
 426+ A209 21 57 8C         ld hl,Ctrl_5
 427+ A20C CB DE            set 3,(hl)
 428+ A20E
 429+ A20E 18 28            jr Exit
 430+ A210
 431+ A210              Rota_a_derecha
 432+ A210
 433+ A210 E5               push hl
 434+ A211
 435+ A211 7D               ld a,l
 436+ A212 D6 05            sub 5
 437+ A214 6F               ld l,a
 438+ A215
 439+ A215 E5               push hl
 440+ A216 FD E1            pop iy
 441+ A218
 442+ A218 A7               and a
 443+ A219
 444+ A219 FD CB 00 1E      rr (iy+00)
 445+ A21D FD CB 01 1E      rr (iy+01)
 446+ A221 FD CB 02 1E      rr (iy+02)
 447+ A225
 448+ A225 30 11            jr nc,Exit
 449+ A227
 450+ A227              ; Desplazamiento completo hasta Carry.
 451+ A227              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A227
 453+ A227 FD 36 00 01      ld (iy+00),$01
 454+ A22B FD 36 01 80      ld (iy+01),$80
 455+ A22F FD 36 02 00      ld (iy+02),$00
 456+ A233
 457+ A233 21 57 8C         ld hl,Ctrl_5
 458+ A236 CB D6            set 2,(hl)
 459+ A238
 460+ A238 E1           Exit pop hl
 461+ A239 C9               ret
 462+ A23A
 463+ A23A              ; ------------ ----------- ------------
 464+ A23A              ;
 465+ A23A              ;   25/9/24
 466+ A23A
 467+ A23A              Elimina_disparo_entidad
 468+ A23A
 469+ A23A 21 45 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A23D 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A23E
 472+ A23E E1               pop hl
 473+ A23F E5               push hl
 474+ A240
 475+ A240 2C               inc l
 476+ A241 2C               inc l
 477+ A242
 478+ A242 CD 4A A2         call Borra_6_bytes
 479+ A245
 480+ A245 D1               pop de
 481+ A246
 482+ A246 21 00 00         ld hl,0
 483+ A249
 484+ A249 C9               ret
 485+ A24A
 486+ A24A              ; ----- ----- ----- ----- -----
 487+ A24A
 488+ A24A              Borra_6_bytes
 489+ A24A
 490+ A24A 16 06            ld d,6                                                    ; Contador
 491+ A24C AF               xor a                                                     ; Borrador
 492+ A24D 77           1 ld (hl),a
 493+ A24E 2D               dec l
 494+ A24F 15               dec d
 495+ A250 20 FB            jr nz,1B
 496+ A252
 497+ A252 C9               ret
 498+ A253
 499+ A253              ; --------------------------------------------------------------------------------------
 500+ A253              ;
 501+ A253              ;   12/10/24
 502+ A253              ;
 503+ A253
 504+ A253              Genera_datos_de_impresion_disparos_Entidades
 505+ A253
 506+ A253 3E 07            ld a,7
 507+ A255 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A256
 509+ A256              ; ---------------
 510+ A256
 511+ A256              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A256
 513+ A256 21 20 89          ld hl,Indice_de_disparos_entidades
 514+ A259
 515+ A259 CD 68 91     1 call Extrae_address
 516+ A25C
 517+ A25C 13               inc de
 518+ A25D 13               inc de
 519+ A25E
 520+ A25E ED 53 58 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A262
 522+ A262 2D               dec l
 523+ A263 7E               ld a,(hl)
 524+ A264 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A265 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A267
 527+ A267              ; ----- ----- ----- -----
 528+ A267
 529+ A267 2D               dec l
 530+ A268 CD 68 91         call Extrae_address
 531+ A26B E5               push hl
 532+ A26C
 533+ A26C 1D               dec e
 534+ A26D
 535+ A26D EB               ex de,hl
 536+ A26E
 537+ A26E 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A26F 2D               dec l
 539+ A270 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A271 2D               dec l
 541+ A272 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A273
 543+ A273 E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A274
 545+ A274              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A274
 547+ A274 FD 2A 41 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A278 FD 73 00         ld (iy+0),e
 549+ A27B FD 70 01         ld (iy+1),b
 550+ A27E FD 71 02         ld (iy+2),c
 551+ A281
 552+ A281 FD 75 03         ld (iy+3),l
 553+ A284 FD 74 04         ld (iy+4),h
 554+ A287
 555+ A287 CD AB 9B         call NextScan
 556+ A28A
 557+ A28A FD 75 05         ld (iy+5),l
 558+ A28D FD 74 06         ld (iy+6),h
 559+ A290
 560+ A290 FD E5            push iy
 561+ A292 E1               pop hl
 562+ A293
 563+ A293 3E 07            ld a,7
 564+ A295 85               add l
 565+ A296 6F               ld l,a
 566+ A297
 567+ A297 22 41 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A29A
 569+ A29A              ; ----- ----- ----- -----
 570+ A29A
 571+ A29A              Situa_en_siguiente_caja
 572+ A29A
 573+ A29A 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A29B 3D               dec a
 575+ A29C C8               ret z
 576+ A29D
 577+ A29D 08               ex af,af
 578+ A29E 2A 58 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A2A1 18 B6            jr 1B
 580+ A2A3
 581+ A2A3              ; --------------------------------------------------------------------------------------
 582+ A2A3              ;
 583+ A2A3              ;   12/10/24
 584+ A2A3              ;
 585+ A2A3
 586+ A2A3              Genera_disparo_de_entidad_maldosa
 587+ A2A3
 588+ A2A3              ;   Estructura de un disparo de entidades.
 589+ A2A3
 590+ A2A3              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A2A3              ; 	defw 0											; Puntero de impresión.
 592+ A2A3              ;	defw 0											; Control.
 593+ A2A3
 594+ A2A3              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A2A3              ;   _de la entidad en el momento de disparar.
 596+ A2A3
 597+ A2A3              ;   El byte de control muestra la siguiente información:
 598+ A2A3
 599+ A2A3              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A2A3              ;
 601+ A2A3              ;                        10xx ..... Izquierda.
 602+ A2A3              ;                        01xx ..... Derecha.
 603+ A2A3              ;                        00xx ..... Recto.
 604+ A2A3
 605+ A2A3              ;*  Exclusiones.
 606+ A2A3
 607+ A2A3              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A2A3              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A2A3
 610+ A2A3 3A 45 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A2A6 A7               and a
 612+ A2A7 C8               ret z
 613+ A2A8
 614+ A2A8 3A E0 8B         ld a,(Coordenada_y)
 615+ A2AB A7               and a
 616+ A2AC C8               ret z
 617+ A2AD
 618+ A2AD 3D               dec a
 619+ A2AE C8               ret z
 620+ A2AF
 621+ A2AF FE 10            cp 16
 622+ A2B1 D0               ret nc
 623+ A2B2
 624+ A2B2              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A2B2              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A2B2              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A2B2
 628+ A2B2 21 47 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A2B5 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A2B6
 631+ A2B6              ;   Decrementa el numero de disparos de entidades.
 632+ A2B6
 633+ A2B6 21 45 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A2B9 35               dec (hl)
 635+ A2BA
 636+ A2BA 21 20 89         ld hl,Indice_de_disparos_entidades
 637+ A2BD
 638+ A2BD CD 68 91     1 call Extrae_address
 639+ A2C0
 640+ A2C0 13               inc de
 641+ A2C1 13               inc de
 642+ A2C2
 643+ A2C2 ED 53 58 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A2C6
 645+ A2C6              ;   Comprobamos si la caja está vacía.
 646+ A2C6
 647+ A2C6 2D               dec l
 648+ A2C7 7E               ld a,(hl)
 649+ A2C8 A7               and a
 650+ A2C9 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A2CB 2C               inc l
 652+ A2CC
 653+ A2CC              ;   Caja vacía, vamos a generar un disparo.
 654+ A2CC              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A2CC
 656+ A2CC CD ED A2         call Genera_byte_inclinacion
 657+ A2CF
 658+ A2CF 7E               ld a,(hl)
 659+ A2D0 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A2D1
 661+ A2D1 2D               dec l
 662+ A2D2
 663+ A2D2 CD 09 A3         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A2D5
 665+ A2D5 70               ld (hl),b
 666+ A2D6 2D               dec l
 667+ A2D7 71               ld (hl),c
 668+ A2D8
 669+ A2D8 2D               dec l
 670+ A2D9
 671+ A2D9              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A2D9
 673+ A2D9 FD 7E 02         ld a,(iy+02)
 674+ A2DC 77               ld (hl),a
 675+ A2DD 2D               dec l
 676+ A2DE
 677+ A2DE FD 7E 01         ld a,(iy+01)
 678+ A2E1 77               ld (hl),a
 679+ A2E2 2D               dec l
 680+ A2E3
 681+ A2E3 FD 7E 00         ld a,(iy+00)
 682+ A2E6 77               ld (hl),a
 683+ A2E7
 684+ A2E7 C9               ret
 685+ A2E8
 686+ A2E8              ;   --- --- ---
 687+ A2E8
 688+ A2E8              Situa_en_siguiente_disparo
 689+ A2E8
 690+ A2E8 2A 58 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A2EB 18 D0            jr 1B
 692+ A2ED
 693+ A2ED              ; --------------------------------------------------------------------------------------
 694+ A2ED              ;
 695+ A2ED              ;   09/10/24
 696+ A2ED              ;
 697+ A2ED
 698+ A2ED              Genera_byte_inclinacion
 699+ A2ED
 700+ A2ED              ; Determina tendencia del disparo.
 701+ A2ED
 702+ A2ED 3A AF 89         ld a,(CX_Amadeus)
 703+ A2F0 47               ld b,a
 704+ A2F1 3A DF 8B         ld a,(Coordenada_X)
 705+ A2F4 90               sub b
 706+ A2F5 38 07            jr c,Disparo_a_derecha
 707+ A2F7
 708+ A2F7 FE 06        Disparo_a_izquierda cp 6
 709+ A2F9
 710+ A2F9 D8               ret c
 711+ A2FA C8               ret z
 712+ A2FB
 713+ A2FB CB FE            set 7,(hl)
 714+ A2FD C9               ret
 715+ A2FE
 716+ A2FE 47           Disparo_a_derecha ld b,a
 717+ A2FF 3E FF            ld a,$ff
 718+ A301 90               sub b
 719+ A302
 720+ A302 FE 05            cp 5
 721+ A304
 722+ A304 D8               ret c
 723+ A305 C8               ret z
 724+ A306
 725+ A306 CB F6            set 6,(hl)
 726+ A308 C9               ret
 727+ A309
 728+ A309              ; --------------------------------------------------------------------------------------
 729+ A309              ;
 730+ A309              ;   09/10/24
 731+ A309              ;
 732+ A309
 733+ A309              Modifica_puntero_de_impresion
 734+ A309
 735+ A309              ;   Puntero de impresión del disparo en BC.
 736+ A309
 737+ A309 E5               push hl
 738+ A30A
 739+ A30A 2A 5A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A30D CD AB 9B         call NextScan
 741+ A310
 742+ A310 4D               ld c,l
 743+ A311 44               ld b,h
 744+ A312
 745+ A312 E1               pop hl
 746+ A313
 747+ A313 08               ex af,af
 748+ A314 CB 77            bit 6,a
 749+ A316 28 06            jr z,1F
 750+ A318
 751+ A318 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A31C 0C               inc c
 753+ A31D C9               ret
 754+ A31E
 755+ A31E CB 7F        1 bit 7,a
 756+ A320 28 F6            jr z,2B
 757+ A322
 758+ A322 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A326 0D               dec c
 760+ A327
 761+ A327 C9               ret
 762+ A328
 763+ A328              ; --------------------------------------------------------------------------------------
 764+ A328              ;
 765+ A328              ;   28/11/24
 766+ A328              ;
 767+ A328
 768+ A328              Compara_con_coordenadas_de_disparo
 769+ A328
 770+ A328 DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A32B 47               ld b,a
 772+ A32C 3A 5F 8C         ld a,(Coordenadas_disparo_certero)
 773+ A32F 90               sub b
 774+ A330
 775+ A330              ; A = "0" ok
 776+ A330              ; A = "1" ok
 777+ A330
 778+ A330 28 08            jr z,Comprueba_coordenada_X
 779+ A332 3D               dec a
 780+ A333 28 05            jr z,Comprueba_coordenada_X
 781+ A335
 782+ A335              ; A = "$ff" ok
 783+ A335
 784+ A335 FE FE            cp $fe
 785+ A337 28 01            jr z,Comprueba_coordenada_X
 786+ A339
 787+ A339 C9               ret
 788+ A33A
 789+ A33A              Comprueba_coordenada_X
 790+ A33A
 791+ A33A DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A33D 47               ld b,a
 793+ A33E 21 60 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A341 7E               ld a,(hl)
 795+ A342 90               sub b
 796+ A343
 797+ A343              ; A = "0" ok
 798+ A343              ; A = "1" ok
 799+ A343
 800+ A343 28 09            jr z,Activa_Impacto_en_entidad
 801+ A345 3D               dec a
 802+ A346 28 06            jr z,Activa_Impacto_en_entidad
 803+ A348
 804+ A348              ; A = "2" ok
 805+ A348
 806+ A348 3D               dec a
 807+ A349 28 03            jr z,Activa_Impacto_en_entidad
 808+ A34B
 809+ A34B              ; A = "$ff"
 810+ A34B
 811+ A34B FE FD            cp $fd
 812+ A34D C0               ret nz
 813+ A34E
 814+ A34E              Activa_Impacto_en_entidad
 815+ A34E
 816+ A34E              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A34E
 818+ A34E 3E 02            ld a,2
 819+ A350 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A353
 821+ A353              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A353
 823+ A353 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A356
 825+ A356 DD 73 07         ld (ix+7),e
 826+ A359 DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A35C
 828+ A35C              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A35C
 830+ A35C 21 5C 8C         ld hl,Impacto2
 831+ A35F CB 9E            res 3,(hl)
 832+ A361
 833+ A361 C9               ret
 834+ A362
 835+ A362              ; --------------------------------------------------------------------------------------
 836+ A362              ;
 837+ A362              ;   13/10/24
 838+ A362              ;
 839+ A362
 840+ A362              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A362
 842+ A362              Limpia_album_de_pintado_disparos_Amadeus
 843+ A362
 844+ A362 2A 39 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A365 06 06            ld b,6
 846+ A367 AF               xor a
 847+ A368 77           1 ld (hl),a
 848+ A369 2C               inc l
 849+ A36A 10 FC            djnz 1B
 850+ A36C
 851+ A36C C9               ret
 852+ A36D
 853+ A36D              ; --------------------------------------------------------------------------------------
 854+ A36D              ;
 855+ A36D              ;   29/09/24
 856+ A36D              ;
 857+ A36D
 858+ A36D              Calcula_bytes_pintado_disparos
 859+ A36D
 860+ A36D 2A 3D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A370 45               ld b,l
 862+ A371 2A 41 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A374 7D               ld a,l
 864+ A375
 865+ A375 90               sub b
 866+ A376 32 43 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A379
 868+ A379 C9               ret
 869+ A37A
 870+ A37A              ; --------------------------------------------------------------------------------------
 871+ A37A              ;
 872+ A37A              ;   26/10/24
 873+ A37A              ;
 874+ A37A              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A37A              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A37A              ;   _disparos que el álbum del FRAME actual).
 877+ A37A
 878+ A37A              Limpia_album_de_pintado_disparos_entidades
 879+ A37A
 880+ A37A 21 44 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A37D 7E               ld a,(hl)
 882+ A37E 2D               dec l
 883+ A37F 46               ld b,(hl)
 884+ A380 90               sub b
 885+ A381
 886+ A381 D8               ret c
 887+ A382 C8               ret z
 888+ A383
 889+ A383 F5               push af
 890+ A384 80               add b
 891+ A385 77               ld (hl),a
 892+ A386 F1               pop af
 893+ A387
 894+ A387              ; Clean.
 895+ A387
 896+ A387 47           2 ld b,a
 897+ A388 AF               xor a
 898+ A389 2A 41 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A38C 77           1 ld (hl),a
 900+ A38D 23               inc hl
 901+ A38E 10 FC            djnz 1B
 902+ A390
 903+ A390 C9               ret
 904+ A391
 905+ A391              ; --------------------------------------------------------------------------------------
 906+ A391              ;
 907+ A391              ;   29/09/24
 908+ A391              ;
 909+ A391
 910+ A391              Motor_Disparos_Amadeus
 911+ A391
 912+ A391 21 1D 89         ld hl,Disparo_Amad+1
 913+ A394
 914+ A394 34               inc (hl)
 915+ A395 35               dec (hl)
 916+ A396
 917+ A396 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A397
 919+ A397              ;   Esta caja contiene un disparo.
 920+ A397
 921+ A397 CD 9E A3         call Consulta_Impacto
 922+ A39A CC B7 A3         call z,Mueve_disparo_Amadeus
 923+ A39D
 924+ A39D C9               ret
 925+ A39E
 926+ A39E              ; ----------------------
 927+ A39E              ;
 928+ A39E              ;
 929+ A39E              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A39E              ;
 931+ A39E              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A39E
 933+ A39E
 934+ A39E              Consulta_Impacto
 935+ A39E
 936+ A39E              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A39E              ;   _sea lo más coherente posible.
 938+ A39E
 939+ A39E E5               push hl
 940+ A39F 2B               dec hl
 941+ A3A0 CD 93 A4         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A3A3 E1               pop hl
 943+ A3A4 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A3A5
 945+ A3A5 C8               ret z
 946+ A3A6
 947+ A3A6 3A 5C 8C         ld a,(Impacto2)
 948+ A3A9 CB DF            set 3,a
 949+ A3AB 32 5C 8C         ld (Impacto2),a
 950+ A3AE
 951+ A3AE E5               push hl
 952+ A3AF CD 80 A4         call Genera_coordenadas_de_disparo_Amadeus
 953+ A3B2 E1               pop hl
 954+ A3B3 CD D0 A3         call Elimina_disparo_Amadeus
 955+ A3B6
 956+ A3B6 C9               ret
 957+ A3B7
 958+ A3B7              ; ----------------------
 959+ A3B7              ;
 960+ A3B7              ;
 961+ A3B7              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A3B7
 963+ A3B7              Mueve_disparo_Amadeus
 964+ A3B7
 965+ A3B7 CD 68 91         call Extrae_address
 966+ A3BA
 967+ A3BA CD BA 9B         call PreviousScan
 968+ A3BD CD BA 9B         call PreviousScan
 969+ A3C0 CD BA 9B         call PreviousScan
 970+ A3C3 CD BA 9B         call PreviousScan
 971+ A3C6
 972+ A3C6              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A3C6
 974+ A3C6 7C               ld a,h
 975+ A3C7 D6 40            sub $40
 976+ A3C9 EB               ex de,hl
 977+ A3CA 38 04            jr c,Elimina_disparo_Amadeus
 978+ A3CC
 979+ A3CC               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A3CC
 981+ A3CC 73               ld (hl),e
 982+ A3CD 23               inc hl
 983+ A3CE 72               ld (hl),d
 984+ A3CF
 985+ A3CF C9               ret
 986+ A3D0
 987+ A3D0              ; ----------------------
 988+ A3D0              ;
 989+ A3D0              ;   29/9/24
 990+ A3D0
 991+ A3D0              Elimina_disparo_Amadeus
 992+ A3D0
 993+ A3D0              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A3D0              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A3D0
 996+ A3D0              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A3D0              ;   	defw 0											; Puntero de impresión.
 998+ A3D0
 999+ A3D0 2B               dec hl
1000+ A3D1 2B               dec hl
1001+ A3D2
1002+ A3D2 AF               xor a
1003+ A3D3 77               ld (hl),a
1004+ A3D4 23               inc hl
1005+ A3D5 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A3D6
1007+ A3D6 23               inc hl
1008+ A3D7 77               ld (hl),a
1009+ A3D8 23               inc hl
1010+ A3D9 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A3DA
1012+ A3DA 3E 01            ld a,1
1013+ A3DC 32 46 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A3DF
1015+ A3DF CD 62 A3         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A3E2
1017+ A3E2 AF               xor a
1018+ A3E3 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A3E4
1020+ A3E4 C9               ret
1021+ A3E5
1022+ A3E5              ; --------------------------------------------------------------------------------------
1023+ A3E5              ;
1024+ A3E5              ;   13/10/24
1025+ A3E5              ;
1026+ A3E5
1027+ A3E5              Pinta_disparos_Amadeus
1028+ A3E5
1029+ A3E5 06 02            ld b,2
1030+ A3E7 ED 73 2D 8C      ld (Stack),sp
1031+ A3EB ED 7B 3B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A3EF D1           3 pop de
1033+ A3F0 14               inc d
1034+ A3F1 15               dec d
1035+ A3F2 28 1C            jr z,1F
1036+ A3F4 E1               pop hl
1037+ A3F5
1038+ A3F5              Imprime_scanlines_en_pantalla
1039+ A3F5
1040+ A3F5              ; 1er scanline
1041+ A3F5
1042+ A3F5 1A               ld a,(de)
1043+ A3F6 AE               xor (hl)
1044+ A3F7 77               ld (hl),a
1045+ A3F8
1046+ A3F8 1C               inc e
1047+ A3F9 2C               inc l
1048+ A3FA
1049+ A3FA 1A               ld a,(de)
1050+ A3FB AE               xor (hl)
1051+ A3FC 77               ld (hl),a
1052+ A3FD
1053+ A3FD 1D               dec e
1054+ A3FE E1               pop hl
1055+ A3FF
1056+ A3FF              ; 2º scanline
1057+ A3FF
1058+ A3FF 1A               ld a,(de)
1059+ A400 AE               xor (hl)
1060+ A401 77               ld (hl),a
1061+ A402
1062+ A402 1C               inc e
1063+ A403 2C               inc l
1064+ A404
1065+ A404 1A               ld a,(de)
1066+ A405 AE               xor (hl)
1067+ A406 77               ld (hl),a
1068+ A407
1069+ A407 1D               dec e
1070+ A408
1071+ A408 18 06            jr 1F
1072+ A40A
1073+ A40A ED 7B 39 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A40E 18 DF            jr 3B
1075+ A410 10 F8        1 djnz 2B
1076+ A412 ED 7B 2D 8C      ld sp,(Stack)
1077+ A416 C9               ret
1078+ A417
1079+ A417              ; --------------------------------------------------------------------------------------
1080+ A417              ;
1081+ A417              ;   13/10/24
1082+ A417              ;
1083+ A417              ;   Modifica: HL,BC y DE.
1084+ A417
1085+ A417
1086+ A417              Genera_datos_de_impresion_disparos_Amadeus
1087+ A417
1088+ A417 ED 73 2D 8C      ld (Stack),sp
1089+ A41B 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A41E D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A41F
1092+ A41F 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A420 15               dec d
1094+ A421
1095+ A421 28 0E            jr z,Salida
1096+ A423
1097+ A423              Genera_scanlines_de_disparo_Amadeus
1098+ A423
1099+ A423 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A424              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A424 ED 7B 39 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A428
1103+ A428 C1               pop bc
1104+ A429 C1               pop bc
1105+ A42A C1               pop bc
1106+ A42B
1107+ A42B E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A42C CD BA 9B         call PreviousScan
1109+ A42F E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A430 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A431
1112+ A431              Salida
1113+ A431
1114+ A431 ED 7B 2D 8C      ld sp,(Stack)
1115+ A435
1116+ A435 C9               ret
1117+ A436
1118+ A436              ; --------------------------------------------------------------------------------------
1119+ A436              ;
1120+ A436              ;   12/09/24
1121+ A436              ;
1122+ A436
1123+ A436              Genera_disparo_Amadeus
1124+ A436
1125+ A436              ;*  Exclusiones.
1126+ A436
1127+ A436 3A 46 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A439 A7               and a
1129+ A43A C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A43B
1131+ A43B 3D               dec a
1132+ A43C 32 46 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A43F
1134+ A43F              Define_puntero_objeto_disparo
1135+ A43F
1136+ A43F              ;   Inicializamos contador.
1137+ A43F
1138+ A43F 06 00            ld b,0
1139+ A441
1140+ A441 2A B3 89         ld hl,(p.imp.amadeus)
1141+ A444 2C               inc l
1142+ A445
1143+ A445 3E 80            ld a,$80
1144+ A447 BE               cp (hl)
1145+ A448 28 0D            jr z,1F
1146+ A44A
1147+ A44A 04               inc b
1148+ A44B
1149+ A44B 3E 60            ld a,$60
1150+ A44D BE               cp (hl)
1151+ A44E 28 07            jr z,1F
1152+ A450
1153+ A450
1154+ A450 04               inc b
1155+ A451
1156+ A451 3E 18            ld a,$18
1157+ A453 BE               cp (hl)
1158+ A454 28 01            jr z,1F
1159+ A456
1160+ A456 04               inc b
1161+ A457
1162+ A457              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A457
1164+ A457              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A457
1166+ A457 CD BA 9B     1 call PreviousScan
1167+ A45A
1168+ A45A 78               ld a,b
1169+ A45B CB 3F            srl a
1170+ A45D 28 03            jr z,4F
1171+ A45F
1172+ A45F              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A45F E5               push hl
1174+ A460 18 02            jr 5F
1175+ A462 2D           4 dec l
1176+ A463 E5               push hl
1177+ A464              ; ---
1178+ A464
1179+ A464              ;   Calcula el Puntero_objeto del disparo.
1180+ A464
1181+ A464 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A467 04               inc b
1183+ A468 05               dec b
1184+ A469 28 04            jr z,2F
1185+ A46B
1186+ A46B              ;   Nos desplazamos por el índice de disparos.
1187+ A46B
1188+ A46B 2C           3 inc l
1189+ A46C 2C               inc l
1190+ A46D 10 FC            djnz 3B
1191+ A46F
1192+ A46F              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A46F CD 68 91     2 call Extrae_address
1194+ A472 E5               push hl
1195+ A473              ; ---
1196+ A473
1197+ A473              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A473              ; HL en el 1er .db de la caja.
1199+ A473
1200+ A473 21 1C 89         ld hl,Disparo_Amad
1201+ A476
1202+ A476 06 02            ld b,2
1203+ A478
1204+ A478 D1           6 pop de
1205+ A479 73               ld (hl),e
1206+ A47A 23               inc hl
1207+ A47B 72               ld (hl),d
1208+ A47C 23               inc hl
1209+ A47D
1210+ A47D 10 F9            djnz 6B
1211+ A47F
1212+ A47F C9               ret
1213+ A480
1214+ A480              Genera_coordenadas_de_disparo_Amadeus
1215+ A480
1216+ A480              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A480              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A480              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A480
1220+ A480 CD 68 91         call Extrae_address
1221+ A483 CD 76 95         call Genera_coordenadas
1222+ A486
1223+ A486 3D               dec a
1224+ A487
1225+ A487 21 5F 8C         ld hl,Coordenadas_disparo_certero
1226+ A48A 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A48B 23               inc hl
1228+ A48C 3A DF 8B         ld a,(Coordenada_X)
1229+ A48F 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A490
1231+ A490 AF               xor a
1232+ A491 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A492
1234+ A492 C9               ret
1235+ A493
1236+ A493              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A493              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A493              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A493
1240+ A493              ; ----------------------------------------------
1241+ A493              ;
1242+ A493              ;   27/08/24
1243+ A493              ;
1244+ A493              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A493              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A493
1247+ A493              Detecta_impacto_en_disparo_de_Amadeus
1248+ A493
1249+ A493              Extraccion_de_datos
1250+ A493
1251+ A493 13               inc de
1252+ A494 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A495
1254+ A495 5E               ld e,(hl)
1255+ A496 23               inc hl
1256+ A497 56               ld d,(hl)
1257+ A498
1258+ A498 23               inc hl
1259+ A499
1260+ A499 4E               ld c,(hl)
1261+ A49A 23               inc hl
1262+ A49B 46               ld b,(hl)
1263+ A49C
1264+ A49C C5               push bc
1265+ A49D E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A49E
1267+ A49E              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A49E
1269+ A49E CD BA 9B         call PreviousScan
1270+ A4A1 CD BA 9B         call PreviousScan
1271+ A4A4
1272+ A4A4              Detecta_impacto_
1273+ A4A4
1274+ A4A4 1A               ld a,(de)
1275+ A4A5 A6               and (hl)
1276+ A4A6 C0               ret nz
1277+ A4A7
1278+ A4A7 13               inc de
1279+ A4A8 23               inc hl
1280+ A4A9
1281+ A4A9 1A               ld a,(de)
1282+ A4AA A6               and (hl)
1283+ A4AB C9               ret
1284+ A4AC
1285+ A4AC              ; -------------------------------------------------------------------------------------------------------------
1286+ A4AC              ;
1287+ A4AC              ;   25/11//24
1288+ A4AC              ;
1289+ A4AC              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A4AC              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A4AC              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A4AC              ;
1293+ A4AC              ;   MODIFICA: HL,DE,BC y A.
1294+ A4AC              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A4AC              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A4AC
1297+ A4AC              Colision_Entidad_Amadeus
1298+ A4AC
1299+ A4AC              ; Posible contacto de entidad con Amadeus. ?????
1300+ A4AC
1301+ A4AC              ; Exclusiones:
1302+ A4AC
1303+ A4AC 3A 7E 8C         ld a,(Shield)
1304+ A4AF A7               and a
1305+ A4B0 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A4B1
1307+ A4B1 21 55 8C         ld hl,Ctrl_3
1308+ A4B4 CB 76            bit 6,(hl)
1309+ A4B6 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A4B7
1311+ A4B7 21 5C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A4BA CB 56            bit 2,(hl)
1313+ A4BC C0               ret nz
1314+ A4BD
1315+ A4BD DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A4C0 FE 14        	cp $14
1317+ A4C2 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A4C3
1319+ A4C3 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A4C6 A7               and a
1321+ A4C7 C0               ret nz
1322+ A4C8
1323+ A4C8              Genera_coordenadas_X
1324+ A4C8
1325+ A4C8              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A4C8              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A4C8
1328+ A4C8              ;   Limpiamos almacenes.
1329+ A4C8
1330+ A4C8              ;    call Limpia_Coordenadas_X
1331+ A4C8
1332+ A4C8              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A4C8
1334+ A4C8 21 61 8C         ld hl,Coordenadas_X_Entidad
1335+ A4CB DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A4CE CD F4 A4         call Guarda_coordenadas_X
1337+ A4D1
1338+ A4D1              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A4D1
1340+ A4D1 3A AF 89         ld a,(CX_Amadeus)
1341+ A4D4 CD F4 A4         call Guarda_coordenadas_X
1342+ A4D7
1343+ A4D7 DD E5            push ix
1344+ A4D9 CD 08 A5         call Compara_coordenadas_X
1345+ A4DC DD E1            pop ix
1346+ A4DE
1347+ A4DE C0               ret nz
1348+ A4DF
1349+ A4DF 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A4E1 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A4E4
1352+ A4E4 DD 7D            ld a,ixl
1353+ A4E6 C6 04            add 4
1354+ A4E8 DD 6F            ld ixl,a
1355+ A4EA
1356+ A4EA DD 22 5D 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A4EE
1358+ A4EE 21 5C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A4F1 CB D6            set 2,(hl)
1360+ A4F3
1361+ A4F3 C9               ret
1362+ A4F4
1363+ A4F4               ; ----- ----- ----- ----- -----
1364+ A4F4
1365+ A4F4 77           Guarda_coordenadas_X ld (hl),a
1366+ A4F5 3C               inc a
1367+ A4F6 2C               inc l
1368+ A4F7 77               ld (hl),a
1369+ A4F8 3C               inc a
1370+ A4F9 2C               inc l
1371+ A4FA 77               ld (hl),a
1372+ A4FB 2C               inc l
1373+ A4FC C9               ret
1374+ A4FD
1375+ A4FD AF           Limpia_Coordenadas_X xor a
1376+ A4FE 06 06            ld b,6
1377+ A500 21 64 8C         ld hl,Coordenadas_X_Amadeus
1378+ A503 77           1 ld (hl),a
1379+ A504 23               inc hl
1380+ A505 10 FC            djnz 1B
1381+ A507 C9               ret
1382+ A508
1383+ A508              ; ----- ----- ----- ----- -----
1384+ A508
1385+ A508              Compara_coordenadas_X
1386+ A508
1387+ A508 DD 21 61 8C      ld ix,Coordenadas_X_Entidad
1388+ A50C DD 7E 00         ld a,(ix+0)
1389+ A50F CD 1D A5         call Comparando
1390+ A512 C8               ret z
1391+ A513
1392+ A513 3C               inc a
1393+ A514 CD 2C A5         call Comparando_1
1394+ A517 C8               ret z
1395+ A518
1396+ A518 3C               inc a
1397+ A519 CD 2C A5         call Comparando_1
1398+ A51C C9               ret
1399+ A51D
1400+ A51D              ; ----- ----- ----- ----- -----
1401+ A51D              ;
1402+ A51D              ;   4/12/23
1403+ A51D              ;
1404+ A51D              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A51D
1406+ A51D              Comparando
1407+ A51D
1408+ A51D DD 2C            inc ixl
1409+ A51F DD 2C            inc ixl
1410+ A521 DD 2C            inc ixl
1411+ A523
1412+ A523 DD 46 00         ld b,(ix+0)
1413+ A526 DD 4E 01         ld c,(ix+1)
1414+ A529 DD 56 02         ld d,(ix+2)
1415+ A52C
1416+ A52C B8           Comparando_1 cp b
1417+ A52D C8               ret z
1418+ A52E B9               cp c
1419+ A52F C8               ret z
1420+ A530 BA               cp d
1421+ A531 C9               ret
1422+ A532
1423+ A532              ; -----------------------------------------------------------------------
1424+ A532              ;
1425+ A532              ;   04/7/24
1426+ A532              ;
1427+ A532
1428+ A532              Detecta_colision_nave_entidad
1429+ A532
1430+ A532              ; Exclusiones:
1431+ A532
1432+ A532              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A532
1434+ A532 21 5C 8C     	ld hl,Impacto2
1435+ A535 CB 56        	bit 2,(hl)
1436+ A537 C8           	ret z
1437+ A538
1438+ A538              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A538
1440+ A538 2A B5 89         ld hl,(Pamm_Amadeus)
1441+ A53B CD 68 91         call Extrae_address
1442+ A53E 54               ld d,h
1443+ A53F 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A540
1445+ A540 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A543 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A545 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A548
1449+ A548 C5           1 push bc
1450+ A549 06 03            ld b,3
1451+ A54B E5               push hl
1452+ A54C
1453+ A54C              ; .db
1454+ A54C
1455+ A54C 1A           3 ld a,(de)
1456+ A54D A7               and a
1457+ A54E 20 03            jr nz,4F
1458+ A550
1459+ A550 2C               inc l
1460+ A551 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A553
1462+ A553 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A555 28 04            jr z,2F
1464+ A557
1465+ A557              ; Impacto.
1466+ A557 FD 2D            dec iyl
1467+ A559 28 22            jr z,5F
1468+ A55B
1469+ A55B 1C           2 inc e
1470+ A55C 10 EE            djnz 3B
1471+ A55E
1472+ A55E E1               pop hl
1473+ A55F
1474+ A55F              ; Hay salto de línea en el puntero de impresión ???
1475+ A55F
1476+ A55F 7C               ld a,h
1477+ A560 D6 57            sub $57
1478+ A562 20 0A            jr nz,6F
1479+ A564
1480+ A564              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A564
1482+ A564 2A B3 89         ld hl,(p.imp.amadeus)
1483+ A567 3E 20            ld a,$20
1484+ A569 A7               and a
1485+ A56A 85               add l
1486+ A56B 6F               ld l,a
1487+ A56C 18 01            jr 7F
1488+ A56E
1489+ A56E 24           6 inc h
1490+ A56F
1491+ A56F C1           7 pop bc
1492+ A570 10 D6            djnz 1B
1493+ A572
1494+ A572              ;   Fin de la comparativa.
1495+ A572
1496+ A572              ;   NO HAY COLISIÓN !!!!!.
1497+ A572              ;
1498+ A572              ;   .db (Impacto) de Amadeus a "0".
1499+ A572              ;   RES el bit2 de (Impacto2).
1500+ A572              ;
1501+ A572              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A572              ;   Lo colocamos a "0".
1503+ A572
1504+ A572 21 5C 8C         ld hl,Impacto2
1505+ A575 CB 96            res 2,(hl)
1506+ A577 2A 5D 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A57A 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A57C C9               ret
1509+ A57D
1510+ A57D              ;   COLISIÓN !!!!!.
1511+ A57D              ;
1512+ A57D              ;   .db (Impacto) de Amadeus a "1".
1513+ A57D              ;   SET el bit3 de (Impacto2).
1514+ A57D              ;
1515+ A57D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A57D
1517+ A57D E1           5 pop hl
1518+ A57E C1               pop bc
1519+ A57F
1520+ A57F 21 B2 89         ld hl,Impacto_Amadeus
1521+ A582 36 01            ld (hl),1
1522+ A584 21 5C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A587 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A589
1525+ A589 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A58C 2A 5D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A58F
1528+ A58F 23               inc hl
1529+ A590 23               inc hl
1530+ A591 23               inc hl
1531+ A592
1532+ A592 73               ld (hl),e
1533+ A593 23               inc hl
1534+ A594 72               ld (hl),d
1535+ A595
1536+ A595              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A595
1538+ A595 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A598 21 B5 89         ld hl,Pamm_Amadeus
1540+ A59B
1541+ A59B 73               ld (hl),e
1542+ A59C 23               inc hl
1543+ A59D 72               ld (hl),d
1544+ A59E
1545+ A59E C9               ret
1546+ A59F
1547+ A59F
1548+ A59F
# file closed: Disparo.asm
2415  A59F
2416  A59F              	SAVESNA "Pruebas.sna", START
2417  A59F
2418  A59F
2419  A59F
2420  A59F
# file closed: Banco_de_pruebas.asm
