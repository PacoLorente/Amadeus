# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 29 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD 93 9E     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 4F 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD A7 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 4D 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 4D 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 50 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD B7 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 143  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 144  8BBB
 145  8BBB              ; --------------------------------------------------------------------------------
 146  8BBB              ;
 147  8BBB              ; 12/05/24
 148  8BBB              ;
 149  8BBB              ; Parámetros DRAW.
 150  8BBB              ;
 151  8BBB
 152  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBB
 154  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBC              ;															- Patrón de movimiento.
 156  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBE
 159  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBF
 162  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBF              ; Ejemplos.
 165  8BBF
 166  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBF
 172  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC0
 176  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC2
 179  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC4
 181  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC4              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 183  8BC4
 184  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 186  8BC6
 187  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BC6
 189  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC7
 195  8BC7 00           Ctrl_2 db 0
 196  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC8              ;
 204  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC8              ;														BIT 4, ???
 210  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC8
 212  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC9              ;
 218  8BC9              ; 														DESCRIPCIÖN:
 219  8BC9              ;
 220  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC9              ;
 234  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC9
 238  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC9
 240  8BC9 00           Filas db 0												; Filas. [DRAW]
 241  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BCF
 245  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BCF
 247  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BD0
 251  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BD0
 253  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BD0              ;
 255  8BD0              ;	COLORES: 0 ..... NEGRO
 256  8BD0              ;    		 1 ..... AZUL
 257  8BD0              ; 			 2 ..... ROJO
 258  8BD0              ;			 3 ..... MAGENTA
 259  8BD0              ; 			 4 ..... VERDE
 260  8BD0              ; 			 5 ..... CIAN
 261  8BD0              ;			 6 ..... AMARILLO
 262  8BD0              ; 			 7 ..... BLANCO
 263  8BD0
 264  8BD0 00 00        Indice_Sprite_der defw 0
 265  8BD2 00 00        Indice_Sprite_izq defw 0
 266  8BD4 00 00        Puntero_DESPLZ_der defw 0
 267  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD8
 269  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BDB 00           Columnas db 0
 272  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BDF
 276  8BDF              ; variables de control general.
 277  8BDF
 278  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BE0
 280  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BE0
 282  8BE0              Perfiles_de_velocidad
 283  8BE0
 284  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BE4
 289  8BE4              ; Contadores de 16 bits.
 290  8BE4
 291  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BEC
 296  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BEC
 298  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BF2              ;
 302  8BF2              ;
 303  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BF3 00           Incrementa_puntero_backup db 0
 307  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF8              ;
 313  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF8              ;
 317  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF8              ;
 322  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF8
 326  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF9
 328  8BF9              ;														DESCRIPCIÓN:
 329  8BF9              ;
 330  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF9
 337  8BF9              ;														BIT 3, Recarga de nueva oleada.
 338  8BF9              ;														BIT 4, Recarga de nueva oleada.
 339  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF9              ;														BIT 6, **** Frame completo.
 341  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF9
 343  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BFB
 348  8BFB              ; Gestión de ENTIDADES y CAJAS.
 349  8BFB
 350  8BFB 00 00        Puntero_store_caja defw 0
 351  8BFD 00 00        Puntero_restore_caja defw 0
 352  8BFF 00 00        Indice_restore_caja defw 0
 353  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8C04              ;Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 357  8C04              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 358  8C04              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 359  8C04              ;														; _ (Numero_de_malotes)="0".
 360  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 361  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 362  8C08              ;														; _ puntero (Indice_entidades).
 363  8C08
 364  8C08              ;---------------------------------------------------------------------------------------------------------------
 365  8C08              ;
 366  8C08              ;	12/08/24
 367  8C08              ;
 368  8C08              ;	Álbumes.
 369  8C08
 370  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 371  8C0A              ;														; _variable para almacenar lo posición del puntero_
 372  8C0A              ; 														; _de pila, SP.
 373  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 374  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 375  8C0C
 376  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 377  8C0C
 378  8C0C 00 00        Album_de_pintado defw 0
 379  8C0E 00 00        Album_de_borrado defw 0
 380  8C10 00 00        Album_de_pintado_Amadeus defw 0
 381  8C12 00 00        Album_de_borrado_Amadeus defw 0
 382  8C14 00 00        Album_de_pintado_disparos defw 0
 383  8C16 00 00        Album_de_borrado_disparos defw 0
 384  8C18
 385  8C18 00 00        Nivel_scanlines_disparos_album defw 0
 386  8C1A 00 00        Puntero_rancio_disparos_album defw 0
 387  8C1C
 388  8C1C 00 00        Techo_Scanlines_album defw 0
 389  8C1E 00 00        Techo_Scanlines_album_2 defw 0
 390  8C20 00           Switch db 0
 391  8C21 00 00        Techo defw 0
 392  8C23 00 00        Scanlines_album_SP defw 0
 393  8C25 00 89        India_SP defw Tabla_de_pintado
 394  8C27 03 89        India_2_SP defw Tabla_de_pintado+3
 395  8C29
 396  8C29 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 397  8C2A              ;
 398  8C2A              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 399  8C2A              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 400  8C2A              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 401  8C2A              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 402  8C2A              ;																Habilita el borrado/pintado de sprites.
 403  8C2A              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 404  8C2A              ;																_ a la baja.
 405  8C2A              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 406  8C2A              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 407  8C2A              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 408  8C2A              ; 																_ el último frame de la explosión de nuestra nave.
 409  8C2A              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 410  8C2A              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 411  8C2A
 412  8C2A 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 413  8C2B              ;
 414  8C2B              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 415  8C2B              ;
 416  8C2B              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 417  8C2B              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 418  8C2B              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 419  8C2B              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 420  8C2B              ;
 421  8C2B              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 422  8C2B              ;															_ masticados ya generados.
 423  8C2B              ;
 424  8C2B              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 425  8C2B              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 426  8C2B              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 427  8C2B              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 428  8C2B
 429  8C2B 00           Ctrl_5 db 0
 430  8C2C
 431  8C2C              ; Gestión de Disparos.
 432  8C2C
 433  8C2C              ;Numero_de_disparotes db 0
 434  8C2C
 435  8C2C 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C2E 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 437  8C30
 438  8C30 00           Impacto2 db 0											; Byte de control de impactos.
 439  8C31
 440  8C31              ;
 441  8C31              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 442  8C31              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 443  8C31              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 444  8C31              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 445  8C31
 446  8C31
 447  8C31
 448  8C31
 449  8C31
 450  8C31
 451  8C31
 452  8C31 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 453  8C33              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 454  8C33              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 455  8C33
 456  8C33 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 457  8C35              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 458  8C35 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 459  8C38              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 460  8C38 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C3B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 462  8C3B
 463  8C3B              ;---------------------------------------------------------------------------------------------------------------
 464  8C3B
 465  8C3B              ; Relojes y temporizaciones.
 466  8C3B
 467  8C3B 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 468  8C3C 05           Clock_explosion_Amadeus db 5
 469  8C3D 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 470  8C3E
 471  8C3E F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 472  8C40
 473  8C40 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 474  8C42 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 475  8C43              ;														; Repite la oleada de entidades.
 476  8C43 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 477  8C44
 478  8C44              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 479  8C44              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 480  8C44
 481  8C44              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 482  8C44              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 483  8C44              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 484  8C44
 485  8C44              ;---------------------------------------------------------------------------------------------------------------
 486  8C44
 487  8C44              ; Gestión de NIVELES.
 488  8C44
 489  8C44 00           Nivel db 0												; Nivel actual del juego.
 490  8C45 00 00        Puntero_indice_NIVELES defw 0
 491  8C47 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 492  8C49              ; 														; _ que definen el NIVEL.
 493  8C49
 494  8C49              ; ---------------------------------------------------------------------------------------------------------------
 495  8C49
 496  8C49              ; Temporizaciones Shield.
 497  8C49
 498  8C49 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 499  8C4D 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 500  8C4F 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 501  8C50 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 502  8C51 00           Shield_3 db 0
 503  8C52
 504  8C52 06           Lives db 6
 505  8C53
 506  8C53              ; 	INICIO  *************************************************************************************************************************************************************************
 507  8C53              ;
 508  8C53              ;	5/1/24
 509  8C53
 510  8C53              START
 511  8C53
 512  8C53 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 513  8C56 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 514  8C58 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 515  8C5A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 516  8C5C F3           	DI
 517  8C5D
 518  8C5D              ; Limpiamos pantalla.
 519  8C5D
 520  8C5D 3E 07        	ld a,%00000111
 521  8C5F              ;	call Cls
 522  8C5F CD 9C 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 523  8C62
 524  8C62              ; INICIALIZACIÓN.
 525  8C62
 526  8C62 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 527  8C64 CD E9 91     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 528  8C67 CD 30 8E     	call Extrae_numero_aleatorio_y_avanza
 529  8C6A
 530  8C6A 6F           	ld l,a
 531  8C6B 26 00        	ld h,0
 532  8C6D 22 40 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 533  8C70
 534  8C70              ;	Inicializa 1er Nivel.
 535  8C70
 536  8C70 21 97 8B     	ld hl,Indice_de_niveles
 537  8C73 22 45 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 538  8C76 CD 19 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 539  8C79              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 540  8C79              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 541  8C79              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 542  8C79
 543  8C79              ;	Inicia los álbumes de líneas.
 544  8C79
 545  8C79 CD E5 8F     	call Inicia_albumes_de_lineas
 546  8C7C              ;
 547  8C7C CD F5 8F     	call Inicia_albumes_de_lineas_Amadeus
 548  8C7F CD 02 90     	call Inicia_albumes_de_disparos
 549  8C82
 550  8C82
 551  8C82 CD 5E 92     4 call Inicia_Entidades
 552  8C85 CD C1 92     	call Inicia_Amadeus
 553  8C88
 554  8C88              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 555  8C88              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 556  8C88              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 557  8C88
 558  8C88 11 70 89     	ld de,Amadeus_BOX
 559  8C8B CD 14 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 560  8C8E CD 04 93     	call Limpiamos_bandeja_DRAW
 561  8C91
 562  8C91              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 563  8C91
 564  8C91 06 3C        	ld b,60
 565  8C93 CD E6 9C     2 call Amadeus_a_izquierda
 566  8C96 10 FB        	djnz 2B
 567  8C98
 568  8C98 CD C3 8F     	call Genera_datos_de_impresion_Amadeus
 569  8C9B
 570  8C9B              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 571  8C9B
 572  8C9B CD 15 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 573  8C9E              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 574  8C9E
 575  8C9E              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 576  8C9E              ; (Esto se dá cuando se inicia una nueva oleada).
 577  8C9E
 578  8C9E              ;	ld a,(Ctrl_1)
 579  8C9E              ;	bit 3,a
 580  8C9E              ;	jr nz,5F											 ; Loop
 581  8C9E
 582  8C9E              ;	ld de,Amadeus_db
 583  8C9E              ;	call Store_Amadeus
 584  8C9E
 585  8C9E              ; 	INICIA DISPAROS !!!!!
 586  8C9E
 587  8C9E CD 2B 90     	call Inicia_Puntero_Disparo_Entidades
 588  8CA1 CD 32 90     	call Inicia_Puntero_Disparo_Amadeus
 589  8CA4
 590  8CA4              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 591  8CA4
 592  8CA4              ;5 call Inicia_punteros_de_cajas
 593  8CA4              ;	call Restore_entidad
 594  8CA4
 595  8CA4              ;	ld a,(Ctrl_1)
 596  8CA4              ;	bit 3,a
 597  8CA4              ;	jr z,6F
 598  8CA4
 599  8CA4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 600  8CA4
 601  8CA4              ;	ld hl,Ctrl_1
 602  8CA4              ;	res 3,(hl)
 603  8CA4              ;	jr Main
 604  8CA4
 605  8CA4              ; Damos por concluida la construcción del FRAME.
 606  8CA4              ;
 607  8CA4
 608  8CA4 CD A7 90     	call Inicia_Shield
 609  8CA7
 610  8CA7
 611  8CA7 2A 23 8C     6 ld hl,(Scanlines_album_SP)
 612  8CAA 22 1C 8C     	ld (Techo_Scanlines_album),hl
 613  8CAD
 614  8CAD 2A 0E 8C     	ld hl,(Album_de_borrado)
 615  8CB0 22 23 8C     	ld (Scanlines_album_SP),hl
 616  8CB3
 617  8CB3 21 00 89     	ld hl,Tabla_de_pintado
 618  8CB6 22 25 8C     	ld (India_SP),hl
 619  8CB9
 620  8CB9 21 29 8C     	ld hl,Ctrl_3
 621  8CBC CB C6        	set 0,(hl) 											; Indica Frame completo.
 622  8CBE CB D6        	set 2,(hl)
 623  8CC0 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 624  8CC2
 625  8CC2 FB           	ei 													; Ha de apuntar a $5c3a.
 626  8CC3
 627  8CC3 76           	halt
 628  8CC4
 629  8CC4              ; ------------------------------------
 630  8CC4
 631  8CC4              Main
 632  8CC4              ;
 633  8CC4              ; 13/05/24
 634  8CC4
 635  8CC4              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 636  8CC4              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 637  8CC4              ; Este hecho lo indica el bit2 de (Impacto2).
 638  8CC4
 639  8CC4 3A 2B 8C     	ld a,(Ctrl_5)
 640  8CC7 CB 47        	bit 0,a
 641  8CC9 F3           	di
 642  8CCA 20 FE        	jr nz,$
 643  8CCC FB           	ei
 644  8CCD
 645  8CCD CD 2B A0     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 646  8CD0
 647  8CD0 2A 40 8C     16 ld hl,(Clock_next_entity)
 648  8CD3 ED 4B 78 5C  	ld bc,(FRAMES)
 649  8CD7 A7           	and a
 650  8CD8 ED 42        	sbc hl,bc
 651  8CDA 20 16        	jr nz,13F
 652  8CDC
 653  8CDC              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 654  8CDC              ; _ (Clock_next_entity) para la siguiente entidad.
 655  8CDC
 656  8CDC 3A 02 8C     21 ld a,(Numero_parcial_de_entidades)
 657  8CDF 47           	ld b,a
 658  8CE0 3A 03 8C     	ld a,(Entidades_en_curso)
 659  8CE3 B8           	cp b
 660  8CE4 28 0C        	jr z,13F
 661  8CE6 30 0A        	jr nc,13F
 662  8CE8
 663  8CE8 3C           	inc a
 664  8CE9 32 03 8C     	ld (Entidades_en_curso),a
 665  8CEC
 666  8CEC              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 667  8CEC
 668  8CEC CD 30 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 669  8CEF CD 4C 8E     	call Define_Clock_next_entity
 670  8CF2
 671  8CF2              ; -------------------------------------------------------------------------------------------------------------
 672  8CF2
 673  8CF2              ; Habilita disparos.
 674  8CF2
 675  8CF2              13
 676  8CF2
 677  8CF2              ;	ld hl,Disparo_Amadeus
 678  8CF2              ;	ld de,CLOCK_repone_disparo_Amadeus
 679  8CF2              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 680  8CF2
 681  8CF2              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 682  8CF2              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 683  8CF2              ;	call Habilita_disparos
 684  8CF2
 685  8CF2              ; COLISIONES.
 686  8CF2
 687  8CF2              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 688  8CF2
 689  8CF2              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 690  8CF2              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 691  8CF2              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 692  8CF2
 693  8CF2              ;	xor a
 694  8CF2              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 695  8CF2
 696  8CF2              ;	call Inicia_punteros_de_cajas
 697  8CF2              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 698  8CF2              ; 														; _ en DRAW.
 699  8CF2
 700  8CF2              ;	ld a,(Filas)
 701  8CF2              ;	and a
 702  8CF2              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 703  8CF2              ;	call Incrementa_punteros_de_cajas
 704  8CF2              ;	jr 12B
 705  8CF2
 706  8CF2              ; ---------------------------------------------------------------------------------------
 707  8CF2
 708  8CF2              ;10 ld a,(Numero_parcial_de_entidades)
 709  8CF2              ;    ld b,a
 710  8CF2              ;	and a
 711  8CF2              ;	jr nz,11F
 712  8CF2
 713  8CF2              ;	ld hl,Ctrl_1;
 714  8CF2              ;	bit 4,(hl)
 715  8CF2              ;	jp nz,16F
 716  8CF2
 717  8CF2              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 718  8CF2
 719  8CF2              ;	ld hl,Ctrl_1
 720  8CF2              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 721  8CF2
 722  8CF2              ;	ld a,(Contador_de_frames)
 723  8CF2              ;	inc a
 724  8CF2              ;	ld (Activa_recarga_cajas),a
 725  8CF2
 726  8CF2              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 727  8CF2
 728  8CF2 3A 03 8C     11 ld a,(Entidades_en_curso)
 729  8CF5 A7           	and a
 730  8CF6 CA 5E 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 731  8CF9 47           	ld b,a												; No hay entidades que gestionar.
 732  8CFA
 733  8CFA              ; ( Código que ejecutamos con cada entidad: ).
 734  8CFA
 735  8CFA              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 736  8CFA              ;
 737  8CFA              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 738  8CFA
 739  8CFA 21 00 89     	ld hl,Tabla_de_pintado
 740  8CFD 22 25 8C     	ld (India_SP),hl
 741  8D00
 742  8D00 21 29 8C     	ld hl,Ctrl_3
 743  8D03 CB D6        	set 2,(hl)
 744  8D05 CD 05 8E     	call Change
 745  8D08
 746  8D08 C5           15 push bc 												; Nº de entidades en curso.
 747  8D09
 748  8D09 CD 74 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 749  8D0C ED 5B 23 8C  	ld de,(Scanlines_album_SP)
 750  8D10
 751  8D10              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 752  8D10
 753  8D10              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 754  8D10
 755  8D10 3A BF 8B     	ld a,(Impacto)
 756  8D13 A7           	and a
 757  8D14 28 13        	jr z,8F
 758  8D16
 759  8D16              ; 5/7/24
 760  8D16              ; Nota importante:
 761  8D16              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 762  8D16              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 763  8D16              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 764  8D16
 765  8D16 3A 29 8C     	ld a,(Ctrl_3)
 766  8D19 CB 7F        	bit 7,a
 767  8D1B 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 768  8D1D              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 769  8D1D 3A 74 89     	ld a,(Impacto_Amadeus)
 770  8D20 A7           	and a
 771  8D21 C4 84 91     	call nz,Genera_explosion
 772  8D24 20 1B        	jr nz,Gestiona_siguiente_entidad
 773  8D26
 774  8D26              ; Falsa colisión !!!
 775  8D26
 776  8D26 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 777  8D29
 778  8D29              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 779  8D29              ;	set 1,(hl)
 780  8D29              ;	jr 7F
 781  8D29
 782  8D29              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 783  8D29              ; _con las coordenadas de la entidad almacenada en DRAW.
 784  8D29
 785  8D29              ;	ld a,(Ctrl_1)
 786  8D29              ;	bit 2,a
 787  8D29              ;	jr z,7F
 788  8D29
 789  8D29              ;	ld hl,(Coordenadas_disparo_certero)
 790  8D29              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 791  8D29              ;														; E contiene la coordenada_X del disparo.
 792  8D29              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 793  8D29              ;														; H FILA, (Coordenada_y de la entidad).
 794  8D29              ;	and a
 795  8D29              ;	sbc hl,de
 796  8D29
 797  8D29              ;	call Determina_resultado_comparativa
 798  8D29
 799  8D29              ;	ld a,b
 800  8D29              ;	and a
 801  8D29              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 802  8D29
 803  8D29              ; ----- ----- -----
 804  8D29
 805  8D29              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 806  8D29              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 807  8D29
 808  8D29              ;	ld hl,Ctrl_1
 809  8D29              ;	res 2,(hl)
 810  8D29
 811  8D29              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 812  8D29
 813  8D29              ;	ld a,(Ctrl_0)
 814  8D29              ;	bit 4,a
 815  8D29              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 816  8D29
 817  8D29              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 818  8D29              ; [[[
 819  8D29              ;	call Detecta_disparo_entidad
 820  8D29              ; ]]]
 821  8D29
 822  8D29              ;	dec a
 823  8D29              ;	ld (Impacto),a
 824  8D29
 825  8D29              ; Existe "Entidad_guía" ???.
 826  8D29              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 827  8D29
 828  8D29              ;	ld a,(Ctrl_3)
 829  8D29              ;	bit 1,a
 830  8D29              ;	jr nz,22F
 831  8D29
 832  8D29              ; Almacén de "Movimientos_masticados" lleno ???
 833  8D29              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 834  8D29              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 835  8D29
 836  8D29              ;;	ld a,(Ctrl_3)
 837  8D29              ;;	bit 3,a
 838  8D29              ;;	jr nz,22F
 839  8D29
 840  8D29              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 841  8D29
 842  8D29              ;	ld hl,Ctrl_2
 843  8D29              ;	set 5,(hl)
 844  8D29              ;	ld hl,Ctrl_3
 845  8D29              ;	set 1,(hl)
 846  8D29
 847  8D29              ; -------------------------------------------
 848  8D29
 849  8D29 CD 90 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 850  8D2C CD E5 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 851  8D2F CD 7C 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 852  8D32 CD 84 94     	call Genera_datos_de_impresion
 853  8D35 CD 27 93     	call Decrementa_Contador_de_mov_masticados
 854  8D38
 855  8D38              ; -------------------------------------------
 856  8D38
 857  8D38              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 858  8D38
 859  8D38 2A C0 8B     	ld hl,(Puntero_de_impresion)
 860  8D3B CD 58 94     	call Genera_coordenadas
 861  8D3E
 862  8D3E CD A9 9F     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 863  8D41
 864  8D41              ;	ld hl,Ctrl_0
 865  8D41              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 866  8D41
 867  8D41              Gestiona_siguiente_entidad
 868  8D41
 869  8D41 CD F9 92      	call Store_Restore_cajas
 870  8D44 C1           	pop bc
 871  8D45 10 C1        	djnz 15B
 872  8D47
 873  8D47              ; Hemos gestionado todas las entidades.
 874  8D47
 875  8D47 CD A0 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 876  8D4A CD B7 8E     	call Ordena_tabla_de_impresion
 877  8D4D CD 15 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 878  8D50
 879  8D50              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 880  8D50              ; Hemos gestionado todas las unidades.
 881  8D50              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 882  8D50
 883  8D50              ;	ld hl,Ctrl_1
 884  8D50              ;	res 2,(hl)
 885  8D50
 886  8D50 CD 61 8E     	call Borra_diferencia
 887  8D53
 888  8D53 3A 29 8C     	ld a,(Ctrl_3)
 889  8D56 CB 5F        	bit 3,a
 890  8D58 20 04        	jr nz,Gestion_de_Amadeus
 891  8D5A
 892  8D5A EB           	ex de,hl
 893  8D5B 71           	ld (hl),c
 894  8D5C 2C           	inc l
 895  8D5D 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 896  8D5E
 897  8D5E
 898  8D5E              ;! GESTIONA AMADEUS !!!!!!!!!!
 899  8D5E
 900  8D5E              Gestion_de_Amadeus
 901  8D5E
 902  8D5E 21 29 8C     	ld hl,Ctrl_3
 903  8D61 CB 76        	bit 6,(hl)
 904  8D63 28 13        	jr z,Amadeus_vivo
 905  8D65
 906  8D65              ; Amadeus ha sido destruido.
 907  8D65              ; Decrementa (Temp_new_live).
 908  8D65
 909  8D65 21 3D 8C     	ld hl,Temp_new_live
 910  8D68 35           	dec (hl)
 911  8D69 20 29        	jr nz,End_frame
 912  8D6B
 913  8D6B              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 914  8D6B
 915  8D6B 21 52 8C     	ld hl,Lives
 916  8D6E 35           	dec (hl)
 917  8D6F
 918  8D6F              ;! Fin del juego
 919  8D6F
 920  8D6F F3           	di
 921  8D70 28 FE        	jr z,$
 922  8D72 FB           	ei
 923  8D73
 924  8D73              ; Nueva nave.
 925  8D73
 926  8D73 CD AB 8D     	call Reinicia_Amadeus
 927  8D76 18 1C        	jr End_frame
 928  8D78
 929  8D78              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 930  8D78
 931  8D78              Amadeus_vivo
 932  8D78
 933  8D78 3A 74 89     	ld a,(Impacto_Amadeus)
 934  8D7B A7           	and a
 935  8D7C C4 B4 91     	call nz, Genera_explosion_Amadeus
 936  8D7F 20 13        	jr nz, End_frame
 937  8D81
 938  8D81 CD 61 91     	call Teclado
 939  8D84
 940  8D84 CD D6 9E     	call Genera_datos_de_impresion_disparos_Amadeus
 941  8D87
 942  8D87 21 29 8C     	ld hl,Ctrl_3
 943  8D8A CB 6E        	bit 5,(hl)
 944  8D8C 28 06        	jr z,End_frame
 945  8D8E
 946  8D8E              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 947  8D8E
 948  8D8E CD 20 8E     	call Change_Amadeus
 949  8D91 CD C3 8F     	call Genera_datos_de_impresion_Amadeus
 950  8D94
 951  8D94              End_frame
 952  8D94
 953  8D94 2A 0E 8C     	ld hl,(Album_de_borrado)
 954  8D97 22 23 8C     	ld (Scanlines_album_SP),hl
 955  8D9A
 956  8D9A 21 29 8C     	ld hl,Ctrl_3
 957  8D9D CB C6        	set 0,(hl) 											; Indica Frame completo.
 958  8D9F CB 9E        	res 3,(hl)
 959  8DA1 CB A6        	res 4,(hl)
 960  8DA3
 961  8DA3 AF           	xor a
 962  8DA4 D3 FE        	out ($fe),a
 963  8DA6
 964  8DA6 76           	halt
 965  8DA7
 966  8DA7              ; ----------------------------------------
 967  8DA7
 968  8DA7              ;	ld a,(Ctrl_1) 										; Existe Loop?
 969  8DA7              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 970  8DA7 CA C4 8C     	jp z,Main
 971  8DAA
 972  8DAA              ; RECARGA DE NUEVA OLEADA.
 973  8DAA
 974  8DAA              ;	ld a,(Contador_de_frames)
 975  8DAA              ;	ld b,a
 976  8DAA              ;	ld a,(Activa_recarga_cajas)
 977  8DAA              ;	cp b
 978  8DAA              ;	jr z,20F
 979  8DAA
 980  8DAA              ;	ld hl,Ctrl_1
 981  8DAA              ;	set 4,(hl)
 982  8DAA              ;	jp Main
 983  8DAA
 984  8DAA              ;20 ld hl,Ctrl_1
 985  8DAA              ;	res 4,(hl)
 986  8DAA
 987  8DAA              ;	ld a,(Contador_de_frames)
 988  8DAA
 989  8DAA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 990  8DAA              ;! _ IMPREDECIBLE !!!!
 991  8DAA
 992  8DAA              ;	add 10
 993  8DAA              ;	ld (Clock_next_entity),a
 994  8DAA
 995  8DAA              ;	jp 4B
 996  8DAA
 997  8DAA C9           	ret
 998  8DAB
 999  8DAB              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
1000  8DAB              ;
1001  8DAB              ;	16/11/23
1002  8DAB
1003  8DAB              ;;Gestiona_Amadeus
1004  8DAB
1005  8DAB              ;! Activa/desactiva impacto con Amadeus.
1006  8DAB
1007  8DAB              ;	ld a,(Impacto)
1008  8DAB              ;	and a
1009  8DAB              ;	jr nz,2F
1010  8DAB
1011  8DAB              ;;	call Mov_Amadeus
1012  8DAB
1013  8DAB              ;;2 ld a,(Ctrl_0)
1014  8DAB              ;;	bit 4,a
1015  8DAB              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
1016  8DAB
1017  8DAB              ;;	call Guarda_foto_entidad_a_pintar
1018  8DAB              ;;	call Guarda_datos_de_borrado_Amadeus
1019  8DAB
1020  8DAB              ;;1 ld hl,Ctrl_0
1021  8DAB              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
1022  8DAB
1023  8DAB              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
1024  8DAB
1025  8DAB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
1026  8DAB
1027  8DAB              ;	call Calcula_numero_de_disparotes
1028  8DAB
1029  8DAB              ;;	ret
1030  8DAB
1031  8DAB              ; -----------------------------
1032  8DAB              ;
1033  8DAB              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
1034  8DAB              ;
1035  8DAB              ;	INPUTS: B a de estar a "0".
1036  8DAB
1037  8DAB              ;Prepara_Borra_sprites
1038  8DAB
1039  8DAB              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1040  8DAB              ;	ld a,l
1041  8DAB              ;	ret z
1042  8DAB
1043  8DAB              ;	srl a
1044  8DAB
1045  8DAB              ;2 sub 16
1046  8DAB              ;	jr z,1F
1047  8DAB              ;	inc b
1048  8DAB              ;	jr 2B
1049  8DAB
1050  8DAB              ;1 inc b
1051  8DAB
1052  8DAB              ;	exx
1053  8DAB              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1054  8DAB              ;	exx
1055  8DAB
1056  8DAB              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1057  8DAB              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1058  8DAB
1059  8DAB              ;	ret
1060  8DAB
1061  8DAB              ; --------------------------------------------------------------------------------------------------------------
1062  8DAB              ;
1063  8DAB              ;	15/12/23
1064  8DAB
1065  8DAB              ;Mov_obj
1066  8DAB
1067  8DAB              ;	ld a,(Ctrl_2)
1068  8DAB              ;	bit 1,a
1069  8DAB              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1070  8DAB
1071  8DAB              ; Explosión:
1072  8DAB
1073  8DAB              ;	ld a,(Frames_explosion)
1074  8DAB              ;	and a
1075  8DAB              ;	jr nz,4F
1076  8DAB
1077  8DAB              ;!  Una alimaña menos!!!!!!!!!1
1078  8DAB
1079  8DAB              ; Se trataba de una Entidad_guía ???
1080  8DAB
1081  8DAB              ;	ld a,(Ctrl_2)
1082  8DAB              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1083  8DAB              ;	jr z,5F
1084  8DAB
1085  8DAB              ;	ld hl,Ctrl_3
1086  8DAB              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1087  8DAB
1088  8DAB              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1089  8DAB              ;!! _generado puede ser distinto, (aletoriedad).
1090  8DAB
1091  8DAB              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1092  8DAB              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1093  8DAB              ;	dec (hl)
1094  8DAB              ;	ld hl,Entidades_en_curso
1095  8DAB              ;	dec (hl)
1096  8DAB              ;	ld hl,Numero_de_entidades
1097  8DAB              ;	dec (hl)
1098  8DAB              ;	jr 3F
1099  8DAB
1100  8DAB              ; -----
1101  8DAB
1102  8DAB              ;	`Movemos´ la explosión.
1103  8DAB
1104  8DAB              ;4 ld hl,(Puntero_DESPLZ_der)
1105  8DAB              ;	inc hl
1106  8DAB              ;	inc hl
1107  8DAB              ;	call Extrae_address
1108  8DAB              ;;	ld (Puntero_objeto),hl
1109  8DAB
1110  8DAB              ;;	ld hl,Frames_explosion
1111  8DAB              ;;	dec (hl)
1112  8DAB
1113  8DAB              ;;	ld hl,Ctrl_0
1114  8DAB              ;;	set 4,(hl);;
1115  8DAB
1116  8DAB              ;;	jr 3F
1117  8DAB
1118  8DAB              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1119  8DAB
1120  8DAB              ;2 xor a
1121  8DAB              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1122  8DAB
1123  8DAB              ; Movemos Entidades malignas.
1124  8DAB              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1125  8DAB
1126  8DAB              ;	ld a,(Ctrl_2)
1127  8DAB              ;	bit 5,a
1128  8DAB              ;	jr nz,8F
1129  8DAB
1130  8DAB              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1131  8DAB              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1132  8DAB              ;	jr 7F
1133  8DAB
1134  8DAB              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1135  8DAB
1136  8DAB              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1137  8DAB              ;	bit 4,a
1138  8DAB              ;	ret z
1139  8DAB
1140  8DAB              ; Ha habido desplazamiento de la entidad maligna.
1141  8DAB              ; Ha llegado a zona de AMADEUS ???
1142  8DAB
1143  8DAB              ;7 ld a,(Coordenada_y)
1144  8DAB              ;	cp $14
1145  8DAB              ;	jr c,1F
1146  8DAB
1147  8DAB              ; ---------
1148  8DAB
1149  8DAB              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1150  8DAB              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1151  8DAB
1152  8DAB              ;	di
1153  8DAB              ;	call Genera_coordenadas_X
1154  8DAB              ;	call Compara_coordenadas_X
1155  8DAB              ;	ei
1156  8DAB
1157  8DAB              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1158  8DAB
1159  8DAB              ; ---------
1160  8DAB
1161  8DAB              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1162  8DAB              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1163  8DAB              ;	call Limpia_Variables_de_borrado
1164  8DAB
1165  8DAB              ;3 ret
1166  8DAB
1167  8DAB              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1168  8DAB              ;
1169  8DAB              ;	24/07/24
1170  8DAB
1171  8DAB              Reinicia_Amadeus
1172  8DAB
1173  8DAB              ;	Reinicia posición y estado.
1174  8DAB
1175  8DAB 21 CF 50     	ld hl,$50cf
1176  8DAE 22 75 89     	ld (p.imp.amadeus),hl
1177  8DB1 21 F0 E0     	ld hl,$e0f0
1178  8DB4 22 77 89     	ld (Pamm_Amadeus),hl
1179  8DB7 21 3D 00     	ld hl,$003d
1180  8DBA 22 79 89     	ld (Comm_Amadeus),hl
1181  8DBD
1182  8DBD              ;	limpiamos el álbum de borrado.
1183  8DBD
1184  8DBD 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1185  8DC0
1186  8DC0 AF           	xor a
1187  8DC1 77           	ld (hl),a
1188  8DC2
1189  8DC2 E5           	push hl
1190  8DC3 D1           	pop de
1191  8DC4 13           	inc de
1192  8DC5
1193  8DC5 01 23 00     	ld bc,35
1194  8DC8 ED B0        	ldir
1195  8DCA
1196  8DCA CD C3 8F     	call Genera_datos_de_impresion_Amadeus
1197  8DCD
1198  8DCD              ;	Reinicia temporizaciones.
1199  8DCD
1200  8DCD CD A7 90     	call Inicia_Shield
1201  8DD0
1202  8DD0 3E 5A        	ld a,90
1203  8DD2 32 4F 8C     	ld (Shield),a
1204  8DD5
1205  8DD5 3E 64        	ld a,100
1206  8DD7 32 3D 8C     	ld (Temp_new_live),a
1207  8DDA
1208  8DDA              ; 	Restauramos el FLAG: Amadeus vivo.
1209  8DDA
1210  8DDA 21 29 8C     	ld hl,Ctrl_3
1211  8DDD CB B6        	res 6,(hl)
1212  8DDF
1213  8DDF              ;	Fuerza la impresión de la nave en el siguiente frame.
1214  8DDF
1215  8DDF 21 29 8C      	ld hl,Ctrl_3
1216  8DE2 CB EE        	set 5,(hl)
1217  8DE4
1218  8DE4 C9           	ret
1219  8DE5
1220  8DE5              ; --------------------------------------------------------------------------------------------------------------
1221  8DE5              ;
1222  8DE5              ;	12/05/24
1223  8DE5
1224  8DE5 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1225  8DE8 CB 27        	sla a
1226  8DEA 32 C6 8B     	ld (Velocidad),a
1227  8DED E6 10        	and $10
1228  8DEF C8           	ret z
1229  8DF0
1230  8DF0              ; Restaura (Velocidad) a razón del nº de vueltas.
1231  8DF0
1232  8DF0 3A BE 8B     	ld a,(Contador_de_vueltas)
1233  8DF3 CB 2F        	sra a
1234  8DF5 CB 2F        	sra a
1235  8DF7 32 C6 8B     	ld (Velocidad),a
1236  8DFA
1237  8DFA 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1238  8DFD 23           	inc hl
1239  8DFE 23           	inc hl
1240  8DFF 23           	inc hl
1241  8E00 23           	inc hl
1242  8E01 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1243  8E04
1244  8E04 C9           	ret
1245  8E05
1246  8E05              ; --------------------------------------------------------------------------------------------------------------
1247  8E05              ;
1248  8E05              ;	18/06/24
1249  8E05
1250  8E05              Change
1251  8E05
1252  8E05 3A 20 8C     	ld a,(Switch)
1253  8E08 EE 01        	xor 1
1254  8E0A 32 20 8C     	ld (Switch),a
1255  8E0D 2A 0C 8C     	ld hl,(Album_de_pintado)
1256  8E10 ED 5B 0E 8C  	ld de,(Album_de_borrado)
1257  8E14 EB           	ex de,hl
1258  8E15 22 0C 8C     	ld (Album_de_pintado),hl
1259  8E18 22 23 8C     	ld (Scanlines_album_SP),hl
1260  8E1B ED 53 0E 8C  	ld (Album_de_borrado),de
1261  8E1F C9           	ret
1262  8E20
1263  8E20              Change_Amadeus
1264  8E20
1265  8E20 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1266  8E23 ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1267  8E27 EB           	ex de,hl
1268  8E28 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1269  8E2B ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1270  8E2F C9           	ret
1271  8E30
1272  8E30              ; ------------------------------------
1273  8E30              ;
1274  8E30              ; 1/05/24
1275  8E30
1276  8E30              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1277  8E30              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1278  8E30
1279  8E30              ;	DESTRUYE: HL,DE,A
1280  8E30              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1281  8E30
1282  8E30              ;	Variables implicadas: (RND_SP).
1283  8E30
1284  8E30              Extrae_numero_aleatorio_y_avanza
1285  8E30
1286  8E30 21 00 89     	ld hl,Tabla_de_pintado
1287  8E33 EB           	ex de,hl
1288  8E34 2A 3E 8C     	ld hl,(RND_SP)
1289  8E37 EB           	ex de,hl
1290  8E38 A7           	and a
1291  8E39 ED 52        	sbc hl,de
1292  8E3B
1293  8E3B 2A 3E 8C     	ld hl,(RND_SP)
1294  8E3E 20 06        	jr nz,1F
1295  8E40
1296  8E40              ; Sitúa HL al principio de la tabla de nº aleatorios.
1297  8E40
1298  8E40 21 F6 88     	ld hl,Numeros_aleatorios
1299  8E43 22 3E 8C     	ld (RND_SP),HL
1300  8E46
1301  8E46              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1302  8E46
1303  8E46 7E           1 ld a,(hl)
1304  8E47 23           	inc hl
1305  8E48 22 3E 8C     	ld (RND_SP),hl
1306  8E4B C9           	ret
1307  8E4C
1308  8E4C              ; ------------------------------------
1309  8E4C              ;
1310  8E4C              ; 1/05/24
1311  8E4C
1312  8E4C              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1313  8E4C              ; (1 a 4 segundos).
1314  8E4C              ; Actualizamos (Clock_next_entity) con A.
1315  8E4C
1316  8E4C              ;	DESTRUYE: A y B.
1317  8E4C              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1318  8E4C              ;			 Actualiza (Clock_next_entity) con A.
1319  8E4C
1320  8E4C              ;	Variables implicadas: (Clock_next_entity).
1321  8E4C
1322  8E4C              ; Notas:
1323  8E4C
1324  8E4C              ; 	$32 1 seg.
1325  8E4C              ; 	$64 2 seg.
1326  8E4C              ; 	$96 3 seg.
1327  8E4C              ; 	$c8 4 seg.
1328  8E4C              ; 	$fa 5 seg.
1329  8E4C
1330  8E4C              ; $ffff 1310,7 seg, 22 minutos.
1331  8E4C
1332  8E4C              ;	$0100  5 seg. aproximadamente.
1333  8E4C              ;	$0200 10 seg. aproximadamente.
1334  8E4C              ;	$0300 15 seg. aproximadamente.
1335  8E4C              ;	$0400 20 seg. aproximadamente.
1336  8E4C              ;	$0500 25 seg. aproximadamente.
1337  8E4C              ;	$0600 30 seg. aproximadamente.
1338  8E4C
1339  8E4C              Define_Clock_next_entity
1340  8E4C
1341  8E4C FE 34        	cp $34
1342  8E4E 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1343  8E50
1344  8E50              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1345  8E50
1346  8E50 4F           3 ld c,a
1347  8E51 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1348  8E53 2A 78 5C     	ld hl,(FRAMES)
1349  8E56 A7           	and a
1350  8E57 ED 4A        	adc hl,bc
1351  8E59 22 40 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1352  8E5C C9           	ret
1353  8E5D
1354  8E5D 3E 34        1 ld a,$34
1355  8E5F 18 EF        	jr 3B
1356  8E61
1357  8E61              ; ------------------------------------
1358  8E61              ;
1359  8E61              ; 18/03/24
1360  8E61
1361  8E61              Borra_diferencia
1362  8E61
1363  8E61 ED 4B 23 8C  	ld bc,(Scanlines_album_SP)
1364  8E65
1365  8E65 3A 20 8C     	ld a,(Switch)
1366  8E68 A7           	and a
1367  8E69 28 08        	jr z,2F
1368  8E6B
1369  8E6B 2A 1E 8C     	ld hl,(Techo_Scanlines_album_2)
1370  8E6E 11 1E 8C     	ld de,Techo_Scanlines_album_2
1371  8E71 18 06        	jr 3F
1372  8E73
1373  8E73 2A 1C 8C     2 ld hl,(Techo_Scanlines_album)
1374  8E76 11 1C 8C     	ld de,Techo_Scanlines_album
1375  8E79
1376  8E79              ; Diferencia.
1377  8E79
1378  8E79 ED 42        3 sbc hl,bc
1379  8E7B
1380  8E7B C8           	ret z
1381  8E7C D8           	ret c
1382  8E7D
1383  8E7D              ; Nuevo techo, (más bajo que el anterior).
1384  8E7D              ; Fijamos nuevo techo y borramos bytes sobrantes.
1385  8E7D
1386  8E7D EB           	ex de,hl
1387  8E7E
1388  8E7E 71           	ld (hl),c
1389  8E7F 2C           	inc l
1390  8E80 70           	ld (hl),b
1391  8E81
1392  8E81 AF           	xor a
1393  8E82 43           	ld b,e
1394  8E83
1395  8E83 2A 23 8C     	ld hl,(Scanlines_album_SP)
1396  8E86
1397  8E86 77           1 ld (hl),a
1398  8E87 23           	inc hl
1399  8E88 10 FC        	djnz 1B
1400  8E8A
1401  8E8A              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1402  8E8A
1403  8E8A 21 29 8C     	ld hl,Ctrl_3
1404  8E8D CB DE        	set 3,(hl)
1405  8E8F
1406  8E8F C9           	ret
1407  8E90
1408  8E90              ; --------------------------------------------------------------------------------------------------------------
1409  8E90              ;
1410  8E90              ;	26/3/24
1411  8E90
1412  8E90              Recauda_informacion_de_entidad_en_curso
1413  8E90
1414  8E90              ; Almacena la Coordenada Y de la entidad en curso.
1415  8E90
1416  8E90              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1417  8E90
1418  8E90 3A BD 8B     	ld a,(Coordenada_y)
1419  8E93 2A 25 8C     	ld hl,(India_SP)
1420  8E96 77           	ld (hl),a
1421  8E97 2C           	inc l
1422  8E98
1423  8E98              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1424  8E98
1425  8E98              ;	ld de,(Scanlines_album_SP)
1426  8E98
1427  8E98 73           	ld (hl),e
1428  8E99 2C           	inc l
1429  8E9A 72           	ld (hl),d
1430  8E9B 2C           	inc l
1431  8E9C
1432  8E9C 22 25 8C     	ld (India_SP),hl
1433  8E9F
1434  8E9F C9           	ret
1435  8EA0
1436  8EA0              ; --------------------------------------------------------------------------------------------------------------
1437  8EA0              ;
1438  8EA0              ;	27/03/24
1439  8EA0              ;
1440  8EA0
1441  8EA0              Inicializa_India_y_limpia_Tabla_de_impresion
1442  8EA0
1443  8EA0 2A 25 8C     	ld hl,(India_SP)
1444  8EA3 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1445  8EA6
1446  8EA6 79           	ld a,c
1447  8EA7 95           	sub l
1448  8EA8 28 06        	jr z,2F
1449  8EAA 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1450  8EAB              ;														; _ y pasamos a inicializar (India_SP).
1451  8EAB AF           	xor a
1452  8EAC
1453  8EAC 77           1 ld (hl),a
1454  8EAD 2C           	inc l
1455  8EAE 10 FC        	djnz 1B												; Limpia Tabla.
1456  8EB0
1457  8EB0 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1458  8EB3 22 25 8C     	ld (India_SP),hl
1459  8EB6
1460  8EB6 C9           	ret
1461  8EB7
1462  8EB7              ; --------------------------------------------------------------------------------------------------------------
1463  8EB7              ;
1464  8EB7              ;	31/3/24
1465  8EB7
1466  8EB7              Ordena_tabla_de_impresion
1467  8EB7
1468  8EB7              ; 5794 T/states.
1469  8EB7              ; 6278 T/states.
1470  8EB7              ; 5310 T/states.
1471  8EB7
1472  8EB7              ; Inicializamos punteros (India_SP) e (India_2_SP).
1473  8EB7              ; Inicializamos contador de comparaciones, [C].
1474  8EB7              ; Cargamos los registros A y B para efectuar comparación.
1475  8EB7
1476  8EB7 FD 2E 00     	ld iyl,0
1477  8EBA
1478  8EBA 3A 03 8C     	ld a,(Entidades_en_curso)
1479  8EBD FE 04        	cp 4 	;	4
1480  8EBF D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1481  8EC0
1482  8EC0 3D           	dec a
1483  8EC1 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1484  8EC2 51           	ld d,c 										; Copia de respaldo.
1485  8EC3
1486  8EC3 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1487  8EC4
1488  8EC4 21 03 89     	ld hl,Tabla_de_pintado+3
1489  8EC7 46           	ld b,(hl)
1490  8EC8 22 27 8C     	ld (India_2_SP),hl
1491  8ECB
1492  8ECB B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1493  8ECC DC F4 8E     	call c, Avanza_India_2_SP
1494  8ECF CC F4 8E     	call z, Avanza_India_2_SP
1495  8ED2
1496  8ED2 FD 2D        	dec iyl
1497  8ED4 28 18        	jr z,2F
1498  8ED6
1499  8ED6
1500  8ED6              ; --------------------------------------------------------------------------------------------------------------
1501  8ED6              ;
1502  8ED6              ;	7/4/24
1503  8ED6
1504  8ED6              Trueque
1505  8ED6
1506  8ED6              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1507  8ED6              ;  			A contiene en nº de fila de (India_SP).
1508  8ED6              ;			HL contiene (India_2_SP).
1509  8ED6
1510  8ED6 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1511  8ED7 E5           	push hl										; Preservo (India_2_SP).
1512  8ED8
1513  8ED8 ED 5B 25 8C  	ld de,(India_SP)
1514  8EDC EB           	ex de,hl
1515  8EDD 70           	ld (hl),b
1516  8EDE 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1517  8EDF
1518  8EDF CD 20 8F     	call Intercambia_1_byte
1519  8EE2 CD 20 8F     	call Intercambia_1_byte
1520  8EE5
1521  8EE5
1522  8EE5              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1523  8EE5              ; Recuperamos (India_2_SP) en HL.
1524  8EE5
1525  8EE5 2A 25 8C     	ld hl,(India_SP)
1526  8EE8 7E           	ld a,(hl)
1527  8EE9
1528  8EE9 E1           	pop hl
1529  8EEA D1           	pop de
1530  8EEB
1531  8EEB              ; --------------------------------------------------------------------------------------------------------------
1532  8EEB
1533  8EEB CD F4 8E     	call Avanza_India_2_SP
1534  8EEE
1535  8EEE 14           2 inc d
1536  8EEF 15           	dec d
1537  8EF0 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1538  8EF1 18 D8        	jr 1B
1539  8EF3
1540  8EF3 C9           	ret
1541  8EF4
1542  8EF4              ; ----- ----- ----- ----- -----
1543  8EF4
1544  8EF4              Avanza_India_2_SP
1545  8EF4
1546  8EF4 0D           	dec c
1547  8EF5 28 0A        	jr z,Avanza_punteros_indios
1548  8EF7
1549  8EF7 FD 2C        	inc iyl
1550  8EF9
1551  8EF9 2C           	inc l
1552  8EFA 2C           	inc l
1553  8EFB 2C           	inc l
1554  8EFC
1555  8EFC 46           	ld b,(hl)
1556  8EFD 22 27 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1557  8F00
1558  8F00 C9           	ret
1559  8F01
1560  8F01              ; ----- ----- ----- ----- -----
1561  8F01
1562  8F01              Avanza_punteros_indios
1563  8F01
1564  8F01 15           	dec d
1565  8F02 28 15        	jr z,Prepara_salida
1566  8F04
1567  8F04 4A           	ld c,d
1568  8F05
1569  8F05 2A 25 8C     	ld hl,(India_SP)
1570  8F08 2C           	inc l
1571  8F09 2C           	inc l
1572  8F0A 2C           	inc l
1573  8F0B 7E           	ld a,(hl)
1574  8F0C 22 25 8C     	ld (India_SP),hl
1575  8F0F
1576  8F0F 2C           	inc l
1577  8F10 2C           	inc l
1578  8F11 2C           	inc l
1579  8F12 46           	ld b,(hl)
1580  8F13 22 27 8C     	ld (India_2_SP),hl
1581  8F16
1582  8F16 FD 2C        	inc iyl
1583  8F18
1584  8F18 C9           	ret
1585  8F19
1586  8F19              Prepara_salida
1587  8F19
1588  8F19 21 00 89     	ld hl,Tabla_de_pintado
1589  8F1C 22 25 8C     	ld (India_SP),hl
1590  8F1F C9           	ret
1591  8F20
1592  8F20
1593  8F20 2C           Intercambia_1_byte inc l
1594  8F21 1C           	inc e
1595  8F22 46           	ld b,(hl)
1596  8F23 1A           	ld a,(de)
1597  8F24 EB           	ex de,hl
1598  8F25 70           	ld (hl),b
1599  8F26 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1600  8F27 C9           	ret
1601  8F28
1602  8F28              ; -----------------------------------------------------------------------------------
1603  8F28              ;
1604  8F28              ;	20/01/24
1605  8F28              ;
1606  8F28              ;
1607  8F28
1608  8F28              Construye_movimientos_masticados_entidad
1609  8F28
1610  8F28 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1611  8F2B E5           	push hl
1612  8F2C CD 6F 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1613  8F2F              ;															; _ el (Contador_de_mov_masticados).
1614  8F2F CD 3F 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1615  8F32              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1616  8F32 CD 6C 99     	call Recompone_posicion_inicio
1617  8F35
1618  8F35 CD 9C 96     1 call Draw
1619  8F38 CD 54 8F     	call Guarda_movimiento_masticado
1620  8F3B
1621  8F3B CD 19 9D     	call Movimiento
1622  8F3E
1623  8F3E 3A 29 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1624  8F41 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1625  8F43 28 F0        	jr z,1B
1626  8F45
1627  8F45              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1628  8F45              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1629  8F45
1630  8F45 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1631  8F46 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1632  8F49
1633  8F49              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1634  8F49
1635  8F49 CD 7D 9E     	call Situa_en_contador_general_de_mov_masticados
1636  8F4C
1637  8F4C              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1638  8F4C              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1639  8F4C
1640  8F4C ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1641  8F50
1642  8F50 71           	ld (hl),c
1643  8F51 23           	inc hl
1644  8F52 70           	ld (hl),b
1645  8F53
1646  8F53 C9           	ret
1647  8F54
1648  8F54              ; -----------------------------------------------------------------------------------
1649  8F54              ;
1650  8F54              ;	28/12/23
1651  8F54              ;
1652  8F54              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1653  8F54              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1654  8F54
1655  8F54              Guarda_movimiento_masticado
1656  8F54
1657  8F54 ED 73 08 8C  	ld (Stack),sp
1658  8F58 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1659  8F5C
1660  8F5C DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1661  8F5E FD E5            push iy 												; Pushea Puntero_objeto.
1662  8F60
1663  8F60 ED 7B 08 8C      ld sp,(Stack)
1664  8F64
1665  8F64 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1666  8F67 23           	inc hl
1667  8F68 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1668  8F6B
1669  8F6B CD 6F 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1670  8F6E              ;															; _ el (Contador_de_mov_masticados).
1671  8F6E C9               ret
1672  8F6F
1673  8F6F              ; --------------------------------------------------------------------------------------------------------------
1674  8F6F              ;
1675  8F6F              ;	12/1/24
1676  8F6F              ;
1677  8F6F              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1678  8F6F
1679  8F6F              Actualiza_Puntero_de_almacen_de_mov_masticados
1680  8F6F
1681  8F6F 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1682  8F72 01 04 00     	ld bc,4
1683  8F75 A7           	and a
1684  8F76 ED 4A        	adc hl,bc
1685  8F78 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1686  8F7B C9           	ret
1687  8F7C
1688  8F7C              ; --------------------------------------------------------------------------------------------------------------
1689  8F7C              ;
1690  8F7C              ;	24/03/24
1691  8F7C              ;
1692  8F7C              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1693  8F7C              ;
1694  8F7C              ;	IX contiene el puntero de impresión.
1695  8F7C              ;	DE contiene (Puntero_objeto).
1696  8F7C
1697  8F7C
1698  8F7C              Cargamos_registros_con_mov_masticado
1699  8F7C
1700  8F7C ED 73 08 8C  	ld (Stack),sp
1701  8F80 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1702  8F84
1703  8F84 D1           	pop de 															; DE contiene Puntero_objeto
1704  8F85 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1705  8F87
1706  8F87 ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1707  8F8B ED 7B 08 8C  	ld sp,(Stack)
1708  8F8F
1709  8F8F 7B           	ld a,e
1710  8F90 82           	add d															; Comprueba si ya no hay datos en el almacén.
1711  8F91
1712  8F91 CC 2F 93     	call z,Reinicia_entidad_maliciosa
1713  8F94
1714  8F94 C9           	ret
1715  8F95
1716  8F95              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1717  8F95              ;
1718  8F95              ;	22/7/24
1719  8F95
1720  8F95              Cargamos_registros_con_explosion
1721  8F95
1722  8F95
1723  8F95 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1724  8F98 CD 39 90     	call Extrae_address
1725  8F9B
1726  8F9B 5D           	ld e,l
1727  8F9C 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1728  8F9D
1729  8F9D DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1730  8FA1
1731  8FA1 C9           	ret
1732  8FA2
1733  8FA2
1734  8FA2              Cargamos_registros_con_explosion_Amadeus
1735  8FA2
1736  8FA2 2A 77 89     	ld hl,(Pamm_Amadeus)
1737  8FA5 CD 39 90     	call Extrae_address
1738  8FA8
1739  8FA8 5D           	ld e,l
1740  8FA9 54           	ld d,h
1741  8FAA
1742  8FAA DD 2A 75 89  	ld ix,(p.imp.amadeus)
1743  8FAE
1744  8FAE C9           	ret
1745  8FAF
1746  8FAF              ; --------------------------------------------------------------------------------------------------------------
1747  8FAF              ;
1748  8FAF              ;	17/06/24
1749  8FAF              ;
1750  8FAF              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1751  8FAF              ;
1752  8FAF              ;	IX contiene el puntero de impresión.
1753  8FAF              ;	DE contiene (Puntero_objeto).
1754  8FAF
1755  8FAF
1756  8FAF              Cargamos_registros_con_mov_masticado_Amadeus
1757  8FAF
1758  8FAF ED 73 08 8C  	ld (Stack),sp
1759  8FB3 ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1760  8FB7 D1           	pop de 															; DE contiene Puntero_objeto
1761  8FB8 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1762  8FBA DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1763  8FBE ED 7B 08 8C  	ld sp,(Stack)
1764  8FC2 C9           	ret
1765  8FC3
1766  8FC3              ; ---------------------------------------------------------------------------------------------------------------------
1767  8FC3              ;
1768  8FC3              ;	18/6/24
1769  8FC3              ;
1770  8FC3              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1771  8FC3
1772  8FC3              Genera_datos_de_impresion_Amadeus
1773  8FC3
1774  8FC3 3A 74 89     	ld a,(Impacto_Amadeus)
1775  8FC6 A7           	and a
1776  8FC7 20 03        	jr nz,1F
1777  8FC9
1778  8FC9              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1779  8FC9              ; _apuntando a la correspondiente explosión.
1780  8FC9
1781  8FC9 CD AF 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1782  8FCC
1783  8FCC DD 7D        1 ld a,ixl
1784  8FCE E6 1F        	and $1f
1785  8FD0 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1786  8FD3
1787  8FD3 2A 23 8C     	ld hl,(Scanlines_album_SP)
1788  8FD6 E5           	push hl
1789  8FD7
1790  8FD7 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1791  8FDA 22 23 8C     	ld (Scanlines_album_SP),hl
1792  8FDD
1793  8FDD CD 84 94     	call Genera_datos_de_impresion
1794  8FE0
1795  8FE0 E1           	pop hl
1796  8FE1 22 23 8C     	ld (Scanlines_album_SP),hl
1797  8FE4
1798  8FE4 C9           	ret
1799  8FE5
1800  8FE5              ; ---------------------------------------------------------------------------------------------------------------------
1801  8FE5              ;
1802  8FE5              ;	13/03/24
1803  8FE5              ;
1804  8FE5              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1805  8FE5
1806  8FE5              Inicia_albumes_de_lineas
1807  8FE5
1808  8FE5 21 00 80     	ld hl,Scanlines_album
1809  8FE8 22 0C 8C     	ld (Album_de_pintado),hl
1810  8FEB 22 23 8C     	ld (Scanlines_album_SP),hl
1811  8FEE
1812  8FEE 21 1A 81     	ld hl,Scanlines_album_2
1813  8FF1 22 0E 8C     	ld (Album_de_borrado),hl
1814  8FF4
1815  8FF4 C9           	ret
1816  8FF5
1817  8FF5              Inicia_albumes_de_lineas_Amadeus
1818  8FF5
1819  8FF5 21 34 82     	ld hl,Amadeus_scanlines_album
1820  8FF8 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1821  8FFB 21 58 82     	ld hl,Amadeus_scanlines_album_2
1822  8FFE 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1823  9001
1824  9001 C9           	ret
1825  9002
1826  9002              Inicia_albumes_de_disparos
1827  9002
1828  9002 21 7C 82     	ld hl,Disparos_scanlines_album
1829  9005 22 14 8C     	ld (Album_de_pintado_disparos),hl
1830  9008 21 8E 82     	ld hl,Disparos_scanlines_album_2
1831  900B 22 16 8C     	ld (Album_de_borrado_disparos),hl
1832  900E
1833  900E 21 7C 82     	ld hl,Disparos_scanlines_album
1834  9011 22 18 8C     	ld (Nivel_scanlines_disparos_album),hl
1835  9014
1836  9014 C9           	ret
1837  9015
1838  9015              ; ---------------------------------------------------------------------------------------------------------------------
1839  9015              ;
1840  9015              ; 8/1/23
1841  9015              ;
1842  9015              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1843  9015              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1844  9015              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1845  9015
1846  9015              ; Destruye HL y DE !!!!!
1847  9015
1848  9015              Inicia_punteros_de_cajas
1849  9015
1850  9015 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1851  9018 CD 39 90         call Extrae_address
1852  901B 22 FB 8B         ld (Puntero_store_caja),hl
1853  901E 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1854  9021 22 FF 8B     	ld (Indice_restore_caja),hl
1855  9024 CD 39 90     	call Extrae_address
1856  9027 22 FD 8B     	ld (Puntero_restore_caja),hl
1857  902A C9               ret
1858  902B
1859  902B              ; *************************************************************************************************************************************************************
1860  902B              ;
1861  902B              ; 8/1/23
1862  902B              ;
1863  902B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1864  902B
1865  902B 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1866  902E 22 2C 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1867  9031 C9           	ret
1868  9032 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1869  9035 22 2E 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1870  9038 C9           	ret
1871  9039
1872  9039              ; *************************************************************************************************************************************************************
1873  9039              ;
1874  9039              ; 20/10/22
1875  9039              ;
1876  9039              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1877  9039              ;
1878  9039              ; Destruye el puntero y DE !!!!!
1879  9039
1880  9039 5E           Extrae_address ld e,(hl)
1881  903A 23           	inc hl
1882  903B 56           	ld d,(hl)
1883  903C 2B           	dec hl
1884  903D EB           	ex de,hl
1885  903E C9           	ret
1886  903F
1887  903F              ; *************************************************************************************************************************************************************
1888  903F              ;
1889  903F              ;	20/1/24
1890  903F              ;
1891  903F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1892  903F              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1893  903F              ;
1894  903F              ;   Destruye HL y BC !!!!!,
1895  903F              ;
1896  903F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1897  903F              ;					"0" ..... Izquierda.
1898  903F
1899  903F              Inicia_Puntero_objeto
1900  903F
1901  903F 3A DA 8B     	ld a,(Cuad_objeto)
1902  9042 E6 01        	and 1
1903  9044 F5           	push af
1904  9045 CC 61 90     	call z,Inicia_puntero_objeto_izq
1905  9048 F1           	pop af
1906  9049 C8           	ret z
1907  904A CD 4E 90     	call Inicia_puntero_objeto_der
1908  904D C9           	ret
1909  904E
1910  904E              ; Arrancamos desde la parte izquierda de la pantalla.
1911  904E              ; Iniciamos (Indice_Sprite_der).
1912  904E
1913  904E 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1914  9051 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1915  9054 CD 39 90     	call Extrae_address
1916  9057 22 CD 8B     	ld (Puntero_objeto),hl
1917  905A
1918  905A 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1919  905D 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1920  9060 C9           	ret
1921  9061
1922  9061              ; Arrancamos desde la parte derecha de la pantalla.
1923  9061              ; Iniciamos (Indice_Sprite_izq).
1924  9061
1925  9061 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1926  9064 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1927  9067 CD 39 90     	call Extrae_address
1928  906A 22 CD 8B     	ld (Puntero_objeto),hl
1929  906D
1930  906D 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1931  9070 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1932  9073 C9           	ret
1933  9074
1934  9074              ; **************************************************************************************************
1935  9074              ;
1936  9074              ;	06/07/24
1937  9074              ;
1938  9074              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1939  9074
1940  9074              Restore_entidad
1941  9074
1942  9074 2A FB 8B     	ld hl,(Puntero_store_caja)
1943  9077 7E           	ld a,(hl)
1944  9078 A7           	and a
1945  9079 CC 87 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1946  907C 28 F6        	jr z,Restore_entidad
1947  907E
1948  907E 11 BB 8B     	ld de,Bandeja_DRAW
1949  9081 01 0C 00     	ld bc,12
1950  9084 ED B0        	ldir
1951  9086 C9           	ret
1952  9087
1953  9087              ; **************************************************************************************************
1954  9087              ;
1955  9087              ;	08/05/23
1956  9087              ;
1957  9087              ;	Incrementamos los dos punteros de entidades. (+1).
1958  9087
1959  9087              Incrementa_punteros_de_cajas
1960  9087
1961  9087 2A FD 8B     	ld hl,(Puntero_restore_caja)
1962  908A 22 FB 8B     	ld (Puntero_store_caja),hl
1963  908D 2A FF 8B     	ld hl,(Indice_restore_caja)
1964  9090 23           	inc hl
1965  9091 23           	inc hl
1966  9092 22 FF 8B     	ld (Indice_restore_caja),hl
1967  9095 CD 39 90         call Extrae_address
1968  9098 22 FD 8B         ld (Puntero_restore_caja),hl
1969  909B C9               ret
1970  909C
1971  909C              ; -----------------------------------------------------------
1972  909C
1973  909C              ; Teclado.
1974  909C
1975  909C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1976  909E DB FE        	in a,($fe)
1977  90A0 E6 01        	and $01
1978  90A2 28 02        	jr z,1f
1979  90A4 18 F6        	jr Pulsa_ENTER
1980  90A6 C9           1 ret
1981  90A7
1982  90A7              ; **************************************************************************************************
1983  90A7              ;
1984  90A7              ; Temporización.
1985  90A7
1986  90A7              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1987  90A7              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1988  90A7              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1989  90A7              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1990  90A7
1991  90A7              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1992  90A7              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1993  90A7              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1994  90A7
1995  90A7              ; A partir de $4f61 no hace falta DELAY.
1996  90A7
1997  90A7              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1998  90A7
1999  90A7              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
2000  90A7              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
2001  90A7              ;	LD A,B
2002  90A7              ;	AND A
2003  90A7              ;	JR NZ,wait
2004  90A7              ;	RET
2005  90A7
2006  90A7              ; ---------------------------------------------------------------------------------------------------------------
2007  90A7              ;
2008  90A7              ;	13/07/24
2009  90A7              ;
2010  90A7
2011  90A7              Inicia_Shield
2012  90A7
2013  90A7 21 49 8C     	ld hl,Datos_Shield
2014  90AA 22 4D 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
2015  90AD
2016  90AD 7E           	ld a,(hl)
2017  90AE 32 50 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
2018  90B1
2019  90B1 3E 01        	ld a,1
2020  90B3 32 51 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2021  90B6
2022  90B6 C9           	ret
2023  90B7
2024  90B7              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2025  90B7              ;
2026  90B7              ;	4/6/24
2027  90B7              ;
2028  90B7              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2029  90B7              ;
2030  90B7              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2031  90B7              ;
2032  90B7
2033  90B7              Actualiza_pantalla
2034  90B7
2035  90B7 3E 02        	ld a,2
2036  90B9 D3 FE        	out ($fe),a
2037  90BB
2038  90BB 3A 29 8C     	ld a,(Ctrl_3)
2039  90BE CB 57        	bit 2,a
2040  90C0 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2041  90C2
2042  90C2              Borrando_entidades
2043  90C2
2044  90C2 2A 23 8C     	ld hl,(Scanlines_album_SP)
2045  90C5 CD 39 90     	call Extrae_address
2046  90C8 24           	inc h
2047  90C9 25           	dec h
2048  90CA 28 05        	jr z,Pintando_entidades
2049  90CC CD 79 95     	call Pinta_Sprites
2050  90CF 18 F1        	jr Borrando_entidades
2051  90D1
2052  90D1              Pintando_entidades
2053  90D1
2054  90D1 2A 25 8C     	ld hl,(India_SP)
2055  90D4 2C           	inc l
2056  90D5 CD 39 90     	call Extrae_address
2057  90D8 24           	inc h
2058  90D9 25           	dec h
2059  90DA 28 0E        	jr z,Ejecuta_escudo
2060  90DC 1C           	inc e
2061  90DD 1C           	inc e
2062  90DE ED 53 25 8C  	ld (India_SP),de
2063  90E2 CD 39 90     	call Extrae_address
2064  90E5 CD 79 95     	call Pinta_Sprites
2065  90E8 18 E7        	jr Pintando_entidades
2066  90EA
2067  90EA              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2068  90EA
2069  90EA              Ejecuta_escudo
2070  90EA
2071  90EA 3A 4F 8C     	ld a,(Shield)
2072  90ED A7           	and a
2073  90EE 20 2F        	jr nz,Aplica_Shield
2074  90F0
2075  90F0              Borrando_Amadeus
2076  90F0
2077  90F0 21 29 8C     	ld hl,Ctrl_3
2078  90F3 CB 6E        	bit 5,(hl)
2079  90F5 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2080  90F7
2081  90F7 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2082  90FA CD 39 90     	call Extrae_address
2083  90FD 24           	inc h
2084  90FE 25           	dec h
2085  90FF 28 03        	jr z,Pintando_Amadeus
2086  9101 CD 79 95     	call Pinta_Sprites
2087  9104
2088  9104              Pintando_Amadeus
2089  9104
2090  9104 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2091  9107 CD 39 90     	call Extrae_address
2092  910A 24           	inc h
2093  910B 25           	dec h
2094  910C 28 03        	jr z,1F
2095  910E CD 79 95     	call Pinta_Sprites
2096  9111
2097  9111              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2098  9111
2099  9111 21 29 8C     1 ld hl,Ctrl_3
2100  9114 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2101  9116 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2102  9118 CB AE        	res 5,(hl)
2103  911A
2104  911A 3E 01        	ld a,1												; Borde azul.
2105  911C D3 FE        	out ($fe),a
2106  911E
2107  911E C9           	ret
2108  911F
2109  911F
2110  911F
2111  911F              Aplica_Shield
2112  911F
2113  911F              ;	Bit 1 "1" (Shield_3) Sólo borra.
2114  911F              ;		  "0"     ""     Borra/Pinta.
2115  911F              ;	Bit 2    ""  RET.	 No borra, no pinta.
2116  911F
2117  911F 21 51 8C     	ld hl,Shield_3
2118  9122
2119  9122 CB 5E        	bit 3,(hl)
2120  9124 20 DE        	jr nz,Pintando_Amadeus
2121  9126
2122  9126 CB 56        	bit 2,(hl)
2123  9128 20 E7        	jr nz,1B
2124  912A
2125  912A CB 4E        	bit 1,(hl)
2126  912C C4 33 91     	call nz,Borra_Amadeus_shield
2127  912F
2128  912F 28 BF        	jr z,Borrando_Amadeus
2129  9131 18 DE        	jr 1B
2130  9133
2131  9133              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2132  9133
2133  9133              Borra_Amadeus_shield
2134  9133
2135  9133 3A 29 8C     	ld a,(Ctrl_3)
2136  9136 CB 6F        	bit 5,a
2137  9138 28 08        	jr z,1F
2138  913A
2139  913A 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2140  913D CD 39 90     	call Extrae_address
2141  9140 18 06        	jr 2F
2142  9142
2143  9142 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2144  9145 CD 39 90     	call Extrae_address
2145  9148
2146  9148 CD 79 95     2 call Pinta_Sprites
2147  914B
2148  914B AF           	xor a
2149  914C 3C           	inc a											; Asegura NZ en la salida de la rutina.
2150  914D
2151  914D C9           	ret
2152  914E
2153  914E              Pinta_Amadeus_shield
2154  914E
2155  914E 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2156  9151 CD 39 90     	call Extrae_address
2157  9154 CD 79 95     	call Pinta_Sprites
2158  9157
2159  9157 AF           	xor a
2160  9158 3C           	inc a											; Asegura NZ en la salida de la rutina.
2161  9159
2162  9159 C9           	ret
2163  915A
2164  915A              Borra_Pinta_Amadeus_shield
2165  915A
2166  915A CD 33 91     	call Borra_Amadeus_shield
2167  915D CD 4E 91     	call Pinta_Amadeus_shield
2168  9160 C9           	ret
2169  9161
2170  9161              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2171  9161              ;
2172  9161              ;	19/6/24
2173  9161              ;
2174  9161
2175  9161              Teclado
2176  9161
2177  9161              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2178  9161
2179  9161 3E F7        	ld a,$f7												; "5" para disparar.
2180  9163 DB FE        	in a,($fe)
2181  9165 E6 10        	and $10
2182  9167
2183  9167 CC 14 9F     	call z,Genera_disparo_Amadeus
2184  916A
2185  916A 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2186  916C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2187  916E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2188  9170 CC E6 9C         call z,Amadeus_a_izquierda
2189  9173
2190  9173 3E F7        	ld a,$f7
2191  9175 DB FE        	in a,($fe)
2192  9177 E6 01        	and $01
2193  9179 C8           	ret z
2194  917A
2195  917A 3E F7        	ld a,$f7
2196  917C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2197  917E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2198  9180 CC FE 9C     	call z,Amadeus_a_derecha
2199  9183
2200  9183 C9           	ret
2201  9184
2202  9184              ; ------------------------------------------------------------------------------------------------------------------------
2203  9184              ;
2204  9184              ;	06/07/24
2205  9184              ;
2206  9184
2207  9184              Genera_explosion
2208  9184
2209  9184 21 3B 8C     	ld hl,Clock_explosion
2210  9187 35           	dec (hl)
2211  9188 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2212  918A
2213  918A              Borra_entidad_colisionada
2214  918A
2215  918A CD 90 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2216  918D CD 95 8F     	call Cargamos_registros_con_explosion
2217  9190 CD 84 94     	call Genera_datos_de_impresion
2218  9193
2219  9193 AF           	xor a
2220  9194 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2221  9195
2222  9195 C9           	ret
2223  9196
2224  9196              Siguiente_frame_explosion
2225  9196
2226  9196 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2227  9198
2228  9198              ; Avanza Frame de explosión.
2229  9198
2230  9198 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2231  919B 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2232  919E
2233  919E 79           	ld a,c
2234  919F 95           	sub l
2235  91A0 20 0B        	jr nz,1F
2236  91A2
2237  91A2              ; Fín de la entidad !!!!!!!!!!!!!
2238  91A2
2239  91A2 21 02 8C     	ld hl,Numero_parcial_de_entidades
2240  91A5 35           	dec (hl)
2241  91A6 23           	inc hl
2242  91A7 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2243  91A8
2244  91A8 CD 04 93     	call Limpiamos_bandeja_DRAW
2245  91AB 18 DD        	jr Borra_entidad_colisionada
2246  91AD
2247  91AD 23           1 inc hl
2248  91AE 23           	inc hl
2249  91AF 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2250  91B2 18 D6        	jr Borra_entidad_colisionada
2251  91B4
2252  91B4              ; ----- ----- ----- ----- -----
2253  91B4
2254  91B4              Genera_explosion_Amadeus
2255  91B4
2256  91B4 21 3C 8C     	ld hl,Clock_explosion_Amadeus
2257  91B7 35           	dec (hl)
2258  91B8 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2259  91BA
2260  91BA              Borra_Amadeus_impactado
2261  91BA
2262  91BA CD 20 8E     	call Change_Amadeus
2263  91BD CD A2 8F     	call Cargamos_registros_con_explosion_Amadeus
2264  91C0 CD C3 8F     	call Genera_datos_de_impresion_Amadeus
2265  91C3
2266  91C3 21 29 8C     	ld hl,Ctrl_3
2267  91C6 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2268  91C8
2269  91C8 AF           	xor a
2270  91C9 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2271  91CA
2272  91CA C9           	ret
2273  91CB
2274  91CB              Siguiente_frame_explosion_Amadeus
2275  91CB
2276  91CB 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2277  91CD
2278  91CD              ; Avanza Frame de explosión.
2279  91CD
2280  91CD 2A 77 89     	ld hl,(Pamm_Amadeus)
2281  91D0 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2282  91D3
2283  91D3 79           	ld a,c
2284  91D4 95           	sub l
2285  91D5 20 0B        	jr nz,1F
2286  91D7
2287  91D7              ; Fín de Amadeus !!!!!!!!!!!!!
2288  91D7              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2289  91D7
2290  91D7 AF           	xor a
2291  91D8 32 74 89     	ld (Impacto_Amadeus),a
2292  91DB 21 29 8C     	ld hl,Ctrl_3
2293  91DE CB F6        	set 6,(hl)
2294  91E0
2295  91E0 18 D8        	jr Borra_Amadeus_impactado
2296  91E2
2297  91E2 23           1 inc hl
2298  91E3 23           	inc hl
2299  91E4 22 77 89     	ld (Pamm_Amadeus),hl
2300  91E7 18 D1        	jr Borra_Amadeus_impactado
2301  91E9
2302  91E9              ; ---------------------------------------------------------------
2303  91E9
2304  91E9              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 91E9              ; ******************************************************************************************************************************************************************************************
   2+ 91E9              ;
   3+ 91E9              ;   21/04/24
   4+ 91E9              ;
   5+ 91E9              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 91E9              ;   (XOR) bit a bit.
   7+ 91E9              ;
   8+ 91E9              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 91E9
  10+ 91E9              Derivando_RND
  11+ 91E9
  12+ 91E9 21 F6 88         ld hl,Numeros_aleatorios
  13+ 91EC
  14+ 91EC ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 91EE C5               push bc
  16+ 91EF              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 91EF 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 91F2              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 91F2
  20+ 91F2 A7           6 and a                                 ; Carry a "0".
  21+ 91F3 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 91F5 30 02            jr nc,1F
  23+ 91F7
  24+ 91F7 CB C1            set 0,c
  25+ 91F9
  26+ 91F9 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 91FA E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 91FC 5F               ld e,a
  29+ 91FD
  30+ 91FD 7A               ld a,d
  31+ 91FE E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9200 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9202
  34+ 9202 CB 3F            srl a
  35+ 9204
  36+ 9204 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9205
  38+ 9205 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9206 28 04            jr z,4F
  40+ 9208
  41+ 9208 CB FF            set 7,a
  42+ 920A 18 02            jr 5F
  43+ 920C
  44+ 920C CB BF        4 res 7,a
  45+ 920E
  46+ 920E CB 21        5 sla c
  47+ 9210 10 E0            djnz 6B
  48+ 9212
  49+ 9212 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9213
  51+ 9213 77               ld (hl),a
  52+ 9214 23               inc hl
  53+ 9215 C1               pop bc
  54+ 9216 10 D4            djnz 3B
  55+ 9218
  56+ 9218 C9               ret
  57+ 9219
  58+ 9219
  59+ 9219
# file closed: RND_Derivando.asm
2305  9219              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9219              ;---------------------------------------------------------------------------------------------------------------
   2+ 9219              ;
   3+ 9219              ;   8/3/24
   4+ 9219              ;
   5+ 9219              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9219              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9219              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9219              ;	_ de la 1ª entidad del Nivel.
   9+ 9219              ;
  10+ 9219              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9219
  12+ 9219              ;	MODIFICA: HL,DE y A.
  13+ 9219              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9219
  15+ 9219              Inicializa_Nivel
  16+ 9219
  17+ 9219 2A 45 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 921C CD 39 90     	call Extrae_address
  19+ 921F 7E           	ld a,(hl)
  20+ 9220 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9223 23           	inc hl
  22+ 9224 CD 31 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9227 22 47 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 922A CD 3A 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 922D
  26+ 922D CD 4B 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9230 C9           	ret
  28+ 9231
  29+ 9231              ; ----------------------
  30+ 9231
  31+ 9231 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9234 01 04 00     	ld bc,4
  33+ 9237 ED B0        	ldir
  34+ 9239 C9           	ret
  35+ 923A
  36+ 923A 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 923B CD D5 93         call Calcula_salto_en_BC
  38+ 923E 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9241 A7               and a
  40+ 9242 ED 4A            adc hl,bc
  41+ 9244 CD 39 90         call Extrae_address
  42+ 9247 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 924A C9               ret
  44+ 924B
  45+ 924B 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 924E CD D5 93     	call Calcula_salto_en_BC
  47+ 9251 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9254 A7               and a
  49+ 9255 ED 4A            adc hl,bc
  50+ 9257 CD 39 90         call Extrae_address
  51+ 925A 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 925D C9           	ret
  53+ 925E
  54+ 925E              ;---------------------------------------------------------------------------------------------------------------
  55+ 925E              ;
  56+ 925E              ;   5/1/24
  57+ 925E              ;
  58+ 925E              ;	Destruye A,BC,HL,DE
  59+ 925E
  60+ 925E              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 925E              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 925E
  63+ 925E              Inicia_Entidades
  64+ 925E
  65+ 925E              ; Preparamos los punteros de las cajas de entidades:
  66+ 925E
  67+ 925E CD 15 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 9261              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 9261 CD 1D 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 9264
  71+ 9264 2A 47 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 9267
  73+ 9267 22 47 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 926A
  75+ 926A CD 83 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 926D
  77+ 926D 2A 47 8C     	ld hl,(Datos_de_nivel)
  78+ 9270
  79+ 9270              ; En este punto:
  80+ 9270              ;
  81+ 9270              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 9270              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 9270
  84+ 9270 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 9271
  86+ 9271 7E           	ld a,(hl)
  87+ 9272 CD EF 92     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 9275
  89+ 9275 CD E7 93     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9278
  91+ 9278              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9278
  93+ 9278 CD A5 93     	call Busca_mov_masticados_segun_tipo
  94+ 927B
  95+ 927B A7           	and a
  96+ 927C 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 927E
  98+ 927E              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 927E
 100+ 927E              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 927E              ;	_ de este tipo de entidad.
 102+ 927E
 103+ 927E CD 7D 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 9281 CD 8A 9E     	call Transfiere_datos_de_contadores
 105+ 9284
 106+ 9284 18 06        	jr 4F
 107+ 9286
 108+ 9286 CD 28 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9289
 110+ 9289              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9289              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9289              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9289              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9289              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9289
 116+ 9289 CD 63 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 928C              ;																; _ Mov_masticados ya generados.
 118+ 928C
 119+ 928C CD 7C 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 928F
 121+ 928F DD E5        	push ix
 122+ 9291 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9292
 124+ 9292 D5           	push de
 125+ 9293 CD 58 94     	call Genera_coordenadas
 126+ 9296
 127+ 9296 ED 5B 23 8C  	ld de,(Scanlines_album_SP)
 128+ 929A CD 90 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 929D D1           	pop de
 130+ 929E
 131+ 929E CD 84 94     	call Genera_datos_de_impresion
 132+ 92A1              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92A1              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92A1              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92A1              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92A1
 137+ 92A1 CD 27 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92A4
 139+ 92A4              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92A4
 141+ 92A4 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92A8 CD 14 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92AB
 144+ 92AB CD 04 93     	call Limpiamos_bandeja_DRAW
 145+ 92AE CD 87 90     	call Incrementa_punteros_de_cajas
 146+ 92B1
 147+ 92B1              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92B1              ; _ entidad del Nivel.
 149+ 92B1
 150+ 92B1 3A 2A 8C     	ld a,(Ctrl_4)
 151+ 92B4 E6 F0        	and $f0
 152+ 92B6 32 2A 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92B9
 154+ 92B9              ; Siguiente entidad del Nivel.
 155+ 92B9
 156+ 92B9 2A 47 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92BC 23           	inc hl 														; _ entidad del Nivel.
 158+ 92BD
 159+ 92BD C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92BE
 161+ 92BE 10 A7        	djnz 2B
 162+ 92C0
 163+ 92C0 C9           	ret
 164+ 92C1
 165+ 92C1              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92C1              ;
 167+ 92C1              ;	27/5/24
 168+ 92C1              ;
 169+ 92C1              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92C1              ;
 171+ 92C1
 172+ 92C1              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92C1              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92C1
 175+ 92C1 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92C4 CD E7 93     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92C7
 178+ 92C7
 179+ 92C7              Construye_movimientos_masticados_Amadeus
 180+ 92C7
 181+ 92C7 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 92CA CD 6F 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 92CD              ;															; _ el (Contador_de_mov_masticados).
 184+ 92CD CD 3F 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 92D0              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 92D0
 187+ 92D0              ; Generamos movimientos masticados de Amadeus.
 188+ 92D0
 189+ 92D0 06 79        	ld b,121												; $0079, 121d.
 190+ 92D2
 191+ 92D2 C5           1 push bc
 192+ 92D3 CD 9C 96     	call Draw
 193+ 92D6 CD 54 8F     	call Guarda_movimiento_masticado
 194+ 92D9
 195+ 92D9 CD 10 9A     	call Mov_right
 196+ 92DC CD 10 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 92DF
 198+ 92DF C1           	pop bc
 199+ 92E0 10 F0        	djnz 1B
 200+ 92E2
 201+ 92E2              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 92E2
 203+ 92E2              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 92E2              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 92E2
 206+ 92E2 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 92E5 01 08 00     	ld bc,8
 208+ 92E8 A7           	and a
 209+ 92E9 ED 42        	sbc hl,bc
 210+ 92EB 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 92EE
 212+ 92EE C9           	ret
 213+ 92EF
 214+ 92EF              ; ---------------------------------------------------------------------
 215+ 92EF              ;
 216+ 92EF              ;	10/02/24
 217+ 92EF              ;
 218+ 92EF              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 92EF              ;
 220+ 92EF              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 92EF
 222+ 92EF              Definicion_segun_tipo
 223+ 92EF
 224+ 92EF CD D5 93     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 92F2 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 92F5 CD DD 93     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 92F8 C9           	ret
 228+ 92F9
 229+ 92F9              ; ---------------------------------------------------------------------
 230+ 92F9              ;
 231+ 92F9              ;	6/7/24
 232+ 92F9
 233+ 92F9
 234+ 92F9              Store_Restore_cajas
 235+ 92F9
 236+ 92F9 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 92FD CD 14 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9300 CD 87 90     	call Incrementa_punteros_de_cajas
 239+ 9303 C9           	ret
 240+ 9304
 241+ 9304              ; ---------------------------------------------------------------------
 242+ 9304              ;
 243+ 9304              ;	23/6/24
 244+ 9304              ;
 245+ 9304              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9304              ;
 247+ 9304              ;	MODIFY: HL
 248+ 9304
 249+ 9304              Limpiamos_bandeja_DRAW
 250+ 9304
 251+ 9304 ED 73 08 8C  	ld (Stack),sp
 252+ 9308 31 E0 8B     	ld sp,Vel_left
 253+ 930B
 254+ 930B AF           	xor a
 255+ 930C 67           	ld h,a
 256+ 930D 6F           	ld l,a
 257+ 930E
 258+ 930E E5           	push hl
 259+ 930F E5           	push hl
 260+ 9310 E5           	push hl
 261+ 9311 E5           	push hl
 262+ 9312 E5           	push hl
 263+ 9313 E5           	push hl
 264+ 9314 E5           	push hl
 265+ 9315 E5           	push hl
 266+ 9316 E5           	push hl
 267+ 9317 E5           	push hl
 268+ 9318 E5           	push hl
 269+ 9319 E5           	push hl
 270+ 931A E5           	push hl
 271+ 931B E5           	push hl
 272+ 931C E5           	push hl
 273+ 931D E5           	push hl
 274+ 931E E5           	push hl
 275+ 931F E5           	push hl
 276+ 9320
 277+ 9320 33           	inc sp
 278+ 9321
 279+ 9321 E5           	push hl
 280+ 9322 ED 7B 08 8C  	ld sp,(Stack)
 281+ 9326
 282+ 9326 C9           	ret
 283+ 9327
 284+ 9327              ; ---------------------------------------------------------------------
 285+ 9327              ;
 286+ 9327              ;	24/03/24
 287+ 9327
 288+ 9327 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 932A 2B           	dec hl
 290+ 932B 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 932E C9           	ret
 292+ 932F
 293+ 932F              ; ---------------------------------------------------------------------
 294+ 932F              ;
 295+ 932F              ;	8/5/24
 296+ 932F
 297+ 932F              Reinicia_entidad_maliciosa
 298+ 932F
 299+ 932F              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 932F
 301+ 932F CD 7D 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9332 CD 8A 9E     	call Transfiere_datos_de_contadores
 303+ 9335
 304+ 9335              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9335
 306+ 9335 3A BB 8B     	ld a,(Tipo)
 307+ 9338 CD EF 92     	call Definicion_segun_tipo
 308+ 933B
 309+ 933B E5           	push hl
 310+ 933C DD E1        	pop ix
 311+ 933E
 312+ 933E DD 6E 0B     	ld l,(ix+11)
 313+ 9341 DD 66 0C     	ld h,(ix+12)
 314+ 9344
 315+ 9344 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9347
 317+ 9347 CD 7C 8F     	call Cargamos_registros_con_mov_masticado
 318+ 934A
 319+ 934A              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 934A              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 934A              ; Ejemplos.
 322+ 934A
 323+ 934A              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 934A              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 934A              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 934A              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 934A              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 934A
 329+ 934A 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 934D CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 934F
 332+ 934F 7E           	ld a,(hl)
 333+ 9350 CB 2F        	sra a
 334+ 9352 CB 2F        	sra a
 335+ 9354
 336+ 9354 32 C6 8B     	ld (Velocidad),a
 337+ 9357
 338+ 9357 3E 40        	ld a,$40
 339+ 9359 BE           	cp (hl)
 340+ 935A C0           	ret nz
 341+ 935B
 342+ 935B              ; Límitador.
 343+ 935B
 344+ 935B              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 935B
 346+ 935B CB 2E        	sra (hl)
 347+ 935D 21 C6 8B     	ld hl,Velocidad
 348+ 9360 CB 2E        	sra (hl)
 349+ 9362
 350+ 9362 C9           	ret
 351+ 9363
 352+ 9363              ; ---------------------------------------------------------------------
 353+ 9363              ;
 354+ 9363              ;	22/01/24
 355+ 9363
 356+ 9363 21 2A 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 9366 CB 46        	bit 0,(hl)
 358+ 9368 20 0D        	jr nz,1F
 359+ 936A CB 4E        	bit 1,(hl)
 360+ 936C 20 0C        	jr nz,2F
 361+ 936E CB 56        	bit 2,(hl)
 362+ 9370 20 0B        	jr nz,3F
 363+ 9372 CB 5E        	bit 3,(hl)
 364+ 9374 20 0A        	jr nz,4F
 365+ 9376 C9           	ret
 366+ 9377
 367+ 9377 CB E6        1 set 4,(hl)
 368+ 9379 C9           	ret
 369+ 937A CB EE        2 set 5,(hl)
 370+ 937C C9           	ret
 371+ 937D CB F6        3 set 6,(hl)
 372+ 937F C9           	ret
 373+ 9380 CB FE        4 set 7,(hl)
 374+ 9382 C9           	ret
 375+ 9383
 376+ 9383              ; ---------------------------------------------------------------------
 377+ 9383              ;
 378+ 9383              ;	23/01/24
 379+ 9383              ;
 380+ 9383              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 9383              ;
 382+ 9383              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 9383              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 9383              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 9383              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 9383
 387+ 9383              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 9383
 389+ 9383 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9384 3D           	dec a
 391+ 9385 20 06        	jr nz,1F
 392+ 9387
 393+ 9387              ; --- Tipo_1
 394+ 9387
 395+ 9387 21 2A 8C     	ld hl,Ctrl_4
 396+ 938A CB C6        	set 0,(hl)
 397+ 938C C9           	ret
 398+ 938D
 399+ 938D 3D           1 dec a
 400+ 938E 20 06        	jr nz,2F
 401+ 9390
 402+ 9390              ; --- Tipo_2
 403+ 9390
 404+ 9390 21 2A 8C     	ld hl,Ctrl_4
 405+ 9393 CB CE        	set 1,(hl)
 406+ 9395 C9           	ret
 407+ 9396
 408+ 9396 3D           2 dec a
 409+ 9397 20 06        	jr nz,3F
 410+ 9399
 411+ 9399              ; --- Tipo_3
 412+ 9399
 413+ 9399 21 2A 8C     	ld hl,Ctrl_4
 414+ 939C CB D6        	set 2,(hl)
 415+ 939E C9           	ret
 416+ 939F
 417+ 939F              ; --- Tipo_3
 418+ 939F
 419+ 939F 21 2A 8C     3 ld hl,Ctrl_4
 420+ 93A2 CB D6        	set 2,(hl)
 421+ 93A4 C9           	ret
 422+ 93A5
 423+ 93A5              ; ---------------------------------------------------------------------
 424+ 93A5              ;
 425+ 93A5              ;	22/01/24
 426+ 93A5
 427+ 93A5 21 2A 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93A8 CB 46        	bit 0,(hl)
 429+ 93AA 20 0E        	jr nz,1F
 430+ 93AC
 431+ 93AC CB 4E        	bit 1,(hl)
 432+ 93AE 20 10        	jr nz,2F
 433+ 93B0
 434+ 93B0 CB 56        	bit 2,(hl)
 435+ 93B2 20 12        	jr nz,3F
 436+ 93B4
 437+ 93B4 CB 5E        	bit 3,(hl)
 438+ 93B6 20 14        	jr nz,4F
 439+ 93B8 18 19        	jr 6F
 440+ 93BA
 441+ 93BA              ; Entidad_de_Tipo_1.
 442+ 93BA
 443+ 93BA CB 66        1 bit 4,(hl)
 444+ 93BC 28 15        	jr z,6F
 445+ 93BE 18 10        	jr 5F
 446+ 93C0
 447+ 93C0              ; Entidad_de_Tipo_2.
 448+ 93C0
 449+ 93C0 CB 6E        2 bit 5,(hl)
 450+ 93C2 28 0F        	jr z,6F
 451+ 93C4 18 0A        	jr 5F
 452+ 93C6
 453+ 93C6              ; Entidad_de_Tipo_3.
 454+ 93C6
 455+ 93C6 CB 76        3 bit 6,(hl)
 456+ 93C8 28 09        	jr z,6F
 457+ 93CA 18 04        	jr 5F
 458+ 93CC
 459+ 93CC              ; Entidad_de_Tipo_4.
 460+ 93CC
 461+ 93CC CB 7E        4 bit 7,(hl)
 462+ 93CE 28 03        	jr z,6F
 463+ 93D0
 464+ 93D0              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 93D0
 466+ 93D0 AF           5 xor a
 467+ 93D1 3C           	inc a
 468+ 93D2 C9           	ret
 469+ 93D3
 470+ 93D3              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 93D3
 472+ 93D3 AF           6 xor a
 473+ 93D4 C9           	ret
 474+ 93D5
 475+ 93D5              ;	------------------------------------------------------------------------------------
 476+ 93D5              ;
 477+ 93D5              ;	12/01/24
 478+ 93D5              ;
 479+ 93D5              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 93D5              ;
 481+ 93D5              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 93D5              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 93D5
 484+ 93D5 CB 27        Calcula_salto_en_BC sla a
 485+ 93D7 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 93D9 4F           	ld c,a
 487+ 93DA 06 00        	ld b,0
 488+ 93DC C9           	ret
 489+ 93DD
 490+ 93DD              ; ------------------------------------------------------------------
 491+ 93DD              ;
 492+ 93DD              ;	19/1/24
 493+ 93DD              ;
 494+ 93DD              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 93DD              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 93DD
 497+ 93DD A7           Situa_en_datos_de_definicion and a
 498+ 93DE ED 4A        	adc hl,bc
 499+ 93E0 CD 39 90     	call Extrae_address
 500+ 93E3 22 06 8C         ld (Datos_de_entidad),hl
 501+ 93E6 C9           	ret
 502+ 93E7
 503+ 93E7              ; ------------------------------------------------------------------
 504+ 93E7
 505+ 93E7              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 93E7              ; 	inc de
 507+ 93E7              ; 	inc de
 508+ 93E7              ; 	ex de,hl
 509+ 93E7              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 93E7              ; 	ret
 511+ 93E7
 512+ 93E7              ; ----------------------------------------------------------------------------------------------------------
 513+ 93E7              ;
 514+ 93E7              ;	24/6/24
 515+ 93E7              ;
 516+ 93E7              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 93E7              ;	_ de entidad.
 518+ 93E7              ;
 519+ 93E7              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 93E7              ;
 521+ 93E7              ;
 522+ 93E7              ;	MODIFICA: HL,DE y BC
 523+ 93E7
 524+ 93E7
 525+ 93E7              Definicion_de_entidad_a_bandeja_DRAW
 526+ 93E7
 527+ 93E7 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 93EA 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 93EB 12           	ld (de),a
 530+ 93EC 23           	inc hl
 531+ 93ED              ;
 532+ 93ED 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 93F0 01 02 00     	ld bc,2
 534+ 93F3 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 93F5              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 93F5 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 93F8 7E           	ld a,(hl)
 538+ 93F9 12           	ld (de),a
 539+ 93FA 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 93FB
 541+ 93FB 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 93FE 01 04 00     	ld bc,4
 543+ 9401 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9403
 545+ 9403 11 D8 8B     	ld de,Posicion_inicio
 546+ 9406 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9409 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 940B
 549+ 940B 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 940E 01 02 00     	ld bc,2
 551+ 9411 ED B0        	ldir
 552+ 9413
 553+ 9413 C9           	ret
 554+ 9414
 555+ 9414              ; ----------------------------------------------------------------------------------------------------------
 556+ 9414              ;
 557+ 9414              ;	1/8/24
 558+ 9414              ;
 559+ 9414
 560+ 9414              Parametros_de_bandeja_DRAW_a_caja
 561+ 9414
 562+ 9414 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 9417 01 0C 00     	ld bc,12
 564+ 941A ED B0        	ldir
 565+ 941C C9           	ret
 566+ 941D
 567+ 941D              ;---------------------------------------------------------------------------------------------------------------
 568+ 941D              ;
 569+ 941D              ;	5/1/24
 570+ 941D              ;
 571+ 941D              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 941D              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 941D              ;
 574+ 941D              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 941D              ;
 576+ 941D              ;	(Numero_parcial_de_entidades)="7".
 577+ 941D              ;
 578+ 941D              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 941D              ;
 580+ 941D              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 941D              ;
 582+ 941D              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 941D              ;	MODIFICA: A y B.
 584+ 941D              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 941D
 586+ 941D              Inicializa_Numero_parcial_de_entidades
 587+ 941D
 588+ 941D              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 941D
 590+ 941D 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 9420 A7           	and a
 592+ 9421
 593+ 9421              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9421              ;	jr z,$
 595+ 9421              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9421
 597+ 9421 20 03        	jr nz,3F
 598+ 9423
 599+ 9423              ; ---------- ---------- ----------
 600+ 9423
 601+ 9423              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9423              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9423
 604+ 9423 CD 19 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9426
 606+ 9426              ; ---------- ---------- ----------
 607+ 9426
 608+ 9426 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9429 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 942B 38 08        	jr c,1F
 611+ 942D
 612+ 942D              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 942D              ; Actualizamos variables.
 614+ 942D
 615+ 942D 3E 07        	ld a,7
 616+ 942F 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9432 47           	ld b,a
 618+ 9433 18 04        	jr 2F
 619+ 9435
 620+ 9435              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9435              ; (Numero_de_entidades)="0".
 622+ 9435
 623+ 9435 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9438 47           	ld b,a
 625+ 9439 C9           2 ret
 626+ 943A
# file closed: Rutinas_de_inicio_y_niveles.asm
2306  943A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 943A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 943A              ;
   3+ 943A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 943A              ;
   5+ 943A              ; *****************************************************************************************************************************************************************************************
   6+ 943A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 943A
   8+ 943A 7C           calcula_tercio ld a,h
   9+ 943B E6 18        	and $18
  10+ 943D CB 2F        	sra a
  11+ 943F CB 2F        	sra a
  12+ 9441 CB 2F        	sra a
  13+ 9443 C9           	ret
  14+ 9444
# file closed: calcula_tercio.asm
2307  9444              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9444              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9444              ;
   3+ 9444              ;
   4+ 9444              ;	CLS.
   5+ 9444              ;
   6+ 9444              ;	Limpia la pantalla y define sus atributos.
   7+ 9444              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9444              ;
   9+ 9444              ;	COLORES: 0 ..... NEGRO
  10+ 9444              ;    		 1 ..... AZUL
  11+ 9444              ; 			 2 ..... ROJO
  12+ 9444              ;			 3 ..... MAGENTA
  13+ 9444              ; 			 4 ..... VERDE
  14+ 9444              ; 			 5 ..... CIAN
  15+ 9444              ;			 6 ..... AMARILLO
  16+ 9444              ; 			 7 ..... BLANCO
  17+ 9444              ;
  18+ 9444              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9444              ;
  20+ 9444              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9444
  22+ 9444
  23+ 9444 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9447 11 01 40     	LD DE,$4001
  25+ 944A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 944D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 944F ED B0        	LDIR
  28+ 9451 01 FF 02     	LD BC,767
  29+ 9454 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9455 ED B0        	LDIR
  31+ 9457 C9           	ret
  32+ 9458
# file closed: Cls.asm
2308  9458              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9458              ; ------------------------------------------------------------------------
   2+ 9458              ;
   3+ 9458              ;	30/1/24
   4+ 9458              ;
   5+ 9458              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9458              ;	Fila superior "0", Columna izquierda "0".
   7+ 9458              ;
   8+ 9458              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9458              ;
  10+ 9458              ;	Modifica: A,BC y DE.
  11+ 9458
  12+ 9458 7D           Genera_coordenadas ld a,l
  13+ 9459 E6 1F        	and $1f
  14+ 945B 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 945E
  16+ 945E 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 945F FE 40        	cp $40
  18+ 9461 38 1C        	jr c,4F
  19+ 9463
  20+ 9463 CD 3A 94     	call calcula_tercio
  21+ 9466 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9467
  23+ 9467 1E 00        	ld e,0
  24+ 9469 7D           	ld a,l
  25+ 946A E6 E0        	and $e0
  26+ 946C 28 01        	jr z,1F
  27+ 946E 04           	inc b
  28+ 946F
  29+ 946F 04           1 inc b
  30+ 9470 05           	dec b
  31+ 9471 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9473              ;														; _ , salimos.
  33+ 9473 1C           3 inc e
  34+ 9474 D6 20        	sub 32
  35+ 9476 20 FB        	jr nz,3B
  36+ 9478 10 F5        	djnz 1B
  37+ 947A
  38+ 947A 7B           2 ld a,e
  39+ 947B 32 BD 8B     	ld (Coordenada_y),a
  40+ 947E C9           	ret
  41+ 947F
  42+ 947F AF           4 xor a
  43+ 9480 32 BD 8B     	ld (Coordenada_y),a
  44+ 9483 C9           	ret
  45+ 9484
# file closed: Genera_coordenadas.asm
2309  9484              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9484              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9484              ;
   3+ 9484              ;	11/03/24
   4+ 9484              ;
   5+ 9484              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9484              ;   DE contiene Puntero_objeto.
   7+ 9484              ;   IX contiene el Puntero de impresión.
   8+ 9484
   9+ 9484              Genera_datos_de_impresion
  10+ 9484
  11+ 9484 ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9488
  13+ 9488 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 948B DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 948D
  16+ 948D 2A 23 8C         ld hl,(Scanlines_album_SP)
  17+ 9490
  18+ 9490 3E 05            ld a,5
  19+ 9492 85               add l
  20+ 9493 6F               ld l,a
  21+ 9494
  22+ 9494 F9               ld sp,hl
  23+ 9495 22 23 8C         ld (Scanlines_album_SP),hl
  24+ 9498
  25+ 9498 21 00 00         ld hl,0
  26+ 949B
  27+ 949B DD E5            push ix
  28+ 949D 3B               dec sp
  29+ 949E ED 7A            adc hl,sp
  30+ 94A0 D5               push de
  31+ 94A1
  32+ 94A1              ; Recuperamos SP.
  33+ 94A1
  34+ 94A1 ED 7B 08 8C      ld sp,(Stack)
  35+ 94A5
  36+ 94A5 E5               push hl
  37+ 94A6 F1               pop af
  38+ 94A7 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94A8
  40+ 94A8              ; Tenemos el encabezado listo.
  41+ 94A8              ; Preparamos registros para generar los scanlines.
  42+ 94A8
  43+ 94A8 DD E5            push ix
  44+ 94AA E1               pop hl                                          ; 1er scanline en HL.
  45+ 94AB
  46+ 94AB ED 5B 23 8C      ld de,(Scanlines_album_SP)
  47+ 94AF
  48+ 94AF              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94AF              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94AF
  51+ 94AF 7C               ld a,h
  52+ 94B0 FE 50            cp $50
  53+ 94B2 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94B4
  55+ 94B4 20 05            jr nz,2F
  56+ 94B6
  57+ 94B6 7D               ld a,l
  58+ 94B7 FE E0            cp $e0
  59+ 94B9 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94BB
  61+ 94BB 7D           2 ld a,l
  62+ 94BC FE C0            cp $c0
  63+ 94BE D2 50 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94C1
  65+ 94C1              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94C1
  67+ 94C1 CD 4E 99         call NextScan
  68+ 94C4 EB               ex de,hl
  69+ 94C5
  70+ 94C5 73               ld (hl),e
  71+ 94C6 23               inc hl
  72+ 94C7 72               ld (hl),d
  73+ 94C8 23               inc hl
  74+ 94C9
  75+ 94C9 EB               ex de,hl
  76+ 94CA
  77+ 94CA CD 4E 99         call NextScan
  78+ 94CD EB               ex de,hl
  79+ 94CE
  80+ 94CE 73               ld (hl),e
  81+ 94CF 23               inc hl
  82+ 94D0 72               ld (hl),d
  83+ 94D1 23               inc hl
  84+ 94D2
  85+ 94D2 EB               ex de,hl
  86+ 94D3
  87+ 94D3 CD 4E 99         call NextScan
  88+ 94D6 EB               ex de,hl
  89+ 94D7
  90+ 94D7 73               ld (hl),e
  91+ 94D8 23               inc hl
  92+ 94D9 72               ld (hl),d
  93+ 94DA 23               inc hl
  94+ 94DB
  95+ 94DB EB               ex de,hl
  96+ 94DC
  97+ 94DC CD 4E 99         call NextScan
  98+ 94DF EB               ex de,hl
  99+ 94E0
 100+ 94E0 73               ld (hl),e
 101+ 94E1 23               inc hl
 102+ 94E2 72               ld (hl),d
 103+ 94E3 23               inc hl
 104+ 94E4
 105+ 94E4 EB               ex de,hl
 106+ 94E5
 107+ 94E5 CD 4E 99         call NextScan
 108+ 94E8 EB               ex de,hl
 109+ 94E9
 110+ 94E9 73               ld (hl),e
 111+ 94EA 23               inc hl
 112+ 94EB 72               ld (hl),d
 113+ 94EC 23               inc hl
 114+ 94ED
 115+ 94ED EB               ex de,hl
 116+ 94EE
 117+ 94EE CD 4E 99         call NextScan
 118+ 94F1 EB               ex de,hl
 119+ 94F2
 120+ 94F2 73               ld (hl),e
 121+ 94F3 23               inc hl
 122+ 94F4 72               ld (hl),d
 123+ 94F5 23               inc hl
 124+ 94F6
 125+ 94F6 EB               ex de,hl
 126+ 94F7
 127+ 94F7 CD 4E 99         call NextScan
 128+ 94FA EB               ex de,hl
 129+ 94FB
 130+ 94FB 73               ld (hl),e
 131+ 94FC 23               inc hl
 132+ 94FD 72               ld (hl),d
 133+ 94FE 23               inc hl
 134+ 94FF
 135+ 94FF EB               ex de,hl
 136+ 9500
 137+ 9500 CD 4E 99         call NextScan
 138+ 9503 EB               ex de,hl
 139+ 9504
 140+ 9504 73               ld (hl),e
 141+ 9505 23               inc hl
 142+ 9506 72               ld (hl),d
 143+ 9507 23               inc hl
 144+ 9508
 145+ 9508 EB               ex de,hl
 146+ 9509
 147+ 9509 CD 4E 99         call NextScan
 148+ 950C EB               ex de,hl
 149+ 950D
 150+ 950D 73               ld (hl),e
 151+ 950E 23               inc hl
 152+ 950F 72               ld (hl),d
 153+ 9510 23               inc hl
 154+ 9511
 155+ 9511 EB               ex de,hl
 156+ 9512
 157+ 9512 CD 4E 99         call NextScan
 158+ 9515 EB               ex de,hl
 159+ 9516
 160+ 9516 73               ld (hl),e
 161+ 9517 23               inc hl
 162+ 9518 72               ld (hl),d
 163+ 9519 23               inc hl
 164+ 951A
 165+ 951A EB               ex de,hl
 166+ 951B
 167+ 951B CD 4E 99         call NextScan
 168+ 951E EB               ex de,hl
 169+ 951F
 170+ 951F 73               ld (hl),e
 171+ 9520 23               inc hl
 172+ 9521 72               ld (hl),d
 173+ 9522 23               inc hl
 174+ 9523
 175+ 9523 EB               ex de,hl
 176+ 9524
 177+ 9524 CD 4E 99         call NextScan
 178+ 9527 EB               ex de,hl
 179+ 9528
 180+ 9528 73               ld (hl),e
 181+ 9529 23               inc hl
 182+ 952A 72               ld (hl),d
 183+ 952B 23               inc hl
 184+ 952C
 185+ 952C EB               ex de,hl
 186+ 952D
 187+ 952D CD 4E 99         call NextScan
 188+ 9530 EB               ex de,hl
 189+ 9531
 190+ 9531 73               ld (hl),e
 191+ 9532 23               inc hl
 192+ 9533 72               ld (hl),d
 193+ 9534 23               inc hl
 194+ 9535
 195+ 9535 EB               ex de,hl
 196+ 9536
 197+ 9536 CD 4E 99         call NextScan
 198+ 9539 EB               ex de,hl
 199+ 953A
 200+ 953A 73               ld (hl),e
 201+ 953B 23               inc hl
 202+ 953C 72               ld (hl),d
 203+ 953D 23               inc hl
 204+ 953E
 205+ 953E EB               ex de,hl
 206+ 953F
 207+ 953F CD 4E 99         call NextScan
 208+ 9542 EB               ex de,hl
 209+ 9543
 210+ 9543 73               ld (hl),e
 211+ 9544 23               inc hl
 212+ 9545 72               ld (hl),d
 213+ 9546 23               inc hl
 214+ 9547
 215+ 9547              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9547
 217+ 9547 22 23 8C         ld (Scanlines_album_SP),hl
 218+ 954A
 219+ 954A              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 954A
 221+ 954A 08               ex af,af
 222+ 954B
 223+ 954B F5               push af
 224+ 954C E1               pop hl
 225+ 954D
 226+ 954D 36 10            ld (hl),16
 227+ 954F
 228+ 954F C9               ret
 229+ 9550
 230+ 9550              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9550
 232+ 9550              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9550
 234+ 9550 3E 57            ld a,$57
 235+ 9552 94               sub h
 236+ 9553 47               ld b,a
 237+ 9554
 238+ 9554 3E DF            ld a,$df
 239+ 9556 BD               cp l
 240+ 9557 38 04            jr c,1F
 241+ 9559
 242+ 9559 3E 08            ld a,8
 243+ 955B 80               add b
 244+ 955C 47               ld b,a
 245+ 955D
 246+ 955D              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 955D              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 955D
 249+ 955D 48           1 ld c,b
 250+ 955E 0C               inc c
 251+ 955F
 252+ 955F 04               inc b
 253+ 9560 05               dec b
 254+ 9561 20 02            jr nz,3F
 255+ 9563
 256+ 9563 18 0B            jr 6F
 257+ 9565
 258+ 9565 CD 4E 99     3 call NextScan
 259+ 9568 EB               ex de,hl
 260+ 9569
 261+ 9569 73               ld (hl),e
 262+ 956A 23               inc hl
 263+ 956B 72               ld (hl),d
 264+ 956C 23               inc hl
 265+ 956D
 266+ 956D EB               ex de,hl
 267+ 956E 10 F5            djnz 3B
 268+ 9570
 269+ 9570 ED 53 23 8C  6 ld (Scanlines_album_SP),de
 270+ 9574
 271+ 9574 08           5 ex af,af
 272+ 9575 F5               push af
 273+ 9576 E1               pop hl
 274+ 9577
 275+ 9577 71               ld (hl),c
 276+ 9578
 277+ 9578 C9               ret
 278+ 9579
# file closed: Genera_datos_de_impresion.asm
2310  9579              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9579              ; -----------------------------------------------------------------------------
   2+ 9579              ;
   3+ 9579              ;   11/03/24
   4+ 9579              ;
   5+ 9579
   6+ 9579              Pinta_Sprites
   7+ 9579
   8+ 9579              ;    ld hl,(Scanlines_album_SP)
   9+ 9579              ;    call Extrae_address
  10+ 9579
  11+ 9579              ;    inc h
  12+ 9579              ;    dec h
  13+ 9579              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9579
  15+ 9579 ED 73 08 8C      ld (Stack),sp
  16+ 957D
  17+ 957D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 957E              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 957E 2C               inc l
  20+ 957F 2C               inc l
  21+ 9580
  22+ 9580 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9581
  24+ 9581 2C               inc l
  25+ 9582 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9583
  27+ 9583              ;   Seleccionamos rutina de impresión:
  28+ 9583
  29+ 9583 3E 10            ld a,16
  30+ 9585 B8               cp b
  31+ 9586 C2 82 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9589
  33+ 9589              ;   Rutinas:
  34+ 9589
  35+ 9589              Pinta_rapido    ;   1520 t/states.
  36+ 9589
  37+ 9589 E1               pop hl
  38+ 958A
  39+ 958A 1A               ld a,(de)
  40+ 958B AE               xor (hl)
  41+ 958C 77               ld (hl),a
  42+ 958D 2C               inc l
  43+ 958E 1C               inc e
  44+ 958F 1A               ld a,(de)
  45+ 9590 AE               xor (hl)
  46+ 9591 77               ld (hl),a
  47+ 9592 2C               inc l
  48+ 9593 1C               inc e
  49+ 9594 1A               ld a,(de)
  50+ 9595 AE               xor (hl)
  51+ 9596 77               ld (hl),a
  52+ 9597 13               inc de
  53+ 9598
  54+ 9598 E1               pop hl
  55+ 9599
  56+ 9599 1A               ld a,(de)
  57+ 959A AE               xor (hl)
  58+ 959B 77               ld (hl),a
  59+ 959C 2C               inc l
  60+ 959D 1C               inc e
  61+ 959E 1A               ld a,(de)
  62+ 959F AE               xor (hl)
  63+ 95A0 77               ld (hl),a
  64+ 95A1 2C               inc l
  65+ 95A2 1C               inc e
  66+ 95A3 1A               ld a,(de)
  67+ 95A4 AE               xor (hl)
  68+ 95A5 77               ld (hl),a
  69+ 95A6 13               inc de
  70+ 95A7
  71+ 95A7 E1               pop hl
  72+ 95A8
  73+ 95A8 1A               ld a,(de)
  74+ 95A9 AE               xor (hl)
  75+ 95AA 77               ld (hl),a
  76+ 95AB 2C               inc l
  77+ 95AC 1C               inc e
  78+ 95AD 1A               ld a,(de)
  79+ 95AE AE               xor (hl)
  80+ 95AF 77               ld (hl),a
  81+ 95B0 2C               inc l
  82+ 95B1 1C               inc e
  83+ 95B2 1A               ld a,(de)
  84+ 95B3 AE               xor (hl)
  85+ 95B4 77               ld (hl),a
  86+ 95B5 13               inc de
  87+ 95B6
  88+ 95B6 E1               pop hl
  89+ 95B7
  90+ 95B7 1A               ld a,(de)
  91+ 95B8 AE               xor (hl)
  92+ 95B9 77               ld (hl),a
  93+ 95BA 2C               inc l
  94+ 95BB 1C               inc e
  95+ 95BC 1A               ld a,(de)
  96+ 95BD AE               xor (hl)
  97+ 95BE 77               ld (hl),a
  98+ 95BF 2C               inc l
  99+ 95C0 1C               inc e
 100+ 95C1 1A               ld a,(de)
 101+ 95C2 AE               xor (hl)
 102+ 95C3 77               ld (hl),a
 103+ 95C4 13               inc de
 104+ 95C5
 105+ 95C5 E1               pop hl
 106+ 95C6
 107+ 95C6 1A               ld a,(de)
 108+ 95C7 AE               xor (hl)
 109+ 95C8 77               ld (hl),a
 110+ 95C9 2C               inc l
 111+ 95CA 1C               inc e
 112+ 95CB 1A               ld a,(de)
 113+ 95CC AE               xor (hl)
 114+ 95CD 77               ld (hl),a
 115+ 95CE 2C               inc l
 116+ 95CF 1C               inc e
 117+ 95D0 1A               ld a,(de)
 118+ 95D1 AE               xor (hl)
 119+ 95D2 77               ld (hl),a
 120+ 95D3 13               inc de
 121+ 95D4
 122+ 95D4 E1               pop hl
 123+ 95D5
 124+ 95D5 1A               ld a,(de)
 125+ 95D6 AE               xor (hl)
 126+ 95D7 77               ld (hl),a
 127+ 95D8 2C               inc l
 128+ 95D9 1C               inc e
 129+ 95DA 1A               ld a,(de)
 130+ 95DB AE               xor (hl)
 131+ 95DC 77               ld (hl),a
 132+ 95DD 2C               inc l
 133+ 95DE 1C               inc e
 134+ 95DF 1A               ld a,(de)
 135+ 95E0 AE               xor (hl)
 136+ 95E1 77               ld (hl),a
 137+ 95E2 13               inc de
 138+ 95E3
 139+ 95E3 E1               pop hl
 140+ 95E4
 141+ 95E4 1A               ld a,(de)
 142+ 95E5 AE               xor (hl)
 143+ 95E6 77               ld (hl),a
 144+ 95E7 2C               inc l
 145+ 95E8 1C               inc e
 146+ 95E9 1A               ld a,(de)
 147+ 95EA AE               xor (hl)
 148+ 95EB 77               ld (hl),a
 149+ 95EC 2C               inc l
 150+ 95ED 1C               inc e
 151+ 95EE 1A               ld a,(de)
 152+ 95EF AE               xor (hl)
 153+ 95F0 77               ld (hl),a
 154+ 95F1 13               inc de
 155+ 95F2
 156+ 95F2 E1               pop hl
 157+ 95F3
 158+ 95F3 1A               ld a,(de)
 159+ 95F4 AE               xor (hl)
 160+ 95F5 77               ld (hl),a
 161+ 95F6 2C               inc l
 162+ 95F7 1C               inc e
 163+ 95F8 1A               ld a,(de)
 164+ 95F9 AE               xor (hl)
 165+ 95FA 77               ld (hl),a
 166+ 95FB 2C               inc l
 167+ 95FC 1C               inc e
 168+ 95FD 1A               ld a,(de)
 169+ 95FE AE               xor (hl)
 170+ 95FF 77               ld (hl),a
 171+ 9600 13               inc de
 172+ 9601
 173+ 9601 E1               pop hl
 174+ 9602
 175+ 9602 1A               ld a,(de)
 176+ 9603 AE               xor (hl)
 177+ 9604 77               ld (hl),a
 178+ 9605 2C               inc l
 179+ 9606 1C               inc e
 180+ 9607 1A               ld a,(de)
 181+ 9608 AE               xor (hl)
 182+ 9609 77               ld (hl),a
 183+ 960A 2C               inc l
 184+ 960B 1C               inc e
 185+ 960C 1A               ld a,(de)
 186+ 960D AE               xor (hl)
 187+ 960E 77               ld (hl),a
 188+ 960F 13               inc de
 189+ 9610
 190+ 9610 E1               pop hl
 191+ 9611
 192+ 9611 1A               ld a,(de)
 193+ 9612 AE               xor (hl)
 194+ 9613 77               ld (hl),a
 195+ 9614 2C               inc l
 196+ 9615 1C               inc e
 197+ 9616 1A               ld a,(de)
 198+ 9617 AE               xor (hl)
 199+ 9618 77               ld (hl),a
 200+ 9619 2C               inc l
 201+ 961A 1C               inc e
 202+ 961B 1A               ld a,(de)
 203+ 961C AE               xor (hl)
 204+ 961D 77               ld (hl),a
 205+ 961E 13               inc de
 206+ 961F
 207+ 961F E1               pop hl
 208+ 9620
 209+ 9620 1A               ld a,(de)
 210+ 9621 AE               xor (hl)
 211+ 9622 77               ld (hl),a
 212+ 9623 2C               inc l
 213+ 9624 1C               inc e
 214+ 9625 1A               ld a,(de)
 215+ 9626 AE               xor (hl)
 216+ 9627 77               ld (hl),a
 217+ 9628 2C               inc l
 218+ 9629 1C               inc e
 219+ 962A 1A               ld a,(de)
 220+ 962B AE               xor (hl)
 221+ 962C 77               ld (hl),a
 222+ 962D 13               inc de
 223+ 962E
 224+ 962E E1               pop hl
 225+ 962F
 226+ 962F 1A               ld a,(de)
 227+ 9630 AE               xor (hl)
 228+ 9631 77               ld (hl),a
 229+ 9632 2C               inc l
 230+ 9633 1C               inc e
 231+ 9634 1A               ld a,(de)
 232+ 9635 AE               xor (hl)
 233+ 9636 77               ld (hl),a
 234+ 9637 2C               inc l
 235+ 9638 1C               inc e
 236+ 9639 1A               ld a,(de)
 237+ 963A AE               xor (hl)
 238+ 963B 77               ld (hl),a
 239+ 963C 13               inc de
 240+ 963D
 241+ 963D E1               pop hl
 242+ 963E
 243+ 963E 1A               ld a,(de)
 244+ 963F AE               xor (hl)
 245+ 9640 77               ld (hl),a
 246+ 9641 2C               inc l
 247+ 9642 1C               inc e
 248+ 9643 1A               ld a,(de)
 249+ 9644 AE               xor (hl)
 250+ 9645 77               ld (hl),a
 251+ 9646 2C               inc l
 252+ 9647 1C               inc e
 253+ 9648 1A               ld a,(de)
 254+ 9649 AE               xor (hl)
 255+ 964A 77               ld (hl),a
 256+ 964B 13               inc de
 257+ 964C
 258+ 964C E1               pop hl
 259+ 964D
 260+ 964D 1A               ld a,(de)
 261+ 964E AE               xor (hl)
 262+ 964F 77               ld (hl),a
 263+ 9650 2C               inc l
 264+ 9651 1C               inc e
 265+ 9652 1A               ld a,(de)
 266+ 9653 AE               xor (hl)
 267+ 9654 77               ld (hl),a
 268+ 9655 2C               inc l
 269+ 9656 1C               inc e
 270+ 9657 1A               ld a,(de)
 271+ 9658 AE               xor (hl)
 272+ 9659 77               ld (hl),a
 273+ 965A 13               inc de
 274+ 965B
 275+ 965B E1               pop hl
 276+ 965C
 277+ 965C 1A               ld a,(de)
 278+ 965D AE               xor (hl)
 279+ 965E 77               ld (hl),a
 280+ 965F 2C               inc l
 281+ 9660 1C               inc e
 282+ 9661 1A               ld a,(de)
 283+ 9662 AE               xor (hl)
 284+ 9663 77               ld (hl),a
 285+ 9664 2C               inc l
 286+ 9665 1C               inc e
 287+ 9666 1A               ld a,(de)
 288+ 9667 AE               xor (hl)
 289+ 9668 77               ld (hl),a
 290+ 9669 13               inc de
 291+ 966A
 292+ 966A E1               pop hl
 293+ 966B
 294+ 966B 1A               ld a,(de)
 295+ 966C AE               xor (hl)
 296+ 966D 77               ld (hl),a
 297+ 966E 2C               inc l
 298+ 966F 1C               inc e
 299+ 9670 1A               ld a,(de)
 300+ 9671 AE               xor (hl)
 301+ 9672 77               ld (hl),a
 302+ 9673 2C               inc l
 303+ 9674 1C               inc e
 304+ 9675 1A               ld a,(de)
 305+ 9676 AE               xor (hl)
 306+ 9677 77               ld (hl),a
 307+ 9678 13               inc de
 308+ 9679
 309+ 9679 ED 73 23 8C      ld (Scanlines_album_SP),sp
 310+ 967D ED 7B 08 8C      ld sp,(Stack)
 311+ 9681 C9               ret
 312+ 9682
 313+ 9682              Pinta_lento
 314+ 9682
 315+ 9682 E1           1 pop hl
 316+ 9683
 317+ 9683 1A               ld a,(de)
 318+ 9684 AE               xor (hl)
 319+ 9685 77               ld (hl),a
 320+ 9686 2C               inc l
 321+ 9687 1C               inc e
 322+ 9688 1A               ld a,(de)
 323+ 9689 AE               xor (hl)
 324+ 968A 77               ld (hl),a
 325+ 968B 2C               inc l
 326+ 968C 1C               inc e
 327+ 968D 1A               ld a,(de)
 328+ 968E AE               xor (hl)
 329+ 968F 77               ld (hl),a
 330+ 9690 13               inc de
 331+ 9691
 332+ 9691 10 EF            djnz 1B
 333+ 9693
 334+ 9693 ED 73 23 8C      ld (Scanlines_album_SP),sp
 335+ 9697 ED 7B 08 8C      ld sp,(Stack)
 336+ 969B C9               ret
# file closed: Pinta_Sprites.asm
2311  969C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 969C              ; ******************************************************************************************************************************************************************************************
   2+ 969C              ;
   3+ 969C              ; 26/06/23
   4+ 969C              ;
   5+ 969C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 969C
   7+ 969C              Draw
   8+ 969C
   9+ 969C CD 42 99     	call Prepara_draw
  10+ 969F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96A0 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96A1 28 05        	jr z,2F
  13+ 96A3
  14+ 96A3 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96A6 18 0C        	jr 1F
  16+ 96A8
  17+ 96A8 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96AB 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96AE CD 3A 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96B1              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96B1
  22+ 96B1 CD E1 9D     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96B4
  24+ 96B4 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96B7 CB 6F        	bit 5,a
  26+ 96B9 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96BB
  28+ 96BB CD D0 96     	call Comprueba_limite_horizontal
  29+ 96BE CD 60 97     	call Comprueba_limite_vertical
  30+ 96C1
  31+ 96C1              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96C1              ; -----------------------
  33+ 96C1              ; -----------------------
  34+ 96C1              ; -----------------------
  35+ 96C1
  36+ 96C1 CD B6 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96C4 CD ED 98     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96C7
  39+ 96C7 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 96CA CB AF        	res 5,a											; _a ser de utilidad.
  41+ 96CC 32 C8 8B     	ld (Ctrl_0),a
  42+ 96CF
  43+ 96CF C9           	ret
  44+ 96D0
  45+ 96D0              ; *******************************************************************************************************************************************************************************************
  46+ 96D0              ;	21/01/23
  47+ 96D0              ;
  48+ 96D0              ; 	Comprueba_limite_horizontal.
  49+ 96D0              ;
  50+ 96D0              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 96D0              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 96D0              ;
  53+ 96D0              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 96D0              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 96D0              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 96D0              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 96D0
  58+ 96D0
  59+ 96D0
  60+ 96D0 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 96D3 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 96D5 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 96D7 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 96D9 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 96DC 18 09            jr 6F
  66+ 96DE CB 5F        1 bit 3,a
  67+ 96E0 28 0A            jr z,2F
  68+ 96E2 E6 F7            and $f7
  69+ 96E4 32 C8 8B         ld (Ctrl_0),a
  70+ 96E7 CD 3A 98     6 call Inicializacion
  71+ 96EA 18 5B            jr 5F
  72+ 96EC E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 96ED
  74+ 96ED              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 96ED              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 96ED
  77+ 96ED EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 96EE 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 96F1 CD 3A 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 96F4 67           	ld h,a
  81+ 96F5 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 96F6 CD 3A 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 96F9 67           	ld h,a
  84+ 96FA A7           	and a
  85+ 96FB ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 96FD 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 96FE 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 9701 FE 02        	cp 2
  89+ 9703 38 1E        	jr c,3F
  90+ 9705 28 1C        	jr z,3F
  91+ 9707 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9708 28 23            jr z,7F
  93+ 970A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 970C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 970E E1           	pop hl
  96+ 970F
  97+ 970F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 970F              ; _para indicar con E="2" en caso necesario.
  99+ 970F
 100+ 970F E5               push hl
 101+ 9710 C5               push bc
 102+ 9711 CD 3A 94     	call calcula_tercio
 103+ 9714 FE 01        	cp 1
 104+ 9716 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9718 CD 48 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 971B 28 26            jr z,9F
 107+ 971D 38 24            jr c,9F
 108+ 971F 1E 00        11 ld e,0
 109+ 9721 18 22            jr 8F
 110+ 9723 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9724 28 07        	jr z, 7F
 112+ 9726 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9728 1E 00         	ld e,0
 114+ 972A E1           	pop hl
 115+ 972B 18 04        	jr 4F
 116+ 972D 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 972F 18 15            jr 10F
 118+ 9731
 119+ 9731              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9731              ; _para indicar con E="2" en caso necesario.
 121+ 9731
 122+ 9731 E5           4 push hl
 123+ 9732 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9733 CD 3A 94     	call calcula_tercio
 125+ 9736 FE 01        	cp 1
 126+ 9738 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 973A CD 48 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 973D 28 04            jr z,9F
 129+ 973F 30 02            jr nc,9F
 130+ 9741 18 02        	jr 8F
 131+ 9743 1E 02        9 ld e,2
 132+ 9745 C1           8 pop bc
 133+ 9746 E1           10 pop hl
 134+ 9747 C9           5 ret
 135+ 9748
 136+ 9748              ; --------------------
 137+ 9748              ;
 138+ 9748              ; 25/08/22
 139+ 9748
 140+ 9748 CD 3A 94     Comprueba_centro call calcula_tercio
 141+ 974B 67               ld h,a
 142+ 974C 08           	ex af,af
 143+ 974D FE 02        	cp 2
 144+ 974F 38 07        	jr c,1F
 145+ 9751 28 05        	jr z,1F
 146+ 9753 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9756 18 03        	jr 2F
 148+ 9758 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 975B 08           2 ex af,af
 150+ 975C A7               and a
 151+ 975D ED 42            sbc hl,bc
 152+ 975F C9               ret
 153+ 9760
 154+ 9760              ; *********************************************************************************************************************************************************************************************
 155+ 9760              ;
 156+ 9760              ;   16/8/22
 157+ 9760              ;
 158+ 9760              ;	Comprueba_limite_vertical
 159+ 9760              ;
 160+ 9760              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9760              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9760              ;
 163+ 9760
 164+ 9760 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9763 7D           	ld a,l
 166+ 9764 E6 1F        	and $1F
 167+ 9766 57           	ld d,a
 168+ 9767 3A DE 8B     	ld a,(Limite_vertical)
 169+ 976A BA           	cp d 											; Límite - Posición.
 170+ 976B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 976C 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 976F CB 47        	bit 0,a
 173+ 9771 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9773
 175+ 9773              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9773
 177+ 9773 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9774 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9776
 180+ 9776              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9776              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9776
 183+ 9776 3A BC 8B         ld a,(Coordenada_X)
 184+ 9779 16 0F            ld d,Centro_izquierda
 185+ 977B A7               and a
 186+ 977C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 977D 28 1E            jr z,3F
 188+ 977F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9781              ;                                                    ; _salimos sin modificar nada.
 190+ 9781 18 0E            jr 2F
 191+ 9783 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9784 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9786
 194+ 9786              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9786              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9786
 197+ 9786 3A BC 8B         ld a,(Coordenada_X)
 198+ 9789 16 10            ld d,Centro_derecha
 199+ 978B A7               and a
 200+ 978C 92               sub d
 201+ 978D 28 0E            jr z,3F
 202+ 978F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9791              ;                                                    ; _salimos sin modificar nada.
 204+ 9791 CB 43        2 bit 0,e
 205+ 9793 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9795 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9796 CD 2A 98         call Modificaccionne
 208+ 9799 C1           	pop bc
 209+ 979A CD 3A 98         call Inicializacion
 210+ 979D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 979E
 212+ 979E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 979E
 214+ 979E C5           4 push bc
 215+ 979F 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97A2 0A           	ld a,(bc)
 217+ 97A3 3D           	dec a
 218+ 97A4 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97A5 7D           	ld a,l
 220+ 97A6 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97A7 CB 47        	bit 0,a
 222+ 97A9 28 03        	jr z,5F
 223+ 97AB 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97AC 18 2E        	jr 7F
 225+ 97AE
 226+ 97AE              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97AE
 228+ 97AE 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97AF F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97B0 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97B3 CB 4F        	bit 1,a
 232+ 97B5 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97B7 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97B8
 235+ 97B8              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97B8
 237+ 97B8 1C               inc e
 238+ 97B9 1D               dec e
 239+ 97BA 20 07            jr nz,12F
 240+ 97BC 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97BD 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97BE 22 CB 8B     	ld (Posicion_actual),hl
 243+ 97C1 18 44        13 jr 9F
 244+ 97C3 CB 43        12 bit 0,e
 245+ 97C5 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97C7              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97C7 C1           	pop bc
 248+ 97C8 18 D3        	jr 3B
 249+ 97CA 80           14 add b
 250+ 97CB 6F               ld l,a
 251+ 97CC 22 CB 8B     	ld (Posicion_actual),hl
 252+ 97CF CD 2A 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 97D2 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 97D4 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 97D6 32 C8 8B         ld (Ctrl_0),a
 256+ 97D9 F1           	pop af
 257+ 97DA 18 2B        	jr 9F
 258+ 97DC
 259+ 97DC              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 97DC
 261+ 97DC F5           7 push af
 262+ 97DD 3A C8 8B     	ld a,(Ctrl_0)
 263+ 97E0 CB 47        	bit 0,a
 264+ 97E2 20 1D        	jr nz,8F
 265+ 97E4 F1           	pop af
 266+ 97E5
 267+ 97E5              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 97E5
 269+ 97E5 1C           	inc e
 270+ 97E6 1D               dec e
 271+ 97E7 20 07            jr nz,10F
 272+ 97E9 90           	sub b
 273+ 97EA 6F               ld l,a
 274+ 97EB 22 CB 8B     	ld (Posicion_actual),hl
 275+ 97EE 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 97F0              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 97F0 CB 43        10 bit 0,e
 278+ 97F2 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 97F4              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 97F4 C1           	pop bc
 281+ 97F5 18 A6        	jr 3B
 282+ 97F7 90           16 sub b
 283+ 97F8 6F               ld l,a
 284+ 97F9 22 CB 8B     	ld (Posicion_actual),hl
 285+ 97FC CD 2A 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 97FF 18 06            jr 9F
 287+ 9801 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9803 32 C8 8B         ld (Ctrl_0),a
 289+ 9806 F1           	pop af
 290+ 9807 C1           9 pop bc
 291+ 9808 1E 00        	ld e,0
 292+ 980A CD 3A 98         call Inicializacion
 293+ 980D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 980E 08           	ex af,af
 295+ 980F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9810 18 8B            jr 3B
 297+ 9812
 298+ 9812              ; --------------------
 299+ 9812
 300+ 9812 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9814 CD 5D 99     1 call PreviousScan
 302+ 9817 10 FB            djnz 1B
 303+ 9819 22 CB 8B     	ld (Posicion_actual),hl
 304+ 981C AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 981D C9           	ret
 306+ 981E
 307+ 981E              ; --------------------
 308+ 981E
 309+ 981E 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9820 CD 4E 99     1 call NextScan
 311+ 9823 10 FB            djnz 1B
 312+ 9825 22 CB 8B     	ld (Posicion_actual),hl
 313+ 9828 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9829 C9           	ret
 315+ 982A
 316+ 982A              ; --------------------
 317+ 982A              ;
 318+ 982A              ;	22/01/23
 319+ 982A              ;
 320+ 982A              ;	E="1". Hemos cambiado de cuadrante.
 321+ 982A              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 982A              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 982A
 324+ 982A
 325+ 982A              Modificaccionne
 326+ 982A
 327+ 982A 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 982D FE 02        	cp 2
 329+ 982F CC 12 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9832 DC 12 98         call c,Modifica_Pos_actual
 331+ 9835 C8           	ret z
 332+ 9836 CD 1E 98         call Modifica_Pos_actual2
 333+ 9839 C9               ret
 334+ 983A
 335+ 983A              ; *************************************************************************************************************************************************************************************************
 336+ 983A              ;
 337+ 983A              ;	13/8/22
 338+ 983A              ;
 339+ 983A              ;	Inicializacion
 340+ 983A              ;
 341+ 983A              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 983A              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 983A              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 983A              ;
 345+ 983A              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 983A              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 983A              ;	_ desaparece/aparece.
 348+ 983A
 349+ 983A              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 983A              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 983A              ;
 352+ 983A              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 983A              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 983A              ; 		   [E] ="0"
 355+ 983A
 356+ 983A              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 983A
 358+ 983A CD 3A 94     Inicializacion call calcula_tercio
 359+ 983D 28 36        	jr z,primit
 360+ 983F E6 02        	and 2
 361+ 9841 20 07        	jr nz,segmit
 362+ 9843 7D           	ld a,l
 363+ 9844 FE 7F        	cp $7f
 364+ 9846 38 2D        	jr c,primit
 365+ 9848 28 2B        	jr z,primit
 366+ 984A CD B0 98     segmit call column
 367+ 984D 38 13        	jr c,tercuad
 368+ 984F 3E 04        cuarcuad ld a,4
 369+ 9851 32 DA 8B     	ld (Cuad_objeto),a
 370+ 9854 21 20 48     	ld hl,$4820
 371+ 9857 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 985A 21 DE 8B     	ld hl,Limite_vertical
 373+ 985D 36 0D        	ld (hl),$0d
 374+ 985F 08           	ex af,af
 375+ 9860 18 3C        	jr 1F
 376+ 9862              tercuad
 377+ 9862 3E 03        	ld a,3
 378+ 9864 32 DA 8B     	ld (Cuad_objeto),a
 379+ 9867 21 20 48     	ld hl,$4820
 380+ 986A 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 986D 21 DE 8B     	ld hl,Limite_vertical
 382+ 9870 36 12        	ld (hl),$12
 383+ 9872 08           	ex af,af
 384+ 9873 18 29        	jr 1F
 385+ 9875 CD B0 98     primit call column
 386+ 9878 38 13        	jr c, primcuad
 387+ 987A              segcuad
 388+ 987A 3E 02        	ld a,2
 389+ 987C 32 DA 8B     	ld (Cuad_objeto),a
 390+ 987F 21 C0 4F     	ld hl,$4fc0
 391+ 9882 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 9885 21 DE 8B     	ld hl,Limite_vertical
 393+ 9888 36 0D        	ld (hl),$0d
 394+ 988A 08           	ex af,af
 395+ 988B 18 11        	jr 1F
 396+ 988D              primcuad
 397+ 988D 3E 01        	ld a,1
 398+ 988F 32 DA 8B     	ld (Cuad_objeto),a
 399+ 9892 21 C0 4F     	ld hl,$4fc0
 400+ 9895 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 9898 21 DE 8B     	ld hl,Limite_vertical
 402+ 989B 36 12        	ld (hl),$12
 403+ 989D 08           	ex af,af
 404+ 989E
 405+ 989E C5           1 push bc
 406+ 989F E5           	push hl
 407+ 98A0 D5           	push de
 408+ 98A1
 409+ 98A1 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 98A4 CD 58 94     	call Genera_coordenadas
 411+ 98A7
 412+ 98A7 D1           	pop de
 413+ 98A8 E1           	pop hl
 414+ 98A9 C1           	pop bc
 415+ 98AA
 416+ 98AA 21 C8 8B     	ld hl,Ctrl_0
 417+ 98AD CB EE        	set 5,(hl)
 418+ 98AF C9           	ret
 419+ 98B0
 420+ 98B0              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98B0
 422+ 98B0              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98B0              ;
 424+ 98B0              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98B0
 426+ 98B0 7D           column ld a,l
 427+ 98B1 E6 1F        	and $1f
 428+ 98B3 FE 10         	cp $10
 429+ 98B5 C9            	ret
 430+ 98B6
 431+ 98B6              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98B6              ;
 433+ 98B6              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98B6              ;
 435+ 98B6              ; 14/12/22
 436+ 98B6              ;
 437+ 98B6              ;	Modifica: A y BC.
 438+ 98B6
 439+ 98B6 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98B9 E6 01        	and 1
 441+ 98BB 28 17        	jr z,1F
 442+ 98BD
 443+ 98BD              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98BD
 445+ 98BD 3A BC 8B     	ld a,(Coordenada_X)
 446+ 98C0 47           	ld b,a
 447+ 98C1 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98C2 79           	ld a,c
 449+ 98C3 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98C4 38 08        	jr c,2F
 451+ 98C6 47           	ld b,a
 452+ 98C7 79           	ld a,c
 453+ 98C8 90           	sub b
 454+ 98C9 32 DB 8B     	ld (Columnas),a
 455+ 98CC 18 1B        	jr 4F
 456+ 98CE 79           2 ld a,c
 457+ 98CF 32 DB 8B     	ld (Columnas),a
 458+ 98D2 18 15        	jr 4F
 459+ 98D4
 460+ 98D4              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 98D4
 462+ 98D4 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 98D7 81           	add c
 464+ 98D8 3D           	dec a
 465+ 98D9 D6 1F        	sub $1f
 466+ 98DB 38 08        	jr c,3F
 467+ 98DD 47           	ld b,a
 468+ 98DE 79           	ld a,c
 469+ 98DF 90           	sub b
 470+ 98E0 32 DB 8B     	ld (Columnas),a
 471+ 98E3 18 04        	jr 4F
 472+ 98E5 79           3 ld a,c
 473+ 98E6 32 DB 8B     	ld (Columnas),a
 474+ 98E9 D9           4 exx
 475+ 98EA 4F           	ld c,a
 476+ 98EB D9           	exx
 477+ 98EC C9            ret
 478+ 98ED
 479+ 98ED              ; --------------------------------------------------------------------------------------------------------------------
 480+ 98ED              ;
 481+ 98ED              ;   19/7/23
 482+ 98ED              ;
 483+ 98ED              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 98ED              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 98ED              ;
 486+ 98ED              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 98ED              ;			HL e IY Contienen (Puntero_objeto).
 488+ 98ED              ;
 489+ 98ED              ;	DESTRUYE: HL,B Y A.
 490+ 98ED
 491+ 98ED 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 98F0 FE 02        	cp 2
 493+ 98F2 38 18        	jr c,1F
 494+ 98F4 28 16        	jr z,1F
 495+ 98F6 E6 01        	and 1
 496+ 98F8 28 0D        	jr z,3F
 497+ 98FA
 498+ 98FA              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 98FA
 500+ 98FA CD 36 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 98FD
 502+ 98FD 7D           9 ld a,l
 503+ 98FE E6 1F        	and $1f
 504+ 9900 28 2A        	jr z,7F
 505+ 9902 2B           	dec hl
 506+ 9903 10 F8        	djnz 9B
 507+ 9905 18 25        	jr 7F
 508+ 9907
 509+ 9907              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9907
 511+ 9907 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 990A 18 20        	jr 7F
 513+ 990C
 514+ 990C 28 14        1 jr z,2F
 515+ 990E
 516+ 990E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 990E
 518+ 990E CD 36 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9911
 520+ 9911 7D           4 ld a,l
 521+ 9912 E6 1F        	and $1f
 522+ 9914 28 03        	jr z,6F
 523+ 9916 2B           	dec hl
 524+ 9917 10 F8        	djnz 4B
 525+ 9919 06 0F        6 ld b,15
 526+ 991B CD 5D 99     5 call PreviousScan
 527+ 991E 10 FB        	djnz 5B
 528+ 9920 18 0A        	jr 7F
 529+ 9922
 530+ 9922              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9922
 532+ 9922 CD 36 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9925 06 0F        	ld b,15
 534+ 9927 CD 5D 99     8 call PreviousScan
 535+ 992A 10 FB        	djnz 8B
 536+ 992C
 537+ 992C E5           7 push hl
 538+ 992D DD E1        	pop ix
 539+ 992F
 540+ 992F 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 9932 E5           	push hl
 542+ 9933 FD E1        	pop iy
 543+ 9935
 544+ 9935 C9           	ret
 545+ 9936
 546+ 9936              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9936              ;
 548+ 9936              ;	2/1/23
 549+ 9936              ;
 550+ 9936              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9936              ;
 552+ 9936              ;	Tras esta rutina tenemos:
 553+ 9936              ;
 554+ 9936              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9936              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9936              ;
 557+ 9936              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9936
 559+ 9936 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 9939 3A DB 8B     	ld a,(Columnas)
 561+ 993C 3D           	dec a
 562+ 993D 20 01        	jr nz,1F
 563+ 993F 3C           	inc a
 564+ 9940 47           1 ld b,a
 565+ 9941 C9           	ret
 566+ 9942
 567+ 9942              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9942              ;
 569+ 9942              ;	Prepara_draw
 570+ 9942              ;
 571+ 9942              ;	Es una rutina de carga.
 572+ 9942              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9942              ;
 574+ 9942              ;	FUNCIONAMIENTO:
 575+ 9942              ;
 576+ 9942              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9942              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9942              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9942              ;
 580+ 9942              ;	DESTRUYE:
 581+ 9942              ;
 582+ 9942              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9942
 584+ 9942 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9945 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9946 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9947 4E           	ld c,(hl)
 588+ 9948 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 994B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 994D C9           	ret
 591+ 994E
 592+ 994E              ;----------------------------------------------------------------------------------------------------------------
 593+ 994E              ;
 594+ 994E              ;	5/08/22
 595+ 994E              ;
 596+ 994E              ;   NextScan.
 597+ 994E              ;
 598+ 994E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 994E              ;
 600+ 994E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 994E              ;
 602+ 994E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 994E              ;
 604+ 994E              ;       DESTRUIDOS: AF y HL !!!
 605+ 994E              ;
 606+ 994E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 994E              ;
 608+ 994E
 609+ 994E 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 994F 7C               ld a,h
 611+ 9950 E6 07            and 7
 612+ 9952 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9953
 614+ 9953 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9954 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9956 6F               ld l,a
 617+ 9957 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9958
 619+ 9958 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9959 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 995B 67               ld h,a
 622+ 995C C9               ret
 623+ 995D
 624+ 995D              ;----------------------------------------------------------------------------------------------------------------
 625+ 995D              ;
 626+ 995D              ;	5/08/22
 627+ 995D              ;
 628+ 995D              ;   PreviousScan.
 629+ 995D              ;
 630+ 995D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 995D              ;
 632+ 995D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 995D              ;
 634+ 995D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 995D              ;
 636+ 995D              ;       DESTRUIDOS: AF y HL !!!
 637+ 995D              ;
 638+ 995D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 995D              ;
 640+ 995D
 641+ 995D 7C           PreviousScan ld a,h
 642+ 995E 25               dec h               ; Dec H.
 643+ 995F E6 07            and 7
 644+ 9961 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9962
 646+ 9962 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9963 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9965 6F               ld l,a
 649+ 9966 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9967
 651+ 9967 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9968 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 996A 67               ld h,a
 654+ 996B C9               ret
 655+ 996C
 656+ 996C
 657+ 996C
 658+ 996C
 659+ 996C
 660+ 996C
 661+ 996C
 662+ 996C
 663+ 996C
 664+ 996C
 665+ 996C
 666+ 996C
# file closed: Draw_XOR.asm
2312  996C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 996C
   2+ 996C              ; ******************************************************************************************************************************************************************************************
   3+ 996C              ;
   4+ 996C              ;   20/05/23
   5+ 996C              ;
   6+ 996C              ;	Recompone_posicion_inicio
   7+ 996C              ;
   8+ 996C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 996C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 996C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 996C              ;	_ a una u otra rutina.
  12+ 996C
  13+ 996C              Recompone_posicion_inicio
  14+ 996C
  15+ 996C 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 996F 7D           	ld a,l
  17+ 9970 E6 1F        	and $1f
  18+ 9972 28 16        	jr z,1F
  19+ 9974
  20+ 9974 FE 1F        	cp $1f
  21+ 9976 28 0D        	jr z,3F
  22+ 9978
  23+ 9978 21 C7 8B     	ld hl,Ctrl_2
  24+ 997B CB C6        	set 0,(hl)
  25+ 997D 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 9980 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 9983 18 08        	jr 2F
  28+ 9985
  29+ 9985 CD 33 9B     3 call Mov_left
  30+ 9988 18 03        	jr 2F
  31+ 998A
  32+ 998A CD 10 9A     1 call Mov_right
  33+ 998D 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9990 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 9993 C9           	ret
  36+ 9994
  37+ 9994              ; ******************************************************************************************************************************************************************************************
  38+ 9994              ;
  39+ 9994              ;   27/05/23
  40+ 9994              ;
  41+ 9994              ;	Mov_down
  42+ 9994              ;
  43+ 9994              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9994              ;
  45+ 9994              ;
  46+ 9994              Mov_down
  47+ 9994
  48+ 9994 CD FE 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9997              ;																	; _ repone (Puntero_objeto).
  50+ 9997 21 C8 8B     	ld hl,Ctrl_0
  51+ 999A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 999C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 999C              ; 																	; _ en el caso de que no lo haya.
  54+ 999C 3A E3 8B     	ld a,(Vel_down)
  55+ 999F 47           	ld b,a
  56+ 99A0 2A CB 8B         ld hl,(Posicion_actual)
  57+ 99A3 CD 3A 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99A6 E6 02        	and 2
  59+ 99A8 28 17        	jr z,1F
  60+ 99AA
  61+ 99AA              ; Nos encontramos en el último tercio de pantalla.
  62+ 99AA              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99AA
  64+ 99AA 7C           	ld a,h
  65+ 99AB FE 57        	cp $57
  66+ 99AD 20 12        	jr nz,1F
  67+ 99AF
  68+ 99AF 7D           	ld a,l
  69+ 99B0 C6 20        	add $20
  70+ 99B2 30 0D        	jr nc,1F
  71+ 99B4
  72+ 99B4              ; ------------------------------
  73+ 99B4              ;
  74+ 99B4              ;	12/01/24
  75+ 99B4
  76+ 99B4              ;	call Reaparece_arriba
  77+ 99B4 CD C0 9C     	call Reinicio
  78+ 99B7
  79+ 99B7              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99B7
  81+ 99B7 3A 29 8C     	ld a,(Ctrl_3)
  82+ 99BA CB CF        	set 1,a
  83+ 99BC 32 29 8C     	ld (Ctrl_3),a
  84+ 99BF
  85+ 99BF 18 08        	jr 3F
  86+ 99C1              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99C1              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99C1              ; ------------------------------
  89+ 99C1
  90+ 99C1 CD 4E 99     1 call NextScan
  91+ 99C4 22 CB 8B     	ld (Posicion_actual),hl
  92+ 99C7 10 DA            djnz 2B
  93+ 99C9 CD 58 94     3 call Genera_coordenadas
  94+ 99CC C9           	ret
  95+ 99CD
  96+ 99CD              ; ******************************************************************************************************************************************************************************************
  97+ 99CD              ;
  98+ 99CD              ;   27/05/23
  99+ 99CD              ;
 100+ 99CD              ;	Mov_up
 101+ 99CD              ;
 102+ 99CD              ; 	Mueve el Sprite hacia arriba.
 103+ 99CD              ;
 104+ 99CD              ;
 105+ 99CD              Mov_up
 106+ 99CD
 107+ 99CD CD FE 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 99D0              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 99D0 21 C8 8B     	ld hl,Ctrl_0
 110+ 99D3 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 99D5              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 99D5              ; 																		; _ en el caso de que no lo haya.
 113+ 99D5 3A E2 8B     	ld a,(Vel_up)
 114+ 99D8 47           	ld b,a
 115+ 99D9 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 99DC CD 3A 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 99DF A7           	and a
 118+ 99E0 20 10        	jr nz,1F
 119+ 99E2
 120+ 99E2              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 99E2              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 99E2
 123+ 99E2 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 99E3 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 99E5 20 0B            jr nz,1F
 126+ 99E7 7D               ld a,l
 127+ 99E8 D6 20            sub $20
 128+ 99EA 30 06            jr nc,1F
 129+ 99EC 25               dec h
 130+ 99ED
 131+ 99ED              ; -----------------------------
 132+ 99ED CD A1 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 99F0              ;	call Reinicio
 134+ 99F0              ; -----------------------------
 135+ 99F0
 136+ 99F0 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 99F2 CD 5D 99     1 call PreviousScan
 138+ 99F5 22 CB 8B     	ld (Posicion_actual),hl
 139+ 99F8 10 E2            djnz 3B
 140+ 99FA CD 58 94     2 call Genera_coordenadas
 141+ 99FD C9           	ret
 142+ 99FE
 143+ 99FE              ; -----------------------------
 144+ 99FE              ;
 145+ 99FE              ;	27/5/23
 146+ 99FE              ;
 147+ 99FE              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 99FE              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 99FE              ;
 150+ 99FE              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 99FE              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 99FE              ;
 153+ 99FE              ;	Modifica: A y (Puntero_objeto).
 154+ 99FE
 155+ 99FE 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A01 CB 47        	bit 0,a
 157+ 9A03 C8           	ret z
 158+ 9A04 CB 87        	res 0,a
 159+ 9A06 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A09 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A0C 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A0F C9           	ret
 163+ 9A10
 164+ 9A10              ; ******************************************************************************************************************************************************************************************
 165+ 9A10              ;
 166+ 9A10              ;	19/10/22
 167+ 9A10              ;
 168+ 9A10              ;	Mov_right.
 169+ 9A10              ;
 170+ 9A10              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A10              ;
 172+ 9A10
 173+ 9A10 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A13 CB 77        	bit 6,a
 175+ 9A15 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A17
 177+ 9A17 CD 4F 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A1A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A1B
 180+ 9A1B 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A1E CB E6        	set 4,(hl)
 182+ 9A20 18 52        	jr 8F
 183+ 9A22
 184+ 9A22 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A25 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A27              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A27              ; 																	; _ en el caso de que no lo haya.
 188+ 9A27 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A2A FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A2C 20 46        	jr nz,8F
 191+ 9A2E
 192+ 9A2E 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A31 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A32 28 40        	jr z,8F
 195+ 9A34
 196+ 9A34              ; ---------- ---------- ----------
 197+ 9A34              ;
 198+ 9A34              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A34
 200+ 9A34 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A37 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A39 28 11        	jr z,1F
 203+ 9A3B 38 06        	jr c,6F
 204+ 9A3D FE 04        	cp 4
 205+ 9A3F 28 14        	jr z,7F
 206+ 9A41 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A43
 208+ 9A43              ; ---------- ---------- ----------
 209+ 9A43              ;
 210+ 9A43              ; Perfiles de velocidad
 211+ 9A43              ;
 212+ 9A43
 213+ 9A43 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A46 FE FE        	cp $fe
 215+ 9A48 20 2A        	jr nz,8F
 216+ 9A4A 18 10        	jr 3F
 217+ 9A4C 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A4F FE FD        	cp $fd
 219+ 9A51 20 21        	jr nz,8F
 220+ 9A53 18 07        	jr 3F
 221+ 9A55 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A58 FE FB        	cp $fb
 223+ 9A5A 20 18        	jr nz,8F
 224+ 9A5C
 225+ 9A5C              ; ---------- ---------- ----------
 226+ 9A5C
 227+ 9A5C              3
 228+ 9A5C CD 8F 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A5F              ;	call Reinicio
 230+ 9A5F
 231+ 9A5F              ; ---------- ---------- ----------
 232+ 9A5F              ;
 233+ 9A5F              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A5F
 235+ 9A5F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A61 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A62 CD 7B 9A     	call DESPLZ_DER
 238+ 9A65 C1           	pop bc
 239+ 9A66 10 F9        	djnz 5B
 240+ 9A68 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9A6B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9A6C 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9A6F CD 58 94     	call Genera_coordenadas
 244+ 9A72 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9A74
 246+ 9A74              ; ---------- ---------- ----------
 247+ 9A74
 248+ 9A74 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9A77 CD 7B 9A     	call DESPLZ_DER
 250+ 9A7A C9           2 ret
 251+ 9A7B
 252+ 9A7B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9A7B              ;
 254+ 9A7B              ;	22/9/22
 255+ 9A7B              ;
 256+ 9A7B
 257+ 9A7B CD 8A 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9A7E CD D6 9A         call modifica_parametros_1er_DESPLZ_2
 259+ 9A81 CD FF 9A         call Ciclo_completo
 260+ 9A84 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9A87 CB FE        	set 7,(hl)
 262+ 9A89 C9           	ret
 263+ 9A8A
 264+ 9A8A              ; ******************************************************************************************************************************************************************************************
 265+ 9A8A              ;	15/02/23
 266+ 9A8A              ;
 267+ 9A8A
 268+ 9A8A 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9A8D 47           	ld b,a
 270+ 9A8E 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9A91 23           1 inc hl
 272+ 9A92 23           	inc hl
 273+ 9A93 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9A95 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9A98 CD 39 90     	call Extrae_address
 276+ 9A9B 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9A9E
 278+ 9A9E              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9A9E
 280+ 9A9E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9A9E              ; Cuántos movimientos hemos hecho ??
 282+ 9A9E              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9A9E
 284+ 9A9E 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AA1 EB           	ex de,hl
 286+ 9AA2 A7           	and a
 287+ 9AA3 ED 52        	sbc hl,de
 288+ 9AA5 CB 3D        	srl l
 289+ 9AA7 3E 08        6 ld a,8
 290+ 9AA9 95           	sub l
 291+ 9AAA 30 1E        	jr nc,3F
 292+ 9AAC
 293+ 9AAC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AAC              ; B="0".
 295+ 9AAC
 296+ 9AAC 04           4 inc b
 297+ 9AAD 3C           	inc a
 298+ 9AAE 20 FC        	jr nz,4B
 299+ 9AB0 78           	ld a,b
 300+ 9AB1 08           	ex af,af
 301+ 9AB2 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AB5 23           5 inc hl
 303+ 9AB6 23           	inc hl
 304+ 9AB7 10 FC        	djnz 5B
 305+ 9AB9 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9ABC CD 39 90     	call Extrae_address
 307+ 9ABF 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9AC2
 309+ 9AC2              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AC2              ; _(Posicion_actual).
 311+ 9AC2
 312+ 9AC2 21 CB 8B     	ld hl,Posicion_actual
 313+ 9AC5 34           	inc (hl)
 314+ 9AC6 08               ex af,af
 315+ 9AC7 6F           	ld l,a
 316+ 9AC8 18 DD        	jr 6B
 317+ 9ACA
 318+ 9ACA              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9ACA
 320+ 9ACA 47           3 ld b,a
 321+ 9ACB 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9ACE 23           2 inc hl
 323+ 9ACF 23           	inc hl
 324+ 9AD0 10 FC        	djnz 2B
 325+ 9AD2 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9AD5 C9           8 ret
 327+ 9AD6
 328+ 9AD6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9AD6              ;
 330+ 9AD6              ;	24/7/22
 331+ 9AD6              ;
 332+ 9AD6              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9AD6              ;
 334+ 9AD6              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9AD6              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9AD6              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9AD6
 338+ 9AD6 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9AD9 A7           	and a
 340+ 9ADA 20 1F        	jr nz,1F
 341+ 9ADC D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9ADE 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9AE1
 344+ 9AE1 21 CA 8B     	ld hl,Columns
 345+ 9AE4 34           	inc (hl)
 346+ 9AE5 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9AE8 E6 01        	and 1
 348+ 9AEA 28 0F        	jr z,1F
 349+ 9AEC 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9AEF 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9AF0 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9AF3 CD 58 94     	call Genera_coordenadas
 353+ 9AF6 CD 5B 9C     	call Inc_CTRL_DESPLZ
 354+ 9AF9 18 03        	jr 2F
 355+ 9AFB CD 5B 9C     1 call Inc_CTRL_DESPLZ
 356+ 9AFE C9           2 ret
 357+ 9AFF
 358+ 9AFF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9AFF              ;
 360+ 9AFF              ;	24/7/22
 361+ 9AFF              ;
 362+ 9AFF              ;	Ciclo_completo.
 363+ 9AFF              ;
 364+ 9AFF              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9AFF              ;
 366+ 9AFF              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9AFF              ; 	Decrementamos (Columns).
 368+ 9AFF              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9AFF              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9AFF
 371+ 9AFF
 372+ 9AFF 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B02 FE FF        	cp $ff
 374+ 9B04 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B06 E6 F0        	and $f0
 376+ 9B08 20 28        	jr nz,3F
 377+ 9B0A
 378+ 9B0A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B0A
 380+ 9B0A 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B0D 47           	ld b,a
 382+ 9B0E 3E F8        	ld a,$f8
 383+ 9B10 80           	add b
 384+ 9B11 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B14 18 1C        	jr 3F
 386+ 9B16 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B19 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B1A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B1B 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B1E 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B21 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B23 20 0A        	jr nz,2F
 393+ 9B25 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B28 23           	inc hl
 395+ 9B29 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B2C CD 58 94     	call Genera_coordenadas
 397+ 9B2F
 398+ 9B2F              ; Inicia el puntero de Sprite.
 399+ 9B2F
 400+ 9B2F CD 4E 90     2 call Inicia_puntero_objeto_der
 401+ 9B32 C9           3 ret
 402+ 9B33
 403+ 9B33              ; ******************************************************************************************************************************************************************************************
 404+ 9B33              ;
 405+ 9B33              ;	15/02/23
 406+ 9B33              ;
 407+ 9B33              ;	Mov_left.
 408+ 9B33              ;
 409+ 9B33              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B33              ;
 411+ 9B33              Mov_left
 412+ 9B33
 413+ 9B33 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B36 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B38              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B38              ; 																	; _ en el caso de que no lo haya.
 417+ 9B38 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B3B CB 77        	bit 6,a
 419+ 9B3D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B3F
 421+ 9B3F CD 55 9C     	call Stop_Amadeus_left
 422+ 9B42 C8           	ret z
 423+ 9B43 20 4A        	jr nz,8F
 424+ 9B45
 425+ 9B45 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B48 A7           	and a
 427+ 9B49 20 44        	jr nz,8F
 428+ 9B4B
 429+ 9B4B 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B4E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B4F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B51
 433+ 9B51              ; ---------- ---------- ----------
 434+ 9B51
 435+ 9B51 3A E0 8B     	ld a,(Vel_left)
 436+ 9B54 FE 02        	cp 2
 437+ 9B56 28 0F        	jr z,1F
 438+ 9B58 38 04        	jr c,6F
 439+ 9B5A FE 04        	cp 4
 440+ 9B5C 28 12        	jr z,7F
 441+ 9B5E
 442+ 9B5E              ; ---------- ---------- ----------
 443+ 9B5E
 444+ 9B5E 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B61 FE F8        	cp $f8
 446+ 9B63 20 2A        	jr nz,8F
 447+ 9B65 18 10        	jr 4F
 448+ 9B67 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9B6A FE F9        	cp $f9
 450+ 9B6C 20 21        	jr nz,8F
 451+ 9B6E 18 07        	jr 4F
 452+ 9B70 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9B73 FE FB        	cp $fb
 454+ 9B75 20 18        	jr nz,8F
 455+ 9B77
 456+ 9B77              ; ---------- ---------- ----------
 457+ 9B77
 458+ 9B77              4
 459+ 9B77 CD 7D 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9B7A              ;	call Reinicio
 461+ 9B7A
 462+ 9B7A              ; ---------- ---------- ----------
 463+ 9B7A
 464+ 9B7A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9B7C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9B7D
 467+ 9B7D              ;	ld hl,(Indice_Sprite_izq)
 468+ 9B7D              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9B7D
 470+ 9B7D CD 96 9B     	call DESPLZ_IZQ
 471+ 9B80 C1           	pop bc
 472+ 9B81 10 F9        	djnz 5B
 473+ 9B83 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9B86 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9B87 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9B8A CD 58 94     	call Genera_coordenadas
 477+ 9B8D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9B8F
 479+ 9B8F              ; ---------- ---------- ----------
 480+ 9B8F
 481+ 9B8F              ; Movemos, no hay recolocación.
 482+ 9B8F
 483+ 9B8F 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9B92 CD 96 9B     	call DESPLZ_IZQ
 485+ 9B95 C9           2 ret
 486+ 9B96
 487+ 9B96              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9B96              ;
 489+ 9B96              ;	22/9/22
 490+ 9B96
 491+ 9B96              DESPLZ_IZQ
 492+ 9B96
 493+ 9B96 CD A5 9B     	call Desplaza_izquierda
 494+ 9B99 CD F1 9B         call modifica_parametros_1er_DESPLZ
 495+ 9B9C CD 19 9C     	call Ciclo_completo_2
 496+ 9B9F 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BA2 CB BE        	res 7,(hl)
 498+ 9BA4 C9           	ret
 499+ 9BA5
 500+ 9BA5              Desplaza_izquierda
 501+ 9BA5
 502+ 9BA5 3A E0 8B     	ld a,(Vel_left)
 503+ 9BA8 47           	ld b,a
 504+ 9BA9 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BAC 23           1 inc hl
 506+ 9BAD 23           	inc hl
 507+ 9BAE 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BB0 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BB3 CD 39 90     	call Extrae_address
 510+ 9BB6 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BB9
 512+ 9BB9              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BB9
 514+ 9BB9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BB9              ; Cuántos movimientos hemos hecho ??
 516+ 9BB9              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BB9
 518+ 9BB9 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BBC EB           	ex de,hl
 520+ 9BBD A7           	and a
 521+ 9BBE ED 52        	sbc hl,de
 522+ 9BC0 CB 3D        	srl l
 523+ 9BC2 3E 08        6 ld a,8
 524+ 9BC4 95           	sub l
 525+ 9BC5 30 1E        	jr nc,3F
 526+ 9BC7
 527+ 9BC7              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BC7              ; B="0".
 529+ 9BC7
 530+ 9BC7 04           4 inc b
 531+ 9BC8 3C           	inc a
 532+ 9BC9 20 FC        	jr nz,4B
 533+ 9BCB 78           	ld a,b
 534+ 9BCC 08           	ex af,af
 535+ 9BCD 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9BD0 23           5 inc hl
 537+ 9BD1 23           	inc hl
 538+ 9BD2 10 FC        	djnz 5B
 539+ 9BD4 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9BD7 CD 39 90     	call Extrae_address
 541+ 9BDA 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9BDD
 543+ 9BDD              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9BDD              ; _(Posicion_actual).
 545+ 9BDD
 546+ 9BDD 21 CB 8B     	ld hl,Posicion_actual
 547+ 9BE0 35           	dec (hl)
 548+ 9BE1 08           	ex af,af
 549+ 9BE2 6F           	ld l,a
 550+ 9BE3 18 DD        	jr 6B
 551+ 9BE5
 552+ 9BE5              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9BE5
 554+ 9BE5 47           3 ld b,a
 555+ 9BE6 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9BE9 23           2 inc hl
 557+ 9BEA 23           	inc hl
 558+ 9BEB 10 FC        	djnz 2B
 559+ 9BED 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9BF0 C9           8 ret
 561+ 9BF1
 562+ 9BF1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9BF1              ;
 564+ 9BF1              ;	modifica_parametros_1er_DESPLZ
 565+ 9BF1              ;
 566+ 9BF1              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9BF1              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9BF1              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9BF1
 570+ 9BF1 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9BF4 A7           	and a
 572+ 9BF5 20 1E        	jr nz,1F
 573+ 9BF7 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9BF8 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9BFB 21 CA 8B     	ld hl,Columns
 576+ 9BFE 34           	inc (hl)
 577+ 9BFF 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9C02 E6 01        	and 1
 579+ 9C04 20 0F        	jr nz,1F
 580+ 9C06 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C09 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C0A 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C0D CD 58 94     	call Genera_coordenadas
 584+ 9C10 CD 6C 9C     	call Dec_CTRL_DESPLZ
 585+ 9C13 18 03        	jr 2F
 586+ 9C15 CD 6C 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C18 C9           2 ret
 588+ 9C19
 589+ 9C19              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C19
 591+ 9C19 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C1C FE F7        	cp $f7
 593+ 9C1E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C20 30 2C        	jr nc,3F
 595+ 9C22
 596+ 9C22              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C22
 598+ 9C22 06 00        	ld b,0
 599+ 9C24 04           4 inc b
 600+ 9C25 3C           	inc a
 601+ 9C26 FE F7        	cp $f7
 602+ 9C28 20 FA        	jr nz,4B
 603+ 9C2A 3E FF        	ld a,$ff
 604+ 9C2C 90           	sub b
 605+ 9C2D 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C30 18 1C        	jr 3F
 607+ 9C32
 608+ 9C32              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C32
 610+ 9C32 21 CA 8B     1 ld hl,Columns
 611+ 9C35 35           	dec (hl)
 612+ 9C36 AF           	xor a
 613+ 9C37 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C3A 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C3D E6 01        	and 1
 616+ 9C3F 28 0A        	jr z,2F
 617+ 9C41 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C44 2B           	dec hl
 619+ 9C45 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C48 CD 58 94     	call Genera_coordenadas
 621+ 9C4B
 622+ 9C4B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C4B
 624+ 9C4B CD 61 90     2 call Inicia_puntero_objeto_izq
 625+ 9C4E C9           3 ret
 626+ 9C4F
 627+ 9C4F              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C4F              ;
 629+ 9C4F              ;	19/10/22
 630+ 9C4F              ;
 631+ 9C4F              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C4F              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C4F
 634+ 9C4F 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C52 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C54 C9           	ret
 637+ 9C55
 638+ 9C55              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C55              ;
 640+ 9C55              ;	19/10/22
 641+ 9C55              ;
 642+ 9C55              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C55              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C55
 645+ 9C55 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C58 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C5A C9           	ret
 648+ 9C5B
 649+ 9C5B              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C5B              ;
 651+ 9C5B              ;	24/7/22
 652+ 9C5B              ;
 653+ 9C5B              ;	Inc_CTRL_DESPLZ
 654+ 9C5B              ;
 655+ 9C5B              ;
 656+ 9C5B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C5B
 658+ 9C5B 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C5E 3A E1 8B     	ld a,(Vel_right)
 660+ 9C61 A7           	and a
 661+ 9C62 28 06        	jr z,1F
 662+ 9C64 47           	ld b,a
 663+ 9C65 34           3 inc (hl)
 664+ 9C66 10 FD        	djnz 3B
 665+ 9C68 18 01        	jr 2F
 666+ 9C6A 34           1 inc (hl)
 667+ 9C6B C9           2 ret
 668+ 9C6C
 669+ 9C6C              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9C6C              ;
 671+ 9C6C              ;	5/2/23
 672+ 9C6C              ;
 673+ 9C6C              ;	Dec_CTRL_DESPLZ
 674+ 9C6C              ;
 675+ 9C6C              ;
 676+ 9C6C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9C6C
 678+ 9C6C 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9C6F 3A E0 8B     	ld a,(Vel_left)
 680+ 9C72 A7           	and a
 681+ 9C73 28 06        	jr z,1F
 682+ 9C75 47           	ld b,a
 683+ 9C76 35           3 dec (hl)
 684+ 9C77 10 FD        	djnz 3B
 685+ 9C79 18 01        	jr 2F
 686+ 9C7B 35           1 dec (hl)
 687+ 9C7C C9           2 ret
 688+ 9C7D
 689+ 9C7D              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9C7D
 691+ 9C7D 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9C80 01 1F 00     	ld bc,31
 693+ 9C83 A7           	and a
 694+ 9C84 ED 4A        	adc hl,bc
 695+ 9C86 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9C89 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9C8C CB C6        	set 0,(hl)
 698+ 9C8E C9           	ret
 699+ 9C8F
 700+ 9C8F              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9C8F
 702+ 9C8F 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9C92 01 1F 00     	ld bc,31
 704+ 9C95 A7           	and a
 705+ 9C96 ED 42        	sbc hl,bc
 706+ 9C98 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9C9B 21 C8 8B     	ld hl,Ctrl_0
 708+ 9C9E CB CE        	set 1,(hl)
 709+ 9CA0 C9           	ret
 710+ 9CA1
 711+ 9CA1              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CA1
 713+ 9CA1 24           Reaparece_abajo inc h
 714+ 9CA2 01 E0 17     	ld bc,$17e0
 715+ 9CA5 A7           	and a
 716+ 9CA6 ED 4A        	adc hl,bc
 717+ 9CA8 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CAB 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CAE CB D6        	set 2,(hl)
 720+ 9CB0 C9           	ret
 721+ 9CB1
 722+ 9CB1              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CB1
 724+ 9CB1 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CB4 A7           	and a
 726+ 9CB5 ED 42        	sbc hl,bc
 727+ 9CB7 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CBA 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CBD CB DE        	set 3,(hl)
 730+ 9CBF C9           	ret
 731+ 9CC0
 732+ 9CC0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CC0              ;
 734+ 9CC0              ;	15/07/23
 735+ 9CC0
 736+ 9CC0              Reinicio
 737+ 9CC0
 738+ 9CC0              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CC0
 740+ 9CC0 AF           	xor a
 741+ 9CC1 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CC4 CD E2 9C     	call Limpia_contenido_hl
 743+ 9CC7
 744+ 9CC7 21 CB 8B     	ld hl,Posicion_actual
 745+ 9CCA CD E2 9C     	call Limpia_contenido_hl
 746+ 9CCD
 747+ 9CCD CD 3A 92     	call Inicializa_Puntero_indice_mov
 748+ 9CD0 CD E1 9D     	call Inicia_Puntero_mov
 749+ 9CD3
 750+ 9CD3 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9CD6 06 05        	ld b,5
 752+ 9CD8 77           1 ld (hl),a
 753+ 9CD9 23           	inc hl
 754+ 9CDA 10 FC        	djnz 1B
 755+ 9CDC
 756+ 9CDC 21 C7 8B     	ld hl,Ctrl_2
 757+ 9CDF CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9CE1
 759+ 9CE1 C9           	ret
 760+ 9CE2
 761+ 9CE2 77           Limpia_contenido_hl	ld (hl),a
 762+ 9CE3 23           	inc hl
 763+ 9CE4 77           	ld (hl),a
 764+ 9CE5 C9           	ret
 765+ 9CE6
 766+ 9CE6              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9CE6              ;
 768+ 9CE6              ;	18/6/24
 769+ 9CE6              ;
 770+ 9CE6
 771+ 9CE6              Amadeus_a_izquierda
 772+ 9CE6
 773+ 9CE6              ;	Actualiza contador de movimientos.
 774+ 9CE6
 775+ 9CE6 21 79 89     	ld hl,Comm_Amadeus
 776+ 9CE9 35           	dec (hl)
 777+ 9CEA 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9CEC
 779+ 9CEC 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9CEF 2B           	dec hl
 781+ 9CF0 2B           	dec hl
 782+ 9CF1 2B           	dec hl
 783+ 9CF2 2B           	dec hl
 784+ 9CF3 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9CF6
 786+ 9CF6 21 29 8C     	ld hl,Ctrl_3
 787+ 9CF9 CB EE        	set 5,(hl)
 788+ 9CFB
 789+ 9CFB C9           	ret
 790+ 9CFC
 791+ 9CFC 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9CFD C9           	ret
 793+ 9CFE
 794+ 9CFE
 795+ 9CFE              Amadeus_a_derecha
 796+ 9CFE
 797+ 9CFE              ;	Actualiza contador de movimientos.
 798+ 9CFE
 799+ 9CFE 21 79 89     	ld hl,Comm_Amadeus
 800+ 9D01 34           	inc (hl)
 801+ 9D02 3E 7A        	ld a,$7a
 802+ 9D04 BE           	cp (hl)
 803+ 9D05 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D07
 805+ 9D07 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D0A 23           	inc hl
 807+ 9D0B 23           	inc hl
 808+ 9D0C 23           	inc hl
 809+ 9D0D 23           	inc hl
 810+ 9D0E 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D11
 812+ 9D11 21 29 8C     	ld hl,Ctrl_3
 813+ 9D14 CB EE        	set 5,(hl)
 814+ 9D16 C9           	ret
 815+ 9D17
 816+ 9D17 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D18 C9           	ret
# file closed: Direcciones.asm
2313  9D19              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D19              ; ----- ----- ----- ----- -----
   2+ 9D19              ;
   3+ 9D19              ;   28/12/23
   4+ 9D19
   5+ 9D19              Movimiento
   6+ 9D19
   7+ 9D19              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D19
   9+ 9D19 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D1C CB 57            bit 2,a
  11+ 9D1E 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D20
  13+ 9D20 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D23 7E               ld a,(hl)
  15+ 9D24
  16+ 9D24              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D24
  18+ 9D24              Inicia_desplazamiento.
  19+ 9D24
  20+ 9D24              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D24
  22+ 9D24 CD 17 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D27
  24+ 9D27              ; Iniciamos (Repetimos_mov).
  25+ 9D27
  26+ 9D27 7E               ld a,(hl)
  27+ 9D28 E6 0F            and $0f
  28+ 9D2A 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D2D 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D30
  31+ 9D30              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D30
  33+ 9D30 23               inc hl
  34+ 9D31 7E               ld a,(hl)
  35+ 9D32 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D35 2B               dec hl
  37+ 9D36
  38+ 9D36 21 C7 8B         ld hl,Ctrl_2
  39+ 9D39 CB D6            set 2,(hl)
  40+ 9D3B
  41+ 9D3B              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D3B              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D3B
  44+ 9D3B              Desplazamiento_iniciado
  45+ 9D3B
  46+ 9D3B CD EB 9D         call Aplica_desplazamiento
  47+ 9D3E
  48+ 9D3E              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D3E
  50+ 9D3E 3A 29 8C         ld a,(Ctrl_3)
  51+ 9D41 CB 4F            bit 1,a
  52+ 9D43 C0               ret nz
  53+ 9D44
  54+ 9D44 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D47 35               dec (hl)
  56+ 9D48 C0               ret nz
  57+ 9D49
  58+ 9D49              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D49              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D49              ; Analiza (Cola_de_desplazamiento).
  61+ 9D49
  62+ 9D49 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D4C A7               and a
  64+ 9D4D CC 40 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D50 28 30            jr z,Reinicia_el_movimiento
  66+ 9D52
  67+ 9D52 FE FF            cp $ff
  68+ 9D54 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D56
  70+ 9D56 FE FE            cp $fe
  71+ 9D58 CC C5 9D         call z,Fijamos_bucle
  72+ 9D5B 28 25            jr z,Reinicia_el_movimiento
  73+ 9D5D
  74+ 9D5D FE FD            cp $fd
  75+ 9D5F 20 11            jr nz,1F
  76+ 9D61
  77+ 9D61              ; ---
  78+ 9D61              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D61
  80+ 9D61 3A C7 8B         ld a,(Ctrl_2)
  81+ 9D64 CB 5F            bit 3,a
  82+ 9D66 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D68
  84+ 9D68              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D68
  86+ 9D68 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9D6B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9D6D
  89+ 9D6D CD D6 9D         call Inicia_Repetimos_movimiento
  90+ 9D70 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9D72              ; ---
  92+ 9D72
  93+ 9D72 FE 01        1 cp 1
  94+ 9D74 CA AF 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9D77
  96+ 9D77 3D               dec a
  97+ 9D78 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9D7B
  99+ 9D7B 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9D7E 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9D81              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9D81 C9               ret
 103+ 9D82
 104+ 9D82              Reinicia_el_movimiento
 105+ 9D82
 106+ 9D82 3A C7 8B         ld a,(Ctrl_2)
 107+ 9D85 CB 5F            bit 3,a
 108+ 9D87 28 1B            jr z,2F
 109+ 9D89
 110+ 9D89              ; (Cola_de_desplazamiento)="254".
 111+ 9D89
 112+ 9D89 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9D8C 35               dec (hl)
 114+ 9D8D 20 15            jr nz,2F
 115+ 9D8F
 116+ 9D8F              ; Fin de las repeticiones del último movimiento.
 117+ 9D8F
 118+ 9D8F 21 C7 8B         ld hl,Ctrl_2
 119+ 9D92 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9D94
 121+ 9D94 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9D97 23               inc hl
 123+ 9D98 23               inc hl
 124+ 9D99 23               inc hl
 125+ 9D9A 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9D9D              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9D9D 7E               ld a,(hl)
 128+ 9D9E 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9DA1
 130+ 9DA1 C3 49 9D         jp Cola
 131+ 9DA4
 132+ 9DA4 CD E1 9D     2 call Inicia_Puntero_mov
 133+ 9DA7
 134+ 9DA7 21 C7 8B         ld hl,Ctrl_2
 135+ 9DAA CB 96            res 2,(hl)
 136+ 9DAC
 137+ 9DAC C3 19 9D         jp Movimiento
 138+ 9DAF
 139+ 9DAF              Siguiente_desplazamiento
 140+ 9DAF
 141+ 9DAF              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DAF              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DAF
 144+ 9DAF 21 C7 8B         ld hl,Ctrl_2
 145+ 9DB2 CB 96            res 2,(hl)
 146+ 9DB4
 147+ 9DB4 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DB7 23               inc hl
 149+ 9DB8 23               inc hl
 150+ 9DB9 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DBC
 152+ 9DBC 7E               ld a,(hl)
 153+ 9DBD A7               and a
 154+ 9DBE CC 40 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DC1 CA 82 9D         jp z,Reinicia_el_movimiento
 156+ 9DC4
 157+ 9DC4 C9               ret
 158+ 9DC5
 159+ 9DC5              ; Subrutinas -----------------------------------------
 160+ 9DC5              ; ---------- --------- --------- ---------- ----------
 161+ 9DC5              ;
 162+ 9DC5              ;   24/07/23
 163+ 9DC5              ;
 164+ 9DC5              ;   Fijamos_bucle
 165+ 9DC5              ;
 166+ 9DC5              ;
 167+ 9DC5
 168+ 9DC5              Fijamos_bucle
 169+ 9DC5
 170+ 9DC5 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9DC8 3C               inc a
 172+ 9DC9 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9DCC
 174+ 9DCC CD 40 9E         call Incrementa_Puntero_indice_mov
 175+ 9DCF 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9DD2 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9DD5 C9               ret
 178+ 9DD6
 179+ 9DD6              ; ---------- --------- --------- ---------- ----------
 180+ 9DD6              ;
 181+ 9DD6              ;   07/7/23
 182+ 9DD6              ;
 183+ 9DD6              ;   Inicia_Repetimos_movimiento
 184+ 9DD6              ;
 185+ 9DD6              ;
 186+ 9DD6
 187+ 9DD6              Inicia_Repetimos_movimiento
 188+ 9DD6
 189+ 9DD6              ; Iniciamos (Repetimos_movimiento).
 190+ 9DD6
 191+ 9DD6 DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9DDA DD 7E 02         ld a,(ix+2)
 193+ 9DDD 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9DE0
 195+ 9DE0 C9               ret
 196+ 9DE1
 197+ 9DE1              ; ---------- --------- --------- ---------- ----------
 198+ 9DE1              ;
 199+ 9DE1              ;   26/6/23
 200+ 9DE1              ;
 201+ 9DE1              ;   Inicia_Puntero_mov
 202+ 9DE1              ;
 203+ 9DE1              ;
 204+ 9DE1
 205+ 9DE1 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9DE4 CD 39 90         call Extrae_address
 207+ 9DE7 22 EE 8B         ld (Puntero_mov),hl
 208+ 9DEA C9               ret
 209+ 9DEB
 210+ 9DEB              ; ---------- --------- --------- ---------- ----------
 211+ 9DEB              ;
 212+ 9DEB              ;   27/06/23
 213+ 9DEB              ;
 214+ 9DEB              ;   Aplica_movimiento.
 215+ 9DEB
 216+ 9DEB              Aplica_desplazamiento
 217+ 9DEB
 218+ 9DEB              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9DEB
 220+ 9DEB 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9DEE
 222+ 9DEE 7E               ld a,(hl)
 223+ 9DEF E6 F0            and $f0
 224+ 9DF1 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9DF2
 226+ 9DF2 CB 7E            bit 7,(hl)
 227+ 9DF4 28 03            jr z,1F
 228+ 9DF6 CD CD 99         call Mov_up
 229+ 9DF9 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9DFC CB 76            bit 6,(hl)
 231+ 9DFE 28 03            jr z,2F
 232+ 9E00 CD 94 99         call Mov_down
 233+ 9E03
 234+ 9E03              ; Se ha aplicado reinicio ???
 235+ 9E03              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E03
 237+ 9E03              ;    ld a,(Ctrl_3)
 238+ 9E03              ;    bit 1,a
 239+ 9E03              ;    ret nz
 240+ 9E03
 241+ 9E03 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9E06 CB 6E            bit 5,(hl)
 243+ 9E08 28 03            jr z,3F
 244+ 9E0A CD 33 9B         call Mov_left
 245+ 9E0D 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E10 CB 66            bit 4,(hl)
 247+ 9E12 C8               ret z
 248+ 9E13 CD 10 9A         call Mov_right
 249+ 9E16 C9               ret
 250+ 9E17
 251+ 9E17              ; ---------- --------- --------- ---------- ----------
 252+ 9E17              ;
 253+ 9E17              ;   26/06/23
 254+ 9E17              ;
 255+ 9E17              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E17
 257+ 9E17              Ajusta_velocidad_desplazamiento
 258+ 9E17
 259+ 9E17              ; 1er byte de la cadena de movimiento.
 260+ 9E17              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E17
 262+ 9E17 CD 35 9E         call Extrae_nibble_alto
 263+ 9E1A
 264+ 9E1A 32 E2 8B         ld (Vel_up),a
 265+ 9E1D 79               ld a,c
 266+ 9E1E E6 0F            and $0f
 267+ 9E20 32 E3 8B         ld (Vel_down),a
 268+ 9E23
 269+ 9E23              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E23              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E23
 272+ 9E23 23               inc hl
 273+ 9E24 CD 35 9E         call Extrae_nibble_alto
 274+ 9E27
 275+ 9E27 32 E0 8B         ld (Vel_left),a
 276+ 9E2A 79               ld a,c
 277+ 9E2B E6 0F            and $0f
 278+ 9E2D 32 E1 8B         ld (Vel_right),a
 279+ 9E30
 280+ 9E30              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E30
 282+ 9E30 23               inc hl
 283+ 9E31 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E34 C9               ret
 285+ 9E35
 286+ 9E35 06 04        Extrae_nibble_alto ld b,4
 287+ 9E37 7E               ld a,(hl)
 288+ 9E38 4F               ld c,a
 289+ 9E39 E6 F0            and $f0
 290+ 9E3B CB 3F        1 srl a
 291+ 9E3D 10 FC            djnz 1B
 292+ 9E3F C9               ret
 293+ 9E40
 294+ 9E40              ; ---------- --------- --------- ---------- ----------
 295+ 9E40              ;
 296+ 9E40              ;   5/7/23
 297+ 9E40              ;
 298+ 9E40              ;   Incrementa_Puntero_indice_mov
 299+ 9E40
 300+ 9E40              Incrementa_Puntero_indice_mov
 301+ 9E40
 302+ 9E40 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E43 34               inc (hl)
 304+ 9E44
 305+ 9E44 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E47 01 02 00         ld bc,2
 307+ 9E4A A7               and a
 308+ 9E4B 09               add hl,bc
 309+ 9E4C 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E4F
 311+ 9E4F 7E               ld a,(hl)
 312+ 9E50 A7               and a
 313+ 9E51
 314+ 9E51              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E51
 316+ 9E51              ;    jr z,$
 317+ 9E51
 318+ 9E51              ;! Reinicia el Patrón de movimiento.
 319+ 9E51
 320+ 9E51 CC 56 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E54
 322+ 9E54 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E55
 324+ 9E55 C9               ret
 325+ 9E56
 326+ 9E56              ; ---------- --------- --------- ---------- ----------
 327+ 9E56              ;
 328+ 9E56              ;   15/01/24
 329+ 9E56              ;
 330+ 9E56              ;   Inicializa_Puntero_indice_mov
 331+ 9E56
 332+ 9E56              Inicializa_Puntero_indice_mov_2
 333+ 9E56
 334+ 9E56              ; Existe etiqueta de bucle principal???
 335+ 9E56
 336+ 9E56 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E59 24               inc h
 338+ 9E5A 25               dec h
 339+ 9E5B 28 05            jr z,2F
 340+ 9E5D
 341+ 9E5D 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9E60 18 14            jr 3F
 343+ 9E62
 344+ 9E62              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E62
 346+ 9E62 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9E65 47               ld b,a
 348+ 9E66
 349+ 9E66 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9E69 2B           1 dec hl
 351+ 9E6A 2B               dec hl
 352+ 9E6B 10 FC            djnz 1B
 353+ 9E6D 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9E70
 355+ 9E70 AF               xor a
 356+ 9E71 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9E74 18 06            jr 4F
 358+ 9E76
 359+ 9E76 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9E79 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9E7C C9           4 ret
 362+ 9E7D
 363+ 9E7D              ; ----------------------------------------------------------------------
 364+ 9E7D              ;
 365+ 9E7D              ;   30/01/24
 366+ 9E7D              ;
 367+ 9E7D              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9E7D
 369+ 9E7D 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9E80 CD D5 93         call Calcula_salto_en_BC
 371+ 9E83 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9E86 A7               and a
 373+ 9E87 ED 4A            adc hl,bc
 374+ 9E89 C9               ret
 375+ 9E8A
 376+ 9E8A              ; ----------------------------------------------------------------------
 377+ 9E8A              ;
 378+ 9E8A              ;   30/01/24
 379+ 9E8A              ;
 380+ 9E8A              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9E8A              ;
 382+ 9E8A              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9E8A
 384+ 9E8A 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9E8B 23               inc hl
 386+ 9E8C 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9E8D 69               ld l,c
 388+ 9E8E 60               ld h,b
 389+ 9E8F 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9E92 C9               ret
 391+ 9E93
# file closed: Movimiento.asm
2314  9E93              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9E93              ; --------------------------------------------------------------------------------------
   2+ 9E93              ;
   3+ 9E93              ;   21/8/24
   4+ 9E93              ;
   5+ 9E93
   6+ 9E93              Pinta_disparos
   7+ 9E93
   8+ 9E93 D5               push de
   9+ 9E94
  10+ 9E94 ED 73 08 8C      ld (Stack),sp
  11+ 9E98 ED 7B 16 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
  12+ 9E9C D1               pop de
  13+ 9E9D
  14+ 9E9D 14               inc d
  15+ 9E9E 15               dec d
  16+ 9E9F
  17+ 9E9F 28 02            jr z,Pinta_disparos_00
  18+ 9EA1
  19+ 9EA1 18 FE            jr $
  20+ 9EA3
  21+ 9EA3              Pinta_disparos_00
  22+ 9EA3
  23+ 9EA3 ED 7B 14 8C      ld sp,(Album_de_pintado_disparos)
  24+ 9EA7 D1               pop de
  25+ 9EA8
  26+ 9EA8 14               inc d
  27+ 9EA9 15               dec d
  28+ 9EAA
  29+ 9EAA 28 24            jr z,1F
  30+ 9EAC
  31+ 9EAC 21 2B 8C         ld hl,Ctrl_5
  32+ 9EAF CB C6            set 0,(hl)
  33+ 9EB1
  34+ 9EB1               ; Pinta disparo.
  35+ 9EB1
  36+ 9EB1 E1               pop hl
  37+ 9EB2
  38+ 9EB2              ; Puntero objeto en DE.
  39+ 9EB2              ; Puntero_de_impresión en HL.
  40+ 9EB2
  41+ 9EB2              ; 1er scanline.
  42+ 9EB2
  43+ 9EB2 1A               ld a,(de)
  44+ 9EB3 AE               xor (hl)
  45+ 9EB4 77               ld (hl),a
  46+ 9EB5
  47+ 9EB5 13               inc de
  48+ 9EB6 2C               inc l
  49+ 9EB7
  50+ 9EB7 1A               ld a,(de)
  51+ 9EB8 AE               xor (hl)
  52+ 9EB9 77               ld (hl),a
  53+ 9EBA
  54+ 9EBA              ; 2º scanline.
  55+ 9EBA
  56+ 9EBA E1               pop hl
  57+ 9EBB 1B               dec de
  58+ 9EBC
  59+ 9EBC 1A               ld a,(de)
  60+ 9EBD AE               xor (hl)
  61+ 9EBE 77               ld (hl),a
  62+ 9EBF
  63+ 9EBF 13               inc de
  64+ 9EC0 2C               inc l
  65+ 9EC1
  66+ 9EC1 1A               ld a,(de)
  67+ 9EC2 AE               xor (hl)
  68+ 9EC3 77               ld (hl),a
  69+ 9EC4
  70+ 9EC4              ; 3er scanline.
  71+ 9EC4
  72+ 9EC4 E1               pop hl
  73+ 9EC5 1B               dec de
  74+ 9EC6
  75+ 9EC6 1A               ld a,(de)
  76+ 9EC7 AE               xor (hl)
  77+ 9EC8 77               ld (hl),a
  78+ 9EC9
  79+ 9EC9 13               inc de
  80+ 9ECA 2C               inc l
  81+ 9ECB
  82+ 9ECB 1A               ld a,(de)
  83+ 9ECC AE               xor (hl)
  84+ 9ECD 77               ld (hl),a
  85+ 9ECE
  86+ 9ECE 18 FE            jr $
  87+ 9ED0
  88+ 9ED0 ED 7B 08 8C  1 ld sp,(Stack)
  89+ 9ED4 D1               pop de
  90+ 9ED5 C9               ret
  91+ 9ED6
  92+ 9ED6              ; --------------------------------------------------------------------------------------
  93+ 9ED6              ;
  94+ 9ED6              ;   17/8/24
  95+ 9ED6              ;
  96+ 9ED6              ;   Modifica: HL y DE.
  97+ 9ED6
  98+ 9ED6
  99+ 9ED6              Genera_datos_de_impresion_disparos_Amadeus
 100+ 9ED6
 101+ 9ED6 ED 73 08 8C      ld (Stack),sp
 102+ 9EDA 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 103+ 9EDD
 104+ 9EDD 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
 105+ 9EE0 ED 72            sbc hl,sp                                                 ; Última caja ???
 106+ 9EE2 28 2B            jr z,Salida
 107+ 9EE4
 108+ 9EE4 D1               pop de                                                    ; Puntero_objeto del disparo en DE.
 109+ 9EE5
 110+ 9EE5 14               inc d
 111+ 9EE6 15               dec d
 112+ 9EE7
 113+ 9EE7 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
 114+ 9EE9
 115+ 9EE9              Siguiente_disparo_Amadeus
 116+ 9EE9
 117+ 9EE9 D1               pop de
 118+ 9EEA 33               inc sp
 119+ 9EEB 18 F0            jr 1B
 120+ 9EED
 121+ 9EED              Genera_scanlines_de_disparo_Amadeus
 122+ 9EED
 123+ 9EED E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
 124+ 9EEE              ;                                                             ; Puntero_de_impresión del disparo en HL.
 125+ 9EEE 33               inc sp
 126+ 9EEF ED 73 1A 8C      ld (Puntero_rancio_disparos_album),sp                     ; Siguiente disparo en (Nivel_scanlines_disparos_album).
 127+ 9EF3
 128+ 9EF3 ED 7B 18 8C      ld sp,(Nivel_scanlines_disparos_album)
 129+ 9EF7
 130+ 9EF7 C1               pop bc
 131+ 9EF8 C1               pop bc
 132+ 9EF9 C1               pop bc
 133+ 9EFA C1               pop bc
 134+ 9EFB
 135+ 9EFB ED 73 18 8C      ld (Nivel_scanlines_disparos_album),sp                    ; Nuevo nivel del album de disparos.
 136+ 9EFF
 137+ 9EFF E5               push hl                                                   ; 3er scanline del disparo.
 138+ 9F00 CD 5D 99         call PreviousScan
 139+ 9F03 E5               push hl                                                   ; 2º scanline.
 140+ 9F04 CD 5D 99         call PreviousScan
 141+ 9F07 E5               push hl                                                   ; 1er scanline.
 142+ 9F08 D5               push de                                                   ; Puntero_objeto del disparo.
 143+ 9F09
 144+ 9F09 ED 7B 1A 8C      ld sp,(Puntero_rancio_disparos_album)
 145+ 9F0D 18 CE            jr 1B
 146+ 9F0F
 147+ 9F0F ED 7B 08 8C  Salida ld sp,(Stack)
 148+ 9F13 C9               ret
 149+ 9F14
 150+ 9F14              ; --------------------------------------------------------------------------------------
 151+ 9F14              ;
 152+ 9F14              ;   17/08/24
 153+ 9F14              ;
 154+ 9F14
 155+ 9F14              Genera_disparo_Amadeus
 156+ 9F14
 157+ 9F14              ;   Exclusiones.
 158+ 9F14
 159+ 9F14 3A 43 8C         ld a,(Disparo_Amadeus)
 160+ 9F17 A7               and a
 161+ 9F18 C8               ret z                                                    ; Salimos si el disparo de nuestra nave no está habilitado.
 162+ 9F19
 163+ 9F19              ;! Provisionalmente sólo 1 disparo !!!!!!
 164+ 9F19 3D               dec a
 165+ 9F1A 32 43 8C         ld (Disparo_Amadeus),a
 166+ 9F1D              ; ----- ----- ----- -----
 167+ 9F1D
 168+ 9F1D              Define_puntero_objeto_disparo
 169+ 9F1D
 170+ 9F1D              ;   Inicializamos contador.
 171+ 9F1D
 172+ 9F1D 06 00            ld b,0
 173+ 9F1F 2A 75 89         ld hl,(p.imp.amadeus)
 174+ 9F22 2C               inc l
 175+ 9F23
 176+ 9F23 3E 80            ld a,$80
 177+ 9F25 BE               cp (hl)
 178+ 9F26 28 0D            jr z,1F
 179+ 9F28
 180+ 9F28 04               inc b
 181+ 9F29 3E 60            ld a,$60
 182+ 9F2B BE               cp (hl)
 183+ 9F2C 28 07            jr z,1F
 184+ 9F2E
 185+ 9F2E 04               inc b
 186+ 9F2F 3E 18            ld a,$18
 187+ 9F31 BE               cp (hl)
 188+ 9F32 28 01            jr z,1F
 189+ 9F34
 190+ 9F34 04               inc b
 191+ 9F35
 192+ 9F35              ;   Calcula el Puntero_de_impresión del disparo.
 193+ 9F35
 194+ 9F35              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 195+ 9F35
 196+ 9F35 CD 5D 99     1 call PreviousScan
 197+ 9F38
 198+ 9F38 78               ld a,b
 199+ 9F39 CB 3F            srl a
 200+ 9F3B 28 03            jr z,4F
 201+ 9F3D
 202+ 9F3D              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 203+ 9F3D E5               push hl
 204+ 9F3E 18 02            jr 5F
 205+ 9F40 2D           4 dec l
 206+ 9F41 E5               push hl
 207+ 9F42              ; ---
 208+ 9F42
 209+ 9F42              ;   Calcula el Puntero_objeto del disparo.
 210+ 9F42
 211+ 9F42 21 70 83     5 ld hl,Indice_disparo
 212+ 9F45 04               inc b
 213+ 9F46 05               dec b
 214+ 9F47 28 04            jr z,2F
 215+ 9F49
 216+ 9F49              ;   Nos desplazamos por el índice de disparos.
 217+ 9F49
 218+ 9F49 2C           3 inc l
 219+ 9F4A 2C               inc l
 220+ 9F4B 10 FC            djnz 3B
 221+ 9F4D
 222+ 9F4D              ; --- Guarda el Puntero_objeto del disparo en la pila.
 223+ 9F4D CD 39 90     2 call Extrae_address
 224+ 9F50 E5               push hl
 225+ 9F51              ; ---
 226+ 9F51
 227+ 9F51              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 228+ 9F51              ; HL en el 1er .db de la caja y (Puntero_DESPLZ_DISPARO_AMADEUS) avanza una posición en el índice.
 229+ 9F51
 230+ 9F51 2A 2E 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 231+ 9F54 CD 39 90         call Extrae_address
 232+ 9F57
 233+ 9F57 06 02            ld b,2
 234+ 9F59
 235+ 9F59 D1           6 pop de
 236+ 9F5A 73               ld (hl),e
 237+ 9F5B 23               inc hl
 238+ 9F5C 72               ld (hl),d
 239+ 9F5D 23               inc hl
 240+ 9F5E
 241+ 9F5E 10 F9            djnz 6B
 242+ 9F60
 243+ 9F60              Detecta_impacto_en_disparo_de_Amadeus
 244+ 9F60
 245+ 9F60 CD 91 9F         call Detecta_impacto_en_disparo_de_Amadeus01
 246+ 9F63
 247+ 9F63 2A 2E 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 248+ 9F66 23               inc hl
 249+ 9F67 23               inc hl
 250+ 9F68 CD 39 90         call Extrae_address
 251+ 9F6B 2B               dec hl                                               ;  Sitúa el puntero en el .db (Impacto) de la caja del disparo.
 252+ 9F6C 28 02            jr z,7F
 253+ 9F6E 3E 01            ld a,1
 254+ 9F70 77           7 ld (hl),a
 255+ 9F71 C8               ret z
 256+ 9F72
 257+ 9F72              Genera_coordenadas_de_disparo_Amadeus
 258+ 9F72
 259+ 9F72              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 260+ 9F72              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 261+ 9F72
 262+ 9F72 2A 2E 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 263+ 9F75 CD 39 90         call Extrae_address
 264+ 9F78 23               inc hl
 265+ 9F79 23               inc hl
 266+ 9F7A
 267+ 9F7A CD 39 90         call Extrae_address                                 ;   Puntero_de_impresión del disparo en HL.
 268+ 9F7D CD 58 94         call Genera_coordenadas
 269+ 9F80
 270+ 9F80 3D               dec a
 271+ 9F81
 272+ 9F81 21 33 8C         ld hl,Coordenadas_disparo_certero
 273+ 9F84 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 274+ 9F85 23               inc hl
 275+ 9F86 3A BC 8B         ld a,(Coordenada_X)
 276+ 9F89 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 277+ 9F8A
 278+ 9F8A 21 30 8C         ld hl,Impacto2
 279+ 9F8D CB DE            set 3,(hl)                                          ;   Indica que un disparo de nuestra nave ha alcanzado a una entidad.
 280+ 9F8F
 281+ 9F8F AF               xor a                                               ;   Siempre "Z" cuando ejecutamos [Genera_disparo_Amadeus].
 282+ 9F90 C9               ret
 283+ 9F91
 284+ 9F91              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 285+ 9F91              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 286+ 9F91              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 287+ 9F91
 288+ 9F91              ; ----------------------------------------------
 289+ 9F91              ;
 290+ 9F91              ;   12/08/24
 291+ 9F91              ;
 292+ 9F91
 293+ 9F91
 294+ 9F91              Detecta_impacto_en_disparo_de_Amadeus01
 295+ 9F91
 296+ 9F91              Extraccion_de_datos
 297+ 9F91
 298+ 9F91 21 1F 89         ld hl,Indice_de_disparos_Amadeus
 299+ 9F94 CD 39 90         call Extrae_address
 300+ 9F97
 301+ 9F97 5E               ld e,(hl)
 302+ 9F98 23               inc hl
 303+ 9F99 56               ld d,(hl)
 304+ 9F9A 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 305+ 9F9B
 306+ 9F9B 4E               ld c,(hl)
 307+ 9F9C 23               inc hl
 308+ 9F9D 46               ld b,(hl)
 309+ 9F9E 23               inc hl                                                 ;    Puntero_de_impresión del disparo en BC.
 310+ 9F9F
 311+ 9F9F C5               push bc
 312+ 9FA0 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 313+ 9FA1
 314+ 9FA1              Detecta_impacto_
 315+ 9FA1
 316+ 9FA1 1A               ld a,(de)
 317+ 9FA2 A6               and (hl)
 318+ 9FA3 C0               ret nz
 319+ 9FA4
 320+ 9FA4 13               inc de
 321+ 9FA5 23               inc hl
 322+ 9FA6
 323+ 9FA6 1A               ld a,(de)
 324+ 9FA7 A6               and (hl)
 325+ 9FA8 C9               ret
 326+ 9FA9
 327+ 9FA9              ; -------------------------------------------------------------------------------------------------------------
 328+ 9FA9              ;
 329+ 9FA9              ;   8/8/24
 330+ 9FA9              ;
 331+ 9FA9              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 332+ 9FA9              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 333+ 9FA9              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 334+ 9FA9              ;
 335+ 9FA9              ;   MODIFICA: HL,DE,BC y A.
 336+ 9FA9              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 337+ 9FA9              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 338+ 9FA9
 339+ 9FA9              Colision_Entidad_Amadeus
 340+ 9FA9
 341+ 9FA9              ; Posible contacto de entidad con Amadeus. ?????
 342+ 9FA9
 343+ 9FA9              ; Exclusiones:
 344+ 9FA9
 345+ 9FA9 3A 4F 8C         ld a,(Shield)
 346+ 9FAC A7               and a
 347+ 9FAD C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 348+ 9FAE
 349+ 9FAE 21 29 8C         ld hl,Ctrl_3
 350+ 9FB1 CB 76            bit 6,(hl)
 351+ 9FB3 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 352+ 9FB4
 353+ 9FB4 21 30 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 354+ 9FB7 CB 56            bit 2,(hl)
 355+ 9FB9 C0               ret nz
 356+ 9FBA
 357+ 9FBA 3A BD 8B     	ld a,(Coordenada_y)
 358+ 9FBD FE 14        	cp $14
 359+ 9FBF D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 360+ 9FC0
 361+ 9FC0 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 362+ 9FC3 A7               and a
 363+ 9FC4 C0               ret nz
 364+ 9FC5
 365+ 9FC5              Genera_coordenadas_X
 366+ 9FC5
 367+ 9FC5              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 368+ 9FC5              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 369+ 9FC5
 370+ 9FC5              ;   Limpiamos almacenes.
 371+ 9FC5
 372+ 9FC5              ;    call Limpia_Coordenadas_X
 373+ 9FC5
 374+ 9FC5              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 375+ 9FC5
 376+ 9FC5 21 35 8C         ld hl,Coordenadas_X_Entidad
 377+ 9FC8 3A BC 8B         ld a,(Coordenada_X)
 378+ 9FCB CD ED 9F         call Guarda_coordenadas_X
 379+ 9FCE
 380+ 9FCE              ;   Almacenamos las coordenadas X de Amadeus.
 381+ 9FCE
 382+ 9FCE 3A 71 89         ld a,(CX_Amadeus)
 383+ 9FD1 CD ED 9F         call Guarda_coordenadas_X
 384+ 9FD4 CD 01 A0         call Compara_coordenadas_X
 385+ 9FD7 C0               ret nz
 386+ 9FD8
 387+ 9FD8 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 388+ 9FDA 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 389+ 9FDD
 390+ 9FDD 2A FB 8B         ld hl,(Puntero_store_caja)
 391+ 9FE0 2C               inc l
 392+ 9FE1 2C               inc l
 393+ 9FE2 2C               inc l
 394+ 9FE3 2C               inc l
 395+ 9FE4 22 31 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 396+ 9FE7
 397+ 9FE7 21 30 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 398+ 9FEA CB D6            set 2,(hl)
 399+ 9FEC
 400+ 9FEC C9               ret
 401+ 9FED
 402+ 9FED               ; ----- ----- ----- ----- -----
 403+ 9FED
 404+ 9FED 77           Guarda_coordenadas_X ld (hl),a
 405+ 9FEE 3C               inc a
 406+ 9FEF 2C               inc l
 407+ 9FF0 77               ld (hl),a
 408+ 9FF1 3C               inc a
 409+ 9FF2 2C               inc l
 410+ 9FF3 77               ld (hl),a
 411+ 9FF4 2C               inc l
 412+ 9FF5 C9               ret
 413+ 9FF6
 414+ 9FF6 AF           Limpia_Coordenadas_X xor a
 415+ 9FF7 06 06            ld b,6
 416+ 9FF9 21 38 8C         ld hl,Coordenadas_X_Amadeus
 417+ 9FFC 77           1 ld (hl),a
 418+ 9FFD 23               inc hl
 419+ 9FFE 10 FC            djnz 1B
 420+ A000 C9               ret
 421+ A001
 422+ A001              ; ----- ----- ----- ----- -----
 423+ A001
 424+ A001              Compara_coordenadas_X
 425+ A001
 426+ A001 DD 21 35 8C      ld ix,Coordenadas_X_Entidad
 427+ A005 DD 7E 00         ld a,(ix+0)
 428+ A008 CD 16 A0         call Comparando
 429+ A00B C8               ret z
 430+ A00C
 431+ A00C 3C               inc a
 432+ A00D CD 25 A0         call Comparando_1
 433+ A010 C8               ret z
 434+ A011
 435+ A011 3C               inc a
 436+ A012 CD 25 A0         call Comparando_1
 437+ A015 C9               ret
 438+ A016
 439+ A016              ; ----- ----- ----- ----- -----
 440+ A016              ;
 441+ A016              ;   4/12/23
 442+ A016              ;
 443+ A016              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 444+ A016
 445+ A016              Comparando
 446+ A016
 447+ A016 DD 2C            inc ixl
 448+ A018 DD 2C            inc ixl
 449+ A01A DD 2C            inc ixl
 450+ A01C
 451+ A01C DD 46 00         ld b,(ix+0)
 452+ A01F DD 4E 01         ld c,(ix+1)
 453+ A022 DD 56 02         ld d,(ix+2)
 454+ A025
 455+ A025 B8           Comparando_1 cp b
 456+ A026 C8               ret z
 457+ A027 B9               cp c
 458+ A028 C8               ret z
 459+ A029 BA               cp d
 460+ A02A C9               ret
 461+ A02B
 462+ A02B              ; -----------------------------------------------------------------------
 463+ A02B              ;
 464+ A02B              ;   04/7/24
 465+ A02B              ;
 466+ A02B
 467+ A02B              Detecta_colision_nave_entidad
 468+ A02B
 469+ A02B              ; Exclusiones:
 470+ A02B
 471+ A02B              ; Salimos de la rutina si no hay advertencia de posible colisión.
 472+ A02B
 473+ A02B 21 30 8C     	ld hl,Impacto2
 474+ A02E CB 56        	bit 2,(hl)
 475+ A030 C8           	ret z
 476+ A031
 477+ A031              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 478+ A031
 479+ A031 2A 77 89         ld hl,(Pamm_Amadeus)
 480+ A034 CD 39 90         call Extrae_address
 481+ A037 54               ld d,h
 482+ A038 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 483+ A039
 484+ A039 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 485+ A03C 06 10            ld b,16                                        ; Contador de scanlines en B.
 486+ A03E FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 487+ A041
 488+ A041 C5           1 push bc
 489+ A042 06 03            ld b,3
 490+ A044 E5               push hl
 491+ A045
 492+ A045              ; .db
 493+ A045
 494+ A045 1A           3 ld a,(de)
 495+ A046 A7               and a
 496+ A047 20 03            jr nz,4F
 497+ A049
 498+ A049 2C               inc l
 499+ A04A 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 500+ A04C
 501+ A04C ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 502+ A04E 28 04            jr z,2F
 503+ A050
 504+ A050              ; Impacto.
 505+ A050 FD 2D            dec iyl
 506+ A052 28 22            jr z,5F
 507+ A054
 508+ A054 1C           2 inc e
 509+ A055 10 EE            djnz 3B
 510+ A057
 511+ A057 E1               pop hl
 512+ A058
 513+ A058              ; Hay salto de línea en el puntero de impresión ???
 514+ A058
 515+ A058 7C               ld a,h
 516+ A059 D6 57            sub $57
 517+ A05B 20 0A            jr nz,6F
 518+ A05D
 519+ A05D              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 520+ A05D
 521+ A05D 2A 75 89         ld hl,(p.imp.amadeus)
 522+ A060 3E 20            ld a,$20
 523+ A062 A7               and a
 524+ A063 85               add l
 525+ A064 6F               ld l,a
 526+ A065 18 01            jr 7F
 527+ A067
 528+ A067 24           6 inc h
 529+ A068
 530+ A068 C1           7 pop bc
 531+ A069 10 D6            djnz 1B
 532+ A06B
 533+ A06B              ;   Fin de la comparativa.
 534+ A06B
 535+ A06B              ;   NO HAY COLISIÓN !!!!!.
 536+ A06B              ;
 537+ A06B              ;   .db (Impacto) de Amadeus a "0".
 538+ A06B              ;   RES el bit2 de (Impacto2).
 539+ A06B              ;
 540+ A06B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 541+ A06B              ;   Lo colocamos a "0".
 542+ A06B
 543+ A06B 21 30 8C         ld hl,Impacto2
 544+ A06E CB 96            res 2,(hl)
 545+ A070 2A 31 8C         ld hl,(Entidad_sospechosa_de_colision)
 546+ A073 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 547+ A075 C9               ret
 548+ A076
 549+ A076              ;   COLISIÓN !!!!!.
 550+ A076              ;
 551+ A076              ;   .db (Impacto) de Amadeus a "1".
 552+ A076              ;   SET el bit3 de (Impacto2).
 553+ A076              ;
 554+ A076              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 555+ A076
 556+ A076 E1           5 pop hl
 557+ A077 C1               pop bc
 558+ A078
 559+ A078 21 74 89         ld hl,Impacto_Amadeus
 560+ A07B 36 01            ld (hl),1
 561+ A07D 21 30 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 562+ A080 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 563+ A082
 564+ A082 11 C0 87         ld de,Indice_Explosion_entidades
 565+ A085 2A 31 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 566+ A088
 567+ A088 23               inc hl
 568+ A089 23               inc hl
 569+ A08A 23               inc hl
 570+ A08B
 571+ A08B 73               ld (hl),e
 572+ A08C 23               inc hl
 573+ A08D 72               ld (hl),d
 574+ A08E
 575+ A08E              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 576+ A08E
 577+ A08E 11 60 88         ld de,Indice_Explosion_Amadeus
 578+ A091 21 77 89         ld hl,Pamm_Amadeus
 579+ A094
 580+ A094 73               ld (hl),e
 581+ A095 23               inc hl
 582+ A096 72               ld (hl),d
 583+ A097
 584+ A097 C9               ret
 585+ A098
 586+ A098
 587+ A098
# file closed: Disparo.asm
2315  A098
2316  A098              	SAVESNA "Pruebas.sna", START
2317  A098
2318  A098
2319  A098
2320  A098
# file closed: Banco_de_pruebas.asm
