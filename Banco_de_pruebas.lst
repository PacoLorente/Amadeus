# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 C8 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A DB 89     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 10        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20 CB 57        	bit 2,a
  41  AA22 28 0C        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  42  AA24
  43  AA24              ; Borramos:
  44  AA24
  45  AA24 CD 19 91     	call Pinta_Sprites
  46  AA27
  47  AA27              ; Pintamos:
  48  AA27
  49  AA27 2A CA 89     	ld hl,(Album_de_pintado)
  50  AA2A 22 D5 89     	ld (Scanlines_album_SP),hl
  51  AA2D
  52  AA2D CD 19 91     	call Pinta_Sprites
  53  AA30
  54  AA30              ; Posible colisión Entidad-Amadeus ???
  55  AA30
  56  AA30              ;	ld a,(Impacto2)
  57  AA30              ;	bit 2,a
  58  AA30              ;	jr z,1F
  59  AA30
  60  AA30              ;	call Detecta_colision_nave_entidad
  61  AA30
  62  AA30              ;1 ld a,4
  63  AA30              ;	out ($fe),a
  64  AA30              ;	call Gestiona_Amadeus
  65  AA30
  66  AA30              ;	ld a,7
  67  AA30              ;	out ($fe),a											; Borde blanco.
  68  AA30              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  69  AA30              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  70  AA30
  71  AA30              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  72  AA30
  73  AA30              ;	call Recupera_parametros_DRAW
  74  AA30
  75  AA30 CD 62 8C     1 call Actualiza_relojes
  76  AA33
  77  AA33 21 DB 89     	ld hl,Ctrl_3
  78  AA36 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  79  AA38 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
  80  AA3A
  81  AA3A FD E1        	pop iy
  82  AA3C DD E1        	pop ix
  83  AA3E F1           	pop af
  84  AA3F C1           	pop bc
  85  AA40 D1           	pop de
  86  AA41 E1           	pop hl
  87  AA42 D9           	exx
  88  AA43 C1           	pop bc
  89  AA44 D1           	pop de
  90  AA45 E1           	pop hl
  91  AA46 08           	ex af,af'
  92  AA47 F1           	pop af
  93  AA48 08           	ex af,af'
  94  AA49 D9           	exx
  95  AA4A
  96  AA4A ED 7B C8 89  	ld sp,(Stack_3)
  97  AA4E
  98  AA4E FB           	ei
  99  AA4F
 100  AA4F 3E 01        	ld a,1												; Borde azul.
 101  AA51 D3 FE        	out ($fe),a
 102  AA53
 103  AA53 C9           	ret
 104  AA54
 105  AA54              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 106  AA54
 107  AA54              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA54              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA54              ;
   3+ AA54              ;	17/02/23
   4+ AA54              ;
   5+ AA54              ;	Sprites e índices.
   6+ AA54
   7+ AA54              	org $8119
   8+ 8119
   9+ 8119              ; Disparo.
  10+ 8119
  11+ 8119 21 81        Indice_disparo defw Disparo_0
  12+ 811B 27 81        	defw Disparo_f9
  13+ 811D 2D 81        	defw Disparo_fb
  14+ 811F 33 81        	defw Disparo_fd
  15+ 8121
  16+ 8121              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8121 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 8125 01 80
  18+ 8127              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8127 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 812B 00 60
  20+ 812D              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 812D 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8131 18 00
  22+ 8133              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8133 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8137 06 00
  24+ 8139
  25+ 8139              ; ----------------------------------------------------------------------------------------
  26+ 8139
  27+ 8139              ; Badsat_izq. 2x2.
  28+ 8139
  29+ 8139 49 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 813B C0 82        	defw Badsat_izq_fe
  31+ 813D 90 82        	defw Badsat_izq_fd
  32+ 813F 60 82        	defw Badsat_izq_fc
  33+ 8141 30 82        	defw Badsat_izq_fb
  34+ 8143 00 82        	defw Badsat_izq_fa
  35+ 8145 A9 81        	defw Badsat_izq_f9
  36+ 8147 79 81        	defw Badsat_izq_f8
  37+ 8149
  38+ 8149 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 814C 02 14 00     	DEFB 	$02,$14,$00
  40+ 814F 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8152 02 55 00     	DEFB 	$02,$55,$00
  42+ 8155 02 AA 00     	DEFB	$02,$AA,$00
  43+ 8158 02 54 00     	DEFB 	$02,$54,$00
  44+ 815B 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 815E 03 60 00     	DEFB 	$03,$60,$00
  46+ 8161 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 8164 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 8167 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 816A 54 40 00     	DEFB 	$54,$40,$00
  50+ 816D AA 60 00     	DEFB	$AA,$60,$00
  51+ 8170 54 00 00     	DEFB 	$54,$00,$00
  52+ 8173 28 00 00     	DEFB 	$28,$00,$00
  53+ 8176 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 8179
  55+ 8179 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 817D 0A 00 01 15
  56+ 8181 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 8185 01 55 00 01
  57+ 8189 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 818D 00 01 B0 00
  58+ 8191 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 8195 FC 00 15 F4
  59+ 8199 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 819D 55 30 00 2A
  60+ 81A1 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 81A5 00 08 00 00
  61+ 81A9
  62+ 81A9 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  62+ 81AD 85 00 00 8A
  63+ 81B1 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  63+ 81B5 00 AA 80 00
  64+ 81B9 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  64+ 81BD 00 00 D8 00
  65+ 81C1 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  65+ 81C5 FE 00 0A FA
  66+ 81C9 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  66+ 81CD 2A 98 00 15
  67+ 81D1 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  67+ 81D5 00 04 00 00
  68+ 81D9
  69+ 81D9
  70+ 81D9              ;! 39 bytes libres aquí !!!!!
  71+ 81D9
  72+ 81D9              	org $8200
  73+ 8200
  74+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  74+ 8204 42 80 00 45
  75+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  75+ 820C 00 55 40 00
  76+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  76+ 8214 00 00 6C 00
  77+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  77+ 821C FF 00 05 7D
  78+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  78+ 8224 15 4C 00 0A
  79+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  79+ 822C 00 02 00 00
  80+ 8230
  81+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  81+ 8234 21 40 00 22
  82+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  82+ 823C 00 2A A0 00
  83+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  83+ 8244 80 00 36 00
  84+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  84+ 824C 7F 80 02 BE
  85+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  85+ 8254 0A A6 00 05
  86+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  86+ 825C 00 01 00 00
  87+ 8260
  88+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  88+ 8264 10 A0 00 11
  89+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  89+ 826C 00 15 50 00
  90+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  90+ 8274 40 00 1B 00
  91+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  91+ 827C BF C0 01 5F
  92+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  92+ 8284 05 53 00 02
  93+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  93+ 828C 00 00 80 00
  94+ 8290
  95+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  95+ 8294 08 50 00 08
  96+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  96+ 829C 00 0A A8 00
  97+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  97+ 82A4 A0 00 0D 80
  98+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  98+ 82AC 5F F8 00 AF
  99+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  99+ 82B4 02 A9 00 01
 100+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 100+ 82BC 00 00 40 00
 101+ 82C0
 102+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 102+ 82C4 04 28 00 04
 103+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 103+ 82CC 00 05 54 00
 104+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 104+ 82D4 D0 00 06 C0
 105+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 105+ 82DC 2F FC 00 57
 106+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 106+ 82E4 01 54 80 00
 107+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 107+ 82EC 00 00 20 00
 108+ 82F0
 109+ 82F0
 110+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
 111+ 82F2 30 83        	defw Badsat_der_f8
 112+ 82F4 60 83        	defw Badsat_der_f9
 113+ 82F6 90 83        	defw Badsat_der_fa
 114+ 82F8 C0 83        	defw Badsat_der_fb
 115+ 82FA 00 84        	defw Badsat_der_fc
 116+ 82FC 30 84        	defw Badsat_der_fd
 117+ 82FE 60 84        	defw Badsat_der_fe
 118+ 8300
 119+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 120+ 8303 28 40 00     	DEFB    $28,$40,$00
 121+ 8306 54 40 00     	DEFB	$54,$40,$00
 122+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 123+ 830C 55 40 00     	DEFB	$55,$40,$00
 124+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 125+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 126+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 127+ 8318 07 50 00     	DEFB	$07,$50,$00
 128+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 129+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 130+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 131+ 8324 06 55 00     	DEFB	$06,$55,$00
 132+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 133+ 832A 00 14 00     	DEFB	$00,$14,$00
 134+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 135+ 8330
 136+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 136+ 8334 20 00 2A 20
 137+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 137+ 833C 2A A0 00 15
 138+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 138+ 8344 00 03 60 00
 139+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 139+ 834C F4 00 0B EA
 140+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 140+ 8354 03 2A 80 00
 141+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 141+ 835C 00 00 04 00
 142+ 8360
 143+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 143+ 8364 10 00 15 10
 144+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 144+ 836C 15 50 00 0A
 145+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 145+ 8374 80 01 B0 00
 146+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 146+ 837C FA 00 05 F5
 147+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 147+ 8384 01 95 40 00
 148+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 148+ 838C 00 00 02 00
 149+ 8390
 150+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 150+ 8394 08 00 0A 88
 151+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 151+ 839C 0A A8 00 05
 152+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 152+ 83A4 C0 00 D8 00
 153+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 153+ 83AC FD 00 02 FA
 154+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 154+ 83B4 00 CA A0 00
 155+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 155+ 83BC 80 00 01 00
 156+ 83C0
 157+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 157+ 83C4 84 00 05 44
 158+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 158+ 83CC 05 54 00 02
 159+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 159+ 83D4 E0 00 6C 00
 160+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 160+ 83DC FE 80 01 7D
 161+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 161+ 83E4 00 65 50 00
 162+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 162+ 83EC 40 00 00 80
 163+ 83F0
 164+ 83F0              ;! 16 bytes libres aquí !!!!!
 165+ 83F0
 166+ 83F0              	org $8400
 167+ 8400
 168+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 168+ 8404 42 00 02 A2
 169+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 169+ 840C 02 AA 00 01
 170+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 170+ 8414 F0 00 36 00
 171+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 171+ 841C FF 40 00 BE
 172+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 172+ 8424 00 32 A8 00
 173+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 173+ 842C A0 00 00 40
 174+ 8430
 175+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 175+ 8434 A1 00 01 51
 176+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 176+ 843C 01 55 00 00
 177+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 177+ 8444 F8 00 1B 00
 178+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 178+ 844C FF A0 00 1F
 179+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 179+ 8454 00 09 54 00
 180+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 180+ 845C 50 00 00 20
 181+ 8460
 182+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 182+ 8464 50 80 00 A8
 183+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 183+ 846C 00 AA 80 00
 184+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 184+ 8474 FC 00 0D 80
 185+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 185+ 847C FF D0 00 0F
 186+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 186+ 8484 00 04 AA 00
 187+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 187+ 848C 28 00 00 10
 188+ 8490
 189+ 8490              ; ----------------------------------------------------------------------------------------
 190+ 8490
 191+ 8490              ; Amadeus. 2x2.
 192+ 8490
 193+ 8490              ;	org $8119
 194+ 8490
 195+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 196+ 8492 00 00        	defw 0
 197+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 8496 00 00        	defw 0
 199+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 849A 00 00        	defw 0
 201+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 849E 00 00        	defw 0	 								; (Fín de índice).
 203+ 84A0
 204+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 205+ 84A2 00 00        	defw 0
 206+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 84A6 00 00        	defw 0
 208+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 84AA 00 00        	defw 0
 210+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 212+ 84B0
 213+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 213+ 84B4 26 64 24 24
 214+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 214+ 84BC 6F F6 67 E6
 215+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 215+ 84C4 F7 EF FF FF
 216+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 216+ 84CC 8B D1 71 8E
 217+ 84D0
 218+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 218+ 84D4 F1 00 09 99
 219+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 219+ 84DC 0B 0D 00 1B
 220+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 220+ 84E4 80 19 F9 80
 221+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 221+ 84EC F3 C0 3D FB
 222+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 222+ 84F4 3E F7 C0 3E
 223+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 223+ 84FC 40 1C 63 80
 224+ 8500
 225+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 225+ 8504 3C 40 02 66
 226+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 226+ 850C 02 C3 40 06
 227+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 227+ 8514 60 06 7E 60
 228+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 228+ 851C 3C F0 0F 7E
 229+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 229+ 8524 0F BD F0 0F
 230+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 230+ 852C 10 07 18 E0
 231+ 8530
 232+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 232+ 8534 8F 10 00 99
 233+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 233+ 853C 00 B0 D0 01
 234+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 234+ 8544 D8 01 9F 98
 235+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 235+ 854C CF 3C 03 DF
 236+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 236+ 8554 03 EF 7C 03
 237+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 237+ 855C 44 01 C6 38
 238+ 8560
 239+ 8560              ; ----------------------------------------------------------------------------------------
 240+ 8560
 241+ 8560              ;	org $8690
 242+ 8560
 243+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 244+ 8562 96 85        	defw Explosion_2x3_2
 245+ 8564 C6 85        	defw Explosion_2x3_3
 246+ 8566
 247+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 247+ 856A 10 00 04 38
 248+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 248+ 8572 02 E6 80 01
 249+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 249+ 857A 00 03 DD 80
 250+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 250+ 8582 3B 80 01 9D
 251+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 251+ 858A 02 FD 80 03
 252+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 252+ 8592 00 08 00 00
 253+ 8596
 254+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 254+ 859A 38 10 03 BC
 255+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 255+ 85A2 04 06 C0 00
 256+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 256+ 85AA 00 03 DD 80
 257+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 257+ 85B2 3A 70 01 9C
 258+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 258+ 85BA 04 F8 80 06
 259+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 259+ 85C2 00 00 00 00
 260+ 85C6
 261+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 261+ 85CA 00 20 08 00
 262+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 262+ 85D2 00 06 00 00
 263+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 263+ 85DA 00 00 14 30
 264+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 264+ 85E2 38 00 01 08
 265+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 265+ 85EA 00 80 00 04
 266+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 266+ 85F2 10 08 00 20
 267+ 85F6
 268+ 85F6              ; ------------------------------------------
 269+ 85F6
 270+ 85F6 FC 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 271+ 85F8 1C 86        	defw Explosion_2x2_2
 272+ 85FA 3C 86        	defw Explosion_2x2_3
 273+ 85FC
 274+ 85FC 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 274+ 8600 43 84 37 D8
 275+ 8604 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 275+ 8608 17 F0 3D D8
 276+ 860C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 276+ 8610 19 D0 1F 60
 277+ 8614 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 277+ 8618 40 00 80 00
 278+ 861C
 279+ 861C
 280+ 861C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 280+ 8620 3B C2 60 0C
 281+ 8624 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 281+ 8628 07 F0 3D D8
 282+ 862C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 282+ 8630 19 C6 1F 64
 283+ 8634 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 283+ 8638 80 00 00 00
 284+ 863C
 285+ 863C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 285+ 8640 88 04 10 0C
 286+ 8644 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 286+ 8648 81 E0 01 43
 287+ 864C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 287+ 8650 10 80 18 00
 288+ 8654 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 288+ 8658 60 01 80 02
 289+ 865C
 290+ 865C
 291+ 865C
 292+ 865C
 293+ 865C
# file closed: Sprites_e_indices.asm
 108  865C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 865C              ; ---------------------------------------------------------------------
   2+ 865C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 865C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 865C              ; ---------------------------------------------------------------------
   5+ 865C
   6+ 865C              ; 27/03/24
   7+ 865C              ;
   8+ 865C              ;	En esta tabla iremos almacenando:
   9+ 865C              ;
  10+ 865C              ;	(Columna_Y),(mem.address de los scanlines masticados en el Scanlines_album) de cada entidad en curso.
  11+ 865C
  12+ 865C 00 00 00...  Tabla_para_ordenar_entidades_antes_de_pintar ds 21
  13+ 8671
  14+ 8671              ;	db 0, defw 0
  15+ 8671              ;	db 0, defw 0
  16+ 8671              ;	db 0, defw 0
  17+ 8671              ;	db 0, defw 0
  18+ 8671              ;	db 0, defw 0
  19+ 8671              ;	db 0, defw 0
  20+ 8671              ;	db 0, defw 0
  21+ 8671
  22+ 8671 B6 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  23+ 8673              ;	defw ...
  24+ 8673              ; 	defw ...
  25+ 8673 00 00        	defw 0
  26+ 8675
  27+ 8675              ; Control. %00000001 00000001
  28+ 8675              ;
  29+ 8675              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  30+ 8675              ;                    _ hacen las entidades hacia abajo.
  31+ 8675              ;
  32+ 8675              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  33+ 8675
  34+ 8675 7B 86        Indice_de_disparos_Amadeus defw Disparo_1A
  35+ 8677 83 86        	defw Disparo_2A
  36+ 8679 8B 86        	defw Disparo_3A
  37+ 867B
  38+ 867B 00 00        Disparo_1A defw 0									; Control.
  39+ 867D 00 00        	defw 0											; Puntero objeto.
  40+ 867F 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  41+ 8681 00 00        	defw 0											; Rutina de impresión.
  42+ 8683
  43+ 8683 00 00        Disparo_2A defw 0									; Control.
  44+ 8685 00 00        	defw 0											; Puntero objeto.
  45+ 8687 00 00        	defw 0											; Puntero de impresión.
  46+ 8689 00 00        	defw 0											; Rutina de impresión.
  47+ 868B
  48+ 868B 00 00        Disparo_3A defw 0
  49+ 868D
  50+ 868D A3 86        Indice_de_disparos_entidades defw Disparo_1
  51+ 868F AB 86        	defw Disparo_2
  52+ 8691 B3 86        	defw Disparo_3
  53+ 8693 BB 86        	defw Disparo_4
  54+ 8695 C3 86        	defw Disparo_5
  55+ 8697 CB 86        	defw Disparo_6
  56+ 8699 D3 86        	defw Disparo_7
  57+ 869B DB 86        	defw Disparo_8
  58+ 869D E3 86        	defw Disparo_9
  59+ 869F EB 86        	defw Disparo_10
  60+ 86A1 F3 86        	defw Disparo_11
  61+ 86A3
  62+ 86A3 00 00        Disparo_1 defw 0									; Control.
  63+ 86A5 00 00        	defw 0											; Puntero objeto.
  64+ 86A7 00 00        	defw 0											; Puntero de impresión.
  65+ 86A9 00 00        	defw 0											; Rutina de impresión.
  66+ 86AB
  67+ 86AB 00 00        Disparo_2 defw 0									; Control.
  68+ 86AD 00 00        	defw 0											; Puntero objeto.
  69+ 86AF 00 00        	defw 0											; Puntero de impresión.
  70+ 86B1 00 00        	defw 0											; Rutina de impresión.
  71+ 86B3
  72+ 86B3 00 00        Disparo_3 defw 0									; Control.
  73+ 86B5 00 00        	defw 0											; Puntero objeto.
  74+ 86B7 00 00        	defw 0											; Puntero de impresión.
  75+ 86B9 00 00        	defw 0											; Rutina de impresión.
  76+ 86BB
  77+ 86BB 00 00        Disparo_4 defw 0									; Control.
  78+ 86BD 00 00        	defw 0											; Puntero objeto.
  79+ 86BF 00 00        	defw 0											; Puntero de impresión.
  80+ 86C1 00 00        	defw 0											; Rutina de impresión.
  81+ 86C3
  82+ 86C3 00 00        Disparo_5 defw 0									; Control.
  83+ 86C5 00 00        	defw 0											; Puntero objeto.
  84+ 86C7 00 00        	defw 0											; Puntero de impresión.
  85+ 86C9 00 00        	defw 0											; Rutina de impresión.
  86+ 86CB
  87+ 86CB 00 00        Disparo_6 defw 0									; Control.
  88+ 86CD 00 00        	defw 0											; Puntero objeto.
  89+ 86CF 00 00        	defw 0											; Puntero de impresión.
  90+ 86D1 00 00        	defw 0											; Rutina de impresión.
  91+ 86D3
  92+ 86D3 00 00        Disparo_7 defw 0									; Control.
  93+ 86D5 00 00        	defw 0											; Puntero objeto.
  94+ 86D7 00 00        	defw 0											; Puntero de impresión.
  95+ 86D9 00 00        	defw 0											; Rutina de impresión.
  96+ 86DB
  97+ 86DB 00 00        Disparo_8 defw 0									; Control.
  98+ 86DD 00 00        	defw 0											; Puntero objeto.
  99+ 86DF 00 00        	defw 0											; Puntero de impresión.
 100+ 86E1 00 00        	defw 0											; Rutina de impresión.
 101+ 86E3
 102+ 86E3 00 00        Disparo_9 defw 0									; Control.
 103+ 86E5 00 00        	defw 0											; Puntero objeto.
 104+ 86E7 00 00        	defw 0											; Puntero de impresión.
 105+ 86E9 00 00        	defw 0											; Rutina de impresión.
 106+ 86EB
 107+ 86EB 00 00        Disparo_10 defw 0									; Control.
 108+ 86ED 00 00        	defw 0											; Puntero objeto.
 109+ 86EF 00 00        	defw 0											; Puntero de impresión.
 110+ 86F1 00 00        	defw 0											; Rutina de impresión.
 111+ 86F3
 112+ 86F3 00 00        Disparo_11 defw 0
 113+ 86F5
 114+ 86F5              ; -------------------------------------------------------------------------------------
 115+ 86F5              ;
 116+ 86F5              ;	Índice de cajas de entidades.
 117+ 86F5              ;
 118+ 86F5              ;	18/1/24
 119+ 86F5              ;
 120+ 86F5
 121+ 86F5              Indice_de_cajas_de_entidades
 122+ 86F5
 123+ 86F5 3D 87        	defw Caja_1
 124+ 86F7 4A 87        	defw Caja_2
 125+ 86F9 57 87        	defw Caja_3
 126+ 86FB 64 87        	defw Caja_4
 127+ 86FD 71 87        	defw Caja_5
 128+ 86FF 7E 87        	defw Caja_6
 129+ 8701 8B 87        	defw Caja_7
 130+ 8703
 131+ 8703 00 00        	defw 0
 132+ 8705 00 00        	defw 0
 133+ 8707
 134+ 8707              ; ---------- ---------- ---------- ---------- ----------
 135+ 8707
 136+ 8707 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 137+ 870A 00 00        	defw 0		 										; (Posicion_actual).
 138+ 870C 00 00        	defw 0	 											; (Puntero_objeto).
 139+ 870E 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 140+ 8710
 141+ 8710 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 142+ 8711 05           	db %00000101										; (Attr).
 143+ 8712 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 144+ 8714 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 145+ 8716 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 146+ 8718 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 147+ 871A C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 148+ 871C 04           	db 4 												; (Cuad_objeto).
 149+ 871D 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 150+ 871E 00 00 00...  	ds 6												; Variables_de_borrado
 151+ 8724
 152+ 8724 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 153+ 8726
 154+ 8726              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 155+ 8726 00 00        	defw 0
 156+ 8728 00 00        	defw 0 												; Contador_de_mov_masticados
 157+ 872A 40           	db $40												; (Ctrl_0).
 158+ 872B 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 158+ 872F 00 00
 159+ 8731 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 160+ 8734 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 161+ 8736 00           	db 0												; (Cola_de_desplazamiento).
 162+ 8737 00           	db 0 												; (Columnas).
 163+ 8738 00 00        	defw 0												; (Limite_horizontal).
 164+ 873A 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 165+ 873D
 166+ 873D              ; ---------- ---------- ---------- ---------- ----------
 167+ 873D              ;
 168+ 873D              ;	22/01/24
 169+ 873D              ;
 170+ 873D              ; 	Cada caja tiene 13 bytes !!!
 171+ 873D
 172+ 873D 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 173+ 8740 00           	db %00000000										; (Attr).
 174+ 8741 00           	db 0												; (Impacto).
 175+ 8742 00 00        	defw 0												; (Puntero_de_impresion).
 176+ 8744 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 177+ 8746 00 00        	defw 0 												; (Contador_de_mov_masticados).
 178+ 8748 00           	db 0												; (Ctrl_0).
 179+ 8749 00           	db 0												; (Ctrl_2).
 180+ 874A
 181+ 874A              ; ---------- ---------- ---------- ---------- ----------
 182+ 874A
 183+ 874A 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 184+ 874D 00           	db %00000000										; (Attr).
 185+ 874E 00           	db 0												; (Impacto).
 186+ 874F 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 8751 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 8753 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 8755 00           	db 0												; (Ctrl_0).
 190+ 8756 00           	db 0												; (Ctrl_2).
 191+ 8757
 192+ 8757              ; ---------- ---------- ---------- ---------- ----------
 193+ 8757
 194+ 8757 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 195+ 875A 00           	db %00000000										; (Attr).
 196+ 875B 00           	db 0												; (Impacto).
 197+ 875C 00 00        	defw 0												; (Puntero_de_impresion).
 198+ 875E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 199+ 8760 00 00        	defw 0 												; (Contador_de_mov_masticados).
 200+ 8762 00           	db 0												; (Ctrl_0).
 201+ 8763 00           	db 0												; (Ctrl_2).
 202+ 8764
 203+ 8764              ; ---------- ---------- ---------- ---------- ----------
 204+ 8764
 205+ 8764 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 206+ 8767 00           	db %00000000										; (Attr).
 207+ 8768 00           	db 0												; (Impacto).
 208+ 8769 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 876B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 876D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 876F 00           	db 0												; (Ctrl_0).
 212+ 8770 00           	db 0												; (Ctrl_2).
 213+ 8771
 214+ 8771              ; ---------- ---------- ---------- ---------- ----------
 215+ 8771
 216+ 8771 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 8774 00           	db %00000000										; (Attr).
 218+ 8775 00           	db 0												; (Impacto).
 219+ 8776 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 8778 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 877A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 877C 00           	db 0												; (Ctrl_0).
 223+ 877D 00           	db 0												; (Ctrl_2).
 224+ 877E
 225+ 877E              ; ---------- ---------- ---------- ---------- ----------
 226+ 877E
 227+ 877E 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 228+ 8781 00           	db %00000000										; (Attr).
 229+ 8782 00           	db 0												; (Impacto).
 230+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 231+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 232+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 233+ 8789 00           	db 0												; (Ctrl_0).
 234+ 878A 00           	db 0												; (Ctrl_2).
 235+ 878B
 236+ 878B              ; ---------- ---------- ---------- ---------- ----------
 237+ 878B
 238+ 878B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 239+ 878E 00           	db %00000000										; (Attr).
 240+ 878F 00           	db 0												; (Impacto).
 241+ 8790 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 8792 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 8794 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 8796 00           	db 0												; (Ctrl_0).
 245+ 8797 00           	db 0												; (Ctrl_2).
 246+ 8798
 247+ 8798              ; -------------------------------------------------------------------------------------
 248+ 8798              ;
 249+ 8798              ;	11/1/24
 250+ 8798              ;
 251+ 8798              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 8798              ;
 253+ 8798              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 8798              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 8798              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 8798              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 8798
 258+ 8798              Indice_de_definiciones_de_entidades
 259+ 8798
 260+ 8798 9C 87        	defw Entidad_1
 261+ 879A A9 87        	defw Entidad_2
 262+ 879C
 263+ 879C              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 879C
 265+ 879C              ;	BADSAT, (Satélite malvado).
 266+ 879C
 267+ 879C 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 879F 04           	db %00000100										; (Attr).
 269+ 87A0 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87A2 39 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87A4 03 40        	defw $4003	                                     	; (Posicion_inicio).
 272+ 87A6 01           	db 1												; (Cuad_objeto).
 273+ 87A7 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87A9
 275+ 87A9 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87AC 02           	db %00000010										; (Attr).
 277+ 87AD F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87AF 39 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87B1 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87B3 01           	db 1												; (Cuad_objeto).
 281+ 87B4 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87B6
# file closed: Cajas_y_disparos.asm
 109  87B6              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87B6
   2+ 87B6
   3+ 87B6              ;   07/07/23
   4+ 87B6              ;
   5+ 87B6              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87B6              ;
   7+ 87B6              ;   Codificación:
   8+ 87B6              ;
   9+ 87B6              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87B6              ;
  11+ 87B6              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87B6              ;
  13+ 87B6              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87B6              ;
  15+ 87B6              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87B6              ;
  17+ 87B6              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87B6              ;                               ..... %01000010 Vel_up 4
  19+ 87B6              ;                                               Vel_down 2
  20+ 87B6              ;                               ..... $42
  21+ 87B6              ;
  22+ 87B6              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87B6              ;
  24+ 87B6              ;                               ..... %01000010 Vel_left 4
  25+ 87B6              ;                                               Vel_right 2
  26+ 87B6              ;                               ..... $42
  27+ 87B6              ;
  28+ 87B6              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87B6              ;
  30+ 87B6              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87B6              ;
  32+ 87B6              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87B6              ;
  34+ 87B6              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87B6              ;                                     $53
  36+ 87B6              ;
  37+ 87B6              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87B6              ;
  39+ 87B6              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87B6              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87B6              ;
  42+ 87B6              ;                       Arriba ..... $81
  43+ 87B6              ;                       Arriba - izquierda ..... $a1
  44+ 87B6              ;                       Arriba - derecha ..... $91
  45+ 87B6              ;
  46+ 87B6              ;                       Abajo ..... $41
  47+ 87B6              ;                       Abajo - izquierda ..... $61
  48+ 87B6              ;                       Abajo - derecha ..... $51
  49+ 87B6              ;
  50+ 87B6              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87B6              ;
  52+ 87B6              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87B6              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87B6              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87B6              ;
  56+ 87B6              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87B6              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87B6              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87B6              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87B6              ;
  61+ 87B6              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87B6              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87B6              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87B6              ;
  65+ 87B6              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87B6              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87B6              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87B6              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87B6
  70+ 87B6              ; ----- ----- ----- ----- -----
  71+ 87B6
  72+ 87B6 E2 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87B8 EA 87            defw F_1
  74+ 87BA F4 87            defw F_2
  75+ 87BC FE 87            defw Codo_abajo_derecha
  76+ 87BE 32 88            defw Derecha_y_subiendo
  77+ 87C0 3C 88            defw Derecha_y_subiendo_1
  78+ 87C2 46 88            defw F_3
  79+ 87C4 50 88            defw F_4
  80+ 87C6 5A 88            defw Derecha_y_bajando
  81+ 87C8 64 88            defw Derecha_y_bajando_1
  82+ 87CA 6E 88            defw Derecha_y_bajando_2
  83+ 87CC 78 88            defw Codo_derecha_abajo
  84+ 87CE A8 88            defw Codo_abajo_izq.
  85+ 87D0 DC 88            defw Izquierda_y_subiendo
  86+ 87D2 E6 88            defw Izquierda_y_subiendo_1
  87+ 87D4 F0 88            defw F_5
  88+ 87D6 FA 88            defw F_6
  89+ 87D8 04 89            defw Izquierda_y_bajando
  90+ 87DA 0E 89            defw Izquierda_y_bajando_1
  91+ 87DC 18 89            defw Izquierda_y_bajando_2
  92+ 87DE 22 89            defw Codo_izquierda_abajo
  93+ 87E0 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87E2
  95+ 87E2 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87E6 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87EA
  98+ 87EA 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87EE 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87F2 08 00
 100+ 87F4
 101+ 87F4 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87F8 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87FC 0F FE
 103+ 87FE
 104+ 87FE 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8802 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8806 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 880A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 880E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8812 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8816 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 881A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 881E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8822 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8826 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 882A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 882E 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8832
 118+ 8832 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8836 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 883A 06 00
 120+ 883C
 121+ 883C 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8840 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8844 02 00
 123+ 8846
 124+ 8846 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 884A 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 884E 04 00
 126+ 8850
 127+ 8850 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8854 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8858 08 00
 129+ 885A
 130+ 885A 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 885E 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8862 02 00
 132+ 8864
 133+ 8864 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8868 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 886C 06 00
 135+ 886E
 136+ 886E 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8872 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8876 06 00
 138+ 8878
 139+ 8878              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8878
 141+ 8878 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 887C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8880 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8884 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8888 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 888C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8890 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8894 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8898 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 889C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88A0 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88A4 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88A8
 154+ 88A8 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88AC 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88B0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88B4 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88B8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88BC 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88C0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88C4 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88C8 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88CC 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88D0 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88D4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88D8 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88DC
 168+ 88DC 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88E0 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88E4 06 00
 170+ 88E6
 171+ 88E6 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88EA 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88EE 02 00
 173+ 88F0
 174+ 88F0 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88F4 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88F8 04 00
 176+ 88FA
 177+ 88FA 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 88FE 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8902 08 00
 179+ 8904
 180+ 8904 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8908 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 890C 02 00
 182+ 890E
 183+ 890E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8912 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8916 06 00
 185+ 8918
 186+ 8918 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 891C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8920 06 00
 188+ 8922
 189+ 8922 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8926 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 892A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 892E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8932 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8936 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 893A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 893E 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8942 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8946 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 894A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 894E 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8952
 202+ 8952
 203+ 8952
 204+ 8952
 205+ 8952
 206+ 8952
 207+ 8952
 208+ 8952
 209+ 8952
 210+ 8952
# file closed: Patrones_de_mov.asm
 110  8952              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8952              ; 19/1/24
   2+ 8952
   3+ 8952              Indice_de_niveles
   4+ 8952
   5+ 8952 5A 89        	defw Nivel_1
   6+ 8954 66 89        	defw Nivel_2
   7+ 8956
   8+ 8956              ;	...
   9+ 8956              ;	...
  10+ 8956              ;	+ Niveles ...
  11+ 8956
  12+ 8956 00 00        	defw 0
  13+ 8958 00 00        	defw 0
  14+ 895A
  15+ 895A 07           Nivel_1 db 7									; Nº de entidades.
  16+ 895B 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 895F 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8963 01 01 01
  18+ 8966
  19+ 8966 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8967 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 896B 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 896F 01 02
  22+ 8971 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8975 01 02
  23+ 8977
# file closed: Niveles.asm
 111  8977
 112  8977              ; ******************************************************************************************************************************************************************************************
 113  8977              ; Constantes.
 114  8977              ; ******************************************************************************************************************************************************************************************
 115  8977              ;
 116  8977              ; 09/03/24
 117  8977
 118  8977              ;
 119  8977              ; Constantes.
 120  8977              ;
 121  8977
 122  8977              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
 123  8977
 124  8977              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 125  8977              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 126  8977              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 127  8977              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 128  8977
 129  8977              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb00 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 130  8977
 131  8977              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
 132  8977
 133  8977              ;                                                       ; 35 bytes por entidad.
 134  8977              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 135  8977              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 136  8977              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 137  8977              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 138  8977
 139  8977              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
 140  8977
 141  8977
 142  8977              ; ******************************************************************************************************************************************************************************************
 143  8977              ; Variables.
 144  8977              ; ******************************************************************************************************************************************************************************************
 145  8977              ;
 146  8977              ; 18/01/24
 147  8977              ;
 148  8977              ; Variables de DRAW. (Motor principal).	42 Bytes.
 149  8977              ;
 150  8977
 151  8977              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 152  8977
 153  8977 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 154  8978              ;															- Patrón de movimiento.
 155  8978              ;															- Aspecto
 156  8978 00           Filas db 0												; Filas. [DRAW]
 157  8979 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 158  897A 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 159  897C 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 160  897E 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 161  897F 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 162  8980
 163  8980              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 164  8980
 165  8980 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 166  8981              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 167  8981              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 168  8981 00           Attr db 0												; Atributos de la entidad:
 169  8982
 170  8982              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 171  8982              ;
 172  8982              ;	COLORES: 0 ..... NEGRO
 173  8982              ;    		 1 ..... AZUL
 174  8982              ; 			 2 ..... ROJO
 175  8982              ;			 3 ..... MAGENTA
 176  8982              ; 			 4 ..... VERDE
 177  8982              ; 			 5 ..... CIAN
 178  8982              ;			 6 ..... AMARILLO
 179  8982              ; 			 7 ..... BLANCO
 180  8982
 181  8982 00 00        Indice_Sprite_der defw 0
 182  8984 00 00        Indice_Sprite_izq defw 0
 183  8986 00 00        Puntero_DESPLZ_der defw 0
 184  8988 00 00        Puntero_DESPLZ_izq defw 0
 185  898A
 186  898A 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 187  898C 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 188  898D
 189  898D              ; Variables de objeto. (Características).
 190  898D
 191  898D 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 192  898E              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 193  898E              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 194  898E              ; Variables_de_borrado ds 6
 195  898E
 196  898E 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 197  8990              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 198  8990
 199  8990 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 200  8992
 201  8992              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 202  8992              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 203  8992
 204  8992 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 205  8994              ;														; _palabras que componen el "movimiento_masticado".
 206  8994
 207  8994              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 208  8994
 209  8994 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 210  8995              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 211  8995              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 212  8995              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 213  8995              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 214  8995              ;
 215  8995              ; 														DESCRIPCIÖN:
 216  8995              ;
 217  8995              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 218  8995              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 219  8995              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 220  8995              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 221  8995              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 222  8995              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 223  8995              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 224  8995              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 225  8995              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 226  8995              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 227  8995              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 228  8995              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 229  8995              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 230  8995              ;
 231  8995              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 232  8995              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 233  8995              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 234  8995
 235  8995              ; Variables de funcionamiento. [DRAW].
 236  8995
 237  8995 00           Columnas db 0
 238  8996 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 239  8998              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 240  8998 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 241  8999
 242  8999              ; variables de control general.
 243  8999
 244  8999 00           Ctrl_2 db 0
 245  899A              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 246  899A              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 247  899A              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 248  899A              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 249  899A              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 250  899A              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 251  899A              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 252  899A              ;
 253  899A              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 254  899A              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 255  899A              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 256  899A              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 257  899A              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 258  899A              ;														BIT 4, ???
 259  899A              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 260  899A
 261  899A 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 262  899B
 263  899B              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 264  899B
 265  899B              ;					         		---------;      ;---------
 266  899B
 267  899B              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 268  899B
 269  899B              Perfiles_de_velocidad
 270  899B
 271  899B 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 272  899C 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 273  899D 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 274  899E 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 275  899F
 276  899F              ; Contadores de 16 bits.
 277  899F
 278  899F 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 279  89A1 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 280  89A3 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 281  89A5 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 282  89A7
 283  89A7              ; Movimiento. ------------------------------------------------------------------------------------------------------
 284  89A7
 285  89A7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 286  89A9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 287  89AB 00 00        Puntero_indice_mov_bucle defw 0							;
 288  89AD              ;
 289  89AD              ;
 290  89AD 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 291  89AE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 292  89AE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 293  89AE 00           Incrementa_puntero_backup db 0
 294  89AF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 295  89B0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 296  89B0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 297  89B1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 298  89B2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 299  89B3              ;
 300  89B3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 301  89B3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 302  89B3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 303  89B3              ;
 304  89B3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 305  89B3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 306  89B3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 307  89B3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 308  89B3              ;
 309  89B3              ;														;	"$ff" ..... Bucle infinito de repetición.
 310  89B3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 311  89B3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 312  89B3              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 313  89B3
 314  89B3 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 315  89B4
 316  89B4              ;														DESCRIPCIÓN:
 317  89B4              ;
 318  89B4              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 319  89B4              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 320  89B4              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 321  89B4              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 322  89B4              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 323  89B4              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 324  89B4
 325  89B4              ;														BIT 3, Recarga de nueva oleada.
 326  89B4              ;														BIT 4, Recarga de nueva oleada.
 327  89B4              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 328  89B4              ;														BIT 6, **** Frame completo.
 329  89B4              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 330  89B4
 331  89B4 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 332  89B6              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 333  89B6              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 334  89B6              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 335  89B6
 336  89B6              ; Gestión de ENTIDADES y CAJAS.
 337  89B6
 338  89B6 00 00        Puntero_store_caja defw 0
 339  89B8 00 00        Puntero_restore_caja defw 0
 340  89BA 00 00        Indice_restore_caja defw 0
 341  89BC 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 342  89BD 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 343  89BE 00           Entidades_en_curso db 0									; ..... ..... .....
 344  89BF 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 345  89C0              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 346  89C0              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 347  89C0              ;														; _ (Numero_de_malotes)="0".
 348  89C0 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 349  89C2 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 350  89C4              ;														; _ puntero (Indice_entidades).
 351  89C4
 352  89C4              ;---------------------------------------------------------------------------------------------------------------
 353  89C4              ;
 354  89C4              ;	11/01/24
 355  89C4              ;
 356  89C4              ;	Álbumes.
 357  89C4
 358  89C4 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 359  89C6              ;														; _variable para almacenar lo posición del puntero_
 360  89C6              ; 														; _de pila, SP.
 361  89C6 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 362  89C8              ;														; La utiliza la rutina [Extrae_foto_registros].
 363  89C8 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 364  89CA
 365  89CA
 366  89CA              ; Impresión. ----------------------------------------------------------------------------------------------------
 367  89CA
 368  89CA 00 00        Album_de_pintado defw 0
 369  89CC 00 00        Album_de_borrado defw 0
 370  89CE 00 00        Techo_Scanlines_album defw 0
 371  89D0 00 00        Techo_Scanlines_album_2 defw 0
 372  89D2 00           Switch db 0
 373  89D3 00 00        Techo defw 0
 374  89D5 00 00        Scanlines_album_SP defw 0
 375  89D7 5C 86        India_SP defw Tabla_para_ordenar_entidades_antes_de_pintar
 376  89D9 5F 86        India_2_SP defw Tabla_para_ordenar_entidades_antes_de_pintar+3
 377  89DB
 378  89DB 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 379  89DC              ;
 380  89DC              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 381  89DC              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 382  89DC              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 383  89DC              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 384  89DC              ;																Habilita el borrado/pintado de sprites.
 385  89DC              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 386  89DC              ;																_ a la baja.
 387  89DC
 388  89DC 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 389  89DD              ;
 390  89DD              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 391  89DD              ;
 392  89DD              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 393  89DD              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 394  89DD              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 395  89DD              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 396  89DD              ;
 397  89DD              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 398  89DD              ;															_ masticados ya generados.
 399  89DD              ;
 400  89DD              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 401  89DD              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 402  89DD              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 403  89DD              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 404  89DD
 405  89DD
 406  89DD              ; Gestión de Disparos.
 407  89DD
 408  89DD              ;;Numero_de_disparotes db 0
 409  89DD              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 410  89DD              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 411  89DD              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 412  89DD              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 413  89DD              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 414  89DD              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 415  89DD              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 416  89DD              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 417  89DD              ;														; _produzca colisión.
 418  89DD              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 419  89DD              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 420  89DD              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 421  89DD              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 422  89DD 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 423  89E0              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 424  89E0              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 425  89E0
 426  89E0              ;---------------------------------------------------------------------------------------------------------------
 427  89E0
 428  89E0              ; Relojes y temporizaciones.
 429  89E0
 430  89E0 00           Contador_de_frames db 0
 431  89E1 00           Contador_de_frames_2 db 0
 432  89E2
 433  89E2              ;Clock_explosion db 4
 434  89E2 14           Clock_Entidades_en_curso db 20
 435  89E3 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 436  89E4              ;														; Repite la oleada de entidades.
 437  89E4              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 438  89E4              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 439  89E4              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 440  89E4
 441  89E4              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 442  89E4              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 443  89E4              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 444  89E4
 445  89E4              ;---------------------------------------------------------------------------------------------------------------
 446  89E4
 447  89E4              ; Gestión de NIVELES.
 448  89E4
 449  89E4 00           Nivel db 0												; Nivel actual del juego.
 450  89E5 00 00        Puntero_indice_NIVELES defw 0
 451  89E7 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 452  89E9              ; 														; _ que definen el NIVEL.
 453  89E9              ; Y todo comienza aquí .....
 454  89E9              ;
 455  89E9              ; 	INICIO  *************************************************************************************************************************************************************************
 456  89E9              ;
 457  89E9              ;	5/1/24
 458  89E9
 459  89E9              START
 460  89E9
 461  89E9 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 462  89EC 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 463  89EE ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 464  89F0 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 465  89F2 F3           	DI
 466  89F3
 467  89F3              ;	ld a,%00000111
 468  89F3              ;	call Cls
 469  89F3 CD 4E 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 470  89F6
 471  89F6              ; INICIALIZACIÓN.
 472  89F6
 473  89F6              ;	Inicializa 1er Nivel.
 474  89F6
 475  89F6 21 52 89     	ld hl,Indice_de_niveles
 476  89F9 22 E5 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 477  89FC CD 74 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 478  89FF              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 479  89FF              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 480  89FF              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 481  89FF
 482  89FF              ;	Provisional, (para desarrollo).
 483  89FF              	;-
 484  89FF              ;	ld hl,Numero_parcial_de_entidades
 485  89FF              ;	ld b,(hl)
 486  89FF              ;	inc b
 487  89FF              ;	dec b
 488  89FF              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 489  89FF
 490  89FF CD B1 8B     	call Inicia_albumes_de_lineas
 491  8A02
 492  8A02 CD B9 8C     4 call Inicia_Entidades
 493  8A05
 494  8A05 CD C1 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 495  8A08              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 496  8A08              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 497  8A08              ; (Esto se dá cuando se inicia una nueva oleada).
 498  8A08
 499  8A08              ;	ld a,(Ctrl_1)
 500  8A08              ;	bit 3,a
 501  8A08              ;	jr nz,5F											 ; Loop
 502  8A08
 503  8A08              ; 	INICIA AMADEUS !!!!!
 504  8A08
 505  8A08              ;3 call Restore_Amadeus
 506  8A08              ;	call Inicia_Puntero_objeto
 507  8A08              ;	call Draw
 508  8A08
 509  8A08              ;	call Guarda_movimiento_masticado	;! Provisional
 510  8A08
 511  8A08              ;	call Genera_datos_de_impresion
 512  8A08              ;	call Guarda_datos_de_borrado_Amadeus
 513  8A08
 514  8A08              ;	ld de,Amadeus_db
 515  8A08              ;	call Store_Amadeus
 516  8A08
 517  8A08              ; 	INICIA DISPAROS !!!!!
 518  8A08
 519  8A08              ;	call Inicia_Puntero_Disparo_Entidades
 520  8A08              ;	call Inicia_Puntero_Disparo_Amadeus
 521  8A08
 522  8A08              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 523  8A08
 524  8A08              ;5 call Inicia_punteros_de_cajas
 525  8A08              ;	call Restore_entidad
 526  8A08
 527  8A08              ;	ld a,(Ctrl_1)
 528  8A08              ;	bit 3,a
 529  8A08              ;	jr z,6F
 530  8A08
 531  8A08              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 532  8A08
 533  8A08              ;	ld hl,Ctrl_1
 534  8A08              ;	res 3,(hl)
 535  8A08              ;	jr Main
 536  8A08
 537  8A08              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 538  8A08
 539  8A08              6
 540  8A08
 541  8A08              ;	call Calcula_numero_de_malotes
 542  8A08
 543  8A08              ; Damos por concluida la construcción del FRAME.
 544  8A08              ; Inicializamos (Scanlines_album_SP). Se sitúa al comienzo del álbum que acabamos de completar.
 545  8A08
 546  8A08 2A D5 89     	ld hl,(Scanlines_album_SP)
 547  8A0B 22 CE 89     	ld (Techo_Scanlines_album),hl
 548  8A0E
 549  8A0E 2A CC 89     	ld hl,(Album_de_borrado)
 550  8A11 22 D5 89     	ld (Scanlines_album_SP),hl
 551  8A14
 552  8A14 21 DB 89     	ld hl,Ctrl_3
 553  8A17 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 554  8A19 CB D6        	set 2,(hl)
 555  8A1B
 556  8A1B FB           	ei
 557  8A1C 76           	halt
 558  8A1D
 559  8A1D              ; ------------------------------------
 560  8A1D
 561  8A1D              Main
 562  8A1D              ;
 563  8A1D              ;	11/12/23
 564  8A1D
 565  8A1D              ; Aparece nueva entidad ???
 566  8A1D
 567  8A1D              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 568  8A1D              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 569  8A1D              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 570  8A1D              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 571  8A1D              ;														; _un 2º bloque.
 572  8A1D
 573  8A1D              ;	call Genera_scanlines_masticados_a_borrar
 574  8A1D              ;	call Limpia_Almacen_de_scanlines_masticados
 575  8A1D
 576  8A1D              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 577  8A1D              ; 													 	; _(Scanlines_album_SP).
 578  8A1D
 579  8A1D 3A E2 89     	ld a,(Clock_Entidades_en_curso)
 580  8A20 47           	ld b,a
 581  8A21 3A E0 89     	ld a,(Contador_de_frames)
 582  8A24 B8           	cp b
 583  8A25 20 18        	jr nz,13F
 584  8A27
 585  8A27              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 586  8A27              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 587  8A27
 588  8A27 3A BD 89     21 ld a,(Numero_parcial_de_entidades)
 589  8A2A 47           	ld b,a
 590  8A2B 3A BE 89     	ld a,(Entidades_en_curso)
 591  8A2E B8           	cp b
 592  8A2F 28 0E        	jr z,13F
 593  8A31 30 0C        	jr nc,13F
 594  8A33
 595  8A33 3C           	inc a
 596  8A34 32 BE 89     	ld (Entidades_en_curso),a
 597  8A37
 598  8A37              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 599  8A37
 600  8A37 3A E2 89     	ld a,(Clock_Entidades_en_curso)
 601  8A3A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 602  8A3A              ;! _ IMPREDECIBLE !!!!
 603  8A3A C6 64        	add 100
 604  8A3C 32 E2 89     	ld (Clock_Entidades_en_curso),a
 605  8A3F
 606  8A3F              ; -------------------------------------------------------------------------------------------------------------
 607  8A3F
 608  8A3F              ; Habilita disparos.
 609  8A3F
 610  8A3F              13
 611  8A3F
 612  8A3F              ;	ld hl,Disparo_Amadeus
 613  8A3F              ;	ld de,CLOCK_repone_disparo_Amadeus
 614  8A3F              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 615  8A3F
 616  8A3F              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 617  8A3F              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 618  8A3F              ;	call Habilita_disparos
 619  8A3F
 620  8A3F              ; COLISIONES.
 621  8A3F
 622  8A3F              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 623  8A3F
 624  8A3F              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 625  8A3F              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 626  8A3F              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 627  8A3F
 628  8A3F              ;	xor a
 629  8A3F              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 630  8A3F
 631  8A3F              ;	call Inicia_punteros_de_cajas
 632  8A3F              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 633  8A3F              ; 														; _ en DRAW.
 634  8A3F
 635  8A3F              ;	ld a,(Filas)
 636  8A3F              ;	and a
 637  8A3F              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 638  8A3F              ;	call Incrementa_punteros_de_cajas
 639  8A3F              ;	jr 12B
 640  8A3F
 641  8A3F              ; ---------------------------------------------------------------------------------------
 642  8A3F
 643  8A3F 3A BD 89     10 ld a,(Numero_parcial_de_entidades)
 644  8A42 47               ld b,a
 645  8A43 A7           	and a
 646  8A44 20 00        	jr nz,11F
 647  8A46
 648  8A46              ;	ld hl,Ctrl_1;
 649  8A46              ;	bit 4,(hl)
 650  8A46              ;	jp nz,16F
 651  8A46
 652  8A46              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 653  8A46
 654  8A46              ;	ld hl,Ctrl_1
 655  8A46              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 656  8A46
 657  8A46              ;	ld a,(Contador_de_frames)
 658  8A46              ;	inc a
 659  8A46              ;	ld (Activa_recarga_cajas),a
 660  8A46
 661  8A46              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 662  8A46
 663  8A46 3A BE 89     11 ld a,(Entidades_en_curso)
 664  8A49 A7           	and a
 665  8A4A 28 33        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 666  8A4C 47           	ld b,a												; No hay entidades que gestionar.
 667  8A4D
 668  8A4D              ; ( Código que ejecutamos con cada entidad: ).
 669  8A4D
 670  8A4D              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 671  8A4D              ;
 672  8A4D              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 673  8A4D
 674  8A4D 21 DB 89     	ld hl,Ctrl_3
 675  8A50 CB D6        	set 2,(hl)
 676  8A52 CD BF 8A     	call Change
 677  8A55
 678  8A55 C5           15 push bc 												; Nº de entidades en curso.
 679  8A56
 680  8A56 CD 12 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 681  8A59 CD 94 8A     	call Recauda_informacion_de_entidad_en_curso		; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 682  8A5C
 683  8A5C
 684  8A5C              ; Existe "Entidad_guía" ???.
 685  8A5C              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 686  8A5C
 687  8A5C              ;	ld a,(Ctrl_3)
 688  8A5C              ;	bit 1,a
 689  8A5C              ;	jr nz,22F
 690  8A5C
 691  8A5C              ; Almacén de "Movimientos_masticados" lleno ???
 692  8A5C              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 693  8A5C              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 694  8A5C
 695  8A5C              ;;	ld a,(Ctrl_3)
 696  8A5C              ;;	bit 3,a
 697  8A5C              ;;	jr nz,22F
 698  8A5C
 699  8A5C              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 700  8A5C
 701  8A5C              ;	ld hl,Ctrl_2
 702  8A5C              ;	set 5,(hl)
 703  8A5C              ;	ld hl,Ctrl_3
 704  8A5C              ;	set 1,(hl)
 705  8A5C
 706  8A5C              ; Impacto ???
 707  8A5C
 708  8A5C              ;22 ld a,(Impacto)
 709  8A5C              ;	and a
 710  8A5C              ;	jr z,8F
 711  8A5C
 712  8A5C              ; Hay Impacto en esta entidad.
 713  8A5C
 714  8A5C              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 715  8A5C              ;	dec (hl)
 716  8A5C              ;	jp nz,17F
 717  8A5C
 718  8A5C              ;! Velocidad de la animación de la explosión.
 719  8A5C
 720  8A5C              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 721  8A5C              ;														; _,(velocidad de la explosión).
 722  8A5C              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 723  8A5C
 724  8A5C              ;	call Repone_datos_de_borrado
 725  8A5C              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 726  8A5C
 727  8A5C              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 728  8A5C
 729  8A5C              ;	ld a,(Ctrl_2)
 730  8A5C              ;	bit 1,a
 731  8A5C              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 732  8A5C
 733  8A5C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 734  8A5C
 735  8A5C              ;	ld a,(CTRL_DESPLZ)
 736  8A5C              ;	and a
 737  8A5C              ;	jr nz,18F
 738  8A5C
 739  8A5C              ;	ld hl,Indice_Explosion_2x2-2
 740  8A5C              ;	ld (Puntero_DESPLZ_der),hl
 741  8A5C              ;	jr 19F
 742  8A5C
 743  8A5C              ;18 ld hl,Indice_Explosion_2x3-2
 744  8A5C              ;	ld (Puntero_DESPLZ_der),hl
 745  8A5C
 746  8A5C              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 747  8A5C              ;	set 1,(hl)
 748  8A5C              ;	jr 7F
 749  8A5C
 750  8A5C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 751  8A5C              ; _con las coordenadas de la entidad almacenada en DRAW.
 752  8A5C
 753  8A5C              ;8 ld a,(Ctrl_1)
 754  8A5C              ;	bit 2,a
 755  8A5C              ;	jr z,7F
 756  8A5C
 757  8A5C              ;	ld hl,(Coordenadas_disparo_certero)
 758  8A5C              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 759  8A5C              ;														; E contiene la coordenada_X del disparo.
 760  8A5C              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 761  8A5C              ;														; H FILA, (Coordenada_y de la entidad).
 762  8A5C              ;	and a
 763  8A5C              ;	sbc hl,de
 764  8A5C
 765  8A5C              ;	call Determina_resultado_comparativa
 766  8A5C
 767  8A5C              ;	ld a,b
 768  8A5C              ;	and a
 769  8A5C              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 770  8A5C
 771  8A5C              ; ----- ----- -----
 772  8A5C
 773  8A5C              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 774  8A5C              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 775  8A5C
 776  8A5C              ;	ld hl,Ctrl_1
 777  8A5C              ;	res 2,(hl)
 778  8A5C
 779  8A5C              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 780  8A5C
 781  8A5C              ;	ld a,(Ctrl_0)
 782  8A5C              ;	bit 4,a
 783  8A5C              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 784  8A5C
 785  8A5C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 786  8A5C              ; [[[
 787  8A5C              ;	call Detecta_disparo_entidad
 788  8A5C              ; ]]]
 789  8A5C
 790  8A5C CD 1D 8D     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 791  8A5F
 792  8A5F              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 793  8A5F
 794  8A5F 2A 8E 89     	ld hl,(Puntero_de_impresion)
 795  8A62 CD 67 8E     	call Genera_coordenadas
 796  8A65
 797  8A65              ;	ld hl,Ctrl_0
 798  8A65              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 799  8A65
 800  8A65 CD 13 8D     17 call Store_Restore_cajas
 801  8A68
 802  8A68 C1           	pop bc
 803  8A69
 804  8A69 10 EA        	djnz 15B
 805  8A6B
 806  8A6B              ; Hemos terminado de gestionar TODAS las ENTIDADES.
 807  8A6B
 808  8A6B CD A8 8A     	call Inicializa_India_y_limpia_tabla				; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 809  8A6E
 810  8A6E CD C1 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 811  8A71
 812  8A71              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 813  8A71              ; Hemos gestionado todas las unidades.
 814  8A71              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 815  8A71
 816  8A71              ;	ld hl,Ctrl_1
 817  8A71              ;	res 2,(hl)
 818  8A71
 819  8A71
 820  8A71 CD DA 8A     	call Borra_diferencia
 821  8A74
 822  8A74 3A DB 89     	ld a,(Ctrl_3)
 823  8A77 CB 5F        	bit 3,a
 824  8A79 20 04        	jr nz,16F
 825  8A7B
 826  8A7B EB           	ex de,hl
 827  8A7C 71           	ld (hl),c
 828  8A7D 2C           	inc l
 829  8A7E 70           	ld (hl),b											; Nuevo techo, mayor que el anterior.
 830  8A7F
 831  8A7F              ; Aquí situaremos la rutina que ordena el índice Masa.
 832  8A7F
 833  8A7F 2A CC 89     16 ld hl,(Album_de_borrado)
 834  8A82 22 D5 89     	ld (Scanlines_album_SP),hl
 835  8A85
 836  8A85 21 DB 89     	ld hl,Ctrl_3
 837  8A88 CB C6        	set 0,(hl) 											; Indica Frame completo.
 838  8A8A CB 9E        	res 3,(hl)
 839  8A8C
 840  8A8C AF           	xor a
 841  8A8D D3 FE        	out ($fe),a
 842  8A8F 76           	halt
 843  8A90
 844  8A90              ; ----------------------------------------
 845  8A90
 846  8A90              ;	ld a,(Ctrl_1) 										; Existe Loop?
 847  8A90              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 848  8A90 CA 1D 8A     	jp z,Main
 849  8A93
 850  8A93              ; RECARGA DE NUEVA OLEADA.
 851  8A93
 852  8A93              ;	ld a,(Contador_de_frames)
 853  8A93              ;	ld b,a
 854  8A93              ;	ld a,(Activa_recarga_cajas)
 855  8A93              ;	cp b
 856  8A93              ;	jr z,20F
 857  8A93
 858  8A93              ;	ld hl,Ctrl_1
 859  8A93              ;	set 4,(hl)
 860  8A93              ;	jp Main
 861  8A93
 862  8A93              ;20 ld hl,Ctrl_1
 863  8A93              ;	res 4,(hl)
 864  8A93
 865  8A93              ;	ld a,(Contador_de_frames)
 866  8A93
 867  8A93              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 868  8A93              ;! _ IMPREDECIBLE !!!!
 869  8A93
 870  8A93              ;	add 10
 871  8A93              ;	ld (Clock_Entidades_en_curso),a
 872  8A93
 873  8A93              ;	jp 4B
 874  8A93
 875  8A93 C9           	ret
 876  8A94
 877  8A94              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 878  8A94              ;
 879  8A94              ;	16/11/23
 880  8A94
 881  8A94              ;;Gestiona_Amadeus
 882  8A94
 883  8A94              ;! Activa/desactiva impacto con Amadeus.
 884  8A94
 885  8A94              ;	ld a,(Impacto)
 886  8A94              ;	and a
 887  8A94              ;	jr nz,2F
 888  8A94
 889  8A94              ;;	call Mov_Amadeus
 890  8A94
 891  8A94              ;;2 ld a,(Ctrl_0)
 892  8A94              ;;	bit 4,a
 893  8A94              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 894  8A94
 895  8A94              ;;	call Guarda_foto_entidad_a_pintar
 896  8A94              ;;	call Guarda_datos_de_borrado_Amadeus
 897  8A94
 898  8A94              ;;1 ld hl,Ctrl_0
 899  8A94              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 900  8A94
 901  8A94              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 902  8A94
 903  8A94              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 904  8A94
 905  8A94              ;	call Calcula_numero_de_disparotes
 906  8A94
 907  8A94              ;;	ret
 908  8A94
 909  8A94              ; -----------------------------
 910  8A94              ;
 911  8A94              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 912  8A94              ;
 913  8A94              ;	INPUTS: B a de estar a "0".
 914  8A94
 915  8A94              ;Prepara_Borra_sprites
 916  8A94
 917  8A94              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 918  8A94              ;	ld a,l
 919  8A94              ;	ret z
 920  8A94
 921  8A94              ;	srl a
 922  8A94
 923  8A94              ;2 sub 16
 924  8A94              ;	jr z,1F
 925  8A94              ;	inc b
 926  8A94              ;	jr 2B
 927  8A94
 928  8A94              ;1 inc b
 929  8A94
 930  8A94              ;	exx
 931  8A94              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 932  8A94              ;	exx
 933  8A94
 934  8A94              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 935  8A94              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 936  8A94
 937  8A94              ;	ret
 938  8A94
 939  8A94              ; --------------------------------------------------------------------------------------------------------------
 940  8A94              ;
 941  8A94              ;	15/12/23
 942  8A94
 943  8A94              ;Mov_obj
 944  8A94
 945  8A94              ;	ld a,(Ctrl_2)
 946  8A94              ;	bit 1,a
 947  8A94              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 948  8A94
 949  8A94              ; Explosión:
 950  8A94
 951  8A94              ;	ld a,(Frames_explosion)
 952  8A94              ;	and a
 953  8A94              ;	jr nz,4F
 954  8A94
 955  8A94              ;!  Una alimaña menos!!!!!!!!!1
 956  8A94
 957  8A94              ; Se trataba de una Entidad_guía ???
 958  8A94
 959  8A94              ;	ld a,(Ctrl_2)
 960  8A94              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 961  8A94              ;	jr z,5F
 962  8A94
 963  8A94              ;	ld hl,Ctrl_3
 964  8A94              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 965  8A94
 966  8A94              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 967  8A94              ;!! _generado puede ser distinto, (aletoriedad).
 968  8A94
 969  8A94              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 970  8A94              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 971  8A94              ;	dec (hl)
 972  8A94              ;	ld hl,Entidades_en_curso
 973  8A94              ;	dec (hl)
 974  8A94              ;	ld hl,Numero_de_entidades
 975  8A94              ;	dec (hl)
 976  8A94              ;	jr 3F
 977  8A94
 978  8A94              ; -----
 979  8A94
 980  8A94              ;	`Movemos´ la explosión.
 981  8A94
 982  8A94              ;4 ld hl,(Puntero_DESPLZ_der)
 983  8A94              ;	inc hl
 984  8A94              ;	inc hl
 985  8A94              ;	call Extrae_address
 986  8A94              ;;	ld (Puntero_objeto),hl
 987  8A94
 988  8A94              ;;	ld hl,Frames_explosion
 989  8A94              ;;	dec (hl)
 990  8A94
 991  8A94              ;;	ld hl,Ctrl_0
 992  8A94              ;;	set 4,(hl);;
 993  8A94
 994  8A94              ;;	jr 3F
 995  8A94
 996  8A94              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 997  8A94
 998  8A94              ;2 xor a
 999  8A94              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1000  8A94
1001  8A94              ; Movemos Entidades malignas.
1002  8A94              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1003  8A94
1004  8A94              ;	ld a,(Ctrl_2)
1005  8A94              ;	bit 5,a
1006  8A94              ;	jr nz,8F
1007  8A94
1008  8A94              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1009  8A94              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1010  8A94              ;	jr 7F
1011  8A94
1012  8A94              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1013  8A94
1014  8A94              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1015  8A94              ;	bit 4,a
1016  8A94              ;	ret z
1017  8A94
1018  8A94              ; Ha habido desplazamiento de la entidad maligna.
1019  8A94              ; Ha llegado a zona de AMADEUS ???
1020  8A94
1021  8A94              ;7 ld a,(Coordenada_y)
1022  8A94              ;	cp $14
1023  8A94              ;	jr c,1F
1024  8A94
1025  8A94              ; ---------
1026  8A94
1027  8A94              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1028  8A94              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1029  8A94
1030  8A94              ;	di
1031  8A94              ;	call Genera_coordenadas_X
1032  8A94              ;	call Compara_coordenadas_X
1033  8A94              ;	ei
1034  8A94
1035  8A94              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1036  8A94
1037  8A94              ; ---------
1038  8A94
1039  8A94              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1040  8A94              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1041  8A94              ;	call Limpia_Variables_de_borrado
1042  8A94
1043  8A94              ;3 ret
1044  8A94
1045  8A94              ; --------------------------------------------------------------------------------------------------------------
1046  8A94              ;
1047  8A94              ;	29/1/23
1048  8A94
1049  8A94              ;Mov_Amadeus
1050  8A94
1051  8A94              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1052  8A94
1053  8A94              ;	call Mov_right
1054  8A94
1055  8A94              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1056  8A94              ;	bit 4,a
1057  8A94              ;	ret z
1058  8A94
1059  8A94              ; ---------
1060  8A94
1061  8A94              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1062  8A94              ;	call Repone_datos_de_borrado_Amadeus
1063  8A94              ;	call Limpia_Variables_de_borrado
1064  8A94
1065  8A94              ;	ret
1066  8A94
1067  8A94              ; --------------------------------------------------------------------------------------------------------------
1068  8A94              ;
1069  8A94              ;	26/3/24
1070  8A94
1071  8A94              Recauda_informacion_de_entidad_en_curso
1072  8A94
1073  8A94              ; Almacena la Coordenada Y de la entidad en curso.
1074  8A94
1075  8A94              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1076  8A94
1077  8A94 3A 7F 89     	ld a,(Coordenada_y)
1078  8A97 2A D7 89     	ld hl,(India_SP)
1079  8A9A 77           	ld (hl),a
1080  8A9B 2C           	inc l
1081  8A9C
1082  8A9C              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1083  8A9C
1084  8A9C ED 5B D5 89  	ld de,(Scanlines_album_SP)
1085  8AA0
1086  8AA0 73           	ld (hl),e
1087  8AA1 2C           	inc l
1088  8AA2 72           	ld (hl),d
1089  8AA3 2C           	inc l
1090  8AA4
1091  8AA4 22 D7 89     	ld (India_SP),hl
1092  8AA7
1093  8AA7 C9           	ret
1094  8AA8
1095  8AA8              ; --------------------------------------------------------------------------------------------------------------
1096  8AA8              ;
1097  8AA8              ;	27/03/24
1098  8AA8              ;
1099  8AA8
1100  8AA8              Inicializa_India_y_limpia_tabla
1101  8AA8
1102  8AA8 2A D7 89     	ld hl,(India_SP)
1103  8AAB 01 71 86     	ld bc,Tabla_para_ordenar_entidades_antes_de_pintar+21
1104  8AAE
1105  8AAE 79           	ld a,c
1106  8AAF 95           	sub l
1107  8AB0 28 06        	jr z,2F
1108  8AB2 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1109  8AB3              ;														; _ y pasamos a inicializar (India_SP).
1110  8AB3 AF           	xor a
1111  8AB4
1112  8AB4 77           1 ld (hl),a
1113  8AB5 2C           	inc l
1114  8AB6 10 FC        	djnz 1B												; Limpia Tabla.
1115  8AB8
1116  8AB8 21 5C 86     2 ld hl,Tabla_para_ordenar_entidades_antes_de_pintar	; Inicializa (India_SP).
1117  8ABB 22 D7 89     	ld (India_SP),hl
1118  8ABE
1119  8ABE C9           	ret
1120  8ABF
1121  8ABF              ; --------------------------------------------------------------------------------------------------------------
1122  8ABF              ;
1123  8ABF              ;	17/3/24
1124  8ABF
1125  8ABF              Change
1126  8ABF
1127  8ABF 3A D2 89     	ld a,(Switch)
1128  8AC2 EE 01        	xor 1
1129  8AC4 32 D2 89     	ld (Switch),a
1130  8AC7
1131  8AC7 2A CA 89     	ld hl,(Album_de_pintado)
1132  8ACA ED 5B CC 89  	ld de,(Album_de_borrado)
1133  8ACE EB           	ex de,hl
1134  8ACF 22 CA 89     	ld (Album_de_pintado),hl
1135  8AD2 22 D5 89     	ld (Scanlines_album_SP),hl
1136  8AD5
1137  8AD5 ED 53 CC 89  	ld (Album_de_borrado),de
1138  8AD9
1139  8AD9 C9           	ret
1140  8ADA
1141  8ADA              ; ------------------------------------
1142  8ADA              ;
1143  8ADA              ; 18/03/24
1144  8ADA
1145  8ADA              Borra_diferencia
1146  8ADA
1147  8ADA ED 4B D5 89  	ld bc,(Scanlines_album_SP)
1148  8ADE
1149  8ADE 3A D2 89     	ld a,(Switch)
1150  8AE1 A7           	and a
1151  8AE2 28 08        	jr z,2F
1152  8AE4
1153  8AE4 2A D0 89     	ld hl,(Techo_Scanlines_album_2)
1154  8AE7 11 D0 89     	ld de,Techo_Scanlines_album_2
1155  8AEA 18 06        	jr 3F
1156  8AEC
1157  8AEC 2A CE 89     2 ld hl,(Techo_Scanlines_album)
1158  8AEF 11 CE 89     	ld de,Techo_Scanlines_album
1159  8AF2
1160  8AF2              ; Diferencia.
1161  8AF2
1162  8AF2 ED 42        3 sbc hl,bc
1163  8AF4
1164  8AF4 C8           	ret z
1165  8AF5 D8           	ret c
1166  8AF6
1167  8AF6              ; Nuevo techo, (más bajo que el anterior).
1168  8AF6              ; Fijamos nuevo techo y borramos bytes sobrantes.
1169  8AF6
1170  8AF6 EB           	ex de,hl
1171  8AF7
1172  8AF7 71           	ld (hl),c
1173  8AF8 2C           	inc l
1174  8AF9 70           	ld (hl),b
1175  8AFA
1176  8AFA AF           	xor a
1177  8AFB 43           	ld b,e
1178  8AFC
1179  8AFC 2A D5 89     	ld hl,(Scanlines_album_SP)
1180  8AFF
1181  8AFF 77           1 ld (hl),a
1182  8B00 2C           	inc l
1183  8B01 10 FC        	djnz 1B
1184  8B03
1185  8B03              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1186  8B03
1187  8B03 21 DB 89     	ld hl,Ctrl_3
1188  8B06 CB DE        	set 3,(hl)
1189  8B08
1190  8B08 C9           	ret
1191  8B09
1192  8B09              ; -----------------------------------------------------------------------------------
1193  8B09              ;
1194  8B09              ;	20/01/24
1195  8B09              ;
1196  8B09              ;
1197  8B09
1198  8B09              Construye_movimientos_masticados_entidad
1199  8B09
1200  8B09 2A 90 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1201  8B0C E5           	push hl
1202  8B0D CD 50 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1203  8B10              ;															; _ el (Contador_de_mov_masticados).
1204  8B10 CD DD 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1205  8B13              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1206  8B13 CD 1A 95     	call Recompone_posicion_inicio
1207  8B16
1208  8B16 CD 40 92     1 call Draw
1209  8B19 CD 35 8B     	call Guarda_movimiento_masticado
1210  8B1C
1211  8B1C CD 94 98     	call Movimiento
1212  8B1F
1213  8B1F 3A DB 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1214  8B22 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1215  8B24 28 F0        	jr z,1B
1216  8B26
1217  8B26              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1218  8B26              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1219  8B26
1220  8B26 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1221  8B27 22 90 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1222  8B2A
1223  8B2A              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1224  8B2A
1225  8B2A CD F8 99     	call Situa_en_contador_general_de_mov_masticados
1226  8B2D
1227  8B2D              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1228  8B2D              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1229  8B2D
1230  8B2D ED 4B 92 89  	ld bc,(Contador_de_mov_masticados)
1231  8B31
1232  8B31 71           	ld (hl),c
1233  8B32 23           	inc hl
1234  8B33 70           	ld (hl),b
1235  8B34
1236  8B34 C9           	ret
1237  8B35
1238  8B35              ; -----------------------------------------------------------------------------------
1239  8B35              ;
1240  8B35              ;	28/12/23
1241  8B35              ;
1242  8B35              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1243  8B35              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1244  8B35
1245  8B35              Guarda_movimiento_masticado
1246  8B35
1247  8B35 ED 73 C4 89  	ld (Stack),sp
1248  8B39 ED 7B 90 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1249  8B3D
1250  8B3D              ;	push hl
1251  8B3D DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1252  8B3F FD E5            push iy 												; Pushea Puntero_objeto.
1253  8B41
1254  8B41 ED 7B C4 89      ld sp,(Stack)
1255  8B45
1256  8B45 2A 92 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1257  8B48 23           	inc hl
1258  8B49 22 92 89     	ld (Contador_de_mov_masticados),hl
1259  8B4C
1260  8B4C CD 50 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1261  8B4F              ;															; _ el (Contador_de_mov_masticados).
1262  8B4F C9               ret
1263  8B50
1264  8B50              ; --------------------------------------------------------------------------------------------------------------
1265  8B50              ;
1266  8B50              ;	12/1/24
1267  8B50              ;
1268  8B50              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1269  8B50
1270  8B50              Actualiza_Puntero_de_almacen_de_mov_masticados
1271  8B50
1272  8B50 2A 90 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1273  8B53 01 04 00     	ld bc,4
1274  8B56 A7           	and a
1275  8B57 ED 4A        	adc hl,bc
1276  8B59 22 90 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1277  8B5C C9           	ret
1278  8B5D
1279  8B5D              ; --------------------------------------------------------------------------------------------------------------
1280  8B5D              ;
1281  8B5D              ;	24/03/24
1282  8B5D              ;
1283  8B5D              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1284  8B5D              ;
1285  8B5D              ;	IX contiene el puntero de impresión.
1286  8B5D              ;	DE contiene (Puntero_objeto).
1287  8B5D
1288  8B5D
1289  8B5D ED 73 C4 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1290  8B61 ED 7B 90 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1291  8B65
1292  8B65 D1           	pop de 															; DE contiene Puntero_objeto
1293  8B66 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1294  8B68
1295  8B68 ED 73 90 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1296  8B6C ED 7B C4 89  	ld sp,(Stack)
1297  8B70
1298  8B70 7B           	ld a,e
1299  8B71 82           	add d															; Comprueba si ya no hay datos en el almacén.
1300  8B72
1301  8B72 CC 3A 8D     	call z,Reinicia_entidad_maliciosa
1302  8B75
1303  8B75 C9           	ret
1304  8B76
1305  8B76              ; --------------------------------------------------------------------------------------------------------------
1306  8B76              ;
1307  8B76              ;	28/12/23
1308  8B76              ;
1309  8B76              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1310  8B76              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1311  8B76
1312  8B76              Guarda_foto_entidad_a_pintar
1313  8B76
1314  8B76 3A 94 89     	ld a,(Ctrl_0)
1315  8B79 CB 77        	bit 6,a
1316  8B7B 28 04        	jr z,5F
1317  8B7D
1318  8B7D              ;	Guarda la foto de Amadeus.
1319  8B7D
1320  8B7D              ;	call Draw
1321  8B7D              ;	call Guarda_movimiento_masticado	;! Provisional
1322  8B7D CD BA 8E     	call Genera_datos_de_impresion
1323  8B80 C9           	ret
1324  8B81
1325  8B81              ; ENTIDADES!
1326  8B81              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1327  8B81
1328  8B81 3A DB 89     5 ld a,(Ctrl_3)
1329  8B84 CB 5F        	bit 3,a
1330  8B86 28 01        	jr z,1F
1331  8B88
1332  8B88              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1333  8B88
1334  8B88              4
1335  8B88              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1336  8B88 C9           	ret
1337  8B89
1338  8B89              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1339  8B89
1340  8B89 3A DB 89     1 ld a,(Ctrl_3)
1341  8B8C CB 57        	bit 2,a
1342  8B8E 20 10        	jr nz,6F
1343  8B90
1344  8B90              ; Entidad guía o fantasma ???
1345  8B90
1346  8B90 3A 99 89     	ld a,(Ctrl_2)
1347  8B93 CB 6F        	bit 5,a
1348  8B95 20 10        	jr nz,3F
1349  8B97
1350  8B97              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1351  8B97
1352  8B97 18 EF        	jr 4B
1353  8B99
1354  8B99              ; ENTIDAD_GUÍA:
1355  8B99              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1356  8B99              ; _guardando "movimientos_masticados".
1357  8B99
1358  8B99 3A DB 89     2 ld a,(Ctrl_3)
1359  8B9C CB 57        	bit 2,a
1360  8B9E 28 07        	jr z,3F
1361  8BA0
1362  8BA0              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1363  8BA0              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1364  8BA0
1365  8BA0 CB 97        6 res 2,a
1366  8BA2 CB DF        	set 3,a
1367  8BA4 32 DB 89     	ld (Ctrl_3),a
1368  8BA7
1369  8BA7
1370  8BA7              ;	Esto sólo lo ejecuta una entidad guía.
1371  8BA7
1372  8BA7 CD 40 92     3 	call Draw
1373  8BAA CD 35 8B     	call Guarda_movimiento_masticado
1374  8BAD CD BA 8E     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1375  8BB0
1376  8BB0              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1377  8BB0              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1378  8BB0
1379  8BB0              ;	call Convierte_guia_en_fantasma
1380  8BB0 C9           	ret
1381  8BB1
1382  8BB1              ; ---------------------------------------------------------------------------------------------------------------------
1383  8BB1              ;
1384  8BB1              ;	13/03/24
1385  8BB1              ;
1386  8BB1
1387  8BB1              Inicia_albumes_de_lineas
1388  8BB1
1389  8BB1 21 00 80     	ld hl,Scanlines_album
1390  8BB4 22 CA 89     	ld (Album_de_pintado),hl
1391  8BB7 22 D5 89     	ld (Scanlines_album_SP),hl
1392  8BBA
1393  8BBA 21 00 90     	ld hl,Scanlines_album_2
1394  8BBD 22 CC 89     	ld (Album_de_borrado),hl
1395  8BC0
1396  8BC0 C9           	ret
1397  8BC1
1398  8BC1
1399  8BC1
1400  8BC1              ; ---------------------------------------------------------------------------------------------------------------------
1401  8BC1              ;
1402  8BC1              ; 8/1/23
1403  8BC1              ;
1404  8BC1              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1405  8BC1              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1406  8BC1              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1407  8BC1
1408  8BC1              ; Destruye HL y DE !!!!!
1409  8BC1
1410  8BC1              Inicia_punteros_de_cajas
1411  8BC1
1412  8BC1 21 F5 86     	ld hl,Indice_de_cajas_de_entidades
1413  8BC4 CD D7 8B         call Extrae_address
1414  8BC7 22 B6 89         ld (Puntero_store_caja),hl
1415  8BCA 21 F7 86     	ld hl,Indice_de_cajas_de_entidades+2
1416  8BCD 22 BA 89     	ld (Indice_restore_caja),hl
1417  8BD0 CD D7 8B     	call Extrae_address
1418  8BD3 22 B8 89     	ld (Puntero_restore_caja),hl
1419  8BD6 C9               ret
1420  8BD7
1421  8BD7              ; *************************************************************************************************************************************************************
1422  8BD7              ;
1423  8BD7              ; 8/1/23
1424  8BD7              ;
1425  8BD7              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1426  8BD7
1427  8BD7              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1428  8BD7              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1429  8BD7              ;	ret
1430  8BD7              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1431  8BD7              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1432  8BD7              ;	ret
1433  8BD7
1434  8BD7              ; -------------------------------------------------------------------------------------------------------------
1435  8BD7              ;
1436  8BD7              ; 21/9/23
1437  8BD7              ;
1438  8BD7
1439  8BD7              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1440  8BD7
1441  8BD7              ;;Limpia_album_Amadeus
1442  8BD7              ;
1443  8BD7              ;;	ld hl,Scanlines_album_Amadeus
1444  8BD7              ;;	ld a,(hl)
1445  8BD7              ;;	and a
1446  8BD7              ;;	ret z
1447  8BD7
1448  8BD7              ;;	ld hl,Scanlines_album_Amadeus;
1449  8BD7              ;;	ld de,Scanlines_album_Amadeus+1
1450  8BD7              ;;	ld bc,11
1451  8BD7              ;;	xor a
1452  8BD7              ;;	ld (hl),a
1453  8BD7              ;;	ldir
1454  8BD7
1455  8BD7              ;;	ld hl,Scanlines_album_Amadeus
1456  8BD7              ;;	ld (End_Snapshot_Amadeus),hl
1457  8BD7
1458  8BD7              ;;	ret
1459  8BD7
1460  8BD7              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1461  8BD7              ;	ld de,Variables_de_borrado+1
1462  8BD7              ;	ld bc,5
1463  8BD7              ;	xor a
1464  8BD7              ;	ld (hl),a
1465  8BD7              ;	ldir
1466  8BD7              ;	ret
1467  8BD7
1468  8BD7              ; *************************************************************************************************************************************************************
1469  8BD7              ;
1470  8BD7              ; 20/10/22
1471  8BD7              ;
1472  8BD7              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1473  8BD7              ;
1474  8BD7              ; Destruye el puntero y DE !!!!!
1475  8BD7
1476  8BD7 5E           Extrae_address ld e,(hl)
1477  8BD8 23           	inc hl
1478  8BD9 56           	ld d,(hl)
1479  8BDA 2B           	dec hl
1480  8BDB EB           	ex de,hl
1481  8BDC C9           	ret
1482  8BDD
1483  8BDD              ; *************************************************************************************************************************************************************
1484  8BDD              ;
1485  8BDD              ;	20/1/24
1486  8BDD              ;
1487  8BDD              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1488  8BDD              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1489  8BDD              ;
1490  8BDD              ;   Destruye HL y BC !!!!!,
1491  8BDD              ;
1492  8BDD              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1493  8BDD              ;					"0" ..... Izquierda.
1494  8BDD
1495  8BDD              Inicia_Puntero_objeto
1496  8BDD
1497  8BDD 3A 8C 89     	ld a,(Cuad_objeto)
1498  8BE0 E6 01        	and 1
1499  8BE2 F5           	push af
1500  8BE3 CC FF 8B     	call z,Inicia_puntero_objeto_izq
1501  8BE6 F1           	pop af
1502  8BE7 C8           	ret z
1503  8BE8 CD EC 8B     	call Inicia_puntero_objeto_der
1504  8BEB C9           	ret
1505  8BEC
1506  8BEC              ; Arrancamos desde la parte izquierda de la pantalla.
1507  8BEC              ; Iniciamos (Indice_Sprite_der).
1508  8BEC
1509  8BEC 2A 82 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1510  8BEF 22 86 89     	ld (Puntero_DESPLZ_der),hl
1511  8BF2 CD D7 8B     	call Extrae_address
1512  8BF5 22 7C 89     	ld (Puntero_objeto),hl
1513  8BF8
1514  8BF8 2A 84 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1515  8BFB 22 88 89     	ld (Puntero_DESPLZ_izq),hl
1516  8BFE C9           	ret
1517  8BFF
1518  8BFF              ; Arrancamos desde la parte derecha de la pantalla.
1519  8BFF              ; Iniciamos (Indice_Sprite_izq).
1520  8BFF
1521  8BFF 2A 84 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1522  8C02 22 88 89     	ld (Puntero_DESPLZ_izq),hl
1523  8C05 CD D7 8B     	call Extrae_address
1524  8C08 22 7C 89     	ld (Puntero_objeto),hl
1525  8C0B
1526  8C0B 2A 82 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1527  8C0E 22 86 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1528  8C11 C9           	ret
1529  8C12
1530  8C12              ; **************************************************************************************************
1531  8C12              ;
1532  8C12              ;	31/01/24
1533  8C12              ;
1534  8C12              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1535  8C12
1536  8C12              Restore_entidad
1537  8C12
1538  8C12 2A B6 89     	ld hl,(Puntero_store_caja)
1539  8C15 11 77 89     	ld de,Bandeja_DRAW
1540  8C18 7E           	ld a,(hl)
1541  8C19 12           	ld (de),a
1542  8C1A 23           	inc hl 											; (Tipo).
1543  8C1B
1544  8C1B 11 7E 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1545  8C1E 01 02 00     	ld bc,2
1546  8C21 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1547  8C23
1548  8C23 13           	inc de
1549  8C24 7E           	ld a,(hl)
1550  8C25 12           	ld (de),a 										; Transferimos (Attr).
1551  8C26 23           	inc hl
1552  8C27
1553  8C27 11 8D 89     	ld de,Impacto
1554  8C2A
1555  8C2A 7E           	ld a,(hl)
1556  8C2B 12           	ld (de),a 										; Transferimos (Impacto).
1557  8C2C 23           	inc hl
1558  8C2D
1559  8C2D 13           	inc de
1560  8C2E 01 07 00     	ld bc,7
1561  8C31 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1562  8C33              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1563  8C33 11 99 89     	ld de,Ctrl_2
1564  8C36
1565  8C36 7E           	ld a,(hl)
1566  8C37 12           	ld (de),a 										; Transferimos (Ctrl_2).
1567  8C38
1568  8C38 C9           	ret
1569  8C39
1570  8C39              ; **************************************************************************************************
1571  8C39              ;
1572  8C39              ;	08/05/23
1573  8C39              ;
1574  8C39              ;	Incrementamos los dos punteros de entidades. (+1).
1575  8C39
1576  8C39              Incrementa_punteros_de_cajas
1577  8C39
1578  8C39 2A B8 89     	ld hl,(Puntero_restore_caja)
1579  8C3C 22 B6 89     	ld (Puntero_store_caja),hl
1580  8C3F 2A BA 89     	ld hl,(Indice_restore_caja)
1581  8C42 23           	inc hl
1582  8C43 23           	inc hl
1583  8C44 22 BA 89     	ld (Indice_restore_caja),hl
1584  8C47 CD D7 8B         call Extrae_address
1585  8C4A 22 B8 89         ld (Puntero_restore_caja),hl
1586  8C4D C9               ret
1587  8C4E
1588  8C4E              ; **************************************************************************************************
1589  8C4E              ;
1590  8C4E              ;	21/12/23
1591  8C4E              ;
1592  8C4E              ;	Restore_Amadeus
1593  8C4E              ;
1594  8C4E              ;	Cargamos en DRAW los parámetros de Amadeus.
1595  8C4E              ;
1596  8C4E
1597  8C4E              ;Restore_Amadeus	push hl
1598  8C4E              ;	push de
1599  8C4E              ; 	push bc
1600  8C4E              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1601  8C4E              ;	ld de,Bandeja_DRAW
1602  8C4E              ;	ld bc,42
1603  8C4E              ;	ldir
1604  8C4E              ;	pop bc
1605  8C4E              ;	pop de
1606  8C4E              ;	pop hl
1607  8C4E              ;	ret
1608  8C4E
1609  8C4E              ; *************************************************************************************************************************************************************
1610  8C4E              ;
1611  8C4E              ;	21/12/23
1612  8C4E              ;
1613  8C4E              ;	Store_Amadeus
1614  8C4E              ;
1615  8C4E              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1616  8C4E              ;
1617  8C4E              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1618  8C4E              ;
1619  8C4E              ;	DESTRUYE: HL y BC y DE.
1620  8C4E
1621  8C4E              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1622  8C4E              ;	ld bc,42
1623  8C4E              ;	ldir
1624  8C4E              ;	ret
1625  8C4E
1626  8C4E              ; -----------------------------------------------------------
1627  8C4E              ;
1628  8C4E              ;	21/12/23
1629  8C4E              ;
1630  8C4E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1631  8C4E              ;
1632  8C4E              ;	Destruye: HL,BC,DE,A
1633  8C4E
1634  8C4E              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1635  8C4E              ;	ld bc,41
1636  8C4E              ;	xor a
1637  8C4E              ;	ld (hl),a;
1638  8C4E              ;	ld de,Bandeja_DRAW+1
1639  8C4E              ;	ldir
1640  8C4E              ;	ret
1641  8C4E
1642  8C4E              ; -----------------------------------------------------------
1643  8C4E
1644  8C4E              ; Teclado.
1645  8C4E
1646  8C4E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1647  8C50 DB FE        	in a,($fe)
1648  8C52 E6 01        	and $01
1649  8C54 28 02        	jr z,1f
1650  8C56 18 F6        	jr Pulsa_ENTER
1651  8C58 C9           1 ret
1652  8C59
1653  8C59              ; **************************************************************************************************
1654  8C59              ;
1655  8C59              ; Temporización.
1656  8C59
1657  8C59              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1658  8C59              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1659  8C59              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1660  8C59              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1661  8C59
1662  8C59              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1663  8C59              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1664  8C59              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1665  8C59
1666  8C59              ; A partir de $4f61 no hace falta DELAY.
1667  8C59
1668  8C59              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1669  8C59
1670  8C59 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1671  8C5C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1672  8C5D 78           	LD A,B
1673  8C5E A7           	AND A
1674  8C5F 20 FB        	JR NZ,wait
1675  8C61 C9           	RET
1676  8C62
1677  8C62              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1678  8C62              ;
1679  8C62              ;	5/3/23
1680  8C62              ;
1681  8C62              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1682  8C62
1683  8C62              ;Movimiento_Amadeus
1684  8C62
1685  8C62              ; Disparo.
1686  8C62
1687  8C62              ;	ld a,(Disparo_Amadeus)
1688  8C62              ;	and a
1689  8C62              ;	jr nz,1F
1690  8C62              ;	jr 2F
1691  8C62
1692  8C62              ;1 ld a,$f7													; "5" para disparar.
1693  8C62              ;	in a,($fe)
1694  8C62              ;	and $10
1695  8C62
1696  8C62              ;	push af
1697  8C62              ;	call z,Genera_disparo
1698  8C62              ;	pop af
1699  8C62              ;	jr nz,2F
1700  8C62
1701  8C62              ;	ld a,(Disparo_Amadeus)
1702  8C62              ;	xor 1
1703  8C62              ;	ld (Disparo_Amadeus),a
1704  8C62              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1705  8C62              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1706  8C62              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1707  8C62              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1708  8C62
1709  8C62              ;	ld a,$f7
1710  8C62              ;	in a,($fe)
1711  8C62              ;	and $01
1712  8C62              ;	ret z
1713  8C62
1714  8C62              ;	ld a,$f7
1715  8C62              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1716  8C62              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1717  8C62              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1718  8C62              ;	ret
1719  8C62
1720  8C62              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1721  8C62              ;
1722  8C62              ;	Rutina provisional para que los malotes cagen balas.
1723  8C62
1724  8C62              ;Detecta_disparo_entidad
1725  8C62
1726  8C62              ;	ld a,(Disparo_entidad)
1727  8C62              ;	and a
1728  8C62              ;	ret z
1729  8C62
1730  8C62              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1731  8C62
1732  8C62              ;	ld a,$7f				; Detecta SPACE.
1733  8C62              ;	in a,($fe)
1734  8C62              ;	and 1
1735  8C62              ;	ret nz
1736  8C62
1737  8C62              ;	call Genera_disparo
1738  8C62              ;	ret
1739  8C62
1740  8C62              ; ----------------------------------------------------------------------
1741  8C62              ;
1742  8C62              ;	8/9/23
1743  8C62
1744  8C62              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1745  8C62              ; 	dec hl
1746  8C62              ;	ld a,(hl)
1747  8C62              ;	and a
1748  8C62              ;	ret z										; Salimos si es álbum está vacío.
1749  8C62
1750  8C62              ;	ld de,Variables_de_borrado+5
1751  8C62              ;	ld bc,6
1752  8C62              ;	lddr
1753  8C62              ;	ret
1754  8C62
1755  8C62              ; ----------------------------------------------------------------------
1756  8C62              ;
1757  8C62              ;	9/9/23
1758  8C62
1759  8C62              ;Repone_datos_de_borrado_Amadeus
1760  8C62
1761  8C62              ;	ld hl,Variables_de_borrado
1762  8C62              ;	ld de,Scanlines_album_Amadeus
1763  8C62              ;	ld bc,6
1764  8C62              ;	ldir
1765  8C62
1766  8C62              ;	ex de,hl
1767  8C62              ;	ld (End_Snapshot_Amadeus),hl
1768  8C62
1769  8C62              ;	ret
1770  8C62
1771  8C62              ; ----------------------------------------------------------------------
1772  8C62              ;
1773  8C62              ;	27/10/23
1774  8C62              ;
1775  8C62
1776  8C62              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1777  8C62              ;	_ Scanlines_album correspondiente.
1778  8C62
1779  8C62              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1780  8C62              ;	_ durante el proceso de escritura.
1781  8C62
1782  8C62              ;Repone_datos_de_borrado
1783  8C62
1784  8C62              ;	ld de,(Scanlines_album_SP)
1785  8C62              ;	ld hl,Variables_de_borrado
1786  8C62              ;	ld bc,6
1787  8C62              ;	ldir
1788  8C62
1789  8C62              ;	ex de,hl
1790  8C62              ;	ld (Scanlines_album_SP),hl
1791  8C62
1792  8C62              ;	ret
1793  8C62
1794  8C62              ; --------------------------------------------------------------------------------------
1795  8C62
1796  8C62              ;Pinta_Amadeus
1797  8C62
1798  8C62              ;   	call Calcula_malotes_Amadeus
1799  8C62              ;	call Extrae_foto_Amadeus
1800  8C62              ;	call Limpia_album_Amadeus
1801  8C62
1802  8C62              ;	ret
1803  8C62
1804  8C62              ; -----------------------------------------------------------------------------------
1805  8C62              ;
1806  8C62              ;	10/12/23
1807  8C62              ;
1808  8C62              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1809  8C62
1810  8C62              Actualiza_relojes
1811  8C62
1812  8C62 3A DB 89     	ld a,(Ctrl_3)
1813  8C65 CB 47        	bit 0,a
1814  8C67 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1815  8C68
1816  8C68 21 E0 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1817  8C6B 34           	inc (hl)
1818  8C6C
1819  8C6C 34           	inc (hl)
1820  8C6D 35           	dec (hl)
1821  8C6E C0           	ret nz
1822  8C6F
1823  8C6F 21 E1 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1824  8C72 34           	inc (hl)
1825  8C73 C9           	ret
1826  8C74
1827  8C74              ; ---------------------------------------------------------------
1828  8C74
1829  8C74              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8C74              ;---------------------------------------------------------------------------------------------------------------
   2+ 8C74              ;
   3+ 8C74              ;   8/3/24
   4+ 8C74              ;
   5+ 8C74              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8C74              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8C74              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8C74              ;	_ de la 1ª entidad del Nivel.
   9+ 8C74              ;
  10+ 8C74              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8C74
  12+ 8C74              ;	MODIFICA: HL,DE y A.
  13+ 8C74              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8C74
  15+ 8C74              Inicializa_Nivel
  16+ 8C74
  17+ 8C74 2A E5 89     	ld hl,(Puntero_indice_NIVELES)
  18+ 8C77 CD D7 8B     	call Extrae_address
  19+ 8C7A 7E           	ld a,(hl)
  20+ 8C7B 32 BC 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8C7E 23           	inc hl
  22+ 8C7F CD 8C 8C     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8C82 22 E7 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8C85 CD 95 8C     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8C88
  26+ 8C88 CD A6 8C     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8C8B C9           	ret
  28+ 8C8C
  29+ 8C8C              ; ----------------------
  30+ 8C8C
  31+ 8C8C 11 9B 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8C8F 01 04 00     	ld bc,4
  33+ 8C92 ED B0        	ldir
  34+ 8C94 C9           	ret
  35+ 8C95
  36+ 8C95 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8C96 CD C8 8D         call Calcula_salto_en_BC
  38+ 8C99 21 71 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8C9C A7               and a
  40+ 8C9D ED 4A            adc hl,bc
  41+ 8C9F CD D7 8B         call Extrae_address
  42+ 8CA2 22 A7 89         ld (Puntero_indice_mov),hl
  43+ 8CA5 C9               ret
  44+ 8CA6
  45+ 8CA6 3A 77 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8CA9 CD C8 8D     	call Calcula_salto_en_BC
  47+ 8CAC 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8CAF A7               and a
  49+ 8CB0 ED 4A            adc hl,bc
  50+ 8CB2 CD D7 8B         call Extrae_address
  51+ 8CB5 22 90 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8CB8 C9           	ret
  53+ 8CB9
  54+ 8CB9              ;---------------------------------------------------------------------------------------------------------------
  55+ 8CB9              ;
  56+ 8CB9              ;   5/1/24
  57+ 8CB9              ;
  58+ 8CB9              ;	Destruye A,BC,HL,DE
  59+ 8CB9
  60+ 8CB9              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8CB9              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8CB9
  63+ 8CB9              Inicia_Entidades
  64+ 8CB9
  65+ 8CB9              ; Preparamos los punteros de las cajas de entidades:
  66+ 8CB9
  67+ 8CB9 CD C1 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8CBC              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8CBC CD 2C 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8CBF
  71+ 8CBF 2A E7 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8CC2
  73+ 8CC2 22 E7 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8CC5
  75+ 8CC5 CD 76 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8CC8
  77+ 8CC8 2A E7 89     	ld hl,(Datos_de_nivel)
  78+ 8CCB
  79+ 8CCB              ; En este punto:
  80+ 8CCB              ;
  81+ 8CCB              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8CCB              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8CCB
  84+ 8CCB C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8CCC
  86+ 8CCC 7E           	ld a,(hl)
  87+ 8CCD CD 09 8D     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8CD0
  89+ 8CD0 CD DA 8D     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8CD3
  91+ 8CD3              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8CD3
  93+ 8CD3 CD 98 8D     	call Busca_mov_masticados_segun_tipo
  94+ 8CD6
  95+ 8CD6 A7           	and a
  96+ 8CD7 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8CD9
  98+ 8CD9              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8CD9
 100+ 8CD9              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8CD9              ;	_ de este tipo de entidad.
 102+ 8CD9
 103+ 8CD9 CD F8 99     	call Situa_en_contador_general_de_mov_masticados
 104+ 8CDC CD 05 9A     	call Transfiere_datos_de_contadores
 105+ 8CDF
 106+ 8CDF 18 06        	jr 4F
 107+ 8CE1
 108+ 8CE1 CD 09 8B     3 call Construye_movimientos_masticados_entidad
 109+ 8CE4
 110+ 8CE4              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8CE4              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8CE4              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8CE4              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8CE4              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8CE4
 116+ 8CE4 CD 56 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8CE7              ;																; _ Mov_masticados ya generados.
 118+ 8CE7
 119+ 8CE7 CD 1D 8D     4 call Guarda_foto_de_mov_masticado
 120+ 8CEA
 121+ 8CEA              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 122+ 8CEA
 123+ 8CEA 2A 8E 89     	ld hl,(Puntero_de_impresion)
 124+ 8CED CD 67 8E     	call Genera_coordenadas
 125+ 8CF0 CD 01 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 126+ 8CF3 CD 27 8D     	call Limpiamos_bandeja_DRAW
 127+ 8CF6 CD 39 8C     	call Incrementa_punteros_de_cajas
 128+ 8CF9
 129+ 8CF9              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 130+ 8CF9              ; _ entidad del Nivel.
 131+ 8CF9
 132+ 8CF9 3A DC 89     	ld a,(Ctrl_4)
 133+ 8CFC E6 F0        	and $f0
 134+ 8CFE 32 DC 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 135+ 8D01
 136+ 8D01              ; Siguiente entidad del Nivel.
 137+ 8D01
 138+ 8D01 2A E7 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 139+ 8D04 23           	inc hl 														; _ entidad del Nivel.
 140+ 8D05
 141+ 8D05 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 142+ 8D06
 143+ 8D06 10 BA        	djnz 2B
 144+ 8D08
 145+ 8D08 C9           	ret
 146+ 8D09
 147+ 8D09              ; ---------------------------------------------------------------------
 148+ 8D09              ;
 149+ 8D09              ;	10/02/24
 150+ 8D09              ;
 151+ 8D09              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 152+ 8D09              ;
 153+ 8D09              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 154+ 8D09
 155+ 8D09              Definicion_segun_tipo
 156+ 8D09
 157+ 8D09 CD C8 8D     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 158+ 8D0C 21 98 87     	ld hl,Indice_de_definiciones_de_entidades
 159+ 8D0F CD D0 8D     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 160+ 8D12 C9           	ret
 161+ 8D13
 162+ 8D13              ; ---------------------------------------------------------------------
 163+ 8D13              ;
 164+ 8D13              ;	27/03/24
 165+ 8D13
 166+ 8D13
 167+ 8D13              Store_Restore_cajas
 168+ 8D13
 169+ 8D13 CD 01 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 170+ 8D16 CD 27 8D     	call Limpiamos_bandeja_DRAW
 171+ 8D19
 172+ 8D19              ; 	Entidad_sospechosa. 20/4/23
 173+ 8D19
 174+ 8D19              ;	ld a,(Impacto)
 175+ 8D19              ;	and a
 176+ 8D19              ;	jr z,1F
 177+ 8D19
 178+ 8D19              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 179+ 8D19              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 180+ 8D19              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 181+ 8D19              ;	adc hl,bc 											; _ "0" más adelante.
 182+ 8D19              ;	ld (Entidad_sospechosa_de_colision),hl
 183+ 8D19
 184+ 8D19
 185+ 8D19              ;1 ld hl,(Puntero_restore_caja)
 186+ 8D19              ;	ld a,(hl)
 187+ 8D19              ;	and a
 188+ 8D19              ;	push af
 189+ 8D19              ;	jr z,2F
 190+ 8D19
 191+ 8D19              ;	di
 192+ 8D19              ;	ld de,Bandeja_DRAW
 193+ 8D19              ;	ld bc,42
 194+ 8D19              ;	ldir
 195+ 8D19              ;	ei
 196+ 8D19
 197+ 8D19 CD 39 8C     2 call Incrementa_punteros_de_cajas
 198+ 8D1C C9           	ret
 199+ 8D1D
 200+ 8D1D
 201+ 8D1D              ; ---------------------------------------------------------------------
 202+ 8D1D              ;
 203+ 8D1D              ;	29/01/24
 204+ 8D1D
 205+ 8D1D              Guarda_foto_de_mov_masticado
 206+ 8D1D
 207+ 8D1D CD 5D 8B     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 208+ 8D20 CD BA 8E     	call Genera_datos_de_impresion
 209+ 8D23
 210+ 8D23              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 211+ 8D23              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 212+ 8D23              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 213+ 8D23              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 214+ 8D23
 215+ 8D23 CD 32 8D     	call Decrementa_Contador_de_mov_masticados
 216+ 8D26
 217+ 8D26 C9           	ret
 218+ 8D27
 219+ 8D27              ; ---------------------------------------------------------------------
 220+ 8D27              ;
 221+ 8D27              ;	26/03/24
 222+ 8D27
 223+ 8D27 21 77 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 224+ 8D2A 06 24        	ld b,36
 225+ 8D2C AF           	xor a
 226+ 8D2D 77           1 ld (hl),a
 227+ 8D2E 23           	inc hl
 228+ 8D2F 10 FC        	djnz 1B
 229+ 8D31 C9           	ret
 230+ 8D32
 231+ 8D32              ; ---------------------------------------------------------------------
 232+ 8D32              ;
 233+ 8D32              ;	24/03/24
 234+ 8D32
 235+ 8D32 2A 92 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 236+ 8D35 2B           	dec hl
 237+ 8D36 22 92 89     	ld (Contador_de_mov_masticados),hl
 238+ 8D39 C9           	ret
 239+ 8D3A
 240+ 8D3A              ; ---------------------------------------------------------------------
 241+ 8D3A              ;
 242+ 8D3A              ;	10/2/24
 243+ 8D3A
 244+ 8D3A              Reinicia_entidad_maliciosa
 245+ 8D3A
 246+ 8D3A              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 247+ 8D3A
 248+ 8D3A CD F8 99     	call Situa_en_contador_general_de_mov_masticados
 249+ 8D3D CD 05 9A     	call Transfiere_datos_de_contadores
 250+ 8D40
 251+ 8D40              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 252+ 8D40
 253+ 8D40 3A 77 89     	ld a,(Tipo)
 254+ 8D43 CD 09 8D     	call Definicion_segun_tipo
 255+ 8D46
 256+ 8D46 E5           	push hl
 257+ 8D47 DD E1        	pop ix
 258+ 8D49
 259+ 8D49 DD 6E 0B     	ld l,(ix+11)
 260+ 8D4C DD 66 0C     	ld h,(ix+12)
 261+ 8D4F
 262+ 8D4F 22 90 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 263+ 8D52
 264+ 8D52 CD 5D 8B     	call Cargamos_registros_con_mov_masticado
 265+ 8D55
 266+ 8D55 C9           	ret
 267+ 8D56
 268+ 8D56              ; ---------------------------------------------------------------------
 269+ 8D56              ;
 270+ 8D56              ;	22/01/24
 271+ 8D56
 272+ 8D56 21 DC 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 273+ 8D59 CB 46        	bit 0,(hl)
 274+ 8D5B 20 0D        	jr nz,1F
 275+ 8D5D CB 4E        	bit 1,(hl)
 276+ 8D5F 20 0C        	jr nz,2F
 277+ 8D61 CB 56        	bit 2,(hl)
 278+ 8D63 20 0B        	jr nz,3F
 279+ 8D65 CB 5E        	bit 3,(hl)
 280+ 8D67 20 0A        	jr nz,4F
 281+ 8D69 C9           	ret
 282+ 8D6A
 283+ 8D6A CB E6        1 set 4,(hl)
 284+ 8D6C C9           	ret
 285+ 8D6D CB EE        2 set 5,(hl)
 286+ 8D6F C9           	ret
 287+ 8D70 CB F6        3 set 6,(hl)
 288+ 8D72 C9           	ret
 289+ 8D73 CB FE        4 set 7,(hl)
 290+ 8D75 C9           	ret
 291+ 8D76
 292+ 8D76              ; ---------------------------------------------------------------------
 293+ 8D76              ;
 294+ 8D76              ;	23/01/24
 295+ 8D76              ;
 296+ 8D76              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 297+ 8D76              ;
 298+ 8D76              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 299+ 8D76              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 300+ 8D76              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 301+ 8D76              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 302+ 8D76
 303+ 8D76              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 304+ 8D76
 305+ 8D76 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 306+ 8D77 3D           	dec a
 307+ 8D78 20 06        	jr nz,1F
 308+ 8D7A
 309+ 8D7A              ; --- Tipo_1
 310+ 8D7A
 311+ 8D7A 21 DC 89     	ld hl,Ctrl_4
 312+ 8D7D CB C6        	set 0,(hl)
 313+ 8D7F C9           	ret
 314+ 8D80
 315+ 8D80 3D           1 dec a
 316+ 8D81 20 06        	jr nz,2F
 317+ 8D83
 318+ 8D83              ; --- Tipo_2
 319+ 8D83
 320+ 8D83 21 DC 89     	ld hl,Ctrl_4
 321+ 8D86 CB CE        	set 1,(hl)
 322+ 8D88 C9           	ret
 323+ 8D89
 324+ 8D89 3D           2 dec a
 325+ 8D8A 20 06        	jr nz,3F
 326+ 8D8C
 327+ 8D8C              ; --- Tipo_3
 328+ 8D8C
 329+ 8D8C 21 DC 89     	ld hl,Ctrl_4
 330+ 8D8F CB D6        	set 2,(hl)
 331+ 8D91 C9           	ret
 332+ 8D92
 333+ 8D92              ; --- Tipo_3
 334+ 8D92
 335+ 8D92 21 DC 89     3 ld hl,Ctrl_4
 336+ 8D95 CB D6        	set 2,(hl)
 337+ 8D97 C9           	ret
 338+ 8D98
 339+ 8D98              ; ---------------------------------------------------------------------
 340+ 8D98              ;
 341+ 8D98              ;	22/01/24
 342+ 8D98
 343+ 8D98 21 DC 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 344+ 8D9B CB 46        	bit 0,(hl)
 345+ 8D9D 20 0E        	jr nz,1F
 346+ 8D9F
 347+ 8D9F CB 4E        	bit 1,(hl)
 348+ 8DA1 20 10        	jr nz,2F
 349+ 8DA3
 350+ 8DA3 CB 56        	bit 2,(hl)
 351+ 8DA5 20 12        	jr nz,3F
 352+ 8DA7
 353+ 8DA7 CB 5E        	bit 3,(hl)
 354+ 8DA9 20 14        	jr nz,4F
 355+ 8DAB 18 19        	jr 6F
 356+ 8DAD
 357+ 8DAD              ; Entidad_de_Tipo_1.
 358+ 8DAD
 359+ 8DAD CB 66        1 bit 4,(hl)
 360+ 8DAF 28 15        	jr z,6F
 361+ 8DB1 18 10        	jr 5F
 362+ 8DB3
 363+ 8DB3              ; Entidad_de_Tipo_2.
 364+ 8DB3
 365+ 8DB3 CB 6E        2 bit 5,(hl)
 366+ 8DB5 28 0F        	jr z,6F
 367+ 8DB7 18 0A        	jr 5F
 368+ 8DB9
 369+ 8DB9              ; Entidad_de_Tipo_3.
 370+ 8DB9
 371+ 8DB9 CB 76        3 bit 6,(hl)
 372+ 8DBB 28 09        	jr z,6F
 373+ 8DBD 18 04        	jr 5F
 374+ 8DBF
 375+ 8DBF              ; Entidad_de_Tipo_4.
 376+ 8DBF
 377+ 8DBF CB 7E        4 bit 7,(hl)
 378+ 8DC1 28 03        	jr z,6F
 379+ 8DC3
 380+ 8DC3              ; Esta entidad TIENE MOV_MASTICADOS.
 381+ 8DC3
 382+ 8DC3 AF           5 xor a
 383+ 8DC4 3C           	inc a
 384+ 8DC5 C9           	ret
 385+ 8DC6
 386+ 8DC6              ; Esta entidad NO TIENE MOV_MASTICADOS.
 387+ 8DC6
 388+ 8DC6 AF           6 xor a
 389+ 8DC7 C9           	ret
 390+ 8DC8
 391+ 8DC8              ;	------------------------------------------------------------------------------------
 392+ 8DC8              ;
 393+ 8DC8              ;	12/01/24
 394+ 8DC8              ;
 395+ 8DC8              ;	INPUTS:	A contiene el (Tipo) de entidad.
 396+ 8DC8              ;
 397+ 8DC8              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 398+ 8DC8              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 399+ 8DC8
 400+ 8DC8 CB 27        Calcula_salto_en_BC sla a
 401+ 8DCA D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 402+ 8DCC 4F           	ld c,a
 403+ 8DCD 06 00        	ld b,0
 404+ 8DCF C9           	ret
 405+ 8DD0
 406+ 8DD0              ; ------------------------------------------------------------------
 407+ 8DD0              ;
 408+ 8DD0              ;	19/1/24
 409+ 8DD0              ;
 410+ 8DD0              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 411+ 8DD0              ;	Actualiza (Datos_de_entidad) con esa dirección.
 412+ 8DD0
 413+ 8DD0 A7           Situa_en_datos_de_definicion and a
 414+ 8DD1 ED 4A        	adc hl,bc
 415+ 8DD3 CD D7 8B     	call Extrae_address
 416+ 8DD6 22 C2 89         ld (Datos_de_entidad),hl
 417+ 8DD9 C9           	ret
 418+ 8DDA
 419+ 8DDA              ; ------------------------------------------------------------------
 420+ 8DDA
 421+ 8DDA              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 422+ 8DDA              ; 	inc de
 423+ 8DDA              ; 	inc de
 424+ 8DDA              ; 	ex de,hl
 425+ 8DDA              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 426+ 8DDA              ; 	ret
 427+ 8DDA
 428+ 8DDA              ; ----------------------------------------------------------------------------------------------------------
 429+ 8DDA              ;
 430+ 8DDA              ;	31/1/24
 431+ 8DDA              ;
 432+ 8DDA              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 433+ 8DDA              ;	_ de entidad.
 434+ 8DDA              ;
 435+ 8DDA              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 436+ 8DDA              ;
 437+ 8DDA              ;
 438+ 8DDA              ;	MODIFICA: HL,DE y BC
 439+ 8DDA
 440+ 8DDA
 441+ 8DDA              Definicion_de_entidad_a_bandeja_DRAW
 442+ 8DDA
 443+ 8DDA 11 77 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 444+ 8DDD 01 03 00     	ld bc,3
 445+ 8DE0 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 446+ 8DE2              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 447+ 8DE2 11 81 89     	ld de,Attr									; DE en (Attr).
 448+ 8DE5 01 05 00     	ld bc,5
 449+ 8DE8 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 450+ 8DEA              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 451+ 8DEA 11 8A 89     	ld de,Posicion_inicio
 452+ 8DED 01 03 00     	ld bc,3
 453+ 8DF0 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 454+ 8DF2              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 455+ 8DF2 11 90 89     	ld de,Puntero_de_almacen_de_mov_masticados
 456+ 8DF5 01 02 00     	ld bc,2
 457+ 8DF8 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 458+ 8DFA
 459+ 8DFA 11 9A 89     	ld de,Frames_explosion
 460+ 8DFD 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 461+ 8DFF 12           	ld (de),a 									; Vuelco (Frames_explosion).
 462+ 8E00
 463+ 8E00 C9           	ret
 464+ 8E01
 465+ 8E01              ; ----------------------------------------------------------------------------------------------------------
 466+ 8E01              ;
 467+ 8E01              ;	22/01/24
 468+ 8E01              ;
 469+ 8E01              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 470+ 8E01              ;
 471+ 8E01              ;	Las cajas contienen entidades iniciadas:
 472+ 8E01              ;
 473+ 8E01              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 474+ 8E01              ;
 475+ 8E01              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 476+ 8E01              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 477+ 8E01              ;
 478+ 8E01              ;	MODIFICA: HL,DE y BC
 479+ 8E01
 480+ 8E01              Parametros_de_bandeja_DRAW_a_caja
 481+ 8E01
 482+ 8E01 21 77 89     	ld hl,Bandeja_DRAW
 483+ 8E04 ED 5B B6 89  	ld de,(Puntero_store_caja)
 484+ 8E08 7E           	ld a,(hl)
 485+ 8E09 12           	ld (de),a
 486+ 8E0A 13           	inc de 													; (Tipo).
 487+ 8E0B
 488+ 8E0B 21 7E 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 489+ 8E0E 01 02 00     	ld bc,2
 490+ 8E11 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 491+ 8E13              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 492+ 8E13 23           	inc hl
 493+ 8E14 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 494+ 8E15 12           	ld (de),a
 495+ 8E16 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 496+ 8E17
 497+ 8E17 21 8D 89     	ld hl,Impacto
 498+ 8E1A 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 499+ 8E1B 12           	ld (de),a
 500+ 8E1C 13           	inc de 													; (Impacto), volcado a la caja.
 501+ 8E1D
 502+ 8E1D 21 8E 89     	ld hl,Puntero_de_impresion								; DE situado ahora en (Puntero_de_impresión).
 503+ 8E20 01 07 00     	ld bc,7
 504+ 8E23 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 505+ 8E25              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 506+ 8E25              ;															; HL apunta ahora a (Columnas).
 507+ 8E25 21 99 89     	ld hl,Ctrl_2
 508+ 8E28 7E           	ld a,(hl)
 509+ 8E29 12           	ld (de),a 												; Volcamos (Ctrl_2).
 510+ 8E2A 13           	inc de
 511+ 8E2B
 512+ 8E2B C9           	ret
 513+ 8E2C
 514+ 8E2C              ;---------------------------------------------------------------------------------------------------------------
 515+ 8E2C              ;
 516+ 8E2C              ;	5/1/24
 517+ 8E2C              ;
 518+ 8E2C              ;	INICIALIZA (Numero_parcial_de_entidades).
 519+ 8E2C              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 520+ 8E2C              ;
 521+ 8E2C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 522+ 8E2C              ;
 523+ 8E2C              ;	(Numero_parcial_de_entidades)="7".
 524+ 8E2C              ;
 525+ 8E2C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 526+ 8E2C              ;
 527+ 8E2C              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 528+ 8E2C              ;
 529+ 8E2C              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 530+ 8E2C              ;	MODIFICA: A y B.
 531+ 8E2C              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 532+ 8E2C
 533+ 8E2C              Inicializa_Numero_parcial_de_entidades
 534+ 8E2C
 535+ 8E2C              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 536+ 8E2C
 537+ 8E2C 3A BC 89     	ld a,(Numero_de_entidades)
 538+ 8E2F A7           	and a
 539+ 8E30
 540+ 8E30              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 541+ 8E30              ;	jr z,$
 542+ 8E30              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 543+ 8E30
 544+ 8E30 20 03        	jr nz,3F
 545+ 8E32
 546+ 8E32              ; ---------- ---------- ----------
 547+ 8E32
 548+ 8E32              ;! RESET para pruebas. Omitir esta línea en modo normal.
 549+ 8E32              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 550+ 8E32
 551+ 8E32 CD 74 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 552+ 8E35
 553+ 8E35              ; ---------- ---------- ----------
 554+ 8E35
 555+ 8E35 3A BC 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 556+ 8E38 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 557+ 8E3A 38 08        	jr c,1F
 558+ 8E3C
 559+ 8E3C              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 560+ 8E3C              ; Actualizamos variables.
 561+ 8E3C
 562+ 8E3C 3E 07        	ld a,7
 563+ 8E3E 32 BD 89     	ld (Numero_parcial_de_entidades),a
 564+ 8E41 47           	ld b,a
 565+ 8E42 18 04        	jr 2F
 566+ 8E44
 567+ 8E44              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 568+ 8E44              ; (Numero_de_entidades)="0".
 569+ 8E44
 570+ 8E44 32 BD 89     1 ld (Numero_parcial_de_entidades),a
 571+ 8E47 47           	ld b,a
 572+ 8E48 C9           2 ret
 573+ 8E49
# file closed: Rutinas_de_inicio_y_niveles.asm
1830  8E49              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 8E49              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 8E49              ;
   3+ 8E49              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 8E49              ;
   5+ 8E49              ; *****************************************************************************************************************************************************************************************
   6+ 8E49              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 8E49
   8+ 8E49 7C           calcula_tercio ld a,h
   9+ 8E4A E6 18        	and $18
  10+ 8E4C CB 2F        	sra a
  11+ 8E4E CB 2F        	sra a
  12+ 8E50 CB 2F        	sra a
  13+ 8E52 C9           	ret
  14+ 8E53
# file closed: calcula_tercio.asm
1831  8E53              	include "Cls.asm"
# file opened: Cls.asm
   1+ 8E53              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 8E53              ;
   3+ 8E53              ;
   4+ 8E53              ;	CLS.
   5+ 8E53              ;
   6+ 8E53              ;	Limpia la pantalla y define sus atributos.
   7+ 8E53              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 8E53              ;
   9+ 8E53              ;	COLORES: 0 ..... NEGRO
  10+ 8E53              ;    		 1 ..... AZUL
  11+ 8E53              ; 			 2 ..... ROJO
  12+ 8E53              ;			 3 ..... MAGENTA
  13+ 8E53              ; 			 4 ..... VERDE
  14+ 8E53              ; 			 5 ..... CIAN
  15+ 8E53              ;			 6 ..... AMARILLO
  16+ 8E53              ; 			 7 ..... BLANCO
  17+ 8E53              ;
  18+ 8E53              ;	INPUT: A contiene los atributos de pantalla.
  19+ 8E53              ;
  20+ 8E53              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 8E53
  22+ 8E53
  23+ 8E53 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 8E56 11 01 40     	LD DE,$4001
  25+ 8E59 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 8E5C 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 8E5E ED B0        	LDIR
  28+ 8E60 01 FF 02     	LD BC,767
  29+ 8E63 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 8E64 ED B0        	LDIR
  31+ 8E66 C9           	ret
  32+ 8E67
# file closed: Cls.asm
1832  8E67              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 8E67              ; ------------------------------------------------------------------------
   2+ 8E67              ;
   3+ 8E67              ;	30/1/24
   4+ 8E67              ;
   5+ 8E67              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 8E67              ;	Fila superior "0", Columna izquierda "0".
   7+ 8E67              ;
   8+ 8E67              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 8E67              ;
  10+ 8E67              ;	Modifica: A,BC y DE.
  11+ 8E67
  12+ 8E67 7D           Genera_coordenadas ld a,l
  13+ 8E68 E6 1F        	and $1f
  14+ 8E6A 32 7E 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 8E6D
  16+ 8E6D 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 8E6E FE 40        	cp $40
  18+ 8E70 38 1C        	jr c,4F
  19+ 8E72
  20+ 8E72 CD 49 8E     	call calcula_tercio
  21+ 8E75 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 8E76
  23+ 8E76 1E 00        	ld e,0
  24+ 8E78 7D           	ld a,l
  25+ 8E79 E6 E0        	and $e0
  26+ 8E7B 28 01        	jr z,1F
  27+ 8E7D 04           	inc b
  28+ 8E7E
  29+ 8E7E 04           1 inc b
  30+ 8E7F 05           	dec b
  31+ 8E80 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 8E82              ;														; _ , salimos.
  33+ 8E82 1C           3 inc e
  34+ 8E83 D6 20        	sub 32
  35+ 8E85 20 FB        	jr nz,3B
  36+ 8E87 10 F5        	djnz 1B
  37+ 8E89
  38+ 8E89 7B           2 ld a,e
  39+ 8E8A 32 7F 89     	ld (Coordenada_y),a
  40+ 8E8D C9           	ret
  41+ 8E8E
  42+ 8E8E AF           4 xor a
  43+ 8E8F 32 7F 89     	ld (Coordenada_y),a
  44+ 8E92 C9           	ret
  45+ 8E93
  46+ 8E93              ; ------------------------------------------------------------------------
  47+ 8E93              ;	28/05/23
  48+ 8E93              ;
  49+ 8E93              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 8E93              ;	Fila superior "0", Columna izquierda "0".
  51+ 8E93              ;
  52+ 8E93              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 8E93              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 8E93              ;
  55+ 8E93              ;		DE="$120d"
  56+ 8E93              ;
  57+ 8E93              ;		D, (Coordenada_X), Columnas, $12
  58+ 8E93              ;		E, (Coordenada_y), Filas, $0d
  59+ 8E93              ;
  60+ 8E93              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 8E93
  62+ 8E93              ;	Modifica: A,BC y DE.
  63+ 8E93
  64+ 8E93
  65+ 8E93              Genera_coordenadas_disparo
  66+ 8E93
  67+ 8E93              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 8E93
  69+ 8E93 7D           	ld a,l
  70+ 8E94 E6 1F        	and $1f
  71+ 8E96 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 8E97 CD 49 8E     	call calcula_tercio
  73+ 8E9A 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 8E9B 1E 00        	ld e,0
  75+ 8E9D 7D           	ld a,l
  76+ 8E9E E6 E0        	and $e0
  77+ 8EA0 28 01        	jr z,1F
  78+ 8EA2 04           	inc b
  79+ 8EA3 1C           1 inc e
  80+ 8EA4 D6 20        	sub 32
  81+ 8EA6 20 FB        	jr nz,1B
  82+ 8EA8 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 8EAA C9           	ret
  84+ 8EAB
# file closed: Genera_coordenadas.asm
1833  8EAB              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 8EAB              ; Relojes y temporizaciones.
   2+ 8EAB
   3+ 8EAB              ; ------------------------------------------------------
   4+ 8EAB              ;
   5+ 8EAB              ;	16/7/23
   6+ 8EAB              ;
   7+ 8EAB              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 8EAB              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 8EAB              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 8EAB              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 8EAB              ;
  12+ 8EAB              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 8EAB              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 8EAB
  15+ 8EAB              ; Disparo_entidad db 1
  16+ 8EAB              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 8EAB              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 8EAB
  19+ 8EAB              Habilita_disparos
  20+ 8EAB
  21+ 8EAB 7E           	ld a,(hl)
  22+ 8EAC A7           	and a
  23+ 8EAD C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 8EAE
  25+ 8EAE EB           	ex de,hl
  26+ 8EAF
  27+ 8EAF 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 8EB0 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 8EB1
  30+ 8EB1              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 8EB1
  32+ 8EB1 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 8EB2 7E           	ld a,(hl)
  34+ 8EB3 23           	inc hl
  35+ 8EB4 77           	ld (hl),a
  36+ 8EB5
  37+ 8EB5 EB           	ex de,hl						; Habilitamos disparo.
  38+ 8EB6 3E 01        	ld a,1
  39+ 8EB8 77           	ld (hl),a
  40+ 8EB9 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1834  8EBA              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 8EBA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8EBA              ;
   3+ 8EBA              ;	11/03/24
   4+ 8EBA              ;
   5+ 8EBA              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 8EBA              ;   DE contiene Puntero_objeto.
   7+ 8EBA              ;   IX contiene el Puntero de impresión.
   8+ 8EBA
   9+ 8EBA              Genera_datos_de_impresion
  10+ 8EBA
  11+ 8EBA ED 73 C4 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 8EBE 31 90 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ 8EC1 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ 8EC3
  15+ 8EC3 2A D5 89         ld hl,(Scanlines_album_SP)
  16+ 8EC6
  17+ 8EC6 3E 05            ld a,5
  18+ 8EC8 85               add l
  19+ 8EC9 6F               ld l,a
  20+ 8ECA
  21+ 8ECA F9               ld sp,hl
  22+ 8ECB 22 D5 89         ld (Scanlines_album_SP),hl
  23+ 8ECE
  24+ 8ECE 21 00 00         ld hl,0
  25+ 8ED1
  26+ 8ED1 DD E5            push ix
  27+ 8ED3 3B               dec sp
  28+ 8ED4 ED 7A            adc hl,sp
  29+ 8ED6 D5               push de
  30+ 8ED7
  31+ 8ED7              ; Recuperamos SP.
  32+ 8ED7
  33+ 8ED7 ED 7B C4 89      ld sp,(Stack)
  34+ 8EDB
  35+ 8EDB E5               push hl
  36+ 8EDC F1               pop af
  37+ 8EDD 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ 8EDE
  39+ 8EDE              ; Tenemos el encabezado listo.
  40+ 8EDE              ; Preparamos registros para generar los scanlines.
  41+ 8EDE
  42+ 8EDE DD E5            push ix
  43+ 8EE0 E1               pop hl                                          ; 1er scanline en HL.
  44+ 8EE1
  45+ 8EE1 ED 5B D5 89      ld de,(Scanlines_album_SP)
  46+ 8EE5
  47+ 8EE5              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ 8EE5              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ 8EE5
  50+ 8EE5 7C               ld a,h
  51+ 8EE6 FE 50            cp $50
  52+ 8EE8 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ 8EEA
  54+ 8EEA 20 05            jr nz,2F
  55+ 8EEC
  56+ 8EEC 7D               ld a,l
  57+ 8EED FE E0            cp $e0
  58+ 8EEF 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ 8EF1
  60+ 8EF1 7D           2 ld a,l
  61+ 8EF2 FE C0            cp $c0
  62+ 8EF4 D2 86 8F         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ 8EF7
  64+ 8EF7              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ 8EF7
  66+ 8EF7 CD FC 94         call NextScan
  67+ 8EFA EB               ex de,hl
  68+ 8EFB
  69+ 8EFB 73               ld (hl),e
  70+ 8EFC 23               inc hl
  71+ 8EFD 72               ld (hl),d
  72+ 8EFE 23               inc hl
  73+ 8EFF
  74+ 8EFF EB               ex de,hl
  75+ 8F00
  76+ 8F00 CD FC 94         call NextScan
  77+ 8F03 EB               ex de,hl
  78+ 8F04
  79+ 8F04 73               ld (hl),e
  80+ 8F05 23               inc hl
  81+ 8F06 72               ld (hl),d
  82+ 8F07 23               inc hl
  83+ 8F08
  84+ 8F08 EB               ex de,hl
  85+ 8F09
  86+ 8F09 CD FC 94         call NextScan
  87+ 8F0C EB               ex de,hl
  88+ 8F0D
  89+ 8F0D 73               ld (hl),e
  90+ 8F0E 23               inc hl
  91+ 8F0F 72               ld (hl),d
  92+ 8F10 23               inc hl
  93+ 8F11
  94+ 8F11 EB               ex de,hl
  95+ 8F12
  96+ 8F12 CD FC 94         call NextScan
  97+ 8F15 EB               ex de,hl
  98+ 8F16
  99+ 8F16 73               ld (hl),e
 100+ 8F17 23               inc hl
 101+ 8F18 72               ld (hl),d
 102+ 8F19 23               inc hl
 103+ 8F1A
 104+ 8F1A EB               ex de,hl
 105+ 8F1B
 106+ 8F1B CD FC 94         call NextScan
 107+ 8F1E EB               ex de,hl
 108+ 8F1F
 109+ 8F1F 73               ld (hl),e
 110+ 8F20 23               inc hl
 111+ 8F21 72               ld (hl),d
 112+ 8F22 23               inc hl
 113+ 8F23
 114+ 8F23 EB               ex de,hl
 115+ 8F24
 116+ 8F24 CD FC 94         call NextScan
 117+ 8F27 EB               ex de,hl
 118+ 8F28
 119+ 8F28 73               ld (hl),e
 120+ 8F29 23               inc hl
 121+ 8F2A 72               ld (hl),d
 122+ 8F2B 23               inc hl
 123+ 8F2C
 124+ 8F2C EB               ex de,hl
 125+ 8F2D
 126+ 8F2D CD FC 94         call NextScan
 127+ 8F30 EB               ex de,hl
 128+ 8F31
 129+ 8F31 73               ld (hl),e
 130+ 8F32 23               inc hl
 131+ 8F33 72               ld (hl),d
 132+ 8F34 23               inc hl
 133+ 8F35
 134+ 8F35 EB               ex de,hl
 135+ 8F36
 136+ 8F36 CD FC 94         call NextScan
 137+ 8F39 EB               ex de,hl
 138+ 8F3A
 139+ 8F3A 73               ld (hl),e
 140+ 8F3B 23               inc hl
 141+ 8F3C 72               ld (hl),d
 142+ 8F3D 23               inc hl
 143+ 8F3E
 144+ 8F3E EB               ex de,hl
 145+ 8F3F
 146+ 8F3F CD FC 94         call NextScan
 147+ 8F42 EB               ex de,hl
 148+ 8F43
 149+ 8F43 73               ld (hl),e
 150+ 8F44 23               inc hl
 151+ 8F45 72               ld (hl),d
 152+ 8F46 23               inc hl
 153+ 8F47
 154+ 8F47 EB               ex de,hl
 155+ 8F48
 156+ 8F48 CD FC 94         call NextScan
 157+ 8F4B EB               ex de,hl
 158+ 8F4C
 159+ 8F4C 73               ld (hl),e
 160+ 8F4D 23               inc hl
 161+ 8F4E 72               ld (hl),d
 162+ 8F4F 23               inc hl
 163+ 8F50
 164+ 8F50 EB               ex de,hl
 165+ 8F51
 166+ 8F51 CD FC 94         call NextScan
 167+ 8F54 EB               ex de,hl
 168+ 8F55
 169+ 8F55 73               ld (hl),e
 170+ 8F56 23               inc hl
 171+ 8F57 72               ld (hl),d
 172+ 8F58 23               inc hl
 173+ 8F59
 174+ 8F59 EB               ex de,hl
 175+ 8F5A
 176+ 8F5A CD FC 94         call NextScan
 177+ 8F5D EB               ex de,hl
 178+ 8F5E
 179+ 8F5E 73               ld (hl),e
 180+ 8F5F 23               inc hl
 181+ 8F60 72               ld (hl),d
 182+ 8F61 23               inc hl
 183+ 8F62
 184+ 8F62 EB               ex de,hl
 185+ 8F63
 186+ 8F63 CD FC 94         call NextScan
 187+ 8F66 EB               ex de,hl
 188+ 8F67
 189+ 8F67 73               ld (hl),e
 190+ 8F68 23               inc hl
 191+ 8F69 72               ld (hl),d
 192+ 8F6A 23               inc hl
 193+ 8F6B
 194+ 8F6B EB               ex de,hl
 195+ 8F6C
 196+ 8F6C CD FC 94         call NextScan
 197+ 8F6F EB               ex de,hl
 198+ 8F70
 199+ 8F70 73               ld (hl),e
 200+ 8F71 23               inc hl
 201+ 8F72 72               ld (hl),d
 202+ 8F73 23               inc hl
 203+ 8F74
 204+ 8F74 EB               ex de,hl
 205+ 8F75
 206+ 8F75 CD FC 94         call NextScan
 207+ 8F78 EB               ex de,hl
 208+ 8F79
 209+ 8F79 73               ld (hl),e
 210+ 8F7A 23               inc hl
 211+ 8F7B 72               ld (hl),d
 212+ 8F7C 23               inc hl
 213+ 8F7D
 214+ 8F7D              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ 8F7D
 216+ 8F7D 22 D5 89         ld (Scanlines_album_SP),hl
 217+ 8F80
 218+ 8F80              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ 8F80
 220+ 8F80 08               ex af,af
 221+ 8F81
 222+ 8F81 F5               push af
 223+ 8F82 E1               pop hl
 224+ 8F83
 225+ 8F83 36 10            ld (hl),16
 226+ 8F85
 227+ 8F85 C9               ret
 228+ 8F86
 229+ 8F86              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ 8F86
 231+ 8F86              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ 8F86
 233+ 8F86 3E 57            ld a,$57
 234+ 8F88 94               sub h
 235+ 8F89 47               ld b,a
 236+ 8F8A
 237+ 8F8A 3E DF            ld a,$df
 238+ 8F8C BD               cp l
 239+ 8F8D 38 04            jr c,1F
 240+ 8F8F
 241+ 8F8F 3E 08            ld a,8
 242+ 8F91 80               add b
 243+ 8F92 47               ld b,a
 244+ 8F93
 245+ 8F93              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 246+ 8F93              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 247+ 8F93
 248+ 8F93 48           1 ld c,b
 249+ 8F94 0C               inc c
 250+ 8F95
 251+ 8F95 04               inc b
 252+ 8F96 05               dec b
 253+ 8F97 20 02            jr nz,3F
 254+ 8F99
 255+ 8F99 18 0B            jr 6F
 256+ 8F9B
 257+ 8F9B CD FC 94     3 call NextScan
 258+ 8F9E EB               ex de,hl
 259+ 8F9F
 260+ 8F9F 73               ld (hl),e
 261+ 8FA0 23               inc hl
 262+ 8FA1 72               ld (hl),d
 263+ 8FA2 23               inc hl
 264+ 8FA3
 265+ 8FA3 EB               ex de,hl
 266+ 8FA4 10 F5            djnz 3B
 267+ 8FA6
 268+ 8FA6 ED 53 D5 89  6 ld (Scanlines_album_SP),de
 269+ 8FAA
 270+ 8FAA 08           5 ex af,af
 271+ 8FAB F5               push af
 272+ 8FAC E1               pop hl
 273+ 8FAD
 274+ 8FAD 71               ld (hl),c
 275+ 8FAE
 276+ 8FAE C9               ret
 277+ 8FAF
# file closed: Genera_datos_de_impresion.asm
1835  8FAF              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 8FAF              ; -----------------------------------------------------------------------------
   2+ 8FAF              ;
   3+ 8FAF              ;   11/03/24
   4+ 8FAF              ;
   5+ 8FAF
   6+ 8FAF                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119 2A D5 89         ld hl,(Scanlines_album_SP)
  11+ 911C CD D7 8B         call Extrae_address
  12+ 911F
  13+ 911F 24               inc h
  14+ 9120 25               dec h
  15+ 9121 C8               ret z                               ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9122
  17+ 9122 ED 73 C4 89      ld (Stack),sp
  18+ 9126
  19+ 9126 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 9127              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 9127 2C               inc l
  22+ 9128 2C               inc l
  23+ 9129
  24+ 9129 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 912A
  26+ 912A 2C               inc l
  27+ 912B F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 912C
  29+ 912C              ;   Seleccionamos rutina de impresión:
  30+ 912C
  31+ 912C 3E 10            ld a,16
  32+ 912E B8               cp b
  33+ 912F C2 2D 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9132
  35+ 9132              ;   Rutinas:
  36+ 9132
  37+ 9132              Pinta_rapido    ;   1520 t/states.
  38+ 9132
  39+ 9132 E1               pop hl
  40+ 9133
  41+ 9133 1A               ld a,(de)
  42+ 9134 AE               xor (hl)
  43+ 9135 77               ld (hl),a
  44+ 9136 2C               inc l
  45+ 9137 1C               inc e
  46+ 9138 1A               ld a,(de)
  47+ 9139 AE               xor (hl)
  48+ 913A 77               ld (hl),a
  49+ 913B 2C               inc l
  50+ 913C 1C               inc e
  51+ 913D 1A               ld a,(de)
  52+ 913E AE               xor (hl)
  53+ 913F 77               ld (hl),a
  54+ 9140 13               inc de
  55+ 9141
  56+ 9141 E1               pop hl
  57+ 9142
  58+ 9142 1A               ld a,(de)
  59+ 9143 AE               xor (hl)
  60+ 9144 77               ld (hl),a
  61+ 9145 2C               inc l
  62+ 9146 1C               inc e
  63+ 9147 1A               ld a,(de)
  64+ 9148 AE               xor (hl)
  65+ 9149 77               ld (hl),a
  66+ 914A 2C               inc l
  67+ 914B 1C               inc e
  68+ 914C 1A               ld a,(de)
  69+ 914D AE               xor (hl)
  70+ 914E 77               ld (hl),a
  71+ 914F 13               inc de
  72+ 9150
  73+ 9150 E1               pop hl
  74+ 9151
  75+ 9151 1A               ld a,(de)
  76+ 9152 AE               xor (hl)
  77+ 9153 77               ld (hl),a
  78+ 9154 2C               inc l
  79+ 9155 1C               inc e
  80+ 9156 1A               ld a,(de)
  81+ 9157 AE               xor (hl)
  82+ 9158 77               ld (hl),a
  83+ 9159 2C               inc l
  84+ 915A 1C               inc e
  85+ 915B 1A               ld a,(de)
  86+ 915C AE               xor (hl)
  87+ 915D 77               ld (hl),a
  88+ 915E 13               inc de
  89+ 915F
  90+ 915F E1               pop hl
  91+ 9160
  92+ 9160 1A               ld a,(de)
  93+ 9161 AE               xor (hl)
  94+ 9162 77               ld (hl),a
  95+ 9163 2C               inc l
  96+ 9164 1C               inc e
  97+ 9165 1A               ld a,(de)
  98+ 9166 AE               xor (hl)
  99+ 9167 77               ld (hl),a
 100+ 9168 2C               inc l
 101+ 9169 1C               inc e
 102+ 916A 1A               ld a,(de)
 103+ 916B AE               xor (hl)
 104+ 916C 77               ld (hl),a
 105+ 916D 13               inc de
 106+ 916E
 107+ 916E E1               pop hl
 108+ 916F
 109+ 916F 1A               ld a,(de)
 110+ 9170 AE               xor (hl)
 111+ 9171 77               ld (hl),a
 112+ 9172 2C               inc l
 113+ 9173 1C               inc e
 114+ 9174 1A               ld a,(de)
 115+ 9175 AE               xor (hl)
 116+ 9176 77               ld (hl),a
 117+ 9177 2C               inc l
 118+ 9178 1C               inc e
 119+ 9179 1A               ld a,(de)
 120+ 917A AE               xor (hl)
 121+ 917B 77               ld (hl),a
 122+ 917C 13               inc de
 123+ 917D
 124+ 917D E1               pop hl
 125+ 917E
 126+ 917E 1A               ld a,(de)
 127+ 917F AE               xor (hl)
 128+ 9180 77               ld (hl),a
 129+ 9181 2C               inc l
 130+ 9182 1C               inc e
 131+ 9183 1A               ld a,(de)
 132+ 9184 AE               xor (hl)
 133+ 9185 77               ld (hl),a
 134+ 9186 2C               inc l
 135+ 9187 1C               inc e
 136+ 9188 1A               ld a,(de)
 137+ 9189 AE               xor (hl)
 138+ 918A 77               ld (hl),a
 139+ 918B 13               inc de
 140+ 918C
 141+ 918C E1               pop hl
 142+ 918D
 143+ 918D 1A               ld a,(de)
 144+ 918E AE               xor (hl)
 145+ 918F 77               ld (hl),a
 146+ 9190 2C               inc l
 147+ 9191 1C               inc e
 148+ 9192 1A               ld a,(de)
 149+ 9193 AE               xor (hl)
 150+ 9194 77               ld (hl),a
 151+ 9195 2C               inc l
 152+ 9196 1C               inc e
 153+ 9197 1A               ld a,(de)
 154+ 9198 AE               xor (hl)
 155+ 9199 77               ld (hl),a
 156+ 919A 13               inc de
 157+ 919B
 158+ 919B E1               pop hl
 159+ 919C
 160+ 919C 1A               ld a,(de)
 161+ 919D AE               xor (hl)
 162+ 919E 77               ld (hl),a
 163+ 919F 2C               inc l
 164+ 91A0 1C               inc e
 165+ 91A1 1A               ld a,(de)
 166+ 91A2 AE               xor (hl)
 167+ 91A3 77               ld (hl),a
 168+ 91A4 2C               inc l
 169+ 91A5 1C               inc e
 170+ 91A6 1A               ld a,(de)
 171+ 91A7 AE               xor (hl)
 172+ 91A8 77               ld (hl),a
 173+ 91A9 13               inc de
 174+ 91AA
 175+ 91AA E1               pop hl
 176+ 91AB
 177+ 91AB 1A               ld a,(de)
 178+ 91AC AE               xor (hl)
 179+ 91AD 77               ld (hl),a
 180+ 91AE 2C               inc l
 181+ 91AF 1C               inc e
 182+ 91B0 1A               ld a,(de)
 183+ 91B1 AE               xor (hl)
 184+ 91B2 77               ld (hl),a
 185+ 91B3 2C               inc l
 186+ 91B4 1C               inc e
 187+ 91B5 1A               ld a,(de)
 188+ 91B6 AE               xor (hl)
 189+ 91B7 77               ld (hl),a
 190+ 91B8 13               inc de
 191+ 91B9
 192+ 91B9 E1               pop hl
 193+ 91BA
 194+ 91BA 1A               ld a,(de)
 195+ 91BB AE               xor (hl)
 196+ 91BC 77               ld (hl),a
 197+ 91BD 2C               inc l
 198+ 91BE 1C               inc e
 199+ 91BF 1A               ld a,(de)
 200+ 91C0 AE               xor (hl)
 201+ 91C1 77               ld (hl),a
 202+ 91C2 2C               inc l
 203+ 91C3 1C               inc e
 204+ 91C4 1A               ld a,(de)
 205+ 91C5 AE               xor (hl)
 206+ 91C6 77               ld (hl),a
 207+ 91C7 13               inc de
 208+ 91C8
 209+ 91C8 E1               pop hl
 210+ 91C9
 211+ 91C9 1A               ld a,(de)
 212+ 91CA AE               xor (hl)
 213+ 91CB 77               ld (hl),a
 214+ 91CC 2C               inc l
 215+ 91CD 1C               inc e
 216+ 91CE 1A               ld a,(de)
 217+ 91CF AE               xor (hl)
 218+ 91D0 77               ld (hl),a
 219+ 91D1 2C               inc l
 220+ 91D2 1C               inc e
 221+ 91D3 1A               ld a,(de)
 222+ 91D4 AE               xor (hl)
 223+ 91D5 77               ld (hl),a
 224+ 91D6 13               inc de
 225+ 91D7
 226+ 91D7 E1               pop hl
 227+ 91D8
 228+ 91D8 1A               ld a,(de)
 229+ 91D9 AE               xor (hl)
 230+ 91DA 77               ld (hl),a
 231+ 91DB 2C               inc l
 232+ 91DC 1C               inc e
 233+ 91DD 1A               ld a,(de)
 234+ 91DE AE               xor (hl)
 235+ 91DF 77               ld (hl),a
 236+ 91E0 2C               inc l
 237+ 91E1 1C               inc e
 238+ 91E2 1A               ld a,(de)
 239+ 91E3 AE               xor (hl)
 240+ 91E4 77               ld (hl),a
 241+ 91E5 13               inc de
 242+ 91E6
 243+ 91E6 E1               pop hl
 244+ 91E7
 245+ 91E7 1A               ld a,(de)
 246+ 91E8 AE               xor (hl)
 247+ 91E9 77               ld (hl),a
 248+ 91EA 2C               inc l
 249+ 91EB 1C               inc e
 250+ 91EC 1A               ld a,(de)
 251+ 91ED AE               xor (hl)
 252+ 91EE 77               ld (hl),a
 253+ 91EF 2C               inc l
 254+ 91F0 1C               inc e
 255+ 91F1 1A               ld a,(de)
 256+ 91F2 AE               xor (hl)
 257+ 91F3 77               ld (hl),a
 258+ 91F4 13               inc de
 259+ 91F5
 260+ 91F5 E1               pop hl
 261+ 91F6
 262+ 91F6 1A               ld a,(de)
 263+ 91F7 AE               xor (hl)
 264+ 91F8 77               ld (hl),a
 265+ 91F9 2C               inc l
 266+ 91FA 1C               inc e
 267+ 91FB 1A               ld a,(de)
 268+ 91FC AE               xor (hl)
 269+ 91FD 77               ld (hl),a
 270+ 91FE 2C               inc l
 271+ 91FF 1C               inc e
 272+ 9200 1A               ld a,(de)
 273+ 9201 AE               xor (hl)
 274+ 9202 77               ld (hl),a
 275+ 9203 13               inc de
 276+ 9204
 277+ 9204 E1               pop hl
 278+ 9205
 279+ 9205 1A               ld a,(de)
 280+ 9206 AE               xor (hl)
 281+ 9207 77               ld (hl),a
 282+ 9208 2C               inc l
 283+ 9209 1C               inc e
 284+ 920A 1A               ld a,(de)
 285+ 920B AE               xor (hl)
 286+ 920C 77               ld (hl),a
 287+ 920D 2C               inc l
 288+ 920E 1C               inc e
 289+ 920F 1A               ld a,(de)
 290+ 9210 AE               xor (hl)
 291+ 9211 77               ld (hl),a
 292+ 9212 13               inc de
 293+ 9213
 294+ 9213 E1               pop hl
 295+ 9214
 296+ 9214 1A               ld a,(de)
 297+ 9215 AE               xor (hl)
 298+ 9216 77               ld (hl),a
 299+ 9217 2C               inc l
 300+ 9218 1C               inc e
 301+ 9219 1A               ld a,(de)
 302+ 921A AE               xor (hl)
 303+ 921B 77               ld (hl),a
 304+ 921C 2C               inc l
 305+ 921D 1C               inc e
 306+ 921E 1A               ld a,(de)
 307+ 921F AE               xor (hl)
 308+ 9220 77               ld (hl),a
 309+ 9221 13               inc de
 310+ 9222
 311+ 9222 ED 73 D5 89  2 ld (Scanlines_album_SP),sp
 312+ 9226 ED 7B C4 89      ld sp,(Stack)
 313+ 922A C3 19 91         jp Pinta_Sprites
 314+ 922D
 315+ 922D              Pinta_lento
 316+ 922D
 317+ 922D E1           1 pop hl
 318+ 922E
 319+ 922E 1A               ld a,(de)
 320+ 922F AE               xor (hl)
 321+ 9230 77               ld (hl),a
 322+ 9231 2C               inc l
 323+ 9232 1C               inc e
 324+ 9233 1A               ld a,(de)
 325+ 9234 AE               xor (hl)
 326+ 9235 77               ld (hl),a
 327+ 9236 2C               inc l
 328+ 9237 1C               inc e
 329+ 9238 1A               ld a,(de)
 330+ 9239 AE               xor (hl)
 331+ 923A 77               ld (hl),a
 332+ 923B 13               inc de
 333+ 923C
 334+ 923C 10 EF            djnz 1B
 335+ 923E
 336+ 923E 18 E2            jr 2B
# file closed: Pinta_Sprites.asm
1836  9240              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9240              ; ******************************************************************************************************************************************************************************************
   2+ 9240              ;
   3+ 9240              ; 26/06/23
   4+ 9240              ;
   5+ 9240              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9240
   7+ 9240              Draw
   8+ 9240
   9+ 9240 CD F0 94     	call Prepara_draw
  10+ 9243 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9244 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9245 28 05        	jr z,2F
  13+ 9247
  14+ 9247 3A 8C 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 924A 18 0C        	jr 1F
  16+ 924C
  17+ 924C 2A 8A 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 924F 22 7A 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9252 CD DE 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9255              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9255
  22+ 9255 CD 5C 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9258
  24+ 9258 3A 94 89     1 ld a,(Ctrl_0)
  25+ 925B CB 6F        	bit 5,a
  26+ 925D 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 925F
  28+ 925F CD 74 92     	call Comprueba_limite_horizontal
  29+ 9262 CD 04 93     	call Comprueba_limite_vertical
  30+ 9265
  31+ 9265              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9265              ; -----------------------
  33+ 9265              ; -----------------------
  34+ 9265              ; -----------------------
  35+ 9265
  36+ 9265 CD 5A 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9268 CD 91 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 926B
  39+ 926B 3A 94 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 926E CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9270 32 94 89     	ld (Ctrl_0),a
  42+ 9273
  43+ 9273 C9           	ret
  44+ 9274
  45+ 9274              ; *******************************************************************************************************************************************************************************************
  46+ 9274              ;	21/01/23
  47+ 9274              ;
  48+ 9274              ; 	Comprueba_limite_horizontal.
  49+ 9274              ;
  50+ 9274              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9274              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9274              ;
  53+ 9274              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9274              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9274              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9274              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9274
  58+ 9274
  59+ 9274
  60+ 9274 3A 94 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9277 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9279 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 927B E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 927D 32 94 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9280 18 09            jr 6F
  66+ 9282 CB 5F        1 bit 3,a
  67+ 9284 28 0A            jr z,2F
  68+ 9286 E6 F7            and $f7
  69+ 9288 32 94 89         ld (Ctrl_0),a
  70+ 928B CD DE 93     6 call Inicializacion
  71+ 928E 18 5B            jr 5F
  72+ 9290 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9291
  74+ 9291              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9291              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9291
  77+ 9291 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9292 2A 96 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9295 CD 49 8E     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9298 67           	ld h,a
  81+ 9299 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 929A CD 49 8E     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 929D 67           	ld h,a
  84+ 929E A7           	and a
  85+ 929F ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 92A1 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 92A2 3A 8C 89     	ld a,(Cuad_objeto)
  88+ 92A5 FE 02        	cp 2
  89+ 92A7 38 1E        	jr c,3F
  90+ 92A9 28 1C        	jr z,3F
  91+ 92AB 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92AC 28 23            jr z,7F
  93+ 92AE 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92B0 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92B2 E1           	pop hl
  96+ 92B3
  97+ 92B3              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92B3              ; _para indicar con E="2" en caso necesario.
  99+ 92B3
 100+ 92B3 E5               push hl
 101+ 92B4 C5               push bc
 102+ 92B5 CD 49 8E     	call calcula_tercio
 103+ 92B8 FE 01        	cp 1
 104+ 92BA 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92BC CD EC 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92BF 28 26            jr z,9F
 107+ 92C1 38 24            jr c,9F
 108+ 92C3 1E 00        11 ld e,0
 109+ 92C5 18 22            jr 8F
 110+ 92C7 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92C8 28 07        	jr z, 7F
 112+ 92CA 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92CC 1E 00         	ld e,0
 114+ 92CE E1           	pop hl
 115+ 92CF 18 04        	jr 4F
 116+ 92D1 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92D3 18 15            jr 10F
 118+ 92D5
 119+ 92D5              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92D5              ; _para indicar con E="2" en caso necesario.
 121+ 92D5
 122+ 92D5 E5           4 push hl
 123+ 92D6 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92D7 CD 49 8E     	call calcula_tercio
 125+ 92DA FE 01        	cp 1
 126+ 92DC 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92DE CD EC 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92E1 28 04            jr z,9F
 129+ 92E3 30 02            jr nc,9F
 130+ 92E5 18 02        	jr 8F
 131+ 92E7 1E 02        9 ld e,2
 132+ 92E9 C1           8 pop bc
 133+ 92EA E1           10 pop hl
 134+ 92EB C9           5 ret
 135+ 92EC
 136+ 92EC              ; --------------------
 137+ 92EC              ;
 138+ 92EC              ; 25/08/22
 139+ 92EC
 140+ 92EC CD 49 8E     Comprueba_centro call calcula_tercio
 141+ 92EF 67               ld h,a
 142+ 92F0 08           	ex af,af
 143+ 92F1 FE 02        	cp 2
 144+ 92F3 38 07        	jr c,1F
 145+ 92F5 28 05        	jr z,1F
 146+ 92F7 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92FA 18 03        	jr 2F
 148+ 92FC 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92FF 08           2 ex af,af
 150+ 9300 A7               and a
 151+ 9301 ED 42            sbc hl,bc
 152+ 9303 C9               ret
 153+ 9304
 154+ 9304              ; *********************************************************************************************************************************************************************************************
 155+ 9304              ;
 156+ 9304              ;   16/8/22
 157+ 9304              ;
 158+ 9304              ;	Comprueba_limite_vertical
 159+ 9304              ;
 160+ 9304              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9304              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9304              ;
 163+ 9304
 164+ 9304 2A 7A 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9307 7D           	ld a,l
 166+ 9308 E6 1F        	and $1F
 167+ 930A 57           	ld d,a
 168+ 930B 3A 98 89     	ld a,(Limite_vertical)
 169+ 930E BA           	cp d 											; Límite - Posición.
 170+ 930F 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9310 3A 8C 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9313 CB 47        	bit 0,a
 173+ 9315 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9317
 175+ 9317              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9317
 177+ 9317 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9318 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 931A
 180+ 931A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 931A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 931A
 183+ 931A 3A 7E 89         ld a,(Coordenada_X)
 184+ 931D 16 0F            ld d,Centro_izquierda
 185+ 931F A7               and a
 186+ 9320 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9321 28 1E            jr z,3F
 188+ 9323 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9325              ;                                                    ; _salimos sin modificar nada.
 190+ 9325 18 0E            jr 2F
 191+ 9327 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9328 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 932A
 194+ 932A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 932A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 932A
 197+ 932A 3A 7E 89         ld a,(Coordenada_X)
 198+ 932D 16 10            ld d,Centro_derecha
 199+ 932F A7               and a
 200+ 9330 92               sub d
 201+ 9331 28 0E            jr z,3F
 202+ 9333 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9335              ;                                                    ; _salimos sin modificar nada.
 204+ 9335 CB 43        2 bit 0,e
 205+ 9337 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9339 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 933A CD CE 93         call Modificaccionne
 208+ 933D C1           	pop bc
 209+ 933E CD DE 93         call Inicializacion
 210+ 9341 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9342
 212+ 9342              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9342
 214+ 9342 C5           4 push bc
 215+ 9343 01 79 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9346 0A           	ld a,(bc)
 217+ 9347 3D           	dec a
 218+ 9348 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9349 7D           	ld a,l
 220+ 934A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 934B CB 47        	bit 0,a
 222+ 934D 28 03        	jr z,5F
 223+ 934F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9350 18 2E        	jr 7F
 225+ 9352
 226+ 9352              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9352
 228+ 9352 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9353 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9354 3A 94 89     	ld a,(Ctrl_0)
 231+ 9357 CB 4F        	bit 1,a
 232+ 9359 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 935B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 935C
 235+ 935C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 935C
 237+ 935C 1C               inc e
 238+ 935D 1D               dec e
 239+ 935E 20 07            jr nz,12F
 240+ 9360 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9361 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9362 22 7A 89     	ld (Posicion_actual),hl
 243+ 9365 18 44        13 jr 9F
 244+ 9367 CB 43        12 bit 0,e
 245+ 9369 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 936B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 936B C1           	pop bc
 248+ 936C 18 D3        	jr 3B
 249+ 936E 80           14 add b
 250+ 936F 6F               ld l,a
 251+ 9370 22 7A 89     	ld (Posicion_actual),hl
 252+ 9373 CD CE 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9376 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9378 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 937A 32 94 89         ld (Ctrl_0),a
 256+ 937D F1           	pop af
 257+ 937E 18 2B        	jr 9F
 258+ 9380
 259+ 9380              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9380
 261+ 9380 F5           7 push af
 262+ 9381 3A 94 89     	ld a,(Ctrl_0)
 263+ 9384 CB 47        	bit 0,a
 264+ 9386 20 1D        	jr nz,8F
 265+ 9388 F1           	pop af
 266+ 9389
 267+ 9389              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9389
 269+ 9389 1C           	inc e
 270+ 938A 1D               dec e
 271+ 938B 20 07            jr nz,10F
 272+ 938D 90           	sub b
 273+ 938E 6F               ld l,a
 274+ 938F 22 7A 89     	ld (Posicion_actual),hl
 275+ 9392 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9394              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9394 CB 43        10 bit 0,e
 278+ 9396 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9398              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9398 C1           	pop bc
 281+ 9399 18 A6        	jr 3B
 282+ 939B 90           16 sub b
 283+ 939C 6F               ld l,a
 284+ 939D 22 7A 89     	ld (Posicion_actual),hl
 285+ 93A0 CD CE 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 93A3 18 06            jr 9F
 287+ 93A5 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 93A7 32 94 89         ld (Ctrl_0),a
 289+ 93AA F1           	pop af
 290+ 93AB C1           9 pop bc
 291+ 93AC 1E 00        	ld e,0
 292+ 93AE CD DE 93         call Inicializacion
 293+ 93B1 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93B2 08           	ex af,af
 295+ 93B3 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93B4 18 8B            jr 3B
 297+ 93B6
 298+ 93B6              ; --------------------
 299+ 93B6
 300+ 93B6 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93B8 CD 0B 95     1 call PreviousScan
 302+ 93BB 10 FB            djnz 1B
 303+ 93BD 22 7A 89     	ld (Posicion_actual),hl
 304+ 93C0 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93C1 C9           	ret
 306+ 93C2
 307+ 93C2              ; --------------------
 308+ 93C2
 309+ 93C2 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93C4 CD FC 94     1 call NextScan
 311+ 93C7 10 FB            djnz 1B
 312+ 93C9 22 7A 89     	ld (Posicion_actual),hl
 313+ 93CC AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93CD C9           	ret
 315+ 93CE
 316+ 93CE              ; --------------------
 317+ 93CE              ;
 318+ 93CE              ;	22/01/23
 319+ 93CE              ;
 320+ 93CE              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93CE              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93CE              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93CE
 324+ 93CE
 325+ 93CE              Modificaccionne
 326+ 93CE
 327+ 93CE 3A 8C 89     	ld a,(Cuad_objeto)
 328+ 93D1 FE 02        	cp 2
 329+ 93D3 CC B6 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93D6 DC B6 93         call c,Modifica_Pos_actual
 331+ 93D9 C8           	ret z
 332+ 93DA CD C2 93         call Modifica_Pos_actual2
 333+ 93DD C9               ret
 334+ 93DE
 335+ 93DE              ; *************************************************************************************************************************************************************************************************
 336+ 93DE              ;
 337+ 93DE              ;	13/8/22
 338+ 93DE              ;
 339+ 93DE              ;	Inicializacion
 340+ 93DE              ;
 341+ 93DE              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93DE              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93DE              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93DE              ;
 345+ 93DE              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93DE              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93DE              ;	_ desaparece/aparece.
 348+ 93DE
 349+ 93DE              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93DE              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93DE              ;
 352+ 93DE              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93DE              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93DE              ; 		   [E] ="0"
 355+ 93DE
 356+ 93DE              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93DE
 358+ 93DE CD 49 8E     Inicializacion call calcula_tercio
 359+ 93E1 28 36        	jr z,primit
 360+ 93E3 E6 02        	and 2
 361+ 93E5 20 07        	jr nz,segmit
 362+ 93E7 7D           	ld a,l
 363+ 93E8 FE 7F        	cp $7f
 364+ 93EA 38 2D        	jr c,primit
 365+ 93EC 28 2B        	jr z,primit
 366+ 93EE CD 54 94     segmit call column
 367+ 93F1 38 13        	jr c,tercuad
 368+ 93F3 3E 04        cuarcuad ld a,4
 369+ 93F5 32 8C 89     	ld (Cuad_objeto),a
 370+ 93F8 21 20 48     	ld hl,$4820
 371+ 93FB 22 96 89     	ld (Limite_horizontal),hl
 372+ 93FE 21 98 89     	ld hl,Limite_vertical
 373+ 9401 36 0D        	ld (hl),$0d
 374+ 9403 08           	ex af,af
 375+ 9404 18 3C        	jr 1F
 376+ 9406              tercuad
 377+ 9406 3E 03        	ld a,3
 378+ 9408 32 8C 89     	ld (Cuad_objeto),a
 379+ 940B 21 20 48     	ld hl,$4820
 380+ 940E 22 96 89     	ld (Limite_horizontal),hl
 381+ 9411 21 98 89     	ld hl,Limite_vertical
 382+ 9414 36 12        	ld (hl),$12
 383+ 9416 08           	ex af,af
 384+ 9417 18 29        	jr 1F
 385+ 9419 CD 54 94     primit call column
 386+ 941C 38 13        	jr c, primcuad
 387+ 941E              segcuad
 388+ 941E 3E 02        	ld a,2
 389+ 9420 32 8C 89     	ld (Cuad_objeto),a
 390+ 9423 21 C0 4F     	ld hl,$4fc0
 391+ 9426 22 96 89     	ld (Limite_horizontal),hl
 392+ 9429 21 98 89     	ld hl,Limite_vertical
 393+ 942C 36 0D        	ld (hl),$0d
 394+ 942E 08           	ex af,af
 395+ 942F 18 11        	jr 1F
 396+ 9431              primcuad
 397+ 9431 3E 01        	ld a,1
 398+ 9433 32 8C 89     	ld (Cuad_objeto),a
 399+ 9436 21 C0 4F     	ld hl,$4fc0
 400+ 9439 22 96 89     	ld (Limite_horizontal),hl
 401+ 943C 21 98 89     	ld hl,Limite_vertical
 402+ 943F 36 12        	ld (hl),$12
 403+ 9441 08           	ex af,af
 404+ 9442
 405+ 9442 C5           1 push bc
 406+ 9443 E5           	push hl
 407+ 9444 D5           	push de
 408+ 9445
 409+ 9445 2A 7A 89     	ld hl,(Posicion_actual)
 410+ 9448 CD 67 8E     	call Genera_coordenadas
 411+ 944B
 412+ 944B D1           	pop de
 413+ 944C E1           	pop hl
 414+ 944D C1           	pop bc
 415+ 944E
 416+ 944E 21 94 89     	ld hl,Ctrl_0
 417+ 9451 CB EE        	set 5,(hl)
 418+ 9453 C9           	ret
 419+ 9454
 420+ 9454              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9454
 422+ 9454              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9454              ;
 424+ 9454              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9454
 426+ 9454 7D           column ld a,l
 427+ 9455 E6 1F        	and $1f
 428+ 9457 FE 10         	cp $10
 429+ 9459 C9            	ret
 430+ 945A
 431+ 945A              ; --------------------------------------------------------------------------------------------------------------------
 432+ 945A              ;
 433+ 945A              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 945A              ;
 435+ 945A              ; 14/12/22
 436+ 945A              ;
 437+ 945A              ;	Modifica: A y BC.
 438+ 945A
 439+ 945A 3A 8C 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 945D E6 01        	and 1
 441+ 945F 28 17        	jr z,1F
 442+ 9461
 443+ 9461              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9461
 445+ 9461 3A 7E 89     	ld a,(Coordenada_X)
 446+ 9464 47           	ld b,a
 447+ 9465 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9466 79           	ld a,c
 449+ 9467 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9468 38 08        	jr c,2F
 451+ 946A 47           	ld b,a
 452+ 946B 79           	ld a,c
 453+ 946C 90           	sub b
 454+ 946D 32 95 89     	ld (Columnas),a
 455+ 9470 18 1B        	jr 4F
 456+ 9472 79           2 ld a,c
 457+ 9473 32 95 89     	ld (Columnas),a
 458+ 9476 18 15        	jr 4F
 459+ 9478
 460+ 9478              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9478
 462+ 9478 3A 7E 89     1 ld a,(Coordenada_X)
 463+ 947B 81           	add c
 464+ 947C 3D           	dec a
 465+ 947D D6 1F        	sub $1f
 466+ 947F 38 08        	jr c,3F
 467+ 9481 47           	ld b,a
 468+ 9482 79           	ld a,c
 469+ 9483 90           	sub b
 470+ 9484 32 95 89     	ld (Columnas),a
 471+ 9487 18 04        	jr 4F
 472+ 9489 79           3 ld a,c
 473+ 948A 32 95 89     	ld (Columnas),a
 474+ 948D D9           4 exx
 475+ 948E 4F           	ld c,a
 476+ 948F D9           	exx
 477+ 9490 C9            ret
 478+ 9491
 479+ 9491              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9491              ;
 481+ 9491              ;   19/7/23
 482+ 9491              ;
 483+ 9491              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9491              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9491              ;
 486+ 9491              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9491              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9491              ;
 489+ 9491              ;	DESTRUYE: HL,B Y A.
 490+ 9491
 491+ 9491 3A 8C 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9494 FE 02        	cp 2
 493+ 9496 38 18        	jr c,1F
 494+ 9498 28 16        	jr z,1F
 495+ 949A E6 01        	and 1
 496+ 949C 28 0D        	jr z,3F
 497+ 949E
 498+ 949E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 949E
 500+ 949E CD E4 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 94A1
 502+ 94A1 7D           9 ld a,l
 503+ 94A2 E6 1F        	and $1f
 504+ 94A4 28 2A        	jr z,7F
 505+ 94A6 2B           	dec hl
 506+ 94A7 10 F8        	djnz 9B
 507+ 94A9 18 25        	jr 7F
 508+ 94AB
 509+ 94AB              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 94AB
 511+ 94AB 2A 7A 89     3 ld hl,(Posicion_actual)
 512+ 94AE 18 20        	jr 7F
 513+ 94B0
 514+ 94B0 28 14        1 jr z,2F
 515+ 94B2
 516+ 94B2              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94B2
 518+ 94B2 CD E4 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94B5
 520+ 94B5 7D           4 ld a,l
 521+ 94B6 E6 1F        	and $1f
 522+ 94B8 28 03        	jr z,6F
 523+ 94BA 2B           	dec hl
 524+ 94BB 10 F8        	djnz 4B
 525+ 94BD 06 0F        6 ld b,15
 526+ 94BF CD 0B 95     5 call PreviousScan
 527+ 94C2 10 FB        	djnz 5B
 528+ 94C4 18 0A        	jr 7F
 529+ 94C6
 530+ 94C6              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94C6
 532+ 94C6 CD E4 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94C9 06 0F        	ld b,15
 534+ 94CB CD 0B 95     8 call PreviousScan
 535+ 94CE 10 FB        	djnz 8B
 536+ 94D0
 537+ 94D0 E5           7 push hl
 538+ 94D1 DD E1        	pop ix
 539+ 94D3
 540+ 94D3 2A 7C 89     	ld hl,(Puntero_objeto)
 541+ 94D6 E5           	push hl
 542+ 94D7 FD E1        	pop iy
 543+ 94D9
 544+ 94D9              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 545+ 94D9
 546+ 94D9 3A 94 89     	ld a,(Ctrl_0)
 547+ 94DC CB 77        	bit 6,a
 548+ 94DE C8           	ret z
 549+ 94DF
 550+ 94DF              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 551+ 94DF              ; _ entidad / Amadeus´.
 552+ 94DF
 553+ 94DF DD 22 24 87  	ld (p.imp.amadeus),ix
 554+ 94E3
 555+ 94E3 C9           	ret
 556+ 94E4
 557+ 94E4              ; --------------------------------------------------------------------------------------------------------------------
 558+ 94E4              ;
 559+ 94E4              ;	2/1/23
 560+ 94E4              ;
 561+ 94E4              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 562+ 94E4              ;
 563+ 94E4              ;	Tras esta rutina tenemos:
 564+ 94E4              ;
 565+ 94E4              ;	OUTPUT: HL contiene (Posicion_actual).
 566+ 94E4              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 567+ 94E4              ;
 568+ 94E4              ;	DESTRUYE!!!!! HL,B y A.
 569+ 94E4
 570+ 94E4 2A 7A 89     Operandos ld hl,(Posicion_actual)
 571+ 94E7 3A 95 89     	ld a,(Columnas)
 572+ 94EA 3D           	dec a
 573+ 94EB 20 01        	jr nz,1F
 574+ 94ED 3C           	inc a
 575+ 94EE 47           1 ld b,a
 576+ 94EF C9           	ret
 577+ 94F0
 578+ 94F0              ; --------------------------------------------------------------------------------------------------------------------
 579+ 94F0              ;
 580+ 94F0              ;	Prepara_draw
 581+ 94F0              ;
 582+ 94F0              ;	Es una rutina de carga.
 583+ 94F0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 584+ 94F0              ;
 585+ 94F0              ;	FUNCIONAMIENTO:
 586+ 94F0              ;
 587+ 94F0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 588+ 94F0              ;	- LD (Posicion_actual) del objeto en [HL].
 589+ 94F0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 590+ 94F0              ;
 591+ 94F0              ;	DESTRUYE:
 592+ 94F0              ;
 593+ 94F0              ;	Logicamente, BC,HL y E quedan destruidos.
 594+ 94F0
 595+ 94F0 21 78 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 596+ 94F3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 597+ 94F4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 598+ 94F5 4E           	ld c,(hl)
 599+ 94F6 2A 7A 89     	ld hl,(Posicion_actual)
 600+ 94F9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 601+ 94FB C9           	ret
 602+ 94FC
 603+ 94FC              ;----------------------------------------------------------------------------------------------------------------
 604+ 94FC              ;
 605+ 94FC              ;	5/08/22
 606+ 94FC              ;
 607+ 94FC              ;   NextScan.
 608+ 94FC              ;
 609+ 94FC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 610+ 94FC              ;
 611+ 94FC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 612+ 94FC              ;
 613+ 94FC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 614+ 94FC              ;
 615+ 94FC              ;       DESTRUIDOS: AF y HL !!!
 616+ 94FC              ;
 617+ 94FC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 618+ 94FC              ;
 619+ 94FC
 620+ 94FC 24           NextScan inc h          ; Incrementamos el scanline.
 621+ 94FD 7C               ld a,h
 622+ 94FE E6 07            and 7
 623+ 9500 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 624+ 9501
 625+ 9501 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 626+ 9502 C6 20            add a,$20           ; Vamos a comprobarlo...
 627+ 9504 6F               ld l,a
 628+ 9505 D8               ret c               ; Salimos si se produce el cambio de tercio.
 629+ 9506
 630+ 9506 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 631+ 9507 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 632+ 9509 67               ld h,a
 633+ 950A C9               ret
 634+ 950B
 635+ 950B              ;----------------------------------------------------------------------------------------------------------------
 636+ 950B              ;
 637+ 950B              ;	5/08/22
 638+ 950B              ;
 639+ 950B              ;   PreviousScan.
 640+ 950B              ;
 641+ 950B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 642+ 950B              ;
 643+ 950B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 644+ 950B              ;
 645+ 950B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 646+ 950B              ;
 647+ 950B              ;       DESTRUIDOS: AF y HL !!!
 648+ 950B              ;
 649+ 950B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 650+ 950B              ;
 651+ 950B
 652+ 950B 7C           PreviousScan ld a,h
 653+ 950C 25               dec h               ; Dec H.
 654+ 950D E6 07            and 7
 655+ 950F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 656+ 9510
 657+ 9510 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 658+ 9511 D6 20            sub $20             ; Vamos a comprobarlo...
 659+ 9513 6F               ld l,a
 660+ 9514 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 661+ 9515
 662+ 9515 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 663+ 9516 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 664+ 9518 67               ld h,a
 665+ 9519 C9               ret
 666+ 951A
 667+ 951A
 668+ 951A
 669+ 951A
 670+ 951A
 671+ 951A
 672+ 951A
 673+ 951A
 674+ 951A
 675+ 951A
 676+ 951A
 677+ 951A
# file closed: Draw_XOR.asm
1837  951A              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 951A
   2+ 951A              ; ******************************************************************************************************************************************************************************************
   3+ 951A              ;
   4+ 951A              ;   20/05/23
   5+ 951A              ;
   6+ 951A              ;	Recompone_posicion_inicio
   7+ 951A              ;
   8+ 951A              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 951A              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 951A              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 951A              ;	_ a una u otra rutina.
  12+ 951A
  13+ 951A              Recompone_posicion_inicio
  14+ 951A
  15+ 951A 2A 8A 89     	ld hl,(Posicion_inicio)
  16+ 951D 7D           	ld a,l
  17+ 951E E6 1F        	and $1f
  18+ 9520 28 16        	jr z,1F
  19+ 9522
  20+ 9522 FE 1F        	cp $1f
  21+ 9524 28 0D        	jr z,3F
  22+ 9526
  23+ 9526 21 99 89     	ld hl,Ctrl_2
  24+ 9529 CB C6        	set 0,(hl)
  25+ 952B 2A 7C 89     	ld hl,(Puntero_objeto)
  26+ 952E 22 B4 89     	ld (Repone_puntero_objeto),hl
  27+ 9531 18 08        	jr 2F
  28+ 9533
  29+ 9533 CD E1 96     3 call Mov_left
  30+ 9536 18 03        	jr 2F
  31+ 9538
  32+ 9538 CD BE 95     1 call Mov_right
  33+ 953B 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 953E 22 7C 89     	ld (Puntero_objeto),hl
  35+ 9541 C9           	ret
  36+ 9542
  37+ 9542              ; ******************************************************************************************************************************************************************************************
  38+ 9542              ;
  39+ 9542              ;   27/05/23
  40+ 9542              ;
  41+ 9542              ;	Mov_down
  42+ 9542              ;
  43+ 9542              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9542              ;
  45+ 9542              ;
  46+ 9542              Mov_down
  47+ 9542
  48+ 9542 CD AC 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9545              ;																	; _ repone (Puntero_objeto).
  50+ 9545 21 94 89     	ld hl,Ctrl_0
  51+ 9548 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 954A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 954A              ; 																	; _ en el caso de que no lo haya.
  54+ 954A 3A 9E 89     	ld a,(Vel_down)
  55+ 954D 47           	ld b,a
  56+ 954E 2A 7A 89         ld hl,(Posicion_actual)
  57+ 9551 CD 49 8E     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9554 E6 02        	and 2
  59+ 9556 28 17        	jr z,1F
  60+ 9558
  61+ 9558              ; Nos encontramos en el último tercio de pantalla.
  62+ 9558              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9558
  64+ 9558 7C           	ld a,h
  65+ 9559 FE 57        	cp $57
  66+ 955B 20 12        	jr nz,1F
  67+ 955D
  68+ 955D 7D           	ld a,l
  69+ 955E C6 20        	add $20
  70+ 9560 30 0D        	jr nc,1F
  71+ 9562
  72+ 9562              ; ------------------------------
  73+ 9562              ;
  74+ 9562              ;	12/01/24
  75+ 9562
  76+ 9562              ;	call Reaparece_arriba
  77+ 9562 CD 6E 98     	call Reinicio
  78+ 9565
  79+ 9565              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9565
  81+ 9565 3A DB 89     	ld a,(Ctrl_3)
  82+ 9568 CB CF        	set 1,a
  83+ 956A 32 DB 89     	ld (Ctrl_3),a
  84+ 956D
  85+ 956D 18 08        	jr 3F
  86+ 956F              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 956F              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 956F              ; ------------------------------
  89+ 956F
  90+ 956F CD FC 94     1 call NextScan
  91+ 9572 22 7A 89     	ld (Posicion_actual),hl
  92+ 9575 10 DA            djnz 2B
  93+ 9577 CD 67 8E     3 call Genera_coordenadas
  94+ 957A C9           	ret
  95+ 957B
  96+ 957B              ; ******************************************************************************************************************************************************************************************
  97+ 957B              ;
  98+ 957B              ;   27/05/23
  99+ 957B              ;
 100+ 957B              ;	Mov_up
 101+ 957B              ;
 102+ 957B              ; 	Mueve el Sprite hacia arriba.
 103+ 957B              ;
 104+ 957B              ;
 105+ 957B              Mov_up
 106+ 957B
 107+ 957B CD AC 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 957E              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 957E 21 94 89     	ld hl,Ctrl_0
 110+ 9581 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9583              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9583              ; 																		; _ en el caso de que no lo haya.
 113+ 9583 3A 9D 89     	ld a,(Vel_up)
 114+ 9586 47           	ld b,a
 115+ 9587 2A 7A 89     	ld hl,(Posicion_actual)
 116+ 958A CD 49 8E     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 958D A7           	and a
 118+ 958E 20 10        	jr nz,1F
 119+ 9590
 120+ 9590              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9590              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9590
 123+ 9590 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9591 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9593 20 0B            jr nz,1F
 126+ 9595 7D               ld a,l
 127+ 9596 D6 20            sub $20
 128+ 9598 30 06            jr nc,1F
 129+ 959A 25               dec h
 130+ 959B
 131+ 959B              ; -----------------------------
 132+ 959B CD 4F 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 959E              ;	call Reinicio
 134+ 959E              ; -----------------------------
 135+ 959E
 136+ 959E 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 95A0 CD 0B 95     1 call PreviousScan
 138+ 95A3 22 7A 89     	ld (Posicion_actual),hl
 139+ 95A6 10 E2            djnz 3B
 140+ 95A8 CD 67 8E     2 call Genera_coordenadas
 141+ 95AB C9           	ret
 142+ 95AC
 143+ 95AC              ; -----------------------------
 144+ 95AC              ;
 145+ 95AC              ;	27/5/23
 146+ 95AC              ;
 147+ 95AC              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95AC              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95AC              ;
 150+ 95AC              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95AC              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95AC              ;
 153+ 95AC              ;	Modifica: A y (Puntero_objeto).
 154+ 95AC
 155+ 95AC 3A 99 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95AF CB 47        	bit 0,a
 157+ 95B1 C8           	ret z
 158+ 95B2 CB 87        	res 0,a
 159+ 95B4 32 99 89     	ld (Ctrl_2),a
 160+ 95B7 2A B4 89     	ld hl,(Repone_puntero_objeto)
 161+ 95BA 22 7C 89     	ld (Puntero_objeto),hl
 162+ 95BD C9           	ret
 163+ 95BE
 164+ 95BE              ; ******************************************************************************************************************************************************************************************
 165+ 95BE              ;
 166+ 95BE              ;	19/10/22
 167+ 95BE              ;
 168+ 95BE              ;	Mov_right.
 169+ 95BE              ;
 170+ 95BE              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95BE              ;
 172+ 95BE
 173+ 95BE 3A 94 89     Mov_right ld a,(Ctrl_0)
 174+ 95C1 CB 77        	bit 6,a
 175+ 95C3 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95C5
 177+ 95C5 CD FD 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95C8 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95C9
 180+ 95C9 21 94 89     	ld hl,Ctrl_0
 181+ 95CC CB E6        	set 4,(hl)
 182+ 95CE 18 52        	jr 8F
 183+ 95D0
 184+ 95D0 21 94 89     10 ld hl,Ctrl_0
 185+ 95D3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95D5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95D5              ; 																	; _ en el caso de que no lo haya.
 188+ 95D5 3A 7E 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95D8 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95DA 20 46        	jr nz,8F
 191+ 95DC
 192+ 95DC 3A 80 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95DF A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95E0 28 40        	jr z,8F
 195+ 95E2
 196+ 95E2              ; ---------- ---------- ----------
 197+ 95E2              ;
 198+ 95E2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95E2
 200+ 95E2 3A 9C 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95E5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95E7 28 11        	jr z,1F
 203+ 95E9 38 06        	jr c,6F
 204+ 95EB FE 04        	cp 4
 205+ 95ED 28 14        	jr z,7F
 206+ 95EF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95F1
 208+ 95F1              ; ---------- ---------- ----------
 209+ 95F1              ;
 210+ 95F1              ; Perfiles de velocidad
 211+ 95F1              ;
 212+ 95F1
 213+ 95F1 3A 80 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95F4 FE FE        	cp $fe
 215+ 95F6 20 2A        	jr nz,8F
 216+ 95F8 18 10        	jr 3F
 217+ 95FA 3A 80 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95FD FE FD        	cp $fd
 219+ 95FF 20 21        	jr nz,8F
 220+ 9601 18 07        	jr 3F
 221+ 9603 3A 80 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9606 FE FB        	cp $fb
 223+ 9608 20 18        	jr nz,8F
 224+ 960A
 225+ 960A              ; ---------- ---------- ----------
 226+ 960A
 227+ 960A              3
 228+ 960A CD 3D 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 960D              ;	call Reinicio
 230+ 960D
 231+ 960D              ; ---------- ---------- ----------
 232+ 960D              ;
 233+ 960D              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 960D
 235+ 960D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 960F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9610 CD 29 96     	call DESPLZ_DER
 238+ 9613 C1           	pop bc
 239+ 9614 10 F9        	djnz 5B
 240+ 9616 2A 7A 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9619 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 961A 22 7A 89     	ld (Posicion_actual),hl
 243+ 961D CD 67 8E     	call Genera_coordenadas
 244+ 9620 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9622
 246+ 9622              ; ---------- ---------- ----------
 247+ 9622
 248+ 9622 2A 7A 89     8 ld hl,(Posicion_actual)
 249+ 9625 CD 29 96     	call DESPLZ_DER
 250+ 9628 C9           2 ret
 251+ 9629
 252+ 9629              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9629              ;
 254+ 9629              ;	22/9/22
 255+ 9629              ;
 256+ 9629
 257+ 9629 CD 38 96     DESPLZ_DER call Desplaza_derecha
 258+ 962C CD 84 96         call modifica_parametros_1er_DESPLZ_2
 259+ 962F CD AD 96         call Ciclo_completo
 260+ 9632 21 94 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9635 CB FE        	set 7,(hl)
 262+ 9637 C9           	ret
 263+ 9638
 264+ 9638              ; ******************************************************************************************************************************************************************************************
 265+ 9638              ;	15/02/23
 266+ 9638              ;
 267+ 9638
 268+ 9638 3A 9C 89     Desplaza_derecha ld a,(Vel_right)
 269+ 963B 47           	ld b,a
 270+ 963C 2A 86 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 963F 23           1 inc hl
 272+ 9640 23           	inc hl
 273+ 9641 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9643 22 86 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9646 CD D7 8B     	call Extrae_address
 276+ 9649 22 7C 89     	ld (Puntero_objeto),hl
 277+ 964C
 278+ 964C              ; Modifica (Puntero_DESPLZ_izq).
 279+ 964C
 280+ 964C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 964C              ; Cuántos movimientos hemos hecho ??
 282+ 964C              ; DE contiene (Puntero_DESPLZ_der).
 283+ 964C
 284+ 964C 2A 82 89     7 ld hl,(Indice_Sprite_der)
 285+ 964F EB           	ex de,hl
 286+ 9650 A7           	and a
 287+ 9651 ED 52        	sbc hl,de
 288+ 9653 CB 3D        	srl l
 289+ 9655 3E 08        6 ld a,8
 290+ 9657 95           	sub l
 291+ 9658 30 1E        	jr nc,3F
 292+ 965A
 293+ 965A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 965A              ; B="0".
 295+ 965A
 296+ 965A 04           4 inc b
 297+ 965B 3C           	inc a
 298+ 965C 20 FC        	jr nz,4B
 299+ 965E 78           	ld a,b
 300+ 965F 08           	ex af,af
 301+ 9660 2A 82 89     	ld hl,(Indice_Sprite_der)
 302+ 9663 23           5 inc hl
 303+ 9664 23           	inc hl
 304+ 9665 10 FC        	djnz 5B
 305+ 9667 22 86 89     	ld (Puntero_DESPLZ_der),hl
 306+ 966A CD D7 8B     	call Extrae_address
 307+ 966D 22 7C 89     	ld (Puntero_objeto),hl
 308+ 9670
 309+ 9670              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9670              ; _(Posicion_actual).
 311+ 9670
 312+ 9670 21 7A 89     	ld hl,Posicion_actual
 313+ 9673 34           	inc (hl)
 314+ 9674 08               ex af,af
 315+ 9675 6F           	ld l,a
 316+ 9676 18 DD        	jr 6B
 317+ 9678
 318+ 9678              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9678
 320+ 9678 47           3 ld b,a
 321+ 9679 2A 84 89     	ld hl,(Indice_Sprite_izq)
 322+ 967C 23           2 inc hl
 323+ 967D 23           	inc hl
 324+ 967E 10 FC        	djnz 2B
 325+ 9680 22 88 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9683 C9           8 ret
 327+ 9684
 328+ 9684              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9684              ;
 330+ 9684              ;	24/7/22
 331+ 9684              ;
 332+ 9684              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9684              ;
 334+ 9684              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9684              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9684              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9684
 338+ 9684 3A 80 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9687 A7           	and a
 340+ 9688 20 1F        	jr nz,1F
 341+ 968A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 968C 32 80 89         ld (CTRL_DESPLZ),a
 343+ 968F
 344+ 968F 21 79 89     	ld hl,Columns
 345+ 9692 34           	inc (hl)
 346+ 9693 3A 8C 89     	ld a,(Cuad_objeto)
 347+ 9696 E6 01        	and 1
 348+ 9698 28 0F        	jr z,1F
 349+ 969A 2A 7A 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 969D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 969E 22 7A 89     	ld (Posicion_actual),hl
 352+ 96A1 CD 67 8E     	call Genera_coordenadas
 353+ 96A4 CD 09 98     	call Inc_CTRL_DESPLZ
 354+ 96A7 18 03        	jr 2F
 355+ 96A9 CD 09 98     1 call Inc_CTRL_DESPLZ
 356+ 96AC C9           2 ret
 357+ 96AD
 358+ 96AD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96AD              ;
 360+ 96AD              ;	24/7/22
 361+ 96AD              ;
 362+ 96AD              ;	Ciclo_completo.
 363+ 96AD              ;
 364+ 96AD              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96AD              ;
 366+ 96AD              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96AD              ; 	Decrementamos (Columns).
 368+ 96AD              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96AD              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96AD
 371+ 96AD
 372+ 96AD 3A 80 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96B0 FE FF        	cp $ff
 374+ 96B2 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96B4 E6 F0        	and $f0
 376+ 96B6 20 28        	jr nz,3F
 377+ 96B8
 378+ 96B8              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96B8
 380+ 96B8 3A 80 89     	ld a,(CTRL_DESPLZ)
 381+ 96BB 47           	ld b,a
 382+ 96BC 3E F8        	ld a,$f8
 383+ 96BE 80           	add b
 384+ 96BF 32 80 89     	ld (CTRL_DESPLZ),a
 385+ 96C2 18 1C        	jr 3F
 386+ 96C4 21 79 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96C7 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96C8 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96C9 32 80 89     	ld (CTRL_DESPLZ),a
 390+ 96CC 3A 8C 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96CF E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96D1 20 0A        	jr nz,2F
 393+ 96D3 2A 7A 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96D6 23           	inc hl
 395+ 96D7 22 7A 89     	ld (Posicion_actual),hl
 396+ 96DA CD 67 8E     	call Genera_coordenadas
 397+ 96DD
 398+ 96DD              ; Inicia el puntero de Sprite.
 399+ 96DD
 400+ 96DD CD EC 8B     2 call Inicia_puntero_objeto_der
 401+ 96E0 C9           3 ret
 402+ 96E1
 403+ 96E1              ; ******************************************************************************************************************************************************************************************
 404+ 96E1              ;
 405+ 96E1              ;	15/02/23
 406+ 96E1              ;
 407+ 96E1              ;	Mov_left.
 408+ 96E1              ;
 409+ 96E1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96E1              ;
 411+ 96E1              Mov_left
 412+ 96E1
 413+ 96E1 21 94 89     	ld hl,Ctrl_0
 414+ 96E4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96E6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96E6              ; 																	; _ en el caso de que no lo haya.
 417+ 96E6 3A 94 89     	ld a,(Ctrl_0)
 418+ 96E9 CB 77        	bit 6,a
 419+ 96EB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96ED
 421+ 96ED CD 03 98     	call Stop_Amadeus_left
 422+ 96F0 C8           	ret z
 423+ 96F1 20 4A        	jr nz,8F
 424+ 96F3
 425+ 96F3 3A 7E 89     11 ld a,(Coordenada_X)
 426+ 96F6 A7           	and a
 427+ 96F7 20 44        	jr nz,8F
 428+ 96F9
 429+ 96F9 3A 80 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96FC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96FD 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96FF
 433+ 96FF              ; ---------- ---------- ----------
 434+ 96FF
 435+ 96FF 3A 9B 89     	ld a,(Vel_left)
 436+ 9702 FE 02        	cp 2
 437+ 9704 28 0F        	jr z,1F
 438+ 9706 38 04        	jr c,6F
 439+ 9708 FE 04        	cp 4
 440+ 970A 28 12        	jr z,7F
 441+ 970C
 442+ 970C              ; ---------- ---------- ----------
 443+ 970C
 444+ 970C 3A 80 89     6 ld a,(CTRL_DESPLZ)
 445+ 970F FE F8        	cp $f8
 446+ 9711 20 2A        	jr nz,8F
 447+ 9713 18 10        	jr 4F
 448+ 9715 3A 80 89     1 ld a,(CTRL_DESPLZ)
 449+ 9718 FE F9        	cp $f9
 450+ 971A 20 21        	jr nz,8F
 451+ 971C 18 07        	jr 4F
 452+ 971E 3A 80 89     7 ld a,(CTRL_DESPLZ)
 453+ 9721 FE FB        	cp $fb
 454+ 9723 20 18        	jr nz,8F
 455+ 9725
 456+ 9725              ; ---------- ---------- ----------
 457+ 9725
 458+ 9725              4
 459+ 9725 CD 2B 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9728              ;	call Reinicio
 461+ 9728
 462+ 9728              ; ---------- ---------- ----------
 463+ 9728
 464+ 9728 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 972A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 972B
 467+ 972B              ;	ld hl,(Indice_Sprite_izq)
 468+ 972B              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 972B
 470+ 972B CD 44 97     	call DESPLZ_IZQ
 471+ 972E C1           	pop bc
 472+ 972F 10 F9        	djnz 5B
 473+ 9731 2A 7A 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9734 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9735 22 7A 89     	ld (Posicion_actual),hl
 476+ 9738 CD 67 8E     	call Genera_coordenadas
 477+ 973B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 973D
 479+ 973D              ; ---------- ---------- ----------
 480+ 973D
 481+ 973D              ; Movemos, no hay recolocación.
 482+ 973D
 483+ 973D 2A 7A 89     8 ld hl,(Posicion_actual)
 484+ 9740 CD 44 97     	call DESPLZ_IZQ
 485+ 9743 C9           2 ret
 486+ 9744
 487+ 9744              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9744              ;
 489+ 9744              ;	22/9/22
 490+ 9744
 491+ 9744              DESPLZ_IZQ
 492+ 9744
 493+ 9744 CD 53 97     	call Desplaza_izquierda
 494+ 9747 CD 9F 97         call modifica_parametros_1er_DESPLZ
 495+ 974A CD C7 97     	call Ciclo_completo_2
 496+ 974D 21 94 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9750 CB BE        	res 7,(hl)
 498+ 9752 C9           	ret
 499+ 9753
 500+ 9753              Desplaza_izquierda
 501+ 9753
 502+ 9753 3A 9B 89     	ld a,(Vel_left)
 503+ 9756 47           	ld b,a
 504+ 9757 2A 88 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 975A 23           1 inc hl
 506+ 975B 23           	inc hl
 507+ 975C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 975E 22 88 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9761 CD D7 8B     	call Extrae_address
 510+ 9764 22 7C 89     	ld (Puntero_objeto),hl
 511+ 9767
 512+ 9767              ; Modifica (Puntero_DESPLZ_der).
 513+ 9767
 514+ 9767              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9767              ; Cuántos movimientos hemos hecho ??
 516+ 9767              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9767
 518+ 9767 2A 84 89     7 ld hl,(Indice_Sprite_izq)
 519+ 976A EB           	ex de,hl
 520+ 976B A7           	and a
 521+ 976C ED 52        	sbc hl,de
 522+ 976E CB 3D        	srl l
 523+ 9770 3E 08        6 ld a,8
 524+ 9772 95           	sub l
 525+ 9773 30 1E        	jr nc,3F
 526+ 9775
 527+ 9775              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9775              ; B="0".
 529+ 9775
 530+ 9775 04           4 inc b
 531+ 9776 3C           	inc a
 532+ 9777 20 FC        	jr nz,4B
 533+ 9779 78           	ld a,b
 534+ 977A 08           	ex af,af
 535+ 977B 2A 84 89     	ld hl,(Indice_Sprite_izq)
 536+ 977E 23           5 inc hl
 537+ 977F 23           	inc hl
 538+ 9780 10 FC        	djnz 5B
 539+ 9782 22 88 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9785 CD D7 8B     	call Extrae_address
 541+ 9788 22 7C 89     	ld (Puntero_objeto),hl
 542+ 978B
 543+ 978B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 978B              ; _(Posicion_actual).
 545+ 978B
 546+ 978B 21 7A 89     	ld hl,Posicion_actual
 547+ 978E 35           	dec (hl)
 548+ 978F 08           	ex af,af
 549+ 9790 6F           	ld l,a
 550+ 9791 18 DD        	jr 6B
 551+ 9793
 552+ 9793              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9793
 554+ 9793 47           3 ld b,a
 555+ 9794 2A 82 89     	ld hl,(Indice_Sprite_der)
 556+ 9797 23           2 inc hl
 557+ 9798 23           	inc hl
 558+ 9799 10 FC        	djnz 2B
 559+ 979B 22 86 89     	ld (Puntero_DESPLZ_der),hl
 560+ 979E C9           8 ret
 561+ 979F
 562+ 979F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 979F              ;
 564+ 979F              ;	modifica_parametros_1er_DESPLZ
 565+ 979F              ;
 566+ 979F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 979F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 979F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 979F
 570+ 979F 3A 80 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 97A2 A7           	and a
 572+ 97A3 20 1E        	jr nz,1F
 573+ 97A5 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 97A6 32 80 89         ld (CTRL_DESPLZ),a
 575+ 97A9 21 79 89     	ld hl,Columns
 576+ 97AC 34           	inc (hl)
 577+ 97AD 3A 8C 89     	ld a,(Cuad_objeto)
 578+ 97B0 E6 01        	and 1
 579+ 97B2 20 0F        	jr nz,1F
 580+ 97B4 2A 7A 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97B7 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97B8 22 7A 89     	ld (Posicion_actual),hl
 583+ 97BB CD 67 8E     	call Genera_coordenadas
 584+ 97BE CD 1A 98     	call Dec_CTRL_DESPLZ
 585+ 97C1 18 03        	jr 2F
 586+ 97C3 CD 1A 98     1 call Dec_CTRL_DESPLZ
 587+ 97C6 C9           2 ret
 588+ 97C7
 589+ 97C7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97C7
 591+ 97C7 3A 80 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97CA FE F7        	cp $f7
 593+ 97CC 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97CE 30 2C        	jr nc,3F
 595+ 97D0
 596+ 97D0              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97D0
 598+ 97D0 06 00        	ld b,0
 599+ 97D2 04           4 inc b
 600+ 97D3 3C           	inc a
 601+ 97D4 FE F7        	cp $f7
 602+ 97D6 20 FA        	jr nz,4B
 603+ 97D8 3E FF        	ld a,$ff
 604+ 97DA 90           	sub b
 605+ 97DB 32 80 89     	ld (CTRL_DESPLZ),a
 606+ 97DE 18 1C        	jr 3F
 607+ 97E0
 608+ 97E0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97E0
 610+ 97E0 21 79 89     1 ld hl,Columns
 611+ 97E3 35           	dec (hl)
 612+ 97E4 AF           	xor a
 613+ 97E5 32 80 89     	ld (CTRL_DESPLZ),a
 614+ 97E8 3A 8C 89     	ld a,(Cuad_objeto)
 615+ 97EB E6 01        	and 1
 616+ 97ED 28 0A        	jr z,2F
 617+ 97EF 2A 7A 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97F2 2B           	dec hl
 619+ 97F3 22 7A 89     	ld (Posicion_actual),hl
 620+ 97F6 CD 67 8E     	call Genera_coordenadas
 621+ 97F9
 622+ 97F9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97F9
 624+ 97F9 CD FF 8B     2 call Inicia_puntero_objeto_izq
 625+ 97FC C9           3 ret
 626+ 97FD
 627+ 97FD              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97FD              ;
 629+ 97FD              ;	19/10/22
 630+ 97FD              ;
 631+ 97FD              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97FD              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97FD
 634+ 97FD 3A 7E 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9800 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9802 C9           	ret
 637+ 9803
 638+ 9803              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9803              ;
 640+ 9803              ;	19/10/22
 641+ 9803              ;
 642+ 9803              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9803              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9803
 645+ 9803 3A 7E 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9806 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9808 C9           	ret
 648+ 9809
 649+ 9809              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9809              ;
 651+ 9809              ;	24/7/22
 652+ 9809              ;
 653+ 9809              ;	Inc_CTRL_DESPLZ
 654+ 9809              ;
 655+ 9809              ;
 656+ 9809              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9809
 658+ 9809 21 80 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 980C 3A 9C 89     	ld a,(Vel_right)
 660+ 980F A7           	and a
 661+ 9810 28 06        	jr z,1F
 662+ 9812 47           	ld b,a
 663+ 9813 34           3 inc (hl)
 664+ 9814 10 FD        	djnz 3B
 665+ 9816 18 01        	jr 2F
 666+ 9818 34           1 inc (hl)
 667+ 9819 C9           2 ret
 668+ 981A
 669+ 981A              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 981A              ;
 671+ 981A              ;	5/2/23
 672+ 981A              ;
 673+ 981A              ;	Dec_CTRL_DESPLZ
 674+ 981A              ;
 675+ 981A              ;
 676+ 981A              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 981A
 678+ 981A 21 80 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 981D 3A 9B 89     	ld a,(Vel_left)
 680+ 9820 A7           	and a
 681+ 9821 28 06        	jr z,1F
 682+ 9823 47           	ld b,a
 683+ 9824 35           3 dec (hl)
 684+ 9825 10 FD        	djnz 3B
 685+ 9827 18 01        	jr 2F
 686+ 9829 35           1 dec (hl)
 687+ 982A C9           2 ret
 688+ 982B
 689+ 982B              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 982B
 691+ 982B 2A 7A 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 982E 01 1F 00     	ld bc,31
 693+ 9831 A7           	and a
 694+ 9832 ED 4A        	adc hl,bc
 695+ 9834 22 7A 89     	ld (Posicion_actual),hl
 696+ 9837 21 94 89     	ld hl,Ctrl_0														; $xxx1
 697+ 983A CB C6        	set 0,(hl)
 698+ 983C C9           	ret
 699+ 983D
 700+ 983D              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 983D
 702+ 983D 2A 7A 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9840 01 1F 00     	ld bc,31
 704+ 9843 A7           	and a
 705+ 9844 ED 42        	sbc hl,bc
 706+ 9846 22 7A 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9849 21 94 89     	ld hl,Ctrl_0
 708+ 984C CB CE        	set 1,(hl)
 709+ 984E C9           	ret
 710+ 984F
 711+ 984F              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 984F
 713+ 984F 24           Reaparece_abajo inc h
 714+ 9850 01 E0 17     	ld bc,$17e0
 715+ 9853 A7           	and a
 716+ 9854 ED 4A        	adc hl,bc
 717+ 9856 22 7A 89     	ld (Posicion_actual),hl
 718+ 9859 21 94 89     	ld hl,Ctrl_0
 719+ 985C CB D6        	set 2,(hl)
 720+ 985E C9           	ret
 721+ 985F
 722+ 985F              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 985F
 724+ 985F 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9862 A7           	and a
 726+ 9863 ED 42        	sbc hl,bc
 727+ 9865 22 7A 89     	ld (Posicion_actual),hl
 728+ 9868 21 94 89     	ld hl,Ctrl_0
 729+ 986B CB DE        	set 3,(hl)
 730+ 986D C9           	ret
 731+ 986E
 732+ 986E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 986E              ;
 734+ 986E              ;	15/07/23
 735+ 986E
 736+ 986E              Reinicio
 737+ 986E
 738+ 986E              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 986E
 740+ 986E AF           	xor a
 741+ 986F 21 AB 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9872 CD 90 98     	call Limpia_contenido_hl
 743+ 9875
 744+ 9875 21 7A 89     	ld hl,Posicion_actual
 745+ 9878 CD 90 98     	call Limpia_contenido_hl
 746+ 987B
 747+ 987B CD 95 8C     	call Inicializa_Puntero_indice_mov
 748+ 987E CD 5C 99     	call Inicia_Puntero_mov
 749+ 9881
 750+ 9881 21 AD 89     	ld hl,Incrementa_puntero
 751+ 9884 06 05        	ld b,5
 752+ 9886 77           1 ld (hl),a
 753+ 9887 23           	inc hl
 754+ 9888 10 FC        	djnz 1B
 755+ 988A
 756+ 988A 21 99 89     	ld hl,Ctrl_2
 757+ 988D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 988F
 759+ 988F C9           	ret
 760+ 9890
 761+ 9890 77           Limpia_contenido_hl	ld (hl),a
 762+ 9891 23           	inc hl
 763+ 9892 77           	ld (hl),a
 764+ 9893 C9           	ret
 765+ 9894
 766+ 9894
# file closed: Direcciones.asm
1838  9894              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9894              ; ----- ----- ----- ----- -----
   2+ 9894              ;
   3+ 9894              ;   28/12/23
   4+ 9894
   5+ 9894              Movimiento
   6+ 9894
   7+ 9894              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9894
   9+ 9894 3A 99 89         ld a,(Ctrl_2)
  10+ 9897 CB 57            bit 2,a
  11+ 9899 20 1B            jr nz, Desplazamiento_iniciado
  12+ 989B
  13+ 989B 2A A9 89         ld hl,(Puntero_mov)
  14+ 989E 7E               ld a,(hl)
  15+ 989F
  16+ 989F              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 989F
  18+ 989F              Inicia_desplazamiento.
  19+ 989F
  20+ 989F              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 989F
  22+ 989F CD 92 99         call Ajusta_velocidad_desplazamiento
  23+ 98A2
  24+ 98A2              ; Iniciamos (Repetimos_mov).
  25+ 98A2
  26+ 98A2 7E               ld a,(hl)
  27+ 98A3 E6 0F            and $0f
  28+ 98A5 32 AF 89         ld (Repetimos_desplazamiento),a
  29+ 98A8 32 B0 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98AB
  31+ 98AB              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98AB
  33+ 98AB 23               inc hl
  34+ 98AC 7E               ld a,(hl)
  35+ 98AD 32 B2 89         ld (Cola_de_desplazamiento),a
  36+ 98B0 2B               dec hl
  37+ 98B1
  38+ 98B1 21 99 89         ld hl,Ctrl_2
  39+ 98B4 CB D6            set 2,(hl)
  40+ 98B6
  41+ 98B6              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98B6              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98B6
  44+ 98B6              Desplazamiento_iniciado
  45+ 98B6
  46+ 98B6 CD 66 99         call Aplica_desplazamiento
  47+ 98B9
  48+ 98B9              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98B9
  50+ 98B9 3A DB 89         ld a,(Ctrl_3)
  51+ 98BC CB 4F            bit 1,a
  52+ 98BE C0               ret nz
  53+ 98BF
  54+ 98BF 21 AF 89     3 ld hl,Repetimos_desplazamiento
  55+ 98C2 35               dec (hl)
  56+ 98C3 C0               ret nz
  57+ 98C4
  58+ 98C4              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98C4              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98C4              ; Analiza (Cola_de_desplazamiento).
  61+ 98C4
  62+ 98C4 3A B2 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98C7 A7               and a
  64+ 98C8 CC BB 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98CB 28 30            jr z,Reinicia_el_movimiento
  66+ 98CD
  67+ 98CD FE FF            cp $ff
  68+ 98CF 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98D1
  70+ 98D1 FE FE            cp $fe
  71+ 98D3 CC 40 99         call z,Fijamos_bucle
  72+ 98D6 28 25            jr z,Reinicia_el_movimiento
  73+ 98D8
  74+ 98D8 FE FD            cp $fd
  75+ 98DA 20 11            jr nz,1F
  76+ 98DC
  77+ 98DC              ; ---
  78+ 98DC              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98DC
  80+ 98DC 3A 99 89         ld a,(Ctrl_2)
  81+ 98DF CB 5F            bit 3,a
  82+ 98E1 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98E3
  84+ 98E3              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98E3
  86+ 98E3 21 99 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98E6 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98E8
  89+ 98E8 CD 51 99         call Inicia_Repetimos_movimiento
  90+ 98EB 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98ED              ; ---
  92+ 98ED
  93+ 98ED FE 01        1 cp 1
  94+ 98EF CA 2A 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98F2
  96+ 98F2 3D               dec a
  97+ 98F3 32 B2 89         ld (Cola_de_desplazamiento),a
  98+ 98F6
  99+ 98F6 3A B0 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98F9 32 AF 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98FC              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98FC C9               ret
 103+ 98FD
 104+ 98FD              Reinicia_el_movimiento
 105+ 98FD
 106+ 98FD 3A 99 89         ld a,(Ctrl_2)
 107+ 9900 CB 5F            bit 3,a
 108+ 9902 28 1B            jr z,2F
 109+ 9904
 110+ 9904              ; (Cola_de_desplazamiento)="254".
 111+ 9904
 112+ 9904 21 B1 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9907 35               dec (hl)
 114+ 9908 20 15            jr nz,2F
 115+ 990A
 116+ 990A              ; Fin de las repeticiones del último movimiento.
 117+ 990A
 118+ 990A 21 99 89         ld hl,Ctrl_2
 119+ 990D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 990F
 121+ 990F 2A A9 89         ld hl,(Puntero_mov)
 122+ 9912 23               inc hl
 123+ 9913 23               inc hl
 124+ 9914 23               inc hl
 125+ 9915 22 A9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9918              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9918 7E               ld a,(hl)
 128+ 9919 32 B2 89         ld (Cola_de_desplazamiento),a
 129+ 991C
 130+ 991C C3 C4 98         jp Cola
 131+ 991F
 132+ 991F CD 5C 99     2 call Inicia_Puntero_mov
 133+ 9922
 134+ 9922 21 99 89         ld hl,Ctrl_2
 135+ 9925 CB 96            res 2,(hl)
 136+ 9927
 137+ 9927 C3 94 98         jp Movimiento
 138+ 992A
 139+ 992A              Siguiente_desplazamiento
 140+ 992A
 141+ 992A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 992A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 992A
 144+ 992A 21 99 89         ld hl,Ctrl_2
 145+ 992D CB 96            res 2,(hl)
 146+ 992F
 147+ 992F 2A A9 89         ld hl,(Puntero_mov)
 148+ 9932 23               inc hl
 149+ 9933 23               inc hl
 150+ 9934 22 A9 89         ld (Puntero_mov),hl
 151+ 9937
 152+ 9937 7E               ld a,(hl)
 153+ 9938 A7               and a
 154+ 9939 CC BB 99         call z,Incrementa_Puntero_indice_mov
 155+ 993C CA FD 98         jp z,Reinicia_el_movimiento
 156+ 993F
 157+ 993F C9               ret
 158+ 9940
 159+ 9940              ; Subrutinas -----------------------------------------
 160+ 9940              ; ---------- --------- --------- ---------- ----------
 161+ 9940              ;
 162+ 9940              ;   24/07/23
 163+ 9940              ;
 164+ 9940              ;   Fijamos_bucle
 165+ 9940              ;
 166+ 9940              ;
 167+ 9940
 168+ 9940              Fijamos_bucle
 169+ 9940
 170+ 9940 3A AD 89         ld a,(Incrementa_puntero)
 171+ 9943 3C               inc a
 172+ 9944 32 AE 89         ld (Incrementa_puntero_backup),a
 173+ 9947
 174+ 9947 CD BB 99         call Incrementa_Puntero_indice_mov
 175+ 994A 2A A7 89         ld hl,(Puntero_indice_mov)
 176+ 994D 22 AB 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9950 C9               ret
 178+ 9951
 179+ 9951              ; ---------- --------- --------- ---------- ----------
 180+ 9951              ;
 181+ 9951              ;   07/7/23
 182+ 9951              ;
 183+ 9951              ;   Inicia_Repetimos_movimiento
 184+ 9951              ;
 185+ 9951              ;
 186+ 9951
 187+ 9951              Inicia_Repetimos_movimiento
 188+ 9951
 189+ 9951              ; Iniciamos (Repetimos_movimiento).
 190+ 9951
 191+ 9951 DD 2A A9 89      ld ix,(Puntero_mov)
 192+ 9955 DD 7E 02         ld a,(ix+2)
 193+ 9958 32 B1 89         ld (Repetimos_movimiento),a
 194+ 995B
 195+ 995B C9               ret
 196+ 995C
 197+ 995C              ; ---------- --------- --------- ---------- ----------
 198+ 995C              ;
 199+ 995C              ;   26/6/23
 200+ 995C              ;
 201+ 995C              ;   Inicia_Puntero_mov
 202+ 995C              ;
 203+ 995C              ;
 204+ 995C
 205+ 995C 2A A7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 995F CD D7 8B         call Extrae_address
 207+ 9962 22 A9 89         ld (Puntero_mov),hl
 208+ 9965 C9               ret
 209+ 9966
 210+ 9966              ; ---------- --------- --------- ---------- ----------
 211+ 9966              ;
 212+ 9966              ;   27/06/23
 213+ 9966              ;
 214+ 9966              ;   Aplica_movimiento.
 215+ 9966
 216+ 9966              Aplica_desplazamiento
 217+ 9966
 218+ 9966              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9966
 220+ 9966 2A A9 89         ld hl, (Puntero_mov)
 221+ 9969
 222+ 9969 7E               ld a,(hl)
 223+ 996A E6 F0            and $f0
 224+ 996C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 996D
 226+ 996D CB 7E            bit 7,(hl)
 227+ 996F 28 03            jr z,1F
 228+ 9971 CD 7B 95         call Mov_up
 229+ 9974 2A A9 89     1 ld hl, (Puntero_mov)
 230+ 9977 CB 76            bit 6,(hl)
 231+ 9979 28 03            jr z,2F
 232+ 997B CD 42 95         call Mov_down
 233+ 997E
 234+ 997E              ; Se ha aplicado reinicio ???
 235+ 997E              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 997E
 237+ 997E              ;    ld a,(Ctrl_3)
 238+ 997E              ;    bit 1,a
 239+ 997E              ;    ret nz
 240+ 997E
 241+ 997E 2A A9 89     2 ld hl, (Puntero_mov)
 242+ 9981 CB 6E            bit 5,(hl)
 243+ 9983 28 03            jr z,3F
 244+ 9985 CD E1 96         call Mov_left
 245+ 9988 2A A9 89     3 ld hl, (Puntero_mov)
 246+ 998B CB 66            bit 4,(hl)
 247+ 998D C8               ret z
 248+ 998E CD BE 95         call Mov_right
 249+ 9991 C9               ret
 250+ 9992
 251+ 9992              ; ---------- --------- --------- ---------- ----------
 252+ 9992              ;
 253+ 9992              ;   26/06/23
 254+ 9992              ;
 255+ 9992              ;   Ajusta_velocidad_desplazamiento.
 256+ 9992
 257+ 9992              Ajusta_velocidad_desplazamiento
 258+ 9992
 259+ 9992              ; 1er byte de la cadena de movimiento.
 260+ 9992              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9992
 262+ 9992 CD B0 99         call Extrae_nibble_alto
 263+ 9995
 264+ 9995 32 9D 89         ld (Vel_up),a
 265+ 9998 79               ld a,c
 266+ 9999 E6 0F            and $0f
 267+ 999B 32 9E 89         ld (Vel_down),a
 268+ 999E
 269+ 999E              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 999E              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 999E
 272+ 999E 23               inc hl
 273+ 999F CD B0 99         call Extrae_nibble_alto
 274+ 99A2
 275+ 99A2 32 9B 89         ld (Vel_left),a
 276+ 99A5 79               ld a,c
 277+ 99A6 E6 0F            and $0f
 278+ 99A8 32 9C 89         ld (Vel_right),a
 279+ 99AB
 280+ 99AB              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99AB
 282+ 99AB 23               inc hl
 283+ 99AC 22 A9 89         ld (Puntero_mov),hl
 284+ 99AF C9               ret
 285+ 99B0
 286+ 99B0 06 04        Extrae_nibble_alto ld b,4
 287+ 99B2 7E               ld a,(hl)
 288+ 99B3 4F               ld c,a
 289+ 99B4 E6 F0            and $f0
 290+ 99B6 CB 3F        1 srl a
 291+ 99B8 10 FC            djnz 1B
 292+ 99BA C9               ret
 293+ 99BB
 294+ 99BB              ; ---------- --------- --------- ---------- ----------
 295+ 99BB              ;
 296+ 99BB              ;   5/7/23
 297+ 99BB              ;
 298+ 99BB              ;   Incrementa_Puntero_indice_mov
 299+ 99BB
 300+ 99BB              Incrementa_Puntero_indice_mov
 301+ 99BB
 302+ 99BB 21 AD 89         ld hl,Incrementa_puntero
 303+ 99BE 34               inc (hl)
 304+ 99BF
 305+ 99BF 2A A7 89         ld hl,(Puntero_indice_mov)
 306+ 99C2 01 02 00         ld bc,2
 307+ 99C5 A7               and a
 308+ 99C6 09               add hl,bc
 309+ 99C7 22 A7 89         ld (Puntero_indice_mov),hl
 310+ 99CA
 311+ 99CA 7E               ld a,(hl)
 312+ 99CB A7               and a
 313+ 99CC
 314+ 99CC              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99CC
 316+ 99CC              ;    jr z,$
 317+ 99CC
 318+ 99CC              ;! Reinicia el Patrón de movimiento.
 319+ 99CC
 320+ 99CC CC D1 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99CF
 322+ 99CF AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99D0
 324+ 99D0 C9               ret
 325+ 99D1
 326+ 99D1              ; ---------- --------- --------- ---------- ----------
 327+ 99D1              ;
 328+ 99D1              ;   15/01/24
 329+ 99D1              ;
 330+ 99D1              ;   Inicializa_Puntero_indice_mov
 331+ 99D1
 332+ 99D1              Inicializa_Puntero_indice_mov_2
 333+ 99D1
 334+ 99D1              ; Existe etiqueta de bucle principal???
 335+ 99D1
 336+ 99D1 2A AB 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99D4 24               inc h
 338+ 99D5 25               dec h
 339+ 99D6 28 05            jr z,2F
 340+ 99D8
 341+ 99D8 22 A7 89         ld (Puntero_indice_mov),hl
 342+ 99DB 18 14            jr 3F
 343+ 99DD
 344+ 99DD              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99DD
 346+ 99DD 3A AD 89     2 ld a,(Incrementa_puntero)
 347+ 99E0 47               ld b,a
 348+ 99E1
 349+ 99E1 2A A7 89         ld hl,(Puntero_indice_mov)
 350+ 99E4 2B           1 dec hl
 351+ 99E5 2B               dec hl
 352+ 99E6 10 FC            djnz 1B
 353+ 99E8 22 A7 89         ld (Puntero_indice_mov),hl
 354+ 99EB
 355+ 99EB AF               xor a
 356+ 99EC 32 AD 89         ld (Incrementa_puntero),a
 357+ 99EF 18 06            jr 4F
 358+ 99F1
 359+ 99F1 3A AE 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99F4 32 AD 89         ld (Incrementa_puntero),a
 361+ 99F7 C9           4 ret
 362+ 99F8
 363+ 99F8              ; ----------------------------------------------------------------------
 364+ 99F8              ;
 365+ 99F8              ;   30/01/24
 366+ 99F8              ;
 367+ 99F8              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99F8
 369+ 99F8 3A 77 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99FB CD C8 8D         call Calcula_salto_en_BC
 371+ 99FE 21 9F 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A01 A7               and a
 373+ 9A02 ED 4A            adc hl,bc
 374+ 9A04 C9               ret
 375+ 9A05
 376+ 9A05              ; ----------------------------------------------------------------------
 377+ 9A05              ;
 378+ 9A05              ;   30/01/24
 379+ 9A05              ;
 380+ 9A05              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A05              ;
 382+ 9A05              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A05
 384+ 9A05 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A06 23               inc hl
 386+ 9A07 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A08 69               ld l,c
 388+ 9A09 60               ld h,b
 389+ 9A0A 22 92 89         ld (Contador_de_mov_masticados),hl
 390+ 9A0D C9               ret
 391+ 9A0E
# file closed: Movimiento.asm
1839  9A0E              ;	include "Disparo.asm"
1840  9A0E
1841  9A0E
1842  9A0E              	SAVESNA "Pruebas.sna", START
1843  9A0E
1844  9A0E
1845  9A0E
1846  9A0E
# file closed: Banco_de_pruebas.asm
