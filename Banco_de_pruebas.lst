# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 18 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD FE 8D     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD DB 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 0B 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E              ;	ld a,(Contador_de_frames_2)
  58  AA1E              ;	cp 1
  59  AA1E              ;	jr nz,1F
  60  AA1E              ;	ld a,(Contador_de_frames)
  61  AA1E              ;	cp $50	; $56 Último frame que no falla.
  62  AA1E              ;	jr z,$
  63  AA1E              ;	jr nc,$
  64  AA1E
  65  AA1E              ;! Debuggg
  66  AA1E
  67  AA1E FD E1        1 pop iy
  68  AA20 DD E1        	pop ix
  69  AA22 F1           	pop af
  70  AA23 C1           	pop bc
  71  AA24 D1           	pop de
  72  AA25 E1           	pop hl
  73  AA26 D9           	exx
  74  AA27 C1           	pop bc
  75  AA28 D1           	pop de
  76  AA29 E1           	pop hl
  77  AA2A 08           	ex af,af'
  78  AA2B F1           	pop af
  79  AA2C 08           	ex af,af'
  80  AA2D D9           	exx
  81  AA2E
  82  AA2E ED 7B 18 89  	ld sp,(Stack_3)
  83  AA32
  84  AA32 FB           	ei
  85  AA33 ED 4D        	reti
  86  AA35
  87  AA35              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA35
  89  AA35              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA35              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA35              ;
   3+ AA35              ;	17/02/23
   4+ AA35              ;
   5+ AA35              ;	Sprites e índices.
   6+ AA35
   7+ AA35              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1E 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 24 89        	defw End_Snapshot_1
 267+ 8500 28 89        	defw End_Snapshot_2
 268+ 8502 2C 89        	defw End_Snapshot_3
 269+ 8504 20 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 26 89        	defw End_Snapshot_disparos_1
 271+ 8508 2A 89        	defw End_Snapshot_disparos_2
 272+ 850A 2E 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 07 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 07 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5D 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 80 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0C 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5F 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 80 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5F 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 12 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0A 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 80 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5F 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5F 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 80 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 06 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 06 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0C 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0C 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0D 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0D 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  92  88C6
  93  88C6              ; ******************************************************************************************************************************************************************************************
  94  88C6              ; Constantes.
  95  88C6              ; ******************************************************************************************************************************************************************************************
  96  88C6              ;
  97  88C6              ; 4/9/23
  98  88C6              ;
  99  88C6              ; Constantes generales.
 100  88C6              ;
 101  88C6
 102  88C6              Sprite_vacio equ $f000
 103  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C6
 108  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C6              ;
 114  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C6
 121  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C6
 124  88C6
 125  88C6
 126  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C6
 128  88C6              ; ******************************************************************************************************************************************************************************************
 129  88C6              ; Variables.
 130  88C6              ; ******************************************************************************************************************************************************************************************
 131  88C6              ;
 132  88C6              ; 28/07/23
 133  88C6              ;
 134  88C6              ; Variables de DRAW. (Motor principal).
 135  88C6              ;
 136  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C6
 138  88C6 00           Filas db 0												; Filas. [DRAW]
 139  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CE
 145  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CE
 147  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88CF 00           Attr db 0												; Atributos de la entidad:
 151  88D0
 152  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D0              ;
 154  88D0              ;	COLORES: 0 ..... NEGRO
 155  88D0              ;    		 1 ..... AZUL
 156  88D0              ; 			 2 ..... ROJO
 157  88D0              ;			 3 ..... MAGENTA
 158  88D0              ; 			 4 ..... VERDE
 159  88D0              ; 			 5 ..... CIAN
 160  88D0              ;			 6 ..... AMARILLO
 161  88D0              ; 			 7 ..... BLANCO
 162  88D0
 163  88D0 00 00        Indice_Sprite_der defw 0
 164  88D2 00 00        Indice_Sprite_izq defw 0
 165  88D4 00 00        Puntero_DESPLZ_der defw 0
 166  88D6 00 00        Puntero_DESPLZ_izq defw 0
 167  88D8
 168  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DB
 171  88DB              ; Variables de objeto. (Características).
 172  88DB
 173  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88DF
 178  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E0 00 00 00...  Variables_de_borrado ds 6
 182  88E6
 183  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E8 00 00        	defw 0
 185  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88EC 00 00 00 00  	db 0,0,0,0
 187  88F0
 188  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F0
 190  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F1              ;
 196  88F1              ; 														DESCRIPCIÖN:
 197  88F1              ;
 198  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F1              ;
 212  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F1
 216  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F1
 218  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F7              ;
 222  88F7              ;
 223  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F8 00           Incrementa_puntero_backup db 0
 227  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FD              ;
 233  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FD              ;
 237  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FD              ;
 242  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FD
 246  88FD
 247  88FD              ; Variables de funcionamiento. [DRAW].
 248  88FD
 249  88FD 00           Columnas db 0
 250  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8901
 254  8901              ; variables de control general.
 255  8901
 256  8901 00           Ctrl_2 db 0
 257  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8902              ;
 265  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8902
 271  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8903
 273  8903              ;! 61 Bytes por entidad.
 274  8903
 275  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8903              ;					         		---------;      ;---------
 277  8903
 278  8903
 279  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8903
 281  8903 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8904
 283  8904              ;														DESCRIPCIÓN:
 284  8904              ;
 285  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8904
 292  8904              ;														BIT 3, Recarga de nueva oleada.
 293  8904              ;														BIT 4, Recarga de nueva oleada.
 294  8904              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  8904              ;														BIT 6, **** Frame completo.
 296  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8904
 298  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8906
 303  8906              ; Ctrl_3 db 0											; Byte de control de propósito general.
 304  8906
 305  8906              ;														DESCRIPCIÓN:
 306  8906              ;
 307  8906              ;														BIT 0,
 308  8906
 309  8906              ; Gestión de ENTIDADES y CAJAS.
 310  8906
 311  8906 00 00        Puntero_store_caja defw 0
 312  8908 00 00        Puntero_restore_caja defw 0
 313  890A 00 00        Indice_restore_caja defw 0
 314  890C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890D 00           Numero_parcial_de_entidades db 0
 316  890E 00           Entidades_en_curso db 0									; ..... ..... .....
 317  890F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8910              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8910              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8910              ;														; _ (Numero_de_malotes)="0".
 321  8910 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8912 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8914              ;														; _ puntero (Indice_entidades).
 324  8914
 325  8914
 326  8914              ;---------------------------------------------------------------------------------------------------------------
 327  8914              ;
 328  8914              ;	2/9/23
 329  8914              ;
 330  8914              ;	Álbumes.
 331  8914
 332  8914 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8916              ;														; _variable para almacenar lo posición del puntero_
 334  8916              ; 														; _de pila, SP.
 335  8916 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  8918              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  8918 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891A 00 00        Stack_snapshot defw 0
 339  891C 00 00        Stack_snapshot_disparos defw 0
 340  891E
 341  891E 00 00        End_Snapshot defw 0
 342  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8920 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8922              ;														; _el snapshot de los registros del siguiente disparo.
 345  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8922 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8924 00 00        End_Snapshot_1 defw 0
 348  8926 00 00        End_Snapshot_disparos_1 defw 0
 349  8928 00 00        End_Snapshot_2 defw 0
 350  892A 00 00        End_Snapshot_disparos_2 defw 0
 351  892C 00 00        End_Snapshot_3 defw 0
 352  892E 00 00        End_Snapshot_disparos_3 defw 0
 353  8930
 354  8930 00 00        Puntero_indice_album_de_fotos defw 0
 355  8932 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8934
 357  8934 00 00        Puntero_indice_End_Snapshot defw 0
 358  8936 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  8938 00 00        Puntero_de_End_Snapshot defw 0
 360  893A 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893C
 362  893C F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 363  893D              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 364  893D 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 365  893E              ;
 366  893E              ;														DESCRIPCIÓN:
 367  893E              ;
 368  893E              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 369  893E              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 370  893E              ;																_ álbum.
 371  893E              ;
 372  893E
 373  893E              ;---------------------------------------------------------------------------------------------------------------
 374  893E
 375  893E              ; Gestión de Disparos.
 376  893E
 377  893E 00           Numero_de_disparotes db 0
 378  893F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 379  8941 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 380  8943 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 381  8944              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 382  8944              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 383  8944 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 384  8946              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 385  8946              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 386  8946              ;														; _produzca colisión.
 387  8946 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 388  8948              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 389  8948 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 390  894B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 391  894B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 392  894E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 393  894E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 394  8950 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 395  8951
 396  8951              ;---------------------------------------------------------------------------------------------------------------
 397  8951
 398  8951              ; Relojes y temporizaciones.
 399  8951
 400  8951 00           Contador_de_frames db 0
 401  8952 00           Contador_de_frames_2 db 0
 402  8953
 403  8953 04           Clock_explosion db 4
 404  8954 1E           Clock_Entidades_en_curso db 30
 405  8955 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 406  8956              ;														; Repite la oleada de entidades.
 407  8956 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 408  8957 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 409  8958 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 410  8959
 411  8959 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 412  895A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 413  895B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 414  895C
 415  895C              ;---------------------------------------------------------------------------------------------------------------
 416  895C
 417  895C              ; Gestión de NIVELES.
 418  895C
 419  895C 00           Nivel db 0												; Nivel actual del juego.
 420  895D 00 00        Puntero_indice_NIVELES defw 0
 421  895F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 422  8961              ; 														; _ que definen el NIVEL.
 423  8961              ; Y todo comienza aquí .....
 424  8961              ;
 425  8961              ; Rutina principal *************************************************************************************************************************************************************************
 426  8961              ;
 427  8961              ;	14/11/22
 428  8961
 429  8961              START
 430  8961
 431  8961 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 432  8964 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 433  8966 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 434  8968 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 435  896A F3           	DI
 436  896B
 437  896B 3E 07        	ld a,%00000111
 438  896D CD 34 99     	call Cls
 439  8970
 440  8970 CD 59 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 441  8973
 442  8973              ; INICIALIZACIÓN.
 443  8973
 444  8973 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 445  8976
 446  8976 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 447  8979
 448  8979 CD 7E 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 449  897C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 450  897C CD 94 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 451  897F              ;													     ; _ malotes antes de guardar ninguna foto.
 452  897F              ; ----------
 453  897F
 454  897F CD 09 8D     	call Restore_entidad
 455  8982
 456  8982 21 0D 89     	ld hl,Numero_parcial_de_entidades
 457  8985 46           	ld b,(hl)
 458  8986 04           	inc b
 459  8987 05           	dec b
 460  8988 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 461  898A
 462  898A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 463  898A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 464  898A              ;	Pintamos el resto de entidades:
 465  898A
 466  898A              ;	INICIA ENTIDADES !!!!!
 467  898A
 468  898A C5           1 push bc  												; Guardo el contador de entidades.
 469  898B CD 4F 8B     	call Inicia_entidad
 470  898E C1           	pop bc
 471  898F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 472  8991
 473  8991              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 474  8991              ; (Esto se dá cuando se inicia una nueva oleada).
 475  8991
 476  8991 3A 03 89     	ld a,(Ctrl_1)
 477  8994 CB 5F        	bit 3,a
 478  8996 20 00        	jr nz,5F											; Loop
 479  8998
 480  8998              ; 	INICIA AMADEUS !!!!!
 481  8998
 482  8998              3
 483  8998
 484  8998              ;	call Restore_Amadeus
 485  8998              ;	call Inicia_Puntero_objeto
 486  8998              ;	call Draw
 487  8998              ;	call Guarda_foto_registros
 488  8998              ;	call Guarda_datos_de_borrado_Amadeus
 489  8998
 490  8998              ;	ld de,Amadeus_db
 491  8998              ;	call Store_Amadeus
 492  8998
 493  8998              ; 	INICIA DISPAROS !!!!!
 494  8998
 495  8998              ;	call Inicia_Puntero_Disparo_Entidades
 496  8998              ;	call Inicia_Puntero_Disparo_Amadeus
 497  8998
 498  8998              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 499  8998
 500  8998 CD 7E 8B     5 call Inicia_punteros_de_cajas
 501  899B CD 09 8D     	call Restore_entidad
 502  899E
 503  899E 3A 03 89     	ld a,(Ctrl_1)
 504  89A1 CB 5F        	bit 3,a
 505  89A3 28 07        	jr z,6F
 506  89A5
 507  89A5              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 508  89A5
 509  89A5 21 03 89     	ld hl,Ctrl_1
 510  89A8 CB 9E        	res 3,(hl)
 511  89AA 18 03        	jr Main
 512  89AC
 513  89AC
 514  89AC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 515  89AC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 516  89AC              ; _ para situarnos en el siguiente album.
 517  89AC
 518  89AC CD C5 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 519  89AF
 520  89AF
 521  89AF              ; ------------------------------------
 522  89AF
 523  89AF              Main
 524  89AF              ;
 525  89AF              ;	3/8/23
 526  89AF
 527  89AF              ; 	ei
 528  89AF
 529  89AF 3A 54 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 530  89B2 47           	ld b,a
 531  89B3 3A 51 89     	ld a,(Contador_de_frames)
 532  89B6 B8           	cp b
 533  89B7 20 18        	jr nz,13F
 534  89B9
 535  89B9 3A 0D 89     	ld a,(Numero_parcial_de_entidades)
 536  89BC 47           	ld b,a
 537  89BD 3A 0E 89     	ld a,(Entidades_en_curso)
 538  89C0 B8           	cp b
 539  89C1 28 0E        	jr z,13F
 540  89C3 30 0C        	jr nc,13F
 541  89C5
 542  89C5 3C           	inc a
 543  89C6 32 0E 89     	ld (Entidades_en_curso),a
 544  89C9
 545  89C9 3A 54 89     	ld a,(Clock_Entidades_en_curso)
 546  89CC
 547  89CC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 548  89CC              ;! _ IMPREDECIBLE !!!!
 549  89CC
 550  89CC C6 64        	add 100
 551  89CE 32 54 89     	ld (Clock_Entidades_en_curso),a
 552  89D1
 553  89D1              ; Habilita disparos.
 554  89D1
 555  89D1 21 56 89     13 ld hl,Disparo_Amadeus
 556  89D4 11 58 89     	ld de,CLOCK_repone_disparo_Amadeus
 557  89D7 CD F8 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 558  89DA
 559  89DA 21 59 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 560  89DD 11 5B 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 561  89E0 CD F8 9C     	call Habilita_disparos
 562  89E3
 563  89E3              ; COLISIONES.
 564  89E3
 565  89E3 CD 09 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 566  89E6
 567  89E6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 568  89E6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 569  89E6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 570  89E6
 571  89E6 AF           	xor a
 572  89E7 32 43 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 573  89EA
 574  89EA CD 7E 8B     	call Inicia_punteros_de_cajas
 575  89ED CD 09 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 576  89F0              ; 														; _ en DRAW.
 577  89F0 3A C6 88     	ld a,(Filas)
 578  89F3 A7           	and a
 579  89F4 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 580  89F6 CD 1B 8D     	call Incrementa_punteros_de_cajas
 581  89F9 18 F2        	jr 12B
 582  89FB
 583  89FB              ; ---------------------------------------------------------------------------------------
 584  89FB
 585  89FB 3A 0D 89     10 ld a,(Numero_parcial_de_entidades)
 586  89FE 47               ld b,a
 587  89FF A7           	and a
 588  8A00 20 14        	jr nz,11F
 589  8A02
 590  8A02 21 03 89     	ld hl,Ctrl_1
 591  8A05 CB 66        	bit 4,(hl)
 592  8A07 C2 94 8A     	jp nz,16F
 593  8A0A
 594  8A0A 21 03 89     	ld hl,Ctrl_1
 595  8A0D CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 596  8A0F
 597  8A0F 3A 51 89     	ld a,(Contador_de_frames)
 598  8A12 3C           	inc a
 599  8A13 32 55 89     	ld (Activa_recarga_cajas),a
 600  8A16
 601  8A16              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 602  8A16
 603  8A16 3A 0E 89     11 ld a,(Entidades_en_curso)
 604  8A19 A7           	and a
 605  8A1A CA 94 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 606  8A1D 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 607  8A1E
 608  8A1E              ; Código que ejecutamos con cada entidad:
 609  8A1E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 610  8A1E
 611  8A1E C5           15 push bc 												; Nº de entidades en curso.
 612  8A1F
 613  8A1F              ; Impacto ???
 614  8A1F
 615  8A1F 3A DF 88     	ld a,(Impacto)
 616  8A22 A7           	and a
 617  8A23 28 32        	jr z,8F
 618  8A25
 619  8A25              ; Hay Impacto en esta entidad.
 620  8A25
 621  8A25 21 53 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 622  8A28 35           	dec (hl)
 623  8A29 20 63        	jr nz,17F
 624  8A2B
 625  8A2B              ;! Velocidad de la animación de la explosión.
 626  8A2B
 627  8A2B 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 628  8A2D              ;														; _,(velocidad de la explosión).
 629  8A2D
 630  8A2D              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 631  8A2D 18 FE        	jr $
 632  8A2F
 633  8A2F CD CA 8D     	call Repone_datos_de_borrado
 634  8A32 CD 22 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 635  8A35
 636  8A35
 637  8A35              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 638  8A35
 639  8A35 3A 01 89     	ld a,(Ctrl_2)
 640  8A38 CB 4F        	bit 1,a
 641  8A3A 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 642  8A3C
 643  8A3C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 644  8A3C
 645  8A3C 3A CE 88     	ld a,(CTRL_DESPLZ)
 646  8A3F A7           	and a
 647  8A40 20 08        	jr nz,18F
 648  8A42
 649  8A42 21 84 84     	ld hl,Indice_Explosion_2x2-2
 650  8A45 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 651  8A48 18 06        	jr 19F
 652  8A4A
 653  8A4A 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 654  8A4D 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 655  8A50
 656  8A50 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 657  8A53 CB CE        	set 1,(hl)
 658  8A55 18 22        	jr 7F
 659  8A57
 660  8A57              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 661  8A57              ; _con las coordenadas de la entidad almacenada en DRAW.
 662  8A57
 663  8A57 3A 03 89     8 ld a,(Ctrl_1)
 664  8A5A CB 57        	bit 2,a
 665  8A5C 28 1B        	jr z,7F
 666  8A5E
 667  8A5E 2A 46 89     	ld hl,(Coordenadas_disparo_certero)
 668  8A61 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 669  8A62              ;														; E contiene la coordenada_X del disparo.
 670  8A62 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 671  8A65              ;														; H FILA, (Coordenada_y de la entidad).
 672  8A65 A7           	and a
 673  8A66 ED 52        	sbc hl,de
 674  8A68
 675  8A68 CD 40 92     	call Determina_resultado_comparativa
 676  8A6B
 677  8A6B 78           	ld a,b
 678  8A6C A7           	and a
 679  8A6D 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 680  8A6F
 681  8A6F              ; ----- ----- -----
 682  8A6F
 683  8A6F 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 684  8A71 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 685  8A74
 686  8A74 21 03 89     	ld hl,Ctrl_1
 687  8A77 CB 96        	res 2,(hl)
 688  8A79
 689  8A79 CD EB 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 690  8A7C
 691  8A7C 3A F0 88     	ld a,(Ctrl_0)
 692  8A7F CB 67        	bit 4,a
 693  8A81 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 694  8A83
 695  8A83              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 696  8A83              ; [[[
 697  8A83 CD A4 8D     	call Detecta_disparo_entidad
 698  8A86              ; ]]]
 699  8A86
 700  8A86 CD 5F 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 701  8A89              ;	call Guarda_datos_de_borrado
 702  8A89
 703  8A89 21 F0 88     	ld hl,Ctrl_0
 704  8A8C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 705  8A8E
 706  8A8E CD CE 8C     17 call Store_Restore_cajas
 707  8A91
 708  8A91 C1           	pop bc
 709  8A92 10 8A        	djnz 15B
 710  8A94
 711  8A94              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 712  8A94              ; Hemos gestionado todas las unidades.
 713  8A94              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 714  8A94
 715  8A94              ;	ld hl,Ctrl_1
 716  8A94              ;	res 2,(hl)
 717  8A94
 718  8A94 CD C5 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 719  8A97              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 720  8A97
 721  8A97              ; ----------------------------------------
 722  8A97
 723  8A97 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 724  8A9A CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 725  8A9C CA AF 89     	jp z,Main
 726  8A9F
 727  8A9F 3A 51 89     	ld a,(Contador_de_frames)
 728  8AA2 47           	ld b,a
 729  8AA3 3A 55 89     	ld a,(Activa_recarga_cajas)
 730  8AA6 B8           	cp b
 731  8AA7 28 08        	jr z,20F
 732  8AA9
 733  8AA9 21 03 89     	ld hl,Ctrl_1
 734  8AAC CB E6        	set 4,(hl)
 735  8AAE C3 AF 89     	jp Main
 736  8AB1
 737  8AB1 21 03 89     20 ld hl,Ctrl_1
 738  8AB4 CB A6        	res 4,(hl)
 739  8AB6
 740  8AB6 3A 51 89     	ld a,(Contador_de_frames)
 741  8AB9
 742  8AB9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 743  8AB9              ;! _ IMPREDECIBLE !!!!
 744  8AB9
 745  8AB9 C6 0A        	add 10
 746  8ABB 32 54 89     	ld (Clock_Entidades_en_curso),a
 747  8ABE
 748  8ABE C3 76 89     	jp 4B
 749  8AC1
 750  8AC1 C9           	ret
 751  8AC2
 752  8AC2              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 753  8AC2
 754  8AC2              Gestiona_Amadeus
 755  8AC2
 756  8AC2 3E 04            ld a,4
 757  8AC4 D3 FE        	out ($fe),a											; Azul.
 758  8AC6
 759  8AC6 CD 30 8D     	call Restore_Amadeus
 760  8AC9
 761  8AC9              ;! Activa/desactiva impacto con Amadeus.
 762  8AC9
 763  8AC9 3A DF 88     	ld a,(Impacto)
 764  8ACC A7           	and a
 765  8ACD 20 FE        	jr nz,$
 766  8ACF
 767  8ACF CD 3C 8B     	call Mov_Amadeus
 768  8AD2
 769  8AD2 3A F0 88     	ld a,(Ctrl_0)
 770  8AD5 CB 67        	bit 4,a
 771  8AD7 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 772  8AD9
 773  8AD9 CD 5F 8B     	call Guarda_foto_entidad_a_pintar
 774  8ADC CD AA 8D     	call Guarda_datos_de_borrado_Amadeus
 775  8ADF
 776  8ADF 21 F0 88     14 ld hl,Ctrl_0
 777  8AE2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 778  8AE4
 779  8AE4 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 780  8AE7 CD 42 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 781  8AEA
 782  8AEA              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 783  8AEA
 784  8AEA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 785  8AEA
 786  8AEA              ;	call Calcula_numero_de_disparotes
 787  8AEA
 788  8AEA C9           	ret
 789  8AEB
 790  8AEB              ; --------------------------------------------------------------------------------------------------------------
 791  8AEB              ;
 792  8AEB              ;	27/05/23
 793  8AEB
 794  8AEB              Mov_obj
 795  8AEB
 796  8AEB 3A 01 89     	ld a,(Ctrl_2)
 797  8AEE CB 4F        	bit 1,a
 798  8AF0 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 799  8AF2
 800  8AF2              ; Explosión:
 801  8AF2
 802  8AF2 3A 02 89     	ld a,(Frames_explosion)
 803  8AF5 A7           	and a
 804  8AF6 20 11        	jr nz,4F
 805  8AF8
 806  8AF8              ; Una alimaña menos!!!!!!!!!1
 807  8AF8
 808  8AF8 CD 4B 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 809  8AFB 21 0D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 810  8AFE 35           	dec (hl)
 811  8AFF 21 0E 89     	ld hl,Entidades_en_curso
 812  8B02 35           	dec (hl)
 813  8B03 21 0C 89     	ld hl,Numero_de_entidades
 814  8B06 35           	dec (hl)
 815  8B07 18 32        	jr 3F
 816  8B09
 817  8B09              ; -----
 818  8B09
 819  8B09              ;	`Movemos´ la explosión.
 820  8B09
 821  8B09 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 822  8B0C 23           	inc hl
 823  8B0D 23           	inc hl
 824  8B0E 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 825  8B11 CD 80 8C     	call Extrae_address
 826  8B14 22 CA 88     	ld (Puntero_objeto),hl
 827  8B17
 828  8B17 21 02 89     	ld hl,Frames_explosion
 829  8B1A 35           	dec (hl)
 830  8B1B
 831  8B1B              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 832  8B1B 18 1E        	jr 3F
 833  8B1D
 834  8B1D AF           2 xor a
 835  8B1E 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 836  8B21
 837  8B21              ; Movemos Entidades malignas.
 838  8B21
 839  8B21 CD A3 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 840  8B24
 841  8B24 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 842  8B27 CB 67        	bit 4,a
 843  8B29 C8           	ret z
 844  8B2A
 845  8B2A              ; Ha habido desplazamiento de la entidad maligna.
 846  8B2A              ; Ha llegado a zona de AMADEUS ???
 847  8B2A
 848  8B2A 3A CD 88     	ld a,(Coordenada_y)
 849  8B2D FE 14        	cp $14
 850  8B2F D4 CE 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 851  8B32              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 852  8B32              ; ---------
 853  8B32
 854  8B32 CD 66 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 855  8B35 CD CA 8D     	call Repone_datos_de_borrado
 856  8B38 CD 22 8C     	call Limpia_Variables_de_borrado
 857  8B3B
 858  8B3B C9           3 ret													; _de la misma.
 859  8B3C
 860  8B3C              ; --------------------------------------------------------------------------------------------------------------
 861  8B3C              ;
 862  8B3C              ;	29/1/23
 863  8B3C
 864  8B3C              Mov_Amadeus
 865  8B3C
 866  8B3C CD 6D 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 867  8B3F
 868  8B3F 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 869  8B42 CB 67        	bit 4,a
 870  8B44 C8           	ret z
 871  8B45
 872  8B45              ; ---------
 873  8B45
 874  8B45 CD 66 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 875  8B48 CD BA 8D     	call Repone_datos_de_borrado_Amadeus
 876  8B4B CD 22 8C     	call Limpia_Variables_de_borrado
 877  8B4E
 878  8B4E C9           	ret
 879  8B4F
 880  8B4F              ; -----------------------------------------------------------------------------------
 881  8B4F
 882  8B4F CD 86 8C     Inicia_entidad	call Inicia_Puntero_objeto
 883  8B52 CD 48 99     	call Recompone_posicion_inicio
 884  8B55 CD 27 93     	call Draw
 885  8B58 CD A0 7F     	call Guarda_foto_registros
 886  8B5B              ;	call Guarda_datos_de_borrado
 887  8B5B CD CE 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 888  8B5E C9           	ret
 889  8B5F
 890  8B5F              ; --------------------------------------------------------------------------------------------------------------
 891  8B5F              ;
 892  8B5F              ;	31/08/23
 893  8B5F              ;
 894  8B5F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 895  8B5F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 896  8B5F
 897  8B5F              Guarda_foto_entidad_a_pintar
 898  8B5F
 899  8B5F              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 900  8B5F
 901  8B5F CD 27 93     	call Draw
 902  8B62 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 903  8B65 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 904  8B66
 905  8B66              ; --------------------------------------------------------------------------------------------------------------
 906  8B66              ;
 907  8B66              ;	19/9/23
 908  8B66
 909  8B66 21 C6 88     Prepara_var_pintado ld hl,Filas
 910  8B69 11 E6 88     	ld de,Variables_de_pintado
 911  8B6C 01 08 00     	ld bc,8
 912  8B6F ED B0        	ldir
 913  8B71 C9           	ret
 914  8B72
 915  8B72              ; --------------------------------------------------------------------------------------------------------------
 916  8B72
 917  8B72 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 918  8B75 11 C6 88     	ld de,Filas
 919  8B78 01 08 00     	ld bc,8
 920  8B7B ED B0        	ldir
 921  8B7D C9           	ret
 922  8B7E
 923  8B7E              ; *************************************************************************************************************************************************************
 924  8B7E              ;
 925  8B7E              ; 8/1/23
 926  8B7E              ;
 927  8B7E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 928  8B7E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 929  8B7E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 930  8B7E
 931  8B7E              ; Destruye HL y DE !!!!!
 932  8B7E
 933  8B7E              Inicia_punteros_de_cajas
 934  8B7E
 935  8B7E 21 8C 85     	ld hl,Indice_de_cajas
 936  8B81 CD 80 8C         call Extrae_address
 937  8B84 22 06 89         ld (Puntero_store_caja),hl
 938  8B87 21 8E 85     	ld hl,Indice_de_cajas+2
 939  8B8A 22 0A 89     	ld (Indice_restore_caja),hl
 940  8B8D CD 80 8C     	call Extrae_address
 941  8B90 22 08 89     	ld (Puntero_restore_caja),hl
 942  8B93 C9               ret
 943  8B94
 944  8B94              ; ---------------------------------------------------------------
 945  8B94              ;
 946  8B94              ;	9/8/23
 947  8B94              ;
 948  8B94              ;	Inicialización y gestión de álbumes de fotos y cajas.
 949  8B94
 950  8B94              Inicia_punteros_de_albumes_y_malotes
 951  8B94
 952  8B94 21 EC 84     	ld hl,Indice_album_de_fotos
 953  8B97 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 954  8B9A CD 80 8C     	call Extrae_address
 955  8B9D 22 1A 89     	ld (Stack_snapshot),hl
 956  8BA0
 957  8BA0 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 958  8BA3 22 32 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 959  8BA6 CD 80 8C     	call Extrae_address
 960  8BA9 22 1C 89     	ld (Stack_snapshot_disparos),hl
 961  8BAC
 962  8BAC 21 FC 84     	ld hl,Indice_End_Snapshot
 963  8BAF 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 964  8BB2 CD 80 8C     	call Extrae_address
 965  8BB5 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 966  8BB8
 967  8BB8 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 968  8BBB 22 36 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 969  8BBE CD 80 8C     	call Extrae_address
 970  8BC1 22 3A 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 971  8BC4
 972  8BC4 C9           	ret
 973  8BC5
 974  8BC5              ;	23/10/23
 975  8BC5
 976  8BC5              Avanza_puntero_de_album_de_fotos_de_entidades
 977  8BC5
 978  8BC5              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 979  8BC5
 980  8BC5              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 981  8BC5              ; Estamos en el último álbum del índice???.
 982  8BC5              ;
 983  8BC5
 984  8BC5 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 985  8BC8 01 F2 84     	ld bc,Indice_album_de_fotos+6
 986  8BCB A7           	and a
 987  8BCC ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 988  8BCE 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 989  8BD0
 990  8BD0              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
 991  8BD0              ; Actualizamos (Semaforo).
 992  8BD0
 993  8BD0 21 3C 89     	ld hl,Semaforo
 994  8BD3 CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
 995  8BD5
 996  8BD5              ; Inicia con el buffer de video completo !!!
 997  8BD5
 998  8BD5 FB           	ei
 999  8BD6 76           	halt
1000  8BD7 C9           	ret
1001  8BD8
1002  8BD8 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
1003  8BDB 23           	inc hl
1004  8BDC 23           	inc hl
1005  8BDD 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
1006  8BE0 CD 80 8C     	call Extrae_address
1007  8BE3 22 1A 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1008  8BE6
1009  8BE6 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
1010  8BE9 23           	inc hl
1011  8BEA 23           	inc hl
1012  8BEB 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
1013  8BEE CD 80 8C     	call Extrae_address
1014  8BF1 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1015  8BF4
1016  8BF4 21 3C 89     	ld hl,Semaforo
1017  8BF7 CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1018  8BF9
1019  8BF9 C9           	ret
1020  8BFA
1021  8BFA              ; *************************************************************************************************************************************************************
1022  8BFA              ;
1023  8BFA              ; 8/1/23
1024  8BFA              ;
1025  8BFA              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1026  8BFA
1027  8BFA 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1028  8BFD 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1029  8C00 C9           	ret
1030  8C01 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1031  8C04 22 41 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1032  8C07 C9           	ret
1033  8C08
1034  8C08              ; -------------------------------------------------------------------------------------------------------------
1035  8C08              ;
1036  8C08              ; 21/9/23
1037  8C08              ;
1038  8C08
1039  8C08              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1040  8C08
1041  8C08              Limpia_album_Amadeus
1042  8C08
1043  8C08 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1044  8C0B 7E           	ld a,(hl)
1045  8C0C A7           	and a
1046  8C0D C8           	ret z
1047  8C0E
1048  8C0E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1049  8C11 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1050  8C14 01 0B 00     	ld bc,11
1051  8C17 AF           	xor a
1052  8C18 77           	ld (hl),a
1053  8C19 ED B0        	ldir
1054  8C1B
1055  8C1B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1056  8C1E 22 22 89     	ld (End_Snapshot_Amadeus),hl
1057  8C21
1058  8C21 C9           	ret
1059  8C22
1060  8C22 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1061  8C25 11 E1 88     	ld de,Variables_de_borrado+1
1062  8C28 01 05 00     	ld bc,5
1063  8C2B AF           	xor a
1064  8C2C 77           	ld (hl),a
1065  8C2D ED B0        	ldir
1066  8C2F C9           	ret
1067  8C30
1068  8C30              ; -------------------------------------------------------------------------------------------------------------
1069  8C30              ;
1070  8C30              ; 8/9/23
1071  8C30              ;
1072  8C30
1073  8C30              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1074  8C30              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1075  8C30
1076  8C30              Calcula_numero_de_malotes
1077  8C30
1078  8C30 21 00 70     	ld hl,Album_de_fotos
1079  8C33 EB           	ex de,hl
1080  8C34 2A 1E 89     	ld hl,(End_Snapshot)
1081  8C37
1082  8C37 7C           	ld a,h
1083  8C38 A7           	and a
1084  8C39 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1085  8C3B
1086  8C3B 06 00        4 ld b,0
1087  8C3D 7D           	ld a,l
1088  8C3E 93           	sub e
1089  8C3F 28 07        	jr z,1F
1090  8C41
1091  8C41              ; Nº de malotes no es "0".
1092  8C41
1093  8C41 D6 06        2 sub 6
1094  8C43 04           	inc b
1095  8C44 A7           	and a
1096  8C45 20 FA        	jr nz,2B
1097  8C47 78           	ld a,b
1098  8C48
1099  8C48 32 0F 89     1 ld (Numero_de_malotes),a
1100  8C4B C9           	ret
1101  8C4C
1102  8C4C              ; -------------------------------------------------------------------------------------------------------------
1103  8C4C              ;
1104  8C4C              ; 8/9/23
1105  8C4C              ;
1106  8C4C
1107  8C4C              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1108  8C4C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1109  8C4C
1110  8C4C              Calcula_malotes_Amadeus
1111  8C4C
1112  8C4C 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1113  8C4F EB           	ex de,hl
1114  8C50 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1115  8C53
1116  8C53 7C           	ld a,h
1117  8C54 A7           	and a
1118  8C55 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1119  8C57
1120  8C57 06 00        	ld b,0
1121  8C59 7D           	ld a,l
1122  8C5A 93           	sub e
1123  8C5B 28 07        	jr z,1F
1124  8C5D
1125  8C5D              ; Nº de malotes no es "0".
1126  8C5D
1127  8C5D D6 06        2 sub 6
1128  8C5F 04           	inc b
1129  8C60 A7           	and a
1130  8C61 20 FA        	jr nz,2B
1131  8C63 78           	ld a,b
1132  8C64
1133  8C64 32 0F 89     1 ld (Numero_de_malotes),a
1134  8C67 C9           	ret
1135  8C68
1136  8C68              ; -------------------------------------------------------------------------------------------------------------
1137  8C68              ;
1138  8C68              ; 28/2/23
1139  8C68              ;
1140  8C68
1141  8C68              Calcula_numero_de_disparotes
1142  8C68
1143  8C68 21 50 71     	ld hl,Album_de_fotos_disparos
1144  8C6B EB           	ex de,hl
1145  8C6C 2A 3A 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1146  8C6F
1147  8C6F 06 00        	ld b,0
1148  8C71 7D           	ld a,l
1149  8C72 93           	sub e
1150  8C73 28 07        	jr z,1F
1151  8C75
1152  8C75              ; Nº de malotes no es "0".
1153  8C75
1154  8C75 D6 06        2 sub 6
1155  8C77 04           	inc b
1156  8C78 A7           	and a
1157  8C79 20 FA        	jr nz,2B
1158  8C7B 78           	ld a,b
1159  8C7C
1160  8C7C 32 3E 89     1 ld (Numero_de_disparotes),a
1161  8C7F C9           	ret
1162  8C80
1163  8C80              ; *************************************************************************************************************************************************************
1164  8C80              ;
1165  8C80              ; 20/10/22
1166  8C80              ;
1167  8C80              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1168  8C80              ;
1169  8C80              ; Destruye el puntero y DE !!!!!
1170  8C80
1171  8C80 5E           Extrae_address ld e,(hl)
1172  8C81 23           	inc hl
1173  8C82 56           	ld d,(hl)
1174  8C83 2B           	dec hl
1175  8C84 EB           	ex de,hl
1176  8C85 C9           	ret
1177  8C86
1178  8C86              ; *************************************************************************************************************************************************************
1179  8C86              ;
1180  8C86              ;	7/2/23
1181  8C86              ;
1182  8C86              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1183  8C86              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1184  8C86              ;
1185  8C86              ;   Destruye HL y BC !!!!!,
1186  8C86              ;
1187  8C86              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1188  8C86              ;					"0" ..... Izquierda.
1189  8C86
1190  8C86              Inicia_Puntero_objeto
1191  8C86
1192  8C86 3A DA 88     	ld a,(Cuad_objeto)
1193  8C89 E6 01        	and 1
1194  8C8B F5           	push af
1195  8C8C CC AA 8C     	call z,Inicia_puntero_objeto_izq
1196  8C8F F1           	pop af
1197  8C90 28 2B        	jr z,1F
1198  8C92 CD 97 8C     	call Inicia_puntero_objeto_der
1199  8C95 18 26        	jr 1F
1200  8C97
1201  8C97              ; Arrancamos desde la parte izquierda de la pantalla.
1202  8C97              ; Iniciamos (Indice_Sprite_der).
1203  8C97
1204  8C97 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1205  8C9A 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1206  8C9D CD 80 8C     	call Extrae_address
1207  8CA0 22 CA 88     	ld (Puntero_objeto),hl
1208  8CA3
1209  8CA3 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1210  8CA6 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1211  8CA9 C9           	ret
1212  8CAA
1213  8CAA              ; Arrancamos desde la parte derecha de la pantalla.
1214  8CAA              ; Iniciamos (Indice_Sprite_izq).
1215  8CAA
1216  8CAA 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1217  8CAD 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1218  8CB0 CD 80 8C     	call Extrae_address
1219  8CB3 22 CA 88     	ld (Puntero_objeto),hl
1220  8CB6
1221  8CB6 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1222  8CB9 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1223  8CBC C9           	ret
1224  8CBD
1225  8CBD              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1226  8CBD
1227  8CBD 21 40 83     1 ld hl,Amadeus
1228  8CC0 ED 4B CA 88  	ld bc,(Puntero_objeto)
1229  8CC4 B7 ED 42     	sub hl,bc
1230  8CC7 C0           	ret nz
1231  8CC8 21 F0 88     	ld hl,Ctrl_0
1232  8CCB CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1233  8CCD C9           	ret 												; _de nuestra nave en los extremos.
1234  8CCE
1235  8CCE              ; *************************************************************************************************************************************************************
1236  8CCE              ;
1237  8CCE              ;	14/5/23
1238  8CCE              ;
1239  8CCE              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1240  8CCE              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1241  8CCE
1242  8CCE              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1243  8CCE              ;	_de la 2ª y 3ª entidad respectivamente.
1244  8CCE
1245  8CCE              Store_Restore_cajas
1246  8CCE
1247  8CCE E5           	push hl
1248  8CCF D5           	push de
1249  8CD0 C5            	push bc
1250  8CD1
1251  8CD1              ;	STORE !!!!!
1252  8CD1              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1253  8CD1
1254  8CD1 21 C6 88     	ld hl,Filas
1255  8CD4 ED 5B 06 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1256  8CD8 01 3D 00     	ld bc,61
1257  8CDB ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1258  8CDD
1259  8CDD              ; 	Entidad_sospechosa. 20/4/23
1260  8CDD
1261  8CDD 3A DF 88     	ld a,(Impacto)
1262  8CE0 A7           	and a
1263  8CE1 28 0C        	jr z,1F
1264  8CE3
1265  8CE3 2A 06 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1266  8CE6 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1267  8CE9 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1268  8CEA ED 4A        	adc hl,bc 											; _ "0" más adelante.
1269  8CEC 22 44 89     	ld (Entidad_sospechosa_de_colision),hl
1270  8CEF
1271  8CEF              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1272  8CEF
1273  8CEF 2A 08 89     1 ld hl,(Puntero_restore_caja)
1274  8CF2 7E           	ld a,(hl)
1275  8CF3 A7           	and a
1276  8CF4 F5           	push af
1277  8CF5 28 08        	jr z,2F
1278  8CF7
1279  8CF7 11 C6 88     	ld de,Filas
1280  8CFA 01 3D 00     	ld bc,61
1281  8CFD ED B0        	ldir
1282  8CFF
1283  8CFF CD 1B 8D     2 call Incrementa_punteros_de_cajas
1284  8D02
1285  8D02 F1           	pop af
1286  8D03 28 EA        	jr z,1B
1287  8D05
1288  8D05 C1           	pop bc
1289  8D06 D1           	pop de
1290  8D07 E1           	pop hl
1291  8D08
1292  8D08 C9           	ret
1293  8D09
1294  8D09              ; **************************************************************************************************
1295  8D09              ;
1296  8D09              ;	12/05/23
1297  8D09              ;
1298  8D09              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1299  8D09
1300  8D09 E5           Restore_entidad push hl
1301  8D0A D5           	push de
1302  8D0B C5            	push bc
1303  8D0C
1304  8D0C 2A 06 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1305  8D0F 11 C6 88     	ld de,Filas
1306  8D12 01 3D 00     	ld bc,61
1307  8D15 ED B0        	ldir
1308  8D17
1309  8D17 C1           	pop bc
1310  8D18 D1           	pop de
1311  8D19 E1           	pop hl
1312  8D1A C9           	ret
1313  8D1B
1314  8D1B              ; **************************************************************************************************
1315  8D1B              ;
1316  8D1B              ;	08/05/23
1317  8D1B              ;
1318  8D1B              ;	Incrementamos los dos punteros de entidades. (+1).
1319  8D1B
1320  8D1B              Incrementa_punteros_de_cajas
1321  8D1B
1322  8D1B 2A 08 89     	ld hl,(Puntero_restore_caja)
1323  8D1E 22 06 89     	ld (Puntero_store_caja),hl
1324  8D21 2A 0A 89     	ld hl,(Indice_restore_caja)
1325  8D24 23           	inc hl
1326  8D25 23           	inc hl
1327  8D26 22 0A 89     	ld (Indice_restore_caja),hl
1328  8D29 CD 80 8C         call Extrae_address
1329  8D2C 22 08 89         ld (Puntero_restore_caja),hl
1330  8D2F C9               ret
1331  8D30
1332  8D30              ; **************************************************************************************************
1333  8D30              ;
1334  8D30              ;	25/01/23
1335  8D30              ;
1336  8D30              ;	Restore_Amadeus
1337  8D30              ;
1338  8D30              ;	Cargamos en DRAW los parámetros de Amadeus.
1339  8D30              ;
1340  8D30
1341  8D30 E5           Restore_Amadeus	push hl
1342  8D31 D5           	push de
1343  8D32 C5            	push bc
1344  8D33 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1345  8D36 11 C6 88     	ld de,Filas
1346  8D39 01 3D 00     	ld bc,61
1347  8D3C ED B0        	ldir
1348  8D3E C1           	pop bc
1349  8D3F D1           	pop de
1350  8D40 E1           	pop hl
1351  8D41 C9           	ret
1352  8D42
1353  8D42              ; *************************************************************************************************************************************************************
1354  8D42              ;
1355  8D42              ;	29/04/23
1356  8D42              ;
1357  8D42              ;	Store_Amadeus
1358  8D42              ;
1359  8D42              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1360  8D42              ;
1361  8D42              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1362  8D42              ;
1363  8D42              ;	DESTRUYE: HL y BC y DE.
1364  8D42
1365  8D42 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1366  8D45 01 3D 00     	ld bc,61
1367  8D48 ED B0        	ldir
1368  8D4A C9           	ret
1369  8D4B
1370  8D4B              ; -----------------------------------------------------------
1371  8D4B              ;
1372  8D4B              ;	27/04/23
1373  8D4B              ;
1374  8D4B              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1375  8D4B              ;
1376  8D4B              ;	Destruye: HL,BC,DE,A
1377  8D4B
1378  8D4B 21 C6 88     Borra_datos_entidad ld hl,Filas
1379  8D4E 01 3C 00     	ld bc,60
1380  8D51 AF           	xor a
1381  8D52 77           	ld (hl),a
1382  8D53 11 C7 88     	ld de,Filas+1
1383  8D56 ED B0        	ldir
1384  8D58 C9           	ret
1385  8D59
1386  8D59              ; -----------------------------------------------------------
1387  8D59
1388  8D59              ; Teclado.
1389  8D59
1390  8D59 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1391  8D5B DB FE        	in a,($fe)
1392  8D5D E6 01        	and $01
1393  8D5F 28 02        	jr z,1f
1394  8D61 18 F6        	jr Pulsa_ENTER
1395  8D63 C9           1 ret
1396  8D64
1397  8D64              ; **************************************************************************************************
1398  8D64              ;
1399  8D64              ; Temporización.
1400  8D64
1401  8D64              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1402  8D64              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1403  8D64              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1404  8D64              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1405  8D64
1406  8D64              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1407  8D64              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1408  8D64              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1409  8D64
1410  8D64              ; A partir de $4f61 no hace falta DELAY.
1411  8D64
1412  8D64              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1413  8D64
1414  8D64 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1415  8D67 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1416  8D68 78           	LD A,B
1417  8D69 A7           	AND A
1418  8D6A 20 FB        	JR NZ,wait
1419  8D6C C9           	RET
1420  8D6D
1421  8D6D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1422  8D6D              ;
1423  8D6D              ;	5/3/23
1424  8D6D              ;
1425  8D6D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1426  8D6D
1427  8D6D              Movimiento_Amadeus
1428  8D6D
1429  8D6D              ; Disparo.
1430  8D6D
1431  8D6D 3A 56 89     	ld a,(Disparo_Amadeus)
1432  8D70 A7           	and a
1433  8D71 20 02        	jr nz,1F
1434  8D73 18 15        	jr 2F
1435  8D75
1436  8D75 3E F7        1 ld a,$f7													; "5" para disparar.
1437  8D77 DB FE        	in a,($fe)
1438  8D79 E6 10        	and $10
1439  8D7B
1440  8D7B F5           	push af
1441  8D7C CC 31 8E     	call z,Genera_disparo
1442  8D7F F1           	pop af
1443  8D80 20 08        	jr nz,2F
1444  8D82
1445  8D82 3A 56 89     	ld a,(Disparo_Amadeus)
1446  8D85 EE 01        	xor 1
1447  8D87 32 56 89     	ld (Disparo_Amadeus),a
1448  8D8A
1449  8D8A 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1450  8D8C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1451  8D8E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1452  8D90 CC 02 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1453  8D93
1454  8D93 3E F7        	ld a,$f7
1455  8D95 DB FE        	in a,($fe)
1456  8D97 E6 01        	and $01
1457  8D99 C8           	ret z
1458  8D9A
1459  8D9A 3E F7        	ld a,$f7
1460  8D9C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1461  8D9E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1462  8DA0 CC E4 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1463  8DA3 C9           	ret
1464  8DA4
1465  8DA4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1466  8DA4              ;
1467  8DA4              ;	Rutina provisional para que los malotes cagen balas.
1468  8DA4
1469  8DA4              Detecta_disparo_entidad
1470  8DA4
1471  8DA4 3A 59 89     	ld a,(Disparo_entidad)
1472  8DA7 A7           	and a
1473  8DA8 C8           	ret z
1474  8DA9
1475  8DA9              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1476  8DA9
1477  8DA9              ;	ld a,$7f				; Detecta SPACE.
1478  8DA9              ;	in a,($fe)
1479  8DA9              ;	and 1
1480  8DA9              ;	ret nz
1481  8DA9
1482  8DA9              ;	call Genera_disparo
1483  8DA9 C9           	ret
1484  8DAA
1485  8DAA              ; ----------------------------------------------------------------------
1486  8DAA              ;
1487  8DAA              ;	8/9/23
1488  8DAA
1489  8DAA 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1490  8DAD 2B            	dec hl
1491  8DAE 7E           	ld a,(hl)
1492  8DAF A7           	and a
1493  8DB0 C8           	ret z										; Salimos si es álbum está vacío.
1494  8DB1
1495  8DB1 11 E5 88     	ld de,Variables_de_borrado+5
1496  8DB4 01 06 00     	ld bc,6
1497  8DB7 ED B8        	lddr
1498  8DB9 C9           	ret
1499  8DBA
1500  8DBA              ; ----------------------------------------------------------------------
1501  8DBA              ;
1502  8DBA              ;	9/9/23
1503  8DBA
1504  8DBA              Repone_datos_de_borrado_Amadeus
1505  8DBA
1506  8DBA 21 E0 88     	ld hl,Variables_de_borrado
1507  8DBD 11 A0 72     	ld de,Album_de_fotos_Amadeus
1508  8DC0 01 06 00     	ld bc,6
1509  8DC3 ED B0        	ldir
1510  8DC5
1511  8DC5 EB           	ex de,hl
1512  8DC6 22 22 89     	ld (End_Snapshot_Amadeus),hl
1513  8DC9
1514  8DC9 C9           	ret
1515  8DCA
1516  8DCA              ; ----------------------------------------------------------------------
1517  8DCA              ;
1518  8DCA              ;	18/9/23
1519  8DCA              ;
1520  8DCA
1521  8DCA              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1522  8DCA              ;	_ Album_de_fotos correspondiente.
1523  8DCA
1524  8DCA              ;	DI.
1525  8DCA
1526  8DCA              Repone_datos_de_borrado
1527  8DCA
1528  8DCA ED 5B 1A 89  	ld de,(Stack_snapshot)
1529  8DCE 21 E0 88     	ld hl,Variables_de_borrado
1530  8DD1 01 06 00     	ld bc,6
1531  8DD4 ED B0        	ldir
1532  8DD6
1533  8DD6 EB           	ex de,hl
1534  8DD7 22 1A 89     	ld (Stack_snapshot),hl
1535  8DDA
1536  8DDA C9           	ret
1537  8DDB
1538  8DDB              ; ----------------------------------------------------------------------
1539  8DDB              ;
1540  8DDB              ;	11/8/23
1541  8DDB
1542  8DDB              Gestiona_entidades
1543  8DDB
1544  8DDB              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1545  8DDB
1546  8DDB 3A 3C 89     	ld a,(Semaforo)
1547  8DDE CB 47        	bit 0,a
1548  8DE0 28 FE        	jr z,$												;! STOP el buffer está vacío.
1549  8DE2 C8           	ret z
1550  8DE3
1551  8DE3              ;	call Extrae_foto_disparos
1552  8DE3              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1553  8DE3
1554  8DE3 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1555  8DE6
1556  8DE6              ;	Album incompleto ?????
1557  8DE6              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1558  8DE6
1559  8DE6
1560  8DE6 3A 3D 89     	ld a,(Ctrl_Semaforo)
1561  8DE9 CB 47        	bit 0,a
1562  8DEB C0           	ret nz
1563  8DEC
1564  8DEC              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1565  8DEC              ; Nos situamos al comienzo del último álbum.
1566  8DEC
1567  8DEC CD 22 73     	call Modifica_Stack_snapshot
1568  8DEF
1569  8DEF C9           	ret
1570  8DF0
1571  8DF0
1572  8DF0
1573  8DF0              ; -----------------------------------------------------------------------------------
1574  8DF0
1575  8DF0              Pinta_Amadeus
1576  8DF0
1577  8DF0 3E 06        	ld a,6
1578  8DF2 D3 FE            out ($fe),a										; Amarillo
1579  8DF4
1580  8DF4 CD 4C 8C        	call Calcula_malotes_Amadeus
1581  8DF7 CD B7 96     	call Extrae_foto_Amadeus
1582  8DFA CD 08 8C     	call Limpia_album_Amadeus
1583  8DFD
1584  8DFD C9           	ret
1585  8DFE
1586  8DFE              Pinta_entidades
1587  8DFE
1588  8DFE 3A 3C 89     	ld a,(Semaforo)
1589  8E01 CB 47        	bit 0,a
1590  8E03 C8           	ret z
1591  8E04
1592  8E04              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1593  8E04
1594  8E04 CD 30 8C     	call Calcula_numero_de_malotes
1595  8E07 CD 35 96     	call Extrae_foto_entidades
1596  8E0A
1597  8E0A C9           	ret
1598  8E0B
1599  8E0B              ; -----------------------------------------------------------------------------------
1600  8E0B
1601  8E0B              Actualiza_relojes
1602  8E0B
1603  8E0B 21 51 89     	ld hl,Contador_de_frames
1604  8E0E 7E           	ld a,(hl)
1605  8E0F FE FF        	cp $ff
1606  8E11 20 04        	jr nz,1F
1607  8E13 34           	inc (hl)
1608  8E14 21 52 89     	ld hl,Contador_de_frames_2
1609  8E17 34           1 inc (hl)											; 0 - 255
1610  8E18 C9           	ret
1611  8E19
1612  8E19              ; ---------------------------------------------------------------
1613  8E19              ;
1614  8E19              ;	27/9/23
1615  8E19
1616  8E19              Guarda_parametros_DRAW
1617  8E19
1618  8E19 21 C6 88     	ld hl,Filas
1619  8E1C 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1620  8E1F 01 3D 00     	ld bc,61
1621  8E22 ED B0        	ldir
1622  8E24 C9           	ret
1623  8E25
1624  8E25              Recupera_parametros_DRAW
1625  8E25
1626  8E25 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1627  8E28 11 C6 88     	ld de,Filas
1628  8E2B 01 3D 00     	ld bc,61
1629  8E2E ED B0        	ldir
1630  8E30 C9           	ret
1631  8E31
1632  8E31              ; ---------------------------------------------------------------
1633  8E31
1634  8E31              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E31              ; ******************************************************************************************************************************************************************************************
   2+ 8E31              ;
   3+ 8E31              ;   21/07/23
   4+ 8E31              ;
   5+ 8E31              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E31              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E31              ;
   8+ 8E31              ;
   9+ 8E31              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E31              ;
  11+ 8E31              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E31              ;               _ hacen las entidades hacia abajo.
  13+ 8E31              ;
  14+ 8E31              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E31              ;
  16+ 8E31              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E31              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E31              ;
  19+ 8E31              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E31              ;           _ la bala.
  21+ 8E31              ;
  22+ 8E31              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E31              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E31              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E31              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E31              ;           _ en el momento de generarse la bala)).
  27+ 8E31
  28+ 8E31              Genera_disparo
  29+ 8E31
  30+ 8E31              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E31              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E31              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E31              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E31              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E31              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E31              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E31
  38+ 8E31              ; Exclusiones:
  39+ 8E31
  40+ 8E31 3A DE 88         ld a,(Vel_down)
  41+ 8E34 47               ld b,a
  42+ 8E35 3A 50 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E38 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E39 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E3A 3A FD 88         ld a,(Columnas)
  46+ 8E3D 47               ld b,a
  47+ 8E3E 3A C7 88         ld a,(Columns)
  48+ 8E41 B8               cp b
  49+ 8E42 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E43
  51+ 8E43              ; ----- ----- -----
  52+ 8E43
  53+ 8E43 3A F0 88         ld a,(Ctrl_0)
  54+ 8E46 CB 77            bit 6,a
  55+ 8E48 20 06            jr nz,14F
  56+ 8E4A
  57+ 8E4A 3A CD 88         ld a,(Coordenada_y)
  58+ 8E4D FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E4F D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E50
  61+ 8E50 21 00 80     14 ld hl,Indice_disparo
  62+ 8E53 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8E56 4F               ld c,a
  64+ 8E57 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E59              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E59              ;                                            ""        ""       "f9", B="1"
  67+ 8E59              ;                                            ""        ""       "fb", B="2"
  68+ 8E59              ;                                            ""        ""       "fb", B="3"
  69+ 8E59 A7               and a
  70+ 8E5A 28 10            jr z,1F
  71+ 8E5C E6 01            and 1
  72+ 8E5E C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E5F
  74+ 8E5F 79               ld a,c
  75+ 8E60 16 F9            ld d,$f9
  76+ 8E62 23           2 inc hl
  77+ 8E63 23               inc hl
  78+ 8E64 04               inc b
  79+ 8E65 BA               cp d
  80+ 8E66 28 04            jr z,1F
  81+ 8E68 14               inc d
  82+ 8E69 14               inc d
  83+ 8E6A 18 F6            jr 2B
  84+ 8E6C
  85+ 8E6C CD 80 8C     1 call Extrae_address
  86+ 8E6F E5               push hl
  87+ 8E70 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E72 DD 21 FD 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E76
  90+ 8E76              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E76              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E76
  93+ 8E76 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E79 CB 77            bit 6,a
  95+ 8E7B 20 04            jr nz,19F
  96+ 8E7D
  97+ 8E7D AF               xor a
  98+ 8E7E 32 59 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E81
 100+ 8E81 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8E84 FE 02            cp 2
 102+ 8E86 38 66            jr c,3F
 103+ 8E88 28 64            jr z,3F
 104+ 8E8A
 105+ 8E8A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E8A
 107+ 8E8A E6 01            and 1
 108+ 8E8C 28 30            jr z,4F
 109+ 8E8E
 110+ 8E8E              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E8E              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E8E              ;
 113+ 8E8E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E8E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E8E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E8E
 117+ 8E8E 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8E91
 119+ 8E91              ;   Amadeus o entidad ???.
 120+ 8E91
 121+ 8E91 3A F0 88         ld a,(Ctrl_0)
 122+ 8E94 CB 77            bit 6,a
 123+ 8E96 28 0A            jr z,8F
 124+ 8E98
 125+ 8E98              ; 	Dispara Amadeus.
 126+ 8E98
 127+ 8E98 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E9A CD 26 96         call PreviousScan
 129+ 8E9D CD 26 96         call PreviousScan
 130+ 8EA0
 131+ 8EA0              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EA0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EA0              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EA0              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EA0
 136+ 8EA0 18 11            jr 10F
 137+ 8EA2
 138+ 8EA2              ; 	Dispara Entidad.
 139+ 8EA2
 140+ 8EA2 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EA5              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EA5
 143+ 8EA5              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EA5              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EA5
 146+ 8EA5 C5               push bc
 147+ 8EA6 06 10            ld b,16
 148+ 8EA8 CD 17 96     9 call NextScan
 149+ 8EAB 10 FB            djnz 9B
 150+ 8EAD C1               pop bc
 151+ 8EAE CD 18 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EB1 18 06            jr 17F
 153+ 8EB3
 154+ 8EB3              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EB3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EB3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EB3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EB3
 159+ 8EB3 CD 18 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EB6 CD 8D 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EB9              ;                                                      ; _al generar el disparo.
 162+ 8EB9
 163+ 8EB9              ; 	LLegados a este punto tendremos:
 164+ 8EB9              ;
 165+ 8EB9              ;       Puntero_objeto_disparo en IY.
 166+ 8EB9              ;       Rutinas_de_impresion en IX.
 167+ 8EB9              ;       Puntero_de_impresion en HL.
 168+ 8EB9              ;       Impacto/Dirección en BC.
 169+ 8EB9
 170+ 8EB9 CD 20 8F     17 call Almacena_disparo
 171+ 8EBC 18 52            jr 6F                                             ; RET.
 172+ 8EBE
 173+ 8EBE              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EBE              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EBE              ;
 176+ 8EBE              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EBE              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EBE              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EBE
 180+ 8EBE 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8EC1
 182+ 8EC1              ;   Amadeus o entidad ???.
 183+ 8EC1
 184+ 8EC1 3A F0 88         ld a,(Ctrl_0)
 185+ 8EC4 CB 77            bit 6,a
 186+ 8EC6 28 0A            jr z,11F
 187+ 8EC8
 188+ 8EC8              ; 	Dispara Amadeus.
 189+ 8EC8
 190+ 8EC8 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8ECA CD 26 96         call PreviousScan
 192+ 8ECD CD 26 96         call PreviousScan
 193+ 8ED0
 194+ 8ED0              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8ED0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8ED0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8ED0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8ED0
 199+ 8ED0 18 11            jr 13F
 200+ 8ED2
 201+ 8ED2              ; 	Dispara Entidad.
 202+ 8ED2
 203+ 8ED2 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8ED5              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8ED5
 206+ 8ED5              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8ED5              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8ED5
 209+ 8ED5 C5               push bc
 210+ 8ED6 06 10            ld b,16
 211+ 8ED8 CD 17 96     12 call NextScan
 212+ 8EDB 10 FB            djnz 12B
 213+ 8EDD C1               pop bc
 214+ 8EDE
 215+ 8EDE CD 11 8F         call Ajusta_disparo_parte_derecha
 216+ 8EE1 18 06            jr 18F
 217+ 8EE3
 218+ 8EE3              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EE3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EE3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EE3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EE3
 223+ 8EE3 CD 11 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EE6 CD 8D 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EE9              ;                                                       ; _al generar el disparo.
 226+ 8EE9
 227+ 8EE9              ; LLegados a este punto tendremos:
 228+ 8EE9              ;
 229+ 8EE9              ;       Puntero_objeto_disparo en IY.
 230+ 8EE9              ;       Rutinas_de_impresion en IX.
 231+ 8EE9              ;       Puntero_de_impresion en HL.
 232+ 8EE9              ;       Impacto/Dirección en BC.
 233+ 8EE9
 234+ 8EE9 CD 20 8F     18 call Almacena_disparo
 235+ 8EEC 18 22            jr 6F                                               ; RET.
 236+ 8EEE
 237+ 8EEE              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EEE
 239+ 8EEE 28 11        3 jr z,5F
 240+ 8EF0
 241+ 8EF0              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EF0              ;
 243+ 8EF0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EF0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EF0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EF0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EF0
 248+ 8EF0              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EF0              ;	   ""        ""       "f9", B="1"
 250+ 8EF0              ;	   ""        ""       "fb", B="2"
 251+ 8EF0              ; 	   ""        ""       "fb", B="3"
 252+ 8EF0
 253+ 8EF0 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8EF3 CD 17 96     	call NextScan
 255+ 8EF6
 256+ 8EF6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8EF6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8EF6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8EF6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8EF6
 261+ 8EF6 CD 18 8F         call Ajusta_disparo_parte_izquierda
 262+ 8EF9
 263+ 8EF9              ; 	No se produce impacto. B="$80"
 264+ 8EF9              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8EF9
 266+ 8EF9 01 80 80         ld bc,$8080
 267+ 8EFC
 268+ 8EFC              ; 	LLegados a este punto tendremos:
 269+ 8EFC              ;
 270+ 8EFC              ;       Puntero_objeto_disparo en IY.
 271+ 8EFC              ;       Rutinas_de_impresion en IX.
 272+ 8EFC              ;       Puntero_de_impresion en HL.
 273+ 8EFC              ;       Impacto/Dirección en BC.
 274+ 8EFC
 275+ 8EFC CD 20 8F         call Almacena_disparo
 276+ 8EFF 18 0F            jr 6F                                           ; RET.
 277+ 8F01
 278+ 8F01              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F01              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F01              ;
 281+ 8F01              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F01              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F01              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F01              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F01
 286+ 8F01 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F04 CD 17 96     	call NextScan
 288+ 8F07
 289+ 8F07              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F07              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F07              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F07              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F07
 294+ 8F07 CD 11 8F         call Ajusta_disparo_parte_derecha
 295+ 8F0A
 296+ 8F0A              ; 	No se produce impacto. B="$80"
 297+ 8F0A              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F0A
 299+ 8F0A 01 80 80     15 ld bc,$8080
 300+ 8F0D
 301+ 8F0D              ; 	LLegados a este punto tendremos:
 302+ 8F0D              ;
 303+ 8F0D              ;       Puntero_objeto_disparo en IY.
 304+ 8F0D              ;       Rutinas_de_impresion en IX.
 305+ 8F0D              ;       Puntero_de_impresion en HL.
 306+ 8F0D              ;       Impacto/Dirección en BC.
 307+ 8F0D
 308+ 8F0D CD 20 8F         call Almacena_disparo
 309+ 8F10
 310+ 8F10 C9           6 ret
 311+ 8F11
 312+ 8F11              ; ----------------------------------------------------------------
 313+ 8F11              ;
 314+ 8F11              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F11              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F11              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F11
 318+ 8F11 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F12 FE 02            cp 2
 320+ 8F14 38 01            jr c,1F
 321+ 8F16 23               inc hl
 322+ 8F17 C9           1 ret
 323+ 8F18
 324+ 8F18 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F19 FE 01        	cp 1
 326+ 8F1B 20 01        	jr nz,1F
 327+ 8F1D 2B           	dec hl
 328+ 8F1E 2B           1 dec hl
 329+ 8F1F C9               ret
 330+ 8F20
 331+ 8F20              ; ----------------------------------------------------------------
 332+ 8F20              ;
 333+ 8F20              ;   25/02/23
 334+ 8F20              ;
 335+ 8F20              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F20              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F20              ;
 338+ 8F20              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F20              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F20
 341+ 8F20              Almacena_disparo
 342+ 8F20
 343+ 8F20 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F21 F1               pop af
 345+ 8F22 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F23
 347+ 8F23 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F24 E6 01            and 1
 349+ 8F26 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F28              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F28              ; 	Dispara AMADEUS.
 352+ 8F28
 353+ 8F28              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F28              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F28              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F28              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F28
 358+ 8F28 C5               push bc
 359+ 8F29 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F2C 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F2F A7               and a
 362+ 8F30 ED 42            sbc hl,bc
 363+ 8F32 CC 01 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F35 C1               pop bc
 365+ 8F36 28 54            jr z,4F
 366+ 8F38
 367+ 8F38 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F3B 23               inc hl
 369+ 8F3C 23               inc hl
 370+ 8F3D 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F40              ;                                                   ; _ Disparo_(+1).
 372+ 8F40 18 18            jr 2F
 373+ 8F42
 374+ 8F42              ; Dispara una entidad.
 375+ 8F42
 376+ 8F42 C5           1 push bc
 377+ 8F43 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F46 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F49 A7               and a
 380+ 8F4A ED 42            sbc hl,bc
 381+ 8F4C CC FA 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F4F C1               pop bc
 383+ 8F50 28 3A            jr z,4F
 384+ 8F52
 385+ 8F52 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F55 23               inc hl
 387+ 8F56 23               inc hl
 388+ 8F57 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F5A              ;                                                   ; _ Disparo_(+1).
 390+ 8F5A CD 80 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F5D              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F5D              ;
 393+ 8F5D              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F5D              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F5D              ;                                                     Puntero_de_impresion en HL.
 396+ 8F5D              ;                                                     Impacto/Dirección en BC.
 397+ 8F5D
 398+ 8F5D 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F5E 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F5F 23               inc hl                                          ; _ al siguiente.
 401+ 8F60 A7               and a
 402+ 8F61 20 C0            jr nz,3B
 403+ 8F63
 404+ 8F63 08               ex af,af
 405+ 8F64 ED 73 14 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F68 F9               ld sp,hl
 407+ 8F69
 408+ 8F69 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F6B F5               push af                                         ; Puntero de impresión.
 410+ 8F6C FD E5            push iy                                         ; Puntero objeto.
 411+ 8F6E C5               push bc                                         ; Control.
 412+ 8F6F
 413+ 8F6F ED 7B 14 89      ld sp,(Stack)
 414+ 8F73
 415+ 8F73              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F73
 417+ 8F73 21 03 89     	ld hl,Ctrl_1
 418+ 8F76 CB C6        	set 0,(hl)
 419+ 8F78
 420+ 8F78 DD E5        	push ix
 421+ 8F7A E1               pop hl
 422+ 8F7B F5               push af
 423+ 8F7C DD E1            pop ix
 424+ 8F7E
 425+ 8F7E CD A0 7F     	call Guarda_foto_registros
 426+ 8F81
 427+ 8F81 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F84 CB 86        	res 0,(hl)
 429+ 8F86
 430+ 8F86              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F86              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F86
 433+ 8F86 CD 01 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F89 CD FA 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F8C
 436+ 8F8C C9           4 ret
 437+ 8F8D
 438+ 8F8D              ; ----------------------------------------------------------------
 439+ 8F8D              ;
 440+ 8F8D              ;   4/3/23
 441+ 8F8D              ;
 442+ 8F8D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F8D              ;   _ al generarse el disparo.
 444+ 8F8D              ;
 445+ 8F8D              ;       "$80" ..... No se produce colisión.
 446+ 8F8D              ;       "$81" ..... Se produce colisión.
 447+ 8F8D              ;
 448+ 8F8D              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F8D              ;         _ que forman el disparo.
 450+ 8F8D
 451+ 8F8D
 452+ 8F8D              Comprueba_Colision
 453+ 8F8D
 454+ 8F8D              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F8D
 456+ 8F8D FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F8F E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F90
 459+ 8F90 CD C6 8F         call Modifica_H_Velocidad_disparo
 460+ 8F93
 461+ 8F93 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F94 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F96 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F98
 465+ 8F98 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F9A CD B6 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F9D
 468+ 8F9D 7B               ld a,e
 469+ 8F9E E6 01            and 1
 470+ 8FA0 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FA2              ;                                                  ; _ para activar IMPACTO.
 472+ 8FA2 E1               pop hl
 473+ 8FA3 E5               push hl
 474+ 8FA4 CD 17 96         call NextScan
 475+ 8FA7
 476+ 8FA7 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FA8 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FAA 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FAC              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FAC 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FAE CD B6 8F         call Bucle_2
 482+ 8FB1
 483+ 8FB1 43           1 ld b,e
 484+ 8FB2 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FB3 FD E1            pop iy
 486+ 8FB5 C9               ret
 487+ 8FB6
 488+ 8FB6              ; ---------- ----------
 489+ 8FB6
 490+ 8FB6 06 02        Bucle_2 ld b,2
 491+ 8FB8 FD 7E 00     2 ld a,(iy)
 492+ 8FBB A6               and (hl)
 493+ 8FBC 28 02            jr z,1F
 494+ 8FBE 1E 81            ld e,$81
 495+ 8FC0 23           1 inc hl
 496+ 8FC1 FD 23            inc iy
 497+ 8FC3 10 F3            djnz 2B
 498+ 8FC5 C9               ret
 499+ 8FC6
 500+ 8FC6              ; ---------- ----------
 501+ 8FC6              ;
 502+ 8FC6              ;   21/7/23
 503+ 8FC6
 504+ 8FC6              Modifica_H_Velocidad_disparo
 505+ 8FC6
 506+ 8FC6 3A 50 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FC9 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FCB D0               ret nc                                         ; _ incrementamos H.
 509+ 8FCC 24               inc h
 510+ 8FCD
 511+ 8FCD C9               ret
 512+ 8FCE
 513+ 8FCE              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FCE              ;
 515+ 8FCE              ;   11/04/23
 516+ 8FCE              ;
 517+ 8FCE              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FCE              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FCE              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FCE              ;
 521+ 8FCE              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FCE
 523+ 8FCE              Compara_coordenadas_X
 524+ 8FCE
 525+ 8FCE              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FCE              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FCE
 528+ 8FCE              ; Preparamos registros:
 529+ 8FCE
 530+ 8FCE 21 CC 88         ld hl,Filas+6
 531+ 8FD1 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FD2 23               inc hl
 533+ 8FD3 23               inc hl
 534+ 8FD4 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FD5 43               ld b,e
 536+ 8FD6
 537+ 8FD6 21 DA 88         ld hl,Filas+20
 538+ 8FD9 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FDA 21 4B 89         ld hl,Coordenadas_X_Entidad
 540+ 8FDD CD F9 91         call Guarda_coordenadas_X
 541+ 8FE0
 542+ 8FE0              ; Preparamos registros:
 543+ 8FE0
 544+ 8FE0 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FE3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FE4 23               inc hl
 547+ 8FE5 23               inc hl
 548+ 8FE6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FE7 7B               ld a,e
 550+ 8FE8 08               ex af,af'
 551+ 8FE9 21 B2 85         ld hl,Amadeus_db+20
 552+ 8FEC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8FED 21 48 89         ld hl,Coordenadas_X_Amadeus
 554+ 8FF0 CD F9 91         call Guarda_coordenadas_X
 555+ 8FF3
 556+ 8FF3              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8FF3              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8FF3
 559+ 8FF3 04               inc b
 560+ 8FF4 05               dec b
 561+ 8FF5 28 04            jr z,1F
 562+ 8FF7 06 03            ld b,3
 563+ 8FF9 18 02            jr 2F
 564+ 8FFB 06 02        1 ld b,2
 565+ 8FFD 08           2 ex af,af'
 566+ 8FFE 3C               inc a
 567+ 8FFF 3D               dec a
 568+ 9000 28 04            jr z,5F
 569+ 9002 0E 03            ld c,3
 570+ 9004 18 02            jr 6F
 571+ 9006 0E 02        5 ld c,2
 572+ 9008 79           6 ld a,c
 573+ 9009 08               ex af,af'
 574+ 900A 11 4B 89         ld de,Coordenadas_X_Entidad
 575+ 900D 1A           4 ld a,(de)
 576+ 900E 21 48 89         ld hl,Coordenadas_X_Amadeus
 577+ 9011 BE           3 cp (hl)
 578+ 9012 28 0E            jr z,7F
 579+ 9014 23               inc hl
 580+ 9015 0D               dec c
 581+ 9016 20 F9            jr nz,3B
 582+ 9018 13               inc de
 583+ 9019 08               ex af,af'
 584+ 901A 4F               ld c,a
 585+ 901B 08               ex af,af'
 586+ 901C 10 EF            djnz 4B
 587+ 901E
 588+ 901E              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 901E
 590+ 901E CD 35 92     8 call Limpia_Coordenadas_X
 591+ 9021 C9               ret
 592+ 9022
 593+ 9022 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9024 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9027 21 43 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 902A CB D6            set 2,(hl)
 597+ 902C 18 F0            jr 8B
 598+ 902E
 599+ 902E              ; -----------------------------------------------------------------------
 600+ 902E              ;
 601+ 902E              ;   17/04/23
 602+ 902E              ;
 603+ 902E
 604+ 902E              Detecta_colision_nave_entidad
 605+ 902E
 606+ 902E              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 902E
 608+ 902E 2A C8 88         ld hl,(Posicion_actual)
 609+ 9031 CD 72 95         call Calcula_puntero_de_impresion
 610+ 9034
 611+ 9034              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9034              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9034
 614+ 9034 DD E5            push ix
 615+ 9036 E1               pop hl
 616+ 9037 E5               push hl
 617+ 9038
 618+ 9038              ; ----- ----- -----
 619+ 9038 1E 00            ld e,0                                         ; Indica impacto.
 620+ 903A 06 0A            ld b,10
 621+ 903C CD 6C 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 903F 7B               ld a,e
 623+ 9040 FE 05            cp 5
 624+ 9042 38 0E            jr c,3F
 625+ 9044
 626+ 9044              ; LLegados a este punto:
 627+ 9044              ;
 628+ 9044              ;   HAY COLISIÓN !!!!!.
 629+ 9044              ;
 630+ 9044              ;   .db (Impacto) de Amadeus a "1".
 631+ 9044              ;   SET el bit3 de (Impacto2).
 632+ 9044              ;
 633+ 9044              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9044
 635+ 9044 21 B7 85         ld hl,Amadeus_db+25
 636+ 9047 36 01            ld (hl),1
 637+ 9049 21 43 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 904C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 904E CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9050 18 18            jr 1F
 641+ 9052
 642+ 9052              ; -----
 643+ 9052
 644+ 9052 E1           3 pop hl
 645+ 9053 CD 17 96         call NextScan
 646+ 9056 E5               push hl
 647+ 9057 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9058 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 905A 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 905C 30 0C            jr nc,1F
 651+ 905E              ;                                                  ; _ 2º scanline si esto es así.
 652+ 905E 10 DC            djnz 2B
 653+ 9060
 654+ 9060              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9060
 656+ 9060              ; LLegados a este punto:
 657+ 9060              ;
 658+ 9060              ;   NO HAY COLISIÓN !!!!!.
 659+ 9060              ;
 660+ 9060              ;   .db (Impacto) de Amadeus a "0".
 661+ 9060              ;   RES el bit2 de (Impacto2).
 662+ 9060              ;
 663+ 9060              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9060              ;   Lo colocamos a "0".
 665+ 9060
 666+ 9060 21 43 89         ld hl,Impacto2
 667+ 9063 CB 96            res 2,(hl)
 668+ 9065 2A 44 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9068 36 00            ld (hl),0
 670+ 906A
 671+ 906A E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 906B C9               ret
 673+ 906C
 674+ 906C               ; ---------- ----------
 675+ 906C
 676+ 906C C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 906D 3A C7 88         ld a,(Columns)
 678+ 9070 47               ld b,a
 679+ 9071 FD 7E 00     2 ld a,(iy)
 680+ 9074 BE               cp (hl)
 681+ 9075 28 01            jr z,1F
 682+ 9077
 683+ 9077 1C               inc e
 684+ 9078
 685+ 9078 23           1 inc hl
 686+ 9079 FD 23            inc iy
 687+ 907B 10 F4            djnz 2B
 688+ 907D C1               pop bc
 689+ 907E C9               ret
 690+ 907F
 691+ 907F              ; -------------------------------------------------------------------------------------------------------------
 692+ 907F              ;
 693+ 907F              ;   13/03/23
 694+ 907F              ;
 695+ 907F              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 907F              ;
 697+ 907F              ;   DESTRUYE: HL,BC,DE y A.
 698+ 907F
 699+ 907F 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9082 7E               ld a,(hl)
 701+ 9083 A7               and a
 702+ 9084 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9085
 704+ 9085 44               ld b,h
 705+ 9086 4D               ld c,l
 706+ 9087 2A 1C 89         ld hl,(Stack_snapshot_disparos)
 707+ 908A E5               push hl
 708+ 908B A7               and a
 709+ 908C ED 42            sbc hl,bc
 710+ 908E E5               push hl
 711+ 908F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9090
 713+ 9090 E1               pop hl
 714+ 9091 54               ld d,h
 715+ 9092 5D               ld e,l
 716+ 9093 1B               dec de
 717+ 9094 ED B8            lddr                                                ; Limpiamos.
 718+ 9096
 719+ 9096 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9099 22 1C 89         ld (Stack_snapshot_disparos),hl
 721+ 909C
 722+ 909C C9               ret
 723+ 909D
 724+ 909D              ; -------------------------------------------------------------------------------------------------------------
 725+ 909D              ;
 726+ 909D              ;   18/07/23
 727+ 909D              ;
 728+ 909D
 729+ 909D              Motor_de_disparos
 730+ 909D
 731+ 909D              ; Gestiona DISPAROS DE AMADEUS.
 732+ 909D
 733+ 909D 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90A0 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90A3
 736+ 90A3 CD 80 8C     2 call Extrae_address
 737+ 90A6 7E               ld a,(hl)
 738+ 90A7 A7               and a
 739+ 90A8 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90AA
 741+ 90AA              ; ----- ----- ----- ----- ----- -----
 742+ 90AA
 743+ 90AA C5               push bc
 744+ 90AB CD 6F 91         call foto_disparo_a_borrar
 745+ 90AE
 746+ 90AE              ; Existe colisión con este disparo???
 747+ 90AE
 748+ 90AE 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90AF 7E               ld a,(hl)
 750+ 90B0 2B               dec hl
 751+ 90B1 E6 01            and 1
 752+ 90B3 28 1D            jr z,9F
 753+ 90B5
 754+ 90B5              ;   En este punto:
 755+ 90B5              ;
 756+ 90B5              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90B5              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90B5              ;   _con la entidad).
 759+ 90B5              ;
 760+ 90B5              ;   Disparo_2A defw 0                                ; Control.
 761+ 90B5              ;    defw 0                                          ; Puntero objeto.
 762+ 90B5              ;    defw 0                                          ; Puntero de impresión.
 763+ 90B5              ;    defw 0                                          ; Rutina de impresión.
 764+ 90B5
 765+ 90B5 E5               push hl
 766+ 90B6
 767+ 90B6 06 04            ld b,4
 768+ 90B8 23           19 inc hl
 769+ 90B9 10 FD            djnz 19B
 770+ 90BB
 771+ 90BB CD 80 8C         call Extrae_address
 772+ 90BE CD E0 9C         call Genera_coordenadas_disparo
 773+ 90C1
 774+ 90C1              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90C1
 776+ 90C1 21 46 89         ld hl,Coordenadas_disparo_certero
 777+ 90C4 72               ld (hl),d
 778+ 90C5 23               inc hl
 779+ 90C6 73               ld (hl),e
 780+ 90C7
 781+ 90C7              ; Elimino el disparo de la base de datos.
 782+ 90C7
 783+ 90C7 E1               pop hl
 784+ 90C8 CD EE 91         call Elimina_disparo_de_base_de_datos
 785+ 90CB 21 43 89         ld hl,Impacto2
 786+ 90CE CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90D0
 788+ 90D0 18 06            jr 11F
 789+ 90D2
 790+ 90D2 CD 98 91     9 call Mueve_disparo
 791+ 90D5 CD 6F 91         call foto_disparo_a_borrar
 792+ 90D8
 793+ 90D8 C1           11 pop bc
 794+ 90D9 18 04            jr 7F
 795+ 90DB
 796+ 90DB              ; ----- ----- ----- ----- ----- -----
 797+ 90DB
 798+ 90DB ED 42        1 sbc hl,bc
 799+ 90DD 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90DF
 801+ 90DF 2A 41 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90E2 23               inc hl
 803+ 90E3 23               inc hl
 804+ 90E4 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90E7 18 BA            jr 2B
 806+ 90E9
 807+ 90E9 CD 01 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 90EC              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 90EC
 810+ 90EC              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 90EC
 812+ 90EC 01 8A 85         ld bc,Disparo_11
 813+ 90EF 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 90F2
 815+ 90F2 CD 80 8C     5 call Extrae_address
 816+ 90F5 7E               ld a,(hl)
 817+ 90F6 A7               and a
 818+ 90F7 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 90F9
 820+ 90F9              ; ----- ----- ----- ----- ----- -----
 821+ 90F9
 822+ 90F9 C5               push bc
 823+ 90FA CD 6F 91         call foto_disparo_a_borrar
 824+ 90FD
 825+ 90FD              ; Existe colisión con este disparo???
 826+ 90FD
 827+ 90FD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 90FE 7E               ld a,(hl)
 829+ 90FF 2B               dec hl
 830+ 9100 E6 01            and 1
 831+ 9102 28 4D            jr z,10F
 832+ 9104
 833+ 9104              ;! La colisión se produce con Amadeus???
 834+ 9104              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9104
 836+ 9104 E5               push hl
 837+ 9105
 838+ 9105 06 04            ld b,4
 839+ 9107 23           16 inc hl
 840+ 9108 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 910A
 842+ 910A CD 80 8C         call Extrae_address
 843+ 910D CD E0 9C         call Genera_coordenadas_disparo
 844+ 9110
 845+ 9110 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9111 FE 16            cp $16
 847+ 9113 38 2A            jr c,15F
 848+ 9115
 849+ 9115
 850+ 9115              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9115
 852+ 9115 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9116
 854+ 9116              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9116
 856+ 9116
 857+ 9116 2A 4E 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9119
 859+ 9119              ; Coordenada X de Amadeus en D.
 860+ 9119
 861+ 9119 7D               ld a,l
 862+ 911A E6 1F            and $1F
 863+ 911C 57               ld d,a
 864+ 911D
 865+ 911D 21 A6 85         ld hl,Amadeus_db+8
 866+ 9120 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9121
 868+ 9121 21 48 89         ld hl,Coordenadas_X_Amadeus
 869+ 9124 CD F9 91         call Guarda_coordenadas_X
 870+ 9127
 871+ 9127 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9128
 873+ 9128              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9128
 875+ 9128 06 02            ld b,2
 876+ 912A C5           20 push bc
 877+ 912B
 878+ 912B 06 03            ld b,3
 879+ 912D 21 48 89         ld hl,Coordenadas_X_Amadeus
 880+ 9130 7E           18 ld a,(hl)
 881+ 9131 BA               cp d
 882+ 9132 20 04            jr nz,17F
 883+ 9134
 884+ 9134              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9134
 886+ 9134 C1               pop bc
 887+ 9135 E1               pop hl
 888+ 9136 18 0D            jr 14F
 889+ 9138
 890+ 9138 23           17 inc hl
 891+ 9139 10 F5            djnz 18B
 892+ 913B
 893+ 913B 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 913C
 895+ 913C C1               pop bc
 896+ 913D 10 EB            djnz 20B
 897+ 913F
 898+ 913F
 899+ 913F              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 913F              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 913F
 902+ 913F E1           15 pop hl
 903+ 9140 23               inc hl
 904+ 9141 35               dec (hl)
 905+ 9142 2B               dec hl
 906+ 9143 18 0C            jr 10F
 907+ 9145
 908+ 9145              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9145              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9145
 911+ 9145 E5           14 push hl
 912+ 9146 CD EE 91         call Elimina_disparo_de_base_de_datos
 913+ 9149 21 43 89         ld hl,Impacto2
 914+ 914C CB CE            set 1,(hl)
 915+ 914E E1               pop hl
 916+ 914F 18 06            jr 12F
 917+ 9151
 918+ 9151              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9151
 920+ 9151 CD 98 91     10 call Mueve_disparo
 921+ 9154 CD 6F 91         call foto_disparo_a_borrar
 922+ 9157 C1           12 pop bc
 923+ 9158
 924+ 9158 18 04            jr 8F
 925+ 915A
 926+ 915A              ; ----- ----- ----- ----- ----- -----
 927+ 915A
 928+ 915A ED 42        4 sbc hl,bc
 929+ 915C 28 0A            jr z,6F
 930+ 915E
 931+ 915E 2A 3F 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9161 23               inc hl
 933+ 9162 23               inc hl
 934+ 9163 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9166 18 8A            jr 5B
 936+ 9168
 937+ 9168 CD FA 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 916B CD 35 92         call Limpia_Coordenadas_X
 939+ 916E C9               ret
 940+ 916F
 941+ 916F              ; ------------------------------------------------------------------
 942+ 916F
 943+ 916F              foto_disparo_a_borrar
 944+ 916F
 945+ 916F 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9170 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9171 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9172
 949+ 9172 E5               push hl
 950+ 9173 23               inc hl
 951+ 9174 23               inc hl
 952+ 9175 ED 73 14 89      ld (Stack),sp
 953+ 9179 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 917A FD E1            pop iy
 955+ 917C DD E1            pop ix
 956+ 917E E1               pop hl
 957+ 917F ED 7B 14 89      ld sp,(Stack)
 958+ 9183 3A 03 89         ld a,(Ctrl_1)
 959+ 9186 CB C7            set 0,a
 960+ 9188 32 03 89         ld (Ctrl_1),a
 961+ 918B CD A0 7F         call Guarda_foto_registros
 962+ 918E 3A 03 89         ld a,(Ctrl_1)
 963+ 9191 CB 87            res 0,a
 964+ 9193 32 03 89         ld (Ctrl_1),a
 965+ 9196 E1               pop hl
 966+ 9197 C9               ret
 967+ 9198
 968+ 9198              ;---------------------------------------------------
 969+ 9198              ;
 970+ 9198              ;   18/07/23
 971+ 9198              ;
 972+ 9198
 973+ 9198              Mueve_disparo
 974+ 9198
 975+ 9198              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9198              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9198              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9198
 979+ 9198 E5               push hl
 980+ 9199
 981+ 9199 7E               ld a,(hl)
 982+ 919A
 983+ 919A 06 04            ld b,4
 984+ 919C 23           1 inc hl
 985+ 919D 10 FD            djnz 1B
 986+ 919F
 987+ 919F              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 919F
 989+ 919F CD 80 8C         call Extrae_address
 990+ 91A2
 991+ 91A2 E6 01            and 1
 992+ 91A4 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91A6
 994+ 91A6              ; Disparo hacia arriba, (Amadeus).
 995+ 91A6
 996+ 91A6              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91A6              ; _ de la dificultad.
 998+ 91A6
 999+ 91A6 CD 26 96         call PreviousScan
1000+ 91A9 CD 26 96         call PreviousScan
1001+ 91AC CD 26 96         call PreviousScan
1002+ 91AF CD 26 96         call PreviousScan
1003+ 91B2
1004+ 91B2              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91B2
1006+ 91B2 7C               ld a,h
1007+ 91B3 FE 40            cp $40
1008+ 91B5 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91B7
1010+ 91B7              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91B7
1012+ 91B7 EB               ex de,hl
1013+ 91B8 06 04            ld b,4
1014+ 91BA 2B           6 dec hl
1015+ 91BB 10 FD            djnz 6B
1016+ 91BD
1017+ 91BD CD EE 91         call Elimina_disparo_de_base_de_datos
1018+ 91C0 E1               pop hl
1019+ 91C1 18 10            jr 7F
1020+ 91C3
1021+ 91C3              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91C3              ; HL contiene el puntero de impresión del disparo.
1023+ 91C3              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91C3
1025+ 91C3 D5           3 push de
1026+ 91C4 C5               push bc
1027+ 91C5
1028+ 91C5 CD 8D 8F         call Comprueba_Colision
1029+ 91C8
1030+ 91C8              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91C8
1032+ 91C8 78               ld a,b
1033+ 91C9
1034+ 91C9 C1               pop bc
1035+ 91CA D1               pop de
1036+ 91CB
1037+ 91CB EB               ex de,hl
1038+ 91CC
1039+ 91CC 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91CD 23               inc hl                                      ; _ movimiento.
1041+ 91CE 72               ld (hl),d
1042+ 91CF
1043+ 91CF E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91D0
1045+ 91D0 23               inc hl                                      ; _ en curso.
1046+ 91D1 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91D2 2B               dec hl
1048+ 91D3
1049+ 91D3 C9           7 ret
1050+ 91D4
1051+ 91D4              ; Disparo hacia abajo, (Entidad).
1052+ 91D4
1053+ 91D4 3A 50 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91D7 47               ld b,a
1055+ 91D8
1056+ 91D8 CD 17 96     4 call NextScan
1057+ 91DB 10 FB            djnz 4B
1058+ 91DD
1059+ 91DD              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91DD
1061+ 91DD 7C               ld a,h
1062+ 91DE FE 58            cp $58
1063+ 91E0 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91E2
1065+ 91E2 EB               ex de,hl
1066+ 91E3 06 04            ld b,4
1067+ 91E5 2B           5 dec hl
1068+ 91E6 10 FD            djnz 5B
1069+ 91E8
1070+ 91E8 CD EE 91         call Elimina_disparo_de_base_de_datos
1071+ 91EB E1               pop hl
1072+ 91EC 18 E5            jr 7B
1073+ 91EE
1074+ 91EE              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 91EE
1076+ 91EE 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 91F1 AF               xor a
1078+ 91F2 77               ld (hl),a
1079+ 91F3 54               ld d,h
1080+ 91F4 5D               ld e,l
1081+ 91F5 13               inc de
1082+ 91F6 ED B0            ldir
1083+ 91F8 C9               ret
1084+ 91F9
1085+ 91F9              ; -----------------------------------------------------------------
1086+ 91F9              ;
1087+ 91F9              ;   19/7/23
1088+ 91F9              ;
1089+ 91F9              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 91F9              ;
1091+ 91F9              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 91F9              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 91F9              ;
1094+ 91F9              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 91F9              ;
1096+ 91F9              ;   INPUTS:
1097+ 91F9              ;
1098+ 91F9              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 91F9              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 91F9
1101+ 91F9              ;   MODIFICA: A, HL, BC y DE.
1102+ 91F9
1103+ 91F9              Guarda_coordenadas_X
1104+ 91F9
1105+ 91F9 7B               ld a,e
1106+ 91FA A7               and a
1107+ 91FB 20 04            jr nz,1F
1108+ 91FD
1109+ 91FD 06 02            ld b,2
1110+ 91FF 18 02            jr 2F
1111+ 9201
1112+ 9201 06 03        1 ld b,3
1113+ 9203 72           2 ld (hl),d
1114+ 9204 23               inc hl
1115+ 9205 14               inc d
1116+ 9206 10 FB            djnz 2B
1117+ 9208
1118+ 9208 C9               ret
1119+ 9209
1120+ 9209              ; -----------------------------------------------------------------
1121+ 9209              ;
1122+ 9209              ;   12/04/23
1123+ 9209              ;
1124+ 9209
1125+ 9209 3A 43 89     Selector_de_impactos ld a,(Impacto2)
1126+ 920C A7               and a
1127+ 920D C8               ret z
1128+ 920E
1129+ 920E FE 04            cp 4
1130+ 9210 20 09            jr nz,1F
1131+ 9212
1132+ 9212
1133+ 9212              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9212
1135+ 9212 CD 2E 90         call Detecta_colision_nave_entidad
1136+ 9215
1137+ 9215 21 43 89         ld hl,Impacto2
1138+ 9218 CB 5E            bit 3,(hl)
1139+ 921A C0               ret nz                                               ; Existe colisión, RET.
1140+ 921B
1141+ 921B              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 921B              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 921B
1144+ 921B 21 43 89     1 ld hl,Impacto2
1145+ 921E CB 4E            bit 1,(hl)
1146+ 9220 28 07            jr z,2F
1147+ 9222
1148+ 9222 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9225 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9227 18 0B            jr 3F
1151+ 9229
1152+ 9229 21 43 89     2 ld hl,Impacto2
1153+ 922C CB 46            bit 0,(hl)
1154+ 922E C8               ret z
1155+ 922F
1156+ 922F              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 922F
1158+ 922F 21 03 89         ld hl,Ctrl_1
1159+ 9232 CB D6            set 2,(hl)
1160+ 9234
1161+ 9234 C9           3 ret
1162+ 9235
1163+ 9235              ; -----------------------------------------------------------------
1164+ 9235              ;
1165+ 9235              ;   19/7/23
1166+ 9235              ;
1167+ 9235              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9235
1169+ 9235 AF           Limpia_Coordenadas_X xor a
1170+ 9236 06 06            ld b,6
1171+ 9238 21 48 89         ld hl,Coordenadas_X_Amadeus
1172+ 923B 77           1 ld (hl),a
1173+ 923C 23               inc hl
1174+ 923D 10 FC            djnz 1B
1175+ 923F C9               ret
1176+ 9240
1177+ 9240              ; -----------------------------------------------------------------
1178+ 9240              ;
1179+ 9240              ;   25/04/23
1180+ 9240              ;
1181+ 9240
1182+ 9240              Determina_resultado_comparativa
1183+ 9240
1184+ 9240              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9240              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9240              ;
1187+ 9240              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9240              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9240              ;
1190+ 9240              ;   SBC HL,DE
1191+ 9240
1192+ 9240              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9240              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9240
1195+ 9240              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9240              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9240
1198+ 9240
1199+ 9240 3A DA 88         ld a,(Cuad_objeto)
1200+ 9243 FE 02            cp 2
1201+ 9245 28 26            jr z,2F
1202+ 9247 38 24            jr c,2F
1203+ 9249
1204+ 9249              ; Cuadrantes 3º y 4º
1205+ 9249
1206+ 9249 E6 01            and 1
1207+ 924B 28 10            jr z,4F
1208+ 924D
1209+ 924D              ; Cuadrante 3º
1210+ 924D
1211+ 924D 7C               ld a,h
1212+ 924E 06 00            ld b,0
1213+ 9250
1214+ 9250 CD DB 92         call Compara_cositas_H3
1215+ 9253
1216+ 9253 04               inc b
1217+ 9254 05               dec b
1218+ 9255 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9256
1220+ 9256 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9257 06 00            ld b,0
1222+ 9259
1223+ 9259 CD ED 92         call Compara_cositas_L3
1224+ 925C C9               ret
1225+ 925D
1226+ 925D              ; Cuadrante 4º
1227+ 925D
1228+ 925D 7C           4 ld a,h
1229+ 925E 06 00            ld b,0
1230+ 9260
1231+ 9260 CD FF 92         call Compara_cositas_H4
1232+ 9263
1233+ 9263 04               inc b
1234+ 9264 05               dec b
1235+ 9265 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9266
1237+ 9266 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9267 06 00            ld b,0
1239+ 9269
1240+ 9269 CD 15 93         call Compara_cositas_L4
1241+ 926C C9               ret
1242+ 926D
1243+ 926D              ; Cuadrantes 1º y 2º.
1244+ 926D
1245+ 926D 28 10        2 jr z,3F
1246+ 926F
1247+ 926F              ; 1er Cuadrante
1248+ 926F
1249+ 926F 7C               ld a,h
1250+ 9270 06 00            ld b,0
1251+ 9272
1252+ 9272 CD B3 92         call Compara_cositas_H1
1253+ 9275
1254+ 9275 04               inc b
1255+ 9276 05               dec b
1256+ 9277 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9278
1258+ 9278 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9279 06 00            ld b,0
1260+ 927B
1261+ 927B CD C9 92         call Compara_cositas_L1
1262+ 927E C9               ret
1263+ 927F
1264+ 927F
1265+ 927F              ; 2º Cuadrante
1266+ 927F
1267+ 927F 7C           3 ld a,h
1268+ 9280 06 00            ld b,0
1269+ 9282
1270+ 9282 CD 8F 92         call Compara_cositas_H2
1271+ 9285
1272+ 9285 04               inc b
1273+ 9286 05               dec b
1274+ 9287 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9288
1276+ 9288 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9289 06 00            ld b,0
1278+ 928B
1279+ 928B CD A1 92         call Compara_cositas_L2
1280+ 928E C9               ret
1281+ 928F
1282+ 928F A7           Compara_cositas_H2 and a
1283+ 9290 28 0D            jr z,1F
1284+ 9292              ;    cp $fd
1285+ 9292              ;    jr z,1F
1286+ 9292              ;    cp $fe
1287+ 9292              ;    jr z,1F
1288+ 9292 FE FF            cp $ff
1289+ 9294 28 09            jr z,1F
1290+ 9296 FE 01            cp $01
1291+ 9298 28 05            jr z,1F
1292+ 929A FE 02            cp $02
1293+ 929C 28 01            jr z,1F
1294+ 929E C0               ret nz
1295+ 929F 04           1 inc b
1296+ 92A0 C9               ret
1297+ 92A1
1298+ 92A1 A7           Compara_cositas_L2 and a
1299+ 92A2 28 0D            jr z,1F
1300+ 92A4              ;    cp $fd
1301+ 92A4              ;    jr z,1F
1302+ 92A4 FE FE            cp $fe
1303+ 92A6 28 09            jr z,1F
1304+ 92A8 FE FF            cp $ff
1305+ 92AA 28 05            jr z,1F
1306+ 92AC FE 01            cp $01
1307+ 92AE 28 01            jr z,1F
1308+ 92B0              ;    cp $02
1309+ 92B0              ;    jr z,1F
1310+ 92B0 C0               ret nz
1311+ 92B1 04           1 inc b
1312+ 92B2 C9               ret
1313+ 92B3
1314+ 92B3 A7           Compara_cositas_H1 and a
1315+ 92B4 28 11            jr z,1F
1316+ 92B6              ;    cp $fd
1317+ 92B6              ;    jr z,1F
1318+ 92B6              ;    cp $fe
1319+ 92B6              ;    jr z,1F
1320+ 92B6 FE FF            cp $ff
1321+ 92B8 28 0D            jr z,1F
1322+ 92BA FE 01            cp $01
1323+ 92BC 28 09            jr z,1F
1324+ 92BE FE 02            cp $02
1325+ 92C0 28 05            jr z,1F
1326+ 92C2 FE 03            cp $03
1327+ 92C4 28 01            jr z,1F
1328+ 92C6 C0               ret nz
1329+ 92C7 04           1 inc b
1330+ 92C8 C9               ret
1331+ 92C9
1332+ 92C9 A7           Compara_cositas_L1 and a
1333+ 92CA 28 0D            jr z,1F
1334+ 92CC              ;    cp $fd
1335+ 92CC              ;    jr z,1F
1336+ 92CC              ;    cp $fe
1337+ 92CC              ;    jr z,1F
1338+ 92CC              ;    cp $ff
1339+ 92CC              ;    jr z,1F
1340+ 92CC FE 01            cp $01
1341+ 92CE 28 09            jr z,1F
1342+ 92D0 FE 02            cp $02
1343+ 92D2 28 05            jr z,1F
1344+ 92D4 FE 03            cp $03
1345+ 92D6 28 01            jr z,1F
1346+ 92D8 C0               ret nz
1347+ 92D9 04           1 inc b
1348+ 92DA C9               ret
1349+ 92DB
1350+ 92DB A7           Compara_cositas_H3 and a
1351+ 92DC 28 0D            jr z,1F
1352+ 92DE              ;    cp $fd
1353+ 92DE              ;    jr z,1F
1354+ 92DE FE FE            cp $fe
1355+ 92E0 28 09            jr z,1F
1356+ 92E2 FE FF            cp $ff
1357+ 92E4 28 05            jr z,1F
1358+ 92E6 FE 01            cp $01
1359+ 92E8 28 01            jr z,1F
1360+ 92EA              ;    cp $02
1361+ 92EA              ;    jr z,1F
1362+ 92EA              ;    cp $03
1363+ 92EA              ;    jr z,1F
1364+ 92EA C0               ret nz
1365+ 92EB 04           1 inc b
1366+ 92EC C9               ret
1367+ 92ED
1368+ 92ED A7           Compara_cositas_L3 and a
1369+ 92EE 28 0D            jr z,1F
1370+ 92F0              ;    cp $fd
1371+ 92F0              ;    jr z,1F
1372+ 92F0              ;    cp $fe
1373+ 92F0              ;    jr z,1F
1374+ 92F0              ;    cp $ff
1375+ 92F0              ;    jr z,1F
1376+ 92F0 FE 01            cp $01
1377+ 92F2 28 09            jr z,1F
1378+ 92F4 FE 02            cp $02
1379+ 92F6 28 05            jr z,1F
1380+ 92F8 FE 03            cp $03
1381+ 92FA 28 01            jr z,1F
1382+ 92FC C0               ret nz
1383+ 92FD 04           1 inc b
1384+ 92FE C9               ret
1385+ 92FF
1386+ 92FF A7           Compara_cositas_H4 and a
1387+ 9300 28 11            jr z,1F
1388+ 9302 FE FD            cp $fd
1389+ 9304 28 0D            jr z,1F
1390+ 9306 FE FE            cp $fe
1391+ 9308 28 09            jr z,1F
1392+ 930A FE FF            cp $ff
1393+ 930C 28 05            jr z,1F
1394+ 930E FE 01            cp $01
1395+ 9310 28 01            jr z,1F
1396+ 9312              ;    cp $02
1397+ 9312              ;    jr z,1F
1398+ 9312              ;    cp $03
1399+ 9312              ;    jr z,1F
1400+ 9312 C0               ret nz
1401+ 9313 04           1 inc b
1402+ 9314 C9               ret
1403+ 9315
1404+ 9315 A7           Compara_cositas_L4 and a
1405+ 9316 28 0D            jr z,1F
1406+ 9318              ;    cp $fd
1407+ 9318              ;    jr z,1F
1408+ 9318 FE FE            cp $fe
1409+ 931A 28 09            jr z,1F
1410+ 931C FE FF            cp $ff
1411+ 931E 28 05            jr z,1F
1412+ 9320 FE 01            cp $01
1413+ 9322 28 01            jr z,1F
1414+ 9324              ;    cp $02
1415+ 9324              ;    jr z,1F
1416+ 9324              ;    cp $03
1417+ 9324              ;    jr z,1F
1418+ 9324 C0               ret nz
1419+ 9325 04           1 inc b
1420+ 9326 C9               ret
# file closed: Disparo.asm
1635  9327              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9327              ; ******************************************************************************************************************************************************************************************
   2+ 9327              ;
   3+ 9327              ; 26/06/23
   4+ 9327              ;
   5+ 9327              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9327
   7+ 9327 CD 0B 96     Draw call Prepara_draw
   8+ 932A 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 932B A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 932C 28 05        	jr z,2F
  11+ 932E
  12+ 932E 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9331 18 0C        	jr 1F
  14+ 9333
  15+ 9333 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9336 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9339 CD C8 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 933C              ;													; _la esquina superior izquierda de la pantalla.
  19+ 933C CD 6B 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 933F
  21+ 933F 3A F0 88     1 ld a,(Ctrl_0)
  22+ 9342 CB 6F        	bit 5,a
  23+ 9344 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9346
  25+ 9346 CD 5E 93     	call Comprueba_limite_horizontal
  26+ 9349 CD EE 93     	call Comprueba_limite_vertical
  27+ 934C
  28+ 934C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 934C              ; -----------------------
  30+ 934C              ; -----------------------
  31+ 934C              ; -----------------------
  32+ 934C
  33+ 934C CD 3B 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 934F CD 72 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9352 CD D1 95     	call Define_rutina_de_impresion
  36+ 9355
  37+ 9355 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9358 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 935A 32 F0 88     	ld (Ctrl_0),a
  40+ 935D
  41+ 935D C9           	ret
  42+ 935E
  43+ 935E              ; *******************************************************************************************************************************************************************************************
  44+ 935E              ;	21/01/23
  45+ 935E              ;
  46+ 935E              ; 	Comprueba_limite_horizontal.
  47+ 935E              ;
  48+ 935E              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 935E              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 935E              ;
  51+ 935E              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 935E              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 935E              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 935E              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 935E
  56+ 935E
  57+ 935E
  58+ 935E 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9361 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9363 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9365 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9367 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 936A 18 09            jr 6F
  64+ 936C CB 5F        1 bit 3,a
  65+ 936E 28 0A            jr z,2F
  66+ 9370 E6 F7            and $f7
  67+ 9372 32 F0 88         ld (Ctrl_0),a
  68+ 9375 CD C8 94     6 call Inicializacion
  69+ 9378 18 5B            jr 5F
  70+ 937A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 937B
  72+ 937B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 937B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 937B
  75+ 937B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 937C 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 937F CD 2A 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9382 67           	ld h,a
  79+ 9383 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9384 CD 2A 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9387 67           	ld h,a
  82+ 9388 A7           	and a
  83+ 9389 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 938B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 938C 3A DA 88     	ld a,(Cuad_objeto)
  86+ 938F FE 02        	cp 2
  87+ 9391 38 1E        	jr c,3F
  88+ 9393 28 1C        	jr z,3F
  89+ 9395 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9396 28 23            jr z,7F
  91+ 9398 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 939A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 939C E1           	pop hl
  94+ 939D
  95+ 939D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 939D              ; _para indicar con E="2" en caso necesario.
  97+ 939D
  98+ 939D E5               push hl
  99+ 939E C5               push bc
 100+ 939F CD 2A 99     	call calcula_tercio
 101+ 93A2 FE 01        	cp 1
 102+ 93A4 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93A6 CD D6 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93A9 28 26            jr z,9F
 105+ 93AB 38 24            jr c,9F
 106+ 93AD 1E 00        11 ld e,0
 107+ 93AF 18 22            jr 8F
 108+ 93B1 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93B2 28 07        	jr z, 7F
 110+ 93B4 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93B6 1E 00         	ld e,0
 112+ 93B8 E1           	pop hl
 113+ 93B9 18 04        	jr 4F
 114+ 93BB 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93BD 18 15            jr 10F
 116+ 93BF
 117+ 93BF              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93BF              ; _para indicar con E="2" en caso necesario.
 119+ 93BF
 120+ 93BF E5           4 push hl
 121+ 93C0 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93C1 CD 2A 99     	call calcula_tercio
 123+ 93C4 FE 01        	cp 1
 124+ 93C6 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93C8 CD D6 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93CB 28 04            jr z,9F
 127+ 93CD 30 02            jr nc,9F
 128+ 93CF 18 02        	jr 8F
 129+ 93D1 1E 02        9 ld e,2
 130+ 93D3 C1           8 pop bc
 131+ 93D4 E1           10 pop hl
 132+ 93D5 C9           5 ret
 133+ 93D6
 134+ 93D6              ; --------------------
 135+ 93D6              ;
 136+ 93D6              ; 25/08/22
 137+ 93D6
 138+ 93D6 CD 2A 99     Comprueba_centro call calcula_tercio
 139+ 93D9 67               ld h,a
 140+ 93DA 08           	ex af,af
 141+ 93DB FE 02        	cp 2
 142+ 93DD 38 07        	jr c,1F
 143+ 93DF 28 05        	jr z,1F
 144+ 93E1 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93E4 18 03        	jr 2F
 146+ 93E6 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93E9 08           2 ex af,af
 148+ 93EA A7               and a
 149+ 93EB ED 42            sbc hl,bc
 150+ 93ED C9               ret
 151+ 93EE
 152+ 93EE              ; *********************************************************************************************************************************************************************************************
 153+ 93EE              ;
 154+ 93EE              ;   16/8/22
 155+ 93EE              ;
 156+ 93EE              ;	Comprueba_limite_vertical
 157+ 93EE              ;
 158+ 93EE              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93EE              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93EE              ;
 161+ 93EE
 162+ 93EE 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93F1 7D           	ld a,l
 164+ 93F2 E6 1F        	and $1F
 165+ 93F4 57           	ld d,a
 166+ 93F5 3A 00 89     	ld a,(Limite_vertical)
 167+ 93F8 BA           	cp d 											; Límite - Posición.
 168+ 93F9 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 93FA 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 93FD CB 47        	bit 0,a
 171+ 93FF 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9401
 173+ 9401              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9401
 175+ 9401 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9402 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9404
 178+ 9404              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9404              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9404
 181+ 9404 3A CC 88         ld a,(Coordenada_X)
 182+ 9407 16 0F            ld d,Centro_izquierda
 183+ 9409 A7               and a
 184+ 940A 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 940B 28 1E            jr z,3F
 186+ 940D 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 940F              ;                                                    ; _salimos sin modificar nada.
 188+ 940F 18 0E            jr 2F
 189+ 9411 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9412 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9414
 192+ 9414              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9414              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9414
 195+ 9414 3A CC 88         ld a,(Coordenada_X)
 196+ 9417 16 10            ld d,Centro_derecha
 197+ 9419 A7               and a
 198+ 941A 92               sub d
 199+ 941B 28 0E            jr z,3F
 200+ 941D 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 941F              ;                                                    ; _salimos sin modificar nada.
 202+ 941F CB 43        2 bit 0,e
 203+ 9421 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9423 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9424 CD B8 94         call Modificaccionne
 206+ 9427 C1           	pop bc
 207+ 9428 CD C8 94         call Inicializacion
 208+ 942B C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 942C
 210+ 942C              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 942C
 212+ 942C C5           4 push bc
 213+ 942D 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9430 0A           	ld a,(bc)
 215+ 9431 3D           	dec a
 216+ 9432 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9433 7D           	ld a,l
 218+ 9434 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9435 CB 47        	bit 0,a
 220+ 9437 28 03        	jr z,5F
 221+ 9439 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 943A 18 2E        	jr 7F
 223+ 943C
 224+ 943C              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 943C
 226+ 943C 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 943D F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 943E 3A F0 88     	ld a,(Ctrl_0)
 229+ 9441 CB 4F        	bit 1,a
 230+ 9443 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9445 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9446
 233+ 9446              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9446
 235+ 9446 1C               inc e
 236+ 9447 1D               dec e
 237+ 9448 20 07            jr nz,12F
 238+ 944A 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 944B 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 944C 22 C8 88     	ld (Posicion_actual),hl
 241+ 944F 18 44        13 jr 9F
 242+ 9451 CB 43        12 bit 0,e
 243+ 9453 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9455              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9455 C1           	pop bc
 246+ 9456 18 D3        	jr 3B
 247+ 9458 80           14 add b
 248+ 9459 6F               ld l,a
 249+ 945A 22 C8 88     	ld (Posicion_actual),hl
 250+ 945D CD B8 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9460 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9462 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9464 32 F0 88         ld (Ctrl_0),a
 254+ 9467 F1           	pop af
 255+ 9468 18 2B        	jr 9F
 256+ 946A
 257+ 946A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 946A
 259+ 946A F5           7 push af
 260+ 946B 3A F0 88     	ld a,(Ctrl_0)
 261+ 946E CB 47        	bit 0,a
 262+ 9470 20 1D        	jr nz,8F
 263+ 9472 F1           	pop af
 264+ 9473
 265+ 9473              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9473
 267+ 9473 1C           	inc e
 268+ 9474 1D               dec e
 269+ 9475 20 07            jr nz,10F
 270+ 9477 90           	sub b
 271+ 9478 6F               ld l,a
 272+ 9479 22 C8 88     	ld (Posicion_actual),hl
 273+ 947C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 947E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 947E CB 43        10 bit 0,e
 276+ 9480 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9482              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9482 C1           	pop bc
 279+ 9483 18 A6        	jr 3B
 280+ 9485 90           16 sub b
 281+ 9486 6F               ld l,a
 282+ 9487 22 C8 88     	ld (Posicion_actual),hl
 283+ 948A CD B8 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 948D 18 06            jr 9F
 285+ 948F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9491 32 F0 88         ld (Ctrl_0),a
 287+ 9494 F1           	pop af
 288+ 9495 C1           9 pop bc
 289+ 9496 1E 00        	ld e,0
 290+ 9498 CD C8 94         call Inicializacion
 291+ 949B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 949C 08           	ex af,af
 293+ 949D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 949E 18 8B            jr 3B
 295+ 94A0
 296+ 94A0              ; --------------------
 297+ 94A0
 298+ 94A0 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94A2 CD 26 96     1 call PreviousScan
 300+ 94A5 10 FB            djnz 1B
 301+ 94A7 22 C8 88     	ld (Posicion_actual),hl
 302+ 94AA AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94AB C9           	ret
 304+ 94AC
 305+ 94AC              ; --------------------
 306+ 94AC
 307+ 94AC 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94AE CD 17 96     1 call NextScan
 309+ 94B1 10 FB            djnz 1B
 310+ 94B3 22 C8 88     	ld (Posicion_actual),hl
 311+ 94B6 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94B7 C9           	ret
 313+ 94B8
 314+ 94B8              ; --------------------
 315+ 94B8              ;
 316+ 94B8              ;	22/01/23
 317+ 94B8              ;
 318+ 94B8              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94B8              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94B8              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94B8
 322+ 94B8
 323+ 94B8              Modificaccionne
 324+ 94B8
 325+ 94B8 3A DA 88     	ld a,(Cuad_objeto)
 326+ 94BB FE 02        	cp 2
 327+ 94BD CC A0 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94C0 DC A0 94         call c,Modifica_Pos_actual
 329+ 94C3 C8           	ret z
 330+ 94C4 CD AC 94         call Modifica_Pos_actual2
 331+ 94C7 C9               ret
 332+ 94C8
 333+ 94C8              ; *************************************************************************************************************************************************************************************************
 334+ 94C8              ;
 335+ 94C8              ;	13/8/22
 336+ 94C8              ;
 337+ 94C8              ;	Inicializacion
 338+ 94C8              ;
 339+ 94C8              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94C8              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94C8              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94C8              ;
 343+ 94C8              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94C8              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94C8              ;	_ desaparece/aparece.
 346+ 94C8
 347+ 94C8              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94C8              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94C8              ;
 350+ 94C8              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94C8              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94C8              ; 		   [E] ="0"
 353+ 94C8
 354+ 94C8              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94C8
 356+ 94C8 CD 2A 99     Inicializacion call calcula_tercio
 357+ 94CB 28 36        	jr z,primit
 358+ 94CD E6 02        	and 2
 359+ 94CF 20 07        	jr nz,segmit
 360+ 94D1 7D           	ld a,l
 361+ 94D2 FE 7F        	cp $7f
 362+ 94D4 38 2D        	jr c,primit
 363+ 94D6 28 2B        	jr z,primit
 364+ 94D8 CD 35 95     segmit call column
 365+ 94DB 38 13        	jr c,tercuad
 366+ 94DD 3E 04        cuarcuad ld a,4
 367+ 94DF 32 DA 88     	ld (Cuad_objeto),a
 368+ 94E2 21 20 48     	ld hl,$4820
 369+ 94E5 22 FE 88     	ld (Limite_horizontal),hl
 370+ 94E8 21 00 89     	ld hl,Limite_vertical
 371+ 94EB 36 0D        	ld (hl),$0d
 372+ 94ED 08           	ex af,af
 373+ 94EE 18 3C        	jr 1F
 374+ 94F0              tercuad
 375+ 94F0 3E 03        	ld a,3
 376+ 94F2 32 DA 88     	ld (Cuad_objeto),a
 377+ 94F5 21 20 48     	ld hl,$4820
 378+ 94F8 22 FE 88     	ld (Limite_horizontal),hl
 379+ 94FB 21 00 89     	ld hl,Limite_vertical
 380+ 94FE 36 12        	ld (hl),$12
 381+ 9500 08           	ex af,af
 382+ 9501 18 29        	jr 1F
 383+ 9503 CD 35 95     primit call column
 384+ 9506 38 13        	jr c, primcuad
 385+ 9508              segcuad
 386+ 9508 3E 02        	ld a,2
 387+ 950A 32 DA 88     	ld (Cuad_objeto),a
 388+ 950D 21 C0 4F     	ld hl,$4fc0
 389+ 9510 22 FE 88     	ld (Limite_horizontal),hl
 390+ 9513 21 00 89     	ld hl,Limite_vertical
 391+ 9516 36 0D        	ld (hl),$0d
 392+ 9518 08           	ex af,af
 393+ 9519 18 11        	jr 1F
 394+ 951B              primcuad
 395+ 951B 3E 01        	ld a,1
 396+ 951D 32 DA 88     	ld (Cuad_objeto),a
 397+ 9520 21 C0 4F     	ld hl,$4fc0
 398+ 9523 22 FE 88     	ld (Limite_horizontal),hl
 399+ 9526 21 00 89     	ld hl,Limite_vertical
 400+ 9529 36 12        	ld (hl),$12
 401+ 952B 08           	ex af,af
 402+ 952C CD B5 9C     1 call Genera_coordenadas
 403+ 952F 21 F0 88     	ld hl,Ctrl_0
 404+ 9532 CB EE        	set 5,(hl)
 405+ 9534 C9           	ret
 406+ 9535
 407+ 9535              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9535
 409+ 9535              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9535              ;
 411+ 9535              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9535
 413+ 9535 7D           column ld a,l
 414+ 9536 E6 1F        	and $1f
 415+ 9538 FE 10         	cp $10
 416+ 953A C9            	ret
 417+ 953B
 418+ 953B              ; --------------------------------------------------------------------------------------------------------------------
 419+ 953B              ;
 420+ 953B              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 953B              ;
 422+ 953B              ; 14/12/22
 423+ 953B              ;
 424+ 953B              ;	Modifica: A y BC.
 425+ 953B
 426+ 953B 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 953E E6 01        	and 1
 428+ 9540 28 17        	jr z,1F
 429+ 9542
 430+ 9542              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9542
 432+ 9542 3A CC 88     	ld a,(Coordenada_X)
 433+ 9545 47           	ld b,a
 434+ 9546 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9547 79           	ld a,c
 436+ 9548 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9549 38 08        	jr c,2F
 438+ 954B 47           	ld b,a
 439+ 954C 79           	ld a,c
 440+ 954D 90           	sub b
 441+ 954E 32 FD 88     	ld (Columnas),a
 442+ 9551 18 1B        	jr 4F
 443+ 9553 79           2 ld a,c
 444+ 9554 32 FD 88     	ld (Columnas),a
 445+ 9557 18 15        	jr 4F
 446+ 9559
 447+ 9559              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9559
 449+ 9559 3A CC 88     1 ld a,(Coordenada_X)
 450+ 955C 81           	add c
 451+ 955D 3D           	dec a
 452+ 955E D6 1F        	sub $1f
 453+ 9560 38 08        	jr c,3F
 454+ 9562 47           	ld b,a
 455+ 9563 79           	ld a,c
 456+ 9564 90           	sub b
 457+ 9565 32 FD 88     	ld (Columnas),a
 458+ 9568 18 04        	jr 4F
 459+ 956A 79           3 ld a,c
 460+ 956B 32 FD 88     	ld (Columnas),a
 461+ 956E D9           4 exx
 462+ 956F 4F           	ld c,a
 463+ 9570 D9           	exx
 464+ 9571 C9            ret
 465+ 9572
 466+ 9572              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9572              ;
 468+ 9572              ;   19/7/23
 469+ 9572              ;
 470+ 9572              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9572              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9572              ;
 473+ 9572              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9572              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9572              ;
 476+ 9572              ;	DESTRUYE: HL,B Y A.
 477+ 9572
 478+ 9572 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9575 FE 02        	cp 2
 480+ 9577 38 18        	jr c,1F
 481+ 9579 28 16        	jr z,1F
 482+ 957B E6 01        	and 1
 483+ 957D 28 0D        	jr z,3F
 484+ 957F
 485+ 957F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 957F
 487+ 957F CD C5 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9582
 489+ 9582 7D           9 ld a,l
 490+ 9583 E6 1F        	and $1f
 491+ 9585 28 2A        	jr z,7F
 492+ 9587 2B           	dec hl
 493+ 9588 10 F8        	djnz 9B
 494+ 958A 18 25        	jr 7F
 495+ 958C
 496+ 958C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 958C
 498+ 958C 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 958F 18 20        	jr 7F
 500+ 9591
 501+ 9591 28 14        1 jr z,2F
 502+ 9593
 503+ 9593              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9593
 505+ 9593 CD C5 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9596
 507+ 9596 7D           4 ld a,l
 508+ 9597 E6 1F        	and $1f
 509+ 9599 28 03        	jr z,6F
 510+ 959B 2B           	dec hl
 511+ 959C 10 F8        	djnz 4B
 512+ 959E 06 0F        6 ld b,15
 513+ 95A0 CD 26 96     5 call PreviousScan
 514+ 95A3 10 FB        	djnz 5B
 515+ 95A5 18 0A        	jr 7F
 516+ 95A7
 517+ 95A7              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95A7
 519+ 95A7 CD C5 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95AA 06 0F        	ld b,15
 521+ 95AC CD 26 96     8 call PreviousScan
 522+ 95AF 10 FB        	djnz 8B
 523+ 95B1
 524+ 95B1 E5           7 push hl
 525+ 95B2 DD E1        	pop ix
 526+ 95B4
 527+ 95B4 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 95B7 E5           	push hl
 529+ 95B8 FD E1        	pop iy
 530+ 95BA
 531+ 95BA              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95BA
 533+ 95BA 3A F0 88     	ld a,(Ctrl_0)
 534+ 95BD CB 77        	bit 6,a
 535+ 95BF C8           	ret z
 536+ 95C0
 537+ 95C0              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95C0              ; _ entidad / Amadeus´.
 539+ 95C0
 540+ 95C0 DD 22 4E 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95C4
 542+ 95C4 C9           	ret
 543+ 95C5
 544+ 95C5              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95C5              ;
 546+ 95C5              ;	2/1/23
 547+ 95C5              ;
 548+ 95C5              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95C5              ;
 550+ 95C5              ;	Tras esta rutina tenemos:
 551+ 95C5              ;
 552+ 95C5              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95C5              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95C5              ;
 555+ 95C5              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95C5
 557+ 95C5 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 95C8 3A FD 88     	ld a,(Columnas)
 559+ 95CB 3D           	dec a
 560+ 95CC 20 01        	jr nz,1F
 561+ 95CE 3C           	inc a
 562+ 95CF 47           1 ld b,a
 563+ 95D0 C9           	ret
 564+ 95D1
 565+ 95D1              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95D1              ;
 567+ 95D1              ;	3/1/23
 568+ 95D1              ;
 569+ 95D1              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95D1              ;
 571+ 95D1              ;	Destruye: A,B,HL y DE.
 572+ 95D1
 573+ 95D1              Define_rutina_de_impresion
 574+ 95D1
 575+ 95D1 3A C7 88     	ld a,(Columns)
 576+ 95D4 47           	ld b,a
 577+ 95D5 3A FD 88     	ld a,(Columnas)
 578+ 95D8 B8           	cp b
 579+ 95D9 20 0D        	jr nz,2f
 580+ 95DB
 581+ 95DB              ;	La entidad se imprime entera.
 582+ 95DB
 583+ 95DB 21 FA 96     	ld hl, Indice_entidades_completas
 584+ 95DE E6 01        	and 1
 585+ 95E0 28 02        	jr z,1F
 586+ 95E2
 587+ 95E2 23           	inc hl
 588+ 95E3 23           	inc hl
 589+ 95E4
 590+ 95E4 CD 80 8C     1 call Extrae_address
 591+ 95E7 C9           	ret		;	ret
 592+ 95E8
 593+ 95E8              ;	La entidad no se imprime entera en pantalla.
 594+ 95E8
 595+ 95E8 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 95EB E6 01        	and 1
 597+ 95ED 28 17        	jr z,3F
 598+ 95EF
 599+ 95EF              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95EF
 601+ 95EF 21 FE 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95F2 3A C7 88     4 ld a,(Columns)
 603+ 95F5 E6 01        	and 1
 604+ 95F7 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 95F9
 606+ 95F9 23           	inc hl
 607+ 95FA 23           	inc hl
 608+ 95FB
 609+ 95FB 3A FD 88     	ld a,(Columnas)
 610+ 95FE E6 01        	and 1
 611+ 9600 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9602
 613+ 9602 23           	inc hl
 614+ 9603 23           	inc hl
 615+ 9604
 616+ 9604 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9606
 618+ 9606 21 04 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9609 18 E7        	jr 4B
 620+ 960B
 621+ 960B              ; --------------------------------------------------------------------------------------------------------------------
 622+ 960B              ;
 623+ 960B              ;	Prepara_draw
 624+ 960B              ;
 625+ 960B              ;	Es una rutina de carga.
 626+ 960B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 960B              ;
 628+ 960B              ;	FUNCIONAMIENTO:
 629+ 960B              ;
 630+ 960B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 960B              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 960B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 960B              ;
 634+ 960B              ;	DESTRUYE:
 635+ 960B              ;
 636+ 960B              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 960B
 638+ 960B 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 960E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 960F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9610 4E           	ld c,(hl)
 642+ 9611 2A C8 88     	ld hl,(Posicion_actual)
 643+ 9614 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9616 C9           	ret
 645+ 9617
 646+ 9617              ;----------------------------------------------------------------------------------------------------------------
 647+ 9617              ;
 648+ 9617              ;	5/08/22
 649+ 9617              ;
 650+ 9617              ;   NextScan.
 651+ 9617              ;
 652+ 9617              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9617              ;
 654+ 9617              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9617              ;
 656+ 9617              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9617              ;
 658+ 9617              ;       DESTRUIDOS: AF y HL !!!
 659+ 9617              ;
 660+ 9617              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9617              ;
 662+ 9617
 663+ 9617 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9618 7C               ld a,h
 665+ 9619 E6 07            and 7
 666+ 961B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 961C
 668+ 961C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 961D C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 961F 6F               ld l,a
 671+ 9620 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9621
 673+ 9621 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9622 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9624 67               ld h,a
 676+ 9625 C9               ret
 677+ 9626
 678+ 9626              ;----------------------------------------------------------------------------------------------------------------
 679+ 9626              ;
 680+ 9626              ;	5/08/22
 681+ 9626              ;
 682+ 9626              ;   PreviousScan.
 683+ 9626              ;
 684+ 9626              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9626              ;
 686+ 9626              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9626              ;
 688+ 9626              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9626              ;
 690+ 9626              ;       DESTRUIDOS: AF y HL !!!
 691+ 9626              ;
 692+ 9626              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9626              ;
 694+ 9626
 695+ 9626 7C           PreviousScan ld a,h
 696+ 9627 25               dec h               ; Dec H.
 697+ 9628 E6 07            and 7
 698+ 962A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 962B
 700+ 962B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 962C D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 962E 6F               ld l,a
 703+ 962F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9630
 705+ 9630 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9631 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9633 67               ld h,a
 708+ 9634 C9               ret
 709+ 9635
 710+ 9635              ; -----------------------------------------------------------------------------------
 711+ 9635              ;
 712+ 9635              ;	31/7/23
 713+ 9635              ;
 714+ 9635              ;	Rutina principal de pintado de entidades.
 715+ 9635              ;	Extrae la foto del frame, (entidades).
 716+ 9635
 717+ 9635              Extrae_foto_entidades
 718+ 9635
 719+ 9635 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9638 7E           	ld a,(hl)
 721+ 9639 A7           	and a
 722+ 963A C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 963B
 724+ 963B              ;	No hay datos, (entidades para pintar en este frame).
 725+ 963B
 726+ 963B 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 963E A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 963F C8           	ret z
 729+ 9640
 730+ 9640              ; -----------------------------------
 731+ 9640
 732+ 9640 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9644 31 00 70     	ld sp,Album_de_fotos
 734+ 9647
 735+ 9647 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 9649 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 964A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 964B
 739+ 964B ED 73 16 89  	ld (Stack_2),sp
 740+ 964F ED 7B 14 89  	ld sp,(Stack)
 741+ 9653
 742+ 9653              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9653
 744+ 9653 3E CD        	ld a,$cd
 745+ 9655 32 5D 96     	ld (Imprime),a
 746+ 9658 EB           	ex de,hl
 747+ 9659 22 5E 96     	ld (Imprime+1),hl
 748+ 965C EB           	ex de,hl
 749+ 965D
 750+ 965D              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 965D
 752+ 965D 00 00 00     Imprime db 0,0,0
 753+ 9660
 754+ 9660 ED 73 14 89  	ld (Stack),sp
 755+ 9664
 756+ 9664 3A 0F 89     	ld a,(Numero_de_malotes)
 757+ 9667 3D           	dec a
 758+ 9668 28 09        	jr z,1F
 759+ 966A 32 0F 89      	ld (Numero_de_malotes),a
 760+ 966D
 761+ 966D ED 7B 16 89  	ld sp,(Stack_2)
 762+ 9671 18 D4        	jr 2B
 763+ 9673
 764+ 9673 AF           1 xor a
 765+ 9674 32 16 89     	ld (Stack_2),a
 766+ 9677
 767+ 9677 C9           	ret
 768+ 9678
 769+ 9678              ; -----------------------------------------------------------------------------------
 770+ 9678              ;
 771+ 9678              ;	28/2/23
 772+ 9678              ;
 773+ 9678              ;	Pinta los disparos generados.
 774+ 9678
 775+ 9678              Extrae_foto_disparos
 776+ 9678
 777+ 9678 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 967B 7E               ld a,(hl)
 779+ 967C A7               and a
 780+ 967D C8               ret z
 781+ 967E
 782+ 967E 3A 3E 89     	ld a,(Numero_de_disparotes)
 783+ 9681 A7           	and a
 784+ 9682 C8           	ret z
 785+ 9683 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9687 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 968A
 788+ 968A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 968C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 968D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 968E
 792+ 968E ED 73 16 89  	ld (Stack_2),sp
 793+ 9692 ED 7B 14 89  	ld sp,(Stack)
 794+ 9696
 795+ 9696              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 9696
 797+ 9696 3E CD        	ld a,$cd
 798+ 9698 32 A0 96     	ld (Imprime2),a
 799+ 969B EB           	ex de,hl
 800+ 969C 22 A1 96     	ld (Imprime2+1),hl
 801+ 969F EB           	ex de,hl
 802+ 96A0
 803+ 96A0              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96A0
 805+ 96A0 00 00 00     Imprime2 db 0,0,0
 806+ 96A3
 807+ 96A3 3A 3E 89     	ld a,(Numero_de_disparotes)
 808+ 96A6 3D           	dec a
 809+ 96A7 28 09        	jr z,1F
 810+ 96A9 32 3E 89      	ld (Numero_de_disparotes),a
 811+ 96AC
 812+ 96AC ED 7B 16 89  	ld sp,(Stack_2)
 813+ 96B0 18 D8        	jr 2B
 814+ 96B2
 815+ 96B2 AF           1 xor a
 816+ 96B3 32 16 89     	ld (Stack_2),a
 817+ 96B6 C9           	ret
 818+ 96B7
 819+ 96B7              ; -----------------------------------------------------------------------------------
 820+ 96B7              ;
 821+ 96B7              ;	4/9/23
 822+ 96B7              ;
 823+ 96B7              ;	Rutina principal de pintado de Amadeus.
 824+ 96B7              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96B7
 826+ 96B7 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96BA 7E           	ld a,(hl)
 828+ 96BB A7           	and a
 829+ 96BC C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96BD
 831+ 96BD 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96C0 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96C1 C8           	ret z
 834+ 96C2
 835+ 96C2              ; -----------------------------------
 836+ 96C2
 837+ 96C2 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96C6 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96C9
 840+ 96C9 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96CB E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96CC D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96CD
 844+ 96CD ED 73 16 89  	ld (Stack_2),sp
 845+ 96D1 ED 7B 14 89  	ld sp,(Stack)
 846+ 96D5
 847+ 96D5              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96D5
 849+ 96D5 3E CD        	ld a,$cd
 850+ 96D7 32 DF 96     	ld (Imprime_Amadeus),a
 851+ 96DA EB           	ex de,hl
 852+ 96DB 22 E0 96     	ld (Imprime_Amadeus+1),hl
 853+ 96DE EB           	ex de,hl
 854+ 96DF
 855+ 96DF              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96DF
 857+ 96DF 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96E2
 859+ 96E2 ED 73 14 89  	ld (Stack),sp
 860+ 96E6
 861+ 96E6 3A 0F 89     	ld a,(Numero_de_malotes)
 862+ 96E9 3D           	dec a
 863+ 96EA 28 09        	jr z,1F
 864+ 96EC 32 0F 89      	ld (Numero_de_malotes),a
 865+ 96EF
 866+ 96EF ED 7B 16 89  	ld sp,(Stack_2)
 867+ 96F3 18 D4        	jr 2B
 868+ 96F5
 869+ 96F5 AF           1 xor a
 870+ 96F6 32 16 89     	ld (Stack_2),a
 871+ 96F9
 872+ 96F9 C9           	ret
# file closed: Draw_XOR.asm
1636  96FA              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96FA              ;   índices de Rutinas de impresión.
   2+ 96FA
   3+ 96FA 0A 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96FC 37 97            defw Pinta_Amadeus_3x2
   5+ 96FE
   6+ 96FE 8D 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9700 2D 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9702 E1 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9704
  10+ 9704 B7 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9706 BB 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9708 6F 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 970A
  14+ 970A
  15+ 970A              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 970A              ;
  17+ 970A              ;   12/12/22
  18+ 970A              ;
  19+ 970A              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 970A              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 970A              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 970A              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 970A              ;
  24+ 970A              ;   Modifica: DE y HL.
  25+ 970A
  26+ 970A ED 73 14 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 970E FD F9        	ld sp,iy
  28+ 9710 06 10            ld b,16
  29+ 9712 D1           1 pop de
  30+ 9713 7B               ld a,e
  31+ 9714 AE               xor (hl)
  32+ 9715 77           	ld (hl),a
  33+ 9716 23           	inc hl
  34+ 9717 7A               ld a,d
  35+ 9718 AE               xor (hl)
  36+ 9719 77           	ld (hl),a
  37+ 971A 2B           	dec hl
  38+ 971B 24           	inc h
  39+ 971C 7C               ld a,h
  40+ 971D E6 07            and 7
  41+ 971F 20 0A            jr nz,2F
  42+ 9721 7D               ld a,l
  43+ 9722 C6 20            add a,$20
  44+ 9724 6F               ld l,a
  45+ 9725 38 04            jr c,2F
  46+ 9727 7C               ld a,h
  47+ 9728 D6 08            sub 8
  48+ 972A 67               ld h,a
  49+ 972B 7C           2 ld a,h
  50+ 972C FE 58            cp $58
  51+ 972E 28 02            jr z,3F
  52+ 9730 10 E0            djnz 1B
  53+ 9732 ED 7B 14 89  3 ld sp,(Stack)
  54+ 9736 C9           	ret
  55+ 9737
  56+ 9737 ED 73 14 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 973B FD F9        	ld sp,iy
  58+ 973D 06 08            ld b,8
  59+ 973F D1           1 pop de
  60+ 9740 7B               ld a,e
  61+ 9741 AE               xor (hl)
  62+ 9742 77           	ld (hl),a
  63+ 9743 23           	inc hl
  64+ 9744 7A               ld a,d
  65+ 9745 AE               xor (hl)
  66+ 9746 77           	ld (hl),a
  67+ 9747 23           	inc hl
  68+ 9748 D1           	pop de
  69+ 9749 7B               ld a,e
  70+ 974A AE               xor (hl)
  71+ 974B 77           	ld (hl),a
  72+ 974C 2B           	dec hl
  73+ 974D 2B           	dec hl
  74+ 974E 24           	inc h
  75+ 974F 7C               ld a,h
  76+ 9750 E6 07            and 7
  77+ 9752 20 0A            jr nz,2F
  78+ 9754 7D               ld a,l
  79+ 9755 C6 20            add a,$20
  80+ 9757 6F               ld l,a
  81+ 9758 38 04            jr c,2F
  82+ 975A 7C               ld a,h
  83+ 975B D6 08            sub 8
  84+ 975D 67               ld h,a
  85+ 975E 7C           2 ld a,h
  86+ 975F FE 58            cp $58
  87+ 9761 28 25            jr z,4F
  88+ 9763 7A               ld a,d
  89+ 9764 AE               xor (hl)
  90+ 9765 77               ld (hl),a
  91+ 9766 D1           	pop de
  92+ 9767 23           	inc hl
  93+ 9768 7B               ld a,e
  94+ 9769 AE               xor (hl)
  95+ 976A 77           	ld (hl),a
  96+ 976B 23           	inc hl
  97+ 976C 7A               ld a,d
  98+ 976D AE               xor (hl)
  99+ 976E 77           	ld (hl),a
 100+ 976F 2B           	dec hl
 101+ 9770 2B           	dec hl
 102+ 9771 24           	inc h
 103+ 9772 7C               ld a,h
 104+ 9773 E6 07            and 7
 105+ 9775 20 0A            jr nz,3F
 106+ 9777 7D               ld a,l
 107+ 9778 C6 20            add a,$20
 108+ 977A 6F               ld l,a
 109+ 977B 38 04            jr c,3F
 110+ 977D 7C               ld a,h
 111+ 977E D6 08            sub 8
 112+ 9780 67               ld h,a
 113+ 9781 7C           3 ld a,h
 114+ 9782 FE 58            cp $58
 115+ 9784 28 02            jr z,4F
 116+ 9786 10 B7            djnz 1B
 117+ 9788 ED 7B 14 89  4 ld sp,(Stack)
 118+ 978C C9           	ret
 119+ 978D
 120+ 978D              ; ---------------------------------------------------
 121+ 978D
 122+ 978D ED 73 14 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9791 FD F9        	ld sp,iy
 124+ 9793
 125+ 9793              ; >>>
 126+ 9793
 127+ 9793 06 10            ld b,16
 128+ 9795 D1           1 pop de
 129+ 9796 7A           	ld a,d
 130+ 9797 AE           	xor (hl)
 131+ 9798 77           	ld (hl),a
 132+ 9799 24           	inc h
 133+ 979A 7C               ld a,h
 134+ 979B E6 07            and 7
 135+ 979D 20 0C            jr nz,2F
 136+ 979F 7D               ld a,l
 137+ 97A0 C6 20            add a,$20
 138+ 97A2 6F               ld l,a
 139+ 97A3 38 06            jr c,2F
 140+ 97A5 7C               ld a,h
 141+ 97A6 D6 08            sub 8
 142+ 97A8 67               ld h,a
 143+ 97A9 18 00            jr 2F
 144+ 97AB 7C           2 ld a,h
 145+ 97AC FE 58            cp $58
 146+ 97AE 28 02            jr z,3F
 147+ 97B0 10 E3            djnz 1B
 148+ 97B2 ED 7B 14 89  3 ld sp,(Stack)
 149+ 97B6 C9           	ret
 150+ 97B7
 151+ 97B7 ED 73 14 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97BB FD F9        	ld sp,iy
 153+ 97BD
 154+ 97BD              ; >>>
 155+ 97BD
 156+ 97BD 06 10            ld b,16
 157+ 97BF D1           1 pop de
 158+ 97C0 7B           	ld a,e
 159+ 97C1 AE           	xor (hl)
 160+ 97C2 77           	ld (hl),a
 161+ 97C3 24           	inc h
 162+ 97C4 7C               ld a,h
 163+ 97C5 E6 07            and 7
 164+ 97C7 20 0C            jr nz,2F
 165+ 97C9 7D               ld a,l
 166+ 97CA C6 20            add a,$20
 167+ 97CC 6F               ld l,a
 168+ 97CD 38 06            jr c,2F
 169+ 97CF 7C               ld a,h
 170+ 97D0 D6 08            sub 8
 171+ 97D2 67               ld h,a
 172+ 97D3 18 00            jr 2F
 173+ 97D5 7C           2 ld a,h
 174+ 97D6 FE 58            cp $58
 175+ 97D8 28 02            jr z,3F
 176+ 97DA 10 E3            djnz 1B
 177+ 97DC ED 7B 14 89  3 ld sp,(Stack)
 178+ 97E0 C9           	ret
 179+ 97E1
 180+ 97E1              ; ---------------------------------------------------
 181+ 97E1
 182+ 97E1 ED 73 14 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97E5 FD F9        	ld sp,iy
 184+ 97E7 06 08            ld b,8
 185+ 97E9 D1           1 pop de
 186+ 97EA 7A           	ld a,d
 187+ 97EB AE           	xor (hl)
 188+ 97EC 77           	ld (hl),a
 189+ 97ED 23           	inc hl
 190+ 97EE D1           	pop de
 191+ 97EF 7B           	ld a,e
 192+ 97F0 AE           	xor (hl)
 193+ 97F1 77           	ld (hl),a
 194+ 97F2 2B           	dec hl
 195+ 97F3 24            	inc h
 196+ 97F4 7C               ld a,h
 197+ 97F5 E6 07            and 7
 198+ 97F7 20 0A            jr nz,2F
 199+ 97F9 7D               ld a,l
 200+ 97FA C6 20            add a,$20
 201+ 97FC 6F               ld l,a
 202+ 97FD 38 04            jr c,2F
 203+ 97FF 7C               ld a,h
 204+ 9800 D6 08            sub 8
 205+ 9802 67               ld h,a
 206+ 9803 7C           2 ld a,h
 207+ 9804 FE 58            cp $58
 208+ 9806 28 20            jr z,4F
 209+ 9808 D1               pop de
 210+ 9809 7B           	ld a,e
 211+ 980A AE           	xor (hl)
 212+ 980B 77           	ld (hl),a
 213+ 980C 23           	inc hl
 214+ 980D 7A           	ld a,d
 215+ 980E AE           	xor (hl)
 216+ 980F 77           	ld (hl),a
 217+ 9810 2B           	dec hl
 218+ 9811 24           	inc h
 219+ 9812 7C               ld a,h
 220+ 9813 E6 07            and 7
 221+ 9815 20 0A            jr nz,3F
 222+ 9817 7D               ld a,l
 223+ 9818 C6 20            add a,$20
 224+ 981A 6F               ld l,a
 225+ 981B 38 04            jr c,3F
 226+ 981D 7C               ld a,h
 227+ 981E D6 08            sub 8
 228+ 9820 67               ld h,a
 229+ 9821 7C           3 ld a,h
 230+ 9822 FE 58            cp $58
 231+ 9824 28 02            jr z,4F
 232+ 9826 10 C1            djnz 1B
 233+ 9828 ED 7B 14 89  4 ld sp,(Stack)
 234+ 982C C9           	ret
 235+ 982D
 236+ 982D ED 73 14 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9831 FD F9        	ld sp,iy
 238+ 9833 06 08            ld b,8
 239+ 9835 D1           1 pop de
 240+ 9836 D1           	pop de
 241+ 9837 7B           	ld a,e
 242+ 9838 AE           	xor (hl)
 243+ 9839 77           	ld (hl),a
 244+ 983A 24            	inc h
 245+ 983B 7C               ld a,h
 246+ 983C E6 07            and 7
 247+ 983E 20 0A            jr nz,2F
 248+ 9840 7D               ld a,l
 249+ 9841 C6 20            add a,$20
 250+ 9843 6F               ld l,a
 251+ 9844 38 04            jr c,2F
 252+ 9846 7C               ld a,h
 253+ 9847 D6 08            sub 8
 254+ 9849 67               ld h,a
 255+ 984A 7C           2 ld a,h
 256+ 984B FE 58            cp $58
 257+ 984D 28 1B            jr z,4F
 258+ 984F D1               pop de
 259+ 9850 7A           	ld a,d
 260+ 9851 AE           	xor (hl)
 261+ 9852 77           	ld (hl),a
 262+ 9853 24           	inc h
 263+ 9854 7C               ld a,h
 264+ 9855 E6 07            and 7
 265+ 9857 20 0A            jr nz,3F
 266+ 9859 7D               ld a,l
 267+ 985A C6 20            add a,$20
 268+ 985C 6F               ld l,a
 269+ 985D 38 04            jr c,3F
 270+ 985F 7C               ld a,h
 271+ 9860 D6 08            sub 8
 272+ 9862 67               ld h,a
 273+ 9863 7C           3 ld a,h
 274+ 9864 FE 58            cp $58
 275+ 9866 28 02            jr z,4F
 276+ 9868 10 CB            djnz 1B
 277+ 986A ED 7B 14 89  4 ld sp,(Stack)
 278+ 986E C9           	ret
 279+ 986F
 280+ 986F ED 73 14 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9873 FD F9        	ld sp,iy
 282+ 9875 06 08            ld b,8
 283+ 9877 D1           1 pop de
 284+ 9878 7B           	ld a,e
 285+ 9879 AE           	xor (hl)
 286+ 987A 77           	ld (hl),a
 287+ 987B 23           	inc hl
 288+ 987C 7A           	ld a,d
 289+ 987D AE           	xor (hl)
 290+ 987E 77           	ld (hl),a
 291+ 987F 2B           	dec hl
 292+ 9880 24             	inc h
 293+ 9881 7C               ld a,h
 294+ 9882 E6 07            and 7
 295+ 9884 20 0A            jr nz,2F
 296+ 9886 7D               ld a,l
 297+ 9887 C6 20            add a,$20
 298+ 9889 6F               ld l,a
 299+ 988A 38 04            jr c,2F
 300+ 988C 7C               ld a,h
 301+ 988D D6 08            sub 8
 302+ 988F 67               ld h,a
 303+ 9890 7C           2 ld a,h
 304+ 9891 FE 58            cp $58
 305+ 9893 28 21            jr z,4F
 306+ 9895 D1               pop de
 307+ 9896 7A           	ld a,d
 308+ 9897 AE           	xor (hl)
 309+ 9898 77           	ld (hl),a
 310+ 9899 23           	inc hl
 311+ 989A D1               pop de
 312+ 989B 7B           	ld a,e
 313+ 989C AE           	xor (hl)
 314+ 989D 77           	ld (hl),a
 315+ 989E 2B           	dec hl
 316+ 989F 24           	inc h
 317+ 98A0 7C               ld a,h
 318+ 98A1 E6 07            and 7
 319+ 98A3 20 0A            jr nz,3F
 320+ 98A5 7D               ld a,l
 321+ 98A6 C6 20            add a,$20
 322+ 98A8 6F               ld l,a
 323+ 98A9 38 04            jr c,3F
 324+ 98AB 7C               ld a,h
 325+ 98AC D6 08            sub 8
 326+ 98AE 67               ld h,a
 327+ 98AF 7C           3 ld a,h
 328+ 98B0 FE 58            cp $58
 329+ 98B2 28 02            jr z,4F
 330+ 98B4 10 C1            djnz 1B
 331+ 98B6 ED 7B 14 89  4 ld sp,(Stack)
 332+ 98BA C9           	ret
 333+ 98BB
 334+ 98BB ED 73 14 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98BF FD F9        	ld sp,iy
 336+ 98C1 06 08            ld b,8
 337+ 98C3 D1           1 pop de
 338+ 98C4 7B           	ld a,e
 339+ 98C5 AE           	xor (hl)
 340+ 98C6 77           	ld (hl),a
 341+ 98C7 24            	inc h
 342+ 98C8 7C               ld a,h
 343+ 98C9 E6 07            and 7
 344+ 98CB 20 0A            jr nz,2F
 345+ 98CD 7D               ld a,l
 346+ 98CE C6 20            add a,$20
 347+ 98D0 6F               ld l,a
 348+ 98D1 38 04            jr c,2F
 349+ 98D3 7C               ld a,h
 350+ 98D4 D6 08            sub 8
 351+ 98D6 67               ld h,a
 352+ 98D7 7C           2 ld a,h
 353+ 98D8 FE 58            cp $58
 354+ 98DA 28 1C            jr z,4F
 355+ 98DC D1               pop de
 356+ 98DD 7A           	ld a,d
 357+ 98DE AE           	xor (hl)
 358+ 98DF 77           	ld (hl),a
 359+ 98E0 24           	inc h
 360+ 98E1 7C               ld a,h
 361+ 98E2 E6 07            and 7
 362+ 98E4 20 0A            jr nz,3F
 363+ 98E6 7D               ld a,l
 364+ 98E7 C6 20            add a,$20
 365+ 98E9 6F               ld l,a
 366+ 98EA 38 04            jr c,3F
 367+ 98EC 7C               ld a,h
 368+ 98ED D6 08            sub 8
 369+ 98EF 67               ld h,a
 370+ 98F0 7C           3 ld a,h
 371+ 98F1 FE 58            cp $58
 372+ 98F3 28 03            jr z,4F
 373+ 98F5 D1               pop de
 374+ 98F6 10 CB            djnz 1B
 375+ 98F8 ED 7B 14 89  4 ld sp,(Stack)
 376+ 98FC C9           	ret
 377+ 98FD
 378+ 98FD              ; ---------------------------------------------------
 379+ 98FD              ;
 380+ 98FD              ;   27/02/23
 381+ 98FD              ;
 382+ 98FD              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98FD              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98FD              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98FD
 386+ 98FD ED 73 14 89  Pinta_Disparo ld (Stack),sp
 387+ 9901 FD F9            ld sp,iy
 388+ 9903 06 03            ld b,3
 389+ 9905 D1           1 pop de
 390+ 9906 7B               ld a,e
 391+ 9907 AE               xor (hl)
 392+ 9908 77               ld (hl),a
 393+ 9909 23               inc hl
 394+ 990A 7A               ld a,d
 395+ 990B AE               xor (hl)
 396+ 990C 77               ld (hl),a
 397+ 990D 2B               dec hl
 398+ 990E
 399+ 990E 24               inc h
 400+ 990F 7C               ld a,h
 401+ 9910 E6 07            and 7
 402+ 9912 20 0A            jr nz,2F
 403+ 9914 7D               ld a,l
 404+ 9915 C6 20            add a,$20
 405+ 9917 6F               ld l,a
 406+ 9918 38 04            jr c,2F
 407+ 991A 7C               ld a,h
 408+ 991B D6 08            sub 8
 409+ 991D 67               ld h,a
 410+ 991E 7C           2 ld a,h
 411+ 991F FE 58            cp $58
 412+ 9921 28 02            jr z,3F
 413+ 9923
 414+ 9923 10 E0            djnz 1B
 415+ 9925 ED 7B 14 89  3 ld sp,(Stack)
 416+ 9929 C9               ret
 417+ 992A
# file closed: Rutinas_de_impresion_sprites.asm
1637  992A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 992A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 992A              ;
   3+ 992A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 992A              ;
   5+ 992A              ; *****************************************************************************************************************************************************************************************
   6+ 992A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 992A
   8+ 992A 7C           calcula_tercio ld a,h
   9+ 992B E6 18        	and $18
  10+ 992D CB 2F        	sra a
  11+ 992F CB 2F        	sra a
  12+ 9931 CB 2F        	sra a
  13+ 9933 C9           	ret
  14+ 9934
# file closed: calcula_tercio.asm
1638  9934              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9934              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9934              ;
   3+ 9934              ;
   4+ 9934              ;	CLS.
   5+ 9934              ;
   6+ 9934              ;	Limpia la pantalla y define sus atributos.
   7+ 9934              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9934              ;
   9+ 9934              ;	COLORES: 0 ..... NEGRO
  10+ 9934              ;    		 1 ..... AZUL
  11+ 9934              ; 			 2 ..... ROJO
  12+ 9934              ;			 3 ..... MAGENTA
  13+ 9934              ; 			 4 ..... VERDE
  14+ 9934              ; 			 5 ..... CIAN
  15+ 9934              ;			 6 ..... AMARILLO
  16+ 9934              ; 			 7 ..... BLANCO
  17+ 9934              ;
  18+ 9934              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9934              ;
  20+ 9934              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9934
  22+ 9934
  23+ 9934 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9937 11 01 40     	LD DE,$4001
  25+ 993A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 993D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 993F ED B0        	LDIR
  28+ 9941 01 FF 02     	LD BC,767
  29+ 9944 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9945 ED B0        	LDIR
  31+ 9947 C9           	ret
  32+ 9948
# file closed: Cls.asm
1639  9948              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9948              ; ******************************************************************************************************************************************************************************************
   2+ 9948              ;
   3+ 9948              ;   20/05/23
   4+ 9948              ;
   5+ 9948              ;	Recompone_posicion_inicio
   6+ 9948              ;
   7+ 9948              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9948              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9948              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9948              ;	_ a una u otra rutina.
  11+ 9948
  12+ 9948              Recompone_posicion_inicio
  13+ 9948
  14+ 9948 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 994B 7D           	ld a,l
  16+ 994C E6 1F        	and $1f
  17+ 994E 28 16        	jr z,1F
  18+ 9950
  19+ 9950 FE 1F        	cp $1f
  20+ 9952 28 0D        	jr z,3F
  21+ 9954
  22+ 9954 21 01 89     	ld hl,Ctrl_2
  23+ 9957 CB C6        	set 0,(hl)
  24+ 9959 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 995C 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 995F 18 08        	jr 2F
  27+ 9961
  28+ 9961 CD 02 9B     3 call Mov_left
  29+ 9964 18 03        	jr 2F
  30+ 9966
  31+ 9966 CD E4 99     1 call Mov_right
  32+ 9969 21 00 F0     2 ld hl,Sprite_vacio
  33+ 996C 22 CA 88     	ld (Puntero_objeto),hl
  34+ 996F C9           	ret
  35+ 9970
  36+ 9970              ; ******************************************************************************************************************************************************************************************
  37+ 9970              ;
  38+ 9970              ;   27/05/23
  39+ 9970              ;
  40+ 9970              ;	Mov_down
  41+ 9970              ;
  42+ 9970              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9970              ;
  44+ 9970              ;
  45+ 9970              Mov_down
  46+ 9970
  47+ 9970 CD D2 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9973              ;																	; _ repone (Puntero_objeto).
  49+ 9973 21 F0 88     	ld hl,Ctrl_0
  50+ 9976 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9978              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9978              ; 																	; _ en el caso de que no lo haya.
  53+ 9978 3A DE 88     	ld a,(Vel_down)
  54+ 997B 47           	ld b,a
  55+ 997C 2A C8 88         ld hl,(Posicion_actual)
  56+ 997F CD 2A 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9982 E6 02        	and 2
  58+ 9984 28 0F        	jr z,1F
  59+ 9986
  60+ 9986              ; Nos encontramos en el último tercio de pantalla.
  61+ 9986              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9986
  63+ 9986 7C           	ld a,h
  64+ 9987 FE 57        	cp $57
  65+ 9989 20 0A        	jr nz,1F
  66+ 998B
  67+ 998B 7D           	ld a,l
  68+ 998C C6 20        	add $20
  69+ 998E 30 05        	jr nc,1F
  70+ 9990
  71+ 9990              ; ------------------------------
  72+ 9990              ;	call Reaparece_arriba
  73+ 9990 CD 8F 9C     	call Reinicio
  74+ 9993              ; ------------------------------
  75+ 9993
  76+ 9993 18 08        	jr 3F
  77+ 9995 CD 17 96     1 call NextScan
  78+ 9998 22 C8 88     	ld (Posicion_actual),hl
  79+ 999B 10 E2            djnz 2B
  80+ 999D CD B5 9C     3 call Genera_coordenadas
  81+ 99A0 C9           	ret
  82+ 99A1
  83+ 99A1              ; ******************************************************************************************************************************************************************************************
  84+ 99A1              ;
  85+ 99A1              ;   27/05/23
  86+ 99A1              ;
  87+ 99A1              ;	Mov_up
  88+ 99A1              ;
  89+ 99A1              ; 	Mueve el Sprite hacia arriba.
  90+ 99A1              ;
  91+ 99A1              ;
  92+ 99A1              Mov_up
  93+ 99A1
  94+ 99A1 CD D2 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99A4              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99A4 21 F0 88     	ld hl,Ctrl_0
  97+ 99A7 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99A9              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99A9              ; 																		; _ en el caso de que no lo haya.
 100+ 99A9 3A DD 88     	ld a,(Vel_up)
 101+ 99AC 47           	ld b,a
 102+ 99AD 2A C8 88     	ld hl,(Posicion_actual)
 103+ 99B0 CD 2A 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99B3 A7           	and a
 105+ 99B4 20 10        	jr nz,1F
 106+ 99B6
 107+ 99B6              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99B6              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99B6
 110+ 99B6 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99B7 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99B9 20 0B            jr nz,1F
 113+ 99BB 7D               ld a,l
 114+ 99BC D6 20            sub $20
 115+ 99BE 30 06            jr nc,1F
 116+ 99C0 25               dec h
 117+ 99C1
 118+ 99C1              ; -----------------------------
 119+ 99C1 CD 70 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99C4              ;	call Reinicio
 121+ 99C4              ; -----------------------------
 122+ 99C4
 123+ 99C4 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99C6 CD 26 96     1 call PreviousScan
 125+ 99C9 22 C8 88     	ld (Posicion_actual),hl
 126+ 99CC 10 E2            djnz 3B
 127+ 99CE CD B5 9C     2 call Genera_coordenadas
 128+ 99D1 C9           	ret
 129+ 99D2
 130+ 99D2              ; -----------------------------
 131+ 99D2              ;
 132+ 99D2              ;	27/5/23
 133+ 99D2              ;
 134+ 99D2              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99D2              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99D2              ;
 137+ 99D2              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99D2              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99D2              ;
 140+ 99D2              ;	Modifica: A y (Puntero_objeto).
 141+ 99D2
 142+ 99D2 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99D5 CB 47        	bit 0,a
 144+ 99D7 C8           	ret z
 145+ 99D8 CB 87        	res 0,a
 146+ 99DA 32 01 89     	ld (Ctrl_2),a
 147+ 99DD 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 99E0 22 CA 88     	ld (Puntero_objeto),hl
 149+ 99E3 C9           	ret
 150+ 99E4
 151+ 99E4              ; ******************************************************************************************************************************************************************************************
 152+ 99E4              ;
 153+ 99E4              ;	19/10/22
 154+ 99E4              ;
 155+ 99E4              ;	Mov_right.
 156+ 99E4              ;
 157+ 99E4              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99E4              ;
 159+ 99E4
 160+ 99E4 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 99E7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99E9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99E9              ; 																	; _ en el caso de que no lo haya.
 164+ 99E9 3A F0 88     	ld a,(Ctrl_0)
 165+ 99EC CB 77        	bit 6,a
 166+ 99EE 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99F0
 168+ 99F0 CD 1E 9C     	call Stop_Amadeus_right
 169+ 99F3 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99F4 18 4D        	jr 8F
 171+ 99F6
 172+ 99F6 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99F9 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99FB 20 46        	jr nz,8F
 175+ 99FD
 176+ 99FD 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A00 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A01 28 40        	jr z,8F
 179+ 9A03
 180+ 9A03              ; ---------- ---------- ----------
 181+ 9A03              ;
 182+ 9A03              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A03
 184+ 9A03 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A06 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A08 28 11        	jr z,1F
 187+ 9A0A 38 06        	jr c,6F
 188+ 9A0C FE 04        	cp 4
 189+ 9A0E 28 14        	jr z,7F
 190+ 9A10 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A12
 192+ 9A12              ; ---------- ---------- ----------
 193+ 9A12              ;
 194+ 9A12              ; Perfiles de velocidad
 195+ 9A12              ;
 196+ 9A12
 197+ 9A12 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A15 FE FE        	cp $fe
 199+ 9A17 20 2A        	jr nz,8F
 200+ 9A19 18 10        	jr 3F
 201+ 9A1B 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A1E FE FD        	cp $fd
 203+ 9A20 20 21        	jr nz,8F
 204+ 9A22 18 07        	jr 3F
 205+ 9A24 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A27 FE FB        	cp $fb
 207+ 9A29 20 18        	jr nz,8F
 208+ 9A2B
 209+ 9A2B              ; ---------- ---------- ----------
 210+ 9A2B
 211+ 9A2B              3
 212+ 9A2B CD 5E 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A2E              ;	call Reinicio
 214+ 9A2E
 215+ 9A2E              ; ---------- ---------- ----------
 216+ 9A2E              ;
 217+ 9A2E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A2E
 219+ 9A2E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A30 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A31 CD 4A 9A     	call DESPLZ_DER
 222+ 9A34 C1           	pop bc
 223+ 9A35 10 F9        	djnz 5B
 224+ 9A37 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A3A 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A3B 22 C8 88     	ld (Posicion_actual),hl
 227+ 9A3E CD B5 9C     	call Genera_coordenadas
 228+ 9A41 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A43
 230+ 9A43              ; ---------- ---------- ----------
 231+ 9A43
 232+ 9A43 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9A46 CD 4A 9A     	call DESPLZ_DER
 234+ 9A49 C9           2 ret
 235+ 9A4A
 236+ 9A4A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A4A              ;
 238+ 9A4A              ;	22/9/22
 239+ 9A4A              ;
 240+ 9A4A
 241+ 9A4A CD 59 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A4D CD A5 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A50 CD CE 9A         call Ciclo_completo
 244+ 9A53 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A56 CB FE        	set 7,(hl)
 246+ 9A58 C9           	ret
 247+ 9A59
 248+ 9A59              ; ******************************************************************************************************************************************************************************************
 249+ 9A59              ;	15/02/23
 250+ 9A59              ;
 251+ 9A59
 252+ 9A59 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A5C 47           	ld b,a
 254+ 9A5D 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A60 23           1 inc hl
 256+ 9A61 23           	inc hl
 257+ 9A62 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A64 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A67 CD 80 8C     	call Extrae_address
 260+ 9A6A 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9A6D
 262+ 9A6D              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A6D
 264+ 9A6D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A6D              ; Cuántos movimientos hemos hecho ??
 266+ 9A6D              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A6D
 268+ 9A6D 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A70 EB           	ex de,hl
 270+ 9A71 A7           	and a
 271+ 9A72 ED 52        	sbc hl,de
 272+ 9A74 CB 3D        	srl l
 273+ 9A76 3E 08        6 ld a,8
 274+ 9A78 95           	sub l
 275+ 9A79 30 1E        	jr nc,3F
 276+ 9A7B
 277+ 9A7B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A7B              ; B="0".
 279+ 9A7B
 280+ 9A7B 04           4 inc b
 281+ 9A7C 3C           	inc a
 282+ 9A7D 20 FC        	jr nz,4B
 283+ 9A7F 78           	ld a,b
 284+ 9A80 08           	ex af,af
 285+ 9A81 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9A84 23           5 inc hl
 287+ 9A85 23           	inc hl
 288+ 9A86 10 FC        	djnz 5B
 289+ 9A88 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A8B CD 80 8C     	call Extrae_address
 291+ 9A8E 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9A91
 293+ 9A91              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A91              ; _(Posicion_actual).
 295+ 9A91
 296+ 9A91 21 C8 88     	ld hl,Posicion_actual
 297+ 9A94 34           	inc (hl)
 298+ 9A95 08               ex af,af
 299+ 9A96 6F           	ld l,a
 300+ 9A97 18 DD        	jr 6B
 301+ 9A99
 302+ 9A99              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A99
 304+ 9A99 47           3 ld b,a
 305+ 9A9A 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A9D 23           2 inc hl
 307+ 9A9E 23           	inc hl
 308+ 9A9F 10 FC        	djnz 2B
 309+ 9AA1 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AA4 C9           8 ret
 311+ 9AA5
 312+ 9AA5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AA5              ;
 314+ 9AA5              ;	24/7/22
 315+ 9AA5              ;
 316+ 9AA5              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AA5              ;
 318+ 9AA5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AA5              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AA5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AA5
 322+ 9AA5 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AA8 A7           	and a
 324+ 9AA9 20 1F        	jr nz,1F
 325+ 9AAB D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AAD 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9AB0
 328+ 9AB0 21 C7 88     	ld hl,Columns
 329+ 9AB3 34           	inc (hl)
 330+ 9AB4 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9AB7 E6 01        	and 1
 332+ 9AB9 28 0F        	jr z,1F
 333+ 9ABB 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9ABE 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9ABF 22 C8 88     	ld (Posicion_actual),hl
 336+ 9AC2 CD B5 9C     	call Genera_coordenadas
 337+ 9AC5 CD 2A 9C     	call Inc_CTRL_DESPLZ
 338+ 9AC8 18 03        	jr 2F
 339+ 9ACA CD 2A 9C     1 call Inc_CTRL_DESPLZ
 340+ 9ACD C9           2 ret
 341+ 9ACE
 342+ 9ACE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9ACE              ;
 344+ 9ACE              ;	24/7/22
 345+ 9ACE              ;
 346+ 9ACE              ;	Ciclo_completo.
 347+ 9ACE              ;
 348+ 9ACE              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9ACE              ;
 350+ 9ACE              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9ACE              ; 	Decrementamos (Columns).
 352+ 9ACE              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9ACE              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9ACE
 355+ 9ACE
 356+ 9ACE 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AD1 FE FF        	cp $ff
 358+ 9AD3 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AD5 E6 F0        	and $f0
 360+ 9AD7 20 28        	jr nz,3F
 361+ 9AD9
 362+ 9AD9              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AD9
 364+ 9AD9 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9ADC 47           	ld b,a
 366+ 9ADD 3E F8        	ld a,$f8
 367+ 9ADF 80           	add b
 368+ 9AE0 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9AE3 18 1C        	jr 3F
 370+ 9AE5 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AE8 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AE9 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AEA 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9AED 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AF0 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AF2 20 0A        	jr nz,2F
 377+ 9AF4 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AF7 23           	inc hl
 379+ 9AF8 22 C8 88     	ld (Posicion_actual),hl
 380+ 9AFB CD B5 9C     	call Genera_coordenadas
 381+ 9AFE
 382+ 9AFE              ; Inicia el puntero de Sprite.
 383+ 9AFE
 384+ 9AFE CD 97 8C     2 call Inicia_puntero_objeto_der
 385+ 9B01 C9           3 ret
 386+ 9B02
 387+ 9B02              ; ******************************************************************************************************************************************************************************************
 388+ 9B02              ;
 389+ 9B02              ;	15/02/23
 390+ 9B02              ;
 391+ 9B02              ;	Mov_left.
 392+ 9B02              ;
 393+ 9B02              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B02              ;
 395+ 9B02              Mov_left
 396+ 9B02
 397+ 9B02 21 F0 88     	ld hl,Ctrl_0
 398+ 9B05 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B07              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B07              ; 																	; _ en el caso de que no lo haya.
 401+ 9B07 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B0A CB 77        	bit 6,a
 403+ 9B0C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B0E
 405+ 9B0E CD 24 9C     	call Stop_Amadeus_left
 406+ 9B11 C8           	ret z
 407+ 9B12 20 4A        	jr nz,8F
 408+ 9B14
 409+ 9B14 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B17 A7           	and a
 411+ 9B18 20 44        	jr nz,8F
 412+ 9B1A
 413+ 9B1A 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B1D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B1E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B20
 417+ 9B20              ; ---------- ---------- ----------
 418+ 9B20
 419+ 9B20 3A DB 88     	ld a,(Vel_left)
 420+ 9B23 FE 02        	cp 2
 421+ 9B25 28 0F        	jr z,1F
 422+ 9B27 38 04        	jr c,6F
 423+ 9B29 FE 04        	cp 4
 424+ 9B2B 28 12        	jr z,7F
 425+ 9B2D
 426+ 9B2D              ; ---------- ---------- ----------
 427+ 9B2D
 428+ 9B2D 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B30 FE F8        	cp $f8
 430+ 9B32 20 2A        	jr nz,8F
 431+ 9B34 18 10        	jr 4F
 432+ 9B36 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B39 FE F9        	cp $f9
 434+ 9B3B 20 21        	jr nz,8F
 435+ 9B3D 18 07        	jr 4F
 436+ 9B3F 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B42 FE FB        	cp $fb
 438+ 9B44 20 18        	jr nz,8F
 439+ 9B46
 440+ 9B46              ; ---------- ---------- ----------
 441+ 9B46
 442+ 9B46              4
 443+ 9B46 CD 4C 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B49              ;	call Reinicio
 445+ 9B49
 446+ 9B49              ; ---------- ---------- ----------
 447+ 9B49
 448+ 9B49 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B4B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B4C
 451+ 9B4C              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B4C              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B4C
 454+ 9B4C CD 65 9B     	call DESPLZ_IZQ
 455+ 9B4F C1           	pop bc
 456+ 9B50 10 F9        	djnz 5B
 457+ 9B52 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B55 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B56 22 C8 88     	ld (Posicion_actual),hl
 460+ 9B59 CD B5 9C     	call Genera_coordenadas
 461+ 9B5C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B5E
 463+ 9B5E              ; ---------- ---------- ----------
 464+ 9B5E
 465+ 9B5E              ; Movemos, no hay recolocación.
 466+ 9B5E
 467+ 9B5E 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9B61 CD 65 9B     	call DESPLZ_IZQ
 469+ 9B64 C9           2 ret
 470+ 9B65
 471+ 9B65              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B65              ;
 473+ 9B65              ;	22/9/22
 474+ 9B65
 475+ 9B65              DESPLZ_IZQ
 476+ 9B65
 477+ 9B65 CD 74 9B     	call Desplaza_izquierda
 478+ 9B68 CD C0 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B6B CD E8 9B     	call Ciclo_completo_2
 480+ 9B6E 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B71 CB BE        	res 7,(hl)
 482+ 9B73 C9           	ret
 483+ 9B74
 484+ 9B74              Desplaza_izquierda
 485+ 9B74
 486+ 9B74 3A DB 88     	ld a,(Vel_left)
 487+ 9B77 47           	ld b,a
 488+ 9B78 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B7B 23           1 inc hl
 490+ 9B7C 23           	inc hl
 491+ 9B7D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B7F 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B82 CD 80 8C     	call Extrae_address
 494+ 9B85 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9B88
 496+ 9B88              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B88
 498+ 9B88              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B88              ; Cuántos movimientos hemos hecho ??
 500+ 9B88              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B88
 502+ 9B88 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B8B EB           	ex de,hl
 504+ 9B8C A7           	and a
 505+ 9B8D ED 52        	sbc hl,de
 506+ 9B8F CB 3D        	srl l
 507+ 9B91 3E 08        6 ld a,8
 508+ 9B93 95           	sub l
 509+ 9B94 30 1E        	jr nc,3F
 510+ 9B96
 511+ 9B96              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B96              ; B="0".
 513+ 9B96
 514+ 9B96 04           4 inc b
 515+ 9B97 3C           	inc a
 516+ 9B98 20 FC        	jr nz,4B
 517+ 9B9A 78           	ld a,b
 518+ 9B9B 08           	ex af,af
 519+ 9B9C 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B9F 23           5 inc hl
 521+ 9BA0 23           	inc hl
 522+ 9BA1 10 FC        	djnz 5B
 523+ 9BA3 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BA6 CD 80 8C     	call Extrae_address
 525+ 9BA9 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9BAC
 527+ 9BAC              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BAC              ; _(Posicion_actual).
 529+ 9BAC
 530+ 9BAC 21 C8 88     	ld hl,Posicion_actual
 531+ 9BAF 35           	dec (hl)
 532+ 9BB0 08           	ex af,af
 533+ 9BB1 6F           	ld l,a
 534+ 9BB2 18 DD        	jr 6B
 535+ 9BB4
 536+ 9BB4              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BB4
 538+ 9BB4 47           3 ld b,a
 539+ 9BB5 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9BB8 23           2 inc hl
 541+ 9BB9 23           	inc hl
 542+ 9BBA 10 FC        	djnz 2B
 543+ 9BBC 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BBF C9           8 ret
 545+ 9BC0
 546+ 9BC0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BC0              ;
 548+ 9BC0              ;	modifica_parametros_1er_DESPLZ
 549+ 9BC0              ;
 550+ 9BC0              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BC0              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BC0              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BC0
 554+ 9BC0 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BC3 A7           	and a
 556+ 9BC4 20 1E        	jr nz,1F
 557+ 9BC6 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BC7 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9BCA 21 C7 88     	ld hl,Columns
 560+ 9BCD 34           	inc (hl)
 561+ 9BCE 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9BD1 E6 01        	and 1
 563+ 9BD3 20 0F        	jr nz,1F
 564+ 9BD5 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BD8 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BD9 22 C8 88     	ld (Posicion_actual),hl
 567+ 9BDC CD B5 9C     	call Genera_coordenadas
 568+ 9BDF CD 3B 9C     	call Dec_CTRL_DESPLZ
 569+ 9BE2 18 03        	jr 2F
 570+ 9BE4 CD 3B 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BE7 C9           2 ret
 572+ 9BE8
 573+ 9BE8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BE8
 575+ 9BE8 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BEB FE F7        	cp $f7
 577+ 9BED 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BEF 30 2C        	jr nc,3F
 579+ 9BF1
 580+ 9BF1              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BF1
 582+ 9BF1 06 00        	ld b,0
 583+ 9BF3 04           4 inc b
 584+ 9BF4 3C           	inc a
 585+ 9BF5 FE F7        	cp $f7
 586+ 9BF7 20 FA        	jr nz,4B
 587+ 9BF9 3E FF        	ld a,$ff
 588+ 9BFB 90           	sub b
 589+ 9BFC 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9BFF 18 1C        	jr 3F
 591+ 9C01
 592+ 9C01              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C01
 594+ 9C01 21 C7 88     1 ld hl,Columns
 595+ 9C04 35           	dec (hl)
 596+ 9C05 AF           	xor a
 597+ 9C06 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C09 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C0C E6 01        	and 1
 600+ 9C0E 28 0A        	jr z,2F
 601+ 9C10 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C13 2B           	dec hl
 603+ 9C14 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C17 CD B5 9C     	call Genera_coordenadas
 605+ 9C1A
 606+ 9C1A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C1A
 608+ 9C1A CD AA 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C1D C9           3 ret
 610+ 9C1E
 611+ 9C1E              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C1E              ;
 613+ 9C1E              ;	19/10/22
 614+ 9C1E              ;
 615+ 9C1E              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C1E              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C1E
 618+ 9C1E 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C21 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C23 C9           	ret
 621+ 9C24
 622+ 9C24              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C24              ;
 624+ 9C24              ;	19/10/22
 625+ 9C24              ;
 626+ 9C24              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C24              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C24
 629+ 9C24 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C27 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C29 C9           	ret
 632+ 9C2A
 633+ 9C2A              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C2A              ;
 635+ 9C2A              ;	24/7/22
 636+ 9C2A              ;
 637+ 9C2A              ;	Inc_CTRL_DESPLZ
 638+ 9C2A              ;
 639+ 9C2A              ;
 640+ 9C2A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C2A
 642+ 9C2A 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C2D 3A DC 88     	ld a,(Vel_right)
 644+ 9C30 A7           	and a
 645+ 9C31 28 06        	jr z,1F
 646+ 9C33 47           	ld b,a
 647+ 9C34 34           3 inc (hl)
 648+ 9C35 10 FD        	djnz 3B
 649+ 9C37 18 01        	jr 2F
 650+ 9C39 34           1 inc (hl)
 651+ 9C3A C9           2 ret
 652+ 9C3B
 653+ 9C3B              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C3B              ;
 655+ 9C3B              ;	5/2/23
 656+ 9C3B              ;
 657+ 9C3B              ;	Dec_CTRL_DESPLZ
 658+ 9C3B              ;
 659+ 9C3B              ;
 660+ 9C3B              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C3B
 662+ 9C3B 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C3E 3A DB 88     	ld a,(Vel_left)
 664+ 9C41 A7           	and a
 665+ 9C42 28 06        	jr z,1F
 666+ 9C44 47           	ld b,a
 667+ 9C45 35           3 dec (hl)
 668+ 9C46 10 FD        	djnz 3B
 669+ 9C48 18 01        	jr 2F
 670+ 9C4A 35           1 dec (hl)
 671+ 9C4B C9           2 ret
 672+ 9C4C
 673+ 9C4C              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C4C
 675+ 9C4C 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C4F 01 1F 00     	ld bc,31
 677+ 9C52 A7           	and a
 678+ 9C53 ED 4A        	adc hl,bc
 679+ 9C55 22 C8 88     	ld (Posicion_actual),hl
 680+ 9C58 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C5B CB C6        	set 0,(hl)
 682+ 9C5D C9           	ret
 683+ 9C5E
 684+ 9C5E              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C5E
 686+ 9C5E 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C61 01 1F 00     	ld bc,31
 688+ 9C64 A7           	and a
 689+ 9C65 ED 42        	sbc hl,bc
 690+ 9C67 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C6A 21 F0 88     	ld hl,Ctrl_0
 692+ 9C6D CB CE        	set 1,(hl)
 693+ 9C6F C9           	ret
 694+ 9C70
 695+ 9C70              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C70
 697+ 9C70 24           Reaparece_abajo inc h
 698+ 9C71 01 E0 17     	ld bc,$17e0
 699+ 9C74 A7           	and a
 700+ 9C75 ED 4A        	adc hl,bc
 701+ 9C77 22 C8 88     	ld (Posicion_actual),hl
 702+ 9C7A 21 F0 88     	ld hl,Ctrl_0
 703+ 9C7D CB D6        	set 2,(hl)
 704+ 9C7F C9           	ret
 705+ 9C80
 706+ 9C80              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C80
 708+ 9C80 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C83 A7           	and a
 710+ 9C84 ED 42        	sbc hl,bc
 711+ 9C86 22 C8 88     	ld (Posicion_actual),hl
 712+ 9C89 21 F0 88     	ld hl,Ctrl_0
 713+ 9C8C CB DE        	set 3,(hl)
 714+ 9C8E C9           	ret
 715+ 9C8F
 716+ 9C8F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C8F              ;
 718+ 9C8F              ;	15/07/23
 719+ 9C8F
 720+ 9C8F              Reinicio
 721+ 9C8F
 722+ 9C8F              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C8F
 724+ 9C8F AF           	xor a
 725+ 9C90 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C93 CD B1 9C     	call Limpia_contenido_hl
 727+ 9C96
 728+ 9C96 21 C8 88     	ld hl,Posicion_actual
 729+ 9C99 CD B1 9C     	call Limpia_contenido_hl
 730+ 9C9C
 731+ 9C9C CD E1 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C9F CD 6B 9F     	call Inicia_Puntero_mov
 733+ 9CA2
 734+ 9CA2 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9CA5 06 05        	ld b,5
 736+ 9CA7 77           1 ld (hl),a
 737+ 9CA8 23           	inc hl
 738+ 9CA9 10 FC        	djnz 1B
 739+ 9CAB
 740+ 9CAB 21 01 89     	ld hl,Ctrl_2
 741+ 9CAE CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CB0
 743+ 9CB0 C9           	ret
 744+ 9CB1
 745+ 9CB1 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CB2 23           	inc hl
 747+ 9CB3 77           	ld (hl),a
 748+ 9CB4 C9           	ret
 749+ 9CB5
 750+ 9CB5
# file closed: Direcciones.asm
1640  9CB5              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CB5              ; ------------------------------------------------------------------------
   2+ 9CB5              ;
   3+ 9CB5              ;	02/04/23
   4+ 9CB5              ;
   5+ 9CB5              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CB5              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CB5              ;
   8+ 9CB5              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CB5              ;
  10+ 9CB5              ;	Modifica: A,BC y DE.
  11+ 9CB5
  12+ 9CB5 C5           Genera_coordenadas push bc
  13+ 9CB6 E5           	push hl
  14+ 9CB7 D5           	push de
  15+ 9CB8
  16+ 9CB8 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9CBB
  18+ 9CBB 7D           	ld a,l
  19+ 9CBC E6 1F        	and $1f
  20+ 9CBE 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CC1
  22+ 9CC1 CD 2A 99     	call calcula_tercio
  23+ 9CC4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CC5
  25+ 9CC5 1E 00        	ld e,0
  26+ 9CC7 7D           	ld a,l
  27+ 9CC8 E6 E0        	and $e0
  28+ 9CCA 28 01        	jr z,1F
  29+ 9CCC 04           	inc b
  30+ 9CCD
  31+ 9CCD 04           1 inc b
  32+ 9CCE 05           	dec b
  33+ 9CCF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CD1              ;														; _ , salimos.
  35+ 9CD1 1C           3 inc e
  36+ 9CD2 D6 20        	sub 32
  37+ 9CD4 20 FB        	jr nz,3B
  38+ 9CD6 10 F5        	djnz 1B
  39+ 9CD8
  40+ 9CD8 7B           2 ld a,e
  41+ 9CD9 32 CD 88     	ld (Coordenada_y),a
  42+ 9CDC
  43+ 9CDC D1           	pop de
  44+ 9CDD E1           	pop hl
  45+ 9CDE C1           	pop bc
  46+ 9CDF
  47+ 9CDF C9           	ret
  48+ 9CE0
  49+ 9CE0              ; ------------------------------------------------------------------------
  50+ 9CE0              ;	28/05/23
  51+ 9CE0              ;
  52+ 9CE0              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CE0              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CE0              ;
  55+ 9CE0              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CE0              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CE0              ;
  58+ 9CE0              ;		DE="$120d"
  59+ 9CE0              ;
  60+ 9CE0              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CE0              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CE0              ;
  63+ 9CE0              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CE0
  65+ 9CE0              ;	Modifica: A,BC y DE.
  66+ 9CE0
  67+ 9CE0
  68+ 9CE0              Genera_coordenadas_disparo
  69+ 9CE0
  70+ 9CE0              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CE0
  72+ 9CE0 7D           	ld a,l
  73+ 9CE1 E6 1F        	and $1f
  74+ 9CE3 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CE4 CD 2A 99     	call calcula_tercio
  76+ 9CE7 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CE8 1E 00        	ld e,0
  78+ 9CEA 7D           	ld a,l
  79+ 9CEB E6 E0        	and $e0
  80+ 9CED 28 01        	jr z,1F
  81+ 9CEF 04           	inc b
  82+ 9CF0 1C           1 inc e
  83+ 9CF1 D6 20        	sub 32
  84+ 9CF3 20 FB        	jr nz,1B
  85+ 9CF5 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CF7 C9           	ret
  87+ 9CF8
# file closed: Genera_coordenadas.asm
1641  9CF8              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9CF8              ; Relojes y temporizaciones.
   2+ 9CF8
   3+ 9CF8              ; ------------------------------------------------------
   4+ 9CF8              ;
   5+ 9CF8              ;	16/7/23
   6+ 9CF8              ;
   7+ 9CF8              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9CF8              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9CF8              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9CF8              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9CF8              ;
  12+ 9CF8              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9CF8              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9CF8
  15+ 9CF8              ; Disparo_entidad db 1
  16+ 9CF8              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9CF8              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9CF8
  19+ 9CF8              Habilita_disparos
  20+ 9CF8
  21+ 9CF8 7E           	ld a,(hl)
  22+ 9CF9 A7           	and a
  23+ 9CFA C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9CFB
  25+ 9CFB EB           	ex de,hl
  26+ 9CFC
  27+ 9CFC 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9CFD C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9CFE
  30+ 9CFE              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9CFE
  32+ 9CFE 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9CFF 7E           	ld a,(hl)
  34+ 9D00 23           	inc hl
  35+ 9D01 77           	ld (hl),a
  36+ 9D02
  37+ 9D02 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D03 3E 01        	ld a,1
  39+ 9D05 77           	ld (hl),a
  40+ 9D06 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1642  9D07              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D07
   2+ 9D07
   3+ 9D07              ;   07/07/23
   4+ 9D07              ;
   5+ 9D07              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D07              ;
   7+ 9D07              ;   Codificación:
   8+ 9D07              ;
   9+ 9D07              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D07              ;
  11+ 9D07              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D07              ;
  13+ 9D07              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D07              ;
  15+ 9D07              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D07              ;
  17+ 9D07              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D07              ;                               ..... %01000010 Vel_up 4
  19+ 9D07              ;                                               Vel_down 2
  20+ 9D07              ;                               ..... $42
  21+ 9D07              ;
  22+ 9D07              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D07              ;
  24+ 9D07              ;                               ..... %01000010 Vel_left 4
  25+ 9D07              ;                                               Vel_right 2
  26+ 9D07              ;                               ..... $42
  27+ 9D07              ;
  28+ 9D07              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D07              ;
  30+ 9D07              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D07              ;
  32+ 9D07              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D07              ;
  34+ 9D07              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D07              ;                                     $53
  36+ 9D07              ;
  37+ 9D07              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D07              ;
  39+ 9D07              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D07              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D07              ;
  42+ 9D07              ;                       Arriba ..... $81
  43+ 9D07              ;                       Arriba - izquierda ..... $a1
  44+ 9D07              ;                       Arriba - derecha ..... $91
  45+ 9D07              ;
  46+ 9D07              ;                       Abajo ..... $41
  47+ 9D07              ;                       Abajo - izquierda ..... $61
  48+ 9D07              ;                       Abajo - derecha ..... $51
  49+ 9D07              ;
  50+ 9D07              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D07              ;
  52+ 9D07              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D07              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D07              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D07              ;
  56+ 9D07              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D07              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D07              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D07              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D07              ;
  61+ 9D07              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D07              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D07              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D07              ;
  65+ 9D07              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D07              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D07              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D07              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D07
  70+ 9D07              ; ----- ----- ----- ----- -----
  71+ 9D07
  72+ 9D07 33 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D09 3B 9D            defw F_1
  74+ 9D0B 45 9D            defw F_2
  75+ 9D0D 4F 9D            defw Codo_abajo_derecha
  76+ 9D0F 83 9D            defw Derecha_y_subiendo
  77+ 9D11 8D 9D            defw Derecha_y_subiendo_1
  78+ 9D13 97 9D            defw F_3
  79+ 9D15 A1 9D            defw F_4
  80+ 9D17 AB 9D            defw Derecha_y_bajando
  81+ 9D19 B5 9D            defw Derecha_y_bajando_1
  82+ 9D1B BF 9D            defw Derecha_y_bajando_2
  83+ 9D1D C9 9D            defw Codo_derecha_abajo
  84+ 9D1F F9 9D            defw Codo_abajo_izq.
  85+ 9D21 2D 9E            defw Izquierda_y_subiendo
  86+ 9D23 37 9E            defw Izquierda_y_subiendo_1
  87+ 9D25 41 9E            defw F_5
  88+ 9D27 4B 9E            defw F_6
  89+ 9D29 55 9E            defw Izquierda_y_bajando
  90+ 9D2B 5F 9E            defw Izquierda_y_bajando_1
  91+ 9D2D 69 9E            defw Izquierda_y_bajando_2
  92+ 9D2F 73 9E            defw Codo_izquierda_abajo
  93+ 9D31 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D33
  95+ 9D33 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D37 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D3B
  98+ 9D3B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D3F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D43 08 00
 100+ 9D45 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D49 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D4D 0F FE
 102+ 9D4F
 103+ 9D4F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D53 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D5B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D63 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D67 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D6B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D6F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D77 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D7B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D7F 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D83
 117+ 9D83 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D87 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D8B 06 00
 119+ 9D8D
 120+ 9D8D 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D91 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D95 02 00
 122+ 9D97
 123+ 9D97 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D9B 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D9F 04 00
 125+ 9DA1 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DA5 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DA9 08 00
 127+ 9DAB
 128+ 9DAB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DAF 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DB3 02 00
 130+ 9DB5
 131+ 9DB5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DB9 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DBD 06 00
 133+ 9DBF
 134+ 9DBF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DC3 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DC7 06 00
 136+ 9DC9
 137+ 9DC9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DC9
 139+ 9DC9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DCD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DD1 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DD5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DDD 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DE5 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DE9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DED 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DF1 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DF5 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DF9
 152+ 9DF9 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DFD 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E05 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E0D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E11 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E15 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E19 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E21 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E25 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E29 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E2D
 166+ 9E2D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E31 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E35 06 00
 168+ 9E37
 169+ 9E37 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E3B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E3F 02 00
 171+ 9E41
 172+ 9E41 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E45 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E49 04 00
 174+ 9E4B 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E4F 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E53 08 00
 176+ 9E55
 177+ 9E55 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E59 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E5D 02 00
 179+ 9E5F
 180+ 9E5F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E63 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E67 06 00
 182+ 9E69
 183+ 9E69 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E6D 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E71 06 00
 185+ 9E73
 186+ 9E73 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E7B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E7F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E87 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E8F 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E93 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E97 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E9B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E9F 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EA3
 199+ 9EA3              ; ----- ----- ----- ----- -----
 200+ 9EA3              ;
 201+ 9EA3              ;   27/06/23
 202+ 9EA3
 203+ 9EA3              Movimiento
 204+ 9EA3
 205+ 9EA3              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EA3
 207+ 9EA3              ;    ld hl,(Posicion_actual)
 208+ 9EA3
 209+ 9EA3 3A 01 89         ld a,(Ctrl_2)
 210+ 9EA6 CB 57            bit 2,a
 211+ 9EA8 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EAA
 213+ 9EAA 2A F3 88         ld hl,(Puntero_mov)
 214+ 9EAD 7E               ld a,(hl)
 215+ 9EAE
 216+ 9EAE              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EAE
 218+ 9EAE              Inicia_desplazamiento.
 219+ 9EAE
 220+ 9EAE              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EAE
 222+ 9EAE CD A2 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EB1
 224+ 9EB1              ; Iniciamos (Repetimos_mov).
 225+ 9EB1
 226+ 9EB1 7E               ld a,(hl)
 227+ 9EB2 E6 0F            and $0f
 228+ 9EB4 32 F9 88         ld (Repetimos_desplazamiento),a
 229+ 9EB7 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EBA
 231+ 9EBA              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EBA
 233+ 9EBA 23               inc hl
 234+ 9EBB 7E               ld a,(hl)
 235+ 9EBC 32 FC 88         ld (Cola_de_desplazamiento),a
 236+ 9EBF 2B               dec hl
 237+ 9EC0
 238+ 9EC0 21 01 89         ld hl,Ctrl_2
 239+ 9EC3 CB D6            set 2,(hl)
 240+ 9EC5
 241+ 9EC5              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EC5              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EC5
 244+ 9EC5              Desplazamiento_iniciado
 245+ 9EC5
 246+ 9EC5 CD 76 9F         call Aplica_desplazamiento
 247+ 9EC8
 248+ 9EC8 3A 01 89         ld a,(Ctrl_2)
 249+ 9ECB CB 67            bit 4,a
 250+ 9ECD C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9ECE
 252+ 9ECE 21 F9 88     3 ld hl,Repetimos_desplazamiento
 253+ 9ED1 35               dec (hl)
 254+ 9ED2 C0               ret nz
 255+ 9ED3
 256+ 9ED3              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9ED3              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9ED3              ; Analiza (Cola_de_desplazamiento).
 259+ 9ED3
 260+ 9ED3 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9ED6 A7               and a
 262+ 9ED7 CC CB 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EDA 28 30            jr z,Reinicia_el_movimiento
 264+ 9EDC
 265+ 9EDC FE FF            cp $ff
 266+ 9EDE 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EE0
 268+ 9EE0 FE FE            cp $fe
 269+ 9EE2 CC 4F 9F         call z,Fijamos_bucle
 270+ 9EE5 28 25            jr z,Reinicia_el_movimiento
 271+ 9EE7
 272+ 9EE7 FE FD            cp $fd
 273+ 9EE9 20 11            jr nz,1F
 274+ 9EEB
 275+ 9EEB              ; ---
 276+ 9EEB              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EEB
 278+ 9EEB 3A 01 89         ld a,(Ctrl_2)
 279+ 9EEE CB 5F            bit 3,a
 280+ 9EF0 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EF2
 282+ 9EF2              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EF2
 284+ 9EF2 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EF5 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EF7
 287+ 9EF7 CD 60 9F         call Inicia_Repetimos_movimiento
 288+ 9EFA 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EFC              ; ---
 290+ 9EFC
 291+ 9EFC FE 01        1 cp 1
 292+ 9EFE CA 39 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F01
 294+ 9F01 3D               dec a
 295+ 9F02 32 FC 88         ld (Cola_de_desplazamiento),a
 296+ 9F05
 297+ 9F05 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F08 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F0B              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F0B C9               ret
 301+ 9F0C
 302+ 9F0C              Reinicia_el_movimiento
 303+ 9F0C
 304+ 9F0C 3A 01 89         ld a,(Ctrl_2)
 305+ 9F0F CB 5F            bit 3,a
 306+ 9F11 28 1B            jr z,2F
 307+ 9F13
 308+ 9F13              ; (Cola_de_desplazamiento)="254".
 309+ 9F13
 310+ 9F13 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F16 35               dec (hl)
 312+ 9F17 20 15            jr nz,2F
 313+ 9F19
 314+ 9F19              ; Fin de las repeticiones del último movimiento.
 315+ 9F19
 316+ 9F19 21 01 89         ld hl,Ctrl_2
 317+ 9F1C CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F1E
 319+ 9F1E 2A F3 88         ld hl,(Puntero_mov)
 320+ 9F21 23               inc hl
 321+ 9F22 23               inc hl
 322+ 9F23 23               inc hl
 323+ 9F24 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F27              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F27 7E               ld a,(hl)
 326+ 9F28 32 FC 88         ld (Cola_de_desplazamiento),a
 327+ 9F2B
 328+ 9F2B C3 D3 9E         jp Cola
 329+ 9F2E
 330+ 9F2E CD 6B 9F     2 call Inicia_Puntero_mov
 331+ 9F31
 332+ 9F31 21 01 89         ld hl,Ctrl_2
 333+ 9F34 CB 96            res 2,(hl)
 334+ 9F36
 335+ 9F36 C3 A3 9E         jp Movimiento
 336+ 9F39
 337+ 9F39              Siguiente_desplazamiento
 338+ 9F39
 339+ 9F39              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F39              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F39
 342+ 9F39 21 01 89         ld hl,Ctrl_2
 343+ 9F3C CB 96            res 2,(hl)
 344+ 9F3E
 345+ 9F3E 2A F3 88         ld hl,(Puntero_mov)
 346+ 9F41 23               inc hl
 347+ 9F42 23               inc hl
 348+ 9F43 22 F3 88         ld (Puntero_mov),hl
 349+ 9F46
 350+ 9F46 7E               ld a,(hl)
 351+ 9F47 A7               and a
 352+ 9F48 CC CB 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F4B CA 0C 9F         jp z,Reinicia_el_movimiento
 354+ 9F4E
 355+ 9F4E C9               ret
 356+ 9F4F              ; Subrutinas -----------------------------------------
 357+ 9F4F              ; ---------- --------- --------- ---------- ----------
 358+ 9F4F              ;
 359+ 9F4F              ;   24/07/23
 360+ 9F4F              ;
 361+ 9F4F              ;   Fijamos_bucle
 362+ 9F4F              ;
 363+ 9F4F              ;
 364+ 9F4F
 365+ 9F4F              Fijamos_bucle
 366+ 9F4F
 367+ 9F4F 3A F7 88         ld a,(Incrementa_puntero)
 368+ 9F52 3C               inc a
 369+ 9F53 32 F8 88         ld (Incrementa_puntero_backup),a
 370+ 9F56
 371+ 9F56 CD CB 9F         call Incrementa_Puntero_indice_mov
 372+ 9F59 2A F1 88         ld hl,(Puntero_indice_mov)
 373+ 9F5C 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F5F C9               ret
 375+ 9F60
 376+ 9F60              ; ---------- --------- --------- ---------- ----------
 377+ 9F60              ;
 378+ 9F60              ;   07/7/23
 379+ 9F60              ;
 380+ 9F60              ;   Inicia_Repetimos_movimiento
 381+ 9F60              ;
 382+ 9F60              ;
 383+ 9F60
 384+ 9F60              Inicia_Repetimos_movimiento
 385+ 9F60
 386+ 9F60              ; Iniciamos (Repetimos_movimiento).
 387+ 9F60
 388+ 9F60 DD 2A F3 88      ld ix,(Puntero_mov)
 389+ 9F64 DD 7E 02         ld a,(ix+2)
 390+ 9F67 32 FB 88         ld (Repetimos_movimiento),a
 391+ 9F6A
 392+ 9F6A C9               ret
 393+ 9F6B
 394+ 9F6B              ; ---------- --------- --------- ---------- ----------
 395+ 9F6B              ;
 396+ 9F6B              ;   26/6/23
 397+ 9F6B              ;
 398+ 9F6B              ;   Inicia_Puntero_mov
 399+ 9F6B              ;
 400+ 9F6B              ;
 401+ 9F6B
 402+ 9F6B 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F6E 5E               ld e,(hl)
 404+ 9F6F 23               inc hl
 405+ 9F70 56               ld d,(hl)
 406+ 9F71 EB               ex de,hl
 407+ 9F72 22 F3 88         ld (Puntero_mov),hl
 408+ 9F75 C9               ret
 409+ 9F76
 410+ 9F76              ; ---------- --------- --------- ---------- ----------
 411+ 9F76              ;
 412+ 9F76              ;   27/06/23
 413+ 9F76              ;
 414+ 9F76              ;   Aplica_movimiento.
 415+ 9F76
 416+ 9F76              Aplica_desplazamiento
 417+ 9F76
 418+ 9F76              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F76
 420+ 9F76 2A F3 88         ld hl, (Puntero_mov)
 421+ 9F79
 422+ 9F79 7E               ld a,(hl)
 423+ 9F7A E6 F0            and $f0
 424+ 9F7C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F7D
 426+ 9F7D CB 7E            bit 7,(hl)
 427+ 9F7F 28 03            jr z,1F
 428+ 9F81 CD A1 99         call Mov_up
 429+ 9F84 2A F3 88     1 ld hl, (Puntero_mov)
 430+ 9F87 CB 76            bit 6,(hl)
 431+ 9F89 28 03            jr z,2F
 432+ 9F8B CD 70 99         call Mov_down
 433+ 9F8E 2A F3 88     2 ld hl, (Puntero_mov)
 434+ 9F91 CB 6E            bit 5,(hl)
 435+ 9F93 28 03            jr z,3F
 436+ 9F95 CD 02 9B         call Mov_left
 437+ 9F98 2A F3 88     3 ld hl, (Puntero_mov)
 438+ 9F9B CB 66            bit 4,(hl)
 439+ 9F9D C8               ret z
 440+ 9F9E CD E4 99         call Mov_right
 441+ 9FA1 C9               ret
 442+ 9FA2
 443+ 9FA2              ; ---------- --------- --------- ---------- ----------
 444+ 9FA2              ;
 445+ 9FA2              ;   26/06/23
 446+ 9FA2              ;
 447+ 9FA2              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FA2
 449+ 9FA2              Ajusta_velocidad_desplazamiento
 450+ 9FA2
 451+ 9FA2              ; 1er byte de la cadena de movimiento.
 452+ 9FA2              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FA2
 454+ 9FA2 CD C0 9F         call Extrae_nibble_alto
 455+ 9FA5
 456+ 9FA5 32 DD 88         ld (Vel_up),a
 457+ 9FA8 79               ld a,c
 458+ 9FA9 E6 0F            and $0f
 459+ 9FAB 32 DE 88         ld (Vel_down),a
 460+ 9FAE
 461+ 9FAE              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FAE              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FAE
 464+ 9FAE 23               inc hl
 465+ 9FAF CD C0 9F         call Extrae_nibble_alto
 466+ 9FB2
 467+ 9FB2 32 DB 88         ld (Vel_left),a
 468+ 9FB5 79               ld a,c
 469+ 9FB6 E6 0F            and $0f
 470+ 9FB8 32 DC 88         ld (Vel_right),a
 471+ 9FBB
 472+ 9FBB              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FBB
 474+ 9FBB 23               inc hl
 475+ 9FBC 22 F3 88         ld (Puntero_mov),hl
 476+ 9FBF C9               ret
 477+ 9FC0
 478+ 9FC0 06 04        Extrae_nibble_alto ld b,4
 479+ 9FC2 7E               ld a,(hl)
 480+ 9FC3 4F               ld c,a
 481+ 9FC4 E6 F0            and $f0
 482+ 9FC6 CB 3F        1 srl a
 483+ 9FC8 10 FC            djnz 1B
 484+ 9FCA C9               ret
 485+ 9FCB
 486+ 9FCB              ; ---------- --------- --------- ---------- ----------
 487+ 9FCB              ;
 488+ 9FCB              ;   5/7/23
 489+ 9FCB              ;
 490+ 9FCB              ;   Incrementa_Puntero_indice_mov
 491+ 9FCB
 492+ 9FCB              Incrementa_Puntero_indice_mov
 493+ 9FCB
 494+ 9FCB 21 F7 88         ld hl,Incrementa_puntero
 495+ 9FCE 34               inc (hl)
 496+ 9FCF
 497+ 9FCF 2A F1 88         ld hl,(Puntero_indice_mov)
 498+ 9FD2 01 02 00         ld bc,2
 499+ 9FD5 A7               and a
 500+ 9FD6 09               add hl,bc
 501+ 9FD7 22 F1 88         ld (Puntero_indice_mov),hl
 502+ 9FDA
 503+ 9FDA 7E               ld a,(hl)
 504+ 9FDB A7               and a
 505+ 9FDC
 506+ 9FDC              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FDC
 508+ 9FDC              ;    jr z,$
 509+ 9FDC
 510+ 9FDC              ;! Reinicia el Patrón de movimiento.
 511+ 9FDC
 512+ 9FDC CC E1 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FDF
 514+ 9FDF AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FE0
 516+ 9FE0 C9               ret
 517+ 9FE1
 518+ 9FE1
 519+ 9FE1              ; ---------- --------- --------- ---------- ----------
 520+ 9FE1              ;
 521+ 9FE1              ;   24/07/23
 522+ 9FE1              ;
 523+ 9FE1              ;   Inicializa_Puntero_indice_mov
 524+ 9FE1
 525+ 9FE1              Inicializa_Puntero_indice_mov
 526+ 9FE1
 527+ 9FE1              ; Existe etiqueta de bucle principal???
 528+ 9FE1
 529+ 9FE1 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FE4 24               inc h
 531+ 9FE5 25               dec h
 532+ 9FE6 28 05            jr z,2F
 533+ 9FE8
 534+ 9FE8 22 F1 88         ld (Puntero_indice_mov),hl
 535+ 9FEB 18 14            jr 3F
 536+ 9FED
 537+ 9FED              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ 9FED
 539+ 9FED 3A F7 88     2 ld a,(Incrementa_puntero)
 540+ 9FF0 47               ld b,a
 541+ 9FF1
 542+ 9FF1 2A F1 88         ld hl,(Puntero_indice_mov)
 543+ 9FF4 2B           1 dec hl
 544+ 9FF5 2B               dec hl
 545+ 9FF6 10 FC            djnz 1B
 546+ 9FF8 22 F1 88         ld (Puntero_indice_mov),hl
 547+ 9FFB
 548+ 9FFB AF               xor a
 549+ 9FFC 32 F7 88         ld (Incrementa_puntero),a
 550+ 9FFF 18 06            jr 4F
 551+ A001
 552+ A001 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 553+ A004 32 F7 88         ld (Incrementa_puntero),a
 554+ A007 C9           4 ret
 555+ A008
 556+ A008
 557+ A008
# file closed: Patrones_de_mov.asm
1643  A008              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A008              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A008              ;
   3+ A008              ;	4/9/23
   4+ A008              ;
   5+ A008              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A008
   7+ A008              ;	ADC HL,SP	LD (addr),SP
   8+ A008              ;	ADD HL,SP	LD SP,(addr)
   9+ A008              ;	ADD IX,SP	LD SP,nn
  10+ A008              ; 	ADD IY,SP	LD SP,HL
  11+ A008              ;				LD SP,IX
  12+ A008              ;	DEC SP		LD SP,IY
  13+ A008
  14+ A008              ;	EX (SP),HL
  15+ A008              ;	EX (SP),IX
  16+ A008              ;	EX (SP),IY
  17+ A008
  18+ A008              ;	INC SP
  19+ A008
  20+ A008                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1 ED 73 14 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA5
  34+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  35+ 7FA5
  36+ 7FA5 31 E6 88         ld sp,Variables_de_borrado+6
  37+ 7FA8
  38+ 7FA8 E5               push hl
  39+ 7FA9 DD E5            push ix
  40+ 7FAB FD E5            push iy
  41+ 7FAD
  42+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  43+ 7FB0
  44+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  45+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  46+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  47+ 7FB5
  48+ 7FB5              ; Disparo o entidad?
  49+ 7FB5
  50+ 7FB5 3A 03 89         ld a,(Ctrl_1)
  51+ 7FB8 CB 47            bit 0,a
  52+ 7FBA 28 05            jr z,2F
  53+ 7FBC
  54+ 7FBC 2A 1C 89         ld hl,(Stack_snapshot_disparos)
  55+ 7FBF 18 0F            jr 4F
  56+ 7FC1
  57+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  58+ 7FC1
  59+ 7FC1 3A F0 88     2 ld a,(Ctrl_0)
  60+ 7FC4 CB 77            bit 6,a
  61+ 7FC6 28 05            jr z,7F
  62+ 7FC8
  63+ 7FC8              ; Guardamos foto de Amadeus.
  64+ 7FC8
  65+ 7FC8 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  66+ 7FCB 18 03            jr 4F
  67+ 7FCD
  68+ 7FCD 2A 1A 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  69+ 7FD0
  70+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  71+ 7FD2
  72+ 7FD2 D1           1 pop de
  73+ 7FD3 73               ld (hl),e
  74+ 7FD4 23               inc hl
  75+ 7FD5 72               ld (hl),d
  76+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  77+ 7FD7 10 F9            djnz 1B
  78+ 7FD9
  79+ 7FD9              ; Disparo o entidad ?
  80+ 7FD9
  81+ 7FD9 3A 03 89         ld a,(Ctrl_1)
  82+ 7FDC CB 47            bit 0,a
  83+ 7FDE 28 05            jr z,5F
  84+ 7FE0
  85+ 7FE0 22 1C 89         ld (Stack_snapshot_disparos),hl
  86+ 7FE3 18 13            jr 6F
  87+ 7FE5
  88+ 7FE5              ; Entidad o Amadeus ?
  89+ 7FE5
  90+ 7FE5 3A F0 88     5 ld a,(Ctrl_0)
  91+ 7FE8 CB 77            bit 6,a
  92+ 7FEA 28 09            jr z,8F
  93+ 7FEC
  94+ 7FEC 22 22 89         ld (End_Snapshot_Amadeus),hl
  95+ 7FEF ED 7B 14 89      ld sp,(Stack)
  96+ 7FF3 FB               ei
  97+ 7FF4 C9               ret
  98+ 7FF5
  99+ 7FF5 22 1A 89     8 ld (Stack_snapshot),hl
 100+ 7FF8 ED 7B 14 89  6 ld sp,(Stack)
 101+ 7FFC
 102+ 7FFC              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 103+ 7FFC
 104+ 7FFC 5D               ld e,l
 105+ 7FFD 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 106+ 7FFE
 107+ 7FFE 2A 38 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 108+ 8001 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 109+ 8002 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 110+ 8003 72               ld (hl),d                                     ; _ álbum a otro.
 111+ 8004 FB               ei
 112+ 8005 C9               ret
 113+ 8006
 114+ 8006              ; ------------------------------------------------
 115+ 8006              ;
 116+ 8006              ;   19/10/23
 117+ 8006              ;
 118+ 8006              ;   La rutina estará situada justo después de:
 119+ 8006              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 120+ 8006
 121+ 8006              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 122+ 8006              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 123+ 8006
 124+ 8006                  org $72ec
 125+ 72EC
 126+ 72EC              Gestiona_albumes_de_fotos
 127+ 72EC
 128+ 72EC              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 129+ 72EC              ; Si está a "1" significa que Album_de_fotos_3 o Album_de_fotos_2 estaban incompletos.
 130+ 72EC
 131+ 72EC 3A 3D 89         ld a,(Ctrl_Semaforo)
 132+ 72EF CB 47            bit 0,a
 133+ 72F1 28 3E            jr z,7F
 134+ 72F3
 135+ 72F3              ;   Álbum_2 vacío ?????
 136+ 72F3
 137+ 72F3 CB 4F            bit 1,a
 138+ 72F5 20 13            jr nz,10F
 139+ 72F7
 140+ 72F7              ;   Álbum_1 vacío.
 141+ 72F7
 142+ 72F7              ; Album_de_fotos_2 completo ?????
 143+ 72F7
 144+ 72F7 3A 3C 89         ld a,(Semaforo)
 145+ 72FA CB 57            bit 2,a
 146+ 72FC 28 FE            jr z,$
 147+ 72FE
 148+ 72FE              ;! Debugggggggg (Revisar álbumes. Hay un fallo de pintado/borrado).
 149+ 72FE
 150+ 72FE 3A 52 89         ld a,(Contador_de_frames_2)
 151+ 7301 08               ex af,af
 152+ 7302 3A 51 89         ld a,(Contador_de_frames)
 153+ 7305 18 FE            jr $
 154+ 7307
 155+ 7307 CD EF 73         call Album2_a_Album1
 156+ 730A
 157+ 730A              ; Album_de_fotos_3 completo ?????
 158+ 730A
 159+ 730A 3A 3C 89     10 ld a,(Semaforo)
 160+ 730D CB 5F            bit 3,a
 161+ 730F 28 FE            jr z,$
 162+ 7311
 163+ 7311              ; Album_de_fotos_3 contiene un FRAME completo.
 164+ 7311              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 165+ 7311
 166+ 7311 CD C8 73         call Album3_a_Album2    ;   X-X-X-0
 167+ 7314 CD 22 73         call Modifica_Stack_snapshot
 168+ 7317
 169+ 7317 21 3D 89         ld hl,Ctrl_Semaforo     ; Hemos reordenado los álbumes. Inicializamos el bit_0 de (Ctrl_Semaforo).
 170+ 731A CB 86            res 0,(hl)
 171+ 731C CB 8E            res 1,(hl)
 172+ 731E CB 96            res 2,(hl)
 173+ 7320
 174+ 7320 18 0F            jr 7F
 175+ 7322
 176+ 7322 2A 30 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 177+ 7325 CD 80 8C     	call Extrae_address
 178+ 7328 22 1A 89     	ld (Stack_snapshot),hl
 179+ 732B 21 3C 89     	ld hl,Semaforo
 180+ 732E CB 0E        	rrc (hl)
 181+ 7330 C9               ret
 182+ 7331
 183+ 7331              ; #############################################################3
 184+ 7331
 185+ 7331              ;   En 1er lugar limpiamos el FRAME pintado.
 186+ 7331              ;   Vaciamos Album_de_fotos.
 187+ 7331
 188+ 7331              ;   Album_de_fotos. Contiene datos ???
 189+ 7331
 190+ 7331 21 01 70     7 ld hl,Album_de_fotos+1
 191+ 7334 7E               ld a,(hl)
 192+ 7335 A7               and a
 193+ 7336 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 194+ 7338
 195+ 7338              ;   Hemos impreso Album_de_fotos. Limpiamos el álbum y actualizamos (End_Snapshot).
 196+ 7338
 197+ 7338 2A 1E 89         ld hl,(End_Snapshot)
 198+ 733B 01 00 70         ld bc,Album_de_fotos
 199+ 733E 11 01 70         ld de,Album_de_fotos+1
 200+ 7341 AF               xor a
 201+ 7342 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 202+ 7343
 203+ 7343 CD 16 74         call Limpia_album
 204+ 7346
 205+ 7346 21 00 00         ld hl,0
 206+ 7349 22 1E 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 207+ 734C
 208+ 734C              ; ----- ----- ----- -----
 209+ 734C
 210+ 734C              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 211+ 734C              ;   Album_de_fotos_1. Contiene un frame completo ???
 212+ 734C
 213+ 734C 3A 3C 89     3 ld a,(Semaforo)
 214+ 734F CB 4F            bit 1,a
 215+ 7351 20 02            jr nz,4F
 216+ 7353
 217+ 7353 18 FE            jr $
 218+ 7355
 219+ 7355
 220+ 7355              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 221+ 7355
 222+ 7355 21 55 70     4 ld hl,Album_de_fotos_1+1
 223+ 7358 7E               ld a,(hl)
 224+ 7359 A7               and a
 225+ 735A 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 226+ 735C
 227+ 735C              ; ----- ----- ----- -----
 228+ 735C              ; ----- ----- ----- -----
 229+ 735C
 230+ 735C              ;   Album_de_fotos_1 Contiene un frame completo que hay que volcar en Album_de_fotos.
 231+ 735C              ;   Actualiza (End_Snapshot).
 232+ 735C
 233+ 735C 2A 24 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 234+ 735F 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 235+ 7362 11 00 70         ld de,Album_de_fotos        ; Destino.
 236+ 7365
 237+ 7365 CD 16 74         call Limpia_album
 238+ 7368
 239+ 7368              ;   Calculamos (End_Snapshot)
 240+ 7368
 241+ 7368 A7               and a
 242+ 7369 ED 4A            adc hl,bc
 243+ 736B 22 1E 89         ld (End_Snapshot),hl
 244+ 736E
 245+ 736E              ;   Limpiamos Album_de_fotos_1.
 246+ 736E
 247+ 736E 2A 24 89         ld hl,(End_Snapshot_1)
 248+ 7371 01 54 70         ld bc,Album_de_fotos_1
 249+ 7374 11 55 70         ld de,Album_de_fotos_1+1
 250+ 7377 AF               xor a
 251+ 7378 02               ld (bc),a
 252+ 7379
 253+ 7379 CD 16 74         call Limpia_album
 254+ 737C
 255+ 737C 21 00 00         ld hl,0
 256+ 737F 22 24 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 257+ 7382
 258+ 7382              ; ----- ----- ----- -----
 259+ 7382
 260+ 7382              ;   Album_de_fotos_2. Contiene Frame completo ???
 261+ 7382
 262+ 7382 3A 3C 89     1 ld a,(Semaforo)
 263+ 7385 CB 57            bit 2,a
 264+ 7387 20 15            jr nz,5F
 265+ 7389
 266+ 7389              ;   Album_de_fotos_2 NO contiene un FRAME completo. Contiene datos ???
 267+ 7389
 268+ 7389 21 A9 70         ld hl,Album_de_fotos_2+1
 269+ 738C 7E               ld a,(hl)
 270+ 738D A7               and a
 271+ 738E 20 06            jr nz,9F
 272+ 7390
 273+ 7390              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 274+ 7390              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 275+ 7390
 276+ 7390 18 FE            jr $
 277+ 7392
 278+ 7392 CD 23 74         call Actualiza_punteros_de_albumes
 279+ 7395 C9               ret
 280+ 7396
 281+ 7396              ;   Album_de_fotos_3 no está completo.
 282+ 7396
 283+ 7396 21 3D 89     9 ld hl,Ctrl_Semaforo
 284+ 7399 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 285+ 739B CB D6            set 2,(hl)                   ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 286+ 739D C9               ret
 287+ 739E
 288+ 739E 21 A9 70     5 ld hl,Album_de_fotos_2+1
 289+ 73A1 7E               ld a,(hl)
 290+ 73A2 A7               and a
 291+ 73A3 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 292+ 73A5
 293+ 73A5              ; ----- ----- ----- -----
 294+ 73A5              ; ----- ----- ----- -----
 295+ 73A5              ; ----- ----- ----- -----
 296+ 73A5
 297+ 73A5              ;   Album_de_fotos_2 contiene un frame completo.
 298+ 73A5              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 299+ 73A5
 300+ 73A5 CD EF 73         call Album2_a_Album1
 301+ 73A8
 302+ 73A8              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 303+ 73A8              ;   Album_de_fotos_3. Contiene un frame completo ???
 304+ 73A8
 305+ 73A8 3A 3C 89     2 ld a,(Semaforo)
 306+ 73AB CB 5F            bit 3,a
 307+ 73AD 20 13            jr nz,6F
 308+ 73AF
 309+ 73AF              ;   Album_de_fotos_3 NO contiene un FRAME completo. Contiene datos ???
 310+ 73AF
 311+ 73AF 21 FD 70         ld hl,Album_de_fotos_3+1
 312+ 73B2 7E               ld a,(hl)
 313+ 73B3 A7               and a
 314+ 73B4 20 04            jr nz,8F
 315+ 73B6
 316+ 73B6              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 317+ 73B6              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 318+ 73B6
 319+ 73B6 CD 23 74         call Actualiza_punteros_de_albumes
 320+ 73B9 C9               ret
 321+ 73BA
 322+ 73BA              ;   Album_de_fotos_3 no está completo.
 323+ 73BA
 324+ 73BA 21 3D 89     8 ld hl,Ctrl_Semaforo
 325+ 73BD CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 326+ 73BF CB CE            set 1,(hl)
 327+ 73C1 C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 328+ 73C2
 329+ 73C2              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 330+ 73C2
 331+ 73C2 21 FD 70     6 ld hl,Album_de_fotos_3+1
 332+ 73C5 7E               ld a,(hl)
 333+ 73C6 A7               and a
 334+ 73C7 C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 335+ 73C8
 336+ 73C8              ; ----- ----- ----- -----
 337+ 73C8              ; ----- ----- ----- -----
 338+ 73C8              ; ----- ----- ----- -----
 339+ 73C8
 340+ 73C8              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2 y limpiamos Album_de_fotos_3.
 341+ 73C8
 342+ 73C8 2A 2C 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 343+ 73CB 01 FC 70         ld bc,Album_de_fotos_3                  ; Origen.
 344+ 73CE 11 A8 70         ld de,Album_de_fotos_2                  ; Destino.
 345+ 73D1
 346+ 73D1 CD 16 74         call Limpia_album
 347+ 73D4
 348+ 73D4              ;   Actualizamos (End_Snapshot_2):
 349+ 73D4
 350+ 73D4 A7               and a
 351+ 73D5 ED 4A            adc hl,bc
 352+ 73D7 22 28 89         ld (End_Snapshot_2),hl
 353+ 73DA
 354+ 73DA              ;   Limpiamos Album_de_fotos_3.
 355+ 73DA
 356+ 73DA 2A 2C 89         ld hl,(End_Snapshot_3)
 357+ 73DD 01 FC 70         ld bc,Album_de_fotos_3
 358+ 73E0 11 FD 70         ld de,Album_de_fotos_3+1
 359+ 73E3 AF               xor a
 360+ 73E4 02               ld (bc),a
 361+ 73E5 CD 16 74         call Limpia_album
 362+ 73E8
 363+ 73E8              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 364+ 73E8              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 365+ 73E8
 366+ 73E8 21 00 00         ld hl,0
 367+ 73EB 22 2C 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 368+ 73EE
 369+ 73EE C9               ret
 370+ 73EF
 371+ 73EF 2A 28 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 372+ 73F2 01 A8 70         ld bc,Album_de_fotos_2                   ; Origen.
 373+ 73F5 11 54 70         ld de,Album_de_fotos_1                   ; Destino.
 374+ 73F8 CD 16 74         call Limpia_album
 375+ 73FB
 376+ 73FB              ;   Actualizamos (End_Snapshot_1):
 377+ 73FB
 378+ 73FB A7               and a
 379+ 73FC ED 4A            adc hl,bc
 380+ 73FE 22 24 89         ld (End_Snapshot_1),hl
 381+ 7401
 382+ 7401              ;   Limpiamos Album_de_fotos_2.
 383+ 7401
 384+ 7401 2A 28 89         ld hl,(End_Snapshot_2)
 385+ 7404 01 A8 70         ld bc,Album_de_fotos_2
 386+ 7407 11 A9 70         ld de,Album_de_fotos_2+1
 387+ 740A AF               xor a
 388+ 740B 02               ld (bc),a
 389+ 740C CD 16 74         call Limpia_album
 390+ 740F 21 00 00         ld hl,0
 391+ 7412 22 28 89         ld (End_Snapshot_2),hl      ; Limpia (End_Snapshot_2).
 392+ 7415 C9               ret
 393+ 7416
 394+ 7416
 395+ 7416              ; ----------------------------------------------------
 396+ 7416              ;
 397+ 7416              ;   10/8/23
 398+ 7416              ;
 399+ 7416              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 400+ 7416              ;
 401+ 7416              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 402+ 7416              ;           BC ..... Dirección de inicio del álbum.
 403+ 7416              ;           DE ..... Dirección de inicio del álbum. +1
 404+ 7416
 405+ 7416              ;    ld hl,(End_Snapshot)
 406+ 7416              ;    ld bc,Album_de_fotos
 407+ 7416              ;    ld de,Album_de_fotos+1
 408+ 7416
 409+ 7416              ;   MODIFICA: A,HL,BC y DE.
 410+ 7416
 411+ 7416              Limpia_album
 412+ 7416 D5               push de                     ; Guardo DESTINO.
 413+ 7417 C5               push bc                     ; Guardo ORIGEN.
 414+ 7418 ED 42            sbc hl,bc
 415+ 741A 4D               ld c,l
 416+ 741B 44               ld b,h
 417+ 741C E1               pop hl
 418+ 741D C5               push bc
 419+ 741E ED B0            ldir
 420+ 7420 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 421+ 7421 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 422+ 7422 C9               ret                         ; _ a otro).
 423+ 7423
 424+ 7423              ; --------------------------------------------------------------------------------------------
 425+ 7423              ;
 426+ 7423              ;   20/10/23
 427+ 7423
 428+ 7423              ;
 429+ 7423
 430+ 7423              Actualiza_punteros_de_albumes
 431+ 7423
 432+ 7423 2A 30 89         ld hl,(Puntero_indice_album_de_fotos)
 433+ 7426 2B               dec hl
 434+ 7427 2B               dec hl
 435+ 7428 22 30 89         ld (Puntero_indice_album_de_fotos),hl
 436+ 742B
 437+ 742B 2A 34 89         ld hl,(Puntero_indice_End_Snapshot)
 438+ 742E 2B               dec hl
 439+ 742F 2B               dec hl
 440+ 7430 22 34 89         ld (Puntero_indice_End_Snapshot),hl
 441+ 7433 CD 80 8C         call Extrae_address
 442+ 7436 22 38 89         ld (Puntero_de_End_Snapshot),hl
 443+ 7439
 444+ 7439 C9               ret
 445+ 743A
# file closed: Guarda_foto_registros.asm
1644  743A
1645  743A              	SAVESNA "Pruebas.sna", START
1646  743A
1647  743A
1648  743A
1649  743A
# file closed: Banco_de_pruebas.asm
