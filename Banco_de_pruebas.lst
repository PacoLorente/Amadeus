# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 42 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83E8              ;                  _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
198+  84FA 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  84FC 02           	db 2											; (Cuad_objeto).
200+  84FD
201+  84FD 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
215+  8517 C3 94 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  851E
218+  851E 00           	db 0 											; (Columnas).
219+  851F 00 00        	defw 0											; (Limite_horizontal).
220+  8521 00           	db 0											; (Limite_vertical).
221+  8522
222+  8522              ; ---------- ---------- ---------- ---------- ----------
223+  8522
224+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  8524 00 00        	defw 0                                          ; (Posicion_actual).
226+  8526 00 00        	defw 0											; (Puntero_objeto).
227+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  852B
229+  852B 04           	db %00000100									; (Attr).
230+  852C
231+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8530
234+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  8534
237+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  8536 01           	db 1											; (Cuad_objeto).
239+  8537
240+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  853B
242+  853B 00 00        	db 0,0											; Variables_de_borrado
243+  853D 00 00        	defw 0										 	;	" " " " " " "
244+  853F 00 00        	defw 0											;	" " " " " " "
245+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  8545
247+  8545 00 00        	db 0,0											; Variables_de_pintado
248+  8547 00 00        	defw 0											;	" " " " " " "
249+  8549 00 00        	defw 0											;	" " " " " " "
250+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  854F
252+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8551
254+  8551 C5 94 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8558
257+  8558 00           	db 0 											; (Columnas).
258+  8559 00 00        	defw 0											; (Limite_horizontal).
259+  855B 00           	db 0											; (Limite_vertical).
260+  855C
261+  855C              ; ---------- ---------- ---------- ---------- ----------
262+  855C
263+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  855E 00 00        	defw 0                                          ; (Posicion_actual).
265+  8560 00 00        	defw 0 											; (Puntero_objeto).
266+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  8565
268+  8565 01           	db %00000001									; (Attr).
269+  8566
270+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  856A
273+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  856E
276+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8570 00           	db 0											; (Cuad_objeto).
278+  8571
279+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  8575
281+  8575 00 00        	db 0,0											; Variables_de_borrado
282+  8577 00 00        	defw 0										 	;	" " " " " " "
283+  8579 00 00        	defw 0											;	" " " " " " "
284+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  857F
286+  857F 00 00        	db 0,0											; Variables_de_pintado
287+  8581 00 00        	defw 0											;	" " " " " " "
288+  8583 00 00        	defw 0											;	" " " " " " "
289+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8589
291+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  858B
293+  858B B5 94 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  8592
296+  8592 00           	db 0 											; (Columnas).
297+  8593 00 00        	defw 0											; (Limite_horizontal).
298+  8595 00           	db 0											; (Limite_vertical).
299+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
135   85C5 B1 94        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
163   85D1
164   85D1
165   85D1
166   85D1
167   85D1
168   85D1
169   85D1              ; Gestión de ENTIDADES.
170   85D1
171   85D1 00 00        Puntero_store_entidades defw 0
172   85D3 00 00        Puntero_restore_entidades defw 0
173   85D5 00 00        Indice_restore defw 0
174   85D7 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
175   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
176   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
177   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
178   85D9              ;														; _ (Numero_de_malotes)="0".
179   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
180   85DB              ;														; _variable para almacenar lo posición del puntero_
181   85DB              ; 														; _de pila, SP.
182   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
183   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
184   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
185   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
186   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
187   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
188   85E1              ;														; _el snapshot de los registros del siguiente disparo.
189   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
190   85E1
191   85E1              ; Gestión de Disparos.
192   85E1
193   85E1 00           Numero_de_disparotes db 0
194   85E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
195   85E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
196   85E6 00           Impacto db 0											; Este byte indica que se ha producido impacto:
197   85E7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
198   85E7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
199   85E7 00 00        Direccion_de_impacto defw 0								; Esta variable almacena la direccíon de mem. de pantalla donde se ha producido_
200   85E9              ;														; _ el impacto.
201   85E9
202   85E9              ; Gestión de FRAMES.
203   85E9
204   85E9 00           Switch db 0
205   85EA
206   85EA              ; Variables de Raster y localización en pantalla.
207   85EA
208   85EA 00 FF        Temp_Raster defw $ff00
209   85EC
210   85EC              ; Rutina principal *************************************************************************************************************************************************************************
211   85EC              ;
212   85EC              ;	14/11/22
213   85EC
214   85EC 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
215   85EF
216   85EF 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
217   85F1 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
218   85F3 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
219   85F5 F3           	DI
220   85F6
221   85F6 3E 01        	ld a,1
222   85F8 D3 FE        	out ($fe),a
223   85FA
224   85FA 3E 07        	ld a,%00000111
225   85FC CD EA 90     	call Cls
226   85FF
227   85FF              ;	call Pinta_FILAS
228   85FF
229   85FF CD 46 88     	call Pulsa_ENTER
230   8602
231   8602 21 D7 85     	ld hl,Numero_de_entidades
232   8605 46           	ld b,(hl)
233   8606 04           	inc b
234   8607 05           	dec b
235   8608 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
236   860A
237   860A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
238   860A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
239   860A              ;	Pintamos el resto de entidades:
240   860A
241   860A CD 3F 87     	call Inicia_punteros_de_entidades
242   860D
243   860D              ;	INICIA ENTIDADES!!!!!
244   860D
245   860D C5           1 push bc  												; Guardo el contador de entidades.
246   860E CD 99 87      	call Inicia_Puntero_objeto
247   8611 CD 3A 8B     	call Draw
248   8614 CD A0 7F     	call Guarda_foto_registros
249   8617 CD E1 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
250   861A C1           	pop bc
251   861B 10 F0        	djnz 1B  											; Decremento el contador de entidades.
252   861D
253   861D              ; 	INICIA AMADEUS!!!!!
254   861D
255   861D CD 22 88     3 call Restore_Amadeus
256   8620 CD 99 87     	call Inicia_Puntero_objeto
257   8623 CD 3A 8B     	call Draw
258   8626 CD A0 7F     	call Guarda_foto_registros
259   8629 CD 34 88     	call Store_Amadeus
260   862C
261   862C              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
262   862C
263   862C CD 55 87     	call Inicia_Puntero_Disparo_Entidades
264   862F CD 5C 87     	call Inicia_Puntero_Disparo_Amadeus
265   8632
266   8632              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
267   8632
268   8632 CD 3F 87     	call Inicia_punteros_de_entidades
269   8635 CD 10 88     	call Restore_Primera_entidad
270   8638
271   8638 3A D7 85     	ld a,(Numero_de_entidades)
272   863B 3C           	inc a
273   863C 32 D8 85     	ld (Numero_de_malotes),a
274   863F
275   863F FB           2 ei
276   8640 18 FD        	jr 2B
277   8642
278   8642              ; -----------------------------------------------------------------------------------
279   8642
280   8642              Frame
281   8642
282   8642              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
283   8642              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
284   8642
285   8642 3E 02            ld a,2
286   8644 D3 FE            out ($fe),a
287   8646 CD 3E 8E     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
288   8649 CD 77 8E     	call Extrae_foto_disparos
289   864C 3E 01            ld a,1
290   864E D3 FE            out ($fe),a
291   8650
292   8650              ; ----------------------------------------------------------------------
293   8650
294   8650              ;	Existe colisión?????
295   8650
296   8650 3A E6 85     	ld a,(Impacto)
297   8653 A7           	and a
298   8654 28 02        	jr z,5F
299   8656
300   8656              ; A="1" Impacto en entidad.
301   8656              ; A="2"	Impacto en Amadeus.
302   8656
303   8656 18 FE        	jr $
304   8658
305   8658
306   8658
307   8658 CD 1E 8A     5 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
308   865B CD 3C 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
309   865E
310   865E 21 00 70     	ld hl,Album_de_fotos
311   8661 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
312   8664              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
313   8664 3A D7 85         ld a,(Numero_de_entidades)
314   8667 47               ld b,a
315   8668 A7           	and a
316   8669 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
317   866B
318   866B C5           2 push bc
319   866C CD B8 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
320   866F 3A C3 85     	ld a,(Ctrl_0)
321   8672 CB 67        	bit 4,a
322   8674 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
323   8676
324   8676              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
325   8676              ; Las entidades sólo generan disparo cuando se mueven.
326   8676              ; 16/02/23.
327   8676              ; [[[
328   8676 CD 7D 88     	call Detecta_disparo_entidad
329   8679              ; ]]]
330   8679 CD 06 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
331   867C
332   867C 21 C3 85     1 ld hl,Ctrl_0
333   867F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
334   8681 AF           	xor a
335   8682 32 C4 85     	ld (Obj_dibujado),a
336   8685 CD E1 87     	call Store_Restore_entidades
337   8688 C1           	pop bc
338   8689 10 E0        	djnz 2B
339   868B
340   868B              ; Tras la gestión de las entidades, ... AMADEUS.
341   868B
342   868B CD 22 88     4 call Restore_Amadeus
343   868E CD D7 86     	call Mov_Amadeus
344   8691 3A C3 85     	ld a,(Ctrl_0)
345   8694 CB 67        	bit 4,a
346   8696 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
347   8698 CD 06 87     	call Guarda_foto_entidad_a_pintar
348   869B
349   869B 21 C3 85     3 ld hl,Ctrl_0
350   869E CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
351   86A0 AF           	xor a
352   86A1 32 C4 85     	ld (Obj_dibujado),a
353   86A4 CD 34 88     	call Store_Amadeus
354   86A7
355   86A7              ; -----
356   86A7
357   86A7 CD 3F 87     	call Inicia_punteros_de_entidades
358   86AA CD 10 88     	call Restore_Primera_entidad
359   86AD
360   86AD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
361   86AD
362   86AD CD 63 87     	call Calcula_numero_de_malotes
363   86B0 CD 7B 87     	call Calcula_numero_de_disparotes
364   86B3
365   86B3 3E 04        	ld a,4
366   86B5 D3 FE        	out ($fe),a
367   86B7 C9           	ret
368   86B8
369   86B8              ; --------------------------------------------------------------------------------------------------------------
370   86B8              ;
371   86B8              ;	29/1/23
372   86B8
373   86B8              Mov_obj
374   86B8
375   86B8              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
376   86B8
377   86B8 AF           	xor a
378   86B9 32 C4 85     	ld (Obj_dibujado),a
379   86BC CD 10 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
380   86BF              ;														; Obj_dibujado="0".
381   86BF              ; Movemos Entidades malignas.
382   86BF
383   86BF CD C7 94     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
384   86C2 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
385   86C5 CB 67        	bit 4,a
386   86C7 C8           	ret z
387   86C8
388   86C8              ; ---------
389   86C8
390   86C8 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
391   86CA 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
392   86CD CD 10 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
393   86D0 CD 27 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
394   86D3 CD F6 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
395   86D6 C9           	ret													; _de la misma.
396   86D7
397   86D7              ; --------------------------------------------------------------------------------------------------------------
398   86D7              ;
399   86D7              ;	29/1/23
400   86D7
401   86D7              Mov_Amadeus
402   86D7
403   86D7 AF           	xor a
404   86D8 32 C4 85     	ld (Obj_dibujado),a
405   86DB CD 10 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
406   86DE              ;														; Obj_dibujado="0".
407   86DE              ; Movemos Amadeus.
408   86DE
409   86DE CD 5A 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
410   86E1 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
411   86E4 CB 67        	bit 4,a
412   86E6 C8           	ret z
413   86E7
414   86E7              ; ---------
415   86E7
416   86E7 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
417   86E9 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
418   86EC CD 10 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
419   86EF CD 27 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
420   86F2 CD F6 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
421   86F5 C9           	ret													; _de la nave.
422   86F6
423   86F6              ; --------------------------------------------------------------------------------------------------------------
424   86F6              ;
425   86F6              ;	31/01/23
426   86F6              ;
427   86F6              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
428   86F6
429   86F6              Guarda_foto_entidad_a_borrar
430   86F6
431   86F6 CD 14 8E     	call Prepara_draw
432   86F9 CD 4E 8D     	call calcula_CColumnass
433   86FC CD 85 8D     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
434   86FF CD DA 8D     	call Define_rutina_de_impresion
435   8702 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
436   8705 C9           	ret
437   8706
438   8706              ; --------------------------------------------------------------------------------------------------------------
439   8706              ;
440   8706              ;	31/01/23
441   8706              ;
442   8706              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
443   8706              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
444   8706
445   8706              Guarda_foto_entidad_a_pintar
446   8706
447   8706 CD 33 87     	call Repone_pintar
448   8709 CD 3A 8B     	call Draw
449   870C CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
450   870F C9           	ret
451   8710
452   8710              ; --------------------------------------------------------------------------------------------------------------
453   8710              ;
454   8710              ;
455   8710
456   8710 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
457   8713 3A C4 85     	ld a,(Obj_dibujado)
458   8716 A7           	and a
459   8717 28 05        	jr z,1F
460   8719 11 B9 85     	ld de,Variables_de_pintado
461   871C 18 03        	jr 2F
462   871E 11 AF 85     1 ld de,Variables_de_borrado
463   8721 01 08 00     2 ld bc,8
464   8724 ED B0        	ldir
465   8726 C9           	ret
466   8727
467   8727              ; --------------------------------------------------------------------------------------------------------------
468   8727
469   8727 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
470   872A 11 96 85     	ld de,Filas
471   872D 01 08 00     	ld bc,8
472   8730 ED B0        	ldir
473   8732 C9           	ret
474   8733
475   8733 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
476   8736 11 96 85     	ld de,Filas
477   8739 01 08 00     	ld bc,8
478   873C ED B0        	ldir
479   873E C9           	ret
480   873F
481   873F              ; *************************************************************************************************************************************************************
482   873F              ;
483   873F              ; 8/1/23
484   873F              ;
485   873F              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
486   873F              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
487   873F              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
488   873F
489   873F              ; Destruye HL y DE !!!!!
490   873F
491   873F              Inicia_punteros_de_entidades
492   873F
493   873F 21 68 84     	ld hl,Indice_de_entidades
494   8742 CD 93 87         call Extrae_address
495   8745 22 D1 85         ld (Puntero_store_entidades),hl
496   8748 21 6A 84     	ld hl,Indice_de_entidades+2
497   874B 22 D5 85     	ld (Indice_restore),hl
498   874E CD 93 87     	call Extrae_address
499   8751 22 D3 85     	ld (Puntero_restore_entidades),hl
500   8754 C9               ret
501   8755
502   8755              ; *************************************************************************************************************************************************************
503   8755              ;
504   8755              ; 8/1/23
505   8755              ;
506   8755              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
507   8755
508   8755 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
509   8758 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
510   875B C9           	ret
511   875C 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
512   875F 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
513   8762 C9           	ret
514   8763
515   8763              ; -------------------------------------------------------------------------------------------------------------
516   8763              ;
517   8763              ; 28/2/23
518   8763              ;
519   8763
520   8763              Calcula_numero_de_malotes
521   8763
522   8763 21 00 70     	ld hl,Album_de_fotos
523   8766 EB           	ex de,hl
524   8767 2A DD 85     	ld hl,(Stack_snapshot)
525   876A
526   876A 06 00        	ld b,0
527   876C 7D           	ld a,l
528   876D 93           	sub e
529   876E 28 07        	jr z,1F
530   8770
531   8770              ; Nº de malotes no es "0".
532   8770
533   8770 D6 06        2 sub 6
534   8772 04           	inc b
535   8773 A7           	and a
536   8774 20 FA        	jr nz,2B
537   8776 78           	ld a,b
538   8777
539   8777 32 D8 85     1 ld (Numero_de_malotes),a
540   877A C9           	ret
541   877B
542   877B              ; -------------------------------------------------------------------------------------------------------------
543   877B              ;
544   877B              ; 28/2/23
545   877B              ;
546   877B
547   877B              Calcula_numero_de_disparotes
548   877B
549   877B 21 60 70     	ld hl,Album_de_fotos_disparos
550   877E EB           	ex de,hl
551   877F 2A DF 85     	ld hl,(Stack_snapshot_disparos)
552   8782
553   8782 06 00        	ld b,0
554   8784 7D           	ld a,l
555   8785 93           	sub e
556   8786 28 07        	jr z,1F
557   8788
558   8788              ; Nº de malotes no es "0".
559   8788
560   8788 D6 06        2 sub 6
561   878A 04           	inc b
562   878B A7           	and a
563   878C 20 FA        	jr nz,2B
564   878E 78           	ld a,b
565   878F
566   878F 32 E1 85     1 ld (Numero_de_disparotes),a
567   8792 C9           	ret
568   8793              ; *************************************************************************************************************************************************************
569   8793              ;
570   8793              ; 20/10/22
571   8793              ;
572   8793              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
573   8793              ;
574   8793              ; Destruye el puntero y DE !!!!!
575   8793
576   8793 5E           Extrae_address ld e,(hl)
577   8794 23           	inc hl
578   8795 56           	ld d,(hl)
579   8796 2B           	dec hl
580   8797 EB           	ex de,hl
581   8798 C9           	ret
582   8799
583   8799              ; *************************************************************************************************************************************************************
584   8799              ;
585   8799              ;	7/2/23
586   8799              ;
587   8799              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
588   8799              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
589   8799              ;
590   8799              ;   Destruye HL y BC !!!!!,
591   8799              ;
592   8799              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
593   8799              ;					"0" ..... Izquierda.
594   8799
595   8799              Inicia_Puntero_objeto
596   8799
597   8799 3A AA 85     	ld a,(Cuad_objeto)
598   879C E6 01        	and 1
599   879E F5           	push af
600   879F CC BD 87     	call z,Inicia_puntero_objeto_izq
601   87A2 F1           	pop af
602   87A3 28 2B        	jr z,1F
603   87A5 CD AA 87     	call Inicia_puntero_objeto_der
604   87A8 18 26        	jr 1F
605   87AA
606   87AA              ; Arrancamos desde la parte izquierda de la pantalla.
607   87AA              ; Iniciamos (Indice_Sprite_der).
608   87AA
609   87AA 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
610   87AD 22 A4 85     	ld (Puntero_DESPLZ_der),hl
611   87B0 CD 93 87     	call Extrae_address
612   87B3 22 9A 85     	ld (Puntero_objeto),hl
613   87B6
614   87B6 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
615   87B9              ;	call Extrae_address
616   87B9 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
617   87BC C9           	ret
618   87BD
619   87BD              ; Arrancamos desde la parte derecha de la pantalla.
620   87BD              ; Iniciamos (Indice_Sprite_izq).
621   87BD
622   87BD 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
623   87C0 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
624   87C3 CD 93 87     	call Extrae_address
625   87C6 22 9A 85     	ld (Puntero_objeto),hl
626   87C9
627   87C9 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
628   87CC              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
629   87CC 22 A4 85     	ld (Puntero_DESPLZ_der),hl
630   87CF C9           	ret
631   87D0
632   87D0              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
633   87D0
634   87D0 21 38 83     1 ld hl,Amadeus
635   87D3 ED 4B 9A 85  	ld bc,(Puntero_objeto)
636   87D7 B7 ED 42     	sub hl,bc
637   87DA C0           	ret nz
638   87DB 21 C3 85     	ld hl,Ctrl_0
639   87DE CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
640   87E0 C9           	ret 												; _de nuestra nave en los extremos.
641   87E1
642   87E1              ; *************************************************************************************************************************************************************
643   87E1              ;
644   87E1              ;	8/1/23
645   87E1              ;
646   87E1              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
647   87E1              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
648   87E1
649   87E1              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
650   87E1              ;	_de la 2ª y 3ª entidad respectivamente.
651   87E1
652   87E1              Store_Restore_entidades
653   87E1
654   87E1 E5           	push hl
655   87E2 D5           	push de
656   87E3 C5            	push bc
657   87E4
658   87E4              ;	STORE !!!!!
659   87E4              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
660   87E4
661   87E4 21 96 85     	ld hl,Filas
662   87E7 ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
663   87EB 01 3A 00     	ld bc,58
664   87EE ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
665   87F0
666   87F0              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
667   87F0
668   87F0 2A D3 85     	ld hl,(Puntero_restore_entidades)
669   87F3 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
670   87F6 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
671   87F9 01 3A 00     	ld bc,58
672   87FC ED B0        	ldir
673   87FE
674   87FE              ;	Incrementa RESTORE !!!!!
675   87FE
676   87FE 2A D5 85         ld hl,(Indice_restore)
677   8801 23           	inc hl
678   8802 23           	inc hl
679   8803 22 D5 85     	ld (Indice_restore),hl
680   8806 CD 93 87         call Extrae_address
681   8809 22 D3 85         ld (Puntero_restore_entidades),hl
682   880C C1           	pop bc
683   880D D1           	pop de
684   880E E1           	pop hl
685   880F C9           	ret
686   8810
687   8810              ; **************************************************************************************************
688   8810              ;
689   8810              ;	29/10/22
690   8810              ;
691   8810              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
692   8810
693   8810 E5           Restore_Primera_entidad push hl
694   8811 D5           	push de
695   8812 C5            	push bc
696   8813 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
697   8816 11 96 85     	ld de,Filas
698   8819 01 3A 00     	ld bc,58
699   881C ED B0        	ldir
700   881E C1           	pop bc
701   881F D1           	pop de
702   8820 E1           	pop hl
703   8821 C9           	ret
704   8822
705   8822              ; **************************************************************************************************
706   8822              ;
707   8822              ;	25/01/23
708   8822              ;
709   8822              ;	Restore_Amadeus
710   8822              ;
711   8822              ;	Cargamos en DRAW los parámetros de Amadeus.
712   8822              ;
713   8822
714   8822 E5           Restore_Amadeus	push hl
715   8823 D5           	push de
716   8824 C5            	push bc
717   8825 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
718   8828 11 96 85     	ld de,Filas
719   882B 01 3A 00     	ld bc,58
720   882E ED B0        	ldir
721   8830 C1           	pop bc
722   8831 D1           	pop de
723   8832 E1           	pop hl
724   8833 C9           	ret
725   8834
726   8834              ; *************************************************************************************************************************************************************
727   8834              ;
728   8834              ;	29/01/23
729   8834              ;
730   8834              ;	Store_Amadeus
731   8834              ;
732   8834              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
733   8834              ;
734   8834
735   8834 E5           Store_Amadeus push hl
736   8835 D5           	push de
737   8836 C5            	push bc
738   8837 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
739   883A 11 74 84     	ld de,Amadeus_db
740   883D 01 3A 00     	ld bc,58
741   8840 ED B0        	ldir
742   8842 C1           	pop bc
743   8843 D1           	pop de
744   8844 E1           	pop hl
745   8845 C9           	ret
746   8846
747   8846              ; **************************************************************************************************
748   8846
749   8846              ; Teclado.
750   8846
751   8846 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
752   8848 DB FE        	in a,($fe)
753   884A E6 01        	and $01
754   884C 28 02        	jr z,1f
755   884E 18 F6        	jr Pulsa_ENTER
756   8850 C9           1 ret
757   8851
758   8851              ; **************************************************************************************************
759   8851              ;
760   8851              ; Temporización.
761   8851
762   8851              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
763   8851              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
764   8851              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
765   8851              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
766   8851
767   8851              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
768   8851              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
769   8851              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
770   8851
771   8851              ; A partir de $4f61 no hace falta DELAY.
772   8851
773   8851              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
774   8851
775   8851 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
776   8854 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
777   8855 78           	LD A,B
778   8856 A7           	AND A
779   8857 20 FB        	JR NZ,wait
780   8859 C9           	RET
781   885A
782   885A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
783   885A              ;
784   885A              ;	5/3/23
785   885A              ;
786   885A              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
787   885A
788   885A              Movimiento_Amadeus
789   885A
790   885A              ; Disparo.
791   885A
792   885A 3E F7        	ld a,$f7												; "5" para disparar.
793   885C DB FE        	in a,($fe)
794   885E E6 10        	and $10
795   8860 CC B1 88     	call z,Genera_disparo
796   8863
797   8863 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
798   8865 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
799   8867 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
800   8869 CC 78 92         call z,Mov_left											;			"			"			"			"			"			"			"			"
801   886C 3E F7        	ld a,$f7
802   886E DB FE        	in a,($fe)
803   8870 E6 01        	and $01
804   8872 C8           	ret z
805   8873
806   8873 3E F7        	ld a,$f7
807   8875 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
808   8877 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
809   8879 CC 5A 91     	call z,Mov_right										;			"			"			"			"			"			"			"			"
810   887C C9           	ret
811   887D
812   887D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
813   887D              ;
814   887D              ;	Rutina provisional para que los malotes cagen balas.
815   887D
816   887D 3E 7F        Detecta_disparo_entidad ld a,$7f
817   887F DB FE        	in a,($fe)
818   8881 E6 01        	and 1
819   8883 C0           	ret nz
820   8884 CD B1 88     	call Genera_disparo
821   8887 C9           	ret
822   8888
823   8888              ; Pinta indicadores de FILAS. ------------------------------------------------------
824   8888
825   8888 21 10 40     Pinta_FILAS ld hl,$4010
826   888B              ;	ld b,9
827   888B              ;2 push hl
828   888B              ;	push bc
829   888B 06 BF        	ld b,$bf
830   888D 36 80        1 ld (hl),%10000000
831   888F CD 20 8E     	call NextScan
832   8892 10 F9        	djnz 1B
833   8894              ;	pop bc
834   8894              ;	pop hl
835   8894              ;	inc l
836   8894              ;	djnz 2B
837   8894 06 03        	ld b,3
838   8896 21 00 47         ld hl,$4700
839   8899 CD 9F 88     3 call Bucle_1
840   889C 10 FB            djnz 3B
841   889E C9               ret
842   889F
843   889F C5           Bucle_1 push bc
844   88A0 E5                   push hl
845   88A1 D1                   pop de
846   88A2 13                   inc de
847   88A3 01 FF 00             ld bc,255
848   88A6 36 FF                ld (hl),255
849   88A8 ED B0                ldir
850   88AA 23                   inc hl
851   88AB 3E 07                ld a,7
852   88AD 84                   add a,h
853   88AE 67                   ld h,a
854   88AF C1                   pop bc
855   88B0 C9                   ret
856   88B1
857   88B1              ; ---------------------------------------------------------------
858   88B1
859   88B1              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88B1              ; ******************************************************************************************************************************************************************************************
  2+  88B1              ;
  3+  88B1              ;   19/02/23
  4+  88B1              ;
  5+  88B1              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88B1              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88B1              ;
  8+  88B1              ;
  9+  88B1              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88B1              ;
 11+  88B1              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88B1              ;               _ hacen las entidades hacia abajo.
 13+  88B1              ;
 14+  88B1              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88B1              ;
 16+  88B1              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88B1              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88B1              ;
 19+  88B1              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88B1              ;           _ la bala.
 21+  88B1              ;
 22+  88B1              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88B1              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88B1              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88B1              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88B1              ;           _ en el momento de generarse la bala)).
 27+  88B1
 28+  88B1              Genera_disparo
 29+  88B1
 30+  88B1              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88B1              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88B1              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88B1              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88B1              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88B1              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88B1              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88B1
 38+  88B1              ; Exclusiones:
 39+  88B1
 40+  88B1 3A CC 85         ld a,(Columnas)
 41+  88B4 47               ld b,a
 42+  88B5 3A 97 85         ld a,(Columns)
 43+  88B8 B8               cp b
 44+  88B9 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88BA
 46+  88BA              ; ----- ----- -----
 47+  88BA
 48+  88BA              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 49+  88BA
 50+  88BA 21 F2 83         ld hl,ON_Disparo_2A
 51+  88BD CD 93 87         call Extrae_address
 52+  88C0 24               inc h
 53+  88C1 25               dec h
 54+  88C2 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
 55+  88C4
 56+  88C4 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 57+  88C7 A7               and a
 58+  88C8 ED 52            sbc hl,de
 59+  88CA D0               ret nc
 60+  88CB
 61+  88CB              ; ----- ----- -----
 62+  88CB
 63+  88CB 21 00 80     14 ld hl,Indice_disparo
 64+  88CE 3A 9E 85         ld a,(CTRL_DESPLZ)
 65+  88D1 4F               ld c,a
 66+  88D2 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 67+  88D4              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 68+  88D4              ;                                            ""        ""       "f9", B="1"
 69+  88D4              ;                                            ""        ""       "fb", B="2"
 70+  88D4              ;                                            ""        ""       "fb", B="3"
 71+  88D4 A7               and a
 72+  88D5 28 10            jr z,1F
 73+  88D7 E6 01            and 1
 74+  88D9 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 75+  88DA
 76+  88DA 79               ld a,c
 77+  88DB 16 F9            ld d,$f9
 78+  88DD 23           2 inc hl
 79+  88DE 23               inc hl
 80+  88DF 04               inc b
 81+  88E0 BA               cp d
 82+  88E1 28 04            jr z,1F
 83+  88E3 14               inc d
 84+  88E4 14               inc d
 85+  88E5 18 F6            jr 2B
 86+  88E7
 87+  88E7 CD 93 87     1 call Extrae_address
 88+  88EA E5               push hl
 89+  88EB FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 90+  88ED DD 21 B3 90  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 91+  88F1
 92+  88F1              ;	Se cumplen las condiciones necesarias para generar un disparo.
 93+  88F1              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 94+  88F1
 95+  88F1 3A AA 85     	ld a,(Cuad_objeto)
 96+  88F4 FE 02            cp 2
 97+  88F6 38 60            jr c,3F
 98+  88F8 28 5E            jr z,3F
 99+  88FA
100+  88FA              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
101+  88FA
102+  88FA E6 01            and 1
103+  88FC 28 2D            jr z,4F
104+  88FE
105+  88FE              ; 	Estamos en el 3er cuadrante de pantalla.
106+  88FE              ; 	3er CUAD. ----- ----- ----- ----- -----
107+  88FE              ;
108+  88FE              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
109+  88FE              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
110+  88FE              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
111+  88FE
112+  88FE 2A 98 85     	ld hl,(Posicion_actual)
113+  8901
114+  8901              ;   Amadeus o entidad ???.
115+  8901
116+  8901 3A C3 85         ld a,(Ctrl_0)
117+  8904 CB 77            bit 6,a
118+  8906 28 0D            jr z,8F
119+  8908
120+  8908              ; 	Dispara Amadeus.
121+  8908
122+  8908 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
123+  890A CD 2F 8E         call PreviousScan
124+  890D CD 2F 8E         call PreviousScan
125+  8910
126+  8910              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
127+  8910              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
128+  8910              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
129+  8910              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
130+  8910
131+  8910 CD 82 89         call Ajusta_disparo_parte_izquierda
132+  8913 18 0E            jr 10F
133+  8915
134+  8915              ; 	Dispara Entidad.
135+  8915
136+  8915 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
137+  8917
138+  8917              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
139+  8917              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
140+  8917
141+  8917 C5               push bc
142+  8918 06 10            ld b,16
143+  891A CD 20 8E     9 call NextScan
144+  891D 10 FB            djnz 9B
145+  891F C1               pop bc
146+  8920
147+  8920              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
148+  8920              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
149+  8920              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
150+  8920              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
151+  8920
152+  8920 CD 82 89         call Ajusta_disparo_parte_izquierda
153+  8923
154+  8923 CD F7 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
155+  8926              ;                                                   ; _al generar el disparo.
156+  8926
157+  8926              ; 	LLegados a este punto tendremos:
158+  8926              ;
159+  8926              ;       Puntero_objeto_disparo en IY.
160+  8926              ;       Rutinas_de_impresion en IX.
161+  8926              ;       Puntero_de_impresion en HL.
162+  8926              ;       Impacto/Dirección en BC.
163+  8926
164+  8926 CD 8A 89         call Almacena_disparo
165+  8929 18 4F            jr 6F                                           ; RET.
166+  892B
167+  892B
168+  892B              ; 	Estamos en el 4º cuadrante de pantalla.
169+  892B              ; 	4º CUAD. ----- ----- ----- ----- -----
170+  892B              ;
171+  892B              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
172+  892B              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
173+  892B              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
174+  892B
175+  892B 2A 98 85     4 ld hl,(Posicion_actual)
176+  892E
177+  892E              ;   Amadeus o entidad ???.
178+  892E
179+  892E 3A C3 85         ld a,(Ctrl_0)
180+  8931 CB 77            bit 6,a
181+  8933 28 0D            jr z,11F
182+  8935
183+  8935              ; 	Dispara Amadeus.
184+  8935
185+  8935 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
186+  8937 CD 2F 8E         call PreviousScan
187+  893A CD 2F 8E         call PreviousScan
188+  893D
189+  893D              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
190+  893D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
191+  893D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
192+  893D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
193+  893D
194+  893D CD 7B 89         call Ajusta_disparo_parte_derecha
195+  8940 18 0E            jr 13F
196+  8942
197+  8942              ; 	Dispara Entidad.
198+  8942
199+  8942 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
200+  8944
201+  8944              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
202+  8944              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
203+  8944
204+  8944 C5               push bc
205+  8945
206+  8945 06 10            ld b,16
207+  8947 CD 20 8E     12 call NextScan
208+  894A 10 FB            djnz 12B
209+  894C
210+  894C C1               pop bc
211+  894D
212+  894D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
213+  894D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
214+  894D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
215+  894D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
216+  894D
217+  894D CD 7B 89         call Ajusta_disparo_parte_derecha
218+  8950
219+  8950 CD F7 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
220+  8953              ;                                                     ; _al generar el disparo.
221+  8953
222+  8953              ; LLegados a este punto tendremos:
223+  8953              ;
224+  8953              ;       Puntero_objeto_disparo en IY.
225+  8953              ;       Rutinas_de_impresion en IX.
226+  8953              ;       Puntero_de_impresion en HL.
227+  8953              ;       Impacto/Dirección en BC.
228+  8953
229+  8953 CD 8A 89         call Almacena_disparo
230+  8956 18 22            jr 6F                                           ; RET.
231+  8958
232+  8958              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
233+  8958
234+  8958 28 11        3 jr z,5F
235+  895A
236+  895A              ; 	1er CUAD. ----- ----- ----- ----- -----
237+  895A              ;
238+  895A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
239+  895A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
240+  895A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
241+  895A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
242+  895A
243+  895A              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
244+  895A              ;	   ""        ""       "f9", B="1"
245+  895A              ;	   ""        ""       "fb", B="2"
246+  895A              ; 	   ""        ""       "fb", B="3"
247+  895A
248+  895A 2A 98 85     	ld hl,(Posicion_actual)
249+  895D CD 20 8E     	call NextScan
250+  8960
251+  8960              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
252+  8960              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
253+  8960              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
254+  8960              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
255+  8960
256+  8960 CD 82 89         call Ajusta_disparo_parte_izquierda
257+  8963
258+  8963              ; 	No se produce impacto. B="$80"
259+  8963              ; 	Dirección del proyectil hacia abajo. C="$80"
260+  8963
261+  8963 01 80 80         ld bc,$8080
262+  8966
263+  8966              ; 	LLegados a este punto tendremos:
264+  8966              ;
265+  8966              ;       Puntero_objeto_disparo en IY.
266+  8966              ;       Rutinas_de_impresion en IX.
267+  8966              ;       Puntero_de_impresion en HL.
268+  8966              ;       Impacto/Dirección en BC.
269+  8966
270+  8966 CD 8A 89         call Almacena_disparo
271+  8969 18 0F            jr 6F                                           ; RET.
272+  896B
273+  896B              ; 	Estamos en el 2º cuadrante de pantalla.
274+  896B              ; 	2º CUAD. ----- ----- ----- ----- -----
275+  896B              ;
276+  896B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
277+  896B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
278+  896B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
279+  896B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
280+  896B
281+  896B 2A 98 85     5 ld hl,(Posicion_actual)
282+  896E CD 20 8E     	call NextScan
283+  8971
284+  8971              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
285+  8971              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
286+  8971              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
287+  8971              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
288+  8971
289+  8971 CD 7B 89         call Ajusta_disparo_parte_derecha
290+  8974
291+  8974              ; 	No se produce impacto. B="$80"
292+  8974              ; 	Dirección del proyectil hacia abajo. C="80"
293+  8974
294+  8974 01 80 80     15 ld bc,$8080
295+  8977
296+  8977              ; 	LLegados a este punto tendremos:
297+  8977              ;
298+  8977              ;       Puntero_objeto_disparo en IY.
299+  8977              ;       Rutinas_de_impresion en IX.
300+  8977              ;       Puntero_de_impresion en HL.
301+  8977              ;       Impacto/Dirección en BC.
302+  8977
303+  8977 CD 8A 89         call Almacena_disparo
304+  897A
305+  897A C9           6 ret
306+  897B
307+  897B              ; ----------------------------------------------------------------
308+  897B              ;
309+  897B              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
310+  897B              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
311+  897B              ;	_ (lado izq. o derecho), de la entidad que lo genera.
312+  897B
313+  897B 78           Ajusta_disparo_parte_derecha ld a,b
314+  897C FE 02            cp 2
315+  897E 38 01            jr c,1F
316+  8980 23               inc hl
317+  8981 C9           1 ret
318+  8982
319+  8982 78           Ajusta_disparo_parte_izquierda ld a,b
320+  8983 FE 01        	cp 1
321+  8985 20 01        	jr nz,1F
322+  8987 2B           	dec hl
323+  8988 2B           1 dec hl
324+  8989 C9               ret
325+  898A
326+  898A              ; ----------------------------------------------------------------
327+  898A              ;
328+  898A              ;   25/02/23
329+  898A              ;
330+  898A              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
331+  898A              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
332+  898A
333+  898A              Almacena_disparo
334+  898A
335+  898A E5               push hl  										; HL contiene el puntero de impresión.
336+  898B F1               pop af
337+  898C 08               ex af,af                                        ; Puntero_de_impresion en AF'.
338+  898D
339+  898D 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
340+  898E E6 01            and 1
341+  8990 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
342+  8992              ;                                                   ; _ es Amadeus o una entidad la que dispara.
343+  8992              ; 	Dispara AMADEUS.
344+  8992
345+  8992              ;	Comprobamos que a Amadeus aún le quedan disparos.
346+  8992              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
347+  8992              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
348+  8992              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
349+  8992
350+  8992 C5               push bc
351+  8993 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
352+  8996 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
353+  8999 A7               and a
354+  899A ED 42            sbc hl,bc
355+  899C CC 5C 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
356+  899F C1               pop bc
357+  89A0 28 54            jr z,4F
358+  89A2
359+  89A2 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
360+  89A5 23               inc hl
361+  89A6 23               inc hl
362+  89A7 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
363+  89AA              ;                                                   ; _ Disparo_(+1).
364+  89AA 18 18            jr 2F
365+  89AC
366+  89AC              ; Dispara una entidad.
367+  89AC
368+  89AC C5           1 push bc
369+  89AD 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
370+  89B0 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
371+  89B3 A7               and a
372+  89B4 ED 42            sbc hl,bc
373+  89B6 CC 55 87         call z,Inicia_Puntero_Disparo_Entidades
374+  89B9 C1               pop bc
375+  89BA 28 3A            jr z,4F
376+  89BC
377+  89BC 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
378+  89BF 23               inc hl
379+  89C0 23               inc hl
380+  89C1 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
381+  89C4              ;                                                   ; _ Disparo_(+1).
382+  89C4 CD 93 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
383+  89C7              ;                                                   ; _ los 8 bytes que definen el disparo:
384+  89C7              ;
385+  89C7              ;                                                     Puntero_objeto_disparo en IY.
386+  89C7              ;                                                     Rutinas_de_impresion en IX.
387+  89C7              ;                                                     Puntero_de_impresion en HL.
388+  89C7              ;                                                     Impacto/Dirección en BC.
389+  89C7
390+  89C7 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
391+  89C8 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
392+  89C9 23               inc hl                                          ; _ al siguiente.
393+  89CA A7               and a
394+  89CB 20 C0            jr nz,3B
395+  89CD
396+  89CD 08               ex af,af
397+  89CE ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
398+  89D2 F9               ld sp,hl
399+  89D3
400+  89D3 DD E5            push ix                                         ; Rutina de impresión.
401+  89D5 F5               push af                                         ; Puntero de impresión.
402+  89D6 FD E5            push iy                                         ; Puntero objeto.
403+  89D8 C5               push bc                                         ; Control.
404+  89D9
405+  89D9 ED 7B D9 85      ld sp,(Stack)
406+  89DD
407+  89DD              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
408+  89DD
409+  89DD 21 D0 85     	ld hl,Ctrl_1
410+  89E0 CB C6        	set 0,(hl)
411+  89E2
412+  89E2 DD E5        	push ix
413+  89E4 E1               pop hl
414+  89E5 F5               push af
415+  89E6 DD E1            pop ix
416+  89E8
417+  89E8 CD A0 7F     	call Guarda_foto_registros
418+  89EB
419+  89EB 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
420+  89EE CB 86        	res 0,(hl)
421+  89F0
422+  89F0              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
423+  89F0              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
424+  89F0
425+  89F0 CD 5C 87         call Inicia_Puntero_Disparo_Amadeus
426+  89F3 CD 55 87         call Inicia_Puntero_Disparo_Entidades
427+  89F6
428+  89F6 C9           4 ret
429+  89F7
430+  89F7              ; ----------------------------------------------------------------
431+  89F7              ;
432+  89F7              ;   4/3/23
433+  89F7              ;
434+  89F7              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
435+  89F7              ;   _ al generarse el disparo.
436+  89F7              ;
437+  89F7              ;       "$80" ..... No se produce colisión.
438+  89F7              ;       "$81" ..... Se produce colisión.
439+  89F7
440+  89F7              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
441+  89F7              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
442+  89F7
443+  89F7
444+  89F7 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
445+  89F9 E5               push hl                                        ; Puntero de impresión.
446+  89FA 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
447+  89FC CD 0E 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
448+  89FF E1               pop hl
449+  8A00 E5               push hl
450+  8A01 CD 20 8E         call NextScan
451+  8A04 1E 80            ld e,$80                                       ; ----- ( ) -----
452+  8A06 CD 0E 8A         call Bucle_2
453+  8A09
454+  8A09              ; Hay impacto.
455+  8A09
456+  8A09 43           2 ld b,e
457+  8A0A E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
458+  8A0B FD E1            pop iy
459+  8A0D C9               ret
460+  8A0E
461+  8A0E               ; ---------- ----------
462+  8A0E
463+  8A0E 06 02        Bucle_2 ld b,2
464+  8A10 FD 7E 00     2 ld a,(iy)
465+  8A13 A6               and (hl)
466+  8A14 28 02            jr z,1F
467+  8A16 1E 81            ld e,$81
468+  8A18 23           1 inc hl
469+  8A19 FD 23            inc iy
470+  8A1B 10 F3            djnz 2B
471+  8A1D C9               ret
472+  8A1E
473+  8A1E              ; -------------------------------------------------------------------------------------------------------------
474+  8A1E              ;
475+  8A1E              ;   13/03/23
476+  8A1E              ;
477+  8A1E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
478+  8A1E              ;
479+  8A1E              ;   DESTRUYE: HL,BC,DE y A.
480+  8A1E
481+  8A1E 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
482+  8A21 7E               ld a,(hl)
483+  8A22 A7               and a
484+  8A23 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
485+  8A24
486+  8A24 44               ld b,h
487+  8A25 4D               ld c,l
488+  8A26 2A DF 85         ld hl,(Stack_snapshot_disparos)
489+  8A29 E5               push hl
490+  8A2A A7               and a
491+  8A2B ED 42            sbc hl,bc
492+  8A2D E5               push hl
493+  8A2E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
494+  8A2F
495+  8A2F E1               pop hl
496+  8A30 54               ld d,h
497+  8A31 5D               ld e,l
498+  8A32 1B               dec de
499+  8A33 ED B8            lddr                                                ; Limpiamos.
500+  8A35
501+  8A35 21 60 70         ld hl,Album_de_fotos_disparos
502+  8A38 22 DF 85         ld (Stack_snapshot_disparos),hl
503+  8A3B
504+  8A3B C9               ret
505+  8A3C
506+  8A3C              ; -------------------------------------------------------------------------------------------------------------
507+  8A3C              ;
508+  8A3C              ;   22/03/23
509+  8A3C              ;
510+  8A3C
511+  8A3C 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
512+  8A3F 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
513+  8A42
514+  8A42 CD 93 87     2 call Extrae_address
515+  8A45 7E               ld a,(hl)
516+  8A46 A7               and a
517+  8A47 28 1E            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
518+  8A49
519+  8A49              ; ----- ----- ----- ----- ----- -----
520+  8A49
521+  8A49 C5               push bc
522+  8A4A CD B5 8A         call foto_disparo_a_borrar
523+  8A4D
524+  8A4D              ; Existe colisión con este disparo???
525+  8A4D
526+  8A4D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
527+  8A4E 7E               ld a,(hl)
528+  8A4F 2B               dec hl
529+  8A50 E6 01            and 1
530+  8A52 28 0A            jr z,9F
531+  8A54
532+  8A54              ; Elimino el disparo de la base de datos.
533+  8A54
534+  8A54 E5               push hl
535+  8A55 CD 2F 8B         call Elimina_disparo_de_base_de_datos
536+  8A58 E1               pop hl
537+  8A59 3E 01            ld a,1
538+  8A5B 32 E6 85         ld (Impacto),a                                       ; Indicamos que se ha producido Impacto en una entidad.
539+  8A5E
540+  8A5E CD DE 8A     9 call Mueve_disparo
541+  8A61 CD B5 8A         call foto_disparo_a_borrar
542+  8A64 C1               pop bc
543+  8A65
544+  8A65 18 04            jr 7F
545+  8A67
546+  8A67              ; ----- ----- ----- ----- ----- -----
547+  8A67
548+  8A67 ED 42        1 sbc hl,bc
549+  8A69 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
550+  8A6B
551+  8A6B 2A E4 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
552+  8A6E 23               inc hl
553+  8A6F 23               inc hl
554+  8A70 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
555+  8A73 18 CD            jr 2B
556+  8A75
557+  8A75 CD 5C 87     3 call Inicia_Puntero_Disparo_Amadeus
558+  8A78
559+  8A78 01 66 84         ld bc,Disparo_11
560+  8A7B 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
561+  8A7E
562+  8A7E CD 93 87     5 call Extrae_address
563+  8A81 7E               ld a,(hl)
564+  8A82 A7               and a
565+  8A83 28 1E            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
566+  8A85
567+  8A85              ; ----- ----- ----- ----- ----- -----
568+  8A85
569+  8A85 C5               push bc
570+  8A86 CD B5 8A         call foto_disparo_a_borrar
571+  8A89
572+  8A89              ; Existe colisión con este disparo???
573+  8A89
574+  8A89 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
575+  8A8A 7E               ld a,(hl)
576+  8A8B 2B               dec hl
577+  8A8C E6 01            and 1
578+  8A8E 28 0A            jr z,10F
579+  8A90
580+  8A90              ; Elimino el disparo de la base de datos.
581+  8A90
582+  8A90 E5               push hl
583+  8A91 CD 2F 8B         call Elimina_disparo_de_base_de_datos
584+  8A94 E1               pop hl
585+  8A95 3E 02            ld a,2                                               ; Indicamos que se ha producido Impacto en Amadeus.
586+  8A97 32 E6 85         ld (Impacto),a
587+  8A9A
588+  8A9A CD DE 8A     10 call Mueve_disparo
589+  8A9D CD B5 8A         call foto_disparo_a_borrar
590+  8AA0 C1               pop bc
591+  8AA1
592+  8AA1 18 04            jr 8F
593+  8AA3
594+  8AA3              ; ----- ----- ----- ----- ----- -----
595+  8AA3
596+  8AA3 ED 42        4 sbc hl,bc
597+  8AA5 28 0A            jr z,6F
598+  8AA7
599+  8AA7 2A E2 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
600+  8AAA 23               inc hl
601+  8AAB 23               inc hl
602+  8AAC 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
603+  8AAF 18 CD            jr 5B
604+  8AB1
605+  8AB1 CD 55 87     6 call Inicia_Puntero_Disparo_Entidades
606+  8AB4 C9               ret
607+  8AB5
608+  8AB5              ; ------------------------------------------------------------------
609+  8AB5
610+  8AB5              foto_disparo_a_borrar
611+  8AB5
612+  8AB5 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
613+  8AB6 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
614+  8AB7 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
615+  8AB8
616+  8AB8 E5               push hl
617+  8AB9 23               inc hl
618+  8ABA 23               inc hl
619+  8ABB ED 73 D9 85      ld (Stack),sp
620+  8ABF F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
621+  8AC0 FD E1            pop iy
622+  8AC2 DD E1            pop ix
623+  8AC4 E1               pop hl
624+  8AC5 ED 7B D9 85      ld sp,(Stack)
625+  8AC9 3A D0 85         ld a,(Ctrl_1)
626+  8ACC CB C7            set 0,a
627+  8ACE 32 D0 85         ld (Ctrl_1),a
628+  8AD1 CD A0 7F         call Guarda_foto_registros
629+  8AD4 3A D0 85         ld a,(Ctrl_1)
630+  8AD7 CB 87            res 0,a
631+  8AD9 32 D0 85         ld (Ctrl_1),a
632+  8ADC E1               pop hl
633+  8ADD C9               ret
634+  8ADE
635+  8ADE E5           Mueve_disparo push hl
636+  8ADF 7E               ld a,(hl)
637+  8AE0 06 04            ld b,4
638+  8AE2 23           1 inc hl
639+  8AE3 10 FD            djnz 1B
640+  8AE5
641+  8AE5 CD 93 87         call Extrae_address
642+  8AE8
643+  8AE8 E6 01            and 1
644+  8AEA 28 2A            jr z,2F
645+  8AEC
646+  8AEC              ; Disparo hacia arriba, (Amadeus).
647+  8AEC
648+  8AEC              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
649+  8AEC              ; _ de la dificultad.
650+  8AEC
651+  8AEC CD 2F 8E         call PreviousScan
652+  8AEF CD 2F 8E         call PreviousScan
653+  8AF2 CD 2F 8E         call PreviousScan
654+  8AF5
655+  8AF5              ; Detecta si el disparo de Amadeus sale de pantalla:
656+  8AF5
657+  8AF5 7C               ld a,h
658+  8AF6 FE 40            cp $40
659+  8AF8 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
660+  8AFA
661+  8AFA              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
662+  8AFA
663+  8AFA EB               ex de,hl
664+  8AFB 06 04            ld b,4
665+  8AFD 2B           6 dec hl
666+  8AFE 10 FD            djnz 6B
667+  8B00
668+  8B00 CD 2F 8B         call Elimina_disparo_de_base_de_datos
669+  8B03
670+  8B03 18 0C            jr 4F
671+  8B05
672+  8B05              ; Se ha desplazado la bala, compruebo colisión.
673+  8B05
674+  8B05 D5           3 push de
675+  8B06 C5               push bc
676+  8B07 CD F7 89         call Comprueba_Colision
677+  8B0A 78               ld a,b
678+  8B0B C1               pop bc
679+  8B0C D1               pop de
680+  8B0D
681+  8B0D EB               ex de,hl
682+  8B0E
683+  8B0E 73               ld (hl),e
684+  8B0F 23               inc hl
685+  8B10 72               ld (hl),d
686+  8B11
687+  8B11 E1           4 pop hl
688+  8B12 23               inc hl
689+  8B13 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
690+  8B14 2B               dec hl
691+  8B15 C9               ret
692+  8B16
693+  8B16              ; Disparo hacia abajo, (Entidad).
694+  8B16
695+  8B16              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
696+  8B16              ; _ de la dificultad.
697+  8B16
698+  8B16 CD 20 8E     2 call NextScan
699+  8B19 CD 20 8E         call NextScan
700+  8B1C CD 20 8E         call NextScan
701+  8B1F
702+  8B1F                ; Detecta si el disparo de la entidad sale de la pantalla.
703+  8B1F
704+  8B1F 7C               ld a,h
705+  8B20 FE 58            cp $58
706+  8B22 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
707+  8B24
708+  8B24 EB               ex de,hl
709+  8B25 06 04            ld b,4
710+  8B27 2B           5 dec hl
711+  8B28 10 FD            djnz 5B
712+  8B2A
713+  8B2A CD 2F 8B         call Elimina_disparo_de_base_de_datos
714+  8B2D
715+  8B2D 18 E2            jr 4B
716+  8B2F
717+  8B2F              ; HL apunta al primer byte de la base de datos del disparo.
718+  8B2F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
719+  8B32 AF               xor a
720+  8B33 77               ld (hl),a
721+  8B34 54               ld d,h
722+  8B35 5D               ld e,l
723+  8B36 13               inc de
724+  8B37 ED B0            ldir
725+  8B39 C9               ret
# file closed: Disparo.asm
860   8B3A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8B3A              ; ******************************************************************************************************************************************************************************************
  2+  8B3A              ;
  3+  8B3A              ; 01/23
  4+  8B3A              ;
  5+  8B3A              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8B3A
  7+  8B3A CD 14 8E     Draw call Prepara_draw
  8+  8B3D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8B3E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8B3F 28 05        	jr z,2F
 11+  8B41
 12+  8B41 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8B44 18 0C        	jr 1F
 14+  8B46 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8B49 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8B4C CD DB 8C     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8B4F              ;													; _la esquina superior izquierda de la pantalla.
 18+  8B4F CD 49 95     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8B52 3A C3 85     1 ld a,(Ctrl_0)
 20+  8B55 CB 6F        	bit 5,a
 21+  8B57 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8B59
 23+  8B59 CD 71 8B     	call Comprueba_limite_horizontal
 24+  8B5C CD 01 8C     	call Comprueba_limite_vertical
 25+  8B5F
 26+  8B5F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8B5F
 28+  8B5F CD 4E 8D     3 call calcula_CColumnass
 29+  8B62 CD 85 8D     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8B65 CD DA 8D     	call Define_rutina_de_impresion
 31+  8B68
 32+  8B68 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8B6B CB AF        	res 5,a											; _a ser de utilidad.
 34+  8B6D 32 C3 85     	ld (Ctrl_0),a
 35+  8B70
 36+  8B70 C9           	ret
 37+  8B71
 38+  8B71              ; *******************************************************************************************************************************************************************************************
 39+  8B71              ;	21/01/23
 40+  8B71              ;
 41+  8B71              ; 	Comprueba_limite_horizontal.
 42+  8B71              ;
 43+  8B71              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8B71              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8B71              ;
 46+  8B71              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8B71              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8B71              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8B71              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8B71
 51+  8B71
 52+  8B71
 53+  8B71 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8B74 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8B76 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8B78 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8B7A 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8B7D 18 09            jr 6F
 59+  8B7F CB 5F        1 bit 3,a
 60+  8B81 28 0A            jr z,2F
 61+  8B83 E6 F7            and $f7
 62+  8B85 32 C3 85         ld (Ctrl_0),a
 63+  8B88 CD DB 8C     6 call Inicializacion
 64+  8B8B 18 5B            jr 5F
 65+  8B8D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8B8E
 67+  8B8E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8B8E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8B8E
 70+  8B8E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8B8F 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8B92 CD E0 90     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8B95 67           	ld h,a
 74+  8B96 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8B97 CD E0 90     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8B9A 67           	ld h,a
 77+  8B9B A7           	and a
 78+  8B9C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8B9E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8B9F 3A AA 85     	ld a,(Cuad_objeto)
 81+  8BA2 FE 02        	cp 2
 82+  8BA4 38 1E        	jr c,3F
 83+  8BA6 28 1C        	jr z,3F
 84+  8BA8 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8BA9 28 23            jr z,7F
 86+  8BAB 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8BAD 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8BAF E1           	pop hl
 89+  8BB0
 90+  8BB0              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8BB0              ; _para indicar con E="2" en caso necesario.
 92+  8BB0
 93+  8BB0 E5               push hl
 94+  8BB1 C5               push bc
 95+  8BB2 CD E0 90     	call calcula_tercio
 96+  8BB5 FE 01        	cp 1
 97+  8BB7 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8BB9 CD E9 8B         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8BBC 28 26            jr z,9F
100+  8BBE 38 24            jr c,9F
101+  8BC0 1E 00        11 ld e,0
102+  8BC2 18 22            jr 8F
103+  8BC4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8BC5 28 07        	jr z, 7F
105+  8BC7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8BC9 1E 00         	ld e,0
107+  8BCB E1           	pop hl
108+  8BCC 18 04        	jr 4F
109+  8BCE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8BD0 18 15            jr 10F
111+  8BD2
112+  8BD2              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8BD2              ; _para indicar con E="2" en caso necesario.
114+  8BD2
115+  8BD2 E5           4 push hl
116+  8BD3 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8BD4 CD E0 90     	call calcula_tercio
118+  8BD7 FE 01        	cp 1
119+  8BD9 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8BDB CD E9 8B         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8BDE 28 04            jr z,9F
122+  8BE0 30 02            jr nc,9F
123+  8BE2 18 02        	jr 8F
124+  8BE4 1E 02        9 ld e,2
125+  8BE6 C1           8 pop bc
126+  8BE7 E1           10 pop hl
127+  8BE8 C9           5 ret
128+  8BE9
129+  8BE9              ; --------------------
130+  8BE9              ;
131+  8BE9              ; 25/08/22
132+  8BE9
133+  8BE9 CD E0 90     Comprueba_centro call calcula_tercio
134+  8BEC 67               ld h,a
135+  8BED 08           	ex af,af
136+  8BEE FE 02        	cp 2
137+  8BF0 38 07        	jr c,1F
138+  8BF2 28 05        	jr z,1F
139+  8BF4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8BF7 18 03        	jr 2F
141+  8BF9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8BFC 08           2 ex af,af
143+  8BFD A7               and a
144+  8BFE ED 42            sbc hl,bc
145+  8C00 C9               ret
146+  8C01
147+  8C01              ; *********************************************************************************************************************************************************************************************
148+  8C01              ;
149+  8C01              ;   16/8/22
150+  8C01              ;
151+  8C01              ;	Comprueba_limite_vertical
152+  8C01              ;
153+  8C01              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8C01              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8C01              ;
156+  8C01
157+  8C01 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8C04 7D           	ld a,l
159+  8C05 E6 1F        	and $1F
160+  8C07 57           	ld d,a
161+  8C08 3A CF 85     	ld a,(Limite_vertical)
162+  8C0B BA           	cp d 											; Límite - Posición.
163+  8C0C 08           	ex af,af 										; Resultado de CP d en F'.
164+  8C0D 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8C10 CB 47        	bit 0,a
166+  8C12 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8C14
168+  8C14              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8C14
170+  8C14 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8C15 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8C17
173+  8C17              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8C17              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8C17
176+  8C17 3A 9C 85         ld a,(Coordenada_X)
177+  8C1A 16 0F            ld d,Centro_izquierda
178+  8C1C A7               and a
179+  8C1D 92               sub d 											 ; Posición - Centro_izquierda.
180+  8C1E 28 1E            jr z,3F
181+  8C20 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8C22              ;                                                    ; _salimos sin modificar nada.
183+  8C22 18 0E            jr 2F
184+  8C24 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8C25 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8C27
187+  8C27              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8C27              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8C27
190+  8C27 3A 9C 85         ld a,(Coordenada_X)
191+  8C2A 16 10            ld d,Centro_derecha
192+  8C2C A7               and a
193+  8C2D 92               sub d
194+  8C2E 28 0E            jr z,3F
195+  8C30 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8C32              ;                                                    ; _salimos sin modificar nada.
197+  8C32 CB 43        2 bit 0,e
198+  8C34 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8C36 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8C37 CD CB 8C         call Modificaccionne
201+  8C3A C1           	pop bc
202+  8C3B CD DB 8C         call Inicializacion
203+  8C3E C9           3 ret 				 								 ; Salimos de la rutina.
204+  8C3F
205+  8C3F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8C3F
207+  8C3F C5           4 push bc
208+  8C40 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8C43 0A           	ld a,(bc)
210+  8C44 3D           	dec a
211+  8C45 47           	ld b,a 											 ; Columnas-1 en B.
212+  8C46 7D           	ld a,l
213+  8C47 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8C48 CB 47        	bit 0,a
215+  8C4A 28 03        	jr z,5F
216+  8C4C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8C4D 18 2E        	jr 7F
218+  8C4F
219+  8C4F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8C4F
221+  8C4F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8C50 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8C51 3A C3 85     	ld a,(Ctrl_0)
224+  8C54 CB 4F        	bit 1,a
225+  8C56 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8C58 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8C59
228+  8C59              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8C59
230+  8C59 1C               inc e
231+  8C5A 1D               dec e
232+  8C5B 20 07            jr nz,12F
233+  8C5D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8C5E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8C5F 22 98 85     	ld (Posicion_actual),hl
236+  8C62 18 44        13 jr 9F
237+  8C64 CB 43        12 bit 0,e
238+  8C66 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8C68              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8C68 C1           	pop bc
241+  8C69 18 D3        	jr 3B
242+  8C6B 80           14 add b
243+  8C6C 6F               ld l,a
244+  8C6D 22 98 85     	ld (Posicion_actual),hl
245+  8C70 CD CB 8C         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8C73 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8C75 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8C77 32 C3 85         ld (Ctrl_0),a
249+  8C7A F1           	pop af
250+  8C7B 18 2B        	jr 9F
251+  8C7D
252+  8C7D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8C7D
254+  8C7D F5           7 push af
255+  8C7E 3A C3 85     	ld a,(Ctrl_0)
256+  8C81 CB 47        	bit 0,a
257+  8C83 20 1D        	jr nz,8F
258+  8C85 F1           	pop af
259+  8C86
260+  8C86              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8C86
262+  8C86 1C           	inc e
263+  8C87 1D               dec e
264+  8C88 20 07            jr nz,10F
265+  8C8A 90           	sub b
266+  8C8B 6F               ld l,a
267+  8C8C 22 98 85     	ld (Posicion_actual),hl
268+  8C8F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8C91              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8C91 CB 43        10 bit 0,e
271+  8C93 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8C95              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8C95 C1           	pop bc
274+  8C96 18 A6        	jr 3B
275+  8C98 90           16 sub b
276+  8C99 6F               ld l,a
277+  8C9A 22 98 85     	ld (Posicion_actual),hl
278+  8C9D CD CB 8C         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8CA0 18 06            jr 9F
280+  8CA2 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8CA4 32 C3 85         ld (Ctrl_0),a
282+  8CA7 F1           	pop af
283+  8CA8 C1           9 pop bc
284+  8CA9 1E 00        	ld e,0
285+  8CAB CD DB 8C         call Inicializacion
286+  8CAE F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8CAF 08           	ex af,af
288+  8CB0 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8CB1 18 8B            jr 3B
290+  8CB3
291+  8CB3              ; --------------------
292+  8CB3
293+  8CB3 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8CB5 CD 2F 8E     1 call PreviousScan
295+  8CB8 10 FB            djnz 1B
296+  8CBA 22 98 85     	ld (Posicion_actual),hl
297+  8CBD AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8CBE C9           	ret
299+  8CBF
300+  8CBF              ; --------------------
301+  8CBF
302+  8CBF 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8CC1 CD 20 8E     1 call NextScan
304+  8CC4 10 FB            djnz 1B
305+  8CC6 22 98 85     	ld (Posicion_actual),hl
306+  8CC9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8CCA C9           	ret
308+  8CCB
309+  8CCB              ; --------------------
310+  8CCB              ;
311+  8CCB              ;	22/01/23
312+  8CCB              ;
313+  8CCB              ;	E="1". Hemos cambiado de cuadrante.
314+  8CCB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8CCB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8CCB
317+  8CCB
318+  8CCB              Modificaccionne
319+  8CCB
320+  8CCB 3A AA 85     	ld a,(Cuad_objeto)
321+  8CCE FE 02        	cp 2
322+  8CD0 CC B3 8C         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8CD3 DC B3 8C         call c,Modifica_Pos_actual
324+  8CD6 C8           	ret z
325+  8CD7 CD BF 8C         call Modifica_Pos_actual2
326+  8CDA C9               ret
327+  8CDB
328+  8CDB              ; *************************************************************************************************************************************************************************************************
329+  8CDB              ;
330+  8CDB              ;	13/8/22
331+  8CDB              ;
332+  8CDB              ;	Inicializacion
333+  8CDB              ;
334+  8CDB              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8CDB              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8CDB              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8CDB              ;
338+  8CDB              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8CDB              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8CDB              ;	_ desaparece/aparece.
341+  8CDB
342+  8CDB              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8CDB              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8CDB              ;
345+  8CDB              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8CDB              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8CDB              ; 		   [E] ="0"
348+  8CDB
349+  8CDB              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8CDB
351+  8CDB CD E0 90     Inicializacion call calcula_tercio
352+  8CDE 28 36        	jr z,primit
353+  8CE0 E6 02        	and 2
354+  8CE2 20 07        	jr nz,segmit
355+  8CE4 7D           	ld a,l
356+  8CE5 FE 7F        	cp $7f
357+  8CE7 38 2D        	jr c,primit
358+  8CE9 28 2B        	jr z,primit
359+  8CEB CD 48 8D     segmit call column
360+  8CEE 38 13        	jr c,tercuad
361+  8CF0 3E 04        cuarcuad ld a,4
362+  8CF2 32 AA 85     	ld (Cuad_objeto),a
363+  8CF5 21 20 48     	ld hl,$4820
364+  8CF8 22 CD 85     	ld (Limite_horizontal),hl
365+  8CFB 21 CF 85     	ld hl,Limite_vertical
366+  8CFE 36 0D        	ld (hl),$0d
367+  8D00 08           	ex af,af
368+  8D01 18 3C        	jr 1F
369+  8D03              tercuad
370+  8D03 3E 03        	ld a,3
371+  8D05 32 AA 85     	ld (Cuad_objeto),a
372+  8D08 21 20 48     	ld hl,$4820
373+  8D0B 22 CD 85     	ld (Limite_horizontal),hl
374+  8D0E 21 CF 85     	ld hl,Limite_vertical
375+  8D11 36 12        	ld (hl),$12
376+  8D13 08           	ex af,af
377+  8D14 18 29        	jr 1F
378+  8D16 CD 48 8D     primit call column
379+  8D19 38 13        	jr c, primcuad
380+  8D1B              segcuad
381+  8D1B 3E 02        	ld a,2
382+  8D1D 32 AA 85     	ld (Cuad_objeto),a
383+  8D20 21 C0 4F     	ld hl,$4fc0
384+  8D23 22 CD 85     	ld (Limite_horizontal),hl
385+  8D26 21 CF 85     	ld hl,Limite_vertical
386+  8D29 36 0D        	ld (hl),$0d
387+  8D2B 08           	ex af,af
388+  8D2C 18 11        	jr 1F
389+  8D2E              primcuad
390+  8D2E 3E 01        	ld a,1
391+  8D30 32 AA 85     	ld (Cuad_objeto),a
392+  8D33 21 C0 4F     	ld hl,$4fc0
393+  8D36 22 CD 85     	ld (Limite_horizontal),hl
394+  8D39 21 CF 85     	ld hl,Limite_vertical
395+  8D3C 36 12        	ld (hl),$12
396+  8D3E 08           	ex af,af
397+  8D3F CD 12 94     1 call Genera_coordenadas
398+  8D42 21 C3 85     	ld hl,Ctrl_0
399+  8D45 CB EE        	set 5,(hl)
400+  8D47 C9           	ret
401+  8D48
402+  8D48              ; ------------------------------------------------------------------------------------------------------------------
403+  8D48
404+  8D48              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8D48              ;
406+  8D48              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8D48
408+  8D48 7D           column ld a,l
409+  8D49 E6 1F        	and $1f
410+  8D4B FE 10         	cp $10
411+  8D4D C9            	ret
412+  8D4E
413+  8D4E              ; --------------------------------------------------------------------------------------------------------------------
414+  8D4E              ;
415+  8D4E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8D4E              ;
417+  8D4E              ; 14/12/22
418+  8D4E              ;
419+  8D4E              ;	Modifica: A y BC.
420+  8D4E
421+  8D4E 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8D51 E6 01        	and 1
423+  8D53 28 17        	jr z,1F
424+  8D55
425+  8D55              ; Nos encontramos en la parte izquierda de la pantalla
426+  8D55
427+  8D55 3A 9C 85     	ld a,(Coordenada_X)
428+  8D58 47           	ld b,a
429+  8D59 04           	inc b											; (Coordenada_X)+1 en B.
430+  8D5A 79           	ld a,c
431+  8D5B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8D5C 38 08        	jr c,2F
433+  8D5E 47           	ld b,a
434+  8D5F 79           	ld a,c
435+  8D60 90           	sub b
436+  8D61 32 CC 85     	ld (Columnas),a
437+  8D64 18 1B        	jr 4F
438+  8D66 79           2 ld a,c
439+  8D67 32 CC 85     	ld (Columnas),a
440+  8D6A 18 15        	jr 4F
441+  8D6C
442+  8D6C              ; Nos encontramos en la parte derecha de la pantalla.
443+  8D6C
444+  8D6C 3A 9C 85     1 ld a,(Coordenada_X)
445+  8D6F 81           	add c
446+  8D70 3D           	dec a
447+  8D71 D6 1F        	sub $1f
448+  8D73 38 08        	jr c,3F
449+  8D75 47           	ld b,a
450+  8D76 79           	ld a,c
451+  8D77 90           	sub b
452+  8D78 32 CC 85     	ld (Columnas),a
453+  8D7B 18 04        	jr 4F
454+  8D7D 79           3 ld a,c
455+  8D7E 32 CC 85     	ld (Columnas),a
456+  8D81 D9           4 exx
457+  8D82 4F           	ld c,a
458+  8D83 D9           	exx
459+  8D84 C9            ret
460+  8D85
461+  8D85              ; --------------------------------------------------------------------------------------------------------------------
462+  8D85              ;
463+  8D85              ; 7/1/23
464+  8D85              ;
465+  8D85              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8D85              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8D85              ;
468+  8D85              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8D85              ;	DESTRUYE: HL,B Y A.
470+  8D85
471+  8D85 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8D88 FE 02        	cp 2
473+  8D8A 38 18        	jr c,1F
474+  8D8C 28 16        	jr z,1F
475+  8D8E E6 01        	and 1
476+  8D90 28 0D        	jr z,3F
477+  8D92
478+  8D92              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8D92
480+  8D92 CD CE 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8D95
482+  8D95 7D           9 ld a,l
483+  8D96 E6 1F        	and $1f
484+  8D98 28 2A        	jr z,7F
485+  8D9A 2B           	dec hl
486+  8D9B 10 F8        	djnz 9B
487+  8D9D 18 25        	jr 7F
488+  8D9F
489+  8D9F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8D9F
491+  8D9F 2A 98 85     3 ld hl,(Posicion_actual)
492+  8DA2 18 20        	jr 7F
493+  8DA4
494+  8DA4 28 14        1 jr z,2F
495+  8DA6
496+  8DA6              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8DA6
498+  8DA6 CD CE 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8DA9 7D           4 ld a,l
500+  8DAA E6 1F        	and $1f
501+  8DAC 28 03        	jr z,6F
502+  8DAE 2B           	dec hl
503+  8DAF 10 F8        	djnz 4B
504+  8DB1 06 0F        6 ld b,15
505+  8DB3 CD 2F 8E     5 call PreviousScan
506+  8DB6 10 FB        	djnz 5B
507+  8DB8 18 0A        	jr 7F
508+  8DBA
509+  8DBA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8DBA
511+  8DBA CD CE 8D     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8DBD 06 0F        	ld b,15
513+  8DBF CD 2F 8E     8 call PreviousScan
514+  8DC2 10 FB        	djnz 8B
515+  8DC4
516+  8DC4 E5           7 push hl
517+  8DC5 DD E1        	pop ix
518+  8DC7
519+  8DC7 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8DCA E5           	push hl
521+  8DCB FD E1        	pop iy
522+  8DCD
523+  8DCD C9           	ret
524+  8DCE
525+  8DCE              ; --------------------------------------------------------------------------------------------------------------------
526+  8DCE              ;
527+  8DCE              ;	2/1/23
528+  8DCE              ;
529+  8DCE              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8DCE              ;
531+  8DCE              ;	Tras esta rutina tenemos:
532+  8DCE              ;
533+  8DCE              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8DCE              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8DCE              ;
536+  8DCE              ;	DESTRUYE!!!!! HL,B y A.
537+  8DCE
538+  8DCE 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8DD1 3A CC 85     	ld a,(Columnas)
540+  8DD4 3D           	dec a
541+  8DD5 20 01        	jr nz,1F
542+  8DD7 3C           	inc a
543+  8DD8 47           1 ld b,a
544+  8DD9 C9           	ret
545+  8DDA
546+  8DDA              ; --------------------------------------------------------------------------------------------------------------------
547+  8DDA              ;
548+  8DDA              ;	3/1/23
549+  8DDA              ;
550+  8DDA              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8DDA              ;
552+  8DDA              ;	Destruye: A,B,HL y DE.
553+  8DDA
554+  8DDA              Define_rutina_de_impresion
555+  8DDA
556+  8DDA 3A 97 85     	ld a,(Columns)
557+  8DDD 47           	ld b,a
558+  8DDE 3A CC 85     	ld a,(Columnas)
559+  8DE1 B8           	cp b
560+  8DE2 20 0D        	jr nz,2f
561+  8DE4
562+  8DE4              ;	La entidad se imprime entera.
563+  8DE4
564+  8DE4 21 B0 8E     	ld hl, Indice_entidades_completas
565+  8DE7 E6 01        	and 1
566+  8DE9 28 02        	jr z,1F
567+  8DEB
568+  8DEB 23           	inc hl
569+  8DEC 23           	inc hl
570+  8DED
571+  8DED CD 93 87     1 call Extrae_address
572+  8DF0 C9           	ret		;	ret
573+  8DF1
574+  8DF1              ;	La entidad no se imprime entera en pantalla.
575+  8DF1
576+  8DF1 3A AA 85     2 ld a,(Cuad_objeto)
577+  8DF4 E6 01        	and 1
578+  8DF6 28 17        	jr z,3F
579+  8DF8
580+  8DF8              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8DF8
582+  8DF8 21 B4 8E     	ld hl, Indice_entidades_incompletas_izquierda
583+  8DFB 3A 97 85     4 ld a,(Columns)
584+  8DFE E6 01        	and 1
585+  8E00 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8E02
587+  8E02 23           	inc hl
588+  8E03 23           	inc hl
589+  8E04
590+  8E04 3A CC 85     	ld a,(Columnas)
591+  8E07 E6 01        	and 1
592+  8E09 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8E0B
594+  8E0B 23           	inc hl
595+  8E0C 23           	inc hl
596+  8E0D
597+  8E0D 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8E0F
599+  8E0F 21 BA 8E     3 ld hl, Indice_entidades_incompletas_derecha
600+  8E12 18 E7        	jr 4B
601+  8E14
602+  8E14              ; --------------------------------------------------------------------------------------------------------------------
603+  8E14              ;
604+  8E14              ;	Prepara_draw
605+  8E14              ;
606+  8E14              ;	Es una rutina de carga.
607+  8E14              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8E14              ;
609+  8E14              ;	FUNCIONAMIENTO:
610+  8E14              ;
611+  8E14              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8E14              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8E14              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8E14              ;
615+  8E14              ;	DESTRUYE:
616+  8E14              ;
617+  8E14              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8E14
619+  8E14 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8E17 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8E18 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8E19 4E           	ld c,(hl)
623+  8E1A 2A 98 85     	ld hl,(Posicion_actual)
624+  8E1D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8E1F C9           	ret
626+  8E20
627+  8E20              ;----------------------------------------------------------------------------------------------------------------
628+  8E20              ;
629+  8E20              ;	5/08/22
630+  8E20              ;
631+  8E20              ;   NextScan.
632+  8E20              ;
633+  8E20              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8E20              ;
635+  8E20              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8E20              ;
637+  8E20              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8E20              ;
639+  8E20              ;       DESTRUIDOS: AF y HL !!!
640+  8E20              ;
641+  8E20              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8E20              ;
643+  8E20
644+  8E20 24           NextScan inc h          ; Incrementamos el scanline.
645+  8E21 7C               ld a,h
646+  8E22 E6 07            and 7
647+  8E24 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8E25
649+  8E25 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8E26 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8E28 6F               ld l,a
652+  8E29 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8E2A
654+  8E2A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8E2B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8E2D 67               ld h,a
657+  8E2E C9               ret
658+  8E2F
659+  8E2F              ;----------------------------------------------------------------------------------------------------------------
660+  8E2F              ;
661+  8E2F              ;	5/08/22
662+  8E2F              ;
663+  8E2F              ;   PreviousScan.
664+  8E2F              ;
665+  8E2F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8E2F              ;
667+  8E2F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8E2F              ;
669+  8E2F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8E2F              ;
671+  8E2F              ;       DESTRUIDOS: AF y HL !!!
672+  8E2F              ;
673+  8E2F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8E2F              ;
675+  8E2F
676+  8E2F 7C           PreviousScan ld a,h
677+  8E30 25               dec h               ; Dec H.
678+  8E31 E6 07            and 7
679+  8E33 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8E34
681+  8E34 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8E35 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8E37 6F               ld l,a
684+  8E38 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8E39
686+  8E39 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8E3A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8E3C 67               ld h,a
689+  8E3D C9               ret
690+  8E3E
691+  8E3E              ; -----------------------------------------------------------------------------------
692+  8E3E              ;
693+  8E3E              ;	28/2/23
694+  8E3E              ;
695+  8E3E              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8E3E              ;	Extrae fotos de Album_de_fotos.
697+  8E3E
698+  8E3E 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8E41 A7           	and a
700+  8E42 C8           	ret z
701+  8E43 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8E47 31 00 70     	ld sp,Album_de_fotos
703+  8E4A
704+  8E4A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8E4C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8E4D D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8E4E
708+  8E4E ED 73 DB 85  	ld (Stack_2),sp
709+  8E52 ED 7B D9 85  	ld sp,(Stack)
710+  8E56
711+  8E56              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8E56
713+  8E56 3E CD        	ld a,$cd
714+  8E58 32 60 8E     	ld (Imprime),a
715+  8E5B EB           	ex de,hl
716+  8E5C 22 61 8E     	ld (Imprime+1),hl
717+  8E5F EB           	ex de,hl
718+  8E60
719+  8E60              ; Ejecuta la llamada:	CALL $xx,xx
720+  8E60
721+  8E60 00 00 00     Imprime db 0,0,0
722+  8E63
723+  8E63 3A D8 85     	ld a,(Numero_de_malotes)
724+  8E66 3D           	dec a
725+  8E67 28 09        	jr z,1F
726+  8E69 32 D8 85      	ld (Numero_de_malotes),a
727+  8E6C
728+  8E6C ED 7B DB 85   	ld sp,(Stack_2)
729+  8E70 18 D8        	jr 2B
730+  8E72
731+  8E72 AF           1 xor a
732+  8E73 32 DB 85     	ld (Stack_2),a
733+  8E76 C9           	ret
734+  8E77
735+  8E77              ; -----------------------------------------------------------------------------------
736+  8E77              ;
737+  8E77              ;	28/2/23
738+  8E77              ;
739+  8E77              ;	Pinta los disparos generados.
740+  8E77
741+  8E77              Extrae_foto_disparos
742+  8E77
743+  8E77 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8E7A A7           	and a
745+  8E7B C8           	ret z
746+  8E7C ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8E80 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8E83
749+  8E83 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8E85 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8E86 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8E87
753+  8E87 ED 73 DB 85  	ld (Stack_2),sp
754+  8E8B ED 7B D9 85  	ld sp,(Stack)
755+  8E8F
756+  8E8F              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8E8F
758+  8E8F 3E CD        	ld a,$cd
759+  8E91 32 99 8E     	ld (Imprime2),a
760+  8E94 EB           	ex de,hl
761+  8E95 22 9A 8E     	ld (Imprime2+1),hl
762+  8E98 EB           	ex de,hl
763+  8E99
764+  8E99              ; Ejecuta la llamada:	CALL $xx,xx
765+  8E99
766+  8E99 00 00 00     Imprime2 db 0,0,0
767+  8E9C
768+  8E9C 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8E9F 3D           	dec a
770+  8EA0 28 09        	jr z,1F
771+  8EA2 32 E1 85      	ld (Numero_de_disparotes),a
772+  8EA5
773+  8EA5 ED 7B DB 85  	ld sp,(Stack_2)
774+  8EA9 18 D8        	jr 2B
775+  8EAB
776+  8EAB AF           1 xor a
777+  8EAC 32 DB 85     	ld (Stack_2),a
778+  8EAF C9           	ret
779+  8EB0
# file closed: Draw_XOR.asm
861   8EB0              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8EB0              ;   índices de Rutinas de impresión.
  2+  8EB0
  3+  8EB0 C0 8E        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8EB2 ED 8E            defw Pinta_Amadeus_3x2
  5+  8EB4
  6+  8EB4 43 8F        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8EB6 E3 8F            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8EB8 97 8F            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8EBA
 10+  8EBA 6D 8F        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8EBC 71 90            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8EBE 25 90            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8EC0
 14+  8EC0
 15+  8EC0              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8EC0              ;
 17+  8EC0              ;   12/12/22
 18+  8EC0              ;
 19+  8EC0              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8EC0              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8EC0              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8EC0              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8EC0              ;
 24+  8EC0              ;   Modifica: DE y HL.
 25+  8EC0
 26+  8EC0 ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8EC4 FD F9        	ld sp,iy
 28+  8EC6 06 10            ld b,16
 29+  8EC8 D1           1 pop de
 30+  8EC9 7B               ld a,e
 31+  8ECA AE               xor (hl)
 32+  8ECB 77           	ld (hl),a
 33+  8ECC 23           	inc hl
 34+  8ECD 7A               ld a,d
 35+  8ECE AE               xor (hl)
 36+  8ECF 77           	ld (hl),a
 37+  8ED0 2B           	dec hl
 38+  8ED1 24           	inc h
 39+  8ED2 7C               ld a,h
 40+  8ED3 E6 07            and 7
 41+  8ED5 20 0A            jr nz,2F
 42+  8ED7 7D               ld a,l
 43+  8ED8 C6 20            add a,$20
 44+  8EDA 6F               ld l,a
 45+  8EDB 38 04            jr c,2F
 46+  8EDD 7C               ld a,h
 47+  8EDE D6 08            sub 8
 48+  8EE0 67               ld h,a
 49+  8EE1 7C           2 ld a,h
 50+  8EE2 FE 58            cp $58
 51+  8EE4 28 02            jr z,3F
 52+  8EE6 10 E0            djnz 1B
 53+  8EE8 ED 7B D9 85  3 ld sp,(Stack)
 54+  8EEC C9           	ret
 55+  8EED
 56+  8EED ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8EF1 FD F9        	ld sp,iy
 58+  8EF3 06 08            ld b,8
 59+  8EF5 D1           1 pop de
 60+  8EF6 7B               ld a,e
 61+  8EF7 AE               xor (hl)
 62+  8EF8 77           	ld (hl),a
 63+  8EF9 23           	inc hl
 64+  8EFA 7A               ld a,d
 65+  8EFB AE               xor (hl)
 66+  8EFC 77           	ld (hl),a
 67+  8EFD 23           	inc hl
 68+  8EFE D1           	pop de
 69+  8EFF 7B               ld a,e
 70+  8F00 AE               xor (hl)
 71+  8F01 77           	ld (hl),a
 72+  8F02 2B           	dec hl
 73+  8F03 2B           	dec hl
 74+  8F04 24           	inc h
 75+  8F05 7C               ld a,h
 76+  8F06 E6 07            and 7
 77+  8F08 20 0A            jr nz,2F
 78+  8F0A 7D               ld a,l
 79+  8F0B C6 20            add a,$20
 80+  8F0D 6F               ld l,a
 81+  8F0E 38 04            jr c,2F
 82+  8F10 7C               ld a,h
 83+  8F11 D6 08            sub 8
 84+  8F13 67               ld h,a
 85+  8F14 7C           2 ld a,h
 86+  8F15 FE 58            cp $58
 87+  8F17 28 25            jr z,4F
 88+  8F19 7A               ld a,d
 89+  8F1A AE               xor (hl)
 90+  8F1B 77               ld (hl),a
 91+  8F1C D1           	pop de
 92+  8F1D 23           	inc hl
 93+  8F1E 7B               ld a,e
 94+  8F1F AE               xor (hl)
 95+  8F20 77           	ld (hl),a
 96+  8F21 23           	inc hl
 97+  8F22 7A               ld a,d
 98+  8F23 AE               xor (hl)
 99+  8F24 77           	ld (hl),a
100+  8F25 2B           	dec hl
101+  8F26 2B           	dec hl
102+  8F27 24           	inc h
103+  8F28 7C               ld a,h
104+  8F29 E6 07            and 7
105+  8F2B 20 0A            jr nz,3F
106+  8F2D 7D               ld a,l
107+  8F2E C6 20            add a,$20
108+  8F30 6F               ld l,a
109+  8F31 38 04            jr c,3F
110+  8F33 7C               ld a,h
111+  8F34 D6 08            sub 8
112+  8F36 67               ld h,a
113+  8F37 7C           3 ld a,h
114+  8F38 FE 58            cp $58
115+  8F3A 28 02            jr z,4F
116+  8F3C 10 B7            djnz 1B
117+  8F3E ED 7B D9 85  4 ld sp,(Stack)
118+  8F42 C9           	ret
119+  8F43
120+  8F43              ; ---------------------------------------------------
121+  8F43
122+  8F43 ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8F47 FD F9        	ld sp,iy
124+  8F49
125+  8F49              ; >>>
126+  8F49
127+  8F49 06 10            ld b,16
128+  8F4B D1           1 pop de
129+  8F4C 7A           	ld a,d
130+  8F4D AE           	xor (hl)
131+  8F4E 77           	ld (hl),a
132+  8F4F 24           	inc h
133+  8F50 7C               ld a,h
134+  8F51 E6 07            and 7
135+  8F53 20 0C            jr nz,2F
136+  8F55 7D               ld a,l
137+  8F56 C6 20            add a,$20
138+  8F58 6F               ld l,a
139+  8F59 38 06            jr c,2F
140+  8F5B 7C               ld a,h
141+  8F5C D6 08            sub 8
142+  8F5E 67               ld h,a
143+  8F5F 18 00            jr 2F
144+  8F61 7C           2 ld a,h
145+  8F62 FE 58            cp $58
146+  8F64 28 02            jr z,3F
147+  8F66 10 E3            djnz 1B
148+  8F68 ED 7B D9 85  3 ld sp,(Stack)
149+  8F6C C9           	ret
150+  8F6D
151+  8F6D ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8F71 FD F9        	ld sp,iy
153+  8F73
154+  8F73              ; >>>
155+  8F73
156+  8F73 06 10            ld b,16
157+  8F75 D1           1 pop de
158+  8F76 7B           	ld a,e
159+  8F77 AE           	xor (hl)
160+  8F78 77           	ld (hl),a
161+  8F79 24           	inc h
162+  8F7A 7C               ld a,h
163+  8F7B E6 07            and 7
164+  8F7D 20 0C            jr nz,2F
165+  8F7F 7D               ld a,l
166+  8F80 C6 20            add a,$20
167+  8F82 6F               ld l,a
168+  8F83 38 06            jr c,2F
169+  8F85 7C               ld a,h
170+  8F86 D6 08            sub 8
171+  8F88 67               ld h,a
172+  8F89 18 00            jr 2F
173+  8F8B 7C           2 ld a,h
174+  8F8C FE 58            cp $58
175+  8F8E 28 02            jr z,3F
176+  8F90 10 E3            djnz 1B
177+  8F92 ED 7B D9 85  3 ld sp,(Stack)
178+  8F96 C9           	ret
179+  8F97
180+  8F97              ; ---------------------------------------------------
181+  8F97
182+  8F97 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8F9B FD F9        	ld sp,iy
184+  8F9D 06 08            ld b,8
185+  8F9F D1           1 pop de
186+  8FA0 7A           	ld a,d
187+  8FA1 AE           	xor (hl)
188+  8FA2 77           	ld (hl),a
189+  8FA3 23           	inc hl
190+  8FA4 D1           	pop de
191+  8FA5 7B           	ld a,e
192+  8FA6 AE           	xor (hl)
193+  8FA7 77           	ld (hl),a
194+  8FA8 2B           	dec hl
195+  8FA9 24            	inc h
196+  8FAA 7C               ld a,h
197+  8FAB E6 07            and 7
198+  8FAD 20 0A            jr nz,2F
199+  8FAF 7D               ld a,l
200+  8FB0 C6 20            add a,$20
201+  8FB2 6F               ld l,a
202+  8FB3 38 04            jr c,2F
203+  8FB5 7C               ld a,h
204+  8FB6 D6 08            sub 8
205+  8FB8 67               ld h,a
206+  8FB9 7C           2 ld a,h
207+  8FBA FE 58            cp $58
208+  8FBC 28 20            jr z,4F
209+  8FBE D1               pop de
210+  8FBF 7B           	ld a,e
211+  8FC0 AE           	xor (hl)
212+  8FC1 77           	ld (hl),a
213+  8FC2 23           	inc hl
214+  8FC3 7A           	ld a,d
215+  8FC4 AE           	xor (hl)
216+  8FC5 77           	ld (hl),a
217+  8FC6 2B           	dec hl
218+  8FC7 24           	inc h
219+  8FC8 7C               ld a,h
220+  8FC9 E6 07            and 7
221+  8FCB 20 0A            jr nz,3F
222+  8FCD 7D               ld a,l
223+  8FCE C6 20            add a,$20
224+  8FD0 6F               ld l,a
225+  8FD1 38 04            jr c,3F
226+  8FD3 7C               ld a,h
227+  8FD4 D6 08            sub 8
228+  8FD6 67               ld h,a
229+  8FD7 7C           3 ld a,h
230+  8FD8 FE 58            cp $58
231+  8FDA 28 02            jr z,4F
232+  8FDC 10 C1            djnz 1B
233+  8FDE ED 7B D9 85  4 ld sp,(Stack)
234+  8FE2 C9           	ret
235+  8FE3
236+  8FE3 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8FE7 FD F9        	ld sp,iy
238+  8FE9 06 08            ld b,8
239+  8FEB D1           1 pop de
240+  8FEC D1           	pop de
241+  8FED 7B           	ld a,e
242+  8FEE AE           	xor (hl)
243+  8FEF 77           	ld (hl),a
244+  8FF0 24            	inc h
245+  8FF1 7C               ld a,h
246+  8FF2 E6 07            and 7
247+  8FF4 20 0A            jr nz,2F
248+  8FF6 7D               ld a,l
249+  8FF7 C6 20            add a,$20
250+  8FF9 6F               ld l,a
251+  8FFA 38 04            jr c,2F
252+  8FFC 7C               ld a,h
253+  8FFD D6 08            sub 8
254+  8FFF 67               ld h,a
255+  9000 7C           2 ld a,h
256+  9001 FE 58            cp $58
257+  9003 28 1B            jr z,4F
258+  9005 D1               pop de
259+  9006 7A           	ld a,d
260+  9007 AE           	xor (hl)
261+  9008 77           	ld (hl),a
262+  9009 24           	inc h
263+  900A 7C               ld a,h
264+  900B E6 07            and 7
265+  900D 20 0A            jr nz,3F
266+  900F 7D               ld a,l
267+  9010 C6 20            add a,$20
268+  9012 6F               ld l,a
269+  9013 38 04            jr c,3F
270+  9015 7C               ld a,h
271+  9016 D6 08            sub 8
272+  9018 67               ld h,a
273+  9019 7C           3 ld a,h
274+  901A FE 58            cp $58
275+  901C 28 02            jr z,4F
276+  901E 10 CB            djnz 1B
277+  9020 ED 7B D9 85  4 ld sp,(Stack)
278+  9024 C9           	ret
279+  9025
280+  9025 ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  9029 FD F9        	ld sp,iy
282+  902B 06 08            ld b,8
283+  902D D1           1 pop de
284+  902E 7B           	ld a,e
285+  902F AE           	xor (hl)
286+  9030 77           	ld (hl),a
287+  9031 23           	inc hl
288+  9032 7A           	ld a,d
289+  9033 AE           	xor (hl)
290+  9034 77           	ld (hl),a
291+  9035 2B           	dec hl
292+  9036 24             	inc h
293+  9037 7C               ld a,h
294+  9038 E6 07            and 7
295+  903A 20 0A            jr nz,2F
296+  903C 7D               ld a,l
297+  903D C6 20            add a,$20
298+  903F 6F               ld l,a
299+  9040 38 04            jr c,2F
300+  9042 7C               ld a,h
301+  9043 D6 08            sub 8
302+  9045 67               ld h,a
303+  9046 7C           2 ld a,h
304+  9047 FE 58            cp $58
305+  9049 28 21            jr z,4F
306+  904B D1               pop de
307+  904C 7A           	ld a,d
308+  904D AE           	xor (hl)
309+  904E 77           	ld (hl),a
310+  904F 23           	inc hl
311+  9050 D1               pop de
312+  9051 7B           	ld a,e
313+  9052 AE           	xor (hl)
314+  9053 77           	ld (hl),a
315+  9054 2B           	dec hl
316+  9055 24           	inc h
317+  9056 7C               ld a,h
318+  9057 E6 07            and 7
319+  9059 20 0A            jr nz,3F
320+  905B 7D               ld a,l
321+  905C C6 20            add a,$20
322+  905E 6F               ld l,a
323+  905F 38 04            jr c,3F
324+  9061 7C               ld a,h
325+  9062 D6 08            sub 8
326+  9064 67               ld h,a
327+  9065 7C           3 ld a,h
328+  9066 FE 58            cp $58
329+  9068 28 02            jr z,4F
330+  906A 10 C1            djnz 1B
331+  906C ED 7B D9 85  4 ld sp,(Stack)
332+  9070 C9           	ret
333+  9071
334+  9071 ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  9075 FD F9        	ld sp,iy
336+  9077 06 08            ld b,8
337+  9079 D1           1 pop de
338+  907A 7B           	ld a,e
339+  907B AE           	xor (hl)
340+  907C 77           	ld (hl),a
341+  907D 24            	inc h
342+  907E 7C               ld a,h
343+  907F E6 07            and 7
344+  9081 20 0A            jr nz,2F
345+  9083 7D               ld a,l
346+  9084 C6 20            add a,$20
347+  9086 6F               ld l,a
348+  9087 38 04            jr c,2F
349+  9089 7C               ld a,h
350+  908A D6 08            sub 8
351+  908C 67               ld h,a
352+  908D 7C           2 ld a,h
353+  908E FE 58            cp $58
354+  9090 28 1C            jr z,4F
355+  9092 D1               pop de
356+  9093 7A           	ld a,d
357+  9094 AE           	xor (hl)
358+  9095 77           	ld (hl),a
359+  9096 24           	inc h
360+  9097 7C               ld a,h
361+  9098 E6 07            and 7
362+  909A 20 0A            jr nz,3F
363+  909C 7D               ld a,l
364+  909D C6 20            add a,$20
365+  909F 6F               ld l,a
366+  90A0 38 04            jr c,3F
367+  90A2 7C               ld a,h
368+  90A3 D6 08            sub 8
369+  90A5 67               ld h,a
370+  90A6 7C           3 ld a,h
371+  90A7 FE 58            cp $58
372+  90A9 28 03            jr z,4F
373+  90AB D1               pop de
374+  90AC 10 CB            djnz 1B
375+  90AE ED 7B D9 85  4 ld sp,(Stack)
376+  90B2 C9           	ret
377+  90B3
378+  90B3              ; ---------------------------------------------------
379+  90B3              ;
380+  90B3              ;   27/02/23
381+  90B3              ;
382+  90B3              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  90B3              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  90B3              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  90B3
386+  90B3 ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  90B7 FD F9            ld sp,iy
388+  90B9 06 02            ld b,2
389+  90BB D1           1 pop de
390+  90BC 7B               ld a,e
391+  90BD AE               xor (hl)
392+  90BE 77               ld (hl),a
393+  90BF 23               inc hl
394+  90C0 7A               ld a,d
395+  90C1 AE               xor (hl)
396+  90C2 77               ld (hl),a
397+  90C3 2B               dec hl
398+  90C4
399+  90C4 24               inc h
400+  90C5 7C               ld a,h
401+  90C6 E6 07            and 7
402+  90C8 20 0A            jr nz,2F
403+  90CA 7D               ld a,l
404+  90CB C6 20            add a,$20
405+  90CD 6F               ld l,a
406+  90CE 38 04            jr c,2F
407+  90D0 7C               ld a,h
408+  90D1 D6 08            sub 8
409+  90D3 67               ld h,a
410+  90D4 7C           2 ld a,h
411+  90D5 FE 58            cp $58
412+  90D7 28 02            jr z,3F
413+  90D9
414+  90D9 10 E0            djnz 1B
415+  90DB ED 7B D9 85  3 ld sp,(Stack)
416+  90DF C9               ret
417+  90E0
# file closed: Rutinas_de_impresion_sprites.asm
862   90E0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  90E0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  90E0              ;
  3+  90E0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  90E0              ;
  5+  90E0              ; *****************************************************************************************************************************************************************************************
  6+  90E0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  90E0
  8+  90E0 7C           calcula_tercio ld a,h
  9+  90E1 E6 18        	and $18
 10+  90E3 CB 2F        	sra a
 11+  90E5 CB 2F        	sra a
 12+  90E7 CB 2F        	sra a
 13+  90E9 C9           	ret
 14+  90EA
# file closed: calcula_tercio.asm
863   90EA              	include "Cls.asm"
# file opened: Cls.asm
  1+  90EA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  90EA              ;
  3+  90EA              ;
  4+  90EA              ;	CLS.
  5+  90EA              ;
  6+  90EA              ;	Limpia la pantalla y define sus atributos.
  7+  90EA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  90EA              ;
  9+  90EA              ;	COLORES: 0 ..... NEGRO
 10+  90EA              ;    		 1 ..... AZUL
 11+  90EA              ; 			 2 ..... ROJO
 12+  90EA              ;			 3 ..... MAGENTA
 13+  90EA              ; 			 4 ..... VERDE
 14+  90EA              ; 			 5 ..... CIAN
 15+  90EA              ;			 6 ..... AMARILLO
 16+  90EA              ; 			 7 ..... BLANCO
 17+  90EA              ;
 18+  90EA              ;	INPUT: A contiene los atributos de pantalla.
 19+  90EA              ;
 20+  90EA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  90EA
 22+  90EA
 23+  90EA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  90ED 11 01 40     	LD DE,$4001
 25+  90F0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  90F3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  90F5 ED B0        	LDIR
 28+  90F7 01 FF 02     	LD BC,767
 29+  90FA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  90FB ED B0        	LDIR
 31+  90FD C9           	ret
 32+  90FE
# file closed: Cls.asm
864   90FE              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  90FE              ; ******************************************************************************************************************************************************************************************
  2+  90FE              ;
  3+  90FE              ;   22/01/23
  4+  90FE              ;
  5+  90FE              ;	Mov_down
  6+  90FE              ;
  7+  90FE              ; 	Mueve el Sprite X px hacia abajo.
  8+  90FE              ;
  9+  90FE              ;
 10+  90FE 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  9101 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  9103              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  9103              ; 																	; _ en el caso de que no lo haya.
 14+  9103 3A AE 85     	ld a,(Vel_down)
 15+  9106 47           	ld b,a
 16+  9107 2A 98 85         ld hl,(Posicion_actual)
 17+  910A CD E0 90     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  910D E6 02        	and 2
 19+  910F 28 0F        	jr z,1F
 20+  9111
 21+  9111              ; Nos encontramos en el último tercio de pantalla.
 22+  9111              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  9111
 24+  9111 7C           	ld a,h
 25+  9112 FE 57        	cp $57
 26+  9114 20 0A        	jr nz,1F
 27+  9116 7D           	ld a,l
 28+  9117 C6 20        	add $20
 29+  9119 30 05        	jr nc,1F
 30+  911B
 31+  911B              ; ------------------------------
 32+  911B CD FC 93     	call Reaparece_arriba
 33+  911E              ;	call Reinicio
 34+  911E              ; ------------------------------
 35+  911E 18 08        	jr 3F
 36+  9120 CD 20 8E     1 call NextScan
 37+  9123 22 98 85     	ld (Posicion_actual),hl
 38+  9126 10 E2            djnz 2B
 39+  9128 CD 12 94     3 call Genera_coordenadas
 40+  912B C9           	ret
 41+  912C
 42+  912C
 43+  912C              ; ******************************************************************************************************************************************************************************************
 44+  912C              ;
 45+  912C              ;   22/01/23
 46+  912C              ;
 47+  912C              ;	Mov_up
 48+  912C              ;
 49+  912C              ; 	Mueve el Sprite hacia arriba.
 50+  912C              ;
 51+  912C              ;
 52+  912C 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  912F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  9131              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  9131              ; 																		; _ en el caso de que no lo haya.
 56+  9131 3A AD 85     	ld a,(Vel_up)
 57+  9134 47           	ld b,a
 58+  9135 2A 98 85     	ld hl,(Posicion_actual)
 59+  9138 CD E0 90     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  913B A7           	and a
 61+  913C 20 10        	jr nz,1F
 62+  913E
 63+  913E              ; Nos encontramos en el 1er tercio de pantalla.
 64+  913E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  913E
 66+  913E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  913F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  9141 20 0B            jr nz,1F
 69+  9143 7D               ld a,l
 70+  9144 D6 20            sub $20
 71+  9146 30 06            jr nc,1F
 72+  9148 25               dec h
 73+  9149
 74+  9149              ; -----------------------------
 75+  9149 CD EC 93         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  914C              ;	call Reinicio
 77+  914C              ; -----------------------------
 78+  914C
 79+  914C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  914E CD 2F 8E     1 call PreviousScan
 81+  9151 22 98 85     	ld (Posicion_actual),hl
 82+  9154 10 E2            djnz 3B
 83+  9156 CD 12 94     2 call Genera_coordenadas
 84+  9159 C9           	ret
 85+  915A
 86+  915A              ; ******************************************************************************************************************************************************************************************
 87+  915A              ;
 88+  915A              ;	19/10/22
 89+  915A              ;
 90+  915A              ;	Mov_right.
 91+  915A              ;
 92+  915A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  915A              ;
 94+  915A
 95+  915A 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  915D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  915F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  915F              ; 																	; _ en el caso de que no lo haya.
 99+  915F 3A C3 85     	ld a,(Ctrl_0)
100+  9162 CB 77        	bit 6,a
101+  9164 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9166
103+  9166 CD 9A 93     	call Stop_Amadeus_right
104+  9169 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  916A 18 4D        	jr 8F
106+  916C
107+  916C 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  916F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  9171 20 46        	jr nz,8F
110+  9173
111+  9173 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9176 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  9177 28 40        	jr z,8F
114+  9179
115+  9179              ; ---------- ---------- ----------
116+  9179              ;
117+  9179              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  9179
119+  9179 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  917C FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  917E 28 11        	jr z,1F
122+  9180 38 06        	jr c,6F
123+  9182 FE 04        	cp 4
124+  9184 28 14        	jr z,7F
125+  9186 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9188
127+  9188              ; ---------- ---------- ----------
128+  9188              ;
129+  9188              ; Perfiles de velocidad
130+  9188              ;
131+  9188
132+  9188 3A 9E 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  918B FE FE        	cp $fe
134+  918D 20 2A        	jr nz,8F
135+  918F 18 10        	jr 3F
136+  9191 3A 9E 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  9194 FE FD        	cp $fd
138+  9196 20 21        	jr nz,8F
139+  9198 18 07        	jr 3F
140+  919A 3A 9E 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  919D FE FB        	cp $fb
142+  919F 20 18        	jr nz,8F
143+  91A1
144+  91A1              ; ---------- ---------- ----------
145+  91A1
146+  91A1              3
147+  91A1 CD DA 93     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  91A4              ;	call Reinicio
149+  91A4
150+  91A4              ; ---------- ---------- ----------
151+  91A4              ;
152+  91A4              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  91A4
154+  91A4 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  91A6 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  91A7 CD C0 91     	call DESPLZ_DER
157+  91AA C1           	pop bc
158+  91AB 10 F9        	djnz 5B
159+  91AD 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  91B0 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  91B1 22 98 85     	ld (Posicion_actual),hl
162+  91B4 CD 12 94     	call Genera_coordenadas
163+  91B7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  91B9
165+  91B9              ; ---------- ---------- ----------
166+  91B9
167+  91B9 2A 98 85     8 ld hl,(Posicion_actual)
168+  91BC CD C0 91     	call DESPLZ_DER
169+  91BF C9           2 ret
170+  91C0
171+  91C0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  91C0              ;
173+  91C0              ;	22/9/22
174+  91C0              ;
175+  91C0
176+  91C0 CD CF 91     DESPLZ_DER call Desplaza_derecha
177+  91C3 CD 1B 92         call modifica_parametros_1er_DESPLZ_2
178+  91C6 CD 44 92         call Ciclo_completo
179+  91C9 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  91CC CB FE        	set 7,(hl)
181+  91CE C9           	ret
182+  91CF
183+  91CF              ; ******************************************************************************************************************************************************************************************
184+  91CF              ;	15/02/23
185+  91CF              ;
186+  91CF
187+  91CF 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  91D2 47           	ld b,a
189+  91D3 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  91D6 23           1 inc hl
191+  91D7 23           	inc hl
192+  91D8 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  91DA 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  91DD CD 93 87     	call Extrae_address
195+  91E0 22 9A 85     	ld (Puntero_objeto),hl
196+  91E3
197+  91E3              ; Modifica (Puntero_DESPLZ_izq).
198+  91E3
199+  91E3              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  91E3              ; Cuántos movimientos hemos hecho ??
201+  91E3              ; DE contiene (Puntero_DESPLZ_der).
202+  91E3
203+  91E3 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  91E6 EB           	ex de,hl
205+  91E7 A7           	and a
206+  91E8 ED 52        	sbc hl,de
207+  91EA CB 3D        	srl l
208+  91EC 3E 08        6 ld a,8
209+  91EE 95           	sub l
210+  91EF 30 1E        	jr nc,3F
211+  91F1
212+  91F1              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  91F1              ; B="0".
214+  91F1
215+  91F1 04           4 inc b
216+  91F2 3C           	inc a
217+  91F3 20 FC        	jr nz,4B
218+  91F5 78           	ld a,b
219+  91F6 08           	ex af,af
220+  91F7 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  91FA 23           5 inc hl
222+  91FB 23           	inc hl
223+  91FC 10 FC        	djnz 5B
224+  91FE 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  9201 CD 93 87     	call Extrae_address
226+  9204 22 9A 85     	ld (Puntero_objeto),hl
227+  9207
228+  9207              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  9207              ; _(Posicion_actual).
230+  9207
231+  9207 21 98 85     	ld hl,Posicion_actual
232+  920A 34           	inc (hl)
233+  920B 08               ex af,af
234+  920C 6F           	ld l,a
235+  920D 18 DD        	jr 6B
236+  920F
237+  920F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  920F
239+  920F 47           3 ld b,a
240+  9210 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  9213 23           2 inc hl
242+  9214 23           	inc hl
243+  9215 10 FC        	djnz 2B
244+  9217 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  921A C9           8 ret
246+  921B
247+  921B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  921B              ;
249+  921B              ;	24/7/22
250+  921B              ;
251+  921B              ;	modifica_parametros_1er_DESPLZ_2
252+  921B              ;
253+  921B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  921B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  921B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  921B
257+  921B 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  921E A7           	and a
259+  921F 20 1F        	jr nz,1F
260+  9221 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  9223 32 9E 85         ld (CTRL_DESPLZ),a
262+  9226
263+  9226 21 97 85     	ld hl,Columns
264+  9229 34           	inc (hl)
265+  922A 3A AA 85     	ld a,(Cuad_objeto)
266+  922D E6 01        	and 1
267+  922F 28 0F        	jr z,1F
268+  9231 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  9234 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  9235 22 98 85     	ld (Posicion_actual),hl
271+  9238 CD 12 94     	call Genera_coordenadas
272+  923B CD A6 93     	call Inc_CTRL_DESPLZ
273+  923E 18 03        	jr 2F
274+  9240 CD A6 93     1 call Inc_CTRL_DESPLZ
275+  9243 C9           2 ret
276+  9244
277+  9244              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  9244              ;
279+  9244              ;	24/7/22
280+  9244              ;
281+  9244              ;	Ciclo_completo.
282+  9244              ;
283+  9244              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  9244              ;
285+  9244              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  9244              ; 	Decrementamos (Columns).
287+  9244              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  9244              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  9244
290+  9244
291+  9244 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  9247 FE FF        	cp $ff
293+  9249 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  924B E6 F0        	and $f0
295+  924D 20 28        	jr nz,3F
296+  924F
297+  924F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  924F
299+  924F 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  9252 47           	ld b,a
301+  9253 3E F8        	ld a,$f8
302+  9255 80           	add b
303+  9256 32 9E 85     	ld (CTRL_DESPLZ),a
304+  9259 18 1C        	jr 3F
305+  925B 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  925E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  925F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  9260 32 9E 85     	ld (CTRL_DESPLZ),a
309+  9263 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9266 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9268 20 0A        	jr nz,2F
312+  926A 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  926D 23           	inc hl
314+  926E 22 98 85     	ld (Posicion_actual),hl
315+  9271 CD 12 94     	call Genera_coordenadas
316+  9274
317+  9274              ; Inicia el puntero de Sprite.
318+  9274
319+  9274 CD AA 87     2 call Inicia_puntero_objeto_der
320+  9277 C9           3 ret
321+  9278
322+  9278              ; ******************************************************************************************************************************************************************************************
323+  9278              ;
324+  9278              ;	15/02/23
325+  9278              ;
326+  9278              ;	Mov_left.
327+  9278              ;
328+  9278              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9278              ;
330+  9278              Mov_left
331+  9278
332+  9278 21 C3 85     	ld hl,Ctrl_0
333+  927B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  927D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  927D              ; 																	; _ en el caso de que no lo haya.
336+  927D 3A C3 85     	ld a,(Ctrl_0)
337+  9280 CB 77        	bit 6,a
338+  9282 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9284
340+  9284 CD A0 93     	call Stop_Amadeus_left
341+  9287 C8           	ret z
342+  9288 20 50        	jr nz,8F
343+  928A
344+  928A 3A 9C 85     11 ld a,(Coordenada_X)
345+  928D A7           	and a
346+  928E 20 4A        	jr nz,8F
347+  9290
348+  9290 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  9293 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  9294 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9296
352+  9296              ; ---------- ---------- ----------
353+  9296
354+  9296 3A AB 85     	ld a,(Vel_left)
355+  9299 FE 02        	cp 2
356+  929B 28 0F        	jr z,1F
357+  929D 38 04        	jr c,6F
358+  929F FE 04        	cp 4
359+  92A1 28 12        	jr z,7F
360+  92A3
361+  92A3              ; ---------- ---------- ----------
362+  92A3
363+  92A3 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  92A6 FE F9        	cp $f9
365+  92A8 20 30        	jr nz,8F
366+  92AA 18 10        	jr 4F
367+  92AC 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  92AF FE FA        	cp $fa
369+  92B1 20 27        	jr nz,8F
370+  92B3 18 07        	jr 4F
371+  92B5 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  92B8 FE FC        	cp $fc
373+  92BA 20 1E        	jr nz,8F
374+  92BC
375+  92BC              ; ---------- ---------- ----------
376+  92BC
377+  92BC              4
378+  92BC CD C8 93     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  92BF              ;	call Reinicio
380+  92BF
381+  92BF              ; ---------- ---------- ----------
382+  92BF
383+  92BF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  92C1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  92C2
386+  92C2 2A A2 85     	ld hl,(Indice_Sprite_izq)
387+  92C5 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
388+  92C8
389+  92C8 CD E1 92     	call DESPLZ_IZQ
390+  92CB C1           	pop bc
391+  92CC 10 F3        	djnz 5B
392+  92CE 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  92D1 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  92D2 22 98 85     	ld (Posicion_actual),hl
395+  92D5 CD 12 94     	call Genera_coordenadas
396+  92D8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  92DA
398+  92DA              ; ---------- ---------- ----------
399+  92DA              ; Movemos, no hay recolocación.
400+  92DA
401+  92DA 2A 98 85     8 ld hl,(Posicion_actual)
402+  92DD CD E1 92     	call DESPLZ_IZQ
403+  92E0 C9           2 ret
404+  92E1
405+  92E1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  92E1              ;
407+  92E1              ;	22/9/22
408+  92E1
409+  92E1              DESPLZ_IZQ
410+  92E1
411+  92E1 CD F0 92     	call Desplaza_izquierda
412+  92E4 CD 3C 93         call modifica_parametros_1er_DESPLZ
413+  92E7 CD 64 93     	call Ciclo_completo_2
414+  92EA 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  92ED CB BE        	res 7,(hl)
416+  92EF C9           	ret
417+  92F0
418+  92F0              Desplaza_izquierda
419+  92F0
420+  92F0 3A AB 85     	ld a,(Vel_left)
421+  92F3 47           	ld b,a
422+  92F4 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
423+  92F7 23           1 inc hl
424+  92F8 23           	inc hl
425+  92F9 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  92FB 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
427+  92FE CD 93 87     	call Extrae_address
428+  9301 22 9A 85     	ld (Puntero_objeto),hl
429+  9304
430+  9304              ; Modifica (Puntero_DESPLZ_der).
431+  9304
432+  9304              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  9304              ; Cuántos movimientos hemos hecho ??
434+  9304              ; DE contiene (Puntero_DESPLZ_izq).
435+  9304
436+  9304 2A A2 85     7 ld hl,(Indice_Sprite_izq)
437+  9307 EB           	ex de,hl
438+  9308 A7           	and a
439+  9309 ED 52        	sbc hl,de
440+  930B CB 3D        	srl l
441+  930D 3E 08        6 ld a,8
442+  930F 95           	sub l
443+  9310 30 1E        	jr nc,3F
444+  9312
445+  9312              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  9312              ; B="0".
447+  9312
448+  9312 04           4 inc b
449+  9313 3C           	inc a
450+  9314 20 FC        	jr nz,4B
451+  9316 78           	ld a,b
452+  9317 08           	ex af,af
453+  9318 2A A2 85     	ld hl,(Indice_Sprite_izq)
454+  931B 23           5 inc hl
455+  931C 23           	inc hl
456+  931D 10 FC        	djnz 5B
457+  931F 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
458+  9322 CD 93 87     	call Extrae_address
459+  9325 22 9A 85     	ld (Puntero_objeto),hl
460+  9328
461+  9328              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  9328              ; _(Posicion_actual).
463+  9328
464+  9328 21 98 85     	ld hl,Posicion_actual
465+  932B 35           	dec (hl)
466+  932C 08           	ex af,af
467+  932D 6F           	ld l,a
468+  932E 18 DD        	jr 6B
469+  9330
470+  9330              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  9330
472+  9330 47           3 ld b,a
473+  9331 2A A0 85     	ld hl,(Indice_Sprite_der)
474+  9334 23           2 inc hl
475+  9335 23           	inc hl
476+  9336 10 FC        	djnz 2B
477+  9338 22 A4 85     	ld (Puntero_DESPLZ_der),hl
478+  933B C9           8 ret
479+  933C
480+  933C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  933C              ;
482+  933C              ;	modifica_parametros_1er_DESPLZ
483+  933C              ;
484+  933C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  933C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  933C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  933C
488+  933C 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  933F A7           	and a
490+  9340 20 1E        	jr nz,1F
491+  9342 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  9343 32 9E 85         ld (CTRL_DESPLZ),a
493+  9346 21 97 85     	ld hl,Columns
494+  9349 34           	inc (hl)
495+  934A 3A AA 85     	ld a,(Cuad_objeto)
496+  934D E6 01        	and 1
497+  934F 20 0F        	jr nz,1F
498+  9351 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  9354 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  9355 22 98 85     	ld (Posicion_actual),hl
501+  9358 CD 12 94     	call Genera_coordenadas
502+  935B CD B7 93     	call Dec_CTRL_DESPLZ
503+  935E 18 03        	jr 2F
504+  9360 CD B7 93     1 call Dec_CTRL_DESPLZ
505+  9363 C9           2 ret
506+  9364
507+  9364              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  9364
509+  9364 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  9367 FE F7        	cp $f7
511+  9369 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  936B 30 2C        	jr nc,3F
513+  936D
514+  936D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  936D
516+  936D 06 00        	ld b,0
517+  936F 04           4 inc b
518+  9370 3C           	inc a
519+  9371 FE F7        	cp $f7
520+  9373 20 FA        	jr nz,4B
521+  9375 3E FF        	ld a,$ff
522+  9377 90           	sub b
523+  9378 32 9E 85     	ld (CTRL_DESPLZ),a
524+  937B 18 1C        	jr 3F
525+  937D
526+  937D              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  937D
528+  937D 21 97 85     1 ld hl,Columns
529+  9380 35           	dec (hl)
530+  9381 AF           	xor a
531+  9382 32 9E 85     	ld (CTRL_DESPLZ),a
532+  9385 3A AA 85     	ld a,(Cuad_objeto)
533+  9388 E6 01        	and 1
534+  938A 28 0A        	jr z,2F
535+  938C 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  938F 2B           	dec hl
537+  9390 22 98 85     	ld (Posicion_actual),hl
538+  9393 CD 12 94     	call Genera_coordenadas
539+  9396
540+  9396              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  9396
542+  9396 CD BD 87     2 call Inicia_puntero_objeto_izq
543+  9399 C9           3 ret
544+  939A
545+  939A              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  939A              ;
547+  939A              ;	19/10/22
548+  939A              ;
549+  939A              ;	(cp 29) para un Amadeus de 3 Columns.
550+  939A              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  939A
552+  939A 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  939D FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  939F C9           	ret
555+  93A0
556+  93A0              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  93A0              ;
558+  93A0              ;	19/10/22
559+  93A0              ;
560+  93A0              ;	(cp 2) para un Amadeus de 3 Columns.
561+  93A0              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  93A0
563+  93A0 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  93A3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  93A5 C9           	ret
566+  93A6
567+  93A6              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  93A6              ;
569+  93A6              ;	24/7/22
570+  93A6              ;
571+  93A6              ;	Inc_CTRL_DESPLZ
572+  93A6              ;
573+  93A6              ;
574+  93A6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  93A6
576+  93A6 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  93A9 3A AC 85     	ld a,(Vel_right)
578+  93AC A7           	and a
579+  93AD 28 06        	jr z,1F
580+  93AF 47           	ld b,a
581+  93B0 34           3 inc (hl)
582+  93B1 10 FD        	djnz 3B
583+  93B3 18 01        	jr 2F
584+  93B5 34           1 inc (hl)
585+  93B6 C9           2 ret
586+  93B7
587+  93B7              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  93B7              ;
589+  93B7              ;	5/2/23
590+  93B7              ;
591+  93B7              ;	Dec_CTRL_DESPLZ
592+  93B7              ;
593+  93B7              ;
594+  93B7              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  93B7
596+  93B7 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  93BA 3A AB 85     	ld a,(Vel_left)
598+  93BD A7           	and a
599+  93BE 28 06        	jr z,1F
600+  93C0 47           	ld b,a
601+  93C1 35           3 dec (hl)
602+  93C2 10 FD        	djnz 3B
603+  93C4 18 01        	jr 2F
604+  93C6 35           1 dec (hl)
605+  93C7 C9           2 ret
606+  93C8
607+  93C8              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  93C8
609+  93C8 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  93CB 01 1F 00     	ld bc,31
611+  93CE A7           	and a
612+  93CF ED 4A        	adc hl,bc
613+  93D1 22 98 85     	ld (Posicion_actual),hl
614+  93D4 21 C3 85     	ld hl,Ctrl_0														; $xxx1
615+  93D7 CB C6        	set 0,(hl)
616+  93D9 C9           	ret
617+  93DA
618+  93DA              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  93DA
620+  93DA 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  93DD 01 1F 00     	ld bc,31
622+  93E0 A7           	and a
623+  93E1 ED 42        	sbc hl,bc
624+  93E3 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
625+  93E6 21 C3 85     	ld hl,Ctrl_0
626+  93E9 CB CE        	set 1,(hl)
627+  93EB C9           	ret
628+  93EC
629+  93EC              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  93EC
631+  93EC 24           Reaparece_abajo inc h
632+  93ED 01 E0 17     	ld bc,$17e0
633+  93F0 A7           	and a
634+  93F1 ED 4A        	adc hl,bc
635+  93F3 22 98 85     	ld (Posicion_actual),hl
636+  93F6 21 C3 85     	ld hl,Ctrl_0
637+  93F9 CB D6        	set 2,(hl)
638+  93FB C9           	ret
639+  93FC
640+  93FC              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  93FC
642+  93FC 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  93FF A7           	and a
644+  9400 ED 42        	sbc hl,bc
645+  9402 22 98 85     	ld (Posicion_actual),hl
646+  9405 21 C3 85     	ld hl,Ctrl_0
647+  9408 CB DE        	set 3,(hl)
648+  940A C9           	ret
649+  940B
650+  940B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  940B
652+  940B 2A A8 85     Reinicio ld hl,(Posicion_inicio)
653+  940E 22 98 85     	ld (Posicion_actual),hl
654+  9411 C9           	ret
# file closed: Direcciones.asm
865   9412              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  9412              ;	12/12/22
  2+  9412              ;
  3+  9412              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  9412              ;	Fila superior "0", Columna izquierda "0".
  5+  9412              ;
  6+  9412              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  9412              ;
  8+  9412              ;	Modifica: A
  9+  9412
 10+  9412 C5           Genera_coordenadas push bc
 11+  9413 E5           	push hl
 12+  9414 2A 98 85     	ld hl,(Posicion_actual)
 13+  9417 7D           	ld a,l
 14+  9418 E6 1F        	and $1f
 15+  941A 32 9C 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  941D CD E0 90     	call calcula_tercio
 17+  9420 47           	ld b,a
 18+  9421 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  9422 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  9424 7D           	ld a,l
 21+  9425 E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  9427 28 05        	jr z,2F
 23+  9429 0C           1 inc c
 24+  942A D6 20        	sub 32
 25+  942C 20 FB        	jr nz,1B
 26+  942E 0C           2 inc c
 27+  942F 04           	inc b
 28+  9430 05           	dec b
 29+  9431 28 04        	jr z,3F
 30+  9433 3E E0        	ld a,$e0
 31+  9435 10 F2        	djnz 1B
 32+  9437 79           3 ld a,c
 33+  9438 3D           	dec a
 34+  9439 32 9D 85     	ld (Coordenada_y),a
 35+  943C E1           	pop hl
 36+  943D C1           	pop bc
 37+  943E C9           	ret
# file closed: Genera_coordenadas.asm
866   943F              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  943F
  2+  943F
  3+  943F              ;   11/8/22
  4+  943F              ;
  5+  943F              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  943F              ;
  7+  943F              ;   Mov_obj.asm
  8+  943F              ;
  9+  943F              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  943F              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  943F              ;
 12+  943F              ;   Codificación:
 13+  943F              ;
 14+  943F              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  943F
 16+  943F              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  943F
 18+  943F 02 40 00     Arriba db 2,%01000000,0
 19+  9442 02 80 00     Abajo db 2,%10000000,0
 20+  9445 02 20 00     Derecha db 2,%00100000,0
 21+  9448 02 10 00     Izquierda db 2,%00010000,0
 22+  944B 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  944F 60 42 60 40
 22+  9453 63
 23+  9454 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9458 22 A3 80 A0
 24+  945C 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  9460 84 A0 83 A0
 25+  9464 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9468 80 A3 22 A0
 26+  946C 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  9470 40 60 42 60
 27+  9474 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9478 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  947C 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  9480 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  9484 84
 31+  9485 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  9489 84 00
 32+  948B 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  948F 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  9493 1F 1F 1F 1F
 34+  9497 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  949B 1F 1F 1F 1F
 34+  949F 1F
 35+  94A0 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  94A4 2F 2F 2F 2F
 35+  94A8 2F 2F
 36+  94AA 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  94AE 2F 2F 00
 37+  94B1
 38+  94B1
 39+  94B1              ; ----- ----- ----- ----- -----
 40+  94B1
 41+  94B1 8F 94        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  94B3 8B 94        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  94B5 48 94        Indice_mov_Izquierda defw Izquierda
 44+  94B7 45 94        Indice_mov_Derecha defw Derecha
 45+  94B9 42 94        Indice_mov_Abajo defw Abajo
 46+  94BB 3F 94        Indice_mov_Arriba defw Arriba
 47+  94BD 7C 94        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  94BF 80 94        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  94C1 78 94        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  94C3 85 94        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  94C5 4B 94        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  94C7              ; ----- ----- ----- ----- -----
 53+  94C7
 54+  94C7 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  94CA A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  94CB 28 02            jr z,1F
 57+  94CD 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  94CF 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  94D2 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  94D4 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  94D7              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  94D7 2A C7 85         ld hl,(Puntero_mov)
 63+  94DA 7E               ld a,(hl)
 64+  94DB 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  94DE 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  94DF 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  94E2
 68+  94E2 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  94E5 A7               and a
 70+  94E6 20 0C            jr nz,12F
 71+  94E8 2A C7 85         ld hl,(Puntero_mov)
 72+  94EB 7E               ld a,(hl)
 73+  94EC A7               and a
 74+  94ED 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  94EF E6 0F            and $0f
 76+  94F1 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  94F4              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  94F4 2A C7 85     12 ld hl,(Puntero_mov)
 79+  94F7 CB 7E            bit 7,(hl)
 80+  94F9 28 03            jr z,2F
 81+  94FB CD FE 90         call Mov_down
 82+  94FE 2A C7 85     2 ld hl, (Puntero_mov)
 83+  9501 CB 76            bit 6,(hl)
 84+  9503 28 03            jr z,3F
 85+  9505 CD 2C 91         call Mov_up
 86+  9508 2A C7 85     3 ld hl, (Puntero_mov)
 87+  950B CB 6E            bit 5,(hl)
 88+  950D 28 03            jr z,4F
 89+  950F CD 5A 91         call Mov_right
 90+  9512 2A C7 85     4 ld hl, (Puntero_mov)
 91+  9515 CB 66            bit 4,(hl)
 92+  9517 28 03            jr z,5F
 93+  9519 CD 78 92         call Mov_left
 94+  951C
 95+  951C              ; ---------- --------- --------- ---------- ----------
 96+  951C
 97+  951C 3A CB 85     5 ld a,(Repetimos_db)
 98+  951F A7               and a
 99+  9520 28 07            jr z,6F
100+  9522 3D               dec a
101+  9523 32 CB 85         ld (Repetimos_db),a
102+  9526 28 01            jr z,6f
103+  9528 C9           11 ret
104+  9529 21 C9 85     6 ld hl,Contador_db_mov
105+  952C 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  952D 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  9530 23               inc hl
108+  9531 22 C7 85         ld (Puntero_mov),hl
109+  9534 18 F2            jr 11B
110+  9536 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  9539 3A CA 85         ld a,(Incrementa_puntero)
112+  953C 47               ld b,a
113+  953D 23           8 inc hl
114+  953E 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  9540 5E               ld e,(hl)
116+  9541 23               inc hl
117+  9542 56               ld d,(hl)
118+  9543 EB               ex de,hl
119+  9544 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9547 18 DF            jr 11B
121+  9549
122+  9549              ; ---------- --------- --------- ---------- ----------
123+  9549              ;
124+  9549              ;   11/8/22
125+  9549              ;
126+  9549              ;   Prepara_Puntero_mov
127+  9549
128+  9549 E5           Prepara_Puntero_mov push hl
129+  954A D5               push de
130+  954B 2A C5 85         ld hl,(Puntero_indice_mov)
131+  954E 5E               ld e,(hl)
132+  954F 23               inc hl
133+  9550 56               ld d,(hl)
134+  9551 EB               ex de,hl
135+  9552 22 C7 85         ld (Puntero_mov),hl
136+  9555 D1               pop de
137+  9556 E1               pop hl
138+  9557 C9               ret
139+  9558
140+  9558              ; ---------- --------- --------- ---------- ----------
141+  9558              ;
142+  9558              ;   11/8/22
143+  9558              ;
144+  9558              ;   Reinicia_el_movimiento
145+  9558
146+  9558 CD 49 95     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  955B AF               xor a
148+  955C 32 C9 85         ld (Contador_db_mov),a
149+  955F 32 CA 85         ld (Incrementa_puntero),a
150+  9562
151+  9562              ;    jr $
152+  9562
153+  9562 C3 C7 94         jp Movimiento
154+  9565 C9               ret
155+  9566              ; ---------- --------- --------- ---------- ----------
156+  9566
157+  9566
158+  9566
159+  9566
160+  9566
161+  9566
162+  9566
163+  9566
164+  9566
165+  9566
166+  9566
167+  9566
168+  9566
169+  9566
170+  9566
171+  9566
172+  9566
173+  9566
# file closed: Patrones_de_mov.asm
867   9566              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9566              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9566              ;
  3+  9566              ;	3/1/23
  4+  9566              ;
  5+  9566              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9566
  7+  9566              ;	ADC HL,SP	LD (addr),SP
  8+  9566              ;	ADD HL,SP	LD SP,(addr)
  9+  9566              ;	ADD IX,SP	LD SP,nn
 10+  9566              ; 	ADD IY,SP	LD SP,HL
 11+  9566              ;				LD SP,IX
 12+  9566              ;	DEC SP		LD SP,IY
 13+  9566
 14+  9566              ;	EX (SP),HL
 15+  9566              ;	EX (SP),IX
 16+  9566              ;	EX (SP),IY
 17+  9566
 18+  9566              ;	INC SP
 19+  9566
 20+  9566
 21+  9566                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
868   7FD4
869   7FD4              	SAVESNA "Pruebas.sna", START
870   7FD4
871   7FD4
872   7FD4
# file closed: Banco_de_pruebas.asm
