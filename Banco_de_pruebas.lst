# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 20 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD C8 8E     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C 3E 06        	ld a,6
  41  AA1E D3 FE        	out ($fe),a
  42  AA20 CD BE 8E     	call Pinta_Amadeus										; Borde amarillo.
  43  AA23
  44  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA23
  47  AA23 3E 07        	ld a,7
  48  AA25 D3 FE        	out ($fe),a												; Borde blanco.
  49  AA27 CD EA 8E     	call Guarda_parametros_DRAW
  50  AA2A CD 0E 8E     	call Restore_Amadeus
  51  AA2D
  52  AA2D              ; Posible colisión Entidad-Amadeus ???
  53  AA2D
  54  AA2D 3A 30 89     	ld a,(Impacto2)
  55  AA30 CB 57        	bit 2,a
  56  AA32 28 03        	jr z,1F
  57  AA34
  58  AA34 CD 0D 91     	call Detecta_colision_nave_entidad
  59  AA37
  60  AA37 3E 04        1 ld a,4
  61  AA39 D3 FE        	out ($fe),a
  62  AA3B CD EF 8A     	call Gestiona_Amadeus
  63  AA3E
  64  AA3E 3E 07        	ld a,7
  65  AA40 D3 FE        	out ($fe),a											; Borde blanco.
  66  AA42 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA45 CD 20 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA48
  69  AA48              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA48
  71  AA48 CD F6 8E     	call Recupera_parametros_DRAW
  72  AA4B CD D8 8E     	call Actualiza_relojes
  73  AA4E
  74  AA4E 21 2A 89     	ld hl,Ctrl_3
  75  AA51 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA53
  77  AA53 FD E1        	pop iy
  78  AA55 DD E1        	pop ix
  79  AA57 F1           	pop af
  80  AA58 C1           	pop bc
  81  AA59 D1           	pop de
  82  AA5A E1           	pop hl
  83  AA5B D9           	exx
  84  AA5C C1           	pop bc
  85  AA5D D1           	pop de
  86  AA5E E1           	pop hl
  87  AA5F 08           	ex af,af'
  88  AA60 F1           	pop af
  89  AA61 08           	ex af,af'
  90  AA62 D9           	exx
  91  AA63
  92  AA63 ED 7B 20 89  	ld sp,(Stack_3)
  93  AA67
  94  AA67 FB           	ei
  95  AA68
  96  AA68 3E 01        	ld a,1												; Borde azul.
  97  AA6A D3 FE        	out ($fe),a
  98  AA6C
  99  AA6C C9           	ret
 100  AA6D
 101  AA6D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA6D
 103  AA6D              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA6D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA6D              ;
   3+ AA6D              ;	17/02/23
   4+ AA6D              ;
   5+ AA6D              ;	Sprites e índices.
   6+ AA6D
   7+ AA6D              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	21/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas_de_entidades						; ! 67 Bytes por entidad.
 101+ 856C
 102+ 856C C1 85        	defw Caja_1
 103+ 856E 04 86        	defw Caja_2
 104+ 8570 47 86        	defw Caja_3
 105+ 8572 8A 86        	defw Caja_4
 106+ 8574 CD 86        	defw Caja_5
 107+ 8576 10 87        	defw Caja_6
 108+ 8578 53 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 C1 50        	defw $50c1										; (Posicion_inicio).		$50c1 - $50de
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA A0 6F        	defw Almacen_de_movimientos_masticados_Amadeus  ; Puntero_de_almacen_de_mov_masticados
 145+ 85AC 00 00        	defw 0 											; Contador_de_mov_masticados
 146+ 85AE
 147+ 85AE 40           	db $40											; (Ctrl_0).
 148+ 85AF
 149+ 85AF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 149+ 85B3 00 00
 150+ 85B5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 151+ 85B8
 152+ 85B8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 153+ 85BA 00           	db 0											; (Cola_de_desplazamiento).
 154+ 85BB
 155+ 85BB 00           	db 0 											; (Columnas).
 156+ 85BC 00 00        	defw 0											; (Limite_horizontal).
 157+ 85BE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 158+ 85C1
 159+ 85C1              ; ---------- ---------- ---------- ---------- ----------
 160+ 85C1
 161+ 85C1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 162+ 85C3 00 00        	defw 0											; (Posicion_actual).
 163+ 85C5 00 00        	defw 0 											; (Puntero_objeto).
 164+ 85C7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 165+ 85CA
 166+ 85CA 00           	db %00000000 									; (Attr).
 167+ 85CB
 168+ 85CB 00 00        	defw 0											; (Indice_Sprite_der).
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_izq).
 170+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 172+ 85D3
 173+ 85D3 00 00        	defw 0											; (Posicion_inicio).
 174+ 85D5 00           	db 0											; (Cuad_objeto).
 175+ 85D6
 176+ 85D6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 177+ 85DA
 178+ 85DA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 179+ 85DB
 180+ 85DB 00 00 00...  	ds 6											; Variables_de_borrado
 181+ 85E1
 182+ 85E1 00 00        	db 0,0											; Variables_de_pintado
 183+ 85E3 00 00        	defw 0											;	" " " " " " "
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85EB
 187+ 85EB 00 00        	defw 0 											; Puntero_de_impresion.
 188+ 85ED
 189+ 85ED D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 190+ 85EF 00 00        	defw 0 											; Contador_de_mov_masticados
 191+ 85F1
 192+ 85F1 00           	db 0											; (Ctrl_0).
 193+ 85F2
 194+ 85F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 194+ 85F6 00 00
 195+ 85F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 196+ 85FB
 197+ 85FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 198+ 85FD 00           	db 0											; (Cola_de_desplazamiento).
 199+ 85FE
 200+ 85FE 00           	db 0 											; (Columnas).
 201+ 85FF 00 00        	defw 0											; (Limite_horizontal).
 202+ 8601 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 203+ 8604
 204+ 8604              ; ---------- ---------- ---------- ---------- ----------
 205+ 8604
 206+ 8604 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 207+ 8606 00 00        	defw 0											; (Posicion_actual).
 208+ 8608 00 00        	defw 0 											; (Puntero_objeto).
 209+ 860A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 210+ 860D
 211+ 860D 00           	db %00000000 									; (Attr).
 212+ 860E
 213+ 860E 00 00        	defw 0											; (Indice_Sprite_der).
 214+ 8610 00 00        	defw 0											; (Indice_Sprite_izq).
 215+ 8612 00 00        	defw 0											; (Puntero_DESPLZ_der).
 216+ 8614 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 217+ 8616
 218+ 8616 00 00        	defw 0											; (Posicion_inicio).
 219+ 8618 00           	db 0											; (Cuad_objeto).
 220+ 8619
 221+ 8619 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 222+ 861D
 223+ 861D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 224+ 861E
 225+ 861E 00 00 00...  	ds 6											; Variables_de_borrado
 226+ 8624
 227+ 8624 00 00        	db 0,0											; Variables_de_pintado
 228+ 8626 00 00        	defw 0											;	" " " " " " "
 229+ 8628 00 00        	defw 0											;	" " " " " " "
 230+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 231+ 862E
 232+ 862E 00 00        	defw 0 											; Puntero_de_impresion.
 233+ 8630
 234+ 8630 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 235+ 8632 00 00        	defw 0 											; Contador_de_mov_masticados
 236+ 8634
 237+ 8634 00           	db 0											; (Ctrl_0).
 238+ 8635
 239+ 8635 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 239+ 8639 00 00
 240+ 863B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 241+ 863E
 242+ 863E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 243+ 8640 00           	db 0											; (Cola_de_desplazamiento).
 244+ 8641
 245+ 8641 00           	db 0 											; (Columnas).
 246+ 8642 00 00        	defw 0											; (Limite_horizontal).
 247+ 8644 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 248+ 8647
 249+ 8647              ; ---------- ---------- ---------- ---------- ----------
 250+ 8647
 251+ 8647 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 252+ 8649 00 00        	defw 0											; (Posicion_actual).
 253+ 864B 00 00        	defw 0 											; (Puntero_objeto).
 254+ 864D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 255+ 8650
 256+ 8650 00           	db %00000000 									; (Attr).
 257+ 8651
 258+ 8651 00 00        	defw 0											; (Indice_Sprite_der).
 259+ 8653 00 00        	defw 0											; (Indice_Sprite_izq).
 260+ 8655 00 00        	defw 0											; (Puntero_DESPLZ_der).
 261+ 8657 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 262+ 8659
 263+ 8659 00 00        	defw 0											; (Posicion_inicio).
 264+ 865B 00           	db 0											; (Cuad_objeto).
 265+ 865C
 266+ 865C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 267+ 8660
 268+ 8660 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 269+ 8661
 270+ 8661 00 00 00...  	ds 6											; Variables_de_borrado
 271+ 8667
 272+ 8667 00 00        	db 0,0											; Variables_de_pintado
 273+ 8669 00 00        	defw 0											;	" " " " " " "
 274+ 866B 00 00        	defw 0											;	" " " " " " "
 275+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 276+ 8671
 277+ 8671 00 00        	defw 0 											; Puntero_de_impresion.
 278+ 8673
 279+ 8673 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 280+ 8675 00 00        	defw 0 											; Contador_de_mov_masticados
 281+ 8677
 282+ 8677 00           	db 0											; (Ctrl_0).
 283+ 8678
 284+ 8678 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 284+ 867C 00 00
 285+ 867E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 286+ 8681
 287+ 8681 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 288+ 8683 00           	db 0											; (Cola_de_desplazamiento).
 289+ 8684
 290+ 8684 00           	db 0 											; (Columnas).
 291+ 8685 00 00        	defw 0											; (Limite_horizontal).
 292+ 8687 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 293+ 868A
 294+ 868A              ; ---------- ---------- ---------- ---------- ----------
 295+ 868A
 296+ 868A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 297+ 868C 00 00        	defw 0											; (Posicion_actual).
 298+ 868E 00 00        	defw 0 											; (Puntero_objeto).
 299+ 8690 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 300+ 8693
 301+ 8693 00           	db %00000000 									; (Attr).
 302+ 8694
 303+ 8694 00 00        	defw 0											; (Indice_Sprite_der).
 304+ 8696 00 00        	defw 0											; (Indice_Sprite_izq).
 305+ 8698 00 00        	defw 0											; (Puntero_DESPLZ_der).
 306+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 307+ 869C
 308+ 869C 00 00        	defw 0											; (Posicion_inicio).
 309+ 869E 00           	db 0											; (Cuad_objeto).
 310+ 869F
 311+ 869F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 312+ 86A3
 313+ 86A3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 314+ 86A4
 315+ 86A4 00 00 00...  	ds 6											; Variables_de_borrado
 316+ 86AA
 317+ 86AA 00 00        	db 0,0											; Variables_de_pintado
 318+ 86AC 00 00        	defw 0											;	" " " " " " "
 319+ 86AE 00 00        	defw 0											;	" " " " " " "
 320+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 321+ 86B4
 322+ 86B4 00 00        	defw 0 											; Puntero_de_impresion.
 323+ 86B6
 324+ 86B6 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 325+ 86B8 00 00        	defw 0 											; Contador_de_mov_masticados
 326+ 86BA
 327+ 86BA 00           	db 0											; (Ctrl_0).
 328+ 86BB
 329+ 86BB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 329+ 86BF 00 00
 330+ 86C1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 331+ 86C4
 332+ 86C4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 333+ 86C6 00           	db 0											; (Cola_de_desplazamiento).
 334+ 86C7
 335+ 86C7 00           	db 0 											; (Columnas).
 336+ 86C8 00 00        	defw 0											; (Limite_horizontal).
 337+ 86CA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 338+ 86CD
 339+ 86CD              ; ---------- ---------- ---------- ---------- ----------
 340+ 86CD
 341+ 86CD 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 342+ 86CF 00 00        	defw 0											; (Posicion_actual).
 343+ 86D1 00 00        	defw 0 											; (Puntero_objeto).
 344+ 86D3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 345+ 86D6
 346+ 86D6 00           	db %00000000 									; (Attr).
 347+ 86D7
 348+ 86D7 00 00        	defw 0											; (Indice_Sprite_der).
 349+ 86D9 00 00        	defw 0											; (Indice_Sprite_izq).
 350+ 86DB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 351+ 86DD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 352+ 86DF
 353+ 86DF 00 00        	defw 0											; (Posicion_inicio).
 354+ 86E1 00           	db 0											; (Cuad_objeto).
 355+ 86E2
 356+ 86E2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 357+ 86E6
 358+ 86E6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 359+ 86E7
 360+ 86E7 00 00 00...  	ds 6											; Variables_de_borrado
 361+ 86ED
 362+ 86ED 00 00        	db 0,0											; Variables_de_pintado
 363+ 86EF 00 00        	defw 0											;	" " " " " " "
 364+ 86F1 00 00        	defw 0											;	" " " " " " "
 365+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 366+ 86F7
 367+ 86F7 00 00        	defw 0 											; Puntero_de_impresion.
 368+ 86F9
 369+ 86F9 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 370+ 86FB 00 00        	defw 0 											; Contador_de_mov_masticados
 371+ 86FD
 372+ 86FD 00           	db 0											; (Ctrl_0).
 373+ 86FE
 374+ 86FE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 374+ 8702 00 00
 375+ 8704 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 378+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 379+ 870A
 380+ 870A 00           	db 0 											; (Columnas).
 381+ 870B 00 00        	defw 0											; (Limite_horizontal).
 382+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 383+ 8710
 384+ 8710              ; ---------- ---------- ---------- ---------- ----------
 385+ 8710
 386+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 387+ 8712 00 00        	defw 0											; (Posicion_actual).
 388+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 389+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 390+ 8719
 391+ 8719 00           	db %00000000 									; (Attr).
 392+ 871A
 393+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 394+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 395+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 396+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 397+ 8722
 398+ 8722 00 00        	defw 0											; (Posicion_inicio).
 399+ 8724 00           	db 0											; (Cuad_objeto).
 400+ 8725
 401+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 402+ 8729
 403+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 404+ 872A
 405+ 872A 00 00 00...  	ds 6											; Variables_de_borrado
 406+ 8730
 407+ 8730 00 00        	db 0,0											; Variables_de_pintado
 408+ 8732 00 00        	defw 0											;	" " " " " " "
 409+ 8734 00 00        	defw 0											;	" " " " " " "
 410+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 411+ 873A
 412+ 873A 00 00        	defw 0 											; Puntero_de_impresion.
 413+ 873C
 414+ 873C D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 415+ 873E 00 00        	defw 0 											; Contador_de_mov_masticados
 416+ 8740
 417+ 8740 00           	db 0											; (Ctrl_0).
 418+ 8741
 419+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 419+ 8745 00 00
 420+ 8747 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 421+ 874A
 422+ 874A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 423+ 874C 00           	db 0											; (Cola_de_desplazamiento).
 424+ 874D
 425+ 874D 00           	db 0 											; (Columnas).
 426+ 874E 00 00        	defw 0											; (Limite_horizontal).
 427+ 8750 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 428+ 8753
 429+ 8753              ; ---------- ---------- ---------- ---------- ----------
 430+ 8753
 431+ 8753 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 432+ 8755 00 00        	defw 0											; (Posicion_actual).
 433+ 8757 00 00        	defw 0 											; (Puntero_objeto).
 434+ 8759 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 435+ 875C
 436+ 875C 00           	db %00000000 									; (Attr).
 437+ 875D
 438+ 875D 00 00        	defw 0											; (Indice_Sprite_der).
 439+ 875F 00 00        	defw 0											; (Indice_Sprite_izq).
 440+ 8761 00 00        	defw 0											; (Puntero_DESPLZ_der).
 441+ 8763 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 442+ 8765
 443+ 8765 00 00        	defw 0											; (Posicion_inicio).
 444+ 8767 00           	db 0											; (Cuad_objeto).
 445+ 8768
 446+ 8768 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 447+ 876C
 448+ 876C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 449+ 876D
 450+ 876D 00 00 00...  	ds 6											; Variables_de_borrado
 451+ 8773
 452+ 8773 00 00        	db 0,0											; Variables_de_pintado
 453+ 8775 00 00        	defw 0											;	" " " " " " "
 454+ 8777 00 00        	defw 0											;	" " " " " " "
 455+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 456+ 877D
 457+ 877D 00 00        	defw 0 											; Puntero_de_impresion.
 458+ 877F
 459+ 877F D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 460+ 8781 00 00        	defw 0 											; Contador_de_mov_masticados
 461+ 8783
 462+ 8783 00           	db 0											; (Ctrl_0).
 463+ 8784
 464+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 464+ 8788 00 00
 465+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 466+ 878D
 467+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 468+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 469+ 8790
 470+ 8790 00           	db 0 											; (Columnas).
 471+ 8791 00 00        	defw 0											; (Limite_horizontal).
 472+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 473+ 8796
 474+ 8796              ; -------------------------------------------------------------------------------------
 475+ 8796              ;
 476+ 8796              ;	20/05/23
 477+ 8796              ;
 478+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 479+ 8796              ;
 480+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 481+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 482+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 483+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 484+ 8796
 485+ 8796              Indice_de_entidades
 486+ 8796
 487+ 8796 9A 87        	defw Entidad_1
 488+ 8798 AB 87        	defw Entidad_2
 489+ 879A
 490+ 879A              ;	BADSAT, (Satélite malvado).
 491+ 879A
 492+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 493+ 879C 04           	db %00000100									; (Attr).
 494+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 495+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 496+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 497+ 87A3 01           	db 1											; (Cuad_objeto).
 498+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 499+ 87A8 C0 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 500+ 87AA 03           	db 3											; (Frames_explosion).
 501+ 87AB
 502+ 87AB
 503+ 87AB 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 504+ 87AD 02           	db %00000010									; (Attr).
 505+ 87AE A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 506+ 87B0 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 507+ 87B2 40 50        	defw $5040                                      ; (Posicion_inicio).
 508+ 87B4 01           	db 1											; (Cuad_objeto).
 509+ 87B5 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 510+ 87B9 C0 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 511+ 87BB 03           	db 3											; (Frames_explosion).
# file closed: Cajas_y_disparos.asm
 105  87BC              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BC              ; 13/05/23
   2+ 87BC
   3+ 87BC              Indice_de_niveles
   4+ 87BC
   5+ 87BC CA 87        	defw Nivel_1
   6+ 87BE CD 87        	defw Nivel_2
   7+ 87C0 DA 87        	defw Nivel_3
   8+ 87C2 EA 87        	defw Nivel_4
   9+ 87C4 FC 87        	defw Nivel_5
  10+ 87C6              ;	...
  11+ 87C6              ;	...
  12+ 87C6              ;	+ Niveles ...
  13+ 87C6
  14+ 87C6 00 00        	defw 0
  15+ 87C8 00 00        	defw 0
  16+ 87CA
  17+ 87CA 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87CB 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CD 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D2 01 02
  21+ 87D4 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D8 01 02
  22+ 87DA 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DB 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DF 01
  24+ 87E0 03 01 01 01  	db 3,1,1,1,1
  24+ 87E4 01
  25+ 87E5 03 01 01 01  	db 3,1,1,1,1
  25+ 87E9 01
  26+ 87EA 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EB 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EF 01
  28+ 87F0 04 01 01 01  	db 4,1,1,1,1
  28+ 87F4 01
  29+ 87F5 04 01 01 01  	db 4,1,1,1,1
  29+ 87F9 01
  30+ 87FA 02 03        	db 2,3
  31+ 87FC 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FD 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8801 01
  33+ 8802 05 01 01 01  	db 5,1,1,1,1
  33+ 8806 01
  34+ 8807 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880B 01
  35+ 880C 05 01 01 01  	db 5,1,1,1,1
  35+ 8810 01
  36+ 8811
  37+ 8811              ;---------------------------------------------------------------------------------------------------------------
  38+ 8811              ;
  39+ 8811              ;   5/1/24
  40+ 8811              ;
  41+ 8811              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8811              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8811              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8811              ;	_en la caja DRAW correspondiente.
  45+ 8811              ;
  46+ 8811              ;	MODIFICA: HL,DE y A.
  47+ 8811              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8811
  49+ 8811              Inicializa_Punteros_de_nivel
  50+ 8811
  51+ 8811 21 BC 87     	ld hl,Indice_de_niveles
  52+ 8814 22 48 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8817 CD 5A 8D     	call Extrae_address
  54+ 881A 7E           	ld a,(hl)
  55+ 881B 32 14 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881E 23           	inc hl
  57+ 881F 22 4A 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8822 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8823
  60+ 8823              ;---------------------------------------------------------------------------------------------------------------
  61+ 8823              ;
  62+ 8823              ;   5/1/24
  63+ 8823              ;
  64+ 8823              ;	Destruye A,BC,HL,DE
  65+ 8823
  66+ 8823              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES con un tipo de entidad.
  67+ 8823              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  68+ 8823
  69+ 8823              Prepara_cajas_de_entidades
  70+ 8823
  71+ 8823              ; Preparamos los punteros de las cajas de entidades:
  72+ 8823
  73+ 8823 21 6C 85     	ld hl,Indice_de_cajas_de_entidades
  74+ 8826 CD 5A 8D     	call Extrae_address
  75+ 8829 CD 66 88     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  76+ 882C              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  77+ 882C
  78+ 882C CD A9 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 882F
  80+ 882F 2A 4A 89     	ld hl,(Datos_de_nivel)
  81+ 8832
  82+ 8832              ; En este punto:
  83+ 8832              ;
  84+ 8832              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  85+ 8832              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  86+ 8832
  87+ 8832 C5           1 push bc 										; Guardo el nº de cajas a rellenar.
  88+ 8833
  89+ 8833 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  90+ 8834 CD 54 88     	call Calcula_salto_en_BC					; Calcula salto para situarnos en los "datos" de la entidad correcta del indice de entidades.
  91+ 8837
  92+ 8837 21 96 87     	ld hl,Indice_de_entidades
  93+ 883A CD 5C 88     	call Situa_en_datos_de_entidad				; Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
  94+ 883D              ;												; Actualiza (Datos_de_entidad) con esa dirección.
  95+ 883D
  96+ 883D CD 70 88     	call Datos_de_entidad_a_caja				; Vuelca los datos de la entidad en la caja.
  97+ 8840
  98+ 8840 2A 12 89     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
  99+ 8843 CD 5A 8D     	call Extrae_address
 100+ 8846 CD 66 88     	call Avanza_caja_de_entidades
 101+ 8849
 102+ 8849 2A 4A 89     	ld hl,(Datos_de_nivel)
 103+ 884C 23           	inc hl
 104+ 884D 22 4A 89     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 105+ 8850
 106+ 8850 C1           	pop bc
 107+ 8851 10 DF        	djnz 1B
 108+ 8853
 109+ 8853 C9           	ret
 110+ 8854
 111+ 8854              ;	------------------------------------------------------------------------------------
 112+ 8854              ;
 113+ 8854              ;	5/1/24
 114+ 8854              ;
 115+ 8854              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 116+ 8854              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 117+ 8854
 118+ 8854 CB 27        Calcula_salto_en_BC sla a
 119+ 8856 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 120+ 8858 4F           	ld c,a
 121+ 8859 06 00        	ld b,0
 122+ 885B C9           	ret
 123+ 885C
 124+ 885C              ; ------------------------------------------------------------------
 125+ 885C              ;
 126+ 885C              ;	5/1/24
 127+ 885C              ;
 128+ 885C              ;	Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
 129+ 885C              ;	Actualiza (Datos_de_entidad) con esa dirección.
 130+ 885C
 131+ 885C A7           Situa_en_datos_de_entidad and a
 132+ 885D ED 4A        	adc hl,bc
 133+ 885F CD 5A 8D     	call Extrae_address
 134+ 8862 22 1A 89         ld (Datos_de_entidad),hl
 135+ 8865 C9           	ret
 136+ 8866
 137+ 8866              ; ------------------------------------------------------------------
 138+ 8866
 139+ 8866 22 0E 89     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 140+ 8869 13           	inc de
 141+ 886A 13           	inc de
 142+ 886B EB           	ex de,hl
 143+ 886C 22 12 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 144+ 886F C9           	ret
 145+ 8870
 146+ 8870              ; ----------------------------------------------------------------------------------------------------------
 147+ 8870              ;
 148+ 8870              ;	5/1/24
 149+ 8870              ;
 150+ 8870              ;	Vuelca los .db significativos del tipo de entidad a la caja de entidades.
 151+ 8870
 152+ 8870              Datos_de_entidad_a_caja
 153+ 8870
 154+ 8870              ; En este punto:
 155+ 8870              ; HL apunta al 1er .db de DATOS de la entidad que tenemos que volcar en la caja DRAW.
 156+ 8870
 157+ 8870 ED 5B 0E 89  	ld de,(Puntero_store_caja) 					; DE apunta al 1er .db de la caja de entidades vacía.
 158+ 8874
 159+ 8874 01 02 00     	ld bc,2
 160+ 8877 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 161+ 8879              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 162+ 8879 01 07 00     	ld bc,7
 163+ 887C CD A3 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 164+ 887F
 165+ 887F 01 05 00     	ld bc,5
 166+ 8882 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 167+ 8884              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 168+ 8884 01 04 00     	ld bc,4
 169+ 8887 CD A3 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 170+ 888A
 171+ 888A 01 07 00     	ld bc,7
 172+ 888D ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 173+ 888F              ;												; HL, (origen), apunta ahora al .db (Puntero_indice_mov), hay que situar DE.
 174+ 888F
 175+ 888F 01 18 00     	ld bc,24
 176+ 8892 CD A3 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_indice_mov).
 177+ 8895
 178+ 8895 01 02 00     	ld bc,2
 179+ 8898 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 180+ 889A              ;												; HL, (origen), apunta ahora al .db (Frames_explosion), hay que situar DE.
 181+ 889A
 182+ 889A 01 0F 00     	ld bc,15
 183+ 889D CD A3 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 184+ 88A0
 185+ 88A0 7E           	ld a,(hl)
 186+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 187+ 88A2
 188+ 88A2 C9           	ret
 189+ 88A3
 190+ 88A3              ; ---------- -------------- ----------------
 191+ 88A3
 192+ 88A3 EB           Situa_DE ex de,hl
 193+ 88A4 A7           	and a
 194+ 88A5 ED 4A        	adc hl,bc
 195+ 88A7 EB           	ex de,hl
 196+ 88A8 C9           	ret
 197+ 88A9
 198+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 199+ 88A9              ;
 200+ 88A9              ;	5/1/24
 201+ 88A9              ;
 202+ 88A9              ;	INICIALIZA (Numero_parcial_de_entidades).
 203+ 88A9              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 204+ 88A9              ;
 205+ 88A9              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 206+ 88A9              ;
 207+ 88A9              ;	(Numero_parcial_de_entidades)="7".
 208+ 88A9              ;
 209+ 88A9              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 210+ 88A9              ;
 211+ 88A9              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 212+ 88A9              ;
 213+ 88A9              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 214+ 88A9              ;	MODIFICA: A y B.
 215+ 88A9              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 216+ 88A9
 217+ 88A9              Inicializa_Numero_parcial_de_entidades
 218+ 88A9
 219+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 220+ 88A9
 221+ 88A9 3A 14 89     	ld a,(Numero_de_entidades)
 222+ 88AC A7           	and a
 223+ 88AD
 224+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 225+ 88AD              ;	jr z,$
 226+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 227+ 88AD
 228+ 88AD 20 03        	jr nz,3F
 229+ 88AF
 230+ 88AF              ; ---------- ---------- ----------
 231+ 88AF
 232+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 233+ 88AF              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 234+ 88AF
 235+ 88AF CD 11 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 236+ 88B2
 237+ 88B2              ; ---------- ---------- ----------
 238+ 88B2
 239+ 88B2 3A 14 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 240+ 88B5 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 241+ 88B7 38 08        	jr c,1F
 242+ 88B9
 243+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 244+ 88B9              ; Actualizamos variables.
 245+ 88B9
 246+ 88B9 3E 07        	ld a,7
 247+ 88BB 32 15 89     	ld (Numero_parcial_de_entidades),a
 248+ 88BE 47           	ld b,a
 249+ 88BF 18 04        	jr 2F
 250+ 88C1
 251+ 88C1              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 252+ 88C1              ; (Numero_de_entidades)="0".
 253+ 88C1
 254+ 88C1 32 15 89     1 ld (Numero_parcial_de_entidades),a
 255+ 88C4 47           	ld b,a
 256+ 88C5 C9           2 ret
# file closed: Niveles.asm
 106  88C6
 107  88C6              ; ******************************************************************************************************************************************************************************************
 108  88C6              ; Constantes.
 109  88C6              ; ******************************************************************************************************************************************************************************************
 110  88C6              ;
 111  88C6              ; 25/12/23
 112  88C6
 113  88C6              ;
 114  88C6              ; Constantes.
 115  88C6              ;
 116  88C6
 117  88C6              Sprite_vacio equ $f000
 118  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  88C6
 123  88C6              Almacen_de_movimientos_masticados_Entidad_1 equ $5cd0	; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  88C6              ;														;! $6f95 es donde se guarda el último movimiento masticado de BADSAT.
 125  88C6              ;														; 4805 bytes, 4,8Kb.
 126  88C6              Almacen_de_movimientos_masticados_Amadeus equ $6fa0
 127  88C6
 128  88C6
 129  88C6
 130  88C6
 131  88C6              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 132  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 133  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 134  88C6              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 135  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 136  88C6
 137  88C6              ;														; 55 Bytes.
 138  88C6              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 139  88C6              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 140  88C6
 141  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 142  88C6
 143  88C6              ; ******************************************************************************************************************************************************************************************
 144  88C6              ; Variables.
 145  88C6              ; ******************************************************************************************************************************************************************************************
 146  88C6              ;
 147  88C6              ; 25/12//23
 148  88C6              ;
 149  88C6              ; Variables de DRAW. (Motor principal).
 150  88C6              ;
 151  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 152  88C6
 153  88C6 00           Filas db 0												; Filas. [DRAW]
 154  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 155  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 156  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 157  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  88CE
 160  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 161  88CE
 162  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 163  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 164  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 165  88CF 00           Attr db 0												; Atributos de la entidad:
 166  88D0
 167  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 168  88D0              ;
 169  88D0              ;	COLORES: 0 ..... NEGRO
 170  88D0              ;    		 1 ..... AZUL
 171  88D0              ; 			 2 ..... ROJO
 172  88D0              ;			 3 ..... MAGENTA
 173  88D0              ; 			 4 ..... VERDE
 174  88D0              ; 			 5 ..... CIAN
 175  88D0              ;			 6 ..... AMARILLO
 176  88D0              ; 			 7 ..... BLANCO
 177  88D0
 178  88D0 00 00        Indice_Sprite_der defw 0
 179  88D2 00 00        Indice_Sprite_izq defw 0
 180  88D4 00 00        Puntero_DESPLZ_der defw 0
 181  88D6 00 00        Puntero_DESPLZ_izq defw 0
 182  88D8
 183  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 184  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 185  88DB
 186  88DB              ; Variables de objeto. (Características).
 187  88DB
 188  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 189  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 190  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 191  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 192  88DF
 193  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 194  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 195  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 196  88E0 00 00 00...  Variables_de_borrado ds 6
 197  88E6
 198  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 199  88E8 00 00        	defw 0
 200  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 201  88EC 00 00 00 00  	db 0,0,0,0
 202  88F0
 203  88F0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 204  88F2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 205  88F2
 206  88F2 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
 207  88F4
 208  88F4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 209  88F4              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 210  88F4
 211  88F4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 212  88F6              ;														; _palabras que componen el "movimiento_masticado".
 213  88F6
 214  88F6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 215  88F6
 216  88F6 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  88F7              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  88F7              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  88F7              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  88F7              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  88F7              ;
 222  88F7              ; 														DESCRIPCIÖN:
 223  88F7              ;
 224  88F7              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  88F7              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  88F7              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  88F7              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  88F7              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  88F7              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  88F7              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  88F7              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  88F7              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  88F7              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  88F7              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  88F7              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  88F7              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  88F7              ;
 238  88F7              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  88F7              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  88F7              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  88F7
 242  88F7              ; Movimiento. ------------------------------------------------------------------------------------------------------
 243  88F7
 244  88F7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 245  88F9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 246  88FB 00 00        Puntero_indice_mov_bucle defw 0							;
 247  88FD              ;
 248  88FD              ;
 249  88FD 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 250  88FE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 251  88FE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 252  88FE 00           Incrementa_puntero_backup db 0
 253  88FF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 254  8900              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 255  8900 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 256  8901 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 257  8902 00           Cola_de_desplazamiento db 0								; Este byte indica:
 258  8903              ;
 259  8903              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 260  8903              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 261  8903              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 262  8903              ;
 263  8903              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 264  8903              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 265  8903              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 266  8903              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 267  8903              ;
 268  8903              ;														;	"$ff" ..... Bucle infinito de repetición.
 269  8903              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 270  8903              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 271  8903
 272  8903
 273  8903              ; Variables de funcionamiento. [DRAW].
 274  8903
 275  8903 00           Columnas db 0
 276  8904 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8906              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8906 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8907
 280  8907              ; variables de control general.
 281  8907
 282  8907 00           Ctrl_2 db 0
 283  8908              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 284  8908              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 285  8908              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 286  8908              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 287  8908              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 288  8908              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 289  8908              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 290  8908              ;
 291  8908              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 292  8908              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 293  8908              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 294  8908              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 295  8908              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 296  8908              ;														BIT 4, ???
 297  8908              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 298  8908
 299  8908 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 300  8909
 301  8909              ;! 67 Bytes por entidad.
 302  8909
 303  8909              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 304  8909              ;					         		---------;      ;---------
 305  8909
 306  8909
 307  8909              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 308  8909
 309  8909 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 310  890B
 311  890B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 312  890C
 313  890C              ;														DESCRIPCIÓN:
 314  890C              ;
 315  890C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 316  890C              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 317  890C              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 318  890C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 319  890C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 320  890C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 321  890C
 322  890C              ;														BIT 3, Recarga de nueva oleada.
 323  890C              ;														BIT 4, Recarga de nueva oleada.
 324  890C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 325  890C              ;														BIT 6, **** Frame completo.
 326  890C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 327  890C
 328  890C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 329  890E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 330  890E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 331  890E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 332  890E
 333  890E              ; Gestión de ENTIDADES y CAJAS.
 334  890E
 335  890E 00 00        Puntero_store_caja defw 0
 336  8910 00 00        Puntero_restore_caja defw 0
 337  8912 00 00        Indice_restore_caja defw 0
 338  8914 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 339  8915 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 340  8916 00           Entidades_en_curso db 0									; ..... ..... .....
 341  8917 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 342  8918              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 343  8918              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 344  8918              ;														; _ (Numero_de_malotes)="0".
 345  8918 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 346  891A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 347  891C              ;														; _ puntero (Indice_entidades).
 348  891C
 349  891C              ;---------------------------------------------------------------------------------------------------------------
 350  891C              ;
 351  891C              ;	18/11/23
 352  891C              ;
 353  891C              ;	Álbumes.
 354  891C
 355  891C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 356  891E              ;														; _variable para almacenar lo posición del puntero_
 357  891E              ; 														; _de pila, SP.
 358  891E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 359  8920              ;														; La utiliza la rutina [Extrae_foto_registros].
 360  8920 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 361  8922 00 70        Stack_snapshot defw Album_de_fotos
 362  8924 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 363  8926
 364  8926              ;End_Snapshot defw Album_de_fotos
 365  8926              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 366  8926 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 367  8928              ;														; _el snapshot de los registros del siguiente disparo.
 368  8928              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 369  8928 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 370  892A
 371  892A 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 372  892B              ;
 373  892B              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 374  892B              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 375  892B              ;															BIT 2, "1" Indica que el {Almacen_de_movimientos_masticados_Entidad_1} está completo. Cuando esto ocurre_
 376  892B              ;																_ no se inicia una nueva "Entidad_guía".
 377  892B              ; Gestión de Disparos.
 378  892B
 379  892B 00           Numero_de_disparotes db 0
 380  892C 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 381  892E 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 382  8930 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 383  8931              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 384  8931              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 385  8931 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 386  8933              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 387  8933              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 388  8933              ;														; _produzca colisión.
 389  8933 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 390  8935              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 391  8935 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 392  8938              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 393  8938 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 394  893B              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 395  893B 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 396  893C
 397  893C              ;---------------------------------------------------------------------------------------------------------------
 398  893C
 399  893C              ; Relojes y temporizaciones.
 400  893C
 401  893C 00           Contador_de_frames db 0
 402  893D 00           Contador_de_frames_2 db 0
 403  893E
 404  893E 04           Clock_explosion db 4
 405  893F 14           Clock_Entidades_en_curso db 20
 406  8940 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 407  8941              ;														; Repite la oleada de entidades.
 408  8941 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 409  8942 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 410  8943 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 411  8944
 412  8944 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 413  8945 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 414  8946 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 415  8947
 416  8947              ;---------------------------------------------------------------------------------------------------------------
 417  8947
 418  8947              ; Gestión de NIVELES.
 419  8947
 420  8947 00           Nivel db 0												; Nivel actual del juego.
 421  8948 00 00        Puntero_indice_NIVELES defw 0
 422  894A 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 423  894C              ; 														; _ que definen el NIVEL.
 424  894C              ; Y todo comienza aquí .....
 425  894C              ;
 426  894C              ; 	INICIO  *************************************************************************************************************************************************************************
 427  894C              ;
 428  894C              ;	5/1/24
 429  894C
 430  894C              START
 431  894C
 432  894C 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 433  894F 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 434  8951 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 435  8953 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 436  8955 F3           	DI
 437  8956
 438  8956 3E 07        	ld a,%00000111
 439  8958 CD E3 99     	call Cls
 440  895B
 441  895B CD 37 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 442  895E
 443  895E              ; INICIALIZACIÓN.
 444  895E
 445  895E CD 11 88     	call Inicializa_Punteros_de_nivel					 ; Prepara el 1er Nivel del juego.
 446  8961              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 447  8961              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 448  8961              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 449  8961 CD 23 88     4 call Prepara_cajas_de_entidades
 450  8964
 451  8964
 452  8964 CD C2 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 453  8967              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 454  8967 CD E7 8D     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 455  896A
 456  896A 21 15 89     	ld hl,Numero_parcial_de_entidades
 457  896D 46           	ld b,(hl)
 458  896E 04           	inc b
 459  896F 05           	dec b
 460  8970 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 461  8972
 462  8972              ;	INICIA ENTIDADES !!!!!
 463  8972
 464  8972 C5           1 push bc  												; Guardo el contador de entidades.
 465  8973 CD 95 8B     	call Inicia_entidad
 466  8976 C1           	pop bc
 467  8977 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 468  8979
 469  8979              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 470  8979              ; (Esto se dá cuando se inicia una nueva oleada).
 471  8979
 472  8979 3A 0B 89     	ld a,(Ctrl_1)
 473  897C CB 5F        	bit 3,a
 474  897E 20 1B        	jr nz,5F											; Loop
 475  8980
 476  8980              ; 	INICIA AMADEUS !!!!!
 477  8980
 478  8980 CD 0E 8E     3 call Restore_Amadeus
 479  8983 CD 60 8D     	call Inicia_Puntero_objeto
 480  8986 CD D6 93     	call Draw
 481  8989 CD 16 71     	call Guarda_foto_registros
 482  898C CD 8B 8E     	call Guarda_datos_de_borrado_Amadeus
 483  898F
 484  898F 11 7E 85     	ld de,Amadeus_db
 485  8992 CD 20 8E     	call Store_Amadeus
 486  8995
 487  8995              ; 	INICIA DISPAROS !!!!!
 488  8995
 489  8995 CD D8 8C     	call Inicia_Puntero_Disparo_Entidades
 490  8998 CD DF 8C     	call Inicia_Puntero_Disparo_Amadeus
 491  899B
 492  899B              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 493  899B
 494  899B CD C2 8C     5 call Inicia_punteros_de_cajas
 495  899E CD E7 8D     	call Restore_entidad
 496  89A1
 497  89A1 3A 0B 89     	ld a,(Ctrl_1)
 498  89A4 CB 5F        	bit 3,a
 499  89A6 28 07        	jr z,6F
 500  89A8
 501  89A8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 502  89A8
 503  89A8 21 0B 89     	ld hl,Ctrl_1
 504  89AB CB 9E        	res 3,(hl)
 505  89AD 18 07        	jr Main
 506  89AF
 507  89AF              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 508  89AF
 509  89AF 21 2A 89     6 ld hl,Ctrl_3
 510  89B2 CB C6        	set 0,(hl)											; Frame completo.
 511  89B4 FB           	ei
 512  89B5 76           	halt
 513  89B6
 514  89B6              ; ------------------------------------
 515  89B6
 516  89B6              Main
 517  89B6              ;
 518  89B6              ;	11/12/23
 519  89B6
 520  89B6              ; Aparece nueva entidad ???
 521  89B6
 522  89B6              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 523  89B6              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 524  89B6              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 525  89B6              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 526  89B6              ;														; _un 2º bloque.
 527  89B6
 528  89B6 3E 01        	ld a,1
 529  89B8 D3 FE        	out ($fe),a
 530  89BA
 531  89BA 3A 3F 89     	ld a,(Clock_Entidades_en_curso)
 532  89BD 47           	ld b,a
 533  89BE 3A 3C 89     	ld a,(Contador_de_frames)
 534  89C1 B8           	cp b
 535  89C2 20 18        	jr nz,13F
 536  89C4
 537  89C4              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 538  89C4              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 539  89C4
 540  89C4 3A 15 89     21 ld a,(Numero_parcial_de_entidades)
 541  89C7 47           	ld b,a
 542  89C8 3A 16 89     	ld a,(Entidades_en_curso)
 543  89CB B8           	cp b
 544  89CC 28 0E        	jr z,13F
 545  89CE 30 0C        	jr nc,13F
 546  89D0
 547  89D0 3C           	inc a
 548  89D1 32 16 89     	ld (Entidades_en_curso),a
 549  89D4
 550  89D4              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 551  89D4
 552  89D4 3A 3F 89     	ld a,(Clock_Entidades_en_curso)
 553  89D7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 554  89D7              ;! _ IMPREDECIBLE !!!!
 555  89D7 C6 64        	add 100
 556  89D9 32 3F 89     	ld (Clock_Entidades_en_curso),a
 557  89DC
 558  89DC              ; -------------------------------------------------------------------------------------------------------------
 559  89DC
 560  89DC              ; Habilita disparos.
 561  89DC
 562  89DC 21 41 89     13 ld hl,Disparo_Amadeus
 563  89DF 11 43 89     	ld de,CLOCK_repone_disparo_Amadeus
 564  89E2 CD B1 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 565  89E5
 566  89E5 21 44 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 567  89E8 11 46 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 568  89EB CD B1 9D     	call Habilita_disparos
 569  89EE
 570  89EE              ; COLISIONES.
 571  89EE
 572  89EE CD D6 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 573  89F1
 574  89F1              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 575  89F1              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 576  89F1              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 577  89F1
 578  89F1 AF           	xor a
 579  89F2 32 30 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 580  89F5
 581  89F5 CD C2 8C     	call Inicia_punteros_de_cajas
 582  89F8 CD E7 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 583  89FB              ; 														; _ en DRAW.
 584  89FB 3A C6 88     	ld a,(Filas)
 585  89FE A7           	and a
 586  89FF 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 587  8A01 CD F9 8D     	call Incrementa_punteros_de_cajas
 588  8A04 18 F2        	jr 12B
 589  8A06
 590  8A06              ; ---------------------------------------------------------------------------------------
 591  8A06
 592  8A06 3A 15 89     10 ld a,(Numero_parcial_de_entidades)
 593  8A09 47               ld b,a
 594  8A0A A7           	and a
 595  8A0B 20 14        	jr nz,11F
 596  8A0D
 597  8A0D 21 0B 89     	ld hl,Ctrl_1
 598  8A10 CB 66        	bit 4,(hl)
 599  8A12 C2 BA 8A     	jp nz,16F
 600  8A15
 601  8A15              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 602  8A15
 603  8A15 21 0B 89     	ld hl,Ctrl_1
 604  8A18 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 605  8A1A
 606  8A1A 3A 3C 89     	ld a,(Contador_de_frames)
 607  8A1D 3C           	inc a
 608  8A1E 32 40 89     	ld (Activa_recarga_cajas),a
 609  8A21
 610  8A21              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 611  8A21
 612  8A21 3A 16 89     11 ld a,(Entidades_en_curso)
 613  8A24 A7           	and a
 614  8A25 CA BA 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 615  8A28 47           	ld b,a												; No hay entidades que gestionar.
 616  8A29
 617  8A29              ; ( Código que ejecutamos con cada entidad: ).
 618  8A29
 619  8A29              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 620  8A29
 621  8A29 C5           15 push bc 												; Nº de entidades en curso.
 622  8A2A
 623  8A2A              ; Existe "Entidad_guía" ???.
 624  8A2A              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 625  8A2A
 626  8A2A 3A 2A 89     	ld a,(Ctrl_3)
 627  8A2D CB 4F        	bit 1,a
 628  8A2F 20 11        	jr nz,22F
 629  8A31
 630  8A31              ; Almacén de "Movimientos_masticados" lleno ???
 631  8A31              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 632  8A31              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 633  8A31
 634  8A31 3A 2A 89     	ld a,(Ctrl_3)
 635  8A34 CB 5F        	bit 3,a
 636  8A36 20 0A        	jr nz,22F
 637  8A38
 638  8A38              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 639  8A38
 640  8A38 21 07 89     	ld hl,Ctrl_2
 641  8A3B CB EE        	set 5,(hl)
 642  8A3D 21 2A 89     	ld hl,Ctrl_3
 643  8A40 CB CE        	set 1,(hl)
 644  8A42
 645  8A42              ; Impacto ???
 646  8A42
 647  8A42 3A DF 88     22 ld a,(Impacto)
 648  8A45 A7           	and a
 649  8A46 28 31        	jr z,8F
 650  8A48
 651  8A48              ; Hay Impacto en esta entidad.
 652  8A48
 653  8A48 21 3E 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 654  8A4B 35           	dec (hl)
 655  8A4C C2 AD 8A     	jp nz,17F
 656  8A4F
 657  8A4F              ;! Velocidad de la animación de la explosión.
 658  8A4F
 659  8A4F 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 660  8A51              ;														; _,(velocidad de la explosión).
 661  8A51              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 662  8A51
 663  8A51 CD AB 8E     	call Repone_datos_de_borrado
 664  8A54 CD 00 8D     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 665  8A57
 666  8A57              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 667  8A57
 668  8A57 3A 07 89     	ld a,(Ctrl_2)
 669  8A5A CB 4F        	bit 1,a
 670  8A5C 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 671  8A5E
 672  8A5E              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 673  8A5E
 674  8A5E 3A CE 88     	ld a,(CTRL_DESPLZ)
 675  8A61 A7           	and a
 676  8A62 20 08        	jr nz,18F
 677  8A64
 678  8A64 21 84 84     	ld hl,Indice_Explosion_2x2-2
 679  8A67 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 680  8A6A 18 06        	jr 19F
 681  8A6C
 682  8A6C 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 683  8A6F 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 684  8A72
 685  8A72 21 07 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 686  8A75 CB CE        	set 1,(hl)
 687  8A77 18 22        	jr 7F
 688  8A79
 689  8A79              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 690  8A79              ; _con las coordenadas de la entidad almacenada en DRAW.
 691  8A79
 692  8A79 3A 0B 89     8 ld a,(Ctrl_1)
 693  8A7C CB 57        	bit 2,a
 694  8A7E 28 1B        	jr z,7F
 695  8A80
 696  8A80 2A 33 89     	ld hl,(Coordenadas_disparo_certero)
 697  8A83 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 698  8A84              ;														; E contiene la coordenada_X del disparo.
 699  8A84 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 700  8A87              ;														; H FILA, (Coordenada_y de la entidad).
 701  8A87 A7           	and a
 702  8A88 ED 52        	sbc hl,de
 703  8A8A
 704  8A8A CD EF 92     	call Determina_resultado_comparativa
 705  8A8D
 706  8A8D 78           	ld a,b
 707  8A8E A7           	and a
 708  8A8F 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 709  8A91
 710  8A91              ; ----- ----- -----
 711  8A91
 712  8A91 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 713  8A93 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 714  8A96
 715  8A96 21 0B 89     	ld hl,Ctrl_1
 716  8A99 CB 96        	res 2,(hl)
 717  8A9B
 718  8A9B CD 0B 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 719  8A9E
 720  8A9E 3A F6 88     	ld a,(Ctrl_0)
 721  8AA1 CB 67        	bit 4,a
 722  8AA3 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 723  8AA5
 724  8AA5              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 725  8AA5              ; [[[
 726  8AA5              ;	call Detecta_disparo_entidad
 727  8AA5              ; ]]]
 728  8AA5
 729  8AA5 CD 22 8C     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 730  8AA8
 731  8AA8 21 F6 88     	ld hl,Ctrl_0
 732  8AAB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 733  8AAD
 734  8AAD CD A8 8D     17 call Store_Restore_cajas
 735  8AB0
 736  8AB0 C1           	pop bc
 737  8AB1
 738  8AB1 05           	dec b
 739  8AB2 C2 29 8A     	jp nz,15B
 740  8AB5
 741  8AB5              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 742  8AB5              ; Hemos gestionado todas las unidades.
 743  8AB5              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 744  8AB5
 745  8AB5 21 0B 89     	ld hl,Ctrl_1
 746  8AB8 CB 96        	res 2,(hl)
 747  8ABA
 748  8ABA 21 2A 89     16 ld hl,Ctrl_3
 749  8ABD CB C6        	set 0,(hl)											; Frame completo.
 750  8ABF
 751  8ABF AF           	xor a
 752  8AC0 D3 FE        	out ($fe),a
 753  8AC2
 754  8AC2 FB           	ei
 755  8AC3 76           	halt
 756  8AC4
 757  8AC4              ; ----------------------------------------
 758  8AC4
 759  8AC4 3A 0B 89     	ld a,(Ctrl_1) 										; Existe Loop?
 760  8AC7 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 761  8AC9 CA B6 89     	jp z,Main
 762  8ACC
 763  8ACC              ; RECARGA DE NUEVA OLEADA.
 764  8ACC
 765  8ACC 3A 3C 89     	ld a,(Contador_de_frames)
 766  8ACF 47           	ld b,a
 767  8AD0 3A 40 89     	ld a,(Activa_recarga_cajas)
 768  8AD3 B8           	cp b
 769  8AD4 28 08        	jr z,20F
 770  8AD6
 771  8AD6 21 0B 89     	ld hl,Ctrl_1
 772  8AD9 CB E6        	set 4,(hl)
 773  8ADB C3 B6 89     	jp Main
 774  8ADE
 775  8ADE 21 0B 89     20 ld hl,Ctrl_1
 776  8AE1 CB A6        	res 4,(hl)
 777  8AE3
 778  8AE3 3A 3C 89     	ld a,(Contador_de_frames)
 779  8AE6
 780  8AE6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 781  8AE6              ;! _ IMPREDECIBLE !!!!
 782  8AE6
 783  8AE6 C6 0A        	add 10
 784  8AE8 32 3F 89     	ld (Clock_Entidades_en_curso),a
 785  8AEB
 786  8AEB C3 61 89     	jp 4B
 787  8AEE
 788  8AEE C9           	ret
 789  8AEF
 790  8AEF              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 791  8AEF              ;
 792  8AEF              ;	16/11/23
 793  8AEF
 794  8AEF              Gestiona_Amadeus
 795  8AEF
 796  8AEF              ;! Activa/desactiva impacto con Amadeus.
 797  8AEF
 798  8AEF              ;	ld a,(Impacto)
 799  8AEF              ;	and a
 800  8AEF              ;	jr nz,2F
 801  8AEF
 802  8AEF CD 82 8B     	call Mov_Amadeus
 803  8AF2
 804  8AF2 3A F6 88     2 ld a,(Ctrl_0)
 805  8AF5 CB 67        	bit 4,a
 806  8AF7 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 807  8AF9
 808  8AF9 CD 22 8C     	call Guarda_foto_entidad_a_pintar
 809  8AFC CD 8B 8E     	call Guarda_datos_de_borrado_Amadeus
 810  8AFF
 811  8AFF 21 F6 88     1 ld hl,Ctrl_0
 812  8B02 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 813  8B04
 814  8B04 CD 7A 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 815  8B07
 816  8B07              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 817  8B07
 818  8B07 CD 42 8D     	call Calcula_numero_de_disparotes
 819  8B0A
 820  8B0A C9           	ret
 821  8B0B
 822  8B0B              ; --------------------------------------------------------------------------------------------------------------
 823  8B0B              ;
 824  8B0B              ;	15/12/23
 825  8B0B
 826  8B0B              Mov_obj
 827  8B0B
 828  8B0B 3A 07 89     	ld a,(Ctrl_2)
 829  8B0E CB 4F        	bit 1,a
 830  8B10 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 831  8B12
 832  8B12              ; Explosión:
 833  8B12
 834  8B12 3A 08 89     	ld a,(Frames_explosion)
 835  8B15 A7           	and a
 836  8B16 20 1D        	jr nz,4F
 837  8B18
 838  8B18              ;!  Una alimaña menos!!!!!!!!!1
 839  8B18
 840  8B18              ; Se trataba de una Entidad_guía ???
 841  8B18
 842  8B18 3A 07 89     	ld a,(Ctrl_2)
 843  8B1B CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 844  8B1D 28 05        	jr z,5F
 845  8B1F
 846  8B1F 21 2A 89     	ld hl,Ctrl_3
 847  8B22 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 848  8B24
 849  8B24              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 850  8B24              ;!! _generado puede ser distinto, (aletoriedad).
 851  8B24
 852  8B24 CD 29 8E     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 853  8B27 21 15 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 854  8B2A 35           	dec (hl)
 855  8B2B 21 16 89     	ld hl,Entidades_en_curso
 856  8B2E 35           	dec (hl)
 857  8B2F 21 14 89     	ld hl,Numero_de_entidades
 858  8B32 35           	dec (hl)
 859  8B33 18 4C        	jr 3F
 860  8B35
 861  8B35              ; -----
 862  8B35
 863  8B35              ;	`Movemos´ la explosión.
 864  8B35
 865  8B35 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 866  8B38 23           	inc hl
 867  8B39 23           	inc hl
 868  8B3A 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 869  8B3D CD 5A 8D     	call Extrae_address
 870  8B40 22 CA 88     	ld (Puntero_objeto),hl
 871  8B43
 872  8B43 21 08 89     	ld hl,Frames_explosion
 873  8B46 35           	dec (hl)
 874  8B47
 875  8B47 21 F6 88     	ld hl,Ctrl_0
 876  8B4A CB E6        	set 4,(hl)
 877  8B4C
 878  8B4C 18 33        	jr 3F
 879  8B4E
 880  8B4E              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 881  8B4E
 882  8B4E AF           2 xor a
 883  8B4F 32 F6 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 884  8B52
 885  8B52              ; Movemos Entidades malignas.
 886  8B52              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 887  8B52
 888  8B52 3A 07 89     	ld a,(Ctrl_2)
 889  8B55 CB 6F        	bit 5,a
 890  8B57 20 07        	jr nz,8F
 891  8B59
 892  8B59 21 F6 88     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 893  8B5C CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 894  8B5E 18 09        	jr 7F
 895  8B60
 896  8B60 CD 5C 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 897  8B63
 898  8B63 3A F6 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 899  8B66 CB 67        	bit 4,a
 900  8B68 C8           	ret z
 901  8B69
 902  8B69              ; Ha habido desplazamiento de la entidad maligna.
 903  8B69              ; Ha llegado a zona de AMADEUS ???
 904  8B69
 905  8B69 3A CD 88     7 ld a,(Coordenada_y)
 906  8B6C FE 14        	cp $14
 907  8B6E 38 08        	jr c,1F
 908  8B70
 909  8B70              ; ---------
 910  8B70
 911  8B70              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 912  8B70              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 913  8B70
 914  8B70 F3           	di
 915  8B71 CD 9F 90     	call Genera_coordenadas_X
 916  8B74 CD DB 90     	call Compara_coordenadas_X
 917  8B77 FB           	ei
 918  8B78
 919  8B78              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 920  8B78
 921  8B78              ; ---------
 922  8B78
 923  8B78 CD AA 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 924  8B7B CD AB 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 925  8B7E CD 00 8D     	call Limpia_Variables_de_borrado
 926  8B81
 927  8B81 C9           3 ret
 928  8B82
 929  8B82              ; --------------------------------------------------------------------------------------------------------------
 930  8B82              ;
 931  8B82              ;	29/1/23
 932  8B82
 933  8B82              Mov_Amadeus
 934  8B82
 935  8B82 CD 4B 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 936  8B85
 937  8B85 3A F6 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 938  8B88 CB 67        	bit 4,a
 939  8B8A C8           	ret z
 940  8B8B
 941  8B8B              ; ---------
 942  8B8B
 943  8B8B CD AA 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 944  8B8E CD 9B 8E     	call Repone_datos_de_borrado_Amadeus
 945  8B91 CD 00 8D     	call Limpia_Variables_de_borrado
 946  8B94
 947  8B94 C9           	ret
 948  8B95
 949  8B95              ; -----------------------------------------------------------------------------------
 950  8B95              ;
 951  8B95              ;	12/12/23
 952  8B95              ;
 953  8B95              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 954  8B95
 955  8B95              Inicia_entidad
 956  8B95
 957  8B95 CD F4 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 958  8B98 CD 60 8D     	call Inicia_Puntero_objeto
 959  8B9B CD F7 99     	call Recompone_posicion_inicio
 960  8B9E CD D6 93     	call Draw
 961  8BA1 CD AC 8B     	call Guarda_movimiento_masticado
 962  8BA4 CD 16 71     	call Guarda_foto_registros
 963  8BA7 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 964  8BA8              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 965  8BA8              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 966  8BA8 CD A8 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 967  8BAB C9           	ret
 968  8BAC
 969  8BAC              ; -----------------------------------------------------------------------------------
 970  8BAC              ;
 971  8BAC              ;	28/12/23
 972  8BAC              ;
 973  8BAC              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados_Entidad_1} si se trata de una "entidad_guía".
 974  8BAC              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
 975  8BAC
 976  8BAC 3A 07 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 977  8BAF CB 6F        	bit 5,a
 978  8BB1 C8           	ret z 													; Salimos si NO se trata de una entidad guía.
 979  8BB2
 980  8BB2 ED 73 1C 89  	ld (Stack),sp
 981  8BB6 ED 7B F2 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
 982  8BBA
 983  8BBA E5           	push hl
 984  8BBB DD E5            push ix
 985  8BBD FD E5            push iy
 986  8BBF
 987  8BBF ED 7B 1C 89      ld sp,(Stack)
 988  8BC3
 989  8BC3 E5               push hl
 990  8BC4
 991  8BC4 2A F4 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
 992  8BC7 23           	inc hl
 993  8BC8 22 F4 88     	ld (Contador_de_mov_masticados),hl
 994  8BCB
 995  8BCB 22 09 89     	ld (Contador_general_de_mov_masticados_Entidad_1),hl	; Cuando la entidad pase de guía a fantasma, el "contador general" indicará el nº máximo de movimientos masticados creados.
 996  8BCE
 997  8BCE E1           	pop hl
 998  8BCF
 999  8BCF CD 0B 8C         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1000  8BD2              ;															; _ el (Contador_de_mov_masticados).
1001  8BD2 C9               ret
1002  8BD3
1003  8BD3              ; -----------------------------------------------------------------------------------
1004  8BD3              ;
1005  8BD3              ;	9/1/24
1006  8BD3              ;
1007  8BD3              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados_Amadeus}.
1008  8BD3              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1009  8BD3
1010  8BD3              Guarda_movimiento_masticado_Amadeus
1011  8BD3
1012  8BD3 ED 73 1C 89  	ld (Stack),sp
1013  8BD7 ED 7B F2 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1014  8BDB
1015  8BDB E5           	push hl
1016  8BDC DD E5            push ix
1017  8BDE FD E5            push iy
1018  8BE0
1019  8BE0 ED 7B 1C 89      ld sp,(Stack)
1020  8BE4
1021  8BE4 E5               push hl
1022  8BE5
1023  8BE5 2A F4 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1024  8BE8 23           	inc hl
1025  8BE9 22 F4 88     	ld (Contador_de_mov_masticados),hl
1026  8BEC
1027  8BEC 22 09 89     	ld (Contador_general_de_mov_masticados_Entidad_1),hl	; Cuando la entidad pase de guía a fantasma, el "contador general" indicará el nº máximo de movimientos masticados creados.
1028  8BEF
1029  8BEF E1           	pop hl
1030  8BF0
1031  8BF0 CD 0B 8C         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1032  8BF3              ;															; _ el (Contador_de_mov_masticados).
1033  8BF3 C9               ret
1034  8BF4
1035  8BF4              ; --------------------------------------------------------------------------------------------------------------
1036  8BF4              ;
1037  8BF4              ;	12/12/23
1038  8BF4              ;
1039  8BF4
1040  8BF4              Inicia_entidad_guia
1041  8BF4
1042  8BF4              ; Existe "Entidad_guía" ???
1043  8BF4
1044  8BF4 3A 2A 89     	ld a,(Ctrl_3)
1045  8BF7 CB 4F        	bit 1,a
1046  8BF9 C0           	ret nz
1047  8BFA
1048  8BFA              ; Inicia Entidad_guía:
1049  8BFA
1050  8BFA 21 07 89     	ld hl,Ctrl_2
1051  8BFD CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1052  8BFF 21 2A 89     	ld hl,Ctrl_3
1053  8C02 CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1054  8C04
1055  8C04 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1+6
1056  8C07 22 F2 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1057  8C0A
1058  8C0A C9           	ret
1059  8C0B
1060  8C0B              ; --------------------------------------------------------------------------------------------------------------
1061  8C0B              ;
1062  8C0B              ;	21/12/23
1063  8C0B              ;
1064  8C0B
1065  8C0B              Actualiza_Puntero_de_almacen_de_mov_masticados
1066  8C0B
1067  8C0B              ;	Entidad_guía ???
1068  8C0B
1069  8C0B 3A 07 89     	ld a,(Ctrl_2)
1070  8C0E CB 6F        	bit 5,a
1071  8C10 C8           	ret z												; Salimos si NO se trata de una entidad guía.
1072  8C11
1073  8C11 E5           	push hl
1074  8C12 C5           	push bc
1075  8C13
1076  8C13 2A F2 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1077  8C16 01 06 00     	ld bc,6
1078  8C19 A7           	and a
1079  8C1A ED 4A        	adc hl,bc
1080  8C1C 22 F2 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1081  8C1F
1082  8C1F C1           	pop bc
1083  8C20 E1           	pop hl
1084  8C21
1085  8C21 C9           	ret
1086  8C22
1087  8C22              ; --------------------------------------------------------------------------------------------------------------
1088  8C22              ;
1089  8C22              ;	28/12/23
1090  8C22              ;
1091  8C22              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1092  8C22              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1093  8C22
1094  8C22              Guarda_foto_entidad_a_pintar
1095  8C22
1096  8C22 3A F6 88     	ld a,(Ctrl_0)
1097  8C25 CB 77        	bit 6,a
1098  8C27 28 07        	jr z,5F
1099  8C29
1100  8C29              ; Guarda la foto de Amadeus.
1101  8C29
1102  8C29 CD D6 93     	call Draw
1103  8C2C CD 16 71     	call Guarda_foto_registros
1104  8C2F C9           	ret
1105  8C30
1106  8C30              ; ENTIDADES!
1107  8C30              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1108  8C30
1109  8C30 3A 2A 89     5 ld a,(Ctrl_3)
1110  8C33 CB 5F        	bit 3,a
1111  8C35 28 04        	jr z,1F
1112  8C37
1113  8C37              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1114  8C37
1115  8C37 CD 7E 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1116  8C3A C9           	ret
1117  8C3B
1118  8C3B              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1119  8C3B
1120  8C3B 3A 2A 89     1 ld a,(Ctrl_3)
1121  8C3E CB 57        	bit 2,a
1122  8C40 20 10        	jr nz,6F
1123  8C42
1124  8C42              ; Entidad guía o fantasma ???
1125  8C42
1126  8C42 3A 07 89     	ld a,(Ctrl_2)
1127  8C45 CB 6F        	bit 5,a
1128  8C47 20 10        	jr nz,3F
1129  8C49
1130  8C49              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1131  8C49
1132  8C49 18 EC        	jr 4B
1133  8C4B
1134  8C4B              ; ENTIDAD_GUÍA:
1135  8C4B              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1136  8C4B              ; _guardando "movimientos_masticados".
1137  8C4B
1138  8C4B 3A 2A 89     2 ld a,(Ctrl_3)
1139  8C4E CB 57        	bit 2,a
1140  8C50 28 07        	jr z,3F
1141  8C52
1142  8C52              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1143  8C52              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1144  8C52
1145  8C52 CB 97        6 res 2,a
1146  8C54 CB DF        	set 3,a
1147  8C56 32 2A 89     	ld (Ctrl_3),a
1148  8C59
1149  8C59
1150  8C59              ;	Esto sólo lo ejecuta una entidad guía.
1151  8C59
1152  8C59 CD D6 93     3 	call Draw
1153  8C5C CD AC 8B     	call Guarda_movimiento_masticado
1154  8C5F CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1155  8C62
1156  8C62              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1157  8C62              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1158  8C62
1159  8C62 CD 66 8C     	call Convierte_guia_en_fantasma
1160  8C65 C9           	ret
1161  8C66
1162  8C66              ; --------------------------------------------------------------------------------------------------------------
1163  8C66              ;
1164  8C66              ;	28/12/23
1165  8C66              ;
1166  8C66
1167  8C66 3A 2A 89     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1168  8C69 CB 5F        	bit 3,a
1169  8C6B C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1170  8C6C
1171  8C6C              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1172  8C6C
1173  8C6C 21 07 89     	ld hl,Ctrl_2
1174  8C6F CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1175  8C71
1176  8C71              ;	Reinicializamos el (Puntero_de_almacen_de_mov_masticados).
1177  8C71
1178  8C71 21 D0 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
1179  8C74 22 F2 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1180  8C77
1181  8C77              ;	Reinicializamos el (Contador_de_mov_masticados).
1182  8C77
1183  8C77 21 00 00     	ld hl,0
1184  8C7A 22 F4 88     	ld (Contador_de_mov_masticados),hl
1185  8C7D
1186  8C7D C9           	ret
1187  8C7E
1188  8C7E              ; --------------------------------------------------------------------------------------------------------------
1189  8C7E              ;
1190  8C7E              ;	21/12/23
1191  8C7E              ;
1192  8C7E              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1193  8C7E              ;
1194  8C7E              ;		IY contiene (Puntero_objeto).
1195  8C7E              ;		IX contiene el puntero de impresión.
1196  8C7E              ;		HL contiene la dirección de la rutina de impresión.
1197  8C7E              ;
1198  8C7E              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1199  8C7E              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1200  8C7E              ;	Decrementa el (Contador_de_mov_masticados)
1201  8C7E              ;
1202  8C7E              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1203  8C7E              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1204  8C7E              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1205  8C7E
1206  8C7E
1207  8C7E ED 73 1C 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1208  8C82 ED 7B F2 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1209  8C86
1210  8C86 FD E1        	pop iy
1211  8C88 DD E1        	pop ix
1212  8C8A E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1213  8C8B
1214  8C8B ED 73 F2 88  	ld (Puntero_de_almacen_de_mov_masticados),sp
1215  8C8F ED 7B 1C 89  	ld sp,(Stack)
1216  8C93
1217  8C93 CD 16 71     	call Guarda_foto_registros
1218  8C96
1219  8C96 E5           	push hl
1220  8C97
1221  8C97 2A F4 88     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1222  8C9A 23           	inc hl
1223  8C9B 22 F4 88     	ld (Contador_de_mov_masticados),hl
1224  8C9E
1225  8C9E              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1226  8C9E
1227  8C9E ED 4B 09 89  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1228  8CA2 A7           	and a
1229  8CA3 ED 42        	sbc hl,bc
1230  8CA5 CC 66 8C     	call z,Convierte_guia_en_fantasma
1231  8CA8
1232  8CA8 E1           	pop hl
1233  8CA9
1234  8CA9 C9           	ret
1235  8CAA
1236  8CAA              ; --------------------------------------------------------------------------------------------------------------
1237  8CAA              ;
1238  8CAA              ;	19/9/23
1239  8CAA
1240  8CAA              Prepara_var_pintado
1241  8CAA
1242  8CAA 21 C6 88     	ld hl,Filas
1243  8CAD 11 E6 88     	ld de,Variables_de_pintado
1244  8CB0 01 08 00     	ld bc,8
1245  8CB3 ED B0        	ldir
1246  8CB5 C9           	ret
1247  8CB6
1248  8CB6              ; --------------------------------------------------------------------------------------------------------------
1249  8CB6
1250  8CB6              Repone_pintar
1251  8CB6
1252  8CB6 21 E6 88     	ld hl,Variables_de_pintado
1253  8CB9 11 C6 88     	ld de,Filas
1254  8CBC 01 08 00     	ld bc,8
1255  8CBF ED B0        	ldir
1256  8CC1 C9           	ret
1257  8CC2
1258  8CC2              ; *************************************************************************************************************************************************************
1259  8CC2              ;
1260  8CC2              ; 8/1/23
1261  8CC2              ;
1262  8CC2              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1263  8CC2              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1264  8CC2              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1265  8CC2
1266  8CC2              ; Destruye HL y DE !!!!!
1267  8CC2
1268  8CC2              Inicia_punteros_de_cajas
1269  8CC2
1270  8CC2 21 6C 85     	ld hl,Indice_de_cajas_de_entidades
1271  8CC5 CD 5A 8D         call Extrae_address
1272  8CC8 22 0E 89         ld (Puntero_store_caja),hl
1273  8CCB 21 6E 85     	ld hl,Indice_de_cajas_de_entidades+2
1274  8CCE 22 12 89     	ld (Indice_restore_caja),hl
1275  8CD1 CD 5A 8D     	call Extrae_address
1276  8CD4 22 10 89     	ld (Puntero_restore_caja),hl
1277  8CD7 C9               ret
1278  8CD8
1279  8CD8              ; *************************************************************************************************************************************************************
1280  8CD8              ;
1281  8CD8              ; 8/1/23
1282  8CD8              ;
1283  8CD8              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1284  8CD8
1285  8CD8 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1286  8CDB 22 2C 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1287  8CDE C9           	ret
1288  8CDF 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1289  8CE2 22 2E 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1290  8CE5 C9           	ret
1291  8CE6
1292  8CE6              ; -------------------------------------------------------------------------------------------------------------
1293  8CE6              ;
1294  8CE6              ; 21/9/23
1295  8CE6              ;
1296  8CE6
1297  8CE6              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1298  8CE6
1299  8CE6              Limpia_album_Amadeus
1300  8CE6
1301  8CE6 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1302  8CE9 7E           	ld a,(hl)
1303  8CEA A7           	and a
1304  8CEB C8           	ret z
1305  8CEC
1306  8CEC 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1307  8CEF 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1308  8CF2 01 0B 00     	ld bc,11
1309  8CF5 AF           	xor a
1310  8CF6 77           	ld (hl),a
1311  8CF7 ED B0        	ldir
1312  8CF9
1313  8CF9 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1314  8CFC 22 28 89     	ld (End_Snapshot_Amadeus),hl
1315  8CFF
1316  8CFF C9           	ret
1317  8D00
1318  8D00 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1319  8D03 11 E1 88     	ld de,Variables_de_borrado+1
1320  8D06 01 05 00     	ld bc,5
1321  8D09 AF           	xor a
1322  8D0A 77           	ld (hl),a
1323  8D0B ED B0        	ldir
1324  8D0D C9           	ret
1325  8D0E
1326  8D0E              ; -------------------------------------------------------------------------------------------------------------
1327  8D0E              ;
1328  8D0E              ; 8/9/23
1329  8D0E              ;
1330  8D0E
1331  8D0E              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1332  8D0E              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1333  8D0E
1334  8D0E              Calcula_numero_de_malotes
1335  8D0E
1336  8D0E 21 00 70     	ld hl,Album_de_fotos
1337  8D11 EB           	ex de,hl
1338  8D12 2A 22 89     	ld hl,(Stack_snapshot)
1339  8D15
1340  8D15 06 00        	ld b,0
1341  8D17 7D           	ld a,l
1342  8D18 93           	sub e
1343  8D19 28 07        	jr z,1F
1344  8D1B
1345  8D1B              ; Nº de malotes no es "0".
1346  8D1B
1347  8D1B D6 06        2 sub 6
1348  8D1D 04           	inc b
1349  8D1E A7           	and a
1350  8D1F 20 FA        	jr nz,2B
1351  8D21 78           	ld a,b
1352  8D22
1353  8D22 32 17 89     1 ld (Numero_de_malotes),a
1354  8D25 C9           	ret
1355  8D26
1356  8D26              ; -------------------------------------------------------------------------------------------------------------
1357  8D26              ;
1358  8D26              ; 8/9/23
1359  8D26              ;
1360  8D26
1361  8D26              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1362  8D26              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1363  8D26
1364  8D26              Calcula_malotes_Amadeus
1365  8D26
1366  8D26 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1367  8D29 EB           	ex de,hl
1368  8D2A 2A 28 89     	ld hl,(End_Snapshot_Amadeus)
1369  8D2D
1370  8D2D 7C           	ld a,h
1371  8D2E A7           	and a
1372  8D2F 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1373  8D31
1374  8D31 06 00        	ld b,0
1375  8D33 7D           	ld a,l
1376  8D34 93           	sub e
1377  8D35 28 07        	jr z,1F
1378  8D37
1379  8D37              ; Nº de malotes no es "0".
1380  8D37
1381  8D37 D6 06        2 sub 6
1382  8D39 04           	inc b
1383  8D3A A7           	and a
1384  8D3B 20 FA        	jr nz,2B
1385  8D3D 78           	ld a,b
1386  8D3E
1387  8D3E 32 17 89     1 ld (Numero_de_malotes),a
1388  8D41 C9           	ret
1389  8D42
1390  8D42              ; -------------------------------------------------------------------------------------------------------------
1391  8D42              ;
1392  8D42              ; 28/2/23
1393  8D42              ;
1394  8D42
1395  8D42              Calcula_numero_de_disparotes
1396  8D42
1397  8D42 21 56 70     	ld hl,Album_de_fotos_disparos
1398  8D45 EB           	ex de,hl
1399  8D46 2A 26 89     	ld hl,(End_Snapshot_disparos)
1400  8D49
1401  8D49 06 00        	ld b,0
1402  8D4B 7D           	ld a,l
1403  8D4C 93           	sub e
1404  8D4D 28 07        	jr z,1F
1405  8D4F
1406  8D4F              ; Nº de malotes no es "0".
1407  8D4F
1408  8D4F D6 06        2 sub 6
1409  8D51 04           	inc b
1410  8D52 A7           	and a
1411  8D53 20 FA        	jr nz,2B
1412  8D55 78           	ld a,b
1413  8D56
1414  8D56 32 2B 89     1 ld (Numero_de_disparotes),a
1415  8D59 C9           	ret
1416  8D5A
1417  8D5A              ; *************************************************************************************************************************************************************
1418  8D5A              ;
1419  8D5A              ; 20/10/22
1420  8D5A              ;
1421  8D5A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1422  8D5A              ;
1423  8D5A              ; Destruye el puntero y DE !!!!!
1424  8D5A
1425  8D5A 5E           Extrae_address ld e,(hl)
1426  8D5B 23           	inc hl
1427  8D5C 56           	ld d,(hl)
1428  8D5D 2B           	dec hl
1429  8D5E EB           	ex de,hl
1430  8D5F C9           	ret
1431  8D60
1432  8D60              ; *************************************************************************************************************************************************************
1433  8D60              ;
1434  8D60              ;	7/2/23
1435  8D60              ;
1436  8D60              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1437  8D60              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1438  8D60              ;
1439  8D60              ;   Destruye HL y BC !!!!!,
1440  8D60              ;
1441  8D60              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1442  8D60              ;					"0" ..... Izquierda.
1443  8D60
1444  8D60              Inicia_Puntero_objeto
1445  8D60
1446  8D60 3A DA 88     	ld a,(Cuad_objeto)
1447  8D63 E6 01        	and 1
1448  8D65 F5           	push af
1449  8D66 CC 84 8D     	call z,Inicia_puntero_objeto_izq
1450  8D69 F1           	pop af
1451  8D6A 28 2B        	jr z,1F
1452  8D6C CD 71 8D     	call Inicia_puntero_objeto_der
1453  8D6F 18 26        	jr 1F
1454  8D71
1455  8D71              ; Arrancamos desde la parte izquierda de la pantalla.
1456  8D71              ; Iniciamos (Indice_Sprite_der).
1457  8D71
1458  8D71 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1459  8D74 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1460  8D77 CD 5A 8D     	call Extrae_address
1461  8D7A 22 CA 88     	ld (Puntero_objeto),hl
1462  8D7D
1463  8D7D 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1464  8D80 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1465  8D83 C9           	ret
1466  8D84
1467  8D84              ; Arrancamos desde la parte derecha de la pantalla.
1468  8D84              ; Iniciamos (Indice_Sprite_izq).
1469  8D84
1470  8D84 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1471  8D87 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1472  8D8A CD 5A 8D     	call Extrae_address
1473  8D8D 22 CA 88     	ld (Puntero_objeto),hl
1474  8D90
1475  8D90 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1476  8D93 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1477  8D96 C9           	ret
1478  8D97
1479  8D97              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1480  8D97
1481  8D97 21 40 83     1 ld hl,Amadeus
1482  8D9A ED 4B CA 88  	ld bc,(Puntero_objeto)
1483  8D9E B7 ED 42     	sub hl,bc
1484  8DA1 C0           	ret nz
1485  8DA2 21 F6 88     	ld hl,Ctrl_0
1486  8DA5 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1487  8DA7 C9           	ret 												; _de nuestra nave en los extremos.
1488  8DA8
1489  8DA8              ; *************************************************************************************************************************************************************
1490  8DA8              ;
1491  8DA8              ;	21/12/23
1492  8DA8              ;
1493  8DA8              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1494  8DA8              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1495  8DA8
1496  8DA8              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1497  8DA8              ;	_de la 2ª y 3ª entidad respectivamente.
1498  8DA8
1499  8DA8              Store_Restore_cajas
1500  8DA8
1501  8DA8 E5           	push hl
1502  8DA9 D5           	push de
1503  8DAA C5            	push bc
1504  8DAB
1505  8DAB              ;	STORE !!!!!
1506  8DAB              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1507  8DAB
1508  8DAB F3           	di
1509  8DAC 21 C6 88     	ld hl,Filas
1510  8DAF ED 5B 0E 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1511  8DB3 01 43 00     	ld bc,67
1512  8DB6 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1513  8DB8 FB           	ei
1514  8DB9
1515  8DB9              ; 	Entidad_sospechosa. 20/4/23
1516  8DB9
1517  8DB9 3A DF 88     	ld a,(Impacto)
1518  8DBC A7           	and a
1519  8DBD 28 0C        	jr z,1F
1520  8DBF
1521  8DBF 2A 0E 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1522  8DC2 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1523  8DC5 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1524  8DC6 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1525  8DC8 22 31 89     	ld (Entidad_sospechosa_de_colision),hl
1526  8DCB
1527  8DCB              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1528  8DCB
1529  8DCB 2A 10 89     1 ld hl,(Puntero_restore_caja)
1530  8DCE 7E           	ld a,(hl)
1531  8DCF A7           	and a
1532  8DD0 F5           	push af
1533  8DD1 28 0A        	jr z,2F
1534  8DD3
1535  8DD3 F3           	di
1536  8DD4 11 C6 88     	ld de,Filas
1537  8DD7 01 43 00     	ld bc,67
1538  8DDA ED B0        	ldir
1539  8DDC FB           	ei
1540  8DDD
1541  8DDD CD F9 8D     2 call Incrementa_punteros_de_cajas
1542  8DE0
1543  8DE0 F1           	pop af
1544  8DE1 28 E8        	jr z,1B
1545  8DE3
1546  8DE3 C1           	pop bc
1547  8DE4 D1           	pop de
1548  8DE5 E1           	pop hl
1549  8DE6
1550  8DE6 C9           	ret
1551  8DE7
1552  8DE7              ; **************************************************************************************************
1553  8DE7              ;
1554  8DE7              ;	21/12/23
1555  8DE7              ;
1556  8DE7              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1557  8DE7
1558  8DE7 E5           Restore_entidad push hl
1559  8DE8 D5           	push de
1560  8DE9 C5            	push bc
1561  8DEA
1562  8DEA 2A 0E 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1563  8DED 11 C6 88     	ld de,Filas
1564  8DF0 01 43 00     	ld bc,67
1565  8DF3 ED B0        	ldir
1566  8DF5
1567  8DF5 C1           	pop bc
1568  8DF6 D1           	pop de
1569  8DF7 E1           	pop hl
1570  8DF8 C9           	ret
1571  8DF9
1572  8DF9              ; **************************************************************************************************
1573  8DF9              ;
1574  8DF9              ;	08/05/23
1575  8DF9              ;
1576  8DF9              ;	Incrementamos los dos punteros de entidades. (+1).
1577  8DF9
1578  8DF9              Incrementa_punteros_de_cajas
1579  8DF9
1580  8DF9 2A 10 89     	ld hl,(Puntero_restore_caja)
1581  8DFC 22 0E 89     	ld (Puntero_store_caja),hl
1582  8DFF 2A 12 89     	ld hl,(Indice_restore_caja)
1583  8E02 23           	inc hl
1584  8E03 23           	inc hl
1585  8E04 22 12 89     	ld (Indice_restore_caja),hl
1586  8E07 CD 5A 8D         call Extrae_address
1587  8E0A 22 10 89         ld (Puntero_restore_caja),hl
1588  8E0D C9               ret
1589  8E0E
1590  8E0E              ; **************************************************************************************************
1591  8E0E              ;
1592  8E0E              ;	21/12/23
1593  8E0E              ;
1594  8E0E              ;	Restore_Amadeus
1595  8E0E              ;
1596  8E0E              ;	Cargamos en DRAW los parámetros de Amadeus.
1597  8E0E              ;
1598  8E0E
1599  8E0E E5           Restore_Amadeus	push hl
1600  8E0F D5           	push de
1601  8E10 C5            	push bc
1602  8E11 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1603  8E14 11 C6 88     	ld de,Filas
1604  8E17 01 43 00     	ld bc,67
1605  8E1A ED B0        	ldir
1606  8E1C C1           	pop bc
1607  8E1D D1           	pop de
1608  8E1E E1           	pop hl
1609  8E1F C9           	ret
1610  8E20
1611  8E20              ; *************************************************************************************************************************************************************
1612  8E20              ;
1613  8E20              ;	21/12/23
1614  8E20              ;
1615  8E20              ;	Store_Amadeus
1616  8E20              ;
1617  8E20              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1618  8E20              ;
1619  8E20              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1620  8E20              ;
1621  8E20              ;	DESTRUYE: HL y BC y DE.
1622  8E20
1623  8E20 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1624  8E23 01 43 00     	ld bc,67
1625  8E26 ED B0        	ldir
1626  8E28 C9           	ret
1627  8E29
1628  8E29              ; -----------------------------------------------------------
1629  8E29              ;
1630  8E29              ;	21/12/23
1631  8E29              ;
1632  8E29              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1633  8E29              ;
1634  8E29              ;	Destruye: HL,BC,DE,A
1635  8E29
1636  8E29 21 C6 88     Borra_datos_entidad ld hl,Filas
1637  8E2C 01 42 00     	ld bc,66
1638  8E2F AF           	xor a
1639  8E30 77           	ld (hl),a
1640  8E31 11 C7 88     	ld de,Filas+1
1641  8E34 ED B0        	ldir
1642  8E36 C9           	ret
1643  8E37
1644  8E37              ; -----------------------------------------------------------
1645  8E37
1646  8E37              ; Teclado.
1647  8E37
1648  8E37 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1649  8E39 DB FE        	in a,($fe)
1650  8E3B E6 01        	and $01
1651  8E3D 28 02        	jr z,1f
1652  8E3F 18 F6        	jr Pulsa_ENTER
1653  8E41 C9           1 ret
1654  8E42
1655  8E42              ; **************************************************************************************************
1656  8E42              ;
1657  8E42              ; Temporización.
1658  8E42
1659  8E42              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1660  8E42              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1661  8E42              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1662  8E42              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1663  8E42
1664  8E42              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1665  8E42              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1666  8E42              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1667  8E42
1668  8E42              ; A partir de $4f61 no hace falta DELAY.
1669  8E42
1670  8E42              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1671  8E42
1672  8E42 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1673  8E45 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1674  8E46 78           	LD A,B
1675  8E47 A7           	AND A
1676  8E48 20 FB        	JR NZ,wait
1677  8E4A C9           	RET
1678  8E4B
1679  8E4B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1680  8E4B              ;
1681  8E4B              ;	5/3/23
1682  8E4B              ;
1683  8E4B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1684  8E4B
1685  8E4B              Movimiento_Amadeus
1686  8E4B
1687  8E4B              ; Disparo.
1688  8E4B
1689  8E4B 3A 41 89     	ld a,(Disparo_Amadeus)
1690  8E4E A7           	and a
1691  8E4F 20 02        	jr nz,1F
1692  8E51 18 15        	jr 2F
1693  8E53
1694  8E53 3E F7        1 ld a,$f7													; "5" para disparar.
1695  8E55 DB FE        	in a,($fe)
1696  8E57 E6 10        	and $10
1697  8E59
1698  8E59 F5           	push af
1699  8E5A CC 02 8F     	call z,Genera_disparo
1700  8E5D F1           	pop af
1701  8E5E 20 08        	jr nz,2F
1702  8E60
1703  8E60 3A 41 89     	ld a,(Disparo_Amadeus)
1704  8E63 EE 01        	xor 1
1705  8E65 32 41 89     	ld (Disparo_Amadeus),a
1706  8E68 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1707  8E6A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1708  8E6C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1709  8E6E CC BB 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1710  8E71
1711  8E71 3E F7        	ld a,$f7
1712  8E73 DB FE        	in a,($fe)
1713  8E75 E6 01        	and $01
1714  8E77 C8           	ret z
1715  8E78
1716  8E78 3E F7        	ld a,$f7
1717  8E7A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1718  8E7C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1719  8E7E CC 9D 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1720  8E81 C9           	ret
1721  8E82
1722  8E82              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1723  8E82              ;
1724  8E82              ;	Rutina provisional para que los malotes cagen balas.
1725  8E82
1726  8E82              Detecta_disparo_entidad
1727  8E82
1728  8E82 3A 44 89     	ld a,(Disparo_entidad)
1729  8E85 A7           	and a
1730  8E86 C8           	ret z
1731  8E87
1732  8E87              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1733  8E87
1734  8E87              ;	ld a,$7f				; Detecta SPACE.
1735  8E87              ;	in a,($fe)
1736  8E87              ;	and 1
1737  8E87              ;	ret nz
1738  8E87
1739  8E87 CD 02 8F     	call Genera_disparo
1740  8E8A C9           	ret
1741  8E8B
1742  8E8B              ; ----------------------------------------------------------------------
1743  8E8B              ;
1744  8E8B              ;	8/9/23
1745  8E8B
1746  8E8B 2A 28 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1747  8E8E 2B            	dec hl
1748  8E8F 7E           	ld a,(hl)
1749  8E90 A7           	and a
1750  8E91 C8           	ret z										; Salimos si es álbum está vacío.
1751  8E92
1752  8E92 11 E5 88     	ld de,Variables_de_borrado+5
1753  8E95 01 06 00     	ld bc,6
1754  8E98 ED B8        	lddr
1755  8E9A C9           	ret
1756  8E9B
1757  8E9B              ; ----------------------------------------------------------------------
1758  8E9B              ;
1759  8E9B              ;	9/9/23
1760  8E9B
1761  8E9B              Repone_datos_de_borrado_Amadeus
1762  8E9B
1763  8E9B 21 E0 88     	ld hl,Variables_de_borrado
1764  8E9E 11 AC 70     	ld de,Album_de_fotos_Amadeus
1765  8EA1 01 06 00     	ld bc,6
1766  8EA4 ED B0        	ldir
1767  8EA6
1768  8EA6 EB           	ex de,hl
1769  8EA7 22 28 89     	ld (End_Snapshot_Amadeus),hl
1770  8EAA
1771  8EAA C9           	ret
1772  8EAB
1773  8EAB              ; ----------------------------------------------------------------------
1774  8EAB              ;
1775  8EAB              ;	27/10/23
1776  8EAB              ;
1777  8EAB
1778  8EAB              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1779  8EAB              ;	_ Album_de_fotos correspondiente.
1780  8EAB
1781  8EAB              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1782  8EAB              ;	_ durante el proceso de escritura.
1783  8EAB
1784  8EAB              Repone_datos_de_borrado
1785  8EAB
1786  8EAB F3           	di
1787  8EAC ED 5B 22 89  	ld de,(Stack_snapshot)
1788  8EB0 21 E0 88     	ld hl,Variables_de_borrado
1789  8EB3 01 06 00     	ld bc,6
1790  8EB6 ED B0        	ldir
1791  8EB8 FB           	ei
1792  8EB9
1793  8EB9 EB           	ex de,hl
1794  8EBA 22 22 89     	ld (Stack_snapshot),hl
1795  8EBD
1796  8EBD C9           	ret
1797  8EBE
1798  8EBE              ; --------------------------------------------------------------------------------------
1799  8EBE
1800  8EBE              Pinta_Amadeus
1801  8EBE
1802  8EBE CD 26 8D        	call Calcula_malotes_Amadeus
1803  8EC1 CD 66 97     	call Extrae_foto_Amadeus
1804  8EC4 CD E6 8C     	call Limpia_album_Amadeus
1805  8EC7
1806  8EC7 C9           	ret
1807  8EC8
1808  8EC8              Pinta_entidades
1809  8EC8
1810  8EC8              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1811  8EC8
1812  8EC8 3A 2A 89     	ld a,(Ctrl_3)
1813  8ECB CB 47        	bit 0,a
1814  8ECD C8           	ret z
1815  8ECE
1816  8ECE CD 0E 8D     	call Calcula_numero_de_malotes
1817  8ED1 CD E4 96     	call Extrae_foto_entidades
1818  8ED4 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1819  8ED7
1820  8ED7 C9           	ret
1821  8ED8
1822  8ED8              ; -----------------------------------------------------------------------------------
1823  8ED8              ;
1824  8ED8              ;	10/12/23
1825  8ED8              ;
1826  8ED8              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1827  8ED8
1828  8ED8              Actualiza_relojes
1829  8ED8
1830  8ED8 3A 2A 89     	ld a,(Ctrl_3)
1831  8EDB CB 47        	bit 0,a
1832  8EDD C8           	ret z 						;	Salimos si no hemos pintado unidades.
1833  8EDE
1834  8EDE 21 3C 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1835  8EE1 34           	inc (hl)
1836  8EE2
1837  8EE2 34           	inc (hl)
1838  8EE3 35           	dec (hl)
1839  8EE4 C0           	ret nz
1840  8EE5
1841  8EE5 21 3D 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1842  8EE8 34           	inc (hl)
1843  8EE9 C9           	ret
1844  8EEA
1845  8EEA              ; ---------------------------------------------------------------
1846  8EEA              ;
1847  8EEA              ;	21/12/23
1848  8EEA
1849  8EEA              Guarda_parametros_DRAW
1850  8EEA
1851  8EEA 21 C6 88     	ld hl,Filas
1852  8EED 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1853  8EF0 01 43 00     	ld bc,67
1854  8EF3 ED B0        	ldir
1855  8EF5 C9           	ret
1856  8EF6
1857  8EF6              Recupera_parametros_DRAW
1858  8EF6
1859  8EF6 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1860  8EF9 11 C6 88     	ld de,Filas
1861  8EFC 01 43 00     	ld bc,67
1862  8EFF ED B0        	ldir
1863  8F01 C9           	ret
1864  8F02
1865  8F02              ; ---------------------------------------------------------------
1866  8F02
1867  8F02              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F02              ; ******************************************************************************************************************************************************************************************
   2+ 8F02              ;
   3+ 8F02              ;   21/07/23
   4+ 8F02              ;
   5+ 8F02              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F02              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F02              ;
   8+ 8F02              ;
   9+ 8F02              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F02              ;
  11+ 8F02              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F02              ;               _ hacen las entidades hacia abajo.
  13+ 8F02              ;
  14+ 8F02              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F02              ;
  16+ 8F02              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F02              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F02              ;
  19+ 8F02              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F02              ;           _ la bala.
  21+ 8F02              ;
  22+ 8F02              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F02              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F02              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F02              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F02              ;           _ en el momento de generarse la bala)).
  27+ 8F02
  28+ 8F02              Genera_disparo
  29+ 8F02
  30+ 8F02              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F02              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F02              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F02              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F02              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F02              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F02              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F02
  38+ 8F02              ; Exclusiones:
  39+ 8F02
  40+ 8F02 3A DE 88         ld a,(Vel_down)
  41+ 8F05 47               ld b,a
  42+ 8F06 3A 3B 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F09 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F0A D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F0B 3A 03 89         ld a,(Columnas)
  46+ 8F0E 47               ld b,a
  47+ 8F0F 3A C7 88         ld a,(Columns)
  48+ 8F12 B8               cp b
  49+ 8F13 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F14
  51+ 8F14              ; ----- ----- -----
  52+ 8F14
  53+ 8F14 3A F6 88         ld a,(Ctrl_0)
  54+ 8F17 CB 77            bit 6,a
  55+ 8F19 20 06            jr nz,14F
  56+ 8F1B
  57+ 8F1B 3A CD 88         ld a,(Coordenada_y)
  58+ 8F1E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F20 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F21
  61+ 8F21 21 00 80     14 ld hl,Indice_disparo
  62+ 8F24 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8F27 4F               ld c,a
  64+ 8F28 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F2A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F2A              ;                                            ""        ""       "f9", B="1"
  67+ 8F2A              ;                                            ""        ""       "fb", B="2"
  68+ 8F2A              ;                                            ""        ""       "fb", B="3"
  69+ 8F2A A7               and a
  70+ 8F2B 28 10            jr z,1F
  71+ 8F2D E6 01            and 1
  72+ 8F2F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F30
  74+ 8F30 79               ld a,c
  75+ 8F31 16 F9            ld d,$f9
  76+ 8F33 23           2 inc hl
  77+ 8F34 23               inc hl
  78+ 8F35 04               inc b
  79+ 8F36 BA               cp d
  80+ 8F37 28 04            jr z,1F
  81+ 8F39 14               inc d
  82+ 8F3A 14               inc d
  83+ 8F3B 18 F6            jr 2B
  84+ 8F3D
  85+ 8F3D CD 5A 8D     1 call Extrae_address
  86+ 8F40 E5               push hl
  87+ 8F41 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F43 DD 21 AC 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F47
  90+ 8F47              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F47              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F47
  93+ 8F47 3A F6 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F4A CB 77            bit 6,a
  95+ 8F4C 20 04            jr nz,19F
  96+ 8F4E
  97+ 8F4E AF               xor a
  98+ 8F4F 32 44 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F52
 100+ 8F52 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8F55 FE 02            cp 2
 102+ 8F57 38 66            jr c,3F
 103+ 8F59 28 64            jr z,3F
 104+ 8F5B
 105+ 8F5B              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F5B
 107+ 8F5B E6 01            and 1
 108+ 8F5D 28 30            jr z,4F
 109+ 8F5F
 110+ 8F5F              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F5F              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F5F              ;
 113+ 8F5F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F5F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F5F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F5F
 117+ 8F5F 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8F62
 119+ 8F62              ;   Amadeus o entidad ???.
 120+ 8F62
 121+ 8F62 3A F6 88         ld a,(Ctrl_0)
 122+ 8F65 CB 77            bit 6,a
 123+ 8F67 28 0A            jr z,8F
 124+ 8F69
 125+ 8F69              ; 	Dispara Amadeus.
 126+ 8F69
 127+ 8F69 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F6B CD D5 96         call PreviousScan
 129+ 8F6E CD D5 96         call PreviousScan
 130+ 8F71
 131+ 8F71              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F71              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F71              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F71              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F71
 136+ 8F71 18 11            jr 10F
 137+ 8F73
 138+ 8F73              ; 	Dispara Entidad.
 139+ 8F73
 140+ 8F73 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F76              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F76
 143+ 8F76              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F76              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F76
 146+ 8F76 C5               push bc
 147+ 8F77 06 10            ld b,16
 148+ 8F79 CD C6 96     9 call NextScan
 149+ 8F7C 10 FB            djnz 9B
 150+ 8F7E C1               pop bc
 151+ 8F7F CD E9 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F82 18 06            jr 17F
 153+ 8F84
 154+ 8F84              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F84              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F84              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F84              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F84
 159+ 8F84 CD E9 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F87 CD 5E 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F8A              ;                                                      ; _al generar el disparo.
 162+ 8F8A
 163+ 8F8A              ; 	LLegados a este punto tendremos:
 164+ 8F8A              ;
 165+ 8F8A              ;       Puntero_objeto_disparo en IY.
 166+ 8F8A              ;       Rutinas_de_impresion en IX.
 167+ 8F8A              ;       Puntero_de_impresion en HL.
 168+ 8F8A              ;       Impacto/Dirección en BC.
 169+ 8F8A
 170+ 8F8A CD F1 8F     17 call Almacena_disparo
 171+ 8F8D 18 52            jr 6F                                             ; RET.
 172+ 8F8F
 173+ 8F8F              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F8F              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F8F              ;
 176+ 8F8F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F8F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F8F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F8F
 180+ 8F8F 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8F92
 182+ 8F92              ;   Amadeus o entidad ???.
 183+ 8F92
 184+ 8F92 3A F6 88         ld a,(Ctrl_0)
 185+ 8F95 CB 77            bit 6,a
 186+ 8F97 28 0A            jr z,11F
 187+ 8F99
 188+ 8F99              ; 	Dispara Amadeus.
 189+ 8F99
 190+ 8F99 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F9B CD D5 96         call PreviousScan
 192+ 8F9E CD D5 96         call PreviousScan
 193+ 8FA1
 194+ 8FA1              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FA1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FA1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FA1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FA1
 199+ 8FA1 18 11            jr 13F
 200+ 8FA3
 201+ 8FA3              ; 	Dispara Entidad.
 202+ 8FA3
 203+ 8FA3 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FA6              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FA6
 206+ 8FA6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FA6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FA6
 209+ 8FA6 C5               push bc
 210+ 8FA7 06 10            ld b,16
 211+ 8FA9 CD C6 96     12 call NextScan
 212+ 8FAC 10 FB            djnz 12B
 213+ 8FAE C1               pop bc
 214+ 8FAF
 215+ 8FAF CD E2 8F         call Ajusta_disparo_parte_derecha
 216+ 8FB2 18 06            jr 18F
 217+ 8FB4
 218+ 8FB4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FB4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FB4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FB4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FB4
 223+ 8FB4 CD E2 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8FB7 CD 5E 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FBA              ;                                                       ; _al generar el disparo.
 226+ 8FBA
 227+ 8FBA              ; LLegados a este punto tendremos:
 228+ 8FBA              ;
 229+ 8FBA              ;       Puntero_objeto_disparo en IY.
 230+ 8FBA              ;       Rutinas_de_impresion en IX.
 231+ 8FBA              ;       Puntero_de_impresion en HL.
 232+ 8FBA              ;       Impacto/Dirección en BC.
 233+ 8FBA
 234+ 8FBA CD F1 8F     18 call Almacena_disparo
 235+ 8FBD 18 22            jr 6F                                               ; RET.
 236+ 8FBF
 237+ 8FBF              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FBF
 239+ 8FBF 28 11        3 jr z,5F
 240+ 8FC1
 241+ 8FC1              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FC1              ;
 243+ 8FC1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FC1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FC1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FC1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FC1
 248+ 8FC1              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FC1              ;	   ""        ""       "f9", B="1"
 250+ 8FC1              ;	   ""        ""       "fb", B="2"
 251+ 8FC1              ; 	   ""        ""       "fb", B="3"
 252+ 8FC1
 253+ 8FC1 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8FC4 CD C6 96     	call NextScan
 255+ 8FC7
 256+ 8FC7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FC7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FC7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FC7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FC7
 261+ 8FC7 CD E9 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FCA
 263+ 8FCA              ; 	No se produce impacto. B="$80"
 264+ 8FCA              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FCA
 266+ 8FCA 01 80 80         ld bc,$8080
 267+ 8FCD
 268+ 8FCD              ; 	LLegados a este punto tendremos:
 269+ 8FCD              ;
 270+ 8FCD              ;       Puntero_objeto_disparo en IY.
 271+ 8FCD              ;       Rutinas_de_impresion en IX.
 272+ 8FCD              ;       Puntero_de_impresion en HL.
 273+ 8FCD              ;       Impacto/Dirección en BC.
 274+ 8FCD
 275+ 8FCD CD F1 8F         call Almacena_disparo
 276+ 8FD0 18 0F            jr 6F                                           ; RET.
 277+ 8FD2
 278+ 8FD2              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FD2              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FD2              ;
 281+ 8FD2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FD2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FD2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FD2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FD2
 286+ 8FD2 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8FD5 CD C6 96     	call NextScan
 288+ 8FD8
 289+ 8FD8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FD8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FD8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FD8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FD8
 294+ 8FD8 CD E2 8F         call Ajusta_disparo_parte_derecha
 295+ 8FDB
 296+ 8FDB              ; 	No se produce impacto. B="$80"
 297+ 8FDB              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FDB
 299+ 8FDB 01 80 80     15 ld bc,$8080
 300+ 8FDE
 301+ 8FDE              ; 	LLegados a este punto tendremos:
 302+ 8FDE              ;
 303+ 8FDE              ;       Puntero_objeto_disparo en IY.
 304+ 8FDE              ;       Rutinas_de_impresion en IX.
 305+ 8FDE              ;       Puntero_de_impresion en HL.
 306+ 8FDE              ;       Impacto/Dirección en BC.
 307+ 8FDE
 308+ 8FDE CD F1 8F         call Almacena_disparo
 309+ 8FE1
 310+ 8FE1 C9           6 ret
 311+ 8FE2
 312+ 8FE2              ; ----------------------------------------------------------------
 313+ 8FE2              ;
 314+ 8FE2              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FE2              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FE2              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FE2
 318+ 8FE2 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FE3 FE 02            cp 2
 320+ 8FE5 38 01            jr c,1F
 321+ 8FE7 23               inc hl
 322+ 8FE8 C9           1 ret
 323+ 8FE9
 324+ 8FE9 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FEA FE 01        	cp 1
 326+ 8FEC 20 01        	jr nz,1F
 327+ 8FEE 2B           	dec hl
 328+ 8FEF 2B           1 dec hl
 329+ 8FF0 C9               ret
 330+ 8FF1
 331+ 8FF1              ; ----------------------------------------------------------------
 332+ 8FF1              ;
 333+ 8FF1              ;   25/02/23
 334+ 8FF1              ;
 335+ 8FF1              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FF1              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FF1              ;
 338+ 8FF1              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FF1              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FF1
 341+ 8FF1              Almacena_disparo
 342+ 8FF1
 343+ 8FF1 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FF2 F1               pop af
 345+ 8FF3 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FF4
 347+ 8FF4 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FF5 E6 01            and 1
 349+ 8FF7 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FF9              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FF9              ; 	Dispara AMADEUS.
 352+ 8FF9
 353+ 8FF9              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FF9              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FF9              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FF9              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FF9
 358+ 8FF9 C5               push bc
 359+ 8FFA 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FFD 2A 2E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9000 A7               and a
 362+ 9001 ED 42            sbc hl,bc
 363+ 9003 CC DF 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9006 C1               pop bc
 365+ 9007 28 54            jr z,4F
 366+ 9009
 367+ 9009 2A 2E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 900C 23               inc hl
 369+ 900D 23               inc hl
 370+ 900E 22 2E 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9011              ;                                                   ; _ Disparo_(+1).
 372+ 9011 18 18            jr 2F
 373+ 9013
 374+ 9013              ; Dispara una entidad.
 375+ 9013
 376+ 9013 C5           1 push bc
 377+ 9014 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9017 2A 2C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 901A A7               and a
 380+ 901B ED 42            sbc hl,bc
 381+ 901D CC D8 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9020 C1               pop bc
 383+ 9021 28 3A            jr z,4F
 384+ 9023
 385+ 9023 2A 2C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9026 23               inc hl
 387+ 9027 23               inc hl
 388+ 9028 22 2C 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 902B              ;                                                   ; _ Disparo_(+1).
 390+ 902B CD 5A 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 902E              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 902E              ;
 393+ 902E              ;                                                     Puntero_objeto_disparo en IY.
 394+ 902E              ;                                                     Rutinas_de_impresion en IX.
 395+ 902E              ;                                                     Puntero_de_impresion en HL.
 396+ 902E              ;                                                     Impacto/Dirección en BC.
 397+ 902E
 398+ 902E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 902F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9030 23               inc hl                                          ; _ al siguiente.
 401+ 9031 A7               and a
 402+ 9032 20 C0            jr nz,3B
 403+ 9034
 404+ 9034 08               ex af,af
 405+ 9035 ED 73 1C 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9039 F9               ld sp,hl
 407+ 903A
 408+ 903A DD E5            push ix                                         ; Rutina de impresión.
 409+ 903C F5               push af                                         ; Puntero de impresión.
 410+ 903D FD E5            push iy                                         ; Puntero objeto.
 411+ 903F C5               push bc                                         ; Control.
 412+ 9040
 413+ 9040 ED 7B 1C 89      ld sp,(Stack)
 414+ 9044
 415+ 9044              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9044
 417+ 9044 21 0B 89     	ld hl,Ctrl_1
 418+ 9047 CB C6        	set 0,(hl)
 419+ 9049
 420+ 9049 DD E5        	push ix
 421+ 904B E1               pop hl
 422+ 904C F5               push af
 423+ 904D DD E1            pop ix
 424+ 904F
 425+ 904F CD 16 71     	call Guarda_foto_registros
 426+ 9052
 427+ 9052 21 0B 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9055 CB 86        	res 0,(hl)
 429+ 9057
 430+ 9057              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9057              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9057
 433+ 9057 CD DF 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 905A CD D8 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 905D
 436+ 905D C9           4 ret
 437+ 905E
 438+ 905E              ; ----------------------------------------------------------------
 439+ 905E              ;
 440+ 905E              ;   4/3/23
 441+ 905E              ;
 442+ 905E              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 905E              ;   _ al generarse el disparo.
 444+ 905E              ;
 445+ 905E              ;       "$80" ..... No se produce colisión.
 446+ 905E              ;       "$81" ..... Se produce colisión.
 447+ 905E              ;
 448+ 905E              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 905E              ;         _ que forman el disparo.
 450+ 905E
 451+ 905E
 452+ 905E              Comprueba_Colision
 453+ 905E
 454+ 905E              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 905E
 456+ 905E FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9060 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9061
 459+ 9061 CD 97 90         call Modifica_H_Velocidad_disparo
 460+ 9064
 461+ 9064 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9065 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9067 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9069
 465+ 9069 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 906B CD 87 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 906E
 468+ 906E 7B               ld a,e
 469+ 906F E6 01            and 1
 470+ 9071 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9073              ;                                                  ; _ para activar IMPACTO.
 472+ 9073 E1               pop hl
 473+ 9074 E5               push hl
 474+ 9075 CD C6 96         call NextScan
 475+ 9078
 476+ 9078 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9079 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 907B 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 907D              ;                                                  ; _ 2º scanline si esto es así.
 480+ 907D 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 907F CD 87 90         call Bucle_2
 482+ 9082
 483+ 9082 43           1 ld b,e
 484+ 9083 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9084 FD E1            pop iy
 486+ 9086 C9               ret
 487+ 9087
 488+ 9087              ; ---------- ----------
 489+ 9087
 490+ 9087 06 02        Bucle_2 ld b,2
 491+ 9089 FD 7E 00     2 ld a,(iy)
 492+ 908C A6               and (hl)
 493+ 908D 28 02            jr z,1F
 494+ 908F 1E 81            ld e,$81
 495+ 9091 23           1 inc hl
 496+ 9092 FD 23            inc iy
 497+ 9094 10 F3            djnz 2B
 498+ 9096 C9               ret
 499+ 9097
 500+ 9097              ; ---------- ----------
 501+ 9097              ;
 502+ 9097              ;   21/7/23
 503+ 9097
 504+ 9097              Modifica_H_Velocidad_disparo
 505+ 9097
 506+ 9097 3A 3B 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 909A FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 909C D0               ret nc                                         ; _ incrementamos H.
 509+ 909D 24               inc h
 510+ 909E
 511+ 909E C9               ret
 512+ 909F
 513+ 909F              ; -------------------------------------------------------------------------------------------------------------
 514+ 909F              ;
 515+ 909F              ;   04/12/23
 516+ 909F              ;
 517+ 909F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 909F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 909F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 909F              ;
 521+ 909F              ;   MODIFICA: HL,DE,B y A.
 522+ 909F
 523+ 909F              Genera_coordenadas_X
 524+ 909F
 525+ 909F              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 909F              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 909F
 528+ 909F              ;   Limpiamos almacenes.
 529+ 909F
 530+ 909F CD D0 90         call Limpia_Coordenadas_X
 531+ 90A2
 532+ 90A2              ;   Almacenamos coordenadas X.
 533+ 90A2
 534+ 90A2              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 90A2
 536+ 90A2 2A F0 88         ld hl,(Puntero_de_impresion)
 537+ 90A5 11 38 89         ld de,Coordenadas_X_Entidad
 538+ 90A8 06 02            ld b,2
 539+ 90AA
 540+ 90AA 3A CE 88         ld a,(CTRL_DESPLZ)
 541+ 90AD A7               and a
 542+ 90AE 28 01            jr z,1F
 543+ 90B0 04               inc b
 544+ 90B1
 545+ 90B1 CD C7 90     1 call Guarda_coordenadas_X
 546+ 90B4
 547+ 90B4              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 90B4
 549+ 90B4 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 90B7 11 35 89         ld de,Coordenadas_X_Amadeus
 551+ 90BA 06 02            ld b,2
 552+ 90BC
 553+ 90BC 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 90BF A7               and a
 555+ 90C0 28 01            jr z,2F
 556+ 90C2 04               inc b
 557+ 90C3
 558+ 90C3 CD C7 90     2 call Guarda_coordenadas_X
 559+ 90C6
 560+ 90C6              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 90C6
 562+ 90C6 C9               ret
 563+ 90C7
 564+ 90C7              ; ----- ----- ----- ----- -----
 565+ 90C7
 566+ 90C7 7D           Guarda_coordenadas_X  ld a,l
 567+ 90C8 E6 1F            and $1f
 568+ 90CA 12           1 ld (de),a
 569+ 90CB 3C               inc a
 570+ 90CC 13               inc de
 571+ 90CD 10 FB            djnz 1B
 572+ 90CF C9               ret
 573+ 90D0
 574+ 90D0 AF           Limpia_Coordenadas_X xor a
 575+ 90D1 06 06            ld b,6
 576+ 90D3 21 35 89         ld hl,Coordenadas_X_Amadeus
 577+ 90D6 77           1 ld (hl),a
 578+ 90D7 23               inc hl
 579+ 90D8 10 FC            djnz 1B
 580+ 90DA C9               ret
 581+ 90DB
 582+ 90DB              ; ----- ----- ----- ----- -----
 583+ 90DB
 584+ 90DB              Compara_coordenadas_X
 585+ 90DB
 586+ 90DB 06 03            ld b,3
 587+ 90DD 11 3A 89         ld de,Coordenadas_X_Entidad+2
 588+ 90E0
 589+ 90E0 1A               ld a,(de)
 590+ 90E1 A7               and a
 591+ 90E2 20 01            jr nz,2F
 592+ 90E4 05               dec b
 593+ 90E5
 594+ 90E5 1B           2 dec de
 595+ 90E6 1B               dec de
 596+ 90E7 21 35 89         ld hl,Coordenadas_X_Amadeus
 597+ 90EA
 598+ 90EA D5           1 push de
 599+ 90EB E5               push hl
 600+ 90EC C5               push bc
 601+ 90ED
 602+ 90ED CD F7 90         call Comparando
 603+ 90F0
 604+ 90F0 C1               pop bc
 605+ 90F1 E1               pop hl
 606+ 90F2 D1               pop de
 607+ 90F3
 608+ 90F3 13               inc de
 609+ 90F4 10 F4            djnz 1B
 610+ 90F6
 611+ 90F6 C9               ret
 612+ 90F7
 613+ 90F7              ; ----- ----- ----- ----- -----
 614+ 90F7              ;
 615+ 90F7              ;   4/12/23
 616+ 90F7              ;
 617+ 90F7              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 90F7
 619+ 90F7 06 03        Comparando ld b,3
 620+ 90F9 1A               ld a,(de)
 621+ 90FA 4E           2 ld c,(hl)
 622+ 90FB B9               cp c
 623+ 90FC 28 04            jr z,1F
 624+ 90FE 23               inc hl
 625+ 90FF 10 F9            djnz 2B
 626+ 9101 C9               ret
 627+ 9102
 628+ 9102 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9104 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9107 21 30 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 910A CB D6            set 2,(hl)
 632+ 910C C9               ret
 633+ 910D
 634+ 910D              ; -----------------------------------------------------------------------
 635+ 910D              ;
 636+ 910D              ;   7/12/23
 637+ 910D              ;
 638+ 910D
 639+ 910D              Detecta_colision_nave_entidad
 640+ 910D
 641+ 910D              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 910D
 643+ 910D FD 2A CA 88      ld iy,(Puntero_objeto)
 644+ 9111 2A F0 88         ld hl,(Puntero_de_impresion)
 645+ 9114
 646+ 9114 E5               push hl
 647+ 9115
 648+ 9115              ; ----- ----- -----
 649+ 9115 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9117 06 0A            ld b,10
 651+ 9119 CD 49 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 911C 7B               ld a,e
 653+ 911D FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 911F 38 0E            jr c,3F
 655+ 9121
 656+ 9121              ; LLegados a este punto:
 657+ 9121              ;
 658+ 9121              ;   HAY COLISIÓN !!!!!.
 659+ 9121              ;
 660+ 9121              ;   .db (Impacto) de Amadeus a "1".
 661+ 9121              ;   SET el bit3 de (Impacto2).
 662+ 9121              ;
 663+ 9121              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9121
 665+ 9121 21 DF 88         ld hl,Impacto
 666+ 9124 36 01            ld (hl),1
 667+ 9126 21 30 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9129 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 912B CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 912D
 671+ 912D 18 18            jr 1F
 672+ 912F
 673+ 912F              ; -----
 674+ 912F
 675+ 912F E1           3 pop hl
 676+ 9130 CD C6 96         call NextScan
 677+ 9133 E5               push hl
 678+ 9134 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9135 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9137 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9139 30 0C            jr nc,1F
 682+ 913B              ;                                                  ; _ 2º scanline si esto es así.
 683+ 913B 10 DC            djnz 2B
 684+ 913D
 685+ 913D              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 913D
 687+ 913D              ; LLegados a este punto:
 688+ 913D              ;
 689+ 913D              ;   NO HAY COLISIÓN !!!!!.
 690+ 913D              ;
 691+ 913D              ;   .db (Impacto) de Amadeus a "0".
 692+ 913D              ;   RES el bit2 de (Impacto2).
 693+ 913D              ;
 694+ 913D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 913D              ;   Lo colocamos a "0".
 696+ 913D
 697+ 913D 21 30 89         ld hl,Impacto2
 698+ 9140 CB 96            res 2,(hl)
 699+ 9142 2A 31 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9145 36 00            ld (hl),0
 701+ 9147
 702+ 9147 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9148 C9               ret
 704+ 9149
 705+ 9149               ; ---------- ----------
 706+ 9149
 707+ 9149 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 914A 3A C7 88         ld a,(Columns)
 709+ 914D 47               ld b,a
 710+ 914E FD 7E 00     2 ld a,(iy)
 711+ 9151 BE               cp (hl)
 712+ 9152 28 01            jr z,1F
 713+ 9154
 714+ 9154 1C               inc e
 715+ 9155
 716+ 9155 23           1 inc hl
 717+ 9156 FD 23            inc iy
 718+ 9158 10 F4            djnz 2B
 719+ 915A C1               pop bc
 720+ 915B C9               ret
 721+ 915C
 722+ 915C              ; -------------------------------------------------------------------------------------------------------------
 723+ 915C              ;
 724+ 915C              ;   13/03/23
 725+ 915C              ;
 726+ 915C              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 915C              ;
 728+ 915C              ;   DESTRUYE: HL,BC,DE y A.
 729+ 915C
 730+ 915C 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 915F 7E               ld a,(hl)
 732+ 9160 A7               and a
 733+ 9161 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9162
 735+ 9162 44               ld b,h
 736+ 9163 4D               ld c,l
 737+ 9164 2A 24 89         ld hl,(Stack_snapshot_disparos)
 738+ 9167 E5               push hl
 739+ 9168 A7               and a
 740+ 9169 ED 42            sbc hl,bc
 741+ 916B E5               push hl
 742+ 916C C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 916D
 744+ 916D E1               pop hl
 745+ 916E 54               ld d,h
 746+ 916F 5D               ld e,l
 747+ 9170 1B               dec de
 748+ 9171 ED B8            lddr                                                ; Limpiamos.
 749+ 9173
 750+ 9173 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 9176 22 24 89         ld (Stack_snapshot_disparos),hl
 752+ 9179
 753+ 9179 C9               ret
 754+ 917A
 755+ 917A              ; -------------------------------------------------------------------------------------------------------------
 756+ 917A              ;
 757+ 917A              ;   18/07/23
 758+ 917A              ;
 759+ 917A
 760+ 917A              Motor_de_disparos
 761+ 917A
 762+ 917A              ; Gestiona DISPAROS DE AMADEUS.
 763+ 917A
 764+ 917A 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 917D 2A 2E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9180
 767+ 9180 CD 5A 8D     2 call Extrae_address
 768+ 9183 7E               ld a,(hl)
 769+ 9184 A7               and a
 770+ 9185 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9187
 772+ 9187              ; ----- ----- ----- ----- ----- -----
 773+ 9187
 774+ 9187 C5               push bc
 775+ 9188 CD 4C 92         call foto_disparo_a_borrar
 776+ 918B
 777+ 918B              ; Existe colisión con este disparo???
 778+ 918B
 779+ 918B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 918C 7E               ld a,(hl)
 781+ 918D 2B               dec hl
 782+ 918E E6 01            and 1
 783+ 9190 28 1D            jr z,9F
 784+ 9192
 785+ 9192              ;   En este punto:
 786+ 9192              ;
 787+ 9192              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9192              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9192              ;   _con la entidad).
 790+ 9192              ;
 791+ 9192              ;   Disparo_2A defw 0                                ; Control.
 792+ 9192              ;    defw 0                                          ; Puntero objeto.
 793+ 9192              ;    defw 0                                          ; Puntero de impresión.
 794+ 9192              ;    defw 0                                          ; Rutina de impresión.
 795+ 9192
 796+ 9192 E5               push hl
 797+ 9193
 798+ 9193 06 04            ld b,4
 799+ 9195 23           19 inc hl
 800+ 9196 10 FD            djnz 19B
 801+ 9198
 802+ 9198 CD 5A 8D         call Extrae_address
 803+ 919B CD 99 9D         call Genera_coordenadas_disparo
 804+ 919E
 805+ 919E              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 919E
 807+ 919E 21 33 89         ld hl,Coordenadas_disparo_certero
 808+ 91A1 72               ld (hl),d
 809+ 91A2 23               inc hl
 810+ 91A3 73               ld (hl),e
 811+ 91A4
 812+ 91A4              ; Elimino el disparo de la base de datos.
 813+ 91A4
 814+ 91A4 E1               pop hl
 815+ 91A5 CD CB 92         call Elimina_disparo_de_base_de_datos
 816+ 91A8 21 30 89         ld hl,Impacto2
 817+ 91AB CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 91AD
 819+ 91AD 18 06            jr 11F
 820+ 91AF
 821+ 91AF CD 75 92     9 call Mueve_disparo
 822+ 91B2 CD 4C 92         call foto_disparo_a_borrar
 823+ 91B5
 824+ 91B5 C1           11 pop bc
 825+ 91B6 18 04            jr 7F
 826+ 91B8
 827+ 91B8              ; ----- ----- ----- ----- ----- -----
 828+ 91B8
 829+ 91B8 ED 42        1 sbc hl,bc
 830+ 91BA 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 91BC
 832+ 91BC 2A 2E 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 91BF 23               inc hl
 834+ 91C0 23               inc hl
 835+ 91C1 22 2E 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 91C4 18 BA            jr 2B
 837+ 91C6
 838+ 91C6 CD DF 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 91C9              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 91C9
 841+ 91C9              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 91C9
 843+ 91C9 01 6A 85         ld bc,Disparo_11
 844+ 91CC 2A 2C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 91CF
 846+ 91CF CD 5A 8D     5 call Extrae_address
 847+ 91D2 7E               ld a,(hl)
 848+ 91D3 A7               and a
 849+ 91D4 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 91D6
 851+ 91D6              ; ----- ----- ----- ----- ----- -----
 852+ 91D6
 853+ 91D6 C5               push bc
 854+ 91D7 CD 4C 92         call foto_disparo_a_borrar
 855+ 91DA
 856+ 91DA              ; Existe colisión con este disparo???
 857+ 91DA
 858+ 91DA 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 91DB 7E               ld a,(hl)
 860+ 91DC 2B               dec hl
 861+ 91DD E6 01            and 1
 862+ 91DF 28 4D            jr z,10F
 863+ 91E1
 864+ 91E1              ;! La colisión se produce con Amadeus???
 865+ 91E1              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 91E1
 867+ 91E1 E5               push hl
 868+ 91E2
 869+ 91E2 06 04            ld b,4
 870+ 91E4 23           16 inc hl
 871+ 91E5 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 91E7
 873+ 91E7 CD 5A 8D         call Extrae_address
 874+ 91EA CD 99 9D         call Genera_coordenadas_disparo
 875+ 91ED
 876+ 91ED 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 91EE FE 16            cp $16
 878+ 91F0 38 2A            jr c,15F
 879+ 91F2
 880+ 91F2
 881+ 91F2              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 91F2
 883+ 91F2 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 91F3
 885+ 91F3              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 91F3
 887+ 91F3 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 91F6
 889+ 91F6              ; Coordenada X de Amadeus en D.
 890+ 91F6
 891+ 91F6 7D               ld a,l
 892+ 91F7 E6 1F            and $1F
 893+ 91F9 57               ld d,a
 894+ 91FA
 895+ 91FA 21 86 85         ld hl,Amadeus_db+8
 896+ 91FD 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 91FE
 898+ 91FE 21 35 89         ld hl,Coordenadas_X_Amadeus
 899+ 9201 CD C7 90         call Guarda_coordenadas_X
 900+ 9204
 901+ 9204 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9205
 903+ 9205              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9205
 905+ 9205 06 02            ld b,2
 906+ 9207 C5           20 push bc
 907+ 9208
 908+ 9208 06 03            ld b,3
 909+ 920A 21 35 89         ld hl,Coordenadas_X_Amadeus
 910+ 920D 7E           18 ld a,(hl)
 911+ 920E BA               cp d
 912+ 920F 20 04            jr nz,17F
 913+ 9211
 914+ 9211              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9211
 916+ 9211 C1               pop bc
 917+ 9212 E1               pop hl
 918+ 9213 18 0D            jr 14F
 919+ 9215
 920+ 9215 23           17 inc hl
 921+ 9216 10 F5            djnz 18B
 922+ 9218
 923+ 9218 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9219
 925+ 9219 C1               pop bc
 926+ 921A 10 EB            djnz 20B
 927+ 921C
 928+ 921C
 929+ 921C              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 921C              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 921C
 932+ 921C E1           15 pop hl
 933+ 921D 23               inc hl
 934+ 921E 35               dec (hl)
 935+ 921F 2B               dec hl
 936+ 9220 18 0C            jr 10F
 937+ 9222
 938+ 9222              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9222              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9222
 941+ 9222 E5           14 push hl
 942+ 9223 CD CB 92         call Elimina_disparo_de_base_de_datos
 943+ 9226 21 30 89         ld hl,Impacto2
 944+ 9229 CB CE            set 1,(hl)
 945+ 922B E1               pop hl
 946+ 922C 18 06            jr 12F
 947+ 922E
 948+ 922E              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 922E
 950+ 922E CD 75 92     10 call Mueve_disparo
 951+ 9231 CD 4C 92         call foto_disparo_a_borrar
 952+ 9234 C1           12 pop bc
 953+ 9235
 954+ 9235 18 04            jr 8F
 955+ 9237
 956+ 9237              ; ----- ----- ----- ----- ----- -----
 957+ 9237
 958+ 9237 ED 42        4 sbc hl,bc
 959+ 9239 28 0A            jr z,6F
 960+ 923B
 961+ 923B 2A 2C 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 923E 23               inc hl
 963+ 923F 23               inc hl
 964+ 9240 22 2C 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9243 18 8A            jr 5B
 966+ 9245
 967+ 9245 CD D8 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9248 CD D0 90         call Limpia_Coordenadas_X
 969+ 924B C9               ret
 970+ 924C
 971+ 924C              ; ------------------------------------------------------------------
 972+ 924C
 973+ 924C              foto_disparo_a_borrar
 974+ 924C
 975+ 924C 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 924D A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 924E C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 924F
 979+ 924F E5               push hl
 980+ 9250 23               inc hl
 981+ 9251 23               inc hl
 982+ 9252 ED 73 1C 89      ld (Stack),sp
 983+ 9256 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9257 FD E1            pop iy
 985+ 9259 DD E1            pop ix
 986+ 925B E1               pop hl
 987+ 925C ED 7B 1C 89      ld sp,(Stack)
 988+ 9260 3A 0B 89         ld a,(Ctrl_1)
 989+ 9263 CB C7            set 0,a
 990+ 9265 32 0B 89         ld (Ctrl_1),a
 991+ 9268 CD 16 71         call Guarda_foto_registros
 992+ 926B 3A 0B 89         ld a,(Ctrl_1)
 993+ 926E CB 87            res 0,a
 994+ 9270 32 0B 89         ld (Ctrl_1),a
 995+ 9273 E1               pop hl
 996+ 9274 C9               ret
 997+ 9275
 998+ 9275              ;---------------------------------------------------
 999+ 9275              ;
1000+ 9275              ;   18/07/23
1001+ 9275              ;
1002+ 9275
1003+ 9275              Mueve_disparo
1004+ 9275
1005+ 9275              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9275              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9275              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9275
1009+ 9275 E5               push hl
1010+ 9276
1011+ 9276 7E               ld a,(hl)
1012+ 9277
1013+ 9277 06 04            ld b,4
1014+ 9279 23           1 inc hl
1015+ 927A 10 FD            djnz 1B
1016+ 927C
1017+ 927C              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 927C
1019+ 927C CD 5A 8D         call Extrae_address
1020+ 927F
1021+ 927F E6 01            and 1
1022+ 9281 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9283
1024+ 9283              ; Disparo hacia arriba, (Amadeus).
1025+ 9283
1026+ 9283              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9283              ; _ de la dificultad.
1028+ 9283
1029+ 9283 CD D5 96         call PreviousScan
1030+ 9286 CD D5 96         call PreviousScan
1031+ 9289 CD D5 96         call PreviousScan
1032+ 928C CD D5 96         call PreviousScan
1033+ 928F
1034+ 928F              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 928F
1036+ 928F 7C               ld a,h
1037+ 9290 FE 40            cp $40
1038+ 9292 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9294
1040+ 9294              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9294
1042+ 9294 EB               ex de,hl
1043+ 9295 06 04            ld b,4
1044+ 9297 2B           6 dec hl
1045+ 9298 10 FD            djnz 6B
1046+ 929A
1047+ 929A CD CB 92         call Elimina_disparo_de_base_de_datos
1048+ 929D E1               pop hl
1049+ 929E 18 10            jr 7F
1050+ 92A0
1051+ 92A0              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 92A0              ; HL contiene el puntero de impresión del disparo.
1053+ 92A0              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 92A0
1055+ 92A0 D5           3 push de
1056+ 92A1 C5               push bc
1057+ 92A2
1058+ 92A2 CD 5E 90         call Comprueba_Colision
1059+ 92A5
1060+ 92A5              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 92A5
1062+ 92A5 78               ld a,b
1063+ 92A6
1064+ 92A6 C1               pop bc
1065+ 92A7 D1               pop de
1066+ 92A8
1067+ 92A8 EB               ex de,hl
1068+ 92A9
1069+ 92A9 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 92AA 23               inc hl                                      ; _ movimiento.
1071+ 92AB 72               ld (hl),d
1072+ 92AC
1073+ 92AC E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 92AD
1075+ 92AD 23               inc hl                                      ; _ en curso.
1076+ 92AE 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 92AF 2B               dec hl
1078+ 92B0
1079+ 92B0 C9           7 ret
1080+ 92B1
1081+ 92B1              ; Disparo hacia abajo, (Entidad).
1082+ 92B1
1083+ 92B1 3A 3B 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 92B4 47               ld b,a
1085+ 92B5
1086+ 92B5 CD C6 96     4 call NextScan
1087+ 92B8 10 FB            djnz 4B
1088+ 92BA
1089+ 92BA              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 92BA
1091+ 92BA 7C               ld a,h
1092+ 92BB FE 58            cp $58
1093+ 92BD 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 92BF
1095+ 92BF EB               ex de,hl
1096+ 92C0 06 04            ld b,4
1097+ 92C2 2B           5 dec hl
1098+ 92C3 10 FD            djnz 5B
1099+ 92C5
1100+ 92C5 CD CB 92         call Elimina_disparo_de_base_de_datos
1101+ 92C8 E1               pop hl
1102+ 92C9 18 E5            jr 7B
1103+ 92CB
1104+ 92CB              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 92CB
1106+ 92CB 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 92CE AF               xor a
1108+ 92CF 77               ld (hl),a
1109+ 92D0 54               ld d,h
1110+ 92D1 5D               ld e,l
1111+ 92D2 13               inc de
1112+ 92D3 ED B0            ldir
1113+ 92D5 C9               ret
1114+ 92D6
1115+ 92D6              ; -----------------------------------------------------------------
1116+ 92D6              ;
1117+ 92D6              ;   7/12/23
1118+ 92D6              ;
1119+ 92D6
1120+ 92D6 3A 30 89     Selector_de_impactos ld a,(Impacto2)
1121+ 92D9 A7               and a
1122+ 92DA C8               ret z
1123+ 92DB
1124+ 92DB              ; Analizamos si hay impacto por disparos.
1125+ 92DB
1126+ 92DB              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 92DB
1128+ 92DB CB 4F            bit 1,a
1129+ 92DD 28 07            jr z,1F
1130+ 92DF
1131+ 92DF 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 92E2 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 92E4 18 08            jr 2F
1134+ 92E6
1135+ 92E6 CB 47        1 bit 0,a
1136+ 92E8 C8               ret z
1137+ 92E9
1138+ 92E9              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 92E9
1140+ 92E9 21 0B 89         ld hl,Ctrl_1
1141+ 92EC CB D6            set 2,(hl)
1142+ 92EE
1143+ 92EE C9           2 ret
1144+ 92EF
1145+ 92EF              ; -----------------------------------------------------------------
1146+ 92EF              ;
1147+ 92EF              ;   25/04/23
1148+ 92EF              ;
1149+ 92EF
1150+ 92EF              Determina_resultado_comparativa
1151+ 92EF
1152+ 92EF              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 92EF              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 92EF              ;
1155+ 92EF              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 92EF              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 92EF              ;
1158+ 92EF              ;   SBC HL,DE
1159+ 92EF
1160+ 92EF              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 92EF              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 92EF
1163+ 92EF              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 92EF              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 92EF
1166+ 92EF
1167+ 92EF 3A DA 88         ld a,(Cuad_objeto)
1168+ 92F2 FE 02            cp 2
1169+ 92F4 28 26            jr z,2F
1170+ 92F6 38 24            jr c,2F
1171+ 92F8
1172+ 92F8              ; Cuadrantes 3º y 4º
1173+ 92F8
1174+ 92F8 E6 01            and 1
1175+ 92FA 28 10            jr z,4F
1176+ 92FC
1177+ 92FC              ; Cuadrante 3º
1178+ 92FC
1179+ 92FC 7C               ld a,h
1180+ 92FD 06 00            ld b,0
1181+ 92FF
1182+ 92FF CD 8A 93         call Compara_cositas_H3
1183+ 9302
1184+ 9302 04               inc b
1185+ 9303 05               dec b
1186+ 9304 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9305
1188+ 9305 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9306 06 00            ld b,0
1190+ 9308
1191+ 9308 CD 9C 93         call Compara_cositas_L3
1192+ 930B C9               ret
1193+ 930C
1194+ 930C              ; Cuadrante 4º
1195+ 930C
1196+ 930C 7C           4 ld a,h
1197+ 930D 06 00            ld b,0
1198+ 930F
1199+ 930F CD AE 93         call Compara_cositas_H4
1200+ 9312
1201+ 9312 04               inc b
1202+ 9313 05               dec b
1203+ 9314 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9315
1205+ 9315 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9316 06 00            ld b,0
1207+ 9318
1208+ 9318 CD C4 93         call Compara_cositas_L4
1209+ 931B C9               ret
1210+ 931C
1211+ 931C              ; Cuadrantes 1º y 2º.
1212+ 931C
1213+ 931C 28 10        2 jr z,3F
1214+ 931E
1215+ 931E              ; 1er Cuadrante
1216+ 931E
1217+ 931E 7C               ld a,h
1218+ 931F 06 00            ld b,0
1219+ 9321
1220+ 9321 CD 62 93         call Compara_cositas_H1
1221+ 9324
1222+ 9324 04               inc b
1223+ 9325 05               dec b
1224+ 9326 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9327
1226+ 9327 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9328 06 00            ld b,0
1228+ 932A
1229+ 932A CD 78 93         call Compara_cositas_L1
1230+ 932D C9               ret
1231+ 932E
1232+ 932E
1233+ 932E              ; 2º Cuadrante
1234+ 932E
1235+ 932E 7C           3 ld a,h
1236+ 932F 06 00            ld b,0
1237+ 9331
1238+ 9331 CD 3E 93         call Compara_cositas_H2
1239+ 9334
1240+ 9334 04               inc b
1241+ 9335 05               dec b
1242+ 9336 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9337
1244+ 9337 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9338 06 00            ld b,0
1246+ 933A
1247+ 933A CD 50 93         call Compara_cositas_L2
1248+ 933D C9               ret
1249+ 933E
1250+ 933E A7           Compara_cositas_H2 and a
1251+ 933F 28 0D            jr z,1F
1252+ 9341              ;    cp $fd
1253+ 9341              ;    jr z,1F
1254+ 9341              ;    cp $fe
1255+ 9341              ;    jr z,1F
1256+ 9341 FE FF            cp $ff
1257+ 9343 28 09            jr z,1F
1258+ 9345 FE 01            cp $01
1259+ 9347 28 05            jr z,1F
1260+ 9349 FE 02            cp $02
1261+ 934B 28 01            jr z,1F
1262+ 934D C0               ret nz
1263+ 934E 04           1 inc b
1264+ 934F C9               ret
1265+ 9350
1266+ 9350 A7           Compara_cositas_L2 and a
1267+ 9351 28 0D            jr z,1F
1268+ 9353              ;    cp $fd
1269+ 9353              ;    jr z,1F
1270+ 9353 FE FE            cp $fe
1271+ 9355 28 09            jr z,1F
1272+ 9357 FE FF            cp $ff
1273+ 9359 28 05            jr z,1F
1274+ 935B FE 01            cp $01
1275+ 935D 28 01            jr z,1F
1276+ 935F              ;    cp $02
1277+ 935F              ;    jr z,1F
1278+ 935F C0               ret nz
1279+ 9360 04           1 inc b
1280+ 9361 C9               ret
1281+ 9362
1282+ 9362 A7           Compara_cositas_H1 and a
1283+ 9363 28 11            jr z,1F
1284+ 9365              ;    cp $fd
1285+ 9365              ;    jr z,1F
1286+ 9365              ;    cp $fe
1287+ 9365              ;    jr z,1F
1288+ 9365 FE FF            cp $ff
1289+ 9367 28 0D            jr z,1F
1290+ 9369 FE 01            cp $01
1291+ 936B 28 09            jr z,1F
1292+ 936D FE 02            cp $02
1293+ 936F 28 05            jr z,1F
1294+ 9371 FE 03            cp $03
1295+ 9373 28 01            jr z,1F
1296+ 9375 C0               ret nz
1297+ 9376 04           1 inc b
1298+ 9377 C9               ret
1299+ 9378
1300+ 9378 A7           Compara_cositas_L1 and a
1301+ 9379 28 0D            jr z,1F
1302+ 937B              ;    cp $fd
1303+ 937B              ;    jr z,1F
1304+ 937B              ;    cp $fe
1305+ 937B              ;    jr z,1F
1306+ 937B              ;    cp $ff
1307+ 937B              ;    jr z,1F
1308+ 937B FE 01            cp $01
1309+ 937D 28 09            jr z,1F
1310+ 937F FE 02            cp $02
1311+ 9381 28 05            jr z,1F
1312+ 9383 FE 03            cp $03
1313+ 9385 28 01            jr z,1F
1314+ 9387 C0               ret nz
1315+ 9388 04           1 inc b
1316+ 9389 C9               ret
1317+ 938A
1318+ 938A A7           Compara_cositas_H3 and a
1319+ 938B 28 0D            jr z,1F
1320+ 938D              ;    cp $fd
1321+ 938D              ;    jr z,1F
1322+ 938D FE FE            cp $fe
1323+ 938F 28 09            jr z,1F
1324+ 9391 FE FF            cp $ff
1325+ 9393 28 05            jr z,1F
1326+ 9395 FE 01            cp $01
1327+ 9397 28 01            jr z,1F
1328+ 9399              ;    cp $02
1329+ 9399              ;    jr z,1F
1330+ 9399              ;    cp $03
1331+ 9399              ;    jr z,1F
1332+ 9399 C0               ret nz
1333+ 939A 04           1 inc b
1334+ 939B C9               ret
1335+ 939C
1336+ 939C A7           Compara_cositas_L3 and a
1337+ 939D 28 0D            jr z,1F
1338+ 939F              ;    cp $fd
1339+ 939F              ;    jr z,1F
1340+ 939F              ;    cp $fe
1341+ 939F              ;    jr z,1F
1342+ 939F              ;    cp $ff
1343+ 939F              ;    jr z,1F
1344+ 939F FE 01            cp $01
1345+ 93A1 28 09            jr z,1F
1346+ 93A3 FE 02            cp $02
1347+ 93A5 28 05            jr z,1F
1348+ 93A7 FE 03            cp $03
1349+ 93A9 28 01            jr z,1F
1350+ 93AB C0               ret nz
1351+ 93AC 04           1 inc b
1352+ 93AD C9               ret
1353+ 93AE
1354+ 93AE A7           Compara_cositas_H4 and a
1355+ 93AF 28 11            jr z,1F
1356+ 93B1 FE FD            cp $fd
1357+ 93B3 28 0D            jr z,1F
1358+ 93B5 FE FE            cp $fe
1359+ 93B7 28 09            jr z,1F
1360+ 93B9 FE FF            cp $ff
1361+ 93BB 28 05            jr z,1F
1362+ 93BD FE 01            cp $01
1363+ 93BF 28 01            jr z,1F
1364+ 93C1              ;    cp $02
1365+ 93C1              ;    jr z,1F
1366+ 93C1              ;    cp $03
1367+ 93C1              ;    jr z,1F
1368+ 93C1 C0               ret nz
1369+ 93C2 04           1 inc b
1370+ 93C3 C9               ret
1371+ 93C4
1372+ 93C4 A7           Compara_cositas_L4 and a
1373+ 93C5 28 0D            jr z,1F
1374+ 93C7              ;    cp $fd
1375+ 93C7              ;    jr z,1F
1376+ 93C7 FE FE            cp $fe
1377+ 93C9 28 09            jr z,1F
1378+ 93CB FE FF            cp $ff
1379+ 93CD 28 05            jr z,1F
1380+ 93CF FE 01            cp $01
1381+ 93D1 28 01            jr z,1F
1382+ 93D3              ;    cp $02
1383+ 93D3              ;    jr z,1F
1384+ 93D3              ;    cp $03
1385+ 93D3              ;    jr z,1F
1386+ 93D3 C0               ret nz
1387+ 93D4 04           1 inc b
1388+ 93D5 C9               ret
# file closed: Disparo.asm
1868  93D6              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93D6              ; ******************************************************************************************************************************************************************************************
   2+ 93D6              ;
   3+ 93D6              ; 26/06/23
   4+ 93D6              ;
   5+ 93D6              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93D6
   7+ 93D6              Draw
   8+ 93D6
   9+ 93D6 CD BA 96     	call Prepara_draw
  10+ 93D9 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 93DA A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 93DB 28 05        	jr z,2F
  13+ 93DD
  14+ 93DD 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 93E0 18 0C        	jr 1F
  16+ 93E2
  17+ 93E2 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 93E5 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 93E8 CD 77 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 93EB              ;													; _la esquina superior izquierda de la pantalla.
  21+ 93EB CD 2A A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 93EE
  23+ 93EE 3A F6 88     1 ld a,(Ctrl_0)
  24+ 93F1 CB 6F        	bit 5,a
  25+ 93F3 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 93F5
  27+ 93F5 CD 0D 94     	call Comprueba_limite_horizontal
  28+ 93F8 CD 9D 94     	call Comprueba_limite_vertical
  29+ 93FB
  30+ 93FB              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 93FB              ; -----------------------
  32+ 93FB              ; -----------------------
  33+ 93FB              ; -----------------------
  34+ 93FB
  35+ 93FB CD EA 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 93FE CD 21 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 9401 CD 80 96     	call Define_rutina_de_impresion
  38+ 9404
  39+ 9404 3A F6 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9407 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9409 32 F6 88     	ld (Ctrl_0),a
  42+ 940C
  43+ 940C C9           	ret
  44+ 940D
  45+ 940D              ; *******************************************************************************************************************************************************************************************
  46+ 940D              ;	21/01/23
  47+ 940D              ;
  48+ 940D              ; 	Comprueba_limite_horizontal.
  49+ 940D              ;
  50+ 940D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 940D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 940D              ;
  53+ 940D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 940D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 940D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 940D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 940D
  58+ 940D
  59+ 940D
  60+ 940D 3A F6 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9410 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9412 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9414 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9416 32 F6 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9419 18 09            jr 6F
  66+ 941B CB 5F        1 bit 3,a
  67+ 941D 28 0A            jr z,2F
  68+ 941F E6 F7            and $f7
  69+ 9421 32 F6 88         ld (Ctrl_0),a
  70+ 9424 CD 77 95     6 call Inicializacion
  71+ 9427 18 5B            jr 5F
  72+ 9429 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 942A
  74+ 942A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 942A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 942A
  77+ 942A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 942B 2A 04 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 942E CD D9 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9431 67           	ld h,a
  81+ 9432 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9433 CD D9 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9436 67           	ld h,a
  84+ 9437 A7           	and a
  85+ 9438 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 943A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 943B 3A DA 88     	ld a,(Cuad_objeto)
  88+ 943E FE 02        	cp 2
  89+ 9440 38 1E        	jr c,3F
  90+ 9442 28 1C        	jr z,3F
  91+ 9444 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9445 28 23            jr z,7F
  93+ 9447 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9449 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 944B E1           	pop hl
  96+ 944C
  97+ 944C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 944C              ; _para indicar con E="2" en caso necesario.
  99+ 944C
 100+ 944C E5               push hl
 101+ 944D C5               push bc
 102+ 944E CD D9 99     	call calcula_tercio
 103+ 9451 FE 01        	cp 1
 104+ 9453 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9455 CD 85 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9458 28 26            jr z,9F
 107+ 945A 38 24            jr c,9F
 108+ 945C 1E 00        11 ld e,0
 109+ 945E 18 22            jr 8F
 110+ 9460 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9461 28 07        	jr z, 7F
 112+ 9463 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9465 1E 00         	ld e,0
 114+ 9467 E1           	pop hl
 115+ 9468 18 04        	jr 4F
 116+ 946A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 946C 18 15            jr 10F
 118+ 946E
 119+ 946E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 946E              ; _para indicar con E="2" en caso necesario.
 121+ 946E
 122+ 946E E5           4 push hl
 123+ 946F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9470 CD D9 99     	call calcula_tercio
 125+ 9473 FE 01        	cp 1
 126+ 9475 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9477 CD 85 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 947A 28 04            jr z,9F
 129+ 947C 30 02            jr nc,9F
 130+ 947E 18 02        	jr 8F
 131+ 9480 1E 02        9 ld e,2
 132+ 9482 C1           8 pop bc
 133+ 9483 E1           10 pop hl
 134+ 9484 C9           5 ret
 135+ 9485
 136+ 9485              ; --------------------
 137+ 9485              ;
 138+ 9485              ; 25/08/22
 139+ 9485
 140+ 9485 CD D9 99     Comprueba_centro call calcula_tercio
 141+ 9488 67               ld h,a
 142+ 9489 08           	ex af,af
 143+ 948A FE 02        	cp 2
 144+ 948C 38 07        	jr c,1F
 145+ 948E 28 05        	jr z,1F
 146+ 9490 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9493 18 03        	jr 2F
 148+ 9495 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9498 08           2 ex af,af
 150+ 9499 A7               and a
 151+ 949A ED 42            sbc hl,bc
 152+ 949C C9               ret
 153+ 949D
 154+ 949D              ; *********************************************************************************************************************************************************************************************
 155+ 949D              ;
 156+ 949D              ;   16/8/22
 157+ 949D              ;
 158+ 949D              ;	Comprueba_limite_vertical
 159+ 949D              ;
 160+ 949D              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 949D              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 949D              ;
 163+ 949D
 164+ 949D 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 94A0 7D           	ld a,l
 166+ 94A1 E6 1F        	and $1F
 167+ 94A3 57           	ld d,a
 168+ 94A4 3A 06 89     	ld a,(Limite_vertical)
 169+ 94A7 BA           	cp d 											; Límite - Posición.
 170+ 94A8 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 94A9 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 94AC CB 47        	bit 0,a
 173+ 94AE 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 94B0
 175+ 94B0              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 94B0
 177+ 94B0 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 94B1 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 94B3
 180+ 94B3              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 94B3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 94B3
 183+ 94B3 3A CC 88         ld a,(Coordenada_X)
 184+ 94B6 16 0F            ld d,Centro_izquierda
 185+ 94B8 A7               and a
 186+ 94B9 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 94BA 28 1E            jr z,3F
 188+ 94BC 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 94BE              ;                                                    ; _salimos sin modificar nada.
 190+ 94BE 18 0E            jr 2F
 191+ 94C0 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 94C1 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 94C3
 194+ 94C3              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 94C3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 94C3
 197+ 94C3 3A CC 88         ld a,(Coordenada_X)
 198+ 94C6 16 10            ld d,Centro_derecha
 199+ 94C8 A7               and a
 200+ 94C9 92               sub d
 201+ 94CA 28 0E            jr z,3F
 202+ 94CC 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 94CE              ;                                                    ; _salimos sin modificar nada.
 204+ 94CE CB 43        2 bit 0,e
 205+ 94D0 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 94D2 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 94D3 CD 67 95         call Modificaccionne
 208+ 94D6 C1           	pop bc
 209+ 94D7 CD 77 95         call Inicializacion
 210+ 94DA C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 94DB
 212+ 94DB              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 94DB
 214+ 94DB C5           4 push bc
 215+ 94DC 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 94DF 0A           	ld a,(bc)
 217+ 94E0 3D           	dec a
 218+ 94E1 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 94E2 7D           	ld a,l
 220+ 94E3 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 94E4 CB 47        	bit 0,a
 222+ 94E6 28 03        	jr z,5F
 223+ 94E8 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 94E9 18 2E        	jr 7F
 225+ 94EB
 226+ 94EB              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 94EB
 228+ 94EB 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 94EC F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 94ED 3A F6 88     	ld a,(Ctrl_0)
 231+ 94F0 CB 4F        	bit 1,a
 232+ 94F2 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 94F4 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 94F5
 235+ 94F5              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 94F5
 237+ 94F5 1C               inc e
 238+ 94F6 1D               dec e
 239+ 94F7 20 07            jr nz,12F
 240+ 94F9 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 94FA 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 94FB 22 C8 88     	ld (Posicion_actual),hl
 243+ 94FE 18 44        13 jr 9F
 244+ 9500 CB 43        12 bit 0,e
 245+ 9502 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9504              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9504 C1           	pop bc
 248+ 9505 18 D3        	jr 3B
 249+ 9507 80           14 add b
 250+ 9508 6F               ld l,a
 251+ 9509 22 C8 88     	ld (Posicion_actual),hl
 252+ 950C CD 67 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 950F 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9511 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9513 32 F6 88         ld (Ctrl_0),a
 256+ 9516 F1           	pop af
 257+ 9517 18 2B        	jr 9F
 258+ 9519
 259+ 9519              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9519
 261+ 9519 F5           7 push af
 262+ 951A 3A F6 88     	ld a,(Ctrl_0)
 263+ 951D CB 47        	bit 0,a
 264+ 951F 20 1D        	jr nz,8F
 265+ 9521 F1           	pop af
 266+ 9522
 267+ 9522              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9522
 269+ 9522 1C           	inc e
 270+ 9523 1D               dec e
 271+ 9524 20 07            jr nz,10F
 272+ 9526 90           	sub b
 273+ 9527 6F               ld l,a
 274+ 9528 22 C8 88     	ld (Posicion_actual),hl
 275+ 952B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 952D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 952D CB 43        10 bit 0,e
 278+ 952F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9531              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9531 C1           	pop bc
 281+ 9532 18 A6        	jr 3B
 282+ 9534 90           16 sub b
 283+ 9535 6F               ld l,a
 284+ 9536 22 C8 88     	ld (Posicion_actual),hl
 285+ 9539 CD 67 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 953C 18 06            jr 9F
 287+ 953E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9540 32 F6 88         ld (Ctrl_0),a
 289+ 9543 F1           	pop af
 290+ 9544 C1           9 pop bc
 291+ 9545 1E 00        	ld e,0
 292+ 9547 CD 77 95         call Inicializacion
 293+ 954A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 954B 08           	ex af,af
 295+ 954C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 954D 18 8B            jr 3B
 297+ 954F
 298+ 954F              ; --------------------
 299+ 954F
 300+ 954F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9551 CD D5 96     1 call PreviousScan
 302+ 9554 10 FB            djnz 1B
 303+ 9556 22 C8 88     	ld (Posicion_actual),hl
 304+ 9559 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 955A C9           	ret
 306+ 955B
 307+ 955B              ; --------------------
 308+ 955B
 309+ 955B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 955D CD C6 96     1 call NextScan
 311+ 9560 10 FB            djnz 1B
 312+ 9562 22 C8 88     	ld (Posicion_actual),hl
 313+ 9565 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9566 C9           	ret
 315+ 9567
 316+ 9567              ; --------------------
 317+ 9567              ;
 318+ 9567              ;	22/01/23
 319+ 9567              ;
 320+ 9567              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9567              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9567              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9567
 324+ 9567
 325+ 9567              Modificaccionne
 326+ 9567
 327+ 9567 3A DA 88     	ld a,(Cuad_objeto)
 328+ 956A FE 02        	cp 2
 329+ 956C CC 4F 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 956F DC 4F 95         call c,Modifica_Pos_actual
 331+ 9572 C8           	ret z
 332+ 9573 CD 5B 95         call Modifica_Pos_actual2
 333+ 9576 C9               ret
 334+ 9577
 335+ 9577              ; *************************************************************************************************************************************************************************************************
 336+ 9577              ;
 337+ 9577              ;	13/8/22
 338+ 9577              ;
 339+ 9577              ;	Inicializacion
 340+ 9577              ;
 341+ 9577              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9577              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9577              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9577              ;
 345+ 9577              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9577              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9577              ;	_ desaparece/aparece.
 348+ 9577
 349+ 9577              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9577              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9577              ;
 352+ 9577              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9577              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9577              ; 		   [E] ="0"
 355+ 9577
 356+ 9577              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9577
 358+ 9577 CD D9 99     Inicializacion call calcula_tercio
 359+ 957A 28 36        	jr z,primit
 360+ 957C E6 02        	and 2
 361+ 957E 20 07        	jr nz,segmit
 362+ 9580 7D           	ld a,l
 363+ 9581 FE 7F        	cp $7f
 364+ 9583 38 2D        	jr c,primit
 365+ 9585 28 2B        	jr z,primit
 366+ 9587 CD E4 95     segmit call column
 367+ 958A 38 13        	jr c,tercuad
 368+ 958C 3E 04        cuarcuad ld a,4
 369+ 958E 32 DA 88     	ld (Cuad_objeto),a
 370+ 9591 21 20 48     	ld hl,$4820
 371+ 9594 22 04 89     	ld (Limite_horizontal),hl
 372+ 9597 21 06 89     	ld hl,Limite_vertical
 373+ 959A 36 0D        	ld (hl),$0d
 374+ 959C 08           	ex af,af
 375+ 959D 18 3C        	jr 1F
 376+ 959F              tercuad
 377+ 959F 3E 03        	ld a,3
 378+ 95A1 32 DA 88     	ld (Cuad_objeto),a
 379+ 95A4 21 20 48     	ld hl,$4820
 380+ 95A7 22 04 89     	ld (Limite_horizontal),hl
 381+ 95AA 21 06 89     	ld hl,Limite_vertical
 382+ 95AD 36 12        	ld (hl),$12
 383+ 95AF 08           	ex af,af
 384+ 95B0 18 29        	jr 1F
 385+ 95B2 CD E4 95     primit call column
 386+ 95B5 38 13        	jr c, primcuad
 387+ 95B7              segcuad
 388+ 95B7 3E 02        	ld a,2
 389+ 95B9 32 DA 88     	ld (Cuad_objeto),a
 390+ 95BC 21 C0 4F     	ld hl,$4fc0
 391+ 95BF 22 04 89     	ld (Limite_horizontal),hl
 392+ 95C2 21 06 89     	ld hl,Limite_vertical
 393+ 95C5 36 0D        	ld (hl),$0d
 394+ 95C7 08           	ex af,af
 395+ 95C8 18 11        	jr 1F
 396+ 95CA              primcuad
 397+ 95CA 3E 01        	ld a,1
 398+ 95CC 32 DA 88     	ld (Cuad_objeto),a
 399+ 95CF 21 C0 4F     	ld hl,$4fc0
 400+ 95D2 22 04 89     	ld (Limite_horizontal),hl
 401+ 95D5 21 06 89     	ld hl,Limite_vertical
 402+ 95D8 36 12        	ld (hl),$12
 403+ 95DA 08           	ex af,af
 404+ 95DB CD 6E 9D     1 call Genera_coordenadas
 405+ 95DE 21 F6 88     	ld hl,Ctrl_0
 406+ 95E1 CB EE        	set 5,(hl)
 407+ 95E3 C9           	ret
 408+ 95E4
 409+ 95E4              ; ------------------------------------------------------------------------------------------------------------------
 410+ 95E4
 411+ 95E4              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 95E4              ;
 413+ 95E4              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 95E4
 415+ 95E4 7D           column ld a,l
 416+ 95E5 E6 1F        	and $1f
 417+ 95E7 FE 10         	cp $10
 418+ 95E9 C9            	ret
 419+ 95EA
 420+ 95EA              ; --------------------------------------------------------------------------------------------------------------------
 421+ 95EA              ;
 422+ 95EA              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 95EA              ;
 424+ 95EA              ; 14/12/22
 425+ 95EA              ;
 426+ 95EA              ;	Modifica: A y BC.
 427+ 95EA
 428+ 95EA 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 95ED E6 01        	and 1
 430+ 95EF 28 17        	jr z,1F
 431+ 95F1
 432+ 95F1              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 95F1
 434+ 95F1 3A CC 88     	ld a,(Coordenada_X)
 435+ 95F4 47           	ld b,a
 436+ 95F5 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 95F6 79           	ld a,c
 438+ 95F7 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 95F8 38 08        	jr c,2F
 440+ 95FA 47           	ld b,a
 441+ 95FB 79           	ld a,c
 442+ 95FC 90           	sub b
 443+ 95FD 32 03 89     	ld (Columnas),a
 444+ 9600 18 1B        	jr 4F
 445+ 9602 79           2 ld a,c
 446+ 9603 32 03 89     	ld (Columnas),a
 447+ 9606 18 15        	jr 4F
 448+ 9608
 449+ 9608              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 9608
 451+ 9608 3A CC 88     1 ld a,(Coordenada_X)
 452+ 960B 81           	add c
 453+ 960C 3D           	dec a
 454+ 960D D6 1F        	sub $1f
 455+ 960F 38 08        	jr c,3F
 456+ 9611 47           	ld b,a
 457+ 9612 79           	ld a,c
 458+ 9613 90           	sub b
 459+ 9614 32 03 89     	ld (Columnas),a
 460+ 9617 18 04        	jr 4F
 461+ 9619 79           3 ld a,c
 462+ 961A 32 03 89     	ld (Columnas),a
 463+ 961D D9           4 exx
 464+ 961E 4F           	ld c,a
 465+ 961F D9           	exx
 466+ 9620 C9            ret
 467+ 9621
 468+ 9621              ; --------------------------------------------------------------------------------------------------------------------
 469+ 9621              ;
 470+ 9621              ;   19/7/23
 471+ 9621              ;
 472+ 9621              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 9621              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 9621              ;
 475+ 9621              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 9621              ;			HL e IY Contienen (Puntero_objeto).
 477+ 9621              ;
 478+ 9621              ;	DESTRUYE: HL,B Y A.
 479+ 9621
 480+ 9621 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 9624 FE 02        	cp 2
 482+ 9626 38 18        	jr c,1F
 483+ 9628 28 16        	jr z,1F
 484+ 962A E6 01        	and 1
 485+ 962C 28 0D        	jr z,3F
 486+ 962E
 487+ 962E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 962E
 489+ 962E CD 74 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 9631
 491+ 9631 7D           9 ld a,l
 492+ 9632 E6 1F        	and $1f
 493+ 9634 28 2A        	jr z,7F
 494+ 9636 2B           	dec hl
 495+ 9637 10 F8        	djnz 9B
 496+ 9639 18 25        	jr 7F
 497+ 963B
 498+ 963B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 963B
 500+ 963B 2A C8 88     3 ld hl,(Posicion_actual)
 501+ 963E 18 20        	jr 7F
 502+ 9640
 503+ 9640 28 14        1 jr z,2F
 504+ 9642
 505+ 9642              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9642
 507+ 9642 CD 74 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 9645
 509+ 9645 7D           4 ld a,l
 510+ 9646 E6 1F        	and $1f
 511+ 9648 28 03        	jr z,6F
 512+ 964A 2B           	dec hl
 513+ 964B 10 F8        	djnz 4B
 514+ 964D 06 0F        6 ld b,15
 515+ 964F CD D5 96     5 call PreviousScan
 516+ 9652 10 FB        	djnz 5B
 517+ 9654 18 0A        	jr 7F
 518+ 9656
 519+ 9656              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 9656
 521+ 9656 CD 74 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 9659 06 0F        	ld b,15
 523+ 965B CD D5 96     8 call PreviousScan
 524+ 965E 10 FB        	djnz 8B
 525+ 9660
 526+ 9660 E5           7 push hl
 527+ 9661 DD E1        	pop ix
 528+ 9663
 529+ 9663 2A CA 88     	ld hl,(Puntero_objeto)
 530+ 9666 E5           	push hl
 531+ 9667 FD E1        	pop iy
 532+ 9669
 533+ 9669              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 9669
 535+ 9669 3A F6 88     	ld a,(Ctrl_0)
 536+ 966C CB 77        	bit 6,a
 537+ 966E C8           	ret z
 538+ 966F
 539+ 966F              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 966F              ; _ entidad / Amadeus´.
 541+ 966F
 542+ 966F DD 22 A8 85  	ld (p.imp.amadeus),ix
 543+ 9673
 544+ 9673 C9           	ret
 545+ 9674
 546+ 9674              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9674              ;
 548+ 9674              ;	2/1/23
 549+ 9674              ;
 550+ 9674              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9674              ;
 552+ 9674              ;	Tras esta rutina tenemos:
 553+ 9674              ;
 554+ 9674              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9674              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9674              ;
 557+ 9674              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9674
 559+ 9674 2A C8 88     Operandos ld hl,(Posicion_actual)
 560+ 9677 3A 03 89     	ld a,(Columnas)
 561+ 967A 3D           	dec a
 562+ 967B 20 01        	jr nz,1F
 563+ 967D 3C           	inc a
 564+ 967E 47           1 ld b,a
 565+ 967F C9           	ret
 566+ 9680
 567+ 9680              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9680              ;
 569+ 9680              ;	3/1/23
 570+ 9680              ;
 571+ 9680              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9680              ;
 573+ 9680              ;	Destruye: A,B,HL y DE.
 574+ 9680
 575+ 9680              Define_rutina_de_impresion
 576+ 9680
 577+ 9680 3A C7 88     	ld a,(Columns)
 578+ 9683 47           	ld b,a
 579+ 9684 3A 03 89     	ld a,(Columnas)
 580+ 9687 B8           	cp b
 581+ 9688 20 0D        	jr nz,2f
 582+ 968A
 583+ 968A              ;	La entidad se imprime entera.
 584+ 968A
 585+ 968A 21 A9 97     	ld hl, Indice_entidades_completas
 586+ 968D E6 01        	and 1
 587+ 968F 28 02        	jr z,1F
 588+ 9691
 589+ 9691 23           	inc hl
 590+ 9692 23           	inc hl
 591+ 9693
 592+ 9693 CD 5A 8D     1 call Extrae_address
 593+ 9696 C9           	ret		;	ret
 594+ 9697
 595+ 9697              ;	La entidad no se imprime entera en pantalla.
 596+ 9697
 597+ 9697 3A DA 88     2 ld a,(Cuad_objeto)
 598+ 969A E6 01        	and 1
 599+ 969C 28 17        	jr z,3F
 600+ 969E
 601+ 969E              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 969E
 603+ 969E 21 AD 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 96A1 3A C7 88     4 ld a,(Columns)
 605+ 96A4 E6 01        	and 1
 606+ 96A6 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 96A8
 608+ 96A8 23           	inc hl
 609+ 96A9 23           	inc hl
 610+ 96AA
 611+ 96AA 3A 03 89     	ld a,(Columnas)
 612+ 96AD E6 01        	and 1
 613+ 96AF 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 96B1
 615+ 96B1 23           	inc hl
 616+ 96B2 23           	inc hl
 617+ 96B3
 618+ 96B3 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 96B5
 620+ 96B5 21 B3 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 96B8 18 E7        	jr 4B
 622+ 96BA
 623+ 96BA              ; --------------------------------------------------------------------------------------------------------------------
 624+ 96BA              ;
 625+ 96BA              ;	Prepara_draw
 626+ 96BA              ;
 627+ 96BA              ;	Es una rutina de carga.
 628+ 96BA              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 96BA              ;
 630+ 96BA              ;	FUNCIONAMIENTO:
 631+ 96BA              ;
 632+ 96BA              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 96BA              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 96BA              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 96BA              ;
 636+ 96BA              ;	DESTRUYE:
 637+ 96BA              ;
 638+ 96BA              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 96BA
 640+ 96BA 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 96BD 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 96BE 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 96BF 4E           	ld c,(hl)
 644+ 96C0 2A C8 88     	ld hl,(Posicion_actual)
 645+ 96C3 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 96C5 C9           	ret
 647+ 96C6
 648+ 96C6              ;----------------------------------------------------------------------------------------------------------------
 649+ 96C6              ;
 650+ 96C6              ;	5/08/22
 651+ 96C6              ;
 652+ 96C6              ;   NextScan.
 653+ 96C6              ;
 654+ 96C6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 96C6              ;
 656+ 96C6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 96C6              ;
 658+ 96C6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 96C6              ;
 660+ 96C6              ;       DESTRUIDOS: AF y HL !!!
 661+ 96C6              ;
 662+ 96C6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 96C6              ;
 664+ 96C6
 665+ 96C6 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 96C7 7C               ld a,h
 667+ 96C8 E6 07            and 7
 668+ 96CA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 96CB
 670+ 96CB 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 96CC C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 96CE 6F               ld l,a
 673+ 96CF D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 96D0
 675+ 96D0 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 96D1 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 96D3 67               ld h,a
 678+ 96D4 C9               ret
 679+ 96D5
 680+ 96D5              ;----------------------------------------------------------------------------------------------------------------
 681+ 96D5              ;
 682+ 96D5              ;	5/08/22
 683+ 96D5              ;
 684+ 96D5              ;   PreviousScan.
 685+ 96D5              ;
 686+ 96D5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 96D5              ;
 688+ 96D5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 96D5              ;
 690+ 96D5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 96D5              ;
 692+ 96D5              ;       DESTRUIDOS: AF y HL !!!
 693+ 96D5              ;
 694+ 96D5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 96D5              ;
 696+ 96D5
 697+ 96D5 7C           PreviousScan ld a,h
 698+ 96D6 25               dec h               ; Dec H.
 699+ 96D7 E6 07            and 7
 700+ 96D9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 96DA
 702+ 96DA 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 96DB D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 96DD 6F               ld l,a
 705+ 96DE D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 96DF
 707+ 96DF 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 96E0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 96E2 67               ld h,a
 710+ 96E3 C9               ret
 711+ 96E4
 712+ 96E4              ; -----------------------------------------------------------------------------------
 713+ 96E4              ;
 714+ 96E4              ;	31/7/23
 715+ 96E4              ;
 716+ 96E4              ;	Rutina principal de pintado de entidades.
 717+ 96E4              ;	Extrae la foto del frame, (entidades).
 718+ 96E4
 719+ 96E4              Extrae_foto_entidades
 720+ 96E4
 721+ 96E4 21 01 70     	ld hl,Album_de_fotos+1
 722+ 96E7 7E           	ld a,(hl)
 723+ 96E8 A7           	and a
 724+ 96E9 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 96EA
 726+ 96EA              ;	No hay datos, (entidades para pintar en este frame).
 727+ 96EA
 728+ 96EA 3A 17 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96ED A7           	and a
 730+ 96EE C8           	ret z
 731+ 96EF
 732+ 96EF              ; -----------------------------------
 733+ 96EF
 734+ 96EF ED 73 1C 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96F3 31 00 70     	ld sp,Album_de_fotos
 736+ 96F6
 737+ 96F6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 96F8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 96F9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96FA
 741+ 96FA ED 73 1E 89  	ld (Stack_2),sp
 742+ 96FE ED 7B 1C 89  	ld sp,(Stack)
 743+ 9702
 744+ 9702              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9702
 746+ 9702 3E CD        	ld a,$cd
 747+ 9704 32 0C 97     	ld (Imprime),a
 748+ 9707 EB           	ex de,hl
 749+ 9708 22 0D 97     	ld (Imprime+1),hl
 750+ 970B EB           	ex de,hl
 751+ 970C
 752+ 970C              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 970C
 754+ 970C 00 00 00     Imprime db 0,0,0
 755+ 970F
 756+ 970F ED 73 1C 89  	ld (Stack),sp
 757+ 9713
 758+ 9713 3A 17 89     	ld a,(Numero_de_malotes)
 759+ 9716 3D           	dec a
 760+ 9717 28 09        	jr z,1F
 761+ 9719 32 17 89      	ld (Numero_de_malotes),a
 762+ 971C
 763+ 971C ED 7B 1E 89  	ld sp,(Stack_2)
 764+ 9720 18 D4        	jr 2B
 765+ 9722
 766+ 9722 AF           1 xor a
 767+ 9723 32 1E 89     	ld (Stack_2),a
 768+ 9726
 769+ 9726 C9           	ret
 770+ 9727
 771+ 9727              ; -----------------------------------------------------------------------------------
 772+ 9727              ;
 773+ 9727              ;	28/2/23
 774+ 9727              ;
 775+ 9727              ;	Pinta los disparos generados.
 776+ 9727
 777+ 9727              Extrae_foto_disparos
 778+ 9727
 779+ 9727 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 972A 7E               ld a,(hl)
 781+ 972B A7               and a
 782+ 972C C8               ret z
 783+ 972D
 784+ 972D 3A 2B 89     	ld a,(Numero_de_disparotes)
 785+ 9730 A7           	and a
 786+ 9731 C8           	ret z
 787+ 9732 ED 73 1C 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9736 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 9739
 790+ 9739 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 973B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 973C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 973D
 794+ 973D ED 73 1E 89  	ld (Stack_2),sp
 795+ 9741 ED 7B 1C 89  	ld sp,(Stack)
 796+ 9745
 797+ 9745              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9745
 799+ 9745 3E CD        	ld a,$cd
 800+ 9747 32 4F 97     	ld (Imprime2),a
 801+ 974A EB           	ex de,hl
 802+ 974B 22 50 97     	ld (Imprime2+1),hl
 803+ 974E EB           	ex de,hl
 804+ 974F
 805+ 974F              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 974F
 807+ 974F 00 00 00     Imprime2 db 0,0,0
 808+ 9752
 809+ 9752 3A 2B 89     	ld a,(Numero_de_disparotes)
 810+ 9755 3D           	dec a
 811+ 9756 28 09        	jr z,1F
 812+ 9758 32 2B 89      	ld (Numero_de_disparotes),a
 813+ 975B
 814+ 975B ED 7B 1E 89  	ld sp,(Stack_2)
 815+ 975F 18 D8        	jr 2B
 816+ 9761
 817+ 9761 AF           1 xor a
 818+ 9762 32 1E 89     	ld (Stack_2),a
 819+ 9765 C9           	ret
 820+ 9766
 821+ 9766              ; -----------------------------------------------------------------------------------
 822+ 9766              ;
 823+ 9766              ;	4/9/23
 824+ 9766              ;
 825+ 9766              ;	Rutina principal de pintado de Amadeus.
 826+ 9766              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 9766
 828+ 9766 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 9769 7E           	ld a,(hl)
 830+ 976A A7           	and a
 831+ 976B C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 976C
 833+ 976C 3A 17 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 976F A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9770 C8           	ret z
 836+ 9771
 837+ 9771              ; -----------------------------------
 838+ 9771
 839+ 9771 ED 73 1C 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9775 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 9778
 842+ 9778 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 977A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 977B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 977C
 846+ 977C ED 73 1E 89  	ld (Stack_2),sp
 847+ 9780 ED 7B 1C 89  	ld sp,(Stack)
 848+ 9784
 849+ 9784              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9784
 851+ 9784 3E CD        	ld a,$cd
 852+ 9786 32 8E 97     	ld (Imprime_Amadeus),a
 853+ 9789 EB           	ex de,hl
 854+ 978A 22 8F 97     	ld (Imprime_Amadeus+1),hl
 855+ 978D EB           	ex de,hl
 856+ 978E
 857+ 978E              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 978E
 859+ 978E 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9791
 861+ 9791 ED 73 1C 89  	ld (Stack),sp
 862+ 9795
 863+ 9795 3A 17 89     	ld a,(Numero_de_malotes)
 864+ 9798 3D           	dec a
 865+ 9799 28 09        	jr z,1F
 866+ 979B 32 17 89      	ld (Numero_de_malotes),a
 867+ 979E
 868+ 979E ED 7B 1E 89  	ld sp,(Stack_2)
 869+ 97A2 18 D4        	jr 2B
 870+ 97A4
 871+ 97A4 AF           1 xor a
 872+ 97A5 32 1E 89     	ld (Stack_2),a
 873+ 97A8
 874+ 97A8 C9           	ret
# file closed: Draw_XOR.asm
1869  97A9              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97A9              ;   índices de Rutinas de impresión.
   2+ 97A9
   3+ 97A9 B9 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97AB E6 97            defw Pinta_Amadeus_3x2
   5+ 97AD
   6+ 97AD 3C 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97AF DC 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97B1 90 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97B3
  10+ 97B3 66 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97B5 6A 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97B7 1E 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97B9
  14+ 97B9
  15+ 97B9              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97B9              ;
  17+ 97B9              ;   12/12/22
  18+ 97B9              ;
  19+ 97B9              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97B9              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97B9              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97B9              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97B9              ;
  24+ 97B9              ;   Modifica: DE y HL.
  25+ 97B9
  26+ 97B9 ED 73 1C 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97BD FD F9        	ld sp,iy
  28+ 97BF 06 10            ld b,16
  29+ 97C1 D1           1 pop de
  30+ 97C2 7B               ld a,e
  31+ 97C3 AE               xor (hl)
  32+ 97C4 77           	ld (hl),a
  33+ 97C5 23           	inc hl
  34+ 97C6 7A               ld a,d
  35+ 97C7 AE               xor (hl)
  36+ 97C8 77           	ld (hl),a
  37+ 97C9 2B           	dec hl
  38+ 97CA 24           	inc h
  39+ 97CB 7C               ld a,h
  40+ 97CC E6 07            and 7
  41+ 97CE 20 0A            jr nz,2F
  42+ 97D0 7D               ld a,l
  43+ 97D1 C6 20            add a,$20
  44+ 97D3 6F               ld l,a
  45+ 97D4 38 04            jr c,2F
  46+ 97D6 7C               ld a,h
  47+ 97D7 D6 08            sub 8
  48+ 97D9 67               ld h,a
  49+ 97DA 7C           2 ld a,h
  50+ 97DB FE 58            cp $58
  51+ 97DD 28 02            jr z,3F
  52+ 97DF 10 E0            djnz 1B
  53+ 97E1 ED 7B 1C 89  3 ld sp,(Stack)
  54+ 97E5 C9           	ret
  55+ 97E6
  56+ 97E6 ED 73 1C 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97EA FD F9        	ld sp,iy
  58+ 97EC 06 08            ld b,8
  59+ 97EE D1           1 pop de
  60+ 97EF 7B               ld a,e
  61+ 97F0 AE               xor (hl)
  62+ 97F1 77           	ld (hl),a
  63+ 97F2 23           	inc hl
  64+ 97F3 7A               ld a,d
  65+ 97F4 AE               xor (hl)
  66+ 97F5 77           	ld (hl),a
  67+ 97F6 23           	inc hl
  68+ 97F7 D1           	pop de
  69+ 97F8 7B               ld a,e
  70+ 97F9 AE               xor (hl)
  71+ 97FA 77           	ld (hl),a
  72+ 97FB 2B           	dec hl
  73+ 97FC 2B           	dec hl
  74+ 97FD 24           	inc h
  75+ 97FE 7C               ld a,h
  76+ 97FF E6 07            and 7
  77+ 9801 20 0A            jr nz,2F
  78+ 9803 7D               ld a,l
  79+ 9804 C6 20            add a,$20
  80+ 9806 6F               ld l,a
  81+ 9807 38 04            jr c,2F
  82+ 9809 7C               ld a,h
  83+ 980A D6 08            sub 8
  84+ 980C 67               ld h,a
  85+ 980D 7C           2 ld a,h
  86+ 980E FE 58            cp $58
  87+ 9810 28 25            jr z,4F
  88+ 9812 7A               ld a,d
  89+ 9813 AE               xor (hl)
  90+ 9814 77               ld (hl),a
  91+ 9815 D1           	pop de
  92+ 9816 23           	inc hl
  93+ 9817 7B               ld a,e
  94+ 9818 AE               xor (hl)
  95+ 9819 77           	ld (hl),a
  96+ 981A 23           	inc hl
  97+ 981B 7A               ld a,d
  98+ 981C AE               xor (hl)
  99+ 981D 77           	ld (hl),a
 100+ 981E 2B           	dec hl
 101+ 981F 2B           	dec hl
 102+ 9820 24           	inc h
 103+ 9821 7C               ld a,h
 104+ 9822 E6 07            and 7
 105+ 9824 20 0A            jr nz,3F
 106+ 9826 7D               ld a,l
 107+ 9827 C6 20            add a,$20
 108+ 9829 6F               ld l,a
 109+ 982A 38 04            jr c,3F
 110+ 982C 7C               ld a,h
 111+ 982D D6 08            sub 8
 112+ 982F 67               ld h,a
 113+ 9830 7C           3 ld a,h
 114+ 9831 FE 58            cp $58
 115+ 9833 28 02            jr z,4F
 116+ 9835 10 B7            djnz 1B
 117+ 9837 ED 7B 1C 89  4 ld sp,(Stack)
 118+ 983B C9           	ret
 119+ 983C
 120+ 983C              ; ---------------------------------------------------
 121+ 983C
 122+ 983C ED 73 1C 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9840 FD F9        	ld sp,iy
 124+ 9842
 125+ 9842              ; >>>
 126+ 9842
 127+ 9842 06 10            ld b,16
 128+ 9844 D1           1 pop de
 129+ 9845 7A           	ld a,d
 130+ 9846 AE           	xor (hl)
 131+ 9847 77           	ld (hl),a
 132+ 9848 24           	inc h
 133+ 9849 7C               ld a,h
 134+ 984A E6 07            and 7
 135+ 984C 20 0C            jr nz,2F
 136+ 984E 7D               ld a,l
 137+ 984F C6 20            add a,$20
 138+ 9851 6F               ld l,a
 139+ 9852 38 06            jr c,2F
 140+ 9854 7C               ld a,h
 141+ 9855 D6 08            sub 8
 142+ 9857 67               ld h,a
 143+ 9858 18 00            jr 2F
 144+ 985A 7C           2 ld a,h
 145+ 985B FE 58            cp $58
 146+ 985D 28 02            jr z,3F
 147+ 985F 10 E3            djnz 1B
 148+ 9861 ED 7B 1C 89  3 ld sp,(Stack)
 149+ 9865 C9           	ret
 150+ 9866
 151+ 9866 ED 73 1C 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 986A FD F9        	ld sp,iy
 153+ 986C
 154+ 986C              ; >>>
 155+ 986C
 156+ 986C 06 10            ld b,16
 157+ 986E D1           1 pop de
 158+ 986F 7B           	ld a,e
 159+ 9870 AE           	xor (hl)
 160+ 9871 77           	ld (hl),a
 161+ 9872 24           	inc h
 162+ 9873 7C               ld a,h
 163+ 9874 E6 07            and 7
 164+ 9876 20 0C            jr nz,2F
 165+ 9878 7D               ld a,l
 166+ 9879 C6 20            add a,$20
 167+ 987B 6F               ld l,a
 168+ 987C 38 06            jr c,2F
 169+ 987E 7C               ld a,h
 170+ 987F D6 08            sub 8
 171+ 9881 67               ld h,a
 172+ 9882 18 00            jr 2F
 173+ 9884 7C           2 ld a,h
 174+ 9885 FE 58            cp $58
 175+ 9887 28 02            jr z,3F
 176+ 9889 10 E3            djnz 1B
 177+ 988B ED 7B 1C 89  3 ld sp,(Stack)
 178+ 988F C9           	ret
 179+ 9890
 180+ 9890              ; ---------------------------------------------------
 181+ 9890
 182+ 9890 ED 73 1C 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9894 FD F9        	ld sp,iy
 184+ 9896 06 08            ld b,8
 185+ 9898 D1           1 pop de
 186+ 9899 7A           	ld a,d
 187+ 989A AE           	xor (hl)
 188+ 989B 77           	ld (hl),a
 189+ 989C 23           	inc hl
 190+ 989D D1           	pop de
 191+ 989E 7B           	ld a,e
 192+ 989F AE           	xor (hl)
 193+ 98A0 77           	ld (hl),a
 194+ 98A1 2B           	dec hl
 195+ 98A2 24            	inc h
 196+ 98A3 7C               ld a,h
 197+ 98A4 E6 07            and 7
 198+ 98A6 20 0A            jr nz,2F
 199+ 98A8 7D               ld a,l
 200+ 98A9 C6 20            add a,$20
 201+ 98AB 6F               ld l,a
 202+ 98AC 38 04            jr c,2F
 203+ 98AE 7C               ld a,h
 204+ 98AF D6 08            sub 8
 205+ 98B1 67               ld h,a
 206+ 98B2 7C           2 ld a,h
 207+ 98B3 FE 58            cp $58
 208+ 98B5 28 20            jr z,4F
 209+ 98B7 D1               pop de
 210+ 98B8 7B           	ld a,e
 211+ 98B9 AE           	xor (hl)
 212+ 98BA 77           	ld (hl),a
 213+ 98BB 23           	inc hl
 214+ 98BC 7A           	ld a,d
 215+ 98BD AE           	xor (hl)
 216+ 98BE 77           	ld (hl),a
 217+ 98BF 2B           	dec hl
 218+ 98C0 24           	inc h
 219+ 98C1 7C               ld a,h
 220+ 98C2 E6 07            and 7
 221+ 98C4 20 0A            jr nz,3F
 222+ 98C6 7D               ld a,l
 223+ 98C7 C6 20            add a,$20
 224+ 98C9 6F               ld l,a
 225+ 98CA 38 04            jr c,3F
 226+ 98CC 7C               ld a,h
 227+ 98CD D6 08            sub 8
 228+ 98CF 67               ld h,a
 229+ 98D0 7C           3 ld a,h
 230+ 98D1 FE 58            cp $58
 231+ 98D3 28 02            jr z,4F
 232+ 98D5 10 C1            djnz 1B
 233+ 98D7 ED 7B 1C 89  4 ld sp,(Stack)
 234+ 98DB C9           	ret
 235+ 98DC
 236+ 98DC ED 73 1C 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98E0 FD F9        	ld sp,iy
 238+ 98E2 06 08            ld b,8
 239+ 98E4 D1           1 pop de
 240+ 98E5 D1           	pop de
 241+ 98E6 7B           	ld a,e
 242+ 98E7 AE           	xor (hl)
 243+ 98E8 77           	ld (hl),a
 244+ 98E9 24            	inc h
 245+ 98EA 7C               ld a,h
 246+ 98EB E6 07            and 7
 247+ 98ED 20 0A            jr nz,2F
 248+ 98EF 7D               ld a,l
 249+ 98F0 C6 20            add a,$20
 250+ 98F2 6F               ld l,a
 251+ 98F3 38 04            jr c,2F
 252+ 98F5 7C               ld a,h
 253+ 98F6 D6 08            sub 8
 254+ 98F8 67               ld h,a
 255+ 98F9 7C           2 ld a,h
 256+ 98FA FE 58            cp $58
 257+ 98FC 28 1B            jr z,4F
 258+ 98FE D1               pop de
 259+ 98FF 7A           	ld a,d
 260+ 9900 AE           	xor (hl)
 261+ 9901 77           	ld (hl),a
 262+ 9902 24           	inc h
 263+ 9903 7C               ld a,h
 264+ 9904 E6 07            and 7
 265+ 9906 20 0A            jr nz,3F
 266+ 9908 7D               ld a,l
 267+ 9909 C6 20            add a,$20
 268+ 990B 6F               ld l,a
 269+ 990C 38 04            jr c,3F
 270+ 990E 7C               ld a,h
 271+ 990F D6 08            sub 8
 272+ 9911 67               ld h,a
 273+ 9912 7C           3 ld a,h
 274+ 9913 FE 58            cp $58
 275+ 9915 28 02            jr z,4F
 276+ 9917 10 CB            djnz 1B
 277+ 9919 ED 7B 1C 89  4 ld sp,(Stack)
 278+ 991D C9           	ret
 279+ 991E
 280+ 991E ED 73 1C 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9922 FD F9        	ld sp,iy
 282+ 9924 06 08            ld b,8
 283+ 9926 D1           1 pop de
 284+ 9927 7B           	ld a,e
 285+ 9928 AE           	xor (hl)
 286+ 9929 77           	ld (hl),a
 287+ 992A 23           	inc hl
 288+ 992B 7A           	ld a,d
 289+ 992C AE           	xor (hl)
 290+ 992D 77           	ld (hl),a
 291+ 992E 2B           	dec hl
 292+ 992F 24             	inc h
 293+ 9930 7C               ld a,h
 294+ 9931 E6 07            and 7
 295+ 9933 20 0A            jr nz,2F
 296+ 9935 7D               ld a,l
 297+ 9936 C6 20            add a,$20
 298+ 9938 6F               ld l,a
 299+ 9939 38 04            jr c,2F
 300+ 993B 7C               ld a,h
 301+ 993C D6 08            sub 8
 302+ 993E 67               ld h,a
 303+ 993F 7C           2 ld a,h
 304+ 9940 FE 58            cp $58
 305+ 9942 28 21            jr z,4F
 306+ 9944 D1               pop de
 307+ 9945 7A           	ld a,d
 308+ 9946 AE           	xor (hl)
 309+ 9947 77           	ld (hl),a
 310+ 9948 23           	inc hl
 311+ 9949 D1               pop de
 312+ 994A 7B           	ld a,e
 313+ 994B AE           	xor (hl)
 314+ 994C 77           	ld (hl),a
 315+ 994D 2B           	dec hl
 316+ 994E 24           	inc h
 317+ 994F 7C               ld a,h
 318+ 9950 E6 07            and 7
 319+ 9952 20 0A            jr nz,3F
 320+ 9954 7D               ld a,l
 321+ 9955 C6 20            add a,$20
 322+ 9957 6F               ld l,a
 323+ 9958 38 04            jr c,3F
 324+ 995A 7C               ld a,h
 325+ 995B D6 08            sub 8
 326+ 995D 67               ld h,a
 327+ 995E 7C           3 ld a,h
 328+ 995F FE 58            cp $58
 329+ 9961 28 02            jr z,4F
 330+ 9963 10 C1            djnz 1B
 331+ 9965 ED 7B 1C 89  4 ld sp,(Stack)
 332+ 9969 C9           	ret
 333+ 996A
 334+ 996A ED 73 1C 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 996E FD F9        	ld sp,iy
 336+ 9970 06 08            ld b,8
 337+ 9972 D1           1 pop de
 338+ 9973 7B           	ld a,e
 339+ 9974 AE           	xor (hl)
 340+ 9975 77           	ld (hl),a
 341+ 9976 24            	inc h
 342+ 9977 7C               ld a,h
 343+ 9978 E6 07            and 7
 344+ 997A 20 0A            jr nz,2F
 345+ 997C 7D               ld a,l
 346+ 997D C6 20            add a,$20
 347+ 997F 6F               ld l,a
 348+ 9980 38 04            jr c,2F
 349+ 9982 7C               ld a,h
 350+ 9983 D6 08            sub 8
 351+ 9985 67               ld h,a
 352+ 9986 7C           2 ld a,h
 353+ 9987 FE 58            cp $58
 354+ 9989 28 1C            jr z,4F
 355+ 998B D1               pop de
 356+ 998C 7A           	ld a,d
 357+ 998D AE           	xor (hl)
 358+ 998E 77           	ld (hl),a
 359+ 998F 24           	inc h
 360+ 9990 7C               ld a,h
 361+ 9991 E6 07            and 7
 362+ 9993 20 0A            jr nz,3F
 363+ 9995 7D               ld a,l
 364+ 9996 C6 20            add a,$20
 365+ 9998 6F               ld l,a
 366+ 9999 38 04            jr c,3F
 367+ 999B 7C               ld a,h
 368+ 999C D6 08            sub 8
 369+ 999E 67               ld h,a
 370+ 999F 7C           3 ld a,h
 371+ 99A0 FE 58            cp $58
 372+ 99A2 28 03            jr z,4F
 373+ 99A4 D1               pop de
 374+ 99A5 10 CB            djnz 1B
 375+ 99A7 ED 7B 1C 89  4 ld sp,(Stack)
 376+ 99AB C9           	ret
 377+ 99AC
 378+ 99AC              ; ---------------------------------------------------
 379+ 99AC              ;
 380+ 99AC              ;   27/02/23
 381+ 99AC              ;
 382+ 99AC              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99AC              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99AC              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99AC
 386+ 99AC ED 73 1C 89  Pinta_Disparo ld (Stack),sp
 387+ 99B0 FD F9            ld sp,iy
 388+ 99B2 06 03            ld b,3
 389+ 99B4 D1           1 pop de
 390+ 99B5 7B               ld a,e
 391+ 99B6 AE               xor (hl)
 392+ 99B7 77               ld (hl),a
 393+ 99B8 23               inc hl
 394+ 99B9 7A               ld a,d
 395+ 99BA AE               xor (hl)
 396+ 99BB 77               ld (hl),a
 397+ 99BC 2B               dec hl
 398+ 99BD
 399+ 99BD 24               inc h
 400+ 99BE 7C               ld a,h
 401+ 99BF E6 07            and 7
 402+ 99C1 20 0A            jr nz,2F
 403+ 99C3 7D               ld a,l
 404+ 99C4 C6 20            add a,$20
 405+ 99C6 6F               ld l,a
 406+ 99C7 38 04            jr c,2F
 407+ 99C9 7C               ld a,h
 408+ 99CA D6 08            sub 8
 409+ 99CC 67               ld h,a
 410+ 99CD 7C           2 ld a,h
 411+ 99CE FE 58            cp $58
 412+ 99D0 28 02            jr z,3F
 413+ 99D2
 414+ 99D2 10 E0            djnz 1B
 415+ 99D4 ED 7B 1C 89  3 ld sp,(Stack)
 416+ 99D8 C9               ret
 417+ 99D9
# file closed: Rutinas_de_impresion_sprites.asm
1870  99D9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99D9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99D9              ;
   3+ 99D9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99D9              ;
   5+ 99D9              ; *****************************************************************************************************************************************************************************************
   6+ 99D9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99D9
   8+ 99D9 7C           calcula_tercio ld a,h
   9+ 99DA E6 18        	and $18
  10+ 99DC CB 2F        	sra a
  11+ 99DE CB 2F        	sra a
  12+ 99E0 CB 2F        	sra a
  13+ 99E2 C9           	ret
  14+ 99E3
# file closed: calcula_tercio.asm
1871  99E3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99E3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99E3              ;
   3+ 99E3              ;
   4+ 99E3              ;	CLS.
   5+ 99E3              ;
   6+ 99E3              ;	Limpia la pantalla y define sus atributos.
   7+ 99E3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99E3              ;
   9+ 99E3              ;	COLORES: 0 ..... NEGRO
  10+ 99E3              ;    		 1 ..... AZUL
  11+ 99E3              ; 			 2 ..... ROJO
  12+ 99E3              ;			 3 ..... MAGENTA
  13+ 99E3              ; 			 4 ..... VERDE
  14+ 99E3              ; 			 5 ..... CIAN
  15+ 99E3              ;			 6 ..... AMARILLO
  16+ 99E3              ; 			 7 ..... BLANCO
  17+ 99E3              ;
  18+ 99E3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99E3              ;
  20+ 99E3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99E3
  22+ 99E3
  23+ 99E3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99E6 11 01 40     	LD DE,$4001
  25+ 99E9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99EC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99EE ED B0        	LDIR
  28+ 99F0 01 FF 02     	LD BC,767
  29+ 99F3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99F4 ED B0        	LDIR
  31+ 99F6 C9           	ret
  32+ 99F7
# file closed: Cls.asm
1872  99F7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F7              ; ******************************************************************************************************************************************************************************************
   2+ 99F7              ;
   3+ 99F7              ;   20/05/23
   4+ 99F7              ;
   5+ 99F7              ;	Recompone_posicion_inicio
   6+ 99F7              ;
   7+ 99F7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99F7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99F7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99F7              ;	_ a una u otra rutina.
  11+ 99F7
  12+ 99F7              Recompone_posicion_inicio
  13+ 99F7
  14+ 99F7 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 99FA 7D           	ld a,l
  16+ 99FB E6 1F        	and $1f
  17+ 99FD 28 16        	jr z,1F
  18+ 99FF
  19+ 99FF FE 1F        	cp $1f
  20+ 9A01 28 0D        	jr z,3F
  21+ 9A03
  22+ 9A03 21 07 89     	ld hl,Ctrl_2
  23+ 9A06 CB C6        	set 0,(hl)
  24+ 9A08 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 9A0B 22 0C 89     	ld (Repone_puntero_objeto),hl
  26+ 9A0E 18 08        	jr 2F
  27+ 9A10
  28+ 9A10 CD BB 9B     3 call Mov_left
  29+ 9A13 18 03        	jr 2F
  30+ 9A15
  31+ 9A15 CD 9D 9A     1 call Mov_right
  32+ 9A18 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A1B 22 CA 88     	ld (Puntero_objeto),hl
  34+ 9A1E C9           	ret
  35+ 9A1F
  36+ 9A1F              ; ******************************************************************************************************************************************************************************************
  37+ 9A1F              ;
  38+ 9A1F              ;   27/05/23
  39+ 9A1F              ;
  40+ 9A1F              ;	Mov_down
  41+ 9A1F              ;
  42+ 9A1F              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A1F              ;
  44+ 9A1F              ;
  45+ 9A1F              Mov_down
  46+ 9A1F
  47+ 9A1F CD 8B 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A22              ;																	; _ repone (Puntero_objeto).
  49+ 9A22 21 F6 88     	ld hl,Ctrl_0
  50+ 9A25 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A27              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A27              ; 																	; _ en el caso de que no lo haya.
  53+ 9A27 3A DE 88     	ld a,(Vel_down)
  54+ 9A2A 47           	ld b,a
  55+ 9A2B 2A C8 88         ld hl,(Posicion_actual)
  56+ 9A2E CD D9 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A31 E6 02        	and 2
  58+ 9A33 28 19        	jr z,1F
  59+ 9A35
  60+ 9A35              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A35              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A35
  63+ 9A35 7C           	ld a,h
  64+ 9A36 FE 57        	cp $57
  65+ 9A38 20 14        	jr nz,1F
  66+ 9A3A
  67+ 9A3A 7D           	ld a,l
  68+ 9A3B C6 20        	add $20
  69+ 9A3D 30 0F        	jr nc,1F
  70+ 9A3F
  71+ 9A3F              ; ------------------------------
  72+ 9A3F              ;
  73+ 9A3F              ;	30/12/15
  74+ 9A3F
  75+ 9A3F              ;	call Reaparece_arriba
  76+ 9A3F CD 48 9D     	call Reinicio
  77+ 9A42
  78+ 9A42              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  79+ 9A42              ;	Recordamos que ´solo las "Entidades_guía" ejecutan las rutinas de movimiento.
  80+ 9A42
  81+ 9A42 3A 2A 89     	ld a,(Ctrl_3)
  82+ 9A45 CB 8F        	res 1,a
  83+ 9A47 CB D7        	set 2,a													; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  84+ 9A49 32 2A 89     	ld (Ctrl_3),a
  85+ 9A4C
  86+ 9A4C 18 08        	jr 3F
  87+ 9A4E              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  88+ 9A4E              ;															; _a la siguiente entidad como "Entidad_guía".
  89+ 9A4E              ; ------------------------------
  90+ 9A4E
  91+ 9A4E CD C6 96     1 call NextScan
  92+ 9A51 22 C8 88     	ld (Posicion_actual),hl
  93+ 9A54 10 D8            djnz 2B
  94+ 9A56 CD 6E 9D     3 call Genera_coordenadas
  95+ 9A59 C9           	ret
  96+ 9A5A
  97+ 9A5A              ; ******************************************************************************************************************************************************************************************
  98+ 9A5A              ;
  99+ 9A5A              ;   27/05/23
 100+ 9A5A              ;
 101+ 9A5A              ;	Mov_up
 102+ 9A5A              ;
 103+ 9A5A              ; 	Mueve el Sprite hacia arriba.
 104+ 9A5A              ;
 105+ 9A5A              ;
 106+ 9A5A              Mov_up
 107+ 9A5A
 108+ 9A5A CD 8B 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 109+ 9A5D              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 110+ 9A5D 21 F6 88     	ld hl,Ctrl_0
 111+ 9A60 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 112+ 9A62              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 113+ 9A62              ; 																		; _ en el caso de que no lo haya.
 114+ 9A62 3A DD 88     	ld a,(Vel_up)
 115+ 9A65 47           	ld b,a
 116+ 9A66 2A C8 88     	ld hl,(Posicion_actual)
 117+ 9A69 CD D9 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 118+ 9A6C A7           	and a
 119+ 9A6D 20 10        	jr nz,1F
 120+ 9A6F
 121+ 9A6F              ; Nos encontramos en el 1er tercio de pantalla.
 122+ 9A6F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 123+ 9A6F
 124+ 9A6F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 125+ 9A70 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 126+ 9A72 20 0B            jr nz,1F
 127+ 9A74 7D               ld a,l
 128+ 9A75 D6 20            sub $20
 129+ 9A77 30 06            jr nc,1F
 130+ 9A79 25               dec h
 131+ 9A7A
 132+ 9A7A              ; -----------------------------
 133+ 9A7A CD 29 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 134+ 9A7D              ;	call Reinicio
 135+ 9A7D              ; -----------------------------
 136+ 9A7D
 137+ 9A7D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 138+ 9A7F CD D5 96     1 call PreviousScan
 139+ 9A82 22 C8 88     	ld (Posicion_actual),hl
 140+ 9A85 10 E2            djnz 3B
 141+ 9A87 CD 6E 9D     2 call Genera_coordenadas
 142+ 9A8A C9           	ret
 143+ 9A8B
 144+ 9A8B              ; -----------------------------
 145+ 9A8B              ;
 146+ 9A8B              ;	27/5/23
 147+ 9A8B              ;
 148+ 9A8B              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 149+ 9A8B              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 150+ 9A8B              ;
 151+ 9A8B              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 152+ 9A8B              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 153+ 9A8B              ;
 154+ 9A8B              ;	Modifica: A y (Puntero_objeto).
 155+ 9A8B
 156+ 9A8B 3A 07 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 157+ 9A8E CB 47        	bit 0,a
 158+ 9A90 C8           	ret z
 159+ 9A91 CB 87        	res 0,a
 160+ 9A93 32 07 89     	ld (Ctrl_2),a
 161+ 9A96 2A 0C 89     	ld hl,(Repone_puntero_objeto)
 162+ 9A99 22 CA 88     	ld (Puntero_objeto),hl
 163+ 9A9C C9           	ret
 164+ 9A9D
 165+ 9A9D              ; ******************************************************************************************************************************************************************************************
 166+ 9A9D              ;
 167+ 9A9D              ;	19/10/22
 168+ 9A9D              ;
 169+ 9A9D              ;	Mov_right.
 170+ 9A9D              ;
 171+ 9A9D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 172+ 9A9D              ;
 173+ 9A9D
 174+ 9A9D 21 F6 88     Mov_right ld hl,Ctrl_0
 175+ 9AA0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 176+ 9AA2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 177+ 9AA2              ; 																	; _ en el caso de que no lo haya.
 178+ 9AA2 3A F6 88     	ld a,(Ctrl_0)
 179+ 9AA5 CB 77        	bit 6,a
 180+ 9AA7 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 181+ 9AA9
 182+ 9AA9 CD D7 9C     	call Stop_Amadeus_right
 183+ 9AAC C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 184+ 9AAD 18 4D        	jr 8F
 185+ 9AAF
 186+ 9AAF 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 187+ 9AB2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 188+ 9AB4 20 46        	jr nz,8F
 189+ 9AB6
 190+ 9AB6 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 191+ 9AB9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 192+ 9ABA 28 40        	jr z,8F
 193+ 9ABC
 194+ 9ABC              ; ---------- ---------- ----------
 195+ 9ABC              ;
 196+ 9ABC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 197+ 9ABC
 198+ 9ABC 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 199+ 9ABF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 200+ 9AC1 28 11        	jr z,1F
 201+ 9AC3 38 06        	jr c,6F
 202+ 9AC5 FE 04        	cp 4
 203+ 9AC7 28 14        	jr z,7F
 204+ 9AC9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 205+ 9ACB
 206+ 9ACB              ; ---------- ---------- ----------
 207+ 9ACB              ;
 208+ 9ACB              ; Perfiles de velocidad
 209+ 9ACB              ;
 210+ 9ACB
 211+ 9ACB 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 212+ 9ACE FE FE        	cp $fe
 213+ 9AD0 20 2A        	jr nz,8F
 214+ 9AD2 18 10        	jr 3F
 215+ 9AD4 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 216+ 9AD7 FE FD        	cp $fd
 217+ 9AD9 20 21        	jr nz,8F
 218+ 9ADB 18 07        	jr 3F
 219+ 9ADD 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 220+ 9AE0 FE FB        	cp $fb
 221+ 9AE2 20 18        	jr nz,8F
 222+ 9AE4
 223+ 9AE4              ; ---------- ---------- ----------
 224+ 9AE4
 225+ 9AE4              3
 226+ 9AE4 CD 17 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 227+ 9AE7              ;	call Reinicio
 228+ 9AE7
 229+ 9AE7              ; ---------- ---------- ----------
 230+ 9AE7              ;
 231+ 9AE7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 232+ 9AE7
 233+ 9AE7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 234+ 9AE9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 235+ 9AEA CD 03 9B     	call DESPLZ_DER
 236+ 9AED C1           	pop bc
 237+ 9AEE 10 F9        	djnz 5B
 238+ 9AF0 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 239+ 9AF3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 240+ 9AF4 22 C8 88     	ld (Posicion_actual),hl
 241+ 9AF7 CD 6E 9D     	call Genera_coordenadas
 242+ 9AFA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 243+ 9AFC
 244+ 9AFC              ; ---------- ---------- ----------
 245+ 9AFC
 246+ 9AFC 2A C8 88     8 ld hl,(Posicion_actual)
 247+ 9AFF CD 03 9B     	call DESPLZ_DER
 248+ 9B02 C9           2 ret
 249+ 9B03
 250+ 9B03              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 251+ 9B03              ;
 252+ 9B03              ;	22/9/22
 253+ 9B03              ;
 254+ 9B03
 255+ 9B03 CD 12 9B     DESPLZ_DER call Desplaza_derecha
 256+ 9B06 CD 5E 9B         call modifica_parametros_1er_DESPLZ_2
 257+ 9B09 CD 87 9B         call Ciclo_completo
 258+ 9B0C 21 F6 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 259+ 9B0F CB FE        	set 7,(hl)
 260+ 9B11 C9           	ret
 261+ 9B12
 262+ 9B12              ; ******************************************************************************************************************************************************************************************
 263+ 9B12              ;	15/02/23
 264+ 9B12              ;
 265+ 9B12
 266+ 9B12 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 267+ 9B15 47           	ld b,a
 268+ 9B16 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 269+ 9B19 23           1 inc hl
 270+ 9B1A 23           	inc hl
 271+ 9B1B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 272+ 9B1D 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 273+ 9B20 CD 5A 8D     	call Extrae_address
 274+ 9B23 22 CA 88     	ld (Puntero_objeto),hl
 275+ 9B26
 276+ 9B26              ; Modifica (Puntero_DESPLZ_izq).
 277+ 9B26
 278+ 9B26              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 279+ 9B26              ; Cuántos movimientos hemos hecho ??
 280+ 9B26              ; DE contiene (Puntero_DESPLZ_der).
 281+ 9B26
 282+ 9B26 2A D0 88     7 ld hl,(Indice_Sprite_der)
 283+ 9B29 EB           	ex de,hl
 284+ 9B2A A7           	and a
 285+ 9B2B ED 52        	sbc hl,de
 286+ 9B2D CB 3D        	srl l
 287+ 9B2F 3E 08        6 ld a,8
 288+ 9B31 95           	sub l
 289+ 9B32 30 1E        	jr nc,3F
 290+ 9B34
 291+ 9B34              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 292+ 9B34              ; B="0".
 293+ 9B34
 294+ 9B34 04           4 inc b
 295+ 9B35 3C           	inc a
 296+ 9B36 20 FC        	jr nz,4B
 297+ 9B38 78           	ld a,b
 298+ 9B39 08           	ex af,af
 299+ 9B3A 2A D0 88     	ld hl,(Indice_Sprite_der)
 300+ 9B3D 23           5 inc hl
 301+ 9B3E 23           	inc hl
 302+ 9B3F 10 FC        	djnz 5B
 303+ 9B41 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 304+ 9B44 CD 5A 8D     	call Extrae_address
 305+ 9B47 22 CA 88     	ld (Puntero_objeto),hl
 306+ 9B4A
 307+ 9B4A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 308+ 9B4A              ; _(Posicion_actual).
 309+ 9B4A
 310+ 9B4A 21 C8 88     	ld hl,Posicion_actual
 311+ 9B4D 34           	inc (hl)
 312+ 9B4E 08               ex af,af
 313+ 9B4F 6F           	ld l,a
 314+ 9B50 18 DD        	jr 6B
 315+ 9B52
 316+ 9B52              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 317+ 9B52
 318+ 9B52 47           3 ld b,a
 319+ 9B53 2A D2 88     	ld hl,(Indice_Sprite_izq)
 320+ 9B56 23           2 inc hl
 321+ 9B57 23           	inc hl
 322+ 9B58 10 FC        	djnz 2B
 323+ 9B5A 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 324+ 9B5D C9           8 ret
 325+ 9B5E
 326+ 9B5E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 327+ 9B5E              ;
 328+ 9B5E              ;	24/7/22
 329+ 9B5E              ;
 330+ 9B5E              ;	modifica_parametros_1er_DESPLZ_2
 331+ 9B5E              ;
 332+ 9B5E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 333+ 9B5E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 334+ 9B5E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 335+ 9B5E
 336+ 9B5E 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 337+ 9B61 A7           	and a
 338+ 9B62 20 1F        	jr nz,1F
 339+ 9B64 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 340+ 9B66 32 CE 88         ld (CTRL_DESPLZ),a
 341+ 9B69
 342+ 9B69 21 C7 88     	ld hl,Columns
 343+ 9B6C 34           	inc (hl)
 344+ 9B6D 3A DA 88     	ld a,(Cuad_objeto)
 345+ 9B70 E6 01        	and 1
 346+ 9B72 28 0F        	jr z,1F
 347+ 9B74 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 348+ 9B77 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 349+ 9B78 22 C8 88     	ld (Posicion_actual),hl
 350+ 9B7B CD 6E 9D     	call Genera_coordenadas
 351+ 9B7E CD E3 9C     	call Inc_CTRL_DESPLZ
 352+ 9B81 18 03        	jr 2F
 353+ 9B83 CD E3 9C     1 call Inc_CTRL_DESPLZ
 354+ 9B86 C9           2 ret
 355+ 9B87
 356+ 9B87              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 357+ 9B87              ;
 358+ 9B87              ;	24/7/22
 359+ 9B87              ;
 360+ 9B87              ;	Ciclo_completo.
 361+ 9B87              ;
 362+ 9B87              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 363+ 9B87              ;
 364+ 9B87              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 365+ 9B87              ; 	Decrementamos (Columns).
 366+ 9B87              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 367+ 9B87              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 368+ 9B87
 369+ 9B87
 370+ 9B87 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 371+ 9B8A FE FF        	cp $ff
 372+ 9B8C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 373+ 9B8E E6 F0        	and $f0
 374+ 9B90 20 28        	jr nz,3F
 375+ 9B92
 376+ 9B92              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 377+ 9B92
 378+ 9B92 3A CE 88     	ld a,(CTRL_DESPLZ)
 379+ 9B95 47           	ld b,a
 380+ 9B96 3E F8        	ld a,$f8
 381+ 9B98 80           	add b
 382+ 9B99 32 CE 88     	ld (CTRL_DESPLZ),a
 383+ 9B9C 18 1C        	jr 3F
 384+ 9B9E 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 385+ 9BA1 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 386+ 9BA2 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 387+ 9BA3 32 CE 88     	ld (CTRL_DESPLZ),a
 388+ 9BA6 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 389+ 9BA9 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 390+ 9BAB 20 0A        	jr nz,2F
 391+ 9BAD 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 392+ 9BB0 23           	inc hl
 393+ 9BB1 22 C8 88     	ld (Posicion_actual),hl
 394+ 9BB4 CD 6E 9D     	call Genera_coordenadas
 395+ 9BB7
 396+ 9BB7              ; Inicia el puntero de Sprite.
 397+ 9BB7
 398+ 9BB7 CD 71 8D     2 call Inicia_puntero_objeto_der
 399+ 9BBA C9           3 ret
 400+ 9BBB
 401+ 9BBB              ; ******************************************************************************************************************************************************************************************
 402+ 9BBB              ;
 403+ 9BBB              ;	15/02/23
 404+ 9BBB              ;
 405+ 9BBB              ;	Mov_left.
 406+ 9BBB              ;
 407+ 9BBB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 408+ 9BBB              ;
 409+ 9BBB              Mov_left
 410+ 9BBB
 411+ 9BBB 21 F6 88     	ld hl,Ctrl_0
 412+ 9BBE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 413+ 9BC0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 414+ 9BC0              ; 																	; _ en el caso de que no lo haya.
 415+ 9BC0 3A F6 88     	ld a,(Ctrl_0)
 416+ 9BC3 CB 77        	bit 6,a
 417+ 9BC5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 418+ 9BC7
 419+ 9BC7 CD DD 9C     	call Stop_Amadeus_left
 420+ 9BCA C8           	ret z
 421+ 9BCB 20 4A        	jr nz,8F
 422+ 9BCD
 423+ 9BCD 3A CC 88     11 ld a,(Coordenada_X)
 424+ 9BD0 A7           	and a
 425+ 9BD1 20 44        	jr nz,8F
 426+ 9BD3
 427+ 9BD3 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 428+ 9BD6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 429+ 9BD7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 430+ 9BD9
 431+ 9BD9              ; ---------- ---------- ----------
 432+ 9BD9
 433+ 9BD9 3A DB 88     	ld a,(Vel_left)
 434+ 9BDC FE 02        	cp 2
 435+ 9BDE 28 0F        	jr z,1F
 436+ 9BE0 38 04        	jr c,6F
 437+ 9BE2 FE 04        	cp 4
 438+ 9BE4 28 12        	jr z,7F
 439+ 9BE6
 440+ 9BE6              ; ---------- ---------- ----------
 441+ 9BE6
 442+ 9BE6 3A CE 88     6 ld a,(CTRL_DESPLZ)
 443+ 9BE9 FE F8        	cp $f8
 444+ 9BEB 20 2A        	jr nz,8F
 445+ 9BED 18 10        	jr 4F
 446+ 9BEF 3A CE 88     1 ld a,(CTRL_DESPLZ)
 447+ 9BF2 FE F9        	cp $f9
 448+ 9BF4 20 21        	jr nz,8F
 449+ 9BF6 18 07        	jr 4F
 450+ 9BF8 3A CE 88     7 ld a,(CTRL_DESPLZ)
 451+ 9BFB FE FB        	cp $fb
 452+ 9BFD 20 18        	jr nz,8F
 453+ 9BFF
 454+ 9BFF              ; ---------- ---------- ----------
 455+ 9BFF
 456+ 9BFF              4
 457+ 9BFF CD 05 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 458+ 9C02              ;	call Reinicio
 459+ 9C02
 460+ 9C02              ; ---------- ---------- ----------
 461+ 9C02
 462+ 9C02 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 463+ 9C04 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 464+ 9C05
 465+ 9C05              ;	ld hl,(Indice_Sprite_izq)
 466+ 9C05              ;	ld (Puntero_DESPLZ_izq),hl
 467+ 9C05
 468+ 9C05 CD 1E 9C     	call DESPLZ_IZQ
 469+ 9C08 C1           	pop bc
 470+ 9C09 10 F9        	djnz 5B
 471+ 9C0B 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 472+ 9C0E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 473+ 9C0F 22 C8 88     	ld (Posicion_actual),hl
 474+ 9C12 CD 6E 9D     	call Genera_coordenadas
 475+ 9C15 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 476+ 9C17
 477+ 9C17              ; ---------- ---------- ----------
 478+ 9C17
 479+ 9C17              ; Movemos, no hay recolocación.
 480+ 9C17
 481+ 9C17 2A C8 88     8 ld hl,(Posicion_actual)
 482+ 9C1A CD 1E 9C     	call DESPLZ_IZQ
 483+ 9C1D C9           2 ret
 484+ 9C1E
 485+ 9C1E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 486+ 9C1E              ;
 487+ 9C1E              ;	22/9/22
 488+ 9C1E
 489+ 9C1E              DESPLZ_IZQ
 490+ 9C1E
 491+ 9C1E CD 2D 9C     	call Desplaza_izquierda
 492+ 9C21 CD 79 9C         call modifica_parametros_1er_DESPLZ
 493+ 9C24 CD A1 9C     	call Ciclo_completo_2
 494+ 9C27 21 F6 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 495+ 9C2A CB BE        	res 7,(hl)
 496+ 9C2C C9           	ret
 497+ 9C2D
 498+ 9C2D              Desplaza_izquierda
 499+ 9C2D
 500+ 9C2D 3A DB 88     	ld a,(Vel_left)
 501+ 9C30 47           	ld b,a
 502+ 9C31 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 503+ 9C34 23           1 inc hl
 504+ 9C35 23           	inc hl
 505+ 9C36 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 506+ 9C38 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 507+ 9C3B CD 5A 8D     	call Extrae_address
 508+ 9C3E 22 CA 88     	ld (Puntero_objeto),hl
 509+ 9C41
 510+ 9C41              ; Modifica (Puntero_DESPLZ_der).
 511+ 9C41
 512+ 9C41              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 513+ 9C41              ; Cuántos movimientos hemos hecho ??
 514+ 9C41              ; DE contiene (Puntero_DESPLZ_izq).
 515+ 9C41
 516+ 9C41 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 517+ 9C44 EB           	ex de,hl
 518+ 9C45 A7           	and a
 519+ 9C46 ED 52        	sbc hl,de
 520+ 9C48 CB 3D        	srl l
 521+ 9C4A 3E 08        6 ld a,8
 522+ 9C4C 95           	sub l
 523+ 9C4D 30 1E        	jr nc,3F
 524+ 9C4F
 525+ 9C4F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 526+ 9C4F              ; B="0".
 527+ 9C4F
 528+ 9C4F 04           4 inc b
 529+ 9C50 3C           	inc a
 530+ 9C51 20 FC        	jr nz,4B
 531+ 9C53 78           	ld a,b
 532+ 9C54 08           	ex af,af
 533+ 9C55 2A D2 88     	ld hl,(Indice_Sprite_izq)
 534+ 9C58 23           5 inc hl
 535+ 9C59 23           	inc hl
 536+ 9C5A 10 FC        	djnz 5B
 537+ 9C5C 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 538+ 9C5F CD 5A 8D     	call Extrae_address
 539+ 9C62 22 CA 88     	ld (Puntero_objeto),hl
 540+ 9C65
 541+ 9C65              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 542+ 9C65              ; _(Posicion_actual).
 543+ 9C65
 544+ 9C65 21 C8 88     	ld hl,Posicion_actual
 545+ 9C68 35           	dec (hl)
 546+ 9C69 08           	ex af,af
 547+ 9C6A 6F           	ld l,a
 548+ 9C6B 18 DD        	jr 6B
 549+ 9C6D
 550+ 9C6D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 551+ 9C6D
 552+ 9C6D 47           3 ld b,a
 553+ 9C6E 2A D0 88     	ld hl,(Indice_Sprite_der)
 554+ 9C71 23           2 inc hl
 555+ 9C72 23           	inc hl
 556+ 9C73 10 FC        	djnz 2B
 557+ 9C75 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 558+ 9C78 C9           8 ret
 559+ 9C79
 560+ 9C79              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 561+ 9C79              ;
 562+ 9C79              ;	modifica_parametros_1er_DESPLZ
 563+ 9C79              ;
 564+ 9C79              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 565+ 9C79              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 566+ 9C79              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 567+ 9C79
 568+ 9C79 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 569+ 9C7C A7           	and a
 570+ 9C7D 20 1E        	jr nz,1F
 571+ 9C7F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 572+ 9C80 32 CE 88         ld (CTRL_DESPLZ),a
 573+ 9C83 21 C7 88     	ld hl,Columns
 574+ 9C86 34           	inc (hl)
 575+ 9C87 3A DA 88     	ld a,(Cuad_objeto)
 576+ 9C8A E6 01        	and 1
 577+ 9C8C 20 0F        	jr nz,1F
 578+ 9C8E 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 579+ 9C91 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 580+ 9C92 22 C8 88     	ld (Posicion_actual),hl
 581+ 9C95 CD 6E 9D     	call Genera_coordenadas
 582+ 9C98 CD F4 9C     	call Dec_CTRL_DESPLZ
 583+ 9C9B 18 03        	jr 2F
 584+ 9C9D CD F4 9C     1 call Dec_CTRL_DESPLZ
 585+ 9CA0 C9           2 ret
 586+ 9CA1
 587+ 9CA1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 588+ 9CA1
 589+ 9CA1 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 590+ 9CA4 FE F7        	cp $f7
 591+ 9CA6 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 592+ 9CA8 30 2C        	jr nc,3F
 593+ 9CAA
 594+ 9CAA              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 595+ 9CAA
 596+ 9CAA 06 00        	ld b,0
 597+ 9CAC 04           4 inc b
 598+ 9CAD 3C           	inc a
 599+ 9CAE FE F7        	cp $f7
 600+ 9CB0 20 FA        	jr nz,4B
 601+ 9CB2 3E FF        	ld a,$ff
 602+ 9CB4 90           	sub b
 603+ 9CB5 32 CE 88     	ld (CTRL_DESPLZ),a
 604+ 9CB8 18 1C        	jr 3F
 605+ 9CBA
 606+ 9CBA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 607+ 9CBA
 608+ 9CBA 21 C7 88     1 ld hl,Columns
 609+ 9CBD 35           	dec (hl)
 610+ 9CBE AF           	xor a
 611+ 9CBF 32 CE 88     	ld (CTRL_DESPLZ),a
 612+ 9CC2 3A DA 88     	ld a,(Cuad_objeto)
 613+ 9CC5 E6 01        	and 1
 614+ 9CC7 28 0A        	jr z,2F
 615+ 9CC9 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 616+ 9CCC 2B           	dec hl
 617+ 9CCD 22 C8 88     	ld (Posicion_actual),hl
 618+ 9CD0 CD 6E 9D     	call Genera_coordenadas
 619+ 9CD3
 620+ 9CD3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 621+ 9CD3
 622+ 9CD3 CD 84 8D     2 call Inicia_puntero_objeto_izq
 623+ 9CD6 C9           3 ret
 624+ 9CD7
 625+ 9CD7              ; ---------- ---------- ---------- ---------- ---------- ----------
 626+ 9CD7              ;
 627+ 9CD7              ;	19/10/22
 628+ 9CD7              ;
 629+ 9CD7              ;	(cp 29) para un Amadeus de 3 Columns.
 630+ 9CD7              ;	(cp 30)   ""  ""    ""     2 Columns.
 631+ 9CD7
 632+ 9CD7 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 633+ 9CDA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 634+ 9CDC C9           	ret
 635+ 9CDD
 636+ 9CDD              ; ---------- ---------- ---------- ---------- ---------- ----------
 637+ 9CDD              ;
 638+ 9CDD              ;	19/10/22
 639+ 9CDD              ;
 640+ 9CDD              ;	(cp 2) para un Amadeus de 3 Columns.
 641+ 9CDD              ;	(cp 1)   ""  ""    ""     2 Columns.
 642+ 9CDD
 643+ 9CDD 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 644+ 9CE0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 645+ 9CE2 C9           	ret
 646+ 9CE3
 647+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 648+ 9CE3              ;
 649+ 9CE3              ;	24/7/22
 650+ 9CE3              ;
 651+ 9CE3              ;	Inc_CTRL_DESPLZ
 652+ 9CE3              ;
 653+ 9CE3              ;
 654+ 9CE3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 655+ 9CE3
 656+ 9CE3 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 657+ 9CE6 3A DC 88     	ld a,(Vel_right)
 658+ 9CE9 A7           	and a
 659+ 9CEA 28 06        	jr z,1F
 660+ 9CEC 47           	ld b,a
 661+ 9CED 34           3 inc (hl)
 662+ 9CEE 10 FD        	djnz 3B
 663+ 9CF0 18 01        	jr 2F
 664+ 9CF2 34           1 inc (hl)
 665+ 9CF3 C9           2 ret
 666+ 9CF4
 667+ 9CF4              ; ---------- ---------- ---------- ---------- ---------- ----------
 668+ 9CF4              ;
 669+ 9CF4              ;	5/2/23
 670+ 9CF4              ;
 671+ 9CF4              ;	Dec_CTRL_DESPLZ
 672+ 9CF4              ;
 673+ 9CF4              ;
 674+ 9CF4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 675+ 9CF4
 676+ 9CF4 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 677+ 9CF7 3A DB 88     	ld a,(Vel_left)
 678+ 9CFA A7           	and a
 679+ 9CFB 28 06        	jr z,1F
 680+ 9CFD 47           	ld b,a
 681+ 9CFE 35           3 dec (hl)
 682+ 9CFF 10 FD        	djnz 3B
 683+ 9D01 18 01        	jr 2F
 684+ 9D03 35           1 dec (hl)
 685+ 9D04 C9           2 ret
 686+ 9D05
 687+ 9D05              ; ---------- ---------- ---------- ---------- ---------- ----------
 688+ 9D05
 689+ 9D05 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 690+ 9D08 01 1F 00     	ld bc,31
 691+ 9D0B A7           	and a
 692+ 9D0C ED 4A        	adc hl,bc
 693+ 9D0E 22 C8 88     	ld (Posicion_actual),hl
 694+ 9D11 21 F6 88     	ld hl,Ctrl_0														; $xxx1
 695+ 9D14 CB C6        	set 0,(hl)
 696+ 9D16 C9           	ret
 697+ 9D17
 698+ 9D17              ; ---------- ---------- ---------- ---------- ---------- ----------
 699+ 9D17
 700+ 9D17 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 701+ 9D1A 01 1F 00     	ld bc,31
 702+ 9D1D A7           	and a
 703+ 9D1E ED 42        	sbc hl,bc
 704+ 9D20 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 705+ 9D23 21 F6 88     	ld hl,Ctrl_0
 706+ 9D26 CB CE        	set 1,(hl)
 707+ 9D28 C9           	ret
 708+ 9D29
 709+ 9D29              ; ---------- ---------- ---------- ---------- ---------- ----------
 710+ 9D29
 711+ 9D29 24           Reaparece_abajo inc h
 712+ 9D2A 01 E0 17     	ld bc,$17e0
 713+ 9D2D A7           	and a
 714+ 9D2E ED 4A        	adc hl,bc
 715+ 9D30 22 C8 88     	ld (Posicion_actual),hl
 716+ 9D33 21 F6 88     	ld hl,Ctrl_0
 717+ 9D36 CB D6        	set 2,(hl)
 718+ 9D38 C9           	ret
 719+ 9D39
 720+ 9D39              ; ---------- ---------- ---------- ---------- ---------- ----------
 721+ 9D39
 722+ 9D39 01 E0 17     Reaparece_arriba ld bc,$17e0
 723+ 9D3C A7           	and a
 724+ 9D3D ED 42        	sbc hl,bc
 725+ 9D3F 22 C8 88     	ld (Posicion_actual),hl
 726+ 9D42 21 F6 88     	ld hl,Ctrl_0
 727+ 9D45 CB DE        	set 3,(hl)
 728+ 9D47 C9           	ret
 729+ 9D48
 730+ 9D48              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 731+ 9D48              ;
 732+ 9D48              ;	15/07/23
 733+ 9D48
 734+ 9D48              Reinicio
 735+ 9D48
 736+ 9D48              ; Vamos a reiniciar los punteros y variables de movimiento.
 737+ 9D48
 738+ 9D48 AF           	xor a
 739+ 9D49 21 FB 88     	ld hl,Puntero_indice_mov_bucle
 740+ 9D4C CD 6A 9D     	call Limpia_contenido_hl
 741+ 9D4F
 742+ 9D4F 21 C8 88     	ld hl,Posicion_actual
 743+ 9D52 CD 6A 9D     	call Limpia_contenido_hl
 744+ 9D55
 745+ 9D55 CD A6 A0     	call Inicializa_Puntero_indice_mov
 746+ 9D58 CD 2A A0     	call Inicia_Puntero_mov
 747+ 9D5B
 748+ 9D5B 21 FD 88     	ld hl,Incrementa_puntero
 749+ 9D5E 06 05        	ld b,5
 750+ 9D60 77           1 ld (hl),a
 751+ 9D61 23           	inc hl
 752+ 9D62 10 FC        	djnz 1B
 753+ 9D64
 754+ 9D64 21 07 89     	ld hl,Ctrl_2
 755+ 9D67 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 756+ 9D69
 757+ 9D69 C9           	ret
 758+ 9D6A
 759+ 9D6A 77           Limpia_contenido_hl	ld (hl),a
 760+ 9D6B 23           	inc hl
 761+ 9D6C 77           	ld (hl),a
 762+ 9D6D C9           	ret
 763+ 9D6E
 764+ 9D6E
# file closed: Direcciones.asm
1873  9D6E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D6E              ; ------------------------------------------------------------------------
   2+ 9D6E              ;
   3+ 9D6E              ;	02/04/23
   4+ 9D6E              ;
   5+ 9D6E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D6E              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D6E              ;
   8+ 9D6E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D6E              ;
  10+ 9D6E              ;	Modifica: A,BC y DE.
  11+ 9D6E
  12+ 9D6E C5           Genera_coordenadas push bc
  13+ 9D6F E5           	push hl
  14+ 9D70 D5           	push de
  15+ 9D71
  16+ 9D71 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9D74
  18+ 9D74 7D           	ld a,l
  19+ 9D75 E6 1F        	and $1f
  20+ 9D77 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D7A
  22+ 9D7A CD D9 99     	call calcula_tercio
  23+ 9D7D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D7E
  25+ 9D7E 1E 00        	ld e,0
  26+ 9D80 7D           	ld a,l
  27+ 9D81 E6 E0        	and $e0
  28+ 9D83 28 01        	jr z,1F
  29+ 9D85 04           	inc b
  30+ 9D86
  31+ 9D86 04           1 inc b
  32+ 9D87 05           	dec b
  33+ 9D88 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D8A              ;														; _ , salimos.
  35+ 9D8A 1C           3 inc e
  36+ 9D8B D6 20        	sub 32
  37+ 9D8D 20 FB        	jr nz,3B
  38+ 9D8F 10 F5        	djnz 1B
  39+ 9D91
  40+ 9D91 7B           2 ld a,e
  41+ 9D92 32 CD 88     	ld (Coordenada_y),a
  42+ 9D95
  43+ 9D95 D1           	pop de
  44+ 9D96 E1           	pop hl
  45+ 9D97 C1           	pop bc
  46+ 9D98
  47+ 9D98 C9           	ret
  48+ 9D99
  49+ 9D99              ; ------------------------------------------------------------------------
  50+ 9D99              ;	28/05/23
  51+ 9D99              ;
  52+ 9D99              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D99              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D99              ;
  55+ 9D99              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D99              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D99              ;
  58+ 9D99              ;		DE="$120d"
  59+ 9D99              ;
  60+ 9D99              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D99              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D99              ;
  63+ 9D99              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D99
  65+ 9D99              ;	Modifica: A,BC y DE.
  66+ 9D99
  67+ 9D99
  68+ 9D99              Genera_coordenadas_disparo
  69+ 9D99
  70+ 9D99              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D99
  72+ 9D99 7D           	ld a,l
  73+ 9D9A E6 1F        	and $1f
  74+ 9D9C 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D9D CD D9 99     	call calcula_tercio
  76+ 9DA0 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9DA1 1E 00        	ld e,0
  78+ 9DA3 7D           	ld a,l
  79+ 9DA4 E6 E0        	and $e0
  80+ 9DA6 28 01        	jr z,1F
  81+ 9DA8 04           	inc b
  82+ 9DA9 1C           1 inc e
  83+ 9DAA D6 20        	sub 32
  84+ 9DAC 20 FB        	jr nz,1B
  85+ 9DAE 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DB0 C9           	ret
  87+ 9DB1
# file closed: Genera_coordenadas.asm
1874  9DB1              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9DB1              ; Relojes y temporizaciones.
   2+ 9DB1
   3+ 9DB1              ; ------------------------------------------------------
   4+ 9DB1              ;
   5+ 9DB1              ;	16/7/23
   6+ 9DB1              ;
   7+ 9DB1              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9DB1              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9DB1              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9DB1              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9DB1              ;
  12+ 9DB1              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9DB1              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9DB1
  15+ 9DB1              ; Disparo_entidad db 1
  16+ 9DB1              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9DB1              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9DB1
  19+ 9DB1              Habilita_disparos
  20+ 9DB1
  21+ 9DB1 7E           	ld a,(hl)
  22+ 9DB2 A7           	and a
  23+ 9DB3 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9DB4
  25+ 9DB4 EB           	ex de,hl
  26+ 9DB5
  27+ 9DB5 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9DB6 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9DB7
  30+ 9DB7              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9DB7
  32+ 9DB7 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9DB8 7E           	ld a,(hl)
  34+ 9DB9 23           	inc hl
  35+ 9DBA 77           	ld (hl),a
  36+ 9DBB
  37+ 9DBB EB           	ex de,hl						; Habilitamos disparo.
  38+ 9DBC 3E 01        	ld a,1
  39+ 9DBE 77           	ld (hl),a
  40+ 9DBF C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1875  9DC0              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DC0
   2+ 9DC0
   3+ 9DC0              ;   07/07/23
   4+ 9DC0              ;
   5+ 9DC0              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DC0              ;
   7+ 9DC0              ;   Codificación:
   8+ 9DC0              ;
   9+ 9DC0              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DC0              ;
  11+ 9DC0              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DC0              ;
  13+ 9DC0              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DC0              ;
  15+ 9DC0              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DC0              ;
  17+ 9DC0              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DC0              ;                               ..... %01000010 Vel_up 4
  19+ 9DC0              ;                                               Vel_down 2
  20+ 9DC0              ;                               ..... $42
  21+ 9DC0              ;
  22+ 9DC0              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DC0              ;
  24+ 9DC0              ;                               ..... %01000010 Vel_left 4
  25+ 9DC0              ;                                               Vel_right 2
  26+ 9DC0              ;                               ..... $42
  27+ 9DC0              ;
  28+ 9DC0              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DC0              ;
  30+ 9DC0              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DC0              ;
  32+ 9DC0              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DC0              ;
  34+ 9DC0              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DC0              ;                                     $53
  36+ 9DC0              ;
  37+ 9DC0              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DC0              ;
  39+ 9DC0              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DC0              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DC0              ;
  42+ 9DC0              ;                       Arriba ..... $81
  43+ 9DC0              ;                       Arriba - izquierda ..... $a1
  44+ 9DC0              ;                       Arriba - derecha ..... $91
  45+ 9DC0              ;
  46+ 9DC0              ;                       Abajo ..... $41
  47+ 9DC0              ;                       Abajo - izquierda ..... $61
  48+ 9DC0              ;                       Abajo - derecha ..... $51
  49+ 9DC0              ;
  50+ 9DC0              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DC0              ;
  52+ 9DC0              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DC0              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DC0              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DC0              ;
  56+ 9DC0              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DC0              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DC0              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DC0              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DC0              ;
  61+ 9DC0              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DC0              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DC0              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DC0              ;
  65+ 9DC0              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DC0              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DC0              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DC0              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DC0
  70+ 9DC0              ; ----- ----- ----- ----- -----
  71+ 9DC0
  72+ 9DC0 EC 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DC2 F4 9D            defw F_1
  74+ 9DC4 FE 9D            defw F_2
  75+ 9DC6 08 9E            defw Codo_abajo_derecha
  76+ 9DC8 3C 9E            defw Derecha_y_subiendo
  77+ 9DCA 46 9E            defw Derecha_y_subiendo_1
  78+ 9DCC 50 9E            defw F_3
  79+ 9DCE 5A 9E            defw F_4
  80+ 9DD0 64 9E            defw Derecha_y_bajando
  81+ 9DD2 6E 9E            defw Derecha_y_bajando_1
  82+ 9DD4 78 9E            defw Derecha_y_bajando_2
  83+ 9DD6 82 9E            defw Codo_derecha_abajo
  84+ 9DD8 B2 9E            defw Codo_abajo_izq.
  85+ 9DDA E6 9E            defw Izquierda_y_subiendo
  86+ 9DDC F0 9E            defw Izquierda_y_subiendo_1
  87+ 9DDE FA 9E            defw F_5
  88+ 9DE0 04 9F            defw F_6
  89+ 9DE2 0E 9F            defw Izquierda_y_bajando
  90+ 9DE4 18 9F            defw Izquierda_y_bajando_1
  91+ 9DE6 22 9F            defw Izquierda_y_bajando_2
  92+ 9DE8 2C 9F            defw Codo_izquierda_abajo
  93+ 9DEA 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DEC
  95+ 9DEC 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DF0 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DF4
  98+ 9DF4 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DF8 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DFC 08 00
 100+ 9DFE 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9E02 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9E06 0F FE
 102+ 9E08
 103+ 9E08 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9E0C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9E10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E1C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E20 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E24 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E28 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E2C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E30 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E34 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E38 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E3C
 117+ 9E3C 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E40 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E44 06 00
 119+ 9E46
 120+ 9E46 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E4A 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E4E 02 00
 122+ 9E50
 123+ 9E50 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E54 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E58 04 00
 125+ 9E5A 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E5E 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E62 08 00
 127+ 9E64
 128+ 9E64 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E68 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E6C 02 00
 130+ 9E6E
 131+ 9E6E 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E72 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E76 06 00
 133+ 9E78
 134+ 9E78 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E7C 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E80 06 00
 136+ 9E82
 137+ 9E82              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E82
 139+ 9E82 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E86 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E8A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E8E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E92 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E96 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E9A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E9E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9EA2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9EA6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9EAA 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9EAE 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9EB2
 152+ 9EB2 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9EB6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EBA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EBE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EC2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EC6 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9ECA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9ECE 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9ED2 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9ED6 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EDA 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EDE 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EE2 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EE6
 166+ 9EE6 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EEA 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EEE 06 00
 168+ 9EF0
 169+ 9EF0 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EF4 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EF8 02 00
 171+ 9EFA
 172+ 9EFA 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EFE 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9F02 04 00
 174+ 9F04 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9F08 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9F0C 08 00
 176+ 9F0E
 177+ 9F0E 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9F12 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F16 02 00
 179+ 9F18
 180+ 9F18 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F1C 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F20 06 00
 182+ 9F22
 183+ 9F22 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F26 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F2A 06 00
 185+ 9F2C
 186+ 9F2C 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F30 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F34 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F38 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F3C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F40 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F44 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F48 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F4C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F50 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F54 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F58 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F5C
 199+ 9F5C              ; ----- ----- ----- ----- -----
 200+ 9F5C              ;
 201+ 9F5C              ;   28/12/23
 202+ 9F5C
 203+ 9F5C              Movimiento
 204+ 9F5C
 205+ 9F5C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F5C
 207+ 9F5C 3A 07 89         ld a,(Ctrl_2)
 208+ 9F5F CB 57            bit 2,a
 209+ 9F61 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9F63
 211+ 9F63 2A F9 88         ld hl,(Puntero_mov)
 212+ 9F66 7E               ld a,(hl)
 213+ 9F67
 214+ 9F67              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9F67
 216+ 9F67              Inicia_desplazamiento.
 217+ 9F67
 218+ 9F67              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9F67
 220+ 9F67 CD 67 A0         call Ajusta_velocidad_desplazamiento
 221+ 9F6A
 222+ 9F6A              ; Iniciamos (Repetimos_mov).
 223+ 9F6A
 224+ 9F6A 7E               ld a,(hl)
 225+ 9F6B E6 0F            and $0f
 226+ 9F6D 32 FF 88         ld (Repetimos_desplazamiento),a
 227+ 9F70 32 00 89         ld (Repetimos_desplazamiento_backup),a
 228+ 9F73
 229+ 9F73              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9F73
 231+ 9F73 23               inc hl
 232+ 9F74 7E               ld a,(hl)
 233+ 9F75 32 02 89         ld (Cola_de_desplazamiento),a
 234+ 9F78 2B               dec hl
 235+ 9F79
 236+ 9F79 21 07 89         ld hl,Ctrl_2
 237+ 9F7C CB D6            set 2,(hl)
 238+ 9F7E
 239+ 9F7E              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9F7E              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9F7E
 242+ 9F7E              Desplazamiento_iniciado
 243+ 9F7E
 244+ 9F7E CD 35 A0         call Aplica_desplazamiento
 245+ 9F81
 246+ 9F81              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9F81
 248+ 9F81 3A 2A 89         ld a,(Ctrl_3)
 249+ 9F84 CB 57            bit 2,a
 250+ 9F86 C0               ret nz
 251+ 9F87
 252+ 9F87 3A 07 89         ld a,(Ctrl_2)
 253+ 9F8A CB 67            bit 4,a
 254+ 9F8C C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9F8D
 256+ 9F8D 21 FF 88     3 ld hl,Repetimos_desplazamiento
 257+ 9F90 35               dec (hl)
 258+ 9F91 C0               ret nz
 259+ 9F92
 260+ 9F92              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9F92              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9F92              ; Analiza (Cola_de_desplazamiento).
 263+ 9F92
 264+ 9F92 3A 02 89     Cola ld a,(Cola_de_desplazamiento)
 265+ 9F95 A7               and a
 266+ 9F96 CC 90 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9F99 28 30            jr z,Reinicia_el_movimiento
 268+ 9F9B
 269+ 9F9B FE FF            cp $ff
 270+ 9F9D 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9F9F
 272+ 9F9F FE FE            cp $fe
 273+ 9FA1 CC 0E A0         call z,Fijamos_bucle
 274+ 9FA4 28 25            jr z,Reinicia_el_movimiento
 275+ 9FA6
 276+ 9FA6 FE FD            cp $fd
 277+ 9FA8 20 11            jr nz,1F
 278+ 9FAA
 279+ 9FAA              ; ---
 280+ 9FAA              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9FAA
 282+ 9FAA 3A 07 89         ld a,(Ctrl_2)
 283+ 9FAD CB 5F            bit 3,a
 284+ 9FAF 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9FB1
 286+ 9FB1              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9FB1
 288+ 9FB1 21 07 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9FB4 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9FB6
 291+ 9FB6 CD 1F A0         call Inicia_Repetimos_movimiento
 292+ 9FB9 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9FBB              ; ---
 294+ 9FBB
 295+ 9FBB FE 01        1 cp 1
 296+ 9FBD CA F8 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9FC0
 298+ 9FC0 3D               dec a
 299+ 9FC1 32 02 89         ld (Cola_de_desplazamiento),a
 300+ 9FC4
 301+ 9FC4 3A 00 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9FC7 32 FF 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9FCA              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9FCA C9               ret
 305+ 9FCB
 306+ 9FCB              Reinicia_el_movimiento
 307+ 9FCB
 308+ 9FCB 3A 07 89         ld a,(Ctrl_2)
 309+ 9FCE CB 5F            bit 3,a
 310+ 9FD0 28 1B            jr z,2F
 311+ 9FD2
 312+ 9FD2              ; (Cola_de_desplazamiento)="254".
 313+ 9FD2
 314+ 9FD2 21 01 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9FD5 35               dec (hl)
 316+ 9FD6 20 15            jr nz,2F
 317+ 9FD8
 318+ 9FD8              ; Fin de las repeticiones del último movimiento.
 319+ 9FD8
 320+ 9FD8 21 07 89         ld hl,Ctrl_2
 321+ 9FDB CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FDD
 323+ 9FDD 2A F9 88         ld hl,(Puntero_mov)
 324+ 9FE0 23               inc hl
 325+ 9FE1 23               inc hl
 326+ 9FE2 23               inc hl
 327+ 9FE3 22 F9 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FE6              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FE6 7E               ld a,(hl)
 330+ 9FE7 32 02 89         ld (Cola_de_desplazamiento),a
 331+ 9FEA
 332+ 9FEA C3 92 9F         jp Cola
 333+ 9FED
 334+ 9FED CD 2A A0     2 call Inicia_Puntero_mov
 335+ 9FF0
 336+ 9FF0 21 07 89         ld hl,Ctrl_2
 337+ 9FF3 CB 96            res 2,(hl)
 338+ 9FF5
 339+ 9FF5 C3 5C 9F         jp Movimiento
 340+ 9FF8
 341+ 9FF8              Siguiente_desplazamiento
 342+ 9FF8
 343+ 9FF8              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FF8              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FF8
 346+ 9FF8 21 07 89         ld hl,Ctrl_2
 347+ 9FFB CB 96            res 2,(hl)
 348+ 9FFD
 349+ 9FFD 2A F9 88         ld hl,(Puntero_mov)
 350+ A000 23               inc hl
 351+ A001 23               inc hl
 352+ A002 22 F9 88         ld (Puntero_mov),hl
 353+ A005
 354+ A005 7E               ld a,(hl)
 355+ A006 A7               and a
 356+ A007 CC 90 A0         call z,Incrementa_Puntero_indice_mov
 357+ A00A CA CB 9F         jp z,Reinicia_el_movimiento
 358+ A00D
 359+ A00D C9               ret
 360+ A00E
 361+ A00E              ; Subrutinas -----------------------------------------
 362+ A00E              ; ---------- --------- --------- ---------- ----------
 363+ A00E              ;
 364+ A00E              ;   24/07/23
 365+ A00E              ;
 366+ A00E              ;   Fijamos_bucle
 367+ A00E              ;
 368+ A00E              ;
 369+ A00E
 370+ A00E              Fijamos_bucle
 371+ A00E
 372+ A00E 3A FD 88         ld a,(Incrementa_puntero)
 373+ A011 3C               inc a
 374+ A012 32 FE 88         ld (Incrementa_puntero_backup),a
 375+ A015
 376+ A015 CD 90 A0         call Incrementa_Puntero_indice_mov
 377+ A018 2A F7 88         ld hl,(Puntero_indice_mov)
 378+ A01B 22 FB 88         ld (Puntero_indice_mov_bucle),hl
 379+ A01E C9               ret
 380+ A01F
 381+ A01F              ; ---------- --------- --------- ---------- ----------
 382+ A01F              ;
 383+ A01F              ;   07/7/23
 384+ A01F              ;
 385+ A01F              ;   Inicia_Repetimos_movimiento
 386+ A01F              ;
 387+ A01F              ;
 388+ A01F
 389+ A01F              Inicia_Repetimos_movimiento
 390+ A01F
 391+ A01F              ; Iniciamos (Repetimos_movimiento).
 392+ A01F
 393+ A01F DD 2A F9 88      ld ix,(Puntero_mov)
 394+ A023 DD 7E 02         ld a,(ix+2)
 395+ A026 32 01 89         ld (Repetimos_movimiento),a
 396+ A029
 397+ A029 C9               ret
 398+ A02A
 399+ A02A              ; ---------- --------- --------- ---------- ----------
 400+ A02A              ;
 401+ A02A              ;   26/6/23
 402+ A02A              ;
 403+ A02A              ;   Inicia_Puntero_mov
 404+ A02A              ;
 405+ A02A              ;
 406+ A02A
 407+ A02A 2A F7 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ A02D 5E               ld e,(hl)
 409+ A02E 23               inc hl
 410+ A02F 56               ld d,(hl)
 411+ A030 EB               ex de,hl
 412+ A031 22 F9 88         ld (Puntero_mov),hl
 413+ A034 C9               ret
 414+ A035
 415+ A035              ; ---------- --------- --------- ---------- ----------
 416+ A035              ;
 417+ A035              ;   27/06/23
 418+ A035              ;
 419+ A035              ;   Aplica_movimiento.
 420+ A035
 421+ A035              Aplica_desplazamiento
 422+ A035
 423+ A035              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ A035
 425+ A035 2A F9 88         ld hl, (Puntero_mov)
 426+ A038
 427+ A038 7E               ld a,(hl)
 428+ A039 E6 F0            and $f0
 429+ A03B C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ A03C
 431+ A03C CB 7E            bit 7,(hl)
 432+ A03E 28 03            jr z,1F
 433+ A040 CD 5A 9A         call Mov_up
 434+ A043 2A F9 88     1 ld hl, (Puntero_mov)
 435+ A046 CB 76            bit 6,(hl)
 436+ A048 28 09            jr z,2F
 437+ A04A CD 1F 9A         call Mov_down
 438+ A04D
 439+ A04D              ; Se ha aplicado reinicio ???
 440+ A04D              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ A04D
 442+ A04D 3A 2A 89         ld a,(Ctrl_3)
 443+ A050 CB 57            bit 2,a
 444+ A052 C0               ret nz
 445+ A053
 446+ A053 2A F9 88     2 ld hl, (Puntero_mov)
 447+ A056 CB 6E            bit 5,(hl)
 448+ A058 28 03            jr z,3F
 449+ A05A CD BB 9B         call Mov_left
 450+ A05D 2A F9 88     3 ld hl, (Puntero_mov)
 451+ A060 CB 66            bit 4,(hl)
 452+ A062 C8               ret z
 453+ A063 CD 9D 9A         call Mov_right
 454+ A066 C9               ret
 455+ A067
 456+ A067              ; ---------- --------- --------- ---------- ----------
 457+ A067              ;
 458+ A067              ;   26/06/23
 459+ A067              ;
 460+ A067              ;   Ajusta_velocidad_desplazamiento.
 461+ A067
 462+ A067              Ajusta_velocidad_desplazamiento
 463+ A067
 464+ A067              ; 1er byte de la cadena de movimiento.
 465+ A067              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ A067
 467+ A067 CD 85 A0         call Extrae_nibble_alto
 468+ A06A
 469+ A06A 32 DD 88         ld (Vel_up),a
 470+ A06D 79               ld a,c
 471+ A06E E6 0F            and $0f
 472+ A070 32 DE 88         ld (Vel_down),a
 473+ A073
 474+ A073              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ A073              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ A073
 477+ A073 23               inc hl
 478+ A074 CD 85 A0         call Extrae_nibble_alto
 479+ A077
 480+ A077 32 DB 88         ld (Vel_left),a
 481+ A07A 79               ld a,c
 482+ A07B E6 0F            and $0f
 483+ A07D 32 DC 88         ld (Vel_right),a
 484+ A080
 485+ A080              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ A080
 487+ A080 23               inc hl
 488+ A081 22 F9 88         ld (Puntero_mov),hl
 489+ A084 C9               ret
 490+ A085
 491+ A085 06 04        Extrae_nibble_alto ld b,4
 492+ A087 7E               ld a,(hl)
 493+ A088 4F               ld c,a
 494+ A089 E6 F0            and $f0
 495+ A08B CB 3F        1 srl a
 496+ A08D 10 FC            djnz 1B
 497+ A08F C9               ret
 498+ A090
 499+ A090              ; ---------- --------- --------- ---------- ----------
 500+ A090              ;
 501+ A090              ;   5/7/23
 502+ A090              ;
 503+ A090              ;   Incrementa_Puntero_indice_mov
 504+ A090
 505+ A090              Incrementa_Puntero_indice_mov
 506+ A090
 507+ A090 21 FD 88         ld hl,Incrementa_puntero
 508+ A093 34               inc (hl)
 509+ A094
 510+ A094 2A F7 88         ld hl,(Puntero_indice_mov)
 511+ A097 01 02 00         ld bc,2
 512+ A09A A7               and a
 513+ A09B 09               add hl,bc
 514+ A09C 22 F7 88         ld (Puntero_indice_mov),hl
 515+ A09F
 516+ A09F 7E               ld a,(hl)
 517+ A0A0 A7               and a
 518+ A0A1
 519+ A0A1              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ A0A1
 521+ A0A1              ;    jr z,$
 522+ A0A1
 523+ A0A1              ;! Reinicia el Patrón de movimiento.
 524+ A0A1
 525+ A0A1 CC A6 A0         call z,Inicializa_Puntero_indice_mov
 526+ A0A4
 527+ A0A4 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ A0A5
 529+ A0A5 C9               ret
 530+ A0A6
 531+ A0A6
 532+ A0A6              ; ---------- --------- --------- ---------- ----------
 533+ A0A6              ;
 534+ A0A6              ;   24/07/23
 535+ A0A6              ;
 536+ A0A6              ;   Inicializa_Puntero_indice_mov
 537+ A0A6
 538+ A0A6              Inicializa_Puntero_indice_mov
 539+ A0A6
 540+ A0A6              ; Existe etiqueta de bucle principal???
 541+ A0A6
 542+ A0A6 2A FB 88         ld hl,(Puntero_indice_mov_bucle)
 543+ A0A9 24               inc h
 544+ A0AA 25               dec h
 545+ A0AB 28 05            jr z,2F
 546+ A0AD
 547+ A0AD 22 F7 88         ld (Puntero_indice_mov),hl
 548+ A0B0 18 14            jr 3F
 549+ A0B2
 550+ A0B2              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ A0B2
 552+ A0B2 3A FD 88     2 ld a,(Incrementa_puntero)
 553+ A0B5 47               ld b,a
 554+ A0B6
 555+ A0B6 2A F7 88         ld hl,(Puntero_indice_mov)
 556+ A0B9 2B           1 dec hl
 557+ A0BA 2B               dec hl
 558+ A0BB 10 FC            djnz 1B
 559+ A0BD 22 F7 88         ld (Puntero_indice_mov),hl
 560+ A0C0
 561+ A0C0 AF               xor a
 562+ A0C1 32 FD 88         ld (Incrementa_puntero),a
 563+ A0C4 18 06            jr 4F
 564+ A0C6
 565+ A0C6 3A FE 88     3 ld a,(Incrementa_puntero_backup)
 566+ A0C9 32 FD 88         ld (Incrementa_puntero),a
 567+ A0CC C9           4 ret
 568+ A0CD
 569+ A0CD
 570+ A0CD
# file closed: Patrones_de_mov.asm
1876  A0CD              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0CD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0CD              ;
   3+ A0CD              ;	12/12/23
   4+ A0CD              ;
   5+ A0CD              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0CD
   7+ A0CD              ;	ADC HL,SP	LD (addr),SP
   8+ A0CD              ;	ADD HL,SP	LD SP,(addr)
   9+ A0CD              ;	ADD IX,SP	LD SP,nn
  10+ A0CD              ; 	ADD IY,SP	LD SP,HL
  11+ A0CD              ;				LD SP,IX
  12+ A0CD              ;	DEC SP		LD SP,IY
  13+ A0CD
  14+ A0CD              ;	EX (SP),HL
  15+ A0CD              ;	EX (SP),IX
  16+ A0CD              ;	EX (SP),IY
  17+ A0CD
  18+ A0CD              ;	INC SP
  19+ A0CD
  20+ A0CD                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 1C 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 E6 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 F2 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 0B 89         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 24 89         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A F6 88     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 28 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 22 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 0B 89         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 24 89         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A F6 88     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 28 89         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 1C 89      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 22 89     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 1C 89  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 22 89         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 22 89         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1877  718B
1878  718B              	SAVESNA "Pruebas.sna", START
1879  718B
1880  718B
1881  718B
1882  718B
# file closed: Banco_de_pruebas.asm
