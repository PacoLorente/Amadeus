# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8284	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $828c	;	($828c - $82bd)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82c0	;	($82c0 - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82f4
  60  82F4
  61  82F4 F5           	push af
  62  82F5 E5           	push hl
  63  82F6
  64  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82F6 21 33 8C     	ld hl,Ctrl_3
  66  82F9 CB 46        	bit 0,(hl)
  67  82FB 28 FE        	jr z,$
  68  82FD              ;! -------------------
  69  82FD
  70  82FD              ; Disparos.
  71  82FD
  72  82FD CD 53 A1     	call Pinta_disparos_Amadeus
  73  8300
  74  8300              ; Shield -----------------------
  75  8300
  76  8300              Temporizacion_shield
  77  8300
  78  8300 21 5D 8C     	ld hl,Shield
  79  8303 7E           	ld a,(hl)
  80  8304 A7           	and a
  81  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  82  8307
  83  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  84  8308
  85  8308 23           	inc hl
  86  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  87  830A
  88  830A 20 17        	jr nz,Incrementa_FRAMES
  89  830C
  90  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  91  830C
  92  830C              Cambio_de_estado
  93  830C
  94  830C              ;	Indica cambio de estado.
  95  830C
  96  830C 23           	inc hl						;	Sitúa en (Shield_3).
  97  830D
  98  830D CB 5E        	bit 3,(hl)
  99  830F 28 05        	jr z,2F
 100  8311
 101  8311 CD 33 91     	call Inicia_Shield
 102  8314
 103  8314 18 0D        	jr Incrementa_FRAMES
 104  8316
 105  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 106  8318
 107  8318              ;	Carga en (Shield_2) la siguiente temporización.
 108  8318
 109  8318 2A 5B 8C     	ld hl,(Puntero_datos_shield)
 110  831B 23           	inc hl
 111  831C 22 5B 8C     	ld (Puntero_datos_shield),hl
 112  831F 7E           	ld a,(hl)
 113  8320 32 5E 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 114  8323
 115  8323              Incrementa_FRAMES
 116  8323
 117  8323 2A 78 5C     	ld hl,(FRAMES)
 118  8326 23           	inc hl
 119  8327 22 78 5C     	ld (FRAMES),hl
 120  832A
 121  832A 7C           	ld a,h
 122  832B B5           	or l
 123  832C 20 04        	jr nz,1F
 124  832E
 125  832E 21 7A 5C     	ld hl,FRAMES_3
 126  8331 34           	inc (hl)
 127  8332
 128  8332 D5           1 push de
 129  8333 C5           	push bc
 130  8334
 131  8334 CD 43 91     	call Actualiza_pantalla
 132  8337
 133  8337 C1           	pop bc
 134  8338 D1           	pop de
 135  8339 E1           	pop hl
 136  833A F1           	pop af
 137  833B
 138  833B FB           	ei
 139  833C
 140  833C C9           	ret
 141  833D
 142  833D              ; --------------------------------------------------------------------------------
 143  833D
 144  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 145  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 146  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 147  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D AE 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BAC 01 01
  18+ 8BAE
  19+ 8BAE 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAF 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BB3 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB7 01 02
  22+ 8BB9 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BBD 01 02
  23+ 8BBF
# file closed: Niveles.asm
 148  8BBF
 149  8BBF              ; --------------------------------------------------------------------------------
 150  8BBF              ;
 151  8BBF              ; 12/05/24
 152  8BBF              ;
 153  8BBF              ; Parámetros DRAW.
 154  8BBF              ;
 155  8BBF
 156  8BBF              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 157  8BBF
 158  8BBF 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 159  8BC0              ;															- Patrón de movimiento.
 160  8BC0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 161  8BC1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 162  8BC2
 163  8BC2 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 164  8BC3              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 165  8BC3
 166  8BC3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 167  8BC3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 168  8BC3              ; Ejemplos.
 169  8BC3
 170  8BC3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 171  8BC3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 172  8BC3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 173  8BC3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 174  8BC3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 175  8BC3
 176  8BC3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 177  8BC4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 178  8BC4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 179  8BC4
 180  8BC4 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 181  8BC6              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 182  8BC6
 183  8BC6 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 184  8BC8
 185  8BC8              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 186  8BC8
 187  8BC8 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 188  8BCA              ;														; _palabras que componen el "movimiento_masticado".
 189  8BCA
 190  8BCA              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 191  8BCA
 192  8BCA 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 193  8BCB              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 194  8BCB              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 195  8BCB              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 196  8BCB              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 197  8BCB
 198  8BCB 00           Ctrl_2 db 0
 199  8BCC              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 200  8BCC              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 201  8BCC              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 202  8BCC              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 203  8BCC              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 204  8BCC              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 205  8BCC              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 206  8BCC              ;
 207  8BCC              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 208  8BCC              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 209  8BCC              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 210  8BCC              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 211  8BCC              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 212  8BCC              ;														BIT 4, ???
 213  8BCC              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 214  8BCC
 215  8BCC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 216  8BCD              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 217  8BCD              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 218  8BCD              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 219  8BCD              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 220  8BCD              ;
 221  8BCD              ; 														DESCRIPCIÖN:
 222  8BCD              ;
 223  8BCD              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 224  8BCD              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 225  8BCD              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 226  8BCD              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 227  8BCD              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 228  8BCD              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 229  8BCD              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 230  8BCD              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 231  8BCD              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 232  8BCD              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 233  8BCD              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 234  8BCD              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 235  8BCD              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 236  8BCD              ;
 237  8BCD              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 238  8BCD              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 239  8BCD              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 240  8BCD
 241  8BCD              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 242  8BCD
 243  8BCD 00           Filas db 0												; Filas. [DRAW]
 244  8BCE 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 245  8BCF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 246  8BD1 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 247  8BD3
 248  8BD3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 249  8BD3
 250  8BD3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 251  8BD4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 252  8BD4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 253  8BD4
 254  8BD4              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 255  8BD4
 256  8BD4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 257  8BD4              ;
 258  8BD4              ;	COLORES: 0 ..... NEGRO
 259  8BD4              ;    		 1 ..... AZUL
 260  8BD4              ; 			 2 ..... ROJO
 261  8BD4              ;			 3 ..... MAGENTA
 262  8BD4              ; 			 4 ..... VERDE
 263  8BD4              ; 			 5 ..... CIAN
 264  8BD4              ;			 6 ..... AMARILLO
 265  8BD4              ; 			 7 ..... BLANCO
 266  8BD4
 267  8BD4 00 00        Indice_Sprite_der defw 0
 268  8BD6 00 00        Indice_Sprite_izq defw 0
 269  8BD8 00 00        Puntero_DESPLZ_der defw 0
 270  8BDA 00 00        Puntero_DESPLZ_izq defw 0
 271  8BDC
 272  8BDC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 273  8BDE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 274  8BDF 00           Columnas db 0
 275  8BE0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 276  8BE2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 277  8BE2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BE3
 279  8BE3              ; variables de control general.
 280  8BE3
 281  8BE3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 282  8BE4
 283  8BE4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 284  8BE4
 285  8BE4              Perfiles_de_velocidad
 286  8BE4
 287  8BE4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 288  8BE5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 289  8BE6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 290  8BE7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 291  8BE8
 292  8BE8              ; Contadores de 16 bits.
 293  8BE8
 294  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 295  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 296  8BEC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 297  8BEE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 298  8BF0
 299  8BF0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 300  8BF0
 301  8BF0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 302  8BF2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 303  8BF4 00 00        Puntero_indice_mov_bucle defw 0							;
 304  8BF6              ;
 305  8BF6              ;
 306  8BF6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 307  8BF7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 308  8BF7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 309  8BF7 00           Incrementa_puntero_backup db 0
 310  8BF8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 311  8BF9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 312  8BF9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 313  8BFA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 314  8BFB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 315  8BFC              ;
 316  8BFC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 317  8BFC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 318  8BFC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 319  8BFC              ;
 320  8BFC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 321  8BFC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 322  8BFC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 323  8BFC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 324  8BFC              ;
 325  8BFC              ;														;	"$ff" ..... Bucle infinito de repetición.
 326  8BFC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 327  8BFC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 328  8BFC
 329  8BFC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 330  8BFD
 331  8BFD              ;														DESCRIPCIÓN:
 332  8BFD              ;
 333  8BFD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 334  8BFD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 335  8BFD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 336  8BFD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 337  8BFD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 338  8BFD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 339  8BFD
 340  8BFD              ;														BIT 3, Recarga de nueva oleada.
 341  8BFD              ;														BIT 4, Recarga de nueva oleada.
 342  8BFD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 343  8BFD              ;														BIT 6, **** Frame completo.
 344  8BFD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 345  8BFD
 346  8BFD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 347  8BFF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 348  8BFF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 349  8BFF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 350  8BFF
 351  8BFF              ; Gestión de ENTIDADES y CAJAS.
 352  8BFF
 353  8BFF 00 00        Puntero_store_caja defw 0
 354  8C01 00 00        Puntero_restore_caja defw 0
 355  8C03 00 00        Indice_restore_caja defw 0
 356  8C05 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 357  8C06 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 358  8C07 00           Entidades_en_curso db 0									; ..... ..... .....
 359  8C08
 360  8C08 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 361  8C0A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 362  8C0C              ;														; _ puntero (Indice_entidades).
 363  8C0C
 364  8C0C              ;---------------------------------------------------------------------------------------------------------------
 365  8C0C              ;
 366  8C0C              ;	13/10/24
 367  8C0C              ;
 368  8C0C              ;	Álbumes.
 369  8C0C
 370  8C0C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 371  8C0E              ;														; _variable para almacenar lo posición del puntero_
 372  8C0E              ; 														; _de pila, SP.
 373  8C0E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 374  8C10              ;														; La utiliza la rutina [Extrae_foto_registros].
 375  8C10
 376  8C10              ; Impresión. ----------------------------------------------------------------------------------------------------
 377  8C10
 378  8C10 00 00        Album_de_pintado defw 0
 379  8C12 00 00        Album_de_borrado defw 0
 380  8C14 00 00        Album_de_pintado_Amadeus defw 0
 381  8C16 00 00        Album_de_borrado_Amadeus defw 0
 382  8C18
 383  8C18 00 00        Album_de_pintado_disparos_Amadeus defw 0
 384  8C1A 00 00        Album_de_borrado_disparos_Amadeus defw 0
 385  8C1C
 386  8C1C 00 00        Album_de_pintado_disparos_Entidades defw 0
 387  8C1E 00 00        Album_de_borrado_disparos_Entidades defw 0
 388  8C20
 389  8C20
 390  8C20 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 391  8C22 00           Num_de_bytes_album_de_disparos db 0
 392  8C23
 393  8C23 07           Numero_de_disparos_de_entidades db 7
 394  8C24
 395  8C24 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 396  8C25 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 397  8C26
 398  8C26 00 00        Techo_Scanlines_album defw 0
 399  8C28 00 00        Techo_Scanlines_album_2 defw 0
 400  8C2A 00           Switch db 0
 401  8C2B 00 00        Techo defw 0
 402  8C2D 00 00        Scanlines_album_SP defw 0
 403  8C2F 00 89        India_SP defw Tabla_de_pintado
 404  8C31 03 89        India_2_SP defw Tabla_de_pintado+3
 405  8C33
 406  8C33 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 407  8C34              ;
 408  8C34              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 409  8C34              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 410  8C34              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 411  8C34              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 412  8C34              ;																Habilita el borrado/pintado de sprites.
 413  8C34              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 414  8C34              ;																_ a la baja.
 415  8C34              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 416  8C34              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 417  8C34              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 418  8C34              ; 																_ el último frame de la explosión de nuestra nave.
 419  8C34              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 420  8C34              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 421  8C34
 422  8C34 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 423  8C35              ;
 424  8C35              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 425  8C35              ;
 426  8C35              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 427  8C35              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 428  8C35              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 429  8C35              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 430  8C35              ;
 431  8C35              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 432  8C35              ;															_ masticados ya generados.
 433  8C35              ;
 434  8C35              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 435  8C35              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 436  8C35              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 437  8C35              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 438  8C35
 439  8C35 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 440  8C36              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 441  8C36
 442  8C36
 443  8C36
 444  8C36
 445  8C36
 446  8C36              ; Gestión de Disparos.
 447  8C36
 448  8C36 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 449  8C38 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 450  8C3A 00           Impacto2 db 0											; Byte de control de impactos.
 451  8C3B
 452  8C3B              ;
 453  8C3B              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 454  8C3B              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 455  8C3B              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 456  8C3B              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 457  8C3B
 458  8C3B
 459  8C3B
 460  8C3B
 461  8C3B
 462  8C3B
 463  8C3B
 464  8C3B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 465  8C3D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 466  8C3D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 467  8C3D
 468  8C3D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 469  8C3F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 470  8C3F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 471  8C42              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 472  8C42 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 473  8C45              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 474  8C45
 475  8C45              ;---------------------------------------------------------------------------------------------------------------
 476  8C45
 477  8C45              ; Relojes y temporizaciones.
 478  8C45
 479  8C45 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 480  8C46 05           Clock_explosion_Amadeus db 5
 481  8C47 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 482  8C48
 483  8C48 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 484  8C4A F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 485  8C4C 00           Numero_rnd_disparos db 0
 486  8C4D
 487  8C4D 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 488  8C4F 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 489  8C50              ;														; Repite la oleada de entidades.
 490  8C50 A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 491  8C51 A0           CLOCK_disparos_de_entidades db $a0
 492  8C52
 493  8C52              ;---------------------------------------------------------------------------------------------------------------
 494  8C52
 495  8C52              ; Gestión de NIVELES.
 496  8C52
 497  8C52 00           Nivel db 0												; Nivel actual del juego.
 498  8C53 00 00        Puntero_indice_NIVELES defw 0
 499  8C55 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 500  8C57              ; 														; _ que definen el NIVEL.
 501  8C57
 502  8C57              ; ---------------------------------------------------------------------------------------------------------------
 503  8C57
 504  8C57              ; Temporizaciones Shield.
 505  8C57
 506  8C57 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 507  8C5B 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 508  8C5D 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 509  8C5E 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 510  8C5F 00           Shield_3 db 0
 511  8C60
 512  8C60 06           Lives db 6
 513  8C61
 514  8C61              ; 	INICIO  *************************************************************************************************************************************************************************
 515  8C61              ;
 516  8C61              ;	5/1/24
 517  8C61
 518  8C61              START
 519  8C61
 520  8C61 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 521  8C64 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 522  8C66 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 523  8C68 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 524  8C6A F3           	DI
 525  8C6B
 526  8C6B              ; Limpiamos pantalla.
 527  8C6B
 528  8C6B 3E 07        	ld a,%00000111
 529  8C6D CD D0 94     	call Cls
 530  8C70 CD 28 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 531  8C73
 532  8C73              ; INICIALIZACIÓN.
 533  8C73
 534  8C73 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 535  8C75 CD 75 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 536  8C78
 537  8C78 CD BD 8E     	call Extrae_numero_aleatorio_y_avanza
 538  8C7B
 539  8C7B 6F           	ld l,a
 540  8C7C 26 00        	ld h,0
 541  8C7E 22 4D 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 542  8C81
 543  8C81              ;	Inicializa 1er Nivel.
 544  8C81
 545  8C81 21 9B 8B     	ld hl,Indice_de_niveles
 546  8C84 22 53 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 547  8C87 CD A5 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 548  8C8A              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 549  8C8A              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 550  8C8A              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 551  8C8A
 552  8C8A              ;	Inicia los álbumes de líneas.
 553  8C8A
 554  8C8A CD 76 90     	call Inicia_albumes_de_lineas
 555  8C8D              ;
 556  8C8D CD 86 90     	call Inicia_albumes_de_lineas_Amadeus
 557  8C90 CD 93 90     	call Inicia_albumes_de_disparos
 558  8C93
 559  8C93 CD EA 92     4 call Inicia_Entidades
 560  8C96 CD 4D 93     	call Inicia_Amadeus
 561  8C99
 562  8C99              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 563  8C99              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 564  8C99              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 565  8C99
 566  8C99 11 74 89     	ld de,Amadeus_BOX
 567  8C9C CD A0 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 568  8C9F CD 90 93     	call Limpiamos_bandeja_DRAW
 569  8CA2
 570  8CA2              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 571  8CA2
 572  8CA2 06 3C        	ld b,60
 573  8CA4 CD 76 9D     2 call Amadeus_a_izquierda
 574  8CA7 10 FB        	djnz 2B
 575  8CA9
 576  8CA9 CD 54 90     	call Genera_datos_de_impresion_Amadeus
 577  8CAC
 578  8CAC              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 579  8CAC
 580  8CAC CD AF 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 581  8CAF              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 582  8CAF
 583  8CAF              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 584  8CAF              ; (Esto se dá cuando se inicia una nueva oleada).
 585  8CAF
 586  8CAF              ;	ld a,(Ctrl_1)
 587  8CAF              ;	bit 3,a
 588  8CAF              ;	jr nz,5F											 ; Loop
 589  8CAF
 590  8CAF              ;	ld de,Amadeus_db
 591  8CAF              ;	call Store_Amadeus
 592  8CAF
 593  8CAF              ; 	INICIA DISPAROS !!!!!
 594  8CAF
 595  8CAF              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 596  8CAF
 597  8CAF              ;5 call Inicia_punteros_de_cajas
 598  8CAF              ;	call Restore_entidad
 599  8CAF
 600  8CAF              ;	ld a,(Ctrl_1)
 601  8CAF              ;	bit 3,a
 602  8CAF              ;	jr z,6F
 603  8CAF
 604  8CAF              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 605  8CAF
 606  8CAF              ;	ld hl,Ctrl_1
 607  8CAF              ;	res 3,(hl)
 608  8CAF              ;	jr Main
 609  8CAF
 610  8CAF              ; Damos por concluida la construcción del FRAME.
 611  8CAF              ;
 612  8CAF
 613  8CAF CD 33 91     	call Inicia_Shield
 614  8CB2
 615  8CB2
 616  8CB2 2A 2D 8C     6 ld hl,(Scanlines_album_SP)
 617  8CB5 22 26 8C     	ld (Techo_Scanlines_album),hl
 618  8CB8
 619  8CB8 2A 12 8C     	ld hl,(Album_de_borrado)
 620  8CBB 22 2D 8C     	ld (Scanlines_album_SP),hl
 621  8CBE
 622  8CBE 21 00 89     	ld hl,Tabla_de_pintado
 623  8CC1 22 2F 8C     	ld (India_SP),hl
 624  8CC4
 625  8CC4 21 33 8C     	ld hl,Ctrl_3
 626  8CC7 CB C6        	set 0,(hl) 											; Indica Frame completo.
 627  8CC9 CB D6        	set 2,(hl)
 628  8CCB CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 629  8CCD
 630  8CCD FB           	ei 													; Ha de apuntar a $5c3a.
 631  8CCE
 632  8CCE 76           	halt
 633  8CCF
 634  8CCF              ; ------------------------------------
 635  8CCF
 636  8CCF              Main
 637  8CCF              ;
 638  8CCF              ; 20/09/24
 639  8CCF
 640  8CCF
 641  8CCF 3A 35 8C         ld a,(Ctrl_5)
 642  8CD2 CB 57            bit 2,a
 643  8CD4 F3               di
 644  8CD5 20 FE            jr nz,$
 645  8CD7 FB               ei
 646  8CD8
 647  8CD8              ; Gestión de disparos.
 648  8CD8
 649  8CD8 CD 94 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 650  8CDB              ;	call Motor_de_disparos_entidades
 651  8CDB CD FF A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 652  8CDE
 653  8CDE
 654  8CDE
 655  8CDE
 656  8CDE
 657  8CDE              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 658  8CDE              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 659  8CDE              ; Este hecho lo indica el bit2 de (Impacto2).
 660  8CDE
 661  8CDE CD 9C A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 662  8CE1
 663  8CE1              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 664  8CE1
 665  8CE1 21 51 8C     	ld hl,CLOCK_disparos_de_entidades
 666  8CE4 35           	dec (hl)
 667  8CE5 CC DD 8D     	call z,Autoriza_disparo_de_entidades
 668  8CE8
 669  8CE8 2A 4D 8C     	ld hl,(Clock_next_entity)
 670  8CEB ED 4B 78 5C  	ld bc,(FRAMES)
 671  8CEF A7           	and a
 672  8CF0 ED 42        	sbc hl,bc
 673  8CF2 20 16        	jr nz,1F
 674  8CF4
 675  8CF4              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 676  8CF4              ; _ (Clock_next_entity) para la siguiente entidad.
 677  8CF4
 678  8CF4 3A 06 8C     	ld a,(Numero_parcial_de_entidades)
 679  8CF7 47           	ld b,a
 680  8CF8 3A 07 8C     	ld a,(Entidades_en_curso)
 681  8CFB B8           	cp b
 682  8CFC 28 0C        	jr z,1F
 683  8CFE 30 0A        	jr nc,1F
 684  8D00
 685  8D00 3C           	inc a
 686  8D01 32 07 8C     	ld (Entidades_en_curso),a
 687  8D04
 688  8D04              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 689  8D04
 690  8D04 CD BD 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 691  8D07 CD D9 8E     	call Define_Clock_next_entity
 692  8D0A
 693  8D0A 3A 07 8C     1 ld a,(Entidades_en_curso)
 694  8D0D A7           	and a
 695  8D0E CA 88 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 696  8D11 47           	ld b,a												; No hay entidades que gestionar.
 697  8D12
 698  8D12              ; ( Código que ejecutamos con cada entidad: ).
 699  8D12
 700  8D12              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 701  8D12              ;
 702  8D12              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 703  8D12
 704  8D12 21 00 89     	ld hl,Tabla_de_pintado
 705  8D15 22 2F 8C     	ld (India_SP),hl
 706  8D18
 707  8D18 21 33 8C     	ld hl,Ctrl_3
 708  8D1B CB D6        	set 2,(hl)
 709  8D1D CD 69 8E     	call Change
 710  8D20
 711  8D20 C5           2 push bc 												; Nº de entidades en curso.
 712  8D21
 713  8D21 CD 00 91     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 714  8D24 ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
 715  8D28
 716  8D28              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 717  8D28
 718  8D28              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 719  8D28              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 720  8D28
 721  8D28 3A 3A 8C     	ld a,(Impacto2)
 722  8D2B CB 5F        	bit 3,a
 723  8D2D C4 97 A0     	call nz,Compara_con_coordenadas_de_disparo
 724  8D30
 725  8D30 3A C3 8B     	ld a,(Impacto)
 726  8D33 CB 4F        	bit 1,a
 727  8D35 C4 10 92     	call nz,Genera_explosion
 728  8D38 20 31        	jr nz,Gestiona_siguiente_entidad
 729  8D3A
 730  8D3A 3A C3 8B     	ld a,(Impacto)
 731  8D3D A7           	and a
 732  8D3E 28 0C        	jr z,3F
 733  8D40
 734  8D40              ; IMPACTO en entidad por colisión con Amadeus.
 735  8D40
 736  8D40              ; 5/7/24
 737  8D40              ; Nota importante:
 738  8D40              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 739  8D40              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 740  8D40              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 741  8D40
 742  8D40 3A 78 89     	ld a,(Impacto_Amadeus)
 743  8D43 A7           	and a
 744  8D44 C4 10 92     	call nz,Genera_explosion
 745  8D47 20 22        	jr nz,Gestiona_siguiente_entidad
 746  8D49
 747  8D49              ; Falsa colisión !!!
 748  8D49
 749  8D49 32 C3 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 750  8D4C
 751  8D4C              ; -------------------------------------------
 752  8D4C
 753  8D4C CD 1D 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 754  8D4F CD 49 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 755  8D52 CD 0D 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 756  8D55 CD 10 95     	call Genera_datos_de_impresion
 757  8D58 CD B3 93     	call Decrementa_Contador_de_mov_masticados
 758  8D5B
 759  8D5B              ; -------------------------------------------
 760  8D5B
 761  8D5B              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 762  8D5B
 763  8D5B 2A C4 8B     	ld hl,(Puntero_de_impresion)
 764  8D5E CD E4 94     	call Genera_coordenadas
 765  8D61
 766  8D61              ; TODO: Generamos disparo ???
 767  8D61
 768  8D61 3A 25 8C     	ld a,(Permiso_de_disparo_Entidades)
 769  8D64 A7           	and a
 770  8D65 C4 F2 8D     	call nz,Entidad_genera_disparo_si_procede
 771  8D68
 772  8D68 CD 1A A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 773  8D6B
 774  8D6B              Gestiona_siguiente_entidad
 775  8D6B
 776  8D6B CD 85 93      	call Store_Restore_cajas
 777  8D6E C1           	pop bc
 778  8D6F 10 AF        	djnz 2B
 779  8D71
 780  8D71              ; Hemos gestionado todas las entidades.
 781  8D71              ; ----- ----- -----
 782  8D71
 783  8D71 CD 31 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 784  8D74 CD 48 8F     	call Ordena_tabla_de_impresion
 785  8D77 CD AF 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 786  8D7A
 787  8D7A CD EE 8E     	call Borra_diferencia
 788  8D7D
 789  8D7D 3A 33 8C     	ld a,(Ctrl_3)
 790  8D80 CB 5F        	bit 3,a
 791  8D82 20 04        	jr nz,Gestion_de_Amadeus
 792  8D84
 793  8D84 EB           	ex de,hl
 794  8D85 71           	ld (hl),c
 795  8D86 2C           	inc l
 796  8D87 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 797  8D88
 798  8D88              ;! GESTIONA AMADEUS !!!!!!!!!!
 799  8D88
 800  8D88              Gestion_de_Amadeus
 801  8D88
 802  8D88 21 33 8C     	ld hl,Ctrl_3
 803  8D8B CB 76        	bit 6,(hl)
 804  8D8D 28 13        	jr z,Amadeus_vivo
 805  8D8F
 806  8D8F              ; Amadeus ha sido destruido.
 807  8D8F              ; Decrementa (Temp_new_live).
 808  8D8F
 809  8D8F 21 47 8C     	ld hl,Temp_new_live
 810  8D92 35           	dec (hl)
 811  8D93 20 26        	jr nz,End_frame
 812  8D95
 813  8D95              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 814  8D95
 815  8D95 21 60 8C     	ld hl,Lives
 816  8D98 35           	dec (hl)
 817  8D99
 818  8D99              ;! Fin del juego
 819  8D99
 820  8D99 F3           	di
 821  8D9A 28 FE        	jr z,$
 822  8D9C FB           	ei
 823  8D9D
 824  8D9D              ; Nueva nave.
 825  8D9D
 826  8D9D CD 0F 8E     	call Reinicia_Amadeus
 827  8DA0 18 19        	jr End_frame
 828  8DA2
 829  8DA2              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 830  8DA2
 831  8DA2              Amadeus_vivo
 832  8DA2
 833  8DA2 3A 78 89     	ld a,(Impacto_Amadeus)
 834  8DA5 A7           	and a
 835  8DA6 C4 40 92     	call nz, Genera_explosion_Amadeus
 836  8DA9 20 10        	jr nz, End_frame
 837  8DAB
 838  8DAB CD ED 91     	call Teclado
 839  8DAE
 840  8DAE 21 33 8C     	ld hl,Ctrl_3
 841  8DB1 CB 6E        	bit 5,(hl)
 842  8DB3 28 06        	jr z,End_frame
 843  8DB5
 844  8DB5              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 845  8DB5
 846  8DB5 CD 84 8E     	call Change_Amadeus
 847  8DB8 CD 54 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 848  8DBB
 849  8DBB              End_frame
 850  8DBB
 851  8DBB              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 852  8DBB              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 853  8DBB
 854  8DBB CD B5 9F     	call Genera_datos_de_impresion_disparos_Entidades
 855  8DBE CD 85 A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 856  8DC1 CD DA A0     	call Calcula_bytes_pintado_disparos
 857  8DC4 CD E7 A0     	call Limpia_album_de_pintado_disparos_entidades
 858  8DC7
 859  8DC7              ; ------------ ------------- --------------
 860  8DC7
 861  8DC7              ;	xor a
 862  8DC7              ;	ld (Permiso_de_disparo_Entidades),a
 863  8DC7              ;	call Actuaiza_sp_de_disparos_de_entidades
 864  8DC7
 865  8DC7 2A 12 8C     	ld hl,(Album_de_borrado)
 866  8DCA 22 2D 8C     	ld (Scanlines_album_SP),hl
 867  8DCD
 868  8DCD 21 33 8C     	ld hl,Ctrl_3
 869  8DD0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 870  8DD2 CB 9E        	res 3,(hl)
 871  8DD4 CB A6        	res 4,(hl)
 872  8DD6
 873  8DD6 AF           	xor a
 874  8DD7 D3 FE        	out ($fe),a
 875  8DD9
 876  8DD9 76           	halt
 877  8DDA
 878  8DDA              ; ----------------------------------------
 879  8DDA
 880  8DDA              ;	ld a,(Ctrl_1) 										; Existe Loop?
 881  8DDA              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 882  8DDA CA CF 8C     	jp z,Main
 883  8DDD
 884  8DDD              ;------------------------------------------
 885  8DDD              ;
 886  8DDD              ;	2/10/24
 887  8DDD
 888  8DDD              Autoriza_disparo_de_entidades
 889  8DDD
 890  8DDD 3E 01        	ld a,1
 891  8DDF 32 25 8C     	ld (Permiso_de_disparo_Entidades),a
 892  8DE2
 893  8DE2 3A 50 8C     	ld a,(Repone_CLOCK_disparos)
 894  8DE5 FE 19        	cp 25
 895  8DE7 38 02        	jr c,1F
 896  8DE9
 897  8DE9 D6 05        	sub 5
 898  8DEB
 899  8DEB 32 50 8C     1 ld (Repone_CLOCK_disparos),a
 900  8DEE 32 51 8C     	ld (CLOCK_disparos_de_entidades),a
 901  8DF1
 902  8DF1 C9           	ret
 903  8DF2
 904  8DF2              ;------------------------------------------
 905  8DF2              ;
 906  8DF2              ;	14/09/24
 907  8DF2              ;
 908  8DF2              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 909  8DF2
 910  8DF2              Entidad_genera_disparo_si_procede
 911  8DF2
 912  8DF2 2A 4A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 913  8DF5 CB 06        	rlc (hl)
 914  8DF7
 915  8DF7 DC 0D A0     	call c,Genera_disparo_de_entidad_maldosa
 916  8DFA
 917  8DFA C9           	ret
 918  8DFB
 919  8DFB              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 920  8DFB              ;
 921  8DFB              ;	30/09/24
 922  8DFB
 923  8DFB              Actuaiza_sp_de_disparos_de_entidades
 924  8DFB
 925  8DFB 2A 4A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 926  8DFE 23           	inc hl
 927  8DFF 22 4A 8C     	ld (Puntero_num_aleatorios_disparos),hl
 928  8E02
 929  8E02 11 FD 88     	ld de,Numeros_aleatorios+7
 930  8E05 7B           	ld a,e
 931  8E06 95           	sub l
 932  8E07 C0           	ret nz
 933  8E08
 934  8E08 21 F6 88     1 ld hl,Numeros_aleatorios
 935  8E0B 22 4A 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 936  8E0E C9           	ret
 937  8E0F
 938  8E0F              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 939  8E0F              ;
 940  8E0F              ;	24/07/24
 941  8E0F
 942  8E0F              Reinicia_Amadeus
 943  8E0F
 944  8E0F              ;	Reinicia posición y estado.
 945  8E0F
 946  8E0F 21 CF 50     	ld hl,$50cf
 947  8E12 22 79 89     	ld (p.imp.amadeus),hl
 948  8E15 21 F0 E0     	ld hl,$e0f0
 949  8E18 22 7B 89     	ld (Pamm_Amadeus),hl
 950  8E1B 21 3D 00     	ld hl,$003d
 951  8E1E 22 7D 89     	ld (Comm_Amadeus),hl
 952  8E21
 953  8E21              ;	limpiamos el álbum de borrado.
 954  8E21
 955  8E21 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
 956  8E24
 957  8E24 AF           	xor a
 958  8E25 77           	ld (hl),a
 959  8E26
 960  8E26 E5           	push hl
 961  8E27 D1           	pop de
 962  8E28 13           	inc de
 963  8E29
 964  8E29 01 23 00     	ld bc,35
 965  8E2C ED B0        	ldir
 966  8E2E
 967  8E2E CD 54 90     	call Genera_datos_de_impresion_Amadeus
 968  8E31
 969  8E31              ;	Reinicia temporizaciones.
 970  8E31
 971  8E31 CD 33 91     	call Inicia_Shield
 972  8E34
 973  8E34 3E 5A        	ld a,90
 974  8E36 32 5D 8C     	ld (Shield),a
 975  8E39
 976  8E39 3E 64        	ld a,100
 977  8E3B 32 47 8C     	ld (Temp_new_live),a
 978  8E3E
 979  8E3E              ; 	Restauramos el FLAG: Amadeus vivo.
 980  8E3E
 981  8E3E 21 33 8C     	ld hl,Ctrl_3
 982  8E41 CB B6        	res 6,(hl)
 983  8E43
 984  8E43              ;	Fuerza la impresión de la nave en el siguiente frame.
 985  8E43
 986  8E43 21 33 8C      	ld hl,Ctrl_3
 987  8E46 CB EE        	set 5,(hl)
 988  8E48
 989  8E48 C9           	ret
 990  8E49
 991  8E49              ; --------------------------------------------------------------------------------------------------------------
 992  8E49              ;
 993  8E49              ;	12/05/24
 994  8E49
 995  8E49 3A CA 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 996  8E4C CB 27        	sla a
 997  8E4E 32 CA 8B     	ld (Velocidad),a
 998  8E51 E6 10        	and $10
 999  8E53 C8           	ret z
1000  8E54
1001  8E54              ; Restaura (Velocidad) a razón del nº de vueltas.
1002  8E54
1003  8E54 3A C2 8B     	ld a,(Contador_de_vueltas)
1004  8E57 CB 2F        	sra a
1005  8E59 CB 2F        	sra a
1006  8E5B 32 CA 8B     	ld (Velocidad),a
1007  8E5E
1008  8E5E 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1009  8E61 23           	inc hl
1010  8E62 23           	inc hl
1011  8E63 23           	inc hl
1012  8E64 23           	inc hl
1013  8E65 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1014  8E68
1015  8E68 C9           	ret
1016  8E69
1017  8E69              ; --------------------------------------------------------------------------------------------------------------
1018  8E69              ;
1019  8E69              ;	25/08/24
1020  8E69
1021  8E69              Change
1022  8E69
1023  8E69 3A 2A 8C     	ld a,(Switch)
1024  8E6C EE 01        	xor 1
1025  8E6E 32 2A 8C     	ld (Switch),a
1026  8E71 2A 10 8C     	ld hl,(Album_de_pintado)
1027  8E74 ED 5B 12 8C  	ld de,(Album_de_borrado)
1028  8E78 EB           	ex de,hl
1029  8E79 22 10 8C     	ld (Album_de_pintado),hl
1030  8E7C 22 2D 8C     	ld (Scanlines_album_SP),hl
1031  8E7F ED 53 12 8C  	ld (Album_de_borrado),de
1032  8E83 C9           	ret
1033  8E84
1034  8E84              Change_Amadeus
1035  8E84
1036  8E84 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1037  8E87 ED 5B 16 8C  	ld de,(Album_de_borrado_Amadeus)
1038  8E8B EB           	ex de,hl
1039  8E8C 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1040  8E8F ED 53 16 8C  	ld (Album_de_borrado_Amadeus),de
1041  8E93 C9           	ret
1042  8E94
1043  8E94              Change_Disparos
1044  8E94
1045  8E94              ; Álbumes de Amadeus.
1046  8E94
1047  8E94 2A 18 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1048  8E97 ED 5B 1A 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1049  8E9B EB           	ex de,hl
1050  8E9C 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1051  8E9F ED 53 1A 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1052  8EA3 CD D1 A0     	call Limpia_album_de_pintado_disparos_Amadeus
1053  8EA6
1054  8EA6              ; Álbumes de entidades.
1055  8EA6
1056  8EA6 2A 1C 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1057  8EA9 ED 5B 1E 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1058  8EAD EB           	ex de,hl
1059  8EAE 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1060  8EB1 ED 53 1E 8C  	ld (Album_de_borrado_disparos_Entidades),de
1061  8EB5 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1062  8EB8
1063  8EB8 AF           	xor a
1064  8EB9 32 22 8C     	ld (Num_de_bytes_album_de_disparos),a
1065  8EBC
1066  8EBC C9           	ret
1067  8EBD
1068  8EBD              ; ------------------------------------
1069  8EBD              ;
1070  8EBD              ; 1/05/24
1071  8EBD
1072  8EBD              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1073  8EBD              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1074  8EBD
1075  8EBD              ;	DESTRUYE: HL,DE,A
1076  8EBD              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1077  8EBD
1078  8EBD              ;	Variables implicadas: (RND_SP).
1079  8EBD
1080  8EBD              Extrae_numero_aleatorio_y_avanza
1081  8EBD
1082  8EBD 21 00 89     	ld hl,Tabla_de_pintado
1083  8EC0 EB           	ex de,hl
1084  8EC1 2A 48 8C     	ld hl,(RND_SP)
1085  8EC4 EB           	ex de,hl
1086  8EC5 A7           	and a
1087  8EC6 ED 52        	sbc hl,de
1088  8EC8
1089  8EC8 2A 48 8C     	ld hl,(RND_SP)
1090  8ECB 20 06        	jr nz,1F
1091  8ECD
1092  8ECD              ; Sitúa HL al principio de la tabla de nº aleatorios.
1093  8ECD
1094  8ECD 21 F6 88     	ld hl,Numeros_aleatorios
1095  8ED0 22 48 8C     	ld (RND_SP),HL
1096  8ED3
1097  8ED3              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1098  8ED3
1099  8ED3 7E           1 ld a,(hl)
1100  8ED4 23           	inc hl
1101  8ED5 22 48 8C     	ld (RND_SP),hl
1102  8ED8 C9           	ret
1103  8ED9
1104  8ED9              ; ------------------------------------
1105  8ED9              ;
1106  8ED9              ; 1/05/24
1107  8ED9
1108  8ED9              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1109  8ED9              ; (1 a 4 segundos).
1110  8ED9              ; Actualizamos (Clock_next_entity) con A.
1111  8ED9
1112  8ED9              ;	DESTRUYE: A y B.
1113  8ED9              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1114  8ED9              ;			 Actualiza (Clock_next_entity) con A.
1115  8ED9
1116  8ED9              ;	Variables implicadas: (Clock_next_entity).
1117  8ED9
1118  8ED9              ; Notas:
1119  8ED9
1120  8ED9              ; 	$32 1 seg.
1121  8ED9              ; 	$64 2 seg.
1122  8ED9              ; 	$96 3 seg.
1123  8ED9              ; 	$c8 4 seg.
1124  8ED9              ; 	$fa 5 seg.
1125  8ED9
1126  8ED9              ; $ffff 1310,7 seg, 22 minutos.
1127  8ED9
1128  8ED9              ;	$0100  5 seg. aproximadamente.
1129  8ED9              ;	$0200 10 seg. aproximadamente.
1130  8ED9              ;	$0300 15 seg. aproximadamente.
1131  8ED9              ;	$0400 20 seg. aproximadamente.
1132  8ED9              ;	$0500 25 seg. aproximadamente.
1133  8ED9              ;	$0600 30 seg. aproximadamente.
1134  8ED9
1135  8ED9              Define_Clock_next_entity
1136  8ED9
1137  8ED9 FE 34        	cp $34
1138  8EDB 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1139  8EDD
1140  8EDD              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1141  8EDD
1142  8EDD 4F           3 ld c,a
1143  8EDE 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1144  8EE0 2A 78 5C     	ld hl,(FRAMES)
1145  8EE3 A7           	and a
1146  8EE4 ED 4A        	adc hl,bc
1147  8EE6 22 4D 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1148  8EE9 C9           	ret
1149  8EEA
1150  8EEA 3E 34        1 ld a,$34
1151  8EEC 18 EF        	jr 3B
1152  8EEE
1153  8EEE              ; ------------------------------------
1154  8EEE              ;
1155  8EEE              ; 18/03/24
1156  8EEE
1157  8EEE              Borra_diferencia
1158  8EEE
1159  8EEE ED 4B 2D 8C  	ld bc,(Scanlines_album_SP)
1160  8EF2
1161  8EF2 3A 2A 8C     	ld a,(Switch)
1162  8EF5 A7           	and a
1163  8EF6 28 08        	jr z,2F
1164  8EF8
1165  8EF8 2A 28 8C     	ld hl,(Techo_Scanlines_album_2)
1166  8EFB 11 28 8C     	ld de,Techo_Scanlines_album_2
1167  8EFE 18 06        	jr 3F
1168  8F00
1169  8F00 2A 26 8C     2 ld hl,(Techo_Scanlines_album)
1170  8F03 11 26 8C     	ld de,Techo_Scanlines_album
1171  8F06
1172  8F06              ; Diferencia.
1173  8F06
1174  8F06 ED 42        3 sbc hl,bc
1175  8F08
1176  8F08 C8           	ret z
1177  8F09 D8           	ret c
1178  8F0A
1179  8F0A              ; Nuevo techo, (más bajo que el anterior).
1180  8F0A              ; Fijamos nuevo techo y borramos bytes sobrantes.
1181  8F0A
1182  8F0A EB           	ex de,hl
1183  8F0B
1184  8F0B 71           	ld (hl),c
1185  8F0C 2C           	inc l
1186  8F0D 70           	ld (hl),b
1187  8F0E
1188  8F0E AF           	xor a
1189  8F0F 43           	ld b,e
1190  8F10
1191  8F10 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1192  8F13
1193  8F13 77           1 ld (hl),a
1194  8F14 23           	inc hl
1195  8F15 10 FC        	djnz 1B
1196  8F17
1197  8F17              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1198  8F17
1199  8F17 21 33 8C     	ld hl,Ctrl_3
1200  8F1A CB DE        	set 3,(hl)
1201  8F1C
1202  8F1C C9           	ret
1203  8F1D
1204  8F1D              ; --------------------------------------------------------------------------------------------------------------
1205  8F1D              ;
1206  8F1D              ;	26/3/24
1207  8F1D
1208  8F1D              Recauda_informacion_de_entidad_en_curso
1209  8F1D
1210  8F1D              ; Almacena la Coordenada Y de la entidad en curso.
1211  8F1D
1212  8F1D              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1213  8F1D
1214  8F1D 3A C1 8B     	ld a,(Coordenada_y)
1215  8F20 2A 2F 8C     	ld hl,(India_SP)
1216  8F23 77           	ld (hl),a
1217  8F24 2C           	inc l
1218  8F25
1219  8F25              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1220  8F25
1221  8F25 ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
1222  8F29
1223  8F29 73           	ld (hl),e
1224  8F2A 2C           	inc l
1225  8F2B 72           	ld (hl),d
1226  8F2C 2C           	inc l
1227  8F2D
1228  8F2D 22 2F 8C     	ld (India_SP),hl
1229  8F30
1230  8F30 C9           	ret
1231  8F31
1232  8F31              ; --------------------------------------------------------------------------------------------------------------
1233  8F31              ;
1234  8F31              ;	27/03/24
1235  8F31              ;
1236  8F31
1237  8F31              Inicializa_India_y_limpia_Tabla_de_impresion
1238  8F31
1239  8F31 2A 2F 8C     	ld hl,(India_SP)
1240  8F34 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1241  8F37
1242  8F37 79           	ld a,c
1243  8F38 95           	sub l
1244  8F39 28 06        	jr z,2F
1245  8F3B 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1246  8F3C              ;														; _ y pasamos a inicializar (India_SP).
1247  8F3C AF           	xor a
1248  8F3D
1249  8F3D 77           1 ld (hl),a
1250  8F3E 2C           	inc l
1251  8F3F 10 FC        	djnz 1B												; Limpia Tabla.
1252  8F41
1253  8F41 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1254  8F44 22 2F 8C     	ld (India_SP),hl
1255  8F47
1256  8F47 C9           	ret
1257  8F48
1258  8F48              ; --------------------------------------------------------------------------------------------------------------
1259  8F48              ;
1260  8F48              ;	31/3/24
1261  8F48
1262  8F48              Ordena_tabla_de_impresion
1263  8F48
1264  8F48              ; 5794 T/states.
1265  8F48              ; 6278 T/states.
1266  8F48              ; 5310 T/states.
1267  8F48
1268  8F48              ; Inicializamos punteros (India_SP) e (India_2_SP).
1269  8F48              ; Inicializamos contador de comparaciones, [C].
1270  8F48              ; Cargamos los registros A y B para efectuar comparación.
1271  8F48
1272  8F48 FD 2E 00     	ld iyl,0
1273  8F4B
1274  8F4B 3A 07 8C     	ld a,(Entidades_en_curso)
1275  8F4E FE 04        	cp 4 	;	4
1276  8F50 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1277  8F51
1278  8F51 3D           	dec a
1279  8F52 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1280  8F53 51           	ld d,c 										; Copia de respaldo.
1281  8F54
1282  8F54 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1283  8F55
1284  8F55 21 03 89     	ld hl,Tabla_de_pintado+3
1285  8F58 46           	ld b,(hl)
1286  8F59 22 31 8C     	ld (India_2_SP),hl
1287  8F5C
1288  8F5C B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1289  8F5D DC 85 8F     	call c, Avanza_India_2_SP
1290  8F60 CC 85 8F     	call z, Avanza_India_2_SP
1291  8F63
1292  8F63 FD 2D        	dec iyl
1293  8F65 28 18        	jr z,2F
1294  8F67
1295  8F67
1296  8F67              ; --------------------------------------------------------------------------------------------------------------
1297  8F67              ;
1298  8F67              ;	7/4/24
1299  8F67
1300  8F67              Trueque
1301  8F67
1302  8F67              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1303  8F67              ;  			A contiene en nº de fila de (India_SP).
1304  8F67              ;			HL contiene (India_2_SP).
1305  8F67
1306  8F67 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1307  8F68 E5           	push hl										; Preservo (India_2_SP).
1308  8F69
1309  8F69 ED 5B 2F 8C  	ld de,(India_SP)
1310  8F6D EB           	ex de,hl
1311  8F6E 70           	ld (hl),b
1312  8F6F 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1313  8F70
1314  8F70 CD B1 8F     	call Intercambia_1_byte
1315  8F73 CD B1 8F     	call Intercambia_1_byte
1316  8F76
1317  8F76
1318  8F76              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1319  8F76              ; Recuperamos (India_2_SP) en HL.
1320  8F76
1321  8F76 2A 2F 8C     	ld hl,(India_SP)
1322  8F79 7E           	ld a,(hl)
1323  8F7A
1324  8F7A E1           	pop hl
1325  8F7B D1           	pop de
1326  8F7C
1327  8F7C              ; --------------------------------------------------------------------------------------------------------------
1328  8F7C
1329  8F7C CD 85 8F     	call Avanza_India_2_SP
1330  8F7F
1331  8F7F 14           2 inc d
1332  8F80 15           	dec d
1333  8F81 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1334  8F82 18 D8        	jr 1B
1335  8F84
1336  8F84 C9           	ret
1337  8F85
1338  8F85              ; ----- ----- ----- ----- -----
1339  8F85
1340  8F85              Avanza_India_2_SP
1341  8F85
1342  8F85 0D           	dec c
1343  8F86 28 0A        	jr z,Avanza_punteros_indios
1344  8F88
1345  8F88 FD 2C        	inc iyl
1346  8F8A
1347  8F8A 2C           	inc l
1348  8F8B 2C           	inc l
1349  8F8C 2C           	inc l
1350  8F8D
1351  8F8D 46           	ld b,(hl)
1352  8F8E 22 31 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1353  8F91
1354  8F91 C9           	ret
1355  8F92
1356  8F92              ; ----- ----- ----- ----- -----
1357  8F92
1358  8F92              Avanza_punteros_indios
1359  8F92
1360  8F92 15           	dec d
1361  8F93 28 15        	jr z,Prepara_salida
1362  8F95
1363  8F95 4A           	ld c,d
1364  8F96
1365  8F96 2A 2F 8C     	ld hl,(India_SP)
1366  8F99 2C           	inc l
1367  8F9A 2C           	inc l
1368  8F9B 2C           	inc l
1369  8F9C 7E           	ld a,(hl)
1370  8F9D 22 2F 8C     	ld (India_SP),hl
1371  8FA0
1372  8FA0 2C           	inc l
1373  8FA1 2C           	inc l
1374  8FA2 2C           	inc l
1375  8FA3 46           	ld b,(hl)
1376  8FA4 22 31 8C     	ld (India_2_SP),hl
1377  8FA7
1378  8FA7 FD 2C        	inc iyl
1379  8FA9
1380  8FA9 C9           	ret
1381  8FAA
1382  8FAA              Prepara_salida
1383  8FAA
1384  8FAA 21 00 89     	ld hl,Tabla_de_pintado
1385  8FAD 22 2F 8C     	ld (India_SP),hl
1386  8FB0 C9           	ret
1387  8FB1
1388  8FB1
1389  8FB1 2C           Intercambia_1_byte inc l
1390  8FB2 1C           	inc e
1391  8FB3 46           	ld b,(hl)
1392  8FB4 1A           	ld a,(de)
1393  8FB5 EB           	ex de,hl
1394  8FB6 70           	ld (hl),b
1395  8FB7 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1396  8FB8 C9           	ret
1397  8FB9
1398  8FB9              ; -----------------------------------------------------------------------------------
1399  8FB9              ;
1400  8FB9              ;	20/01/24
1401  8FB9              ;
1402  8FB9              ;
1403  8FB9
1404  8FB9              Construye_movimientos_masticados_entidad
1405  8FB9
1406  8FB9 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1407  8FBC E5           	push hl
1408  8FBD CD 00 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1409  8FC0              ;															; _ el (Contador_de_mov_masticados).
1410  8FC0 CD CB 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1411  8FC3              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1412  8FC3 CD FC 99     	call Recompone_posicion_inicio
1413  8FC6
1414  8FC6 CD 2C 97     1 call Draw
1415  8FC9 CD E5 8F     	call Guarda_movimiento_masticado
1416  8FCC
1417  8FCC CD A9 9D     	call Movimiento
1418  8FCF
1419  8FCF 3A 33 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1420  8FD2 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1421  8FD4 28 F0        	jr z,1B
1422  8FD6
1423  8FD6              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1424  8FD6              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1425  8FD6
1426  8FD6 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1427  8FD7 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1428  8FDA
1429  8FDA              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1430  8FDA
1431  8FDA CD 0D 9F     	call Situa_en_contador_general_de_mov_masticados
1432  8FDD
1433  8FDD              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1434  8FDD              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1435  8FDD
1436  8FDD ED 4B C8 8B  	ld bc,(Contador_de_mov_masticados)
1437  8FE1
1438  8FE1 71           	ld (hl),c
1439  8FE2 23           	inc hl
1440  8FE3 70           	ld (hl),b
1441  8FE4
1442  8FE4 C9           	ret
1443  8FE5
1444  8FE5              ; -----------------------------------------------------------------------------------
1445  8FE5              ;
1446  8FE5              ;	28/12/23
1447  8FE5              ;
1448  8FE5              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1449  8FE5              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1450  8FE5
1451  8FE5              Guarda_movimiento_masticado
1452  8FE5
1453  8FE5 ED 73 0C 8C  	ld (Stack),sp
1454  8FE9 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1455  8FED
1456  8FED DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1457  8FEF FD E5            push iy 												; Pushea Puntero_objeto.
1458  8FF1
1459  8FF1 ED 7B 0C 8C      ld sp,(Stack)
1460  8FF5
1461  8FF5 2A C8 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1462  8FF8 23           	inc hl
1463  8FF9 22 C8 8B     	ld (Contador_de_mov_masticados),hl
1464  8FFC
1465  8FFC CD 00 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1466  8FFF              ;															; _ el (Contador_de_mov_masticados).
1467  8FFF C9               ret
1468  9000
1469  9000              ; --------------------------------------------------------------------------------------------------------------
1470  9000              ;
1471  9000              ;	12/1/24
1472  9000              ;
1473  9000              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1474  9000
1475  9000              Actualiza_Puntero_de_almacen_de_mov_masticados
1476  9000
1477  9000 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1478  9003 01 04 00     	ld bc,4
1479  9006 A7           	and a
1480  9007 ED 4A        	adc hl,bc
1481  9009 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1482  900C C9           	ret
1483  900D
1484  900D              ; --------------------------------------------------------------------------------------------------------------
1485  900D              ;
1486  900D              ;	24/03/24
1487  900D              ;
1488  900D              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1489  900D              ;
1490  900D              ;	IX contiene el puntero de impresión.
1491  900D              ;	DE contiene (Puntero_objeto).
1492  900D
1493  900D
1494  900D              Cargamos_registros_con_mov_masticado
1495  900D
1496  900D ED 73 0C 8C  	ld (Stack),sp
1497  9011 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1498  9015
1499  9015 D1           	pop de 															; DE contiene Puntero_objeto
1500  9016 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1501  9018
1502  9018 ED 73 C6 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1503  901C ED 7B 0C 8C  	ld sp,(Stack)
1504  9020
1505  9020 7B           	ld a,e
1506  9021 82           	add d															; Comprueba si ya no hay datos en el almacén.
1507  9022
1508  9022 CC BB 93     	call z,Reinicia_entidad_maliciosa
1509  9025
1510  9025 C9           	ret
1511  9026
1512  9026              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1513  9026              ;
1514  9026              ;	22/7/24
1515  9026
1516  9026              Cargamos_registros_con_explosion
1517  9026
1518  9026
1519  9026 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1520  9029 CD C5 90     	call Extrae_address
1521  902C
1522  902C 5D           	ld e,l
1523  902D 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1524  902E
1525  902E DD 2A C4 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1526  9032
1527  9032 C9           	ret
1528  9033
1529  9033
1530  9033              Cargamos_registros_con_explosion_Amadeus
1531  9033
1532  9033 2A 7B 89     	ld hl,(Pamm_Amadeus)
1533  9036 CD C5 90     	call Extrae_address
1534  9039
1535  9039 5D           	ld e,l
1536  903A 54           	ld d,h
1537  903B
1538  903B DD 2A 79 89  	ld ix,(p.imp.amadeus)
1539  903F
1540  903F C9           	ret
1541  9040
1542  9040              ; --------------------------------------------------------------------------------------------------------------
1543  9040              ;
1544  9040              ;	17/06/24
1545  9040              ;
1546  9040              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1547  9040              ;
1548  9040              ;	IX contiene el puntero de impresión.
1549  9040              ;	DE contiene (Puntero_objeto).
1550  9040
1551  9040
1552  9040              Cargamos_registros_con_mov_masticado_Amadeus
1553  9040
1554  9040 ED 73 0C 8C  	ld (Stack),sp
1555  9044 ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1556  9048 D1           	pop de 															; DE contiene Puntero_objeto
1557  9049 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1558  904B DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1559  904F ED 7B 0C 8C  	ld sp,(Stack)
1560  9053 C9           	ret
1561  9054
1562  9054              ; ---------------------------------------------------------------------------------------------------------------------
1563  9054              ;
1564  9054              ;	18/6/24
1565  9054              ;
1566  9054              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1567  9054
1568  9054              Genera_datos_de_impresion_Amadeus
1569  9054
1570  9054 3A 78 89     	ld a,(Impacto_Amadeus)
1571  9057 A7           	and a
1572  9058 20 03        	jr nz,1F
1573  905A
1574  905A              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1575  905A              ; _apuntando a la correspondiente explosión.
1576  905A
1577  905A CD 40 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1578  905D
1579  905D DD 7D        1 ld a,ixl
1580  905F E6 1F        	and $1f
1581  9061 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1582  9064
1583  9064 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1584  9067 E5           	push hl
1585  9068
1586  9068 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1587  906B 22 2D 8C     	ld (Scanlines_album_SP),hl
1588  906E
1589  906E CD 10 95     	call Genera_datos_de_impresion
1590  9071
1591  9071 E1           	pop hl
1592  9072 22 2D 8C     	ld (Scanlines_album_SP),hl
1593  9075
1594  9075 C9           	ret
1595  9076
1596  9076              ; ---------------------------------------------------------------------------------------------------------------------
1597  9076              ;
1598  9076              ;	13/03/24
1599  9076              ;
1600  9076              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1601  9076
1602  9076              Inicia_albumes_de_lineas
1603  9076
1604  9076 21 00 80     	ld hl,Scanlines_album
1605  9079 22 10 8C     	ld (Album_de_pintado),hl
1606  907C 22 2D 8C     	ld (Scanlines_album_SP),hl
1607  907F
1608  907F 21 1A 81     	ld hl,Scanlines_album_2
1609  9082 22 12 8C     	ld (Album_de_borrado),hl
1610  9085
1611  9085 C9           	ret
1612  9086
1613  9086              Inicia_albumes_de_lineas_Amadeus
1614  9086
1615  9086 21 34 82     	ld hl,Amadeus_scanlines_album
1616  9089 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1617  908C 21 58 82     	ld hl,Amadeus_scanlines_album_2
1618  908F 22 16 8C     	ld (Album_de_borrado_Amadeus),hl
1619  9092
1620  9092 C9           	ret
1621  9093
1622  9093              Inicia_albumes_de_disparos
1623  9093
1624  9093 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1625  9096 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1626  9099 21 84 82     	ld hl,Amadeus_disparos_scanlines_album_2
1627  909C 22 1A 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1628  909F
1629  909F 21 8C 82     	ld hl,Entidades_disparos_scanlines_album
1630  90A2 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1631  90A5 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1632  90A8
1633  90A8 21 C0 82     	ld hl,Entidades_disparos_scanlines_album_2
1634  90AB 22 1E 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1635  90AE
1636  90AE C9           	ret
1637  90AF
1638  90AF              ; ---------------------------------------------------------------------------------------------------------------------
1639  90AF              ;
1640  90AF              ; 8/1/23
1641  90AF              ;
1642  90AF              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1643  90AF              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1644  90AF              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1645  90AF
1646  90AF              ; Destruye HL y DE !!!!!
1647  90AF
1648  90AF              Inicia_punteros_de_cajas
1649  90AF
1650  90AF 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1651  90B2 CD C5 90         call Extrae_address
1652  90B5 22 FF 8B         ld (Puntero_store_caja),hl
1653  90B8 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1654  90BB 22 03 8C     	ld (Indice_restore_caja),hl
1655  90BE CD C5 90     	call Extrae_address
1656  90C1 22 01 8C     	ld (Puntero_restore_caja),hl
1657  90C4 C9               ret
1658  90C5
1659  90C5              ; *************************************************************************************************************************************************************
1660  90C5
1661  90C5              ;
1662  90C5              ; 20/10/22
1663  90C5              ;
1664  90C5              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1665  90C5              ;
1666  90C5              ; Destruye el puntero y DE !!!!!
1667  90C5
1668  90C5 5E           Extrae_address ld e,(hl)
1669  90C6 23           	inc hl
1670  90C7 56           	ld d,(hl)
1671  90C8 2B           	dec hl
1672  90C9 EB           	ex de,hl
1673  90CA C9           	ret
1674  90CB
1675  90CB              ; *************************************************************************************************************************************************************
1676  90CB              ;
1677  90CB              ;	20/1/24
1678  90CB              ;
1679  90CB              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1680  90CB              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1681  90CB              ;
1682  90CB              ;   Destruye HL y BC !!!!!,
1683  90CB              ;
1684  90CB              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1685  90CB              ;					"0" ..... Izquierda.
1686  90CB
1687  90CB              Inicia_Puntero_objeto
1688  90CB
1689  90CB 3A DE 8B     	ld a,(Cuad_objeto)
1690  90CE E6 01        	and 1
1691  90D0 F5           	push af
1692  90D1 CC ED 90     	call z,Inicia_puntero_objeto_izq
1693  90D4 F1           	pop af
1694  90D5 C8           	ret z
1695  90D6 CD DA 90     	call Inicia_puntero_objeto_der
1696  90D9 C9           	ret
1697  90DA
1698  90DA              ; Arrancamos desde la parte izquierda de la pantalla.
1699  90DA              ; Iniciamos (Indice_Sprite_der).
1700  90DA
1701  90DA 2A D4 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1702  90DD 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
1703  90E0 CD C5 90     	call Extrae_address
1704  90E3 22 D1 8B     	ld (Puntero_objeto),hl
1705  90E6
1706  90E6 2A D6 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1707  90E9 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1708  90EC C9           	ret
1709  90ED
1710  90ED              ; Arrancamos desde la parte derecha de la pantalla.
1711  90ED              ; Iniciamos (Indice_Sprite_izq).
1712  90ED
1713  90ED 2A D6 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1714  90F0 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1715  90F3 CD C5 90     	call Extrae_address
1716  90F6 22 D1 8B     	ld (Puntero_objeto),hl
1717  90F9
1718  90F9 2A D4 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1719  90FC 22 D8 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1720  90FF C9           	ret
1721  9100
1722  9100              ; **************************************************************************************************
1723  9100              ;
1724  9100              ;	06/07/24
1725  9100              ;
1726  9100              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1727  9100
1728  9100              Restore_entidad
1729  9100
1730  9100 2A FF 8B     	ld hl,(Puntero_store_caja)
1731  9103 7E           	ld a,(hl)
1732  9104 A7           	and a
1733  9105 CC 13 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1734  9108 28 F6        	jr z,Restore_entidad
1735  910A
1736  910A 11 BF 8B     	ld de,Bandeja_DRAW
1737  910D 01 0C 00     	ld bc,12
1738  9110 ED B0        	ldir
1739  9112 C9           	ret
1740  9113
1741  9113              ; **************************************************************************************************
1742  9113              ;
1743  9113              ;	08/05/23
1744  9113              ;
1745  9113              ;	Incrementamos los dos punteros de entidades. (+1).
1746  9113
1747  9113              Incrementa_punteros_de_cajas
1748  9113
1749  9113 2A 01 8C     	ld hl,(Puntero_restore_caja)
1750  9116 22 FF 8B     	ld (Puntero_store_caja),hl
1751  9119 2A 03 8C     	ld hl,(Indice_restore_caja)
1752  911C 23           	inc hl
1753  911D 23           	inc hl
1754  911E 22 03 8C     	ld (Indice_restore_caja),hl
1755  9121 CD C5 90         call Extrae_address
1756  9124 22 01 8C         ld (Puntero_restore_caja),hl
1757  9127 C9               ret
1758  9128
1759  9128              ; -----------------------------------------------------------
1760  9128
1761  9128              ; Teclado.
1762  9128
1763  9128 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1764  912A DB FE        	in a,($fe)
1765  912C E6 01        	and $01
1766  912E 28 02        	jr z,1f
1767  9130 18 F6        	jr Pulsa_ENTER
1768  9132 C9           1 ret
1769  9133
1770  9133              ; **************************************************************************************************
1771  9133              ;
1772  9133              ; Temporización.
1773  9133
1774  9133              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1775  9133              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1776  9133              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1777  9133              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1778  9133
1779  9133              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1780  9133              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1781  9133              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1782  9133
1783  9133              ; A partir de $4f61 no hace falta DELAY.
1784  9133
1785  9133              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1786  9133
1787  9133              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1788  9133              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1789  9133              ;	LD A,B
1790  9133              ;	AND A
1791  9133              ;	JR NZ,wait
1792  9133              ;	RET
1793  9133
1794  9133              ; ---------------------------------------------------------------------------------------------------------------
1795  9133              ;
1796  9133              ;	13/07/24
1797  9133              ;
1798  9133
1799  9133              Inicia_Shield
1800  9133
1801  9133 21 57 8C     	ld hl,Datos_Shield
1802  9136 22 5B 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1803  9139
1804  9139 7E           	ld a,(hl)
1805  913A 32 5E 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1806  913D
1807  913D 3E 01        	ld a,1
1808  913F 32 5F 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1809  9142
1810  9142 C9           	ret
1811  9143
1812  9143              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1813  9143              ;
1814  9143              ;	4/6/24
1815  9143              ;
1816  9143              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1817  9143              ;
1818  9143              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1819  9143              ;
1820  9143
1821  9143              Actualiza_pantalla
1822  9143
1823  9143 3E 02        	ld a,2
1824  9145 D3 FE        	out ($fe),a
1825  9147
1826  9147 3A 33 8C     	ld a,(Ctrl_3)
1827  914A CB 57        	bit 2,a
1828  914C 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1829  914E
1830  914E              Borrando_entidades
1831  914E
1832  914E 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1833  9151 CD C5 90     	call Extrae_address
1834  9154 24           	inc h
1835  9155 25           	dec h
1836  9156 28 05        	jr z,Pintando_entidades
1837  9158 CD 09 96     	call Pinta_Sprites
1838  915B 18 F1        	jr Borrando_entidades
1839  915D
1840  915D              Pintando_entidades
1841  915D
1842  915D 2A 2F 8C     	ld hl,(India_SP)
1843  9160 2C           	inc l
1844  9161 CD C5 90     	call Extrae_address
1845  9164 24           	inc h
1846  9165 25           	dec h
1847  9166 28 0E        	jr z,Ejecuta_escudo
1848  9168 1C           	inc e
1849  9169 1C           	inc e
1850  916A ED 53 2F 8C  	ld (India_SP),de
1851  916E CD C5 90     	call Extrae_address
1852  9171 CD 09 96     	call Pinta_Sprites
1853  9174 18 E7        	jr Pintando_entidades
1854  9176
1855  9176              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1856  9176
1857  9176              Ejecuta_escudo
1858  9176
1859  9176 3A 5D 8C     	ld a,(Shield)
1860  9179 A7           	and a
1861  917A 20 2F        	jr nz,Aplica_Shield
1862  917C
1863  917C              Borrando_Amadeus
1864  917C
1865  917C 21 33 8C     	ld hl,Ctrl_3
1866  917F CB 6E        	bit 5,(hl)
1867  9181 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1868  9183
1869  9183 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1870  9186 CD C5 90     	call Extrae_address
1871  9189 24           	inc h
1872  918A 25           	dec h
1873  918B 28 03        	jr z,Pintando_Amadeus
1874  918D CD 09 96     	call Pinta_Sprites
1875  9190
1876  9190              Pintando_Amadeus
1877  9190
1878  9190 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1879  9193 CD C5 90     	call Extrae_address
1880  9196 24           	inc h
1881  9197 25           	dec h
1882  9198 28 03        	jr z,1F
1883  919A CD 09 96     	call Pinta_Sprites
1884  919D
1885  919D              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1886  919D
1887  919D 21 33 8C     1 ld hl,Ctrl_3
1888  91A0 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1889  91A2 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1890  91A4 CB AE        	res 5,(hl)
1891  91A6
1892  91A6 3E 01        	ld a,1												; Borde azul.
1893  91A8 D3 FE        	out ($fe),a
1894  91AA
1895  91AA C9           	ret
1896  91AB
1897  91AB              Aplica_Shield
1898  91AB
1899  91AB              ;	Bit 1 "1" (Shield_3) Sólo borra.
1900  91AB              ;		  "0"     ""     Borra/Pinta.
1901  91AB              ;	Bit 2    ""  RET.	 No borra, no pinta.
1902  91AB
1903  91AB 21 5F 8C     	ld hl,Shield_3
1904  91AE
1905  91AE CB 5E        	bit 3,(hl)
1906  91B0 20 DE        	jr nz,Pintando_Amadeus
1907  91B2
1908  91B2 CB 56        	bit 2,(hl)
1909  91B4 20 E7        	jr nz,1B
1910  91B6
1911  91B6 CB 4E        	bit 1,(hl)
1912  91B8 C4 BF 91     	call nz,Borra_Amadeus_shield
1913  91BB
1914  91BB 28 BF        	jr z,Borrando_Amadeus
1915  91BD 18 DE        	jr 1B
1916  91BF
1917  91BF              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1918  91BF
1919  91BF              Borra_Amadeus_shield
1920  91BF
1921  91BF 3A 33 8C     	ld a,(Ctrl_3)
1922  91C2 CB 6F        	bit 5,a
1923  91C4 28 08        	jr z,1F
1924  91C6
1925  91C6 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1926  91C9 CD C5 90     	call Extrae_address
1927  91CC 18 06        	jr 2F
1928  91CE
1929  91CE 2A 14 8C     1 ld hl,(Album_de_pintado_Amadeus)
1930  91D1 CD C5 90     	call Extrae_address
1931  91D4
1932  91D4 CD 09 96     2 call Pinta_Sprites
1933  91D7
1934  91D7 AF           	xor a
1935  91D8 3C           	inc a											; Asegura NZ en la salida de la rutina.
1936  91D9
1937  91D9 C9           	ret
1938  91DA
1939  91DA              Pinta_Amadeus_shield
1940  91DA
1941  91DA 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1942  91DD CD C5 90     	call Extrae_address
1943  91E0 CD 09 96     	call Pinta_Sprites
1944  91E3
1945  91E3 AF           	xor a
1946  91E4 3C           	inc a											; Asegura NZ en la salida de la rutina.
1947  91E5
1948  91E5 C9           	ret
1949  91E6
1950  91E6              Borra_Pinta_Amadeus_shield
1951  91E6
1952  91E6 CD BF 91     	call Borra_Amadeus_shield
1953  91E9 CD DA 91     	call Pinta_Amadeus_shield
1954  91EC C9           	ret
1955  91ED
1956  91ED              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1957  91ED              ;
1958  91ED              ;	19/6/24
1959  91ED              ;
1960  91ED
1961  91ED              Teclado
1962  91ED
1963  91ED              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1964  91ED
1965  91ED 3E F7        	ld a,$f7												; "5" para disparar.
1966  91EF DB FE        	in a,($fe)
1967  91F1 E6 10        	and $10
1968  91F3
1969  91F3 CC A4 A1     	call z,Genera_disparo_Amadeus
1970  91F6
1971  91F6 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1972  91F8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1973  91FA E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1974  91FC CC 76 9D         call z,Amadeus_a_izquierda
1975  91FF
1976  91FF 3E F7        	ld a,$f7
1977  9201 DB FE        	in a,($fe)
1978  9203 E6 01        	and $01
1979  9205 C8           	ret z
1980  9206
1981  9206 3E F7        	ld a,$f7
1982  9208 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1983  920A E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1984  920C CC 8E 9D     	call z,Amadeus_a_derecha
1985  920F
1986  920F C9           	ret
1987  9210
1988  9210              ; ------------------------------------------------------------------------------------------------------------------------
1989  9210              ;
1990  9210              ;	06/07/24
1991  9210              ;
1992  9210
1993  9210              Genera_explosion
1994  9210
1995  9210 21 45 8C     	ld hl,Clock_explosion
1996  9213 35           	dec (hl)
1997  9214 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1998  9216
1999  9216              Borra_entidad_colisionada
2000  9216
2001  9216 CD 1D 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2002  9219 CD 26 90     	call Cargamos_registros_con_explosion
2003  921C CD 10 95     	call Genera_datos_de_impresion
2004  921F
2005  921F AF           	xor a
2006  9220 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2007  9221
2008  9221 C9           	ret
2009  9222
2010  9222              Siguiente_frame_explosion
2011  9222
2012  9222 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2013  9224
2014  9224              ; Avanza Frame de explosión.
2015  9224
2016  9224 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2017  9227 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2018  922A
2019  922A 79           	ld a,c
2020  922B 95           	sub l
2021  922C 20 0B        	jr nz,1F
2022  922E
2023  922E              ; Fín de la entidad !!!!!!!!!!!!!
2024  922E
2025  922E 21 06 8C     	ld hl,Numero_parcial_de_entidades
2026  9231 35           	dec (hl)
2027  9232 23           	inc hl
2028  9233 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2029  9234
2030  9234 CD 90 93     	call Limpiamos_bandeja_DRAW
2031  9237 18 DD        	jr Borra_entidad_colisionada
2032  9239
2033  9239 23           1 inc hl
2034  923A 23           	inc hl
2035  923B 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2036  923E 18 D6        	jr Borra_entidad_colisionada
2037  9240
2038  9240              ; ----- ----- ----- ----- -----
2039  9240
2040  9240              Genera_explosion_Amadeus
2041  9240
2042  9240 21 46 8C     	ld hl,Clock_explosion_Amadeus
2043  9243 35           	dec (hl)
2044  9244 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2045  9246
2046  9246              Borra_Amadeus_impactado
2047  9246
2048  9246 CD 84 8E     	call Change_Amadeus
2049  9249 CD 33 90     	call Cargamos_registros_con_explosion_Amadeus
2050  924C CD 54 90     	call Genera_datos_de_impresion_Amadeus
2051  924F
2052  924F 21 33 8C     	ld hl,Ctrl_3
2053  9252 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2054  9254
2055  9254 AF           	xor a
2056  9255 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2057  9256
2058  9256 C9           	ret
2059  9257
2060  9257              Siguiente_frame_explosion_Amadeus
2061  9257
2062  9257 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2063  9259
2064  9259              ; Avanza Frame de explosión.
2065  9259
2066  9259 2A 7B 89     	ld hl,(Pamm_Amadeus)
2067  925C 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2068  925F
2069  925F 79           	ld a,c
2070  9260 95           	sub l
2071  9261 20 0B        	jr nz,1F
2072  9263
2073  9263              ; Fín de Amadeus !!!!!!!!!!!!!
2074  9263              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2075  9263
2076  9263 AF           	xor a
2077  9264 32 78 89     	ld (Impacto_Amadeus),a
2078  9267 21 33 8C     	ld hl,Ctrl_3
2079  926A CB F6        	set 6,(hl)
2080  926C
2081  926C 18 D8        	jr Borra_Amadeus_impactado
2082  926E
2083  926E 23           1 inc hl
2084  926F 23           	inc hl
2085  9270 22 7B 89     	ld (Pamm_Amadeus),hl
2086  9273 18 D1        	jr Borra_Amadeus_impactado
2087  9275
2088  9275              ; ---------------------------------------------------------------
2089  9275
2090  9275              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9275              ; ******************************************************************************************************************************************************************************************
   2+ 9275              ;
   3+ 9275              ;   21/04/24
   4+ 9275              ;
   5+ 9275              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9275              ;   (XOR) bit a bit.
   7+ 9275              ;
   8+ 9275              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9275
  10+ 9275              Derivando_RND
  11+ 9275
  12+ 9275 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9278
  14+ 9278 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 927A C5               push bc
  16+ 927B              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 927B 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 927E              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 927E
  20+ 927E A7           6 and a                                 ; Carry a "0".
  21+ 927F CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9281 30 02            jr nc,1F
  23+ 9283
  24+ 9283 CB C1            set 0,c
  25+ 9285
  26+ 9285 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9286 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9288 5F               ld e,a
  29+ 9289
  30+ 9289 7A               ld a,d
  31+ 928A E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 928C 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 928E
  34+ 928E CB 3F            srl a
  35+ 9290
  36+ 9290 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9291
  38+ 9291 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9292 28 04            jr z,4F
  40+ 9294
  41+ 9294 CB FF            set 7,a
  42+ 9296 18 02            jr 5F
  43+ 9298
  44+ 9298 CB BF        4 res 7,a
  45+ 929A
  46+ 929A CB 21        5 sla c
  47+ 929C 10 E0            djnz 6B
  48+ 929E
  49+ 929E 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 929F
  51+ 929F 77               ld (hl),a
  52+ 92A0 23               inc hl
  53+ 92A1 C1               pop bc
  54+ 92A2 10 D4            djnz 3B
  55+ 92A4
  56+ 92A4 C9               ret
  57+ 92A5
  58+ 92A5
  59+ 92A5
# file closed: RND_Derivando.asm
2091  92A5              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92A5              ;---------------------------------------------------------------------------------------------------------------
   2+ 92A5              ;
   3+ 92A5              ;   8/3/24
   4+ 92A5              ;
   5+ 92A5              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 92A5              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 92A5              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 92A5              ;	_ de la 1ª entidad del Nivel.
   9+ 92A5              ;
  10+ 92A5              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 92A5
  12+ 92A5              ;	MODIFICA: HL,DE y A.
  13+ 92A5              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 92A5
  15+ 92A5              Inicializa_Nivel
  16+ 92A5
  17+ 92A5 2A 53 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 92A8 CD C5 90     	call Extrae_address
  19+ 92AB 7E           	ld a,(hl)
  20+ 92AC 32 05 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92AF 23           	inc hl
  22+ 92B0 CD BD 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92B3 22 55 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92B6 CD C6 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92B9
  26+ 92B9 CD D7 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92BC C9           	ret
  28+ 92BD
  29+ 92BD              ; ----------------------
  30+ 92BD
  31+ 92BD 11 E4 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92C0 01 04 00     	ld bc,4
  33+ 92C3 ED B0        	ldir
  34+ 92C5 C9           	ret
  35+ 92C6
  36+ 92C6 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92C7 CD 61 94         call Calcula_salto_en_BC
  38+ 92CA 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92CD A7               and a
  40+ 92CE ED 4A            adc hl,bc
  41+ 92D0 CD C5 90         call Extrae_address
  42+ 92D3 22 F0 8B         ld (Puntero_indice_mov),hl
  43+ 92D6 C9               ret
  44+ 92D7
  45+ 92D7 3A BF 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92DA CD 61 94     	call Calcula_salto_en_BC
  47+ 92DD 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92E0 A7               and a
  49+ 92E1 ED 4A            adc hl,bc
  50+ 92E3 CD C5 90         call Extrae_address
  51+ 92E6 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92E9 C9           	ret
  53+ 92EA
  54+ 92EA              ;---------------------------------------------------------------------------------------------------------------
  55+ 92EA              ;
  56+ 92EA              ;   5/1/24
  57+ 92EA              ;
  58+ 92EA              ;	Destruye A,BC,HL,DE
  59+ 92EA
  60+ 92EA              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92EA              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92EA
  63+ 92EA              Inicia_Entidades
  64+ 92EA
  65+ 92EA              ; Preparamos los punteros de las cajas de entidades:
  66+ 92EA
  67+ 92EA CD AF 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92ED              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92ED CD A9 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92F0
  71+ 92F0 2A 55 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92F3
  73+ 92F3 22 55 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92F6
  75+ 92F6 CD 0F 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92F9
  77+ 92F9 2A 55 8C     	ld hl,(Datos_de_nivel)
  78+ 92FC
  79+ 92FC              ; En este punto:
  80+ 92FC              ;
  81+ 92FC              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92FC              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92FC
  84+ 92FC C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92FD
  86+ 92FD 7E           	ld a,(hl)
  87+ 92FE CD 7B 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 9301
  89+ 9301 CD 73 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9304
  91+ 9304              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9304
  93+ 9304 CD 31 94     	call Busca_mov_masticados_segun_tipo
  94+ 9307
  95+ 9307 A7           	and a
  96+ 9308 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 930A
  98+ 930A              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 930A
 100+ 930A              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 930A              ;	_ de este tipo de entidad.
 102+ 930A
 103+ 930A CD 0D 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 930D CD 1A 9F     	call Transfiere_datos_de_contadores
 105+ 9310
 106+ 9310 18 06        	jr 4F
 107+ 9312
 108+ 9312 CD B9 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9315
 110+ 9315              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9315              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9315              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9315              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9315              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9315
 116+ 9315 CD EF 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9318              ;																; _ Mov_masticados ya generados.
 118+ 9318
 119+ 9318 CD 0D 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 931B
 121+ 931B DD E5        	push ix
 122+ 931D E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 931E
 124+ 931E D5           	push de
 125+ 931F CD E4 94     	call Genera_coordenadas
 126+ 9322
 127+ 9322 ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
 128+ 9326 CD 1D 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9329 D1           	pop de
 130+ 932A
 131+ 932A CD 10 95     	call Genera_datos_de_impresion
 132+ 932D              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 932D              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 932D              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 932D              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 932D
 137+ 932D CD B3 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9330
 139+ 9330              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9330
 141+ 9330 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 142+ 9334 CD A0 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9337
 144+ 9337 CD 90 93     	call Limpiamos_bandeja_DRAW
 145+ 933A CD 13 91     	call Incrementa_punteros_de_cajas
 146+ 933D
 147+ 933D              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 933D              ; _ entidad del Nivel.
 149+ 933D
 150+ 933D 3A 34 8C     	ld a,(Ctrl_4)
 151+ 9340 E6 F0        	and $f0
 152+ 9342 32 34 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9345
 154+ 9345              ; Siguiente entidad del Nivel.
 155+ 9345
 156+ 9345 2A 55 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9348 23           	inc hl 														; _ entidad del Nivel.
 158+ 9349
 159+ 9349 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 934A
 161+ 934A 10 A7        	djnz 2B
 162+ 934C
 163+ 934C C9           	ret
 164+ 934D
 165+ 934D              ; -------------------------------------------------------------------------------------------------------------------
 166+ 934D              ;
 167+ 934D              ;	27/5/24
 168+ 934D              ;
 169+ 934D              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 934D              ;
 171+ 934D
 172+ 934D              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 934D              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 934D
 175+ 934D 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9350 CD 73 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9353
 178+ 9353
 179+ 9353              Construye_movimientos_masticados_Amadeus
 180+ 9353
 181+ 9353 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9356 CD 00 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9359              ;															; _ el (Contador_de_mov_masticados).
 184+ 9359 CD CB 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 935C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 935C
 187+ 935C              ; Generamos movimientos masticados de Amadeus.
 188+ 935C
 189+ 935C 06 79        	ld b,121												; $0079, 121d.
 190+ 935E
 191+ 935E C5           1 push bc
 192+ 935F CD 2C 97     	call Draw
 193+ 9362 CD E5 8F     	call Guarda_movimiento_masticado
 194+ 9365
 195+ 9365 CD A0 9A     	call Mov_right
 196+ 9368 CD A0 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 936B
 198+ 936B C1           	pop bc
 199+ 936C 10 F0        	djnz 1B
 200+ 936E
 201+ 936E              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 936E
 203+ 936E              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 936E              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 936E
 206+ 936E 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9371 01 08 00     	ld bc,8
 208+ 9374 A7           	and a
 209+ 9375 ED 42        	sbc hl,bc
 210+ 9377 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 937A
 212+ 937A C9           	ret
 213+ 937B
 214+ 937B              ; ---------------------------------------------------------------------
 215+ 937B              ;
 216+ 937B              ;	10/02/24
 217+ 937B              ;
 218+ 937B              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 937B              ;
 220+ 937B              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 937B
 222+ 937B              Definicion_segun_tipo
 223+ 937B
 224+ 937B CD 61 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 937E 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9381 CD 69 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9384 C9           	ret
 228+ 9385
 229+ 9385              ; ---------------------------------------------------------------------
 230+ 9385              ;
 231+ 9385              ;	6/7/24
 232+ 9385
 233+ 9385
 234+ 9385              Store_Restore_cajas
 235+ 9385
 236+ 9385 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 237+ 9389 CD A0 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 938C CD 13 91     	call Incrementa_punteros_de_cajas
 239+ 938F C9           	ret
 240+ 9390
 241+ 9390              ; ---------------------------------------------------------------------
 242+ 9390              ;
 243+ 9390              ;	23/6/24
 244+ 9390              ;
 245+ 9390              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9390              ;
 247+ 9390              ;	MODIFY: HL
 248+ 9390
 249+ 9390              Limpiamos_bandeja_DRAW
 250+ 9390
 251+ 9390 ED 73 0C 8C  	ld (Stack),sp
 252+ 9394 31 E4 8B     	ld sp,Vel_left
 253+ 9397
 254+ 9397 AF           	xor a
 255+ 9398 67           	ld h,a
 256+ 9399 6F           	ld l,a
 257+ 939A
 258+ 939A E5           	push hl
 259+ 939B E5           	push hl
 260+ 939C E5           	push hl
 261+ 939D E5           	push hl
 262+ 939E E5           	push hl
 263+ 939F E5           	push hl
 264+ 93A0 E5           	push hl
 265+ 93A1 E5           	push hl
 266+ 93A2 E5           	push hl
 267+ 93A3 E5           	push hl
 268+ 93A4 E5           	push hl
 269+ 93A5 E5           	push hl
 270+ 93A6 E5           	push hl
 271+ 93A7 E5           	push hl
 272+ 93A8 E5           	push hl
 273+ 93A9 E5           	push hl
 274+ 93AA E5           	push hl
 275+ 93AB E5           	push hl
 276+ 93AC
 277+ 93AC 33           	inc sp
 278+ 93AD
 279+ 93AD E5           	push hl
 280+ 93AE ED 7B 0C 8C  	ld sp,(Stack)
 281+ 93B2
 282+ 93B2 C9           	ret
 283+ 93B3
 284+ 93B3              ; ---------------------------------------------------------------------
 285+ 93B3              ;
 286+ 93B3              ;	24/03/24
 287+ 93B3
 288+ 93B3 2A C8 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93B6 2B           	dec hl
 290+ 93B7 22 C8 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93BA C9           	ret
 292+ 93BB
 293+ 93BB              ; ---------------------------------------------------------------------
 294+ 93BB              ;
 295+ 93BB              ;	8/5/24
 296+ 93BB
 297+ 93BB              Reinicia_entidad_maliciosa
 298+ 93BB
 299+ 93BB              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93BB
 301+ 93BB CD 0D 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93BE CD 1A 9F     	call Transfiere_datos_de_contadores
 303+ 93C1
 304+ 93C1              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93C1
 306+ 93C1 3A BF 8B     	ld a,(Tipo)
 307+ 93C4 CD 7B 93     	call Definicion_segun_tipo
 308+ 93C7
 309+ 93C7 E5           	push hl
 310+ 93C8 DD E1        	pop ix
 311+ 93CA
 312+ 93CA DD 6E 0B     	ld l,(ix+11)
 313+ 93CD DD 66 0C     	ld h,(ix+12)
 314+ 93D0
 315+ 93D0 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93D3
 317+ 93D3 CD 0D 90     	call Cargamos_registros_con_mov_masticado
 318+ 93D6
 319+ 93D6              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93D6              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93D6              ; Ejemplos.
 322+ 93D6
 323+ 93D6              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93D6              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93D6              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93D6              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93D6              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93D6
 329+ 93D6 21 C2 8B     	ld hl,Contador_de_vueltas
 330+ 93D9 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93DB
 332+ 93DB 7E           	ld a,(hl)
 333+ 93DC CB 2F        	sra a
 334+ 93DE CB 2F        	sra a
 335+ 93E0
 336+ 93E0 32 CA 8B     	ld (Velocidad),a
 337+ 93E3
 338+ 93E3 3E 40        	ld a,$40
 339+ 93E5 BE           	cp (hl)
 340+ 93E6 C0           	ret nz
 341+ 93E7
 342+ 93E7              ; Límitador.
 343+ 93E7
 344+ 93E7              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93E7
 346+ 93E7 CB 2E        	sra (hl)
 347+ 93E9 21 CA 8B     	ld hl,Velocidad
 348+ 93EC CB 2E        	sra (hl)
 349+ 93EE
 350+ 93EE C9           	ret
 351+ 93EF
 352+ 93EF              ; ---------------------------------------------------------------------
 353+ 93EF              ;
 354+ 93EF              ;	22/01/24
 355+ 93EF
 356+ 93EF 21 34 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93F2 CB 46        	bit 0,(hl)
 358+ 93F4 20 0D        	jr nz,1F
 359+ 93F6 CB 4E        	bit 1,(hl)
 360+ 93F8 20 0C        	jr nz,2F
 361+ 93FA CB 56        	bit 2,(hl)
 362+ 93FC 20 0B        	jr nz,3F
 363+ 93FE CB 5E        	bit 3,(hl)
 364+ 9400 20 0A        	jr nz,4F
 365+ 9402 C9           	ret
 366+ 9403
 367+ 9403 CB E6        1 set 4,(hl)
 368+ 9405 C9           	ret
 369+ 9406 CB EE        2 set 5,(hl)
 370+ 9408 C9           	ret
 371+ 9409 CB F6        3 set 6,(hl)
 372+ 940B C9           	ret
 373+ 940C CB FE        4 set 7,(hl)
 374+ 940E C9           	ret
 375+ 940F
 376+ 940F              ; ---------------------------------------------------------------------
 377+ 940F              ;
 378+ 940F              ;	23/01/24
 379+ 940F              ;
 380+ 940F              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 940F              ;
 382+ 940F              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 940F              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 940F              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 940F              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 940F
 387+ 940F              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 940F
 389+ 940F 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9410 3D           	dec a
 391+ 9411 20 06        	jr nz,1F
 392+ 9413
 393+ 9413              ; --- Tipo_1
 394+ 9413
 395+ 9413 21 34 8C     	ld hl,Ctrl_4
 396+ 9416 CB C6        	set 0,(hl)
 397+ 9418 C9           	ret
 398+ 9419
 399+ 9419 3D           1 dec a
 400+ 941A 20 06        	jr nz,2F
 401+ 941C
 402+ 941C              ; --- Tipo_2
 403+ 941C
 404+ 941C 21 34 8C     	ld hl,Ctrl_4
 405+ 941F CB CE        	set 1,(hl)
 406+ 9421 C9           	ret
 407+ 9422
 408+ 9422 3D           2 dec a
 409+ 9423 20 06        	jr nz,3F
 410+ 9425
 411+ 9425              ; --- Tipo_3
 412+ 9425
 413+ 9425 21 34 8C     	ld hl,Ctrl_4
 414+ 9428 CB D6        	set 2,(hl)
 415+ 942A C9           	ret
 416+ 942B
 417+ 942B              ; --- Tipo_3
 418+ 942B
 419+ 942B 21 34 8C     3 ld hl,Ctrl_4
 420+ 942E CB D6        	set 2,(hl)
 421+ 9430 C9           	ret
 422+ 9431
 423+ 9431              ; ---------------------------------------------------------------------
 424+ 9431              ;
 425+ 9431              ;	22/01/24
 426+ 9431
 427+ 9431 21 34 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9434 CB 46        	bit 0,(hl)
 429+ 9436 20 0E        	jr nz,1F
 430+ 9438
 431+ 9438 CB 4E        	bit 1,(hl)
 432+ 943A 20 10        	jr nz,2F
 433+ 943C
 434+ 943C CB 56        	bit 2,(hl)
 435+ 943E 20 12        	jr nz,3F
 436+ 9440
 437+ 9440 CB 5E        	bit 3,(hl)
 438+ 9442 20 14        	jr nz,4F
 439+ 9444 18 19        	jr 6F
 440+ 9446
 441+ 9446              ; Entidad_de_Tipo_1.
 442+ 9446
 443+ 9446 CB 66        1 bit 4,(hl)
 444+ 9448 28 15        	jr z,6F
 445+ 944A 18 10        	jr 5F
 446+ 944C
 447+ 944C              ; Entidad_de_Tipo_2.
 448+ 944C
 449+ 944C CB 6E        2 bit 5,(hl)
 450+ 944E 28 0F        	jr z,6F
 451+ 9450 18 0A        	jr 5F
 452+ 9452
 453+ 9452              ; Entidad_de_Tipo_3.
 454+ 9452
 455+ 9452 CB 76        3 bit 6,(hl)
 456+ 9454 28 09        	jr z,6F
 457+ 9456 18 04        	jr 5F
 458+ 9458
 459+ 9458              ; Entidad_de_Tipo_4.
 460+ 9458
 461+ 9458 CB 7E        4 bit 7,(hl)
 462+ 945A 28 03        	jr z,6F
 463+ 945C
 464+ 945C              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 945C
 466+ 945C AF           5 xor a
 467+ 945D 3C           	inc a
 468+ 945E C9           	ret
 469+ 945F
 470+ 945F              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 945F
 472+ 945F AF           6 xor a
 473+ 9460 C9           	ret
 474+ 9461
 475+ 9461              ;	------------------------------------------------------------------------------------
 476+ 9461              ;
 477+ 9461              ;	12/01/24
 478+ 9461              ;
 479+ 9461              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9461              ;
 481+ 9461              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9461              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9461
 484+ 9461 CB 27        Calcula_salto_en_BC sla a
 485+ 9463 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9465 4F           	ld c,a
 487+ 9466 06 00        	ld b,0
 488+ 9468 C9           	ret
 489+ 9469
 490+ 9469              ; ------------------------------------------------------------------
 491+ 9469              ;
 492+ 9469              ;	19/1/24
 493+ 9469              ;
 494+ 9469              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9469              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9469
 497+ 9469 A7           Situa_en_datos_de_definicion and a
 498+ 946A ED 4A        	adc hl,bc
 499+ 946C CD C5 90     	call Extrae_address
 500+ 946F 22 0A 8C         ld (Datos_de_entidad),hl
 501+ 9472 C9           	ret
 502+ 9473
 503+ 9473              ; ------------------------------------------------------------------
 504+ 9473
 505+ 9473              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9473              ; 	inc de
 507+ 9473              ; 	inc de
 508+ 9473              ; 	ex de,hl
 509+ 9473              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9473              ; 	ret
 511+ 9473
 512+ 9473              ; ----------------------------------------------------------------------------------------------------------
 513+ 9473              ;
 514+ 9473              ;	24/6/24
 515+ 9473              ;
 516+ 9473              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9473              ;	_ de entidad.
 518+ 9473              ;
 519+ 9473              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9473              ;
 521+ 9473              ;
 522+ 9473              ;	MODIFICA: HL,DE y BC
 523+ 9473
 524+ 9473
 525+ 9473              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9473
 527+ 9473 11 BF 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9476 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9477 12           	ld (de),a
 530+ 9478 23           	inc hl
 531+ 9479              ;
 532+ 9479 11 CD 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 947C 01 02 00     	ld bc,2
 534+ 947F ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9481              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9481 11 C2 8B     	ld de,Contador_de_vueltas
 537+ 9484 7E           	ld a,(hl)
 538+ 9485 12           	ld (de),a
 539+ 9486 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9487
 541+ 9487 11 D4 8B     	ld de,Indice_Sprite_der
 542+ 948A 01 04 00     	ld bc,4
 543+ 948D ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 948F
 545+ 948F 11 DC 8B     	ld de,Posicion_inicio
 546+ 9492 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9495 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9497
 549+ 9497 11 C6 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 949A 01 02 00     	ld bc,2
 551+ 949D ED B0        	ldir
 552+ 949F
 553+ 949F C9           	ret
 554+ 94A0
 555+ 94A0              ; ----------------------------------------------------------------------------------------------------------
 556+ 94A0              ;
 557+ 94A0              ;	1/8/24
 558+ 94A0              ;
 559+ 94A0
 560+ 94A0              Parametros_de_bandeja_DRAW_a_caja
 561+ 94A0
 562+ 94A0 21 BF 8B     	ld hl,Bandeja_DRAW
 563+ 94A3 01 0C 00     	ld bc,12
 564+ 94A6 ED B0        	ldir
 565+ 94A8 C9           	ret
 566+ 94A9
 567+ 94A9              ;---------------------------------------------------------------------------------------------------------------
 568+ 94A9              ;
 569+ 94A9              ;	5/1/24
 570+ 94A9              ;
 571+ 94A9              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 94A9              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 94A9              ;
 574+ 94A9              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 94A9              ;
 576+ 94A9              ;	(Numero_parcial_de_entidades)="7".
 577+ 94A9              ;
 578+ 94A9              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 94A9              ;
 580+ 94A9              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 94A9              ;
 582+ 94A9              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 94A9              ;	MODIFICA: A y B.
 584+ 94A9              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 94A9
 586+ 94A9              Inicializa_Numero_parcial_de_entidades
 587+ 94A9
 588+ 94A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 94A9
 590+ 94A9 3A 05 8C     	ld a,(Numero_de_entidades)
 591+ 94AC A7           	and a
 592+ 94AD
 593+ 94AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 94AD              ;	jr z,$
 595+ 94AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 94AD
 597+ 94AD 20 03        	jr nz,3F
 598+ 94AF
 599+ 94AF              ; ---------- ---------- ----------
 600+ 94AF
 601+ 94AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94AF              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94AF
 604+ 94AF CD A5 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94B2
 606+ 94B2              ; ---------- ---------- ----------
 607+ 94B2
 608+ 94B2 3A 05 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94B5 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94B7 38 08        	jr c,1F
 611+ 94B9
 612+ 94B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94B9              ; Actualizamos variables.
 614+ 94B9
 615+ 94B9 3E 07        	ld a,7
 616+ 94BB 32 06 8C     	ld (Numero_parcial_de_entidades),a
 617+ 94BE 47           	ld b,a
 618+ 94BF 18 04        	jr 2F
 619+ 94C1
 620+ 94C1              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94C1              ; (Numero_de_entidades)="0".
 622+ 94C1
 623+ 94C1 32 06 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 94C4 47           	ld b,a
 625+ 94C5 C9           2 ret
 626+ 94C6
# file closed: Rutinas_de_inicio_y_niveles.asm
2092  94C6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94C6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94C6              ;
   3+ 94C6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94C6              ;
   5+ 94C6              ; *****************************************************************************************************************************************************************************************
   6+ 94C6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94C6
   8+ 94C6 7C           calcula_tercio ld a,h
   9+ 94C7 E6 18        	and $18
  10+ 94C9 CB 2F        	sra a
  11+ 94CB CB 2F        	sra a
  12+ 94CD CB 2F        	sra a
  13+ 94CF C9           	ret
  14+ 94D0
# file closed: calcula_tercio.asm
2093  94D0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94D0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94D0              ;
   3+ 94D0              ;
   4+ 94D0              ;	CLS.
   5+ 94D0              ;
   6+ 94D0              ;	Limpia la pantalla y define sus atributos.
   7+ 94D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94D0              ;
   9+ 94D0              ;	COLORES: 0 ..... NEGRO
  10+ 94D0              ;    		 1 ..... AZUL
  11+ 94D0              ; 			 2 ..... ROJO
  12+ 94D0              ;			 3 ..... MAGENTA
  13+ 94D0              ; 			 4 ..... VERDE
  14+ 94D0              ; 			 5 ..... CIAN
  15+ 94D0              ;			 6 ..... AMARILLO
  16+ 94D0              ; 			 7 ..... BLANCO
  17+ 94D0              ;
  18+ 94D0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94D0              ;
  20+ 94D0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94D0
  22+ 94D0
  23+ 94D0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94D3 11 01 40     	LD DE,$4001
  25+ 94D6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94D9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94DB ED B0        	LDIR
  28+ 94DD 01 FF 02     	LD BC,767
  29+ 94E0 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94E1 ED B0        	LDIR
  31+ 94E3 C9           	ret
  32+ 94E4
# file closed: Cls.asm
2094  94E4              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94E4              ; ------------------------------------------------------------------------
   2+ 94E4              ;
   3+ 94E4              ;	30/1/24
   4+ 94E4              ;
   5+ 94E4              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94E4              ;	Fila superior "0", Columna izquierda "0".
   7+ 94E4              ;
   8+ 94E4              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94E4              ;
  10+ 94E4              ;	Modifica: A,BC y DE.
  11+ 94E4
  12+ 94E4 7D           Genera_coordenadas ld a,l
  13+ 94E5 E6 1F        	and $1f
  14+ 94E7 32 C0 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94EA
  16+ 94EA 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94EB FE 40        	cp $40
  18+ 94ED 38 1C        	jr c,4F
  19+ 94EF
  20+ 94EF CD C6 94     	call calcula_tercio
  21+ 94F2 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94F3
  23+ 94F3 1E 00        	ld e,0
  24+ 94F5 7D           	ld a,l
  25+ 94F6 E6 E0        	and $e0
  26+ 94F8 28 01        	jr z,1F
  27+ 94FA 04           	inc b
  28+ 94FB
  29+ 94FB 04           1 inc b
  30+ 94FC 05           	dec b
  31+ 94FD 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94FF              ;														; _ , salimos.
  33+ 94FF 1C           3 inc e
  34+ 9500 D6 20        	sub 32
  35+ 9502 20 FB        	jr nz,3B
  36+ 9504 10 F5        	djnz 1B
  37+ 9506
  38+ 9506 7B           2 ld a,e
  39+ 9507 32 C1 8B     	ld (Coordenada_y),a
  40+ 950A C9           	ret
  41+ 950B
  42+ 950B AF           4 xor a
  43+ 950C 32 C1 8B     	ld (Coordenada_y),a
  44+ 950F C9           	ret
  45+ 9510
# file closed: Genera_coordenadas.asm
2095  9510              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9510              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9510              ;
   3+ 9510              ;	20/09/24
   4+ 9510              ;
   5+ 9510              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9510              ;   DE contiene Puntero_objeto.
   7+ 9510              ;   IX contiene el Puntero de impresión.
   8+ 9510
   9+ 9510              Genera_datos_de_impresion
  10+ 9510
  11+ 9510 ED 73 0C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9514
  13+ 9514 31 C6 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9517 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9519
  16+ 9519 2A 2D 8C         ld hl,(Scanlines_album_SP)
  17+ 951C
  18+ 951C 3E 05            ld a,5
  19+ 951E 85               add l
  20+ 951F 6F               ld l,a
  21+ 9520
  22+ 9520 F9               ld sp,hl
  23+ 9521 22 2D 8C         ld (Scanlines_album_SP),hl
  24+ 9524
  25+ 9524 21 00 00         ld hl,0
  26+ 9527
  27+ 9527 DD E5            push ix
  28+ 9529 3B               dec sp
  29+ 952A ED 7A            adc hl,sp
  30+ 952C D5               push de
  31+ 952D
  32+ 952D              ; Recuperamos SP.
  33+ 952D
  34+ 952D ED 7B 0C 8C      ld sp,(Stack)
  35+ 9531
  36+ 9531 E5               push hl
  37+ 9532 F1               pop af
  38+ 9533 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9534
  40+ 9534              ; Tenemos el encabezado listo.
  41+ 9534              ; Preparamos registros para generar los scanlines.
  42+ 9534
  43+ 9534 DD E5            push ix
  44+ 9536 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9537
  46+ 9537 ED 5B 2D 8C      ld de,(Scanlines_album_SP)
  47+ 953B
  48+ 953B              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 953B              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 953B
  51+ 953B 7C               ld a,h
  52+ 953C FE 50            cp $50
  53+ 953E 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9540
  55+ 9540 20 05            jr nz,2F
  56+ 9542
  57+ 9542 7D               ld a,l
  58+ 9543 FE E0            cp $e0
  59+ 9545 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9547
  61+ 9547 7D           2 ld a,l
  62+ 9548 FE C0            cp $c0
  63+ 954A D2 E0 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 954D
  65+ 954D              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 954D
  67+ 954D CD DE 99         call NextScan
  68+ 9550 EB               ex de,hl
  69+ 9551
  70+ 9551 73               ld (hl),e
  71+ 9552 23               inc hl
  72+ 9553 72               ld (hl),d
  73+ 9554 23               inc hl
  74+ 9555
  75+ 9555 EB               ex de,hl
  76+ 9556
  77+ 9556 CD DE 99         call NextScan
  78+ 9559 EB               ex de,hl
  79+ 955A
  80+ 955A 73               ld (hl),e
  81+ 955B 23               inc hl
  82+ 955C 72               ld (hl),d
  83+ 955D 23               inc hl
  84+ 955E
  85+ 955E EB               ex de,hl
  86+ 955F
  87+ 955F CD DE 99         call NextScan
  88+ 9562 EB               ex de,hl
  89+ 9563
  90+ 9563 73               ld (hl),e
  91+ 9564 23               inc hl
  92+ 9565 72               ld (hl),d
  93+ 9566 23               inc hl
  94+ 9567
  95+ 9567 EB               ex de,hl
  96+ 9568
  97+ 9568 CD DE 99         call NextScan
  98+ 956B EB               ex de,hl
  99+ 956C
 100+ 956C 73               ld (hl),e
 101+ 956D 23               inc hl
 102+ 956E 72               ld (hl),d
 103+ 956F 23               inc hl
 104+ 9570
 105+ 9570 EB               ex de,hl
 106+ 9571
 107+ 9571 CD DE 99         call NextScan
 108+ 9574 EB               ex de,hl
 109+ 9575
 110+ 9575 73               ld (hl),e
 111+ 9576 23               inc hl
 112+ 9577 72               ld (hl),d
 113+ 9578 23               inc hl
 114+ 9579
 115+ 9579 EB               ex de,hl
 116+ 957A
 117+ 957A CD DE 99         call NextScan
 118+ 957D EB               ex de,hl
 119+ 957E
 120+ 957E 73               ld (hl),e
 121+ 957F 23               inc hl
 122+ 9580 72               ld (hl),d
 123+ 9581 23               inc hl
 124+ 9582
 125+ 9582 EB               ex de,hl
 126+ 9583
 127+ 9583 CD DE 99         call NextScan
 128+ 9586 EB               ex de,hl
 129+ 9587
 130+ 9587 73               ld (hl),e
 131+ 9588 23               inc hl
 132+ 9589 72               ld (hl),d
 133+ 958A 23               inc hl
 134+ 958B
 135+ 958B EB               ex de,hl
 136+ 958C
 137+ 958C CD DE 99         call NextScan
 138+ 958F EB               ex de,hl
 139+ 9590
 140+ 9590 73               ld (hl),e
 141+ 9591 23               inc hl
 142+ 9592 72               ld (hl),d
 143+ 9593 23               inc hl
 144+ 9594
 145+ 9594 EB               ex de,hl
 146+ 9595
 147+ 9595 CD DE 99         call NextScan
 148+ 9598 EB               ex de,hl
 149+ 9599
 150+ 9599 73               ld (hl),e
 151+ 959A 23               inc hl
 152+ 959B 72               ld (hl),d
 153+ 959C 23               inc hl
 154+ 959D
 155+ 959D EB               ex de,hl
 156+ 959E
 157+ 959E CD DE 99         call NextScan
 158+ 95A1 EB               ex de,hl
 159+ 95A2
 160+ 95A2 73               ld (hl),e
 161+ 95A3 23               inc hl
 162+ 95A4 72               ld (hl),d
 163+ 95A5 23               inc hl
 164+ 95A6
 165+ 95A6 EB               ex de,hl
 166+ 95A7
 167+ 95A7 CD DE 99         call NextScan
 168+ 95AA EB               ex de,hl
 169+ 95AB
 170+ 95AB 73               ld (hl),e
 171+ 95AC 23               inc hl
 172+ 95AD 72               ld (hl),d
 173+ 95AE 23               inc hl
 174+ 95AF
 175+ 95AF EB               ex de,hl
 176+ 95B0
 177+ 95B0 CD DE 99         call NextScan
 178+ 95B3 EB               ex de,hl
 179+ 95B4
 180+ 95B4 73               ld (hl),e
 181+ 95B5 23               inc hl
 182+ 95B6 72               ld (hl),d
 183+ 95B7 23               inc hl
 184+ 95B8
 185+ 95B8 EB               ex de,hl
 186+ 95B9
 187+ 95B9 CD DE 99         call NextScan
 188+ 95BC EB               ex de,hl
 189+ 95BD
 190+ 95BD 73               ld (hl),e
 191+ 95BE 23               inc hl
 192+ 95BF 72               ld (hl),d
 193+ 95C0 23               inc hl
 194+ 95C1
 195+ 95C1 EB               ex de,hl
 196+ 95C2
 197+ 95C2 CD DE 99         call NextScan
 198+ 95C5 EB               ex de,hl
 199+ 95C6
 200+ 95C6 73               ld (hl),e
 201+ 95C7 23               inc hl
 202+ 95C8 72               ld (hl),d
 203+ 95C9 23               inc hl
 204+ 95CA
 205+ 95CA EB               ex de,hl
 206+ 95CB
 207+ 95CB CD DE 99         call NextScan
 208+ 95CE EB               ex de,hl
 209+ 95CF
 210+ 95CF              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95CF              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95CF              ;   _ generar sus scanlines.
 213+ 95CF
 214+ 95CF              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95CF
 216+ 95CF 73               ld (hl),e
 217+ 95D0 23               inc hl
 218+ 95D1 72               ld (hl),d
 219+ 95D2 23               inc hl
 220+ 95D3
 221+ 95D3              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95D3
 223+ 95D3 22 2D 8C         ld (Scanlines_album_SP),hl
 224+ 95D6
 225+ 95D6 EB               ex de,hl
 226+ 95D7
 227+ 95D7              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95D7
 229+ 95D7              ;    call NextScan
 230+ 95D7              ;    call NextScan
 231+ 95D7
 232+ 95D7 22 38 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95DA
 234+ 95DA              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95DA
 236+ 95DA 08               ex af,af
 237+ 95DB
 238+ 95DB F5               push af
 239+ 95DC E1               pop hl
 240+ 95DD
 241+ 95DD 36 10            ld (hl),16
 242+ 95DF
 243+ 95DF C9               ret
 244+ 95E0
 245+ 95E0              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95E0
 247+ 95E0              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95E0
 249+ 95E0 3E 57            ld a,$57
 250+ 95E2 94               sub h
 251+ 95E3 47               ld b,a
 252+ 95E4
 253+ 95E4 3E DF            ld a,$df
 254+ 95E6 BD               cp l
 255+ 95E7 38 04            jr c,1F
 256+ 95E9
 257+ 95E9 3E 08            ld a,8
 258+ 95EB 80               add b
 259+ 95EC 47               ld b,a
 260+ 95ED
 261+ 95ED              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95ED              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95ED
 264+ 95ED 48           1 ld c,b
 265+ 95EE 0C               inc c
 266+ 95EF
 267+ 95EF 04               inc b
 268+ 95F0 05               dec b
 269+ 95F1 20 02            jr nz,3F
 270+ 95F3
 271+ 95F3 18 0B            jr 6F
 272+ 95F5
 273+ 95F5 CD DE 99     3 call NextScan
 274+ 95F8 EB               ex de,hl
 275+ 95F9
 276+ 95F9 73               ld (hl),e
 277+ 95FA 23               inc hl
 278+ 95FB 72               ld (hl),d
 279+ 95FC 23               inc hl
 280+ 95FD
 281+ 95FD EB               ex de,hl
 282+ 95FE 10 F5            djnz 3B
 283+ 9600
 284+ 9600 ED 53 2D 8C  6 ld (Scanlines_album_SP),de
 285+ 9604
 286+ 9604 08           5 ex af,af
 287+ 9605 F5               push af
 288+ 9606 E1               pop hl
 289+ 9607
 290+ 9607 71               ld (hl),c
 291+ 9608
 292+ 9608 C9               ret
 293+ 9609
# file closed: Genera_datos_de_impresion.asm
2096  9609              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9609              ; -----------------------------------------------------------------------------
   2+ 9609              ;
   3+ 9609              ;   11/03/24
   4+ 9609              ;
   5+ 9609
   6+ 9609              Pinta_Sprites
   7+ 9609
   8+ 9609              ;    ld hl,(Scanlines_album_SP)
   9+ 9609              ;    call Extrae_address
  10+ 9609
  11+ 9609              ;    inc h
  12+ 9609              ;    dec h
  13+ 9609              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9609
  15+ 9609 ED 73 0C 8C      ld (Stack),sp
  16+ 960D
  17+ 960D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 960E              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 960E 2C               inc l
  20+ 960F 2C               inc l
  21+ 9610
  22+ 9610 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9611
  24+ 9611 2C               inc l
  25+ 9612 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9613
  27+ 9613              ;   Seleccionamos rutina de impresión:
  28+ 9613
  29+ 9613 3E 10            ld a,16
  30+ 9615 B8               cp b
  31+ 9616 C2 12 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9619
  33+ 9619              ;   Rutinas:
  34+ 9619
  35+ 9619              Pinta_rapido    ;   1520 t/states.
  36+ 9619
  37+ 9619 E1               pop hl
  38+ 961A
  39+ 961A 1A               ld a,(de)
  40+ 961B AE               xor (hl)
  41+ 961C 77               ld (hl),a
  42+ 961D 2C               inc l
  43+ 961E 1C               inc e
  44+ 961F 1A               ld a,(de)
  45+ 9620 AE               xor (hl)
  46+ 9621 77               ld (hl),a
  47+ 9622 2C               inc l
  48+ 9623 1C               inc e
  49+ 9624 1A               ld a,(de)
  50+ 9625 AE               xor (hl)
  51+ 9626 77               ld (hl),a
  52+ 9627 13               inc de
  53+ 9628
  54+ 9628 E1               pop hl
  55+ 9629
  56+ 9629 1A               ld a,(de)
  57+ 962A AE               xor (hl)
  58+ 962B 77               ld (hl),a
  59+ 962C 2C               inc l
  60+ 962D 1C               inc e
  61+ 962E 1A               ld a,(de)
  62+ 962F AE               xor (hl)
  63+ 9630 77               ld (hl),a
  64+ 9631 2C               inc l
  65+ 9632 1C               inc e
  66+ 9633 1A               ld a,(de)
  67+ 9634 AE               xor (hl)
  68+ 9635 77               ld (hl),a
  69+ 9636 13               inc de
  70+ 9637
  71+ 9637 E1               pop hl
  72+ 9638
  73+ 9638 1A               ld a,(de)
  74+ 9639 AE               xor (hl)
  75+ 963A 77               ld (hl),a
  76+ 963B 2C               inc l
  77+ 963C 1C               inc e
  78+ 963D 1A               ld a,(de)
  79+ 963E AE               xor (hl)
  80+ 963F 77               ld (hl),a
  81+ 9640 2C               inc l
  82+ 9641 1C               inc e
  83+ 9642 1A               ld a,(de)
  84+ 9643 AE               xor (hl)
  85+ 9644 77               ld (hl),a
  86+ 9645 13               inc de
  87+ 9646
  88+ 9646 E1               pop hl
  89+ 9647
  90+ 9647 1A               ld a,(de)
  91+ 9648 AE               xor (hl)
  92+ 9649 77               ld (hl),a
  93+ 964A 2C               inc l
  94+ 964B 1C               inc e
  95+ 964C 1A               ld a,(de)
  96+ 964D AE               xor (hl)
  97+ 964E 77               ld (hl),a
  98+ 964F 2C               inc l
  99+ 9650 1C               inc e
 100+ 9651 1A               ld a,(de)
 101+ 9652 AE               xor (hl)
 102+ 9653 77               ld (hl),a
 103+ 9654 13               inc de
 104+ 9655
 105+ 9655 E1               pop hl
 106+ 9656
 107+ 9656 1A               ld a,(de)
 108+ 9657 AE               xor (hl)
 109+ 9658 77               ld (hl),a
 110+ 9659 2C               inc l
 111+ 965A 1C               inc e
 112+ 965B 1A               ld a,(de)
 113+ 965C AE               xor (hl)
 114+ 965D 77               ld (hl),a
 115+ 965E 2C               inc l
 116+ 965F 1C               inc e
 117+ 9660 1A               ld a,(de)
 118+ 9661 AE               xor (hl)
 119+ 9662 77               ld (hl),a
 120+ 9663 13               inc de
 121+ 9664
 122+ 9664 E1               pop hl
 123+ 9665
 124+ 9665 1A               ld a,(de)
 125+ 9666 AE               xor (hl)
 126+ 9667 77               ld (hl),a
 127+ 9668 2C               inc l
 128+ 9669 1C               inc e
 129+ 966A 1A               ld a,(de)
 130+ 966B AE               xor (hl)
 131+ 966C 77               ld (hl),a
 132+ 966D 2C               inc l
 133+ 966E 1C               inc e
 134+ 966F 1A               ld a,(de)
 135+ 9670 AE               xor (hl)
 136+ 9671 77               ld (hl),a
 137+ 9672 13               inc de
 138+ 9673
 139+ 9673 E1               pop hl
 140+ 9674
 141+ 9674 1A               ld a,(de)
 142+ 9675 AE               xor (hl)
 143+ 9676 77               ld (hl),a
 144+ 9677 2C               inc l
 145+ 9678 1C               inc e
 146+ 9679 1A               ld a,(de)
 147+ 967A AE               xor (hl)
 148+ 967B 77               ld (hl),a
 149+ 967C 2C               inc l
 150+ 967D 1C               inc e
 151+ 967E 1A               ld a,(de)
 152+ 967F AE               xor (hl)
 153+ 9680 77               ld (hl),a
 154+ 9681 13               inc de
 155+ 9682
 156+ 9682 E1               pop hl
 157+ 9683
 158+ 9683 1A               ld a,(de)
 159+ 9684 AE               xor (hl)
 160+ 9685 77               ld (hl),a
 161+ 9686 2C               inc l
 162+ 9687 1C               inc e
 163+ 9688 1A               ld a,(de)
 164+ 9689 AE               xor (hl)
 165+ 968A 77               ld (hl),a
 166+ 968B 2C               inc l
 167+ 968C 1C               inc e
 168+ 968D 1A               ld a,(de)
 169+ 968E AE               xor (hl)
 170+ 968F 77               ld (hl),a
 171+ 9690 13               inc de
 172+ 9691
 173+ 9691 E1               pop hl
 174+ 9692
 175+ 9692 1A               ld a,(de)
 176+ 9693 AE               xor (hl)
 177+ 9694 77               ld (hl),a
 178+ 9695 2C               inc l
 179+ 9696 1C               inc e
 180+ 9697 1A               ld a,(de)
 181+ 9698 AE               xor (hl)
 182+ 9699 77               ld (hl),a
 183+ 969A 2C               inc l
 184+ 969B 1C               inc e
 185+ 969C 1A               ld a,(de)
 186+ 969D AE               xor (hl)
 187+ 969E 77               ld (hl),a
 188+ 969F 13               inc de
 189+ 96A0
 190+ 96A0 E1               pop hl
 191+ 96A1
 192+ 96A1 1A               ld a,(de)
 193+ 96A2 AE               xor (hl)
 194+ 96A3 77               ld (hl),a
 195+ 96A4 2C               inc l
 196+ 96A5 1C               inc e
 197+ 96A6 1A               ld a,(de)
 198+ 96A7 AE               xor (hl)
 199+ 96A8 77               ld (hl),a
 200+ 96A9 2C               inc l
 201+ 96AA 1C               inc e
 202+ 96AB 1A               ld a,(de)
 203+ 96AC AE               xor (hl)
 204+ 96AD 77               ld (hl),a
 205+ 96AE 13               inc de
 206+ 96AF
 207+ 96AF E1               pop hl
 208+ 96B0
 209+ 96B0 1A               ld a,(de)
 210+ 96B1 AE               xor (hl)
 211+ 96B2 77               ld (hl),a
 212+ 96B3 2C               inc l
 213+ 96B4 1C               inc e
 214+ 96B5 1A               ld a,(de)
 215+ 96B6 AE               xor (hl)
 216+ 96B7 77               ld (hl),a
 217+ 96B8 2C               inc l
 218+ 96B9 1C               inc e
 219+ 96BA 1A               ld a,(de)
 220+ 96BB AE               xor (hl)
 221+ 96BC 77               ld (hl),a
 222+ 96BD 13               inc de
 223+ 96BE
 224+ 96BE E1               pop hl
 225+ 96BF
 226+ 96BF 1A               ld a,(de)
 227+ 96C0 AE               xor (hl)
 228+ 96C1 77               ld (hl),a
 229+ 96C2 2C               inc l
 230+ 96C3 1C               inc e
 231+ 96C4 1A               ld a,(de)
 232+ 96C5 AE               xor (hl)
 233+ 96C6 77               ld (hl),a
 234+ 96C7 2C               inc l
 235+ 96C8 1C               inc e
 236+ 96C9 1A               ld a,(de)
 237+ 96CA AE               xor (hl)
 238+ 96CB 77               ld (hl),a
 239+ 96CC 13               inc de
 240+ 96CD
 241+ 96CD E1               pop hl
 242+ 96CE
 243+ 96CE 1A               ld a,(de)
 244+ 96CF AE               xor (hl)
 245+ 96D0 77               ld (hl),a
 246+ 96D1 2C               inc l
 247+ 96D2 1C               inc e
 248+ 96D3 1A               ld a,(de)
 249+ 96D4 AE               xor (hl)
 250+ 96D5 77               ld (hl),a
 251+ 96D6 2C               inc l
 252+ 96D7 1C               inc e
 253+ 96D8 1A               ld a,(de)
 254+ 96D9 AE               xor (hl)
 255+ 96DA 77               ld (hl),a
 256+ 96DB 13               inc de
 257+ 96DC
 258+ 96DC E1               pop hl
 259+ 96DD
 260+ 96DD 1A               ld a,(de)
 261+ 96DE AE               xor (hl)
 262+ 96DF 77               ld (hl),a
 263+ 96E0 2C               inc l
 264+ 96E1 1C               inc e
 265+ 96E2 1A               ld a,(de)
 266+ 96E3 AE               xor (hl)
 267+ 96E4 77               ld (hl),a
 268+ 96E5 2C               inc l
 269+ 96E6 1C               inc e
 270+ 96E7 1A               ld a,(de)
 271+ 96E8 AE               xor (hl)
 272+ 96E9 77               ld (hl),a
 273+ 96EA 13               inc de
 274+ 96EB
 275+ 96EB E1               pop hl
 276+ 96EC
 277+ 96EC 1A               ld a,(de)
 278+ 96ED AE               xor (hl)
 279+ 96EE 77               ld (hl),a
 280+ 96EF 2C               inc l
 281+ 96F0 1C               inc e
 282+ 96F1 1A               ld a,(de)
 283+ 96F2 AE               xor (hl)
 284+ 96F3 77               ld (hl),a
 285+ 96F4 2C               inc l
 286+ 96F5 1C               inc e
 287+ 96F6 1A               ld a,(de)
 288+ 96F7 AE               xor (hl)
 289+ 96F8 77               ld (hl),a
 290+ 96F9 13               inc de
 291+ 96FA
 292+ 96FA E1               pop hl
 293+ 96FB
 294+ 96FB 1A               ld a,(de)
 295+ 96FC AE               xor (hl)
 296+ 96FD 77               ld (hl),a
 297+ 96FE 2C               inc l
 298+ 96FF 1C               inc e
 299+ 9700 1A               ld a,(de)
 300+ 9701 AE               xor (hl)
 301+ 9702 77               ld (hl),a
 302+ 9703 2C               inc l
 303+ 9704 1C               inc e
 304+ 9705 1A               ld a,(de)
 305+ 9706 AE               xor (hl)
 306+ 9707 77               ld (hl),a
 307+ 9708 13               inc de
 308+ 9709
 309+ 9709 ED 73 2D 8C      ld (Scanlines_album_SP),sp
 310+ 970D ED 7B 0C 8C      ld sp,(Stack)
 311+ 9711 C9               ret
 312+ 9712
 313+ 9712              Pinta_lento
 314+ 9712
 315+ 9712 E1           1 pop hl
 316+ 9713
 317+ 9713 1A               ld a,(de)
 318+ 9714 AE               xor (hl)
 319+ 9715 77               ld (hl),a
 320+ 9716 2C               inc l
 321+ 9717 1C               inc e
 322+ 9718 1A               ld a,(de)
 323+ 9719 AE               xor (hl)
 324+ 971A 77               ld (hl),a
 325+ 971B 2C               inc l
 326+ 971C 1C               inc e
 327+ 971D 1A               ld a,(de)
 328+ 971E AE               xor (hl)
 329+ 971F 77               ld (hl),a
 330+ 9720 13               inc de
 331+ 9721
 332+ 9721 10 EF            djnz 1B
 333+ 9723
 334+ 9723 ED 73 2D 8C      ld (Scanlines_album_SP),sp
 335+ 9727 ED 7B 0C 8C      ld sp,(Stack)
 336+ 972B C9               ret
# file closed: Pinta_Sprites.asm
2097  972C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 972C              ; ******************************************************************************************************************************************************************************************
   2+ 972C              ;
   3+ 972C              ; 26/06/23
   4+ 972C              ;
   5+ 972C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 972C
   7+ 972C              Draw
   8+ 972C
   9+ 972C CD D2 99     	call Prepara_draw
  10+ 972F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9730 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9731 28 05        	jr z,2F
  13+ 9733
  14+ 9733 3A DE 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9736 18 0C        	jr 1F
  16+ 9738
  17+ 9738 2A DC 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 973B 22 CF 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 973E CD CA 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9741              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9741
  22+ 9741 CD 71 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9744
  24+ 9744 3A CC 8B     1 ld a,(Ctrl_0)
  25+ 9747 CB 6F        	bit 5,a
  26+ 9749 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 974B
  28+ 974B CD 60 97     	call Comprueba_limite_horizontal
  29+ 974E CD F0 97     	call Comprueba_limite_vertical
  30+ 9751
  31+ 9751              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9751              ; -----------------------
  33+ 9751              ; -----------------------
  34+ 9751              ; -----------------------
  35+ 9751
  36+ 9751 CD 46 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9754 CD 7D 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9757
  39+ 9757 3A CC 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 975A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 975C 32 CC 8B     	ld (Ctrl_0),a
  42+ 975F
  43+ 975F C9           	ret
  44+ 9760
  45+ 9760              ; *******************************************************************************************************************************************************************************************
  46+ 9760              ;	21/01/23
  47+ 9760              ;
  48+ 9760              ; 	Comprueba_limite_horizontal.
  49+ 9760              ;
  50+ 9760              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9760              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9760              ;
  53+ 9760              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9760              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9760              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9760              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9760
  58+ 9760
  59+ 9760
  60+ 9760 3A CC 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9763 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9765 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9767 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9769 32 CC 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 976C 18 09            jr 6F
  66+ 976E CB 5F        1 bit 3,a
  67+ 9770 28 0A            jr z,2F
  68+ 9772 E6 F7            and $f7
  69+ 9774 32 CC 8B         ld (Ctrl_0),a
  70+ 9777 CD CA 98     6 call Inicializacion
  71+ 977A 18 5B            jr 5F
  72+ 977C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 977D
  74+ 977D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 977D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 977D
  77+ 977D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 977E 2A E0 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9781 CD C6 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9784 67           	ld h,a
  81+ 9785 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9786 CD C6 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9789 67           	ld h,a
  84+ 978A A7           	and a
  85+ 978B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 978D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 978E 3A DE 8B     	ld a,(Cuad_objeto)
  88+ 9791 FE 02        	cp 2
  89+ 9793 38 1E        	jr c,3F
  90+ 9795 28 1C        	jr z,3F
  91+ 9797 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9798 28 23            jr z,7F
  93+ 979A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 979C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 979E E1           	pop hl
  96+ 979F
  97+ 979F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 979F              ; _para indicar con E="2" en caso necesario.
  99+ 979F
 100+ 979F E5               push hl
 101+ 97A0 C5               push bc
 102+ 97A1 CD C6 94     	call calcula_tercio
 103+ 97A4 FE 01        	cp 1
 104+ 97A6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97A8 CD D8 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97AB 28 26            jr z,9F
 107+ 97AD 38 24            jr c,9F
 108+ 97AF 1E 00        11 ld e,0
 109+ 97B1 18 22            jr 8F
 110+ 97B3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97B4 28 07        	jr z, 7F
 112+ 97B6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97B8 1E 00         	ld e,0
 114+ 97BA E1           	pop hl
 115+ 97BB 18 04        	jr 4F
 116+ 97BD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97BF 18 15            jr 10F
 118+ 97C1
 119+ 97C1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97C1              ; _para indicar con E="2" en caso necesario.
 121+ 97C1
 122+ 97C1 E5           4 push hl
 123+ 97C2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97C3 CD C6 94     	call calcula_tercio
 125+ 97C6 FE 01        	cp 1
 126+ 97C8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97CA CD D8 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97CD 28 04            jr z,9F
 129+ 97CF 30 02            jr nc,9F
 130+ 97D1 18 02        	jr 8F
 131+ 97D3 1E 02        9 ld e,2
 132+ 97D5 C1           8 pop bc
 133+ 97D6 E1           10 pop hl
 134+ 97D7 C9           5 ret
 135+ 97D8
 136+ 97D8              ; --------------------
 137+ 97D8              ;
 138+ 97D8              ; 25/08/22
 139+ 97D8
 140+ 97D8 CD C6 94     Comprueba_centro call calcula_tercio
 141+ 97DB 67               ld h,a
 142+ 97DC 08           	ex af,af
 143+ 97DD FE 02        	cp 2
 144+ 97DF 38 07        	jr c,1F
 145+ 97E1 28 05        	jr z,1F
 146+ 97E3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97E6 18 03        	jr 2F
 148+ 97E8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97EB 08           2 ex af,af
 150+ 97EC A7               and a
 151+ 97ED ED 42            sbc hl,bc
 152+ 97EF C9               ret
 153+ 97F0
 154+ 97F0              ; *********************************************************************************************************************************************************************************************
 155+ 97F0              ;
 156+ 97F0              ;   16/8/22
 157+ 97F0              ;
 158+ 97F0              ;	Comprueba_limite_vertical
 159+ 97F0              ;
 160+ 97F0              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97F0              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97F0              ;
 163+ 97F0
 164+ 97F0 2A CF 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97F3 7D           	ld a,l
 166+ 97F4 E6 1F        	and $1F
 167+ 97F6 57           	ld d,a
 168+ 97F7 3A E2 8B     	ld a,(Limite_vertical)
 169+ 97FA BA           	cp d 											; Límite - Posición.
 170+ 97FB 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97FC 3A DE 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97FF CB 47        	bit 0,a
 173+ 9801 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9803
 175+ 9803              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9803
 177+ 9803 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9804 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9806
 180+ 9806              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9806              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9806
 183+ 9806 3A C0 8B         ld a,(Coordenada_X)
 184+ 9809 16 0F            ld d,Centro_izquierda
 185+ 980B A7               and a
 186+ 980C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 980D 28 1E            jr z,3F
 188+ 980F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9811              ;                                                    ; _salimos sin modificar nada.
 190+ 9811 18 0E            jr 2F
 191+ 9813 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9814 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9816
 194+ 9816              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9816              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9816
 197+ 9816 3A C0 8B         ld a,(Coordenada_X)
 198+ 9819 16 10            ld d,Centro_derecha
 199+ 981B A7               and a
 200+ 981C 92               sub d
 201+ 981D 28 0E            jr z,3F
 202+ 981F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9821              ;                                                    ; _salimos sin modificar nada.
 204+ 9821 CB 43        2 bit 0,e
 205+ 9823 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9825 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9826 CD BA 98         call Modificaccionne
 208+ 9829 C1           	pop bc
 209+ 982A CD CA 98         call Inicializacion
 210+ 982D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 982E
 212+ 982E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 982E
 214+ 982E C5           4 push bc
 215+ 982F 01 CE 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9832 0A           	ld a,(bc)
 217+ 9833 3D           	dec a
 218+ 9834 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9835 7D           	ld a,l
 220+ 9836 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9837 CB 47        	bit 0,a
 222+ 9839 28 03        	jr z,5F
 223+ 983B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 983C 18 2E        	jr 7F
 225+ 983E
 226+ 983E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 983E
 228+ 983E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 983F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9840 3A CC 8B     	ld a,(Ctrl_0)
 231+ 9843 CB 4F        	bit 1,a
 232+ 9845 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9847 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9848
 235+ 9848              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9848
 237+ 9848 1C               inc e
 238+ 9849 1D               dec e
 239+ 984A 20 07            jr nz,12F
 240+ 984C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 984D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 984E 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9851 18 44        13 jr 9F
 244+ 9853 CB 43        12 bit 0,e
 245+ 9855 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9857              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9857 C1           	pop bc
 248+ 9858 18 D3        	jr 3B
 249+ 985A 80           14 add b
 250+ 985B 6F               ld l,a
 251+ 985C 22 CF 8B     	ld (Posicion_actual),hl
 252+ 985F CD BA 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9862 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9864 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9866 32 CC 8B         ld (Ctrl_0),a
 256+ 9869 F1           	pop af
 257+ 986A 18 2B        	jr 9F
 258+ 986C
 259+ 986C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 986C
 261+ 986C F5           7 push af
 262+ 986D 3A CC 8B     	ld a,(Ctrl_0)
 263+ 9870 CB 47        	bit 0,a
 264+ 9872 20 1D        	jr nz,8F
 265+ 9874 F1           	pop af
 266+ 9875
 267+ 9875              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9875
 269+ 9875 1C           	inc e
 270+ 9876 1D               dec e
 271+ 9877 20 07            jr nz,10F
 272+ 9879 90           	sub b
 273+ 987A 6F               ld l,a
 274+ 987B 22 CF 8B     	ld (Posicion_actual),hl
 275+ 987E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9880              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9880 CB 43        10 bit 0,e
 278+ 9882 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9884              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9884 C1           	pop bc
 281+ 9885 18 A6        	jr 3B
 282+ 9887 90           16 sub b
 283+ 9888 6F               ld l,a
 284+ 9889 22 CF 8B     	ld (Posicion_actual),hl
 285+ 988C CD BA 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 988F 18 06            jr 9F
 287+ 9891 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9893 32 CC 8B         ld (Ctrl_0),a
 289+ 9896 F1           	pop af
 290+ 9897 C1           9 pop bc
 291+ 9898 1E 00        	ld e,0
 292+ 989A CD CA 98         call Inicializacion
 293+ 989D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 989E 08           	ex af,af
 295+ 989F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 98A0 18 8B            jr 3B
 297+ 98A2
 298+ 98A2              ; --------------------
 299+ 98A2
 300+ 98A2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98A4 CD ED 99     1 call PreviousScan
 302+ 98A7 10 FB            djnz 1B
 303+ 98A9 22 CF 8B     	ld (Posicion_actual),hl
 304+ 98AC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98AD C9           	ret
 306+ 98AE
 307+ 98AE              ; --------------------
 308+ 98AE
 309+ 98AE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98B0 CD DE 99     1 call NextScan
 311+ 98B3 10 FB            djnz 1B
 312+ 98B5 22 CF 8B     	ld (Posicion_actual),hl
 313+ 98B8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98B9 C9           	ret
 315+ 98BA
 316+ 98BA              ; --------------------
 317+ 98BA              ;
 318+ 98BA              ;	22/01/23
 319+ 98BA              ;
 320+ 98BA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98BA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98BA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98BA
 324+ 98BA
 325+ 98BA              Modificaccionne
 326+ 98BA
 327+ 98BA 3A DE 8B     	ld a,(Cuad_objeto)
 328+ 98BD FE 02        	cp 2
 329+ 98BF CC A2 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98C2 DC A2 98         call c,Modifica_Pos_actual
 331+ 98C5 C8           	ret z
 332+ 98C6 CD AE 98         call Modifica_Pos_actual2
 333+ 98C9 C9               ret
 334+ 98CA
 335+ 98CA              ; *************************************************************************************************************************************************************************************************
 336+ 98CA              ;
 337+ 98CA              ;	13/8/22
 338+ 98CA              ;
 339+ 98CA              ;	Inicializacion
 340+ 98CA              ;
 341+ 98CA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98CA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98CA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98CA              ;
 345+ 98CA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98CA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98CA              ;	_ desaparece/aparece.
 348+ 98CA
 349+ 98CA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98CA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98CA              ;
 352+ 98CA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98CA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98CA              ; 		   [E] ="0"
 355+ 98CA
 356+ 98CA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98CA
 358+ 98CA CD C6 94     Inicializacion call calcula_tercio
 359+ 98CD 28 36        	jr z,primit
 360+ 98CF E6 02        	and 2
 361+ 98D1 20 07        	jr nz,segmit
 362+ 98D3 7D           	ld a,l
 363+ 98D4 FE 7F        	cp $7f
 364+ 98D6 38 2D        	jr c,primit
 365+ 98D8 28 2B        	jr z,primit
 366+ 98DA CD 40 99     segmit call column
 367+ 98DD 38 13        	jr c,tercuad
 368+ 98DF 3E 04        cuarcuad ld a,4
 369+ 98E1 32 DE 8B     	ld (Cuad_objeto),a
 370+ 98E4 21 20 48     	ld hl,$4820
 371+ 98E7 22 E0 8B     	ld (Limite_horizontal),hl
 372+ 98EA 21 E2 8B     	ld hl,Limite_vertical
 373+ 98ED 36 0D        	ld (hl),$0d
 374+ 98EF 08           	ex af,af
 375+ 98F0 18 3C        	jr 1F
 376+ 98F2              tercuad
 377+ 98F2 3E 03        	ld a,3
 378+ 98F4 32 DE 8B     	ld (Cuad_objeto),a
 379+ 98F7 21 20 48     	ld hl,$4820
 380+ 98FA 22 E0 8B     	ld (Limite_horizontal),hl
 381+ 98FD 21 E2 8B     	ld hl,Limite_vertical
 382+ 9900 36 12        	ld (hl),$12
 383+ 9902 08           	ex af,af
 384+ 9903 18 29        	jr 1F
 385+ 9905 CD 40 99     primit call column
 386+ 9908 38 13        	jr c, primcuad
 387+ 990A              segcuad
 388+ 990A 3E 02        	ld a,2
 389+ 990C 32 DE 8B     	ld (Cuad_objeto),a
 390+ 990F 21 C0 4F     	ld hl,$4fc0
 391+ 9912 22 E0 8B     	ld (Limite_horizontal),hl
 392+ 9915 21 E2 8B     	ld hl,Limite_vertical
 393+ 9918 36 0D        	ld (hl),$0d
 394+ 991A 08           	ex af,af
 395+ 991B 18 11        	jr 1F
 396+ 991D              primcuad
 397+ 991D 3E 01        	ld a,1
 398+ 991F 32 DE 8B     	ld (Cuad_objeto),a
 399+ 9922 21 C0 4F     	ld hl,$4fc0
 400+ 9925 22 E0 8B     	ld (Limite_horizontal),hl
 401+ 9928 21 E2 8B     	ld hl,Limite_vertical
 402+ 992B 36 12        	ld (hl),$12
 403+ 992D 08           	ex af,af
 404+ 992E
 405+ 992E C5           1 push bc
 406+ 992F E5           	push hl
 407+ 9930 D5           	push de
 408+ 9931
 409+ 9931 2A CF 8B     	ld hl,(Posicion_actual)
 410+ 9934 CD E4 94     	call Genera_coordenadas
 411+ 9937
 412+ 9937 D1           	pop de
 413+ 9938 E1           	pop hl
 414+ 9939 C1           	pop bc
 415+ 993A
 416+ 993A 21 CC 8B     	ld hl,Ctrl_0
 417+ 993D CB EE        	set 5,(hl)
 418+ 993F C9           	ret
 419+ 9940
 420+ 9940              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9940
 422+ 9940              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9940              ;
 424+ 9940              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9940
 426+ 9940 7D           column ld a,l
 427+ 9941 E6 1F        	and $1f
 428+ 9943 FE 10         	cp $10
 429+ 9945 C9            	ret
 430+ 9946
 431+ 9946              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9946              ;
 433+ 9946              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9946              ;
 435+ 9946              ; 14/12/22
 436+ 9946              ;
 437+ 9946              ;	Modifica: A y BC.
 438+ 9946
 439+ 9946 3A DE 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9949 E6 01        	and 1
 441+ 994B 28 17        	jr z,1F
 442+ 994D
 443+ 994D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 994D
 445+ 994D 3A C0 8B     	ld a,(Coordenada_X)
 446+ 9950 47           	ld b,a
 447+ 9951 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9952 79           	ld a,c
 449+ 9953 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9954 38 08        	jr c,2F
 451+ 9956 47           	ld b,a
 452+ 9957 79           	ld a,c
 453+ 9958 90           	sub b
 454+ 9959 32 DF 8B     	ld (Columnas),a
 455+ 995C 18 1B        	jr 4F
 456+ 995E 79           2 ld a,c
 457+ 995F 32 DF 8B     	ld (Columnas),a
 458+ 9962 18 15        	jr 4F
 459+ 9964
 460+ 9964              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9964
 462+ 9964 3A C0 8B     1 ld a,(Coordenada_X)
 463+ 9967 81           	add c
 464+ 9968 3D           	dec a
 465+ 9969 D6 1F        	sub $1f
 466+ 996B 38 08        	jr c,3F
 467+ 996D 47           	ld b,a
 468+ 996E 79           	ld a,c
 469+ 996F 90           	sub b
 470+ 9970 32 DF 8B     	ld (Columnas),a
 471+ 9973 18 04        	jr 4F
 472+ 9975 79           3 ld a,c
 473+ 9976 32 DF 8B     	ld (Columnas),a
 474+ 9979 D9           4 exx
 475+ 997A 4F           	ld c,a
 476+ 997B D9           	exx
 477+ 997C C9            ret
 478+ 997D
 479+ 997D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 997D              ;
 481+ 997D              ;   19/7/23
 482+ 997D              ;
 483+ 997D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 997D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 997D              ;
 486+ 997D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 997D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 997D              ;
 489+ 997D              ;	DESTRUYE: HL,B Y A.
 490+ 997D
 491+ 997D 3A DE 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9980 FE 02        	cp 2
 493+ 9982 38 18        	jr c,1F
 494+ 9984 28 16        	jr z,1F
 495+ 9986 E6 01        	and 1
 496+ 9988 28 0D        	jr z,3F
 497+ 998A
 498+ 998A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 998A
 500+ 998A CD C6 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 998D
 502+ 998D 7D           9 ld a,l
 503+ 998E E6 1F        	and $1f
 504+ 9990 28 2A        	jr z,7F
 505+ 9992 2B           	dec hl
 506+ 9993 10 F8        	djnz 9B
 507+ 9995 18 25        	jr 7F
 508+ 9997
 509+ 9997              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9997
 511+ 9997 2A CF 8B     3 ld hl,(Posicion_actual)
 512+ 999A 18 20        	jr 7F
 513+ 999C
 514+ 999C 28 14        1 jr z,2F
 515+ 999E
 516+ 999E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 999E
 518+ 999E CD C6 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99A1
 520+ 99A1 7D           4 ld a,l
 521+ 99A2 E6 1F        	and $1f
 522+ 99A4 28 03        	jr z,6F
 523+ 99A6 2B           	dec hl
 524+ 99A7 10 F8        	djnz 4B
 525+ 99A9 06 0F        6 ld b,15
 526+ 99AB CD ED 99     5 call PreviousScan
 527+ 99AE 10 FB        	djnz 5B
 528+ 99B0 18 0A        	jr 7F
 529+ 99B2
 530+ 99B2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99B2
 532+ 99B2 CD C6 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99B5 06 0F        	ld b,15
 534+ 99B7 CD ED 99     8 call PreviousScan
 535+ 99BA 10 FB        	djnz 8B
 536+ 99BC
 537+ 99BC E5           7 push hl
 538+ 99BD DD E1        	pop ix
 539+ 99BF
 540+ 99BF 2A D1 8B     	ld hl,(Puntero_objeto)
 541+ 99C2 E5           	push hl
 542+ 99C3 FD E1        	pop iy
 543+ 99C5
 544+ 99C5 C9           	ret
 545+ 99C6
 546+ 99C6              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99C6              ;
 548+ 99C6              ;	2/1/23
 549+ 99C6              ;
 550+ 99C6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99C6              ;
 552+ 99C6              ;	Tras esta rutina tenemos:
 553+ 99C6              ;
 554+ 99C6              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99C6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99C6              ;
 557+ 99C6              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99C6
 559+ 99C6 2A CF 8B     Operandos ld hl,(Posicion_actual)
 560+ 99C9 3A DF 8B     	ld a,(Columnas)
 561+ 99CC 3D           	dec a
 562+ 99CD 20 01        	jr nz,1F
 563+ 99CF 3C           	inc a
 564+ 99D0 47           1 ld b,a
 565+ 99D1 C9           	ret
 566+ 99D2
 567+ 99D2              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99D2              ;
 569+ 99D2              ;	Prepara_draw
 570+ 99D2              ;
 571+ 99D2              ;	Es una rutina de carga.
 572+ 99D2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99D2              ;
 574+ 99D2              ;	FUNCIONAMIENTO:
 575+ 99D2              ;
 576+ 99D2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99D2              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99D2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99D2              ;
 580+ 99D2              ;	DESTRUYE:
 581+ 99D2              ;
 582+ 99D2              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99D2
 584+ 99D2 21 CD 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99D5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99D6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99D7 4E           	ld c,(hl)
 588+ 99D8 2A CF 8B     	ld hl,(Posicion_actual)
 589+ 99DB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99DD C9           	ret
 591+ 99DE
 592+ 99DE              ;----------------------------------------------------------------------------------------------------------------
 593+ 99DE              ;
 594+ 99DE              ;	5/08/22
 595+ 99DE              ;
 596+ 99DE              ;   NextScan.
 597+ 99DE              ;
 598+ 99DE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99DE              ;
 600+ 99DE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99DE              ;
 602+ 99DE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99DE              ;
 604+ 99DE              ;       DESTRUIDOS: AF y HL !!!
 605+ 99DE              ;
 606+ 99DE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99DE              ;
 608+ 99DE
 609+ 99DE 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99DF 7C               ld a,h
 611+ 99E0 E6 07            and 7
 612+ 99E2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99E3
 614+ 99E3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99E4 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99E6 6F               ld l,a
 617+ 99E7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99E8
 619+ 99E8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99E9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99EB 67               ld h,a
 622+ 99EC C9               ret
 623+ 99ED
 624+ 99ED              ;----------------------------------------------------------------------------------------------------------------
 625+ 99ED              ;
 626+ 99ED              ;	5/08/22
 627+ 99ED              ;
 628+ 99ED              ;   PreviousScan.
 629+ 99ED              ;
 630+ 99ED              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99ED              ;
 632+ 99ED              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99ED              ;
 634+ 99ED              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99ED              ;
 636+ 99ED              ;       DESTRUIDOS: AF y HL !!!
 637+ 99ED              ;
 638+ 99ED              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99ED              ;
 640+ 99ED
 641+ 99ED 7C           PreviousScan ld a,h
 642+ 99EE 25               dec h               ; Dec H.
 643+ 99EF E6 07            and 7
 644+ 99F1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99F2
 646+ 99F2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99F3 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99F5 6F               ld l,a
 649+ 99F6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99F7
 651+ 99F7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99F8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99FA 67               ld h,a
 654+ 99FB C9               ret
 655+ 99FC
 656+ 99FC
 657+ 99FC
 658+ 99FC
 659+ 99FC
 660+ 99FC
 661+ 99FC
 662+ 99FC
 663+ 99FC
 664+ 99FC
 665+ 99FC
 666+ 99FC
# file closed: Draw_XOR.asm
2098  99FC              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99FC
   2+ 99FC              ; ******************************************************************************************************************************************************************************************
   3+ 99FC              ;
   4+ 99FC              ;   20/05/23
   5+ 99FC              ;
   6+ 99FC              ;	Recompone_posicion_inicio
   7+ 99FC              ;
   8+ 99FC              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99FC              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99FC              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99FC              ;	_ a una u otra rutina.
  12+ 99FC
  13+ 99FC              Recompone_posicion_inicio
  14+ 99FC
  15+ 99FC 2A DC 8B     	ld hl,(Posicion_inicio)
  16+ 99FF 7D           	ld a,l
  17+ 9A00 E6 1F        	and $1f
  18+ 9A02 28 16        	jr z,1F
  19+ 9A04
  20+ 9A04 FE 1F        	cp $1f
  21+ 9A06 28 0D        	jr z,3F
  22+ 9A08
  23+ 9A08 21 CB 8B     	ld hl,Ctrl_2
  24+ 9A0B CB C6        	set 0,(hl)
  25+ 9A0D 2A D1 8B     	ld hl,(Puntero_objeto)
  26+ 9A10 22 FD 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A13 18 08        	jr 2F
  28+ 9A15
  29+ 9A15 CD C3 9B     3 call Mov_left
  30+ 9A18 18 03        	jr 2F
  31+ 9A1A
  32+ 9A1A CD A0 9A     1 call Mov_right
  33+ 9A1D 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A20 22 D1 8B     	ld (Puntero_objeto),hl
  35+ 9A23 C9           	ret
  36+ 9A24
  37+ 9A24              ; ******************************************************************************************************************************************************************************************
  38+ 9A24              ;
  39+ 9A24              ;   27/05/23
  40+ 9A24              ;
  41+ 9A24              ;	Mov_down
  42+ 9A24              ;
  43+ 9A24              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A24              ;
  45+ 9A24              ;
  46+ 9A24              Mov_down
  47+ 9A24
  48+ 9A24 CD 8E 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A27              ;																	; _ repone (Puntero_objeto).
  50+ 9A27 21 CC 8B     	ld hl,Ctrl_0
  51+ 9A2A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A2C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A2C              ; 																	; _ en el caso de que no lo haya.
  54+ 9A2C 3A E7 8B     	ld a,(Vel_down)
  55+ 9A2F 47           	ld b,a
  56+ 9A30 2A CF 8B         ld hl,(Posicion_actual)
  57+ 9A33 CD C6 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A36 E6 02        	and 2
  59+ 9A38 28 17        	jr z,1F
  60+ 9A3A
  61+ 9A3A              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A3A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A3A
  64+ 9A3A 7C           	ld a,h
  65+ 9A3B FE 57        	cp $57
  66+ 9A3D 20 12        	jr nz,1F
  67+ 9A3F
  68+ 9A3F 7D           	ld a,l
  69+ 9A40 C6 20        	add $20
  70+ 9A42 30 0D        	jr nc,1F
  71+ 9A44
  72+ 9A44              ; ------------------------------
  73+ 9A44              ;
  74+ 9A44              ;	12/01/24
  75+ 9A44
  76+ 9A44              ;	call Reaparece_arriba
  77+ 9A44 CD 50 9D     	call Reinicio
  78+ 9A47
  79+ 9A47              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A47
  81+ 9A47 3A 33 8C     	ld a,(Ctrl_3)
  82+ 9A4A CB CF        	set 1,a
  83+ 9A4C 32 33 8C     	ld (Ctrl_3),a
  84+ 9A4F
  85+ 9A4F 18 08        	jr 3F
  86+ 9A51              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A51              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A51              ; ------------------------------
  89+ 9A51
  90+ 9A51 CD DE 99     1 call NextScan
  91+ 9A54 22 CF 8B     	ld (Posicion_actual),hl
  92+ 9A57 10 DA            djnz 2B
  93+ 9A59 CD E4 94     3 call Genera_coordenadas
  94+ 9A5C C9           	ret
  95+ 9A5D
  96+ 9A5D              ; ******************************************************************************************************************************************************************************************
  97+ 9A5D              ;
  98+ 9A5D              ;   27/05/23
  99+ 9A5D              ;
 100+ 9A5D              ;	Mov_up
 101+ 9A5D              ;
 102+ 9A5D              ; 	Mueve el Sprite hacia arriba.
 103+ 9A5D              ;
 104+ 9A5D              ;
 105+ 9A5D              Mov_up
 106+ 9A5D
 107+ 9A5D CD 8E 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A60              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A60 21 CC 8B     	ld hl,Ctrl_0
 110+ 9A63 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A65              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A65              ; 																		; _ en el caso de que no lo haya.
 113+ 9A65 3A E6 8B     	ld a,(Vel_up)
 114+ 9A68 47           	ld b,a
 115+ 9A69 2A CF 8B     	ld hl,(Posicion_actual)
 116+ 9A6C CD C6 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A6F A7           	and a
 118+ 9A70 20 10        	jr nz,1F
 119+ 9A72
 120+ 9A72              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A72              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A72
 123+ 9A72 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A73 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A75 20 0B            jr nz,1F
 126+ 9A77 7D               ld a,l
 127+ 9A78 D6 20            sub $20
 128+ 9A7A 30 06            jr nc,1F
 129+ 9A7C 25               dec h
 130+ 9A7D
 131+ 9A7D              ; -----------------------------
 132+ 9A7D CD 31 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A80              ;	call Reinicio
 134+ 9A80              ; -----------------------------
 135+ 9A80
 136+ 9A80 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A82 CD ED 99     1 call PreviousScan
 138+ 9A85 22 CF 8B     	ld (Posicion_actual),hl
 139+ 9A88 10 E2            djnz 3B
 140+ 9A8A CD E4 94     2 call Genera_coordenadas
 141+ 9A8D C9           	ret
 142+ 9A8E
 143+ 9A8E              ; -----------------------------
 144+ 9A8E              ;
 145+ 9A8E              ;	27/5/23
 146+ 9A8E              ;
 147+ 9A8E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A8E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A8E              ;
 150+ 9A8E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A8E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A8E              ;
 153+ 9A8E              ;	Modifica: A y (Puntero_objeto).
 154+ 9A8E
 155+ 9A8E 3A CB 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A91 CB 47        	bit 0,a
 157+ 9A93 C8           	ret z
 158+ 9A94 CB 87        	res 0,a
 159+ 9A96 32 CB 8B     	ld (Ctrl_2),a
 160+ 9A99 2A FD 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A9C 22 D1 8B     	ld (Puntero_objeto),hl
 162+ 9A9F C9           	ret
 163+ 9AA0
 164+ 9AA0              ; ******************************************************************************************************************************************************************************************
 165+ 9AA0              ;
 166+ 9AA0              ;	19/10/22
 167+ 9AA0              ;
 168+ 9AA0              ;	Mov_right.
 169+ 9AA0              ;
 170+ 9AA0              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9AA0              ;
 172+ 9AA0
 173+ 9AA0 3A CC 8B     Mov_right ld a,(Ctrl_0)
 174+ 9AA3 CB 77        	bit 6,a
 175+ 9AA5 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AA7
 177+ 9AA7 CD DF 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AAA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AAB
 180+ 9AAB 21 CC 8B     	ld hl,Ctrl_0
 181+ 9AAE CB E6        	set 4,(hl)
 182+ 9AB0 18 52        	jr 8F
 183+ 9AB2
 184+ 9AB2 21 CC 8B     10 ld hl,Ctrl_0
 185+ 9AB5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AB7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AB7              ; 																	; _ en el caso de que no lo haya.
 188+ 9AB7 3A C0 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9ABA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9ABC 20 46        	jr nz,8F
 191+ 9ABE
 192+ 9ABE 3A D3 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AC1 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AC2 28 40        	jr z,8F
 195+ 9AC4
 196+ 9AC4              ; ---------- ---------- ----------
 197+ 9AC4              ;
 198+ 9AC4              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AC4
 200+ 9AC4 3A E5 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AC7 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AC9 28 11        	jr z,1F
 203+ 9ACB 38 06        	jr c,6F
 204+ 9ACD FE 04        	cp 4
 205+ 9ACF 28 14        	jr z,7F
 206+ 9AD1 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AD3
 208+ 9AD3              ; ---------- ---------- ----------
 209+ 9AD3              ;
 210+ 9AD3              ; Perfiles de velocidad
 211+ 9AD3              ;
 212+ 9AD3
 213+ 9AD3 3A D3 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AD6 FE FE        	cp $fe
 215+ 9AD8 20 2A        	jr nz,8F
 216+ 9ADA 18 10        	jr 3F
 217+ 9ADC 3A D3 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ADF FE FD        	cp $fd
 219+ 9AE1 20 21        	jr nz,8F
 220+ 9AE3 18 07        	jr 3F
 221+ 9AE5 3A D3 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AE8 FE FB        	cp $fb
 223+ 9AEA 20 18        	jr nz,8F
 224+ 9AEC
 225+ 9AEC              ; ---------- ---------- ----------
 226+ 9AEC
 227+ 9AEC              3
 228+ 9AEC CD 1F 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AEF              ;	call Reinicio
 230+ 9AEF
 231+ 9AEF              ; ---------- ---------- ----------
 232+ 9AEF              ;
 233+ 9AEF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AEF
 235+ 9AEF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AF1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AF2 CD 0B 9B     	call DESPLZ_DER
 238+ 9AF5 C1           	pop bc
 239+ 9AF6 10 F9        	djnz 5B
 240+ 9AF8 2A CF 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AFB 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AFC 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9AFF CD E4 94     	call Genera_coordenadas
 244+ 9B02 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B04
 246+ 9B04              ; ---------- ---------- ----------
 247+ 9B04
 248+ 9B04 2A CF 8B     8 ld hl,(Posicion_actual)
 249+ 9B07 CD 0B 9B     	call DESPLZ_DER
 250+ 9B0A C9           2 ret
 251+ 9B0B
 252+ 9B0B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B0B              ;
 254+ 9B0B              ;	22/9/22
 255+ 9B0B              ;
 256+ 9B0B
 257+ 9B0B CD 1A 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B0E CD 66 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B11 CD 8F 9B         call Ciclo_completo
 260+ 9B14 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B17 CB FE        	set 7,(hl)
 262+ 9B19 C9           	ret
 263+ 9B1A
 264+ 9B1A              ; ******************************************************************************************************************************************************************************************
 265+ 9B1A              ;	15/02/23
 266+ 9B1A              ;
 267+ 9B1A
 268+ 9B1A 3A E5 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B1D 47           	ld b,a
 270+ 9B1E 2A D8 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B21 23           1 inc hl
 272+ 9B22 23           	inc hl
 273+ 9B23 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B25 22 D8 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B28 CD C5 90     	call Extrae_address
 276+ 9B2B 22 D1 8B     	ld (Puntero_objeto),hl
 277+ 9B2E
 278+ 9B2E              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B2E
 280+ 9B2E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B2E              ; Cuántos movimientos hemos hecho ??
 282+ 9B2E              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B2E
 284+ 9B2E 2A D4 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B31 EB           	ex de,hl
 286+ 9B32 A7           	and a
 287+ 9B33 ED 52        	sbc hl,de
 288+ 9B35 CB 3D        	srl l
 289+ 9B37 3E 08        6 ld a,8
 290+ 9B39 95           	sub l
 291+ 9B3A 30 1E        	jr nc,3F
 292+ 9B3C
 293+ 9B3C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B3C              ; B="0".
 295+ 9B3C
 296+ 9B3C 04           4 inc b
 297+ 9B3D 3C           	inc a
 298+ 9B3E 20 FC        	jr nz,4B
 299+ 9B40 78           	ld a,b
 300+ 9B41 08           	ex af,af
 301+ 9B42 2A D4 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B45 23           5 inc hl
 303+ 9B46 23           	inc hl
 304+ 9B47 10 FC        	djnz 5B
 305+ 9B49 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B4C CD C5 90     	call Extrae_address
 307+ 9B4F 22 D1 8B     	ld (Puntero_objeto),hl
 308+ 9B52
 309+ 9B52              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B52              ; _(Posicion_actual).
 311+ 9B52
 312+ 9B52 21 CF 8B     	ld hl,Posicion_actual
 313+ 9B55 34           	inc (hl)
 314+ 9B56 08               ex af,af
 315+ 9B57 6F           	ld l,a
 316+ 9B58 18 DD        	jr 6B
 317+ 9B5A
 318+ 9B5A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B5A
 320+ 9B5A 47           3 ld b,a
 321+ 9B5B 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B5E 23           2 inc hl
 323+ 9B5F 23           	inc hl
 324+ 9B60 10 FC        	djnz 2B
 325+ 9B62 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B65 C9           8 ret
 327+ 9B66
 328+ 9B66              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B66              ;
 330+ 9B66              ;	24/7/22
 331+ 9B66              ;
 332+ 9B66              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B66              ;
 334+ 9B66              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B66              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B66              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B66
 338+ 9B66 3A D3 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B69 A7           	and a
 340+ 9B6A 20 1F        	jr nz,1F
 341+ 9B6C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B6E 32 D3 8B         ld (CTRL_DESPLZ),a
 343+ 9B71
 344+ 9B71 21 CE 8B     	ld hl,Columns
 345+ 9B74 34           	inc (hl)
 346+ 9B75 3A DE 8B     	ld a,(Cuad_objeto)
 347+ 9B78 E6 01        	and 1
 348+ 9B7A 28 0F        	jr z,1F
 349+ 9B7C 2A CF 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B7F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B80 22 CF 8B     	ld (Posicion_actual),hl
 352+ 9B83 CD E4 94     	call Genera_coordenadas
 353+ 9B86 CD EB 9C     	call Inc_CTRL_DESPLZ
 354+ 9B89 18 03        	jr 2F
 355+ 9B8B CD EB 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B8E C9           2 ret
 357+ 9B8F
 358+ 9B8F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B8F              ;
 360+ 9B8F              ;	24/7/22
 361+ 9B8F              ;
 362+ 9B8F              ;	Ciclo_completo.
 363+ 9B8F              ;
 364+ 9B8F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B8F              ;
 366+ 9B8F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B8F              ; 	Decrementamos (Columns).
 368+ 9B8F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B8F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B8F
 371+ 9B8F
 372+ 9B8F 3A D3 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B92 FE FF        	cp $ff
 374+ 9B94 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B96 E6 F0        	and $f0
 376+ 9B98 20 28        	jr nz,3F
 377+ 9B9A
 378+ 9B9A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B9A
 380+ 9B9A 3A D3 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B9D 47           	ld b,a
 382+ 9B9E 3E F8        	ld a,$f8
 383+ 9BA0 80           	add b
 384+ 9BA1 32 D3 8B     	ld (CTRL_DESPLZ),a
 385+ 9BA4 18 1C        	jr 3F
 386+ 9BA6 21 CE 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BA9 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BAA AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BAB 32 D3 8B     	ld (CTRL_DESPLZ),a
 390+ 9BAE 3A DE 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BB1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BB3 20 0A        	jr nz,2F
 393+ 9BB5 2A CF 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BB8 23           	inc hl
 395+ 9BB9 22 CF 8B     	ld (Posicion_actual),hl
 396+ 9BBC CD E4 94     	call Genera_coordenadas
 397+ 9BBF
 398+ 9BBF              ; Inicia el puntero de Sprite.
 399+ 9BBF
 400+ 9BBF CD DA 90     2 call Inicia_puntero_objeto_der
 401+ 9BC2 C9           3 ret
 402+ 9BC3
 403+ 9BC3              ; ******************************************************************************************************************************************************************************************
 404+ 9BC3              ;
 405+ 9BC3              ;	15/02/23
 406+ 9BC3              ;
 407+ 9BC3              ;	Mov_left.
 408+ 9BC3              ;
 409+ 9BC3              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BC3              ;
 411+ 9BC3              Mov_left
 412+ 9BC3
 413+ 9BC3 21 CC 8B     	ld hl,Ctrl_0
 414+ 9BC6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BC8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BC8              ; 																	; _ en el caso de que no lo haya.
 417+ 9BC8 3A CC 8B     	ld a,(Ctrl_0)
 418+ 9BCB CB 77        	bit 6,a
 419+ 9BCD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BCF
 421+ 9BCF CD E5 9C     	call Stop_Amadeus_left
 422+ 9BD2 C8           	ret z
 423+ 9BD3 20 4A        	jr nz,8F
 424+ 9BD5
 425+ 9BD5 3A C0 8B     11 ld a,(Coordenada_X)
 426+ 9BD8 A7           	and a
 427+ 9BD9 20 44        	jr nz,8F
 428+ 9BDB
 429+ 9BDB 3A D3 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BDE A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BDF 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BE1
 433+ 9BE1              ; ---------- ---------- ----------
 434+ 9BE1
 435+ 9BE1 3A E4 8B     	ld a,(Vel_left)
 436+ 9BE4 FE 02        	cp 2
 437+ 9BE6 28 0F        	jr z,1F
 438+ 9BE8 38 04        	jr c,6F
 439+ 9BEA FE 04        	cp 4
 440+ 9BEC 28 12        	jr z,7F
 441+ 9BEE
 442+ 9BEE              ; ---------- ---------- ----------
 443+ 9BEE
 444+ 9BEE 3A D3 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BF1 FE F8        	cp $f8
 446+ 9BF3 20 2A        	jr nz,8F
 447+ 9BF5 18 10        	jr 4F
 448+ 9BF7 3A D3 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BFA FE F9        	cp $f9
 450+ 9BFC 20 21        	jr nz,8F
 451+ 9BFE 18 07        	jr 4F
 452+ 9C00 3A D3 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9C03 FE FB        	cp $fb
 454+ 9C05 20 18        	jr nz,8F
 455+ 9C07
 456+ 9C07              ; ---------- ---------- ----------
 457+ 9C07
 458+ 9C07              4
 459+ 9C07 CD 0D 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C0A              ;	call Reinicio
 461+ 9C0A
 462+ 9C0A              ; ---------- ---------- ----------
 463+ 9C0A
 464+ 9C0A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C0C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C0D
 467+ 9C0D              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C0D              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C0D
 470+ 9C0D CD 26 9C     	call DESPLZ_IZQ
 471+ 9C10 C1           	pop bc
 472+ 9C11 10 F9        	djnz 5B
 473+ 9C13 2A CF 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C16 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C17 22 CF 8B     	ld (Posicion_actual),hl
 476+ 9C1A CD E4 94     	call Genera_coordenadas
 477+ 9C1D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C1F
 479+ 9C1F              ; ---------- ---------- ----------
 480+ 9C1F
 481+ 9C1F              ; Movemos, no hay recolocación.
 482+ 9C1F
 483+ 9C1F 2A CF 8B     8 ld hl,(Posicion_actual)
 484+ 9C22 CD 26 9C     	call DESPLZ_IZQ
 485+ 9C25 C9           2 ret
 486+ 9C26
 487+ 9C26              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C26              ;
 489+ 9C26              ;	22/9/22
 490+ 9C26
 491+ 9C26              DESPLZ_IZQ
 492+ 9C26
 493+ 9C26 CD 35 9C     	call Desplaza_izquierda
 494+ 9C29 CD 81 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C2C CD A9 9C     	call Ciclo_completo_2
 496+ 9C2F 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C32 CB BE        	res 7,(hl)
 498+ 9C34 C9           	ret
 499+ 9C35
 500+ 9C35              Desplaza_izquierda
 501+ 9C35
 502+ 9C35 3A E4 8B     	ld a,(Vel_left)
 503+ 9C38 47           	ld b,a
 504+ 9C39 2A DA 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C3C 23           1 inc hl
 506+ 9C3D 23           	inc hl
 507+ 9C3E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C40 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C43 CD C5 90     	call Extrae_address
 510+ 9C46 22 D1 8B     	ld (Puntero_objeto),hl
 511+ 9C49
 512+ 9C49              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C49
 514+ 9C49              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C49              ; Cuántos movimientos hemos hecho ??
 516+ 9C49              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C49
 518+ 9C49 2A D6 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C4C EB           	ex de,hl
 520+ 9C4D A7           	and a
 521+ 9C4E ED 52        	sbc hl,de
 522+ 9C50 CB 3D        	srl l
 523+ 9C52 3E 08        6 ld a,8
 524+ 9C54 95           	sub l
 525+ 9C55 30 1E        	jr nc,3F
 526+ 9C57
 527+ 9C57              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C57              ; B="0".
 529+ 9C57
 530+ 9C57 04           4 inc b
 531+ 9C58 3C           	inc a
 532+ 9C59 20 FC        	jr nz,4B
 533+ 9C5B 78           	ld a,b
 534+ 9C5C 08           	ex af,af
 535+ 9C5D 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C60 23           5 inc hl
 537+ 9C61 23           	inc hl
 538+ 9C62 10 FC        	djnz 5B
 539+ 9C64 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C67 CD C5 90     	call Extrae_address
 541+ 9C6A 22 D1 8B     	ld (Puntero_objeto),hl
 542+ 9C6D
 543+ 9C6D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C6D              ; _(Posicion_actual).
 545+ 9C6D
 546+ 9C6D 21 CF 8B     	ld hl,Posicion_actual
 547+ 9C70 35           	dec (hl)
 548+ 9C71 08           	ex af,af
 549+ 9C72 6F           	ld l,a
 550+ 9C73 18 DD        	jr 6B
 551+ 9C75
 552+ 9C75              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C75
 554+ 9C75 47           3 ld b,a
 555+ 9C76 2A D4 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C79 23           2 inc hl
 557+ 9C7A 23           	inc hl
 558+ 9C7B 10 FC        	djnz 2B
 559+ 9C7D 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C80 C9           8 ret
 561+ 9C81
 562+ 9C81              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C81              ;
 564+ 9C81              ;	modifica_parametros_1er_DESPLZ
 565+ 9C81              ;
 566+ 9C81              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C81              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C81              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C81
 570+ 9C81 3A D3 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C84 A7           	and a
 572+ 9C85 20 1E        	jr nz,1F
 573+ 9C87 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C88 32 D3 8B         ld (CTRL_DESPLZ),a
 575+ 9C8B 21 CE 8B     	ld hl,Columns
 576+ 9C8E 34           	inc (hl)
 577+ 9C8F 3A DE 8B     	ld a,(Cuad_objeto)
 578+ 9C92 E6 01        	and 1
 579+ 9C94 20 0F        	jr nz,1F
 580+ 9C96 2A CF 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C99 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C9A 22 CF 8B     	ld (Posicion_actual),hl
 583+ 9C9D CD E4 94     	call Genera_coordenadas
 584+ 9CA0 CD FC 9C     	call Dec_CTRL_DESPLZ
 585+ 9CA3 18 03        	jr 2F
 586+ 9CA5 CD FC 9C     1 call Dec_CTRL_DESPLZ
 587+ 9CA8 C9           2 ret
 588+ 9CA9
 589+ 9CA9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CA9
 591+ 9CA9 3A D3 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CAC FE F7        	cp $f7
 593+ 9CAE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CB0 30 2C        	jr nc,3F
 595+ 9CB2
 596+ 9CB2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CB2
 598+ 9CB2 06 00        	ld b,0
 599+ 9CB4 04           4 inc b
 600+ 9CB5 3C           	inc a
 601+ 9CB6 FE F7        	cp $f7
 602+ 9CB8 20 FA        	jr nz,4B
 603+ 9CBA 3E FF        	ld a,$ff
 604+ 9CBC 90           	sub b
 605+ 9CBD 32 D3 8B     	ld (CTRL_DESPLZ),a
 606+ 9CC0 18 1C        	jr 3F
 607+ 9CC2
 608+ 9CC2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CC2
 610+ 9CC2 21 CE 8B     1 ld hl,Columns
 611+ 9CC5 35           	dec (hl)
 612+ 9CC6 AF           	xor a
 613+ 9CC7 32 D3 8B     	ld (CTRL_DESPLZ),a
 614+ 9CCA 3A DE 8B     	ld a,(Cuad_objeto)
 615+ 9CCD E6 01        	and 1
 616+ 9CCF 28 0A        	jr z,2F
 617+ 9CD1 2A CF 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CD4 2B           	dec hl
 619+ 9CD5 22 CF 8B     	ld (Posicion_actual),hl
 620+ 9CD8 CD E4 94     	call Genera_coordenadas
 621+ 9CDB
 622+ 9CDB              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CDB
 624+ 9CDB CD ED 90     2 call Inicia_puntero_objeto_izq
 625+ 9CDE C9           3 ret
 626+ 9CDF
 627+ 9CDF              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CDF              ;
 629+ 9CDF              ;	19/10/22
 630+ 9CDF              ;
 631+ 9CDF              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CDF              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CDF
 634+ 9CDF 3A C0 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CE2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CE4 C9           	ret
 637+ 9CE5
 638+ 9CE5              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CE5              ;
 640+ 9CE5              ;	19/10/22
 641+ 9CE5              ;
 642+ 9CE5              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CE5              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CE5
 645+ 9CE5 3A C0 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CE8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CEA C9           	ret
 648+ 9CEB
 649+ 9CEB              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CEB              ;
 651+ 9CEB              ;	24/7/22
 652+ 9CEB              ;
 653+ 9CEB              ;	Inc_CTRL_DESPLZ
 654+ 9CEB              ;
 655+ 9CEB              ;
 656+ 9CEB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CEB
 658+ 9CEB 21 D3 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CEE 3A E5 8B     	ld a,(Vel_right)
 660+ 9CF1 A7           	and a
 661+ 9CF2 28 06        	jr z,1F
 662+ 9CF4 47           	ld b,a
 663+ 9CF5 34           3 inc (hl)
 664+ 9CF6 10 FD        	djnz 3B
 665+ 9CF8 18 01        	jr 2F
 666+ 9CFA 34           1 inc (hl)
 667+ 9CFB C9           2 ret
 668+ 9CFC
 669+ 9CFC              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CFC              ;
 671+ 9CFC              ;	5/2/23
 672+ 9CFC              ;
 673+ 9CFC              ;	Dec_CTRL_DESPLZ
 674+ 9CFC              ;
 675+ 9CFC              ;
 676+ 9CFC              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CFC
 678+ 9CFC 21 D3 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CFF 3A E4 8B     	ld a,(Vel_left)
 680+ 9D02 A7           	and a
 681+ 9D03 28 06        	jr z,1F
 682+ 9D05 47           	ld b,a
 683+ 9D06 35           3 dec (hl)
 684+ 9D07 10 FD        	djnz 3B
 685+ 9D09 18 01        	jr 2F
 686+ 9D0B 35           1 dec (hl)
 687+ 9D0C C9           2 ret
 688+ 9D0D
 689+ 9D0D              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D0D
 691+ 9D0D 2A CF 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D10 01 1F 00     	ld bc,31
 693+ 9D13 A7           	and a
 694+ 9D14 ED 4A        	adc hl,bc
 695+ 9D16 22 CF 8B     	ld (Posicion_actual),hl
 696+ 9D19 21 CC 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D1C CB C6        	set 0,(hl)
 698+ 9D1E C9           	ret
 699+ 9D1F
 700+ 9D1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D1F
 702+ 9D1F 2A CF 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D22 01 1F 00     	ld bc,31
 704+ 9D25 A7           	and a
 705+ 9D26 ED 42        	sbc hl,bc
 706+ 9D28 22 CF 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D2B 21 CC 8B     	ld hl,Ctrl_0
 708+ 9D2E CB CE        	set 1,(hl)
 709+ 9D30 C9           	ret
 710+ 9D31
 711+ 9D31              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D31
 713+ 9D31 24           Reaparece_abajo inc h
 714+ 9D32 01 E0 17     	ld bc,$17e0
 715+ 9D35 A7           	and a
 716+ 9D36 ED 4A        	adc hl,bc
 717+ 9D38 22 CF 8B     	ld (Posicion_actual),hl
 718+ 9D3B 21 CC 8B     	ld hl,Ctrl_0
 719+ 9D3E CB D6        	set 2,(hl)
 720+ 9D40 C9           	ret
 721+ 9D41
 722+ 9D41              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D41
 724+ 9D41 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D44 A7           	and a
 726+ 9D45 ED 42        	sbc hl,bc
 727+ 9D47 22 CF 8B     	ld (Posicion_actual),hl
 728+ 9D4A 21 CC 8B     	ld hl,Ctrl_0
 729+ 9D4D CB DE        	set 3,(hl)
 730+ 9D4F C9           	ret
 731+ 9D50
 732+ 9D50              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D50              ;
 734+ 9D50              ;	15/07/23
 735+ 9D50
 736+ 9D50              Reinicio
 737+ 9D50
 738+ 9D50              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D50
 740+ 9D50 AF           	xor a
 741+ 9D51 21 F4 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D54 CD 72 9D     	call Limpia_contenido_hl
 743+ 9D57
 744+ 9D57 21 CF 8B     	ld hl,Posicion_actual
 745+ 9D5A CD 72 9D     	call Limpia_contenido_hl
 746+ 9D5D
 747+ 9D5D CD C6 92     	call Inicializa_Puntero_indice_mov
 748+ 9D60 CD 71 9E     	call Inicia_Puntero_mov
 749+ 9D63
 750+ 9D63 21 F6 8B     	ld hl,Incrementa_puntero
 751+ 9D66 06 05        	ld b,5
 752+ 9D68 77           1 ld (hl),a
 753+ 9D69 23           	inc hl
 754+ 9D6A 10 FC        	djnz 1B
 755+ 9D6C
 756+ 9D6C 21 CB 8B     	ld hl,Ctrl_2
 757+ 9D6F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D71
 759+ 9D71 C9           	ret
 760+ 9D72
 761+ 9D72 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D73 23           	inc hl
 763+ 9D74 77           	ld (hl),a
 764+ 9D75 C9           	ret
 765+ 9D76
 766+ 9D76              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D76              ;
 768+ 9D76              ;	18/6/24
 769+ 9D76              ;
 770+ 9D76
 771+ 9D76              Amadeus_a_izquierda
 772+ 9D76
 773+ 9D76              ;	Actualiza contador de movimientos.
 774+ 9D76
 775+ 9D76 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D79 35           	dec (hl)
 777+ 9D7A 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D7C
 779+ 9D7C 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D7F 2B           	dec hl
 781+ 9D80 2B           	dec hl
 782+ 9D81 2B           	dec hl
 783+ 9D82 2B           	dec hl
 784+ 9D83 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D86
 786+ 9D86 21 33 8C     	ld hl,Ctrl_3
 787+ 9D89 CB EE        	set 5,(hl)
 788+ 9D8B
 789+ 9D8B C9           	ret
 790+ 9D8C
 791+ 9D8C 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D8D C9           	ret
 793+ 9D8E
 794+ 9D8E
 795+ 9D8E              Amadeus_a_derecha
 796+ 9D8E
 797+ 9D8E              ;	Actualiza contador de movimientos.
 798+ 9D8E
 799+ 9D8E 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D91 34           	inc (hl)
 801+ 9D92 3E 7A        	ld a,$7a
 802+ 9D94 BE           	cp (hl)
 803+ 9D95 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D97
 805+ 9D97 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D9A 23           	inc hl
 807+ 9D9B 23           	inc hl
 808+ 9D9C 23           	inc hl
 809+ 9D9D 23           	inc hl
 810+ 9D9E 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DA1
 812+ 9DA1 21 33 8C     	ld hl,Ctrl_3
 813+ 9DA4 CB EE        	set 5,(hl)
 814+ 9DA6 C9           	ret
 815+ 9DA7
 816+ 9DA7 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DA8 C9           	ret
# file closed: Direcciones.asm
2099  9DA9              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DA9              ; ----- ----- ----- ----- -----
   2+ 9DA9              ;
   3+ 9DA9              ;   28/12/23
   4+ 9DA9
   5+ 9DA9              Movimiento
   6+ 9DA9
   7+ 9DA9              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DA9
   9+ 9DA9 3A CB 8B         ld a,(Ctrl_2)
  10+ 9DAC CB 57            bit 2,a
  11+ 9DAE 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DB0
  13+ 9DB0 2A F2 8B         ld hl,(Puntero_mov)
  14+ 9DB3 7E               ld a,(hl)
  15+ 9DB4
  16+ 9DB4              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DB4
  18+ 9DB4              Inicia_desplazamiento.
  19+ 9DB4
  20+ 9DB4              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DB4
  22+ 9DB4 CD A7 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DB7
  24+ 9DB7              ; Iniciamos (Repetimos_mov).
  25+ 9DB7
  26+ 9DB7 7E               ld a,(hl)
  27+ 9DB8 E6 0F            and $0f
  28+ 9DBA 32 F8 8B         ld (Repetimos_desplazamiento),a
  29+ 9DBD 32 F9 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DC0
  31+ 9DC0              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DC0
  33+ 9DC0 23               inc hl
  34+ 9DC1 7E               ld a,(hl)
  35+ 9DC2 32 FB 8B         ld (Cola_de_desplazamiento),a
  36+ 9DC5 2B               dec hl
  37+ 9DC6
  38+ 9DC6 21 CB 8B         ld hl,Ctrl_2
  39+ 9DC9 CB D6            set 2,(hl)
  40+ 9DCB
  41+ 9DCB              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DCB              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DCB
  44+ 9DCB              Desplazamiento_iniciado
  45+ 9DCB
  46+ 9DCB CD 7B 9E         call Aplica_desplazamiento
  47+ 9DCE
  48+ 9DCE              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DCE
  50+ 9DCE 3A 33 8C         ld a,(Ctrl_3)
  51+ 9DD1 CB 4F            bit 1,a
  52+ 9DD3 C0               ret nz
  53+ 9DD4
  54+ 9DD4 21 F8 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DD7 35               dec (hl)
  56+ 9DD8 C0               ret nz
  57+ 9DD9
  58+ 9DD9              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DD9              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DD9              ; Analiza (Cola_de_desplazamiento).
  61+ 9DD9
  62+ 9DD9 3A FB 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DDC A7               and a
  64+ 9DDD CC D0 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DE0 28 30            jr z,Reinicia_el_movimiento
  66+ 9DE2
  67+ 9DE2 FE FF            cp $ff
  68+ 9DE4 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DE6
  70+ 9DE6 FE FE            cp $fe
  71+ 9DE8 CC 55 9E         call z,Fijamos_bucle
  72+ 9DEB 28 25            jr z,Reinicia_el_movimiento
  73+ 9DED
  74+ 9DED FE FD            cp $fd
  75+ 9DEF 20 11            jr nz,1F
  76+ 9DF1
  77+ 9DF1              ; ---
  78+ 9DF1              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DF1
  80+ 9DF1 3A CB 8B         ld a,(Ctrl_2)
  81+ 9DF4 CB 5F            bit 3,a
  82+ 9DF6 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DF8
  84+ 9DF8              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DF8
  86+ 9DF8 21 CB 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DFB CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DFD
  89+ 9DFD CD 66 9E         call Inicia_Repetimos_movimiento
  90+ 9E00 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E02              ; ---
  92+ 9E02
  93+ 9E02 FE 01        1 cp 1
  94+ 9E04 CA 3F 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E07
  96+ 9E07 3D               dec a
  97+ 9E08 32 FB 8B         ld (Cola_de_desplazamiento),a
  98+ 9E0B
  99+ 9E0B 3A F9 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E0E 32 F8 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E11              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E11 C9               ret
 103+ 9E12
 104+ 9E12              Reinicia_el_movimiento
 105+ 9E12
 106+ 9E12 3A CB 8B         ld a,(Ctrl_2)
 107+ 9E15 CB 5F            bit 3,a
 108+ 9E17 28 1B            jr z,2F
 109+ 9E19
 110+ 9E19              ; (Cola_de_desplazamiento)="254".
 111+ 9E19
 112+ 9E19 21 FA 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E1C 35               dec (hl)
 114+ 9E1D 20 15            jr nz,2F
 115+ 9E1F
 116+ 9E1F              ; Fin de las repeticiones del último movimiento.
 117+ 9E1F
 118+ 9E1F 21 CB 8B         ld hl,Ctrl_2
 119+ 9E22 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E24
 121+ 9E24 2A F2 8B         ld hl,(Puntero_mov)
 122+ 9E27 23               inc hl
 123+ 9E28 23               inc hl
 124+ 9E29 23               inc hl
 125+ 9E2A 22 F2 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E2D              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E2D 7E               ld a,(hl)
 128+ 9E2E 32 FB 8B         ld (Cola_de_desplazamiento),a
 129+ 9E31
 130+ 9E31 C3 D9 9D         jp Cola
 131+ 9E34
 132+ 9E34 CD 71 9E     2 call Inicia_Puntero_mov
 133+ 9E37
 134+ 9E37 21 CB 8B         ld hl,Ctrl_2
 135+ 9E3A CB 96            res 2,(hl)
 136+ 9E3C
 137+ 9E3C C3 A9 9D         jp Movimiento
 138+ 9E3F
 139+ 9E3F              Siguiente_desplazamiento
 140+ 9E3F
 141+ 9E3F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E3F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E3F
 144+ 9E3F 21 CB 8B         ld hl,Ctrl_2
 145+ 9E42 CB 96            res 2,(hl)
 146+ 9E44
 147+ 9E44 2A F2 8B         ld hl,(Puntero_mov)
 148+ 9E47 23               inc hl
 149+ 9E48 23               inc hl
 150+ 9E49 22 F2 8B         ld (Puntero_mov),hl
 151+ 9E4C
 152+ 9E4C 7E               ld a,(hl)
 153+ 9E4D A7               and a
 154+ 9E4E CC D0 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E51 CA 12 9E         jp z,Reinicia_el_movimiento
 156+ 9E54
 157+ 9E54 C9               ret
 158+ 9E55
 159+ 9E55              ; Subrutinas -----------------------------------------
 160+ 9E55              ; ---------- --------- --------- ---------- ----------
 161+ 9E55              ;
 162+ 9E55              ;   24/07/23
 163+ 9E55              ;
 164+ 9E55              ;   Fijamos_bucle
 165+ 9E55              ;
 166+ 9E55              ;
 167+ 9E55
 168+ 9E55              Fijamos_bucle
 169+ 9E55
 170+ 9E55 3A F6 8B         ld a,(Incrementa_puntero)
 171+ 9E58 3C               inc a
 172+ 9E59 32 F7 8B         ld (Incrementa_puntero_backup),a
 173+ 9E5C
 174+ 9E5C CD D0 9E         call Incrementa_Puntero_indice_mov
 175+ 9E5F 2A F0 8B         ld hl,(Puntero_indice_mov)
 176+ 9E62 22 F4 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E65 C9               ret
 178+ 9E66
 179+ 9E66              ; ---------- --------- --------- ---------- ----------
 180+ 9E66              ;
 181+ 9E66              ;   07/7/23
 182+ 9E66              ;
 183+ 9E66              ;   Inicia_Repetimos_movimiento
 184+ 9E66              ;
 185+ 9E66              ;
 186+ 9E66
 187+ 9E66              Inicia_Repetimos_movimiento
 188+ 9E66
 189+ 9E66              ; Iniciamos (Repetimos_movimiento).
 190+ 9E66
 191+ 9E66 DD 2A F2 8B      ld ix,(Puntero_mov)
 192+ 9E6A DD 7E 02         ld a,(ix+2)
 193+ 9E6D 32 FA 8B         ld (Repetimos_movimiento),a
 194+ 9E70
 195+ 9E70 C9               ret
 196+ 9E71
 197+ 9E71              ; ---------- --------- --------- ---------- ----------
 198+ 9E71              ;
 199+ 9E71              ;   26/6/23
 200+ 9E71              ;
 201+ 9E71              ;   Inicia_Puntero_mov
 202+ 9E71              ;
 203+ 9E71              ;
 204+ 9E71
 205+ 9E71 2A F0 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E74 CD C5 90         call Extrae_address
 207+ 9E77 22 F2 8B         ld (Puntero_mov),hl
 208+ 9E7A C9               ret
 209+ 9E7B
 210+ 9E7B              ; ---------- --------- --------- ---------- ----------
 211+ 9E7B              ;
 212+ 9E7B              ;   27/06/23
 213+ 9E7B              ;
 214+ 9E7B              ;   Aplica_movimiento.
 215+ 9E7B
 216+ 9E7B              Aplica_desplazamiento
 217+ 9E7B
 218+ 9E7B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E7B
 220+ 9E7B 2A F2 8B         ld hl, (Puntero_mov)
 221+ 9E7E
 222+ 9E7E 7E               ld a,(hl)
 223+ 9E7F E6 F0            and $f0
 224+ 9E81 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E82
 226+ 9E82 CB 7E            bit 7,(hl)
 227+ 9E84 28 03            jr z,1F
 228+ 9E86 CD 5D 9A         call Mov_up
 229+ 9E89 2A F2 8B     1 ld hl, (Puntero_mov)
 230+ 9E8C CB 76            bit 6,(hl)
 231+ 9E8E 28 03            jr z,2F
 232+ 9E90 CD 24 9A         call Mov_down
 233+ 9E93
 234+ 9E93              ; Se ha aplicado reinicio ???
 235+ 9E93              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E93
 237+ 9E93              ;    ld a,(Ctrl_3)
 238+ 9E93              ;    bit 1,a
 239+ 9E93              ;    ret nz
 240+ 9E93
 241+ 9E93 2A F2 8B     2 ld hl, (Puntero_mov)
 242+ 9E96 CB 6E            bit 5,(hl)
 243+ 9E98 28 03            jr z,3F
 244+ 9E9A CD C3 9B         call Mov_left
 245+ 9E9D 2A F2 8B     3 ld hl, (Puntero_mov)
 246+ 9EA0 CB 66            bit 4,(hl)
 247+ 9EA2 C8               ret z
 248+ 9EA3 CD A0 9A         call Mov_right
 249+ 9EA6 C9               ret
 250+ 9EA7
 251+ 9EA7              ; ---------- --------- --------- ---------- ----------
 252+ 9EA7              ;
 253+ 9EA7              ;   26/06/23
 254+ 9EA7              ;
 255+ 9EA7              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EA7
 257+ 9EA7              Ajusta_velocidad_desplazamiento
 258+ 9EA7
 259+ 9EA7              ; 1er byte de la cadena de movimiento.
 260+ 9EA7              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EA7
 262+ 9EA7 CD C5 9E         call Extrae_nibble_alto
 263+ 9EAA
 264+ 9EAA 32 E6 8B         ld (Vel_up),a
 265+ 9EAD 79               ld a,c
 266+ 9EAE E6 0F            and $0f
 267+ 9EB0 32 E7 8B         ld (Vel_down),a
 268+ 9EB3
 269+ 9EB3              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EB3              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EB3
 272+ 9EB3 23               inc hl
 273+ 9EB4 CD C5 9E         call Extrae_nibble_alto
 274+ 9EB7
 275+ 9EB7 32 E4 8B         ld (Vel_left),a
 276+ 9EBA 79               ld a,c
 277+ 9EBB E6 0F            and $0f
 278+ 9EBD 32 E5 8B         ld (Vel_right),a
 279+ 9EC0
 280+ 9EC0              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EC0
 282+ 9EC0 23               inc hl
 283+ 9EC1 22 F2 8B         ld (Puntero_mov),hl
 284+ 9EC4 C9               ret
 285+ 9EC5
 286+ 9EC5 06 04        Extrae_nibble_alto ld b,4
 287+ 9EC7 7E               ld a,(hl)
 288+ 9EC8 4F               ld c,a
 289+ 9EC9 E6 F0            and $f0
 290+ 9ECB CB 3F        1 srl a
 291+ 9ECD 10 FC            djnz 1B
 292+ 9ECF C9               ret
 293+ 9ED0
 294+ 9ED0              ; ---------- --------- --------- ---------- ----------
 295+ 9ED0              ;
 296+ 9ED0              ;   5/7/23
 297+ 9ED0              ;
 298+ 9ED0              ;   Incrementa_Puntero_indice_mov
 299+ 9ED0
 300+ 9ED0              Incrementa_Puntero_indice_mov
 301+ 9ED0
 302+ 9ED0 21 F6 8B         ld hl,Incrementa_puntero
 303+ 9ED3 34               inc (hl)
 304+ 9ED4
 305+ 9ED4 2A F0 8B         ld hl,(Puntero_indice_mov)
 306+ 9ED7 01 02 00         ld bc,2
 307+ 9EDA A7               and a
 308+ 9EDB 09               add hl,bc
 309+ 9EDC 22 F0 8B         ld (Puntero_indice_mov),hl
 310+ 9EDF
 311+ 9EDF 7E               ld a,(hl)
 312+ 9EE0 A7               and a
 313+ 9EE1
 314+ 9EE1              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EE1
 316+ 9EE1              ;    jr z,$
 317+ 9EE1
 318+ 9EE1              ;! Reinicia el Patrón de movimiento.
 319+ 9EE1
 320+ 9EE1 CC E6 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EE4
 322+ 9EE4 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EE5
 324+ 9EE5 C9               ret
 325+ 9EE6
 326+ 9EE6              ; ---------- --------- --------- ---------- ----------
 327+ 9EE6              ;
 328+ 9EE6              ;   15/01/24
 329+ 9EE6              ;
 330+ 9EE6              ;   Inicializa_Puntero_indice_mov
 331+ 9EE6
 332+ 9EE6              Inicializa_Puntero_indice_mov_2
 333+ 9EE6
 334+ 9EE6              ; Existe etiqueta de bucle principal???
 335+ 9EE6
 336+ 9EE6 2A F4 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EE9 24               inc h
 338+ 9EEA 25               dec h
 339+ 9EEB 28 05            jr z,2F
 340+ 9EED
 341+ 9EED 22 F0 8B         ld (Puntero_indice_mov),hl
 342+ 9EF0 18 14            jr 3F
 343+ 9EF2
 344+ 9EF2              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EF2
 346+ 9EF2 3A F6 8B     2 ld a,(Incrementa_puntero)
 347+ 9EF5 47               ld b,a
 348+ 9EF6
 349+ 9EF6 2A F0 8B         ld hl,(Puntero_indice_mov)
 350+ 9EF9 2B           1 dec hl
 351+ 9EFA 2B               dec hl
 352+ 9EFB 10 FC            djnz 1B
 353+ 9EFD 22 F0 8B         ld (Puntero_indice_mov),hl
 354+ 9F00
 355+ 9F00 AF               xor a
 356+ 9F01 32 F6 8B         ld (Incrementa_puntero),a
 357+ 9F04 18 06            jr 4F
 358+ 9F06
 359+ 9F06 3A F7 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9F09 32 F6 8B         ld (Incrementa_puntero),a
 361+ 9F0C C9           4 ret
 362+ 9F0D
 363+ 9F0D              ; ----------------------------------------------------------------------
 364+ 9F0D              ;
 365+ 9F0D              ;   30/01/24
 366+ 9F0D              ;
 367+ 9F0D              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F0D
 369+ 9F0D 3A BF 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F10 CD 61 94         call Calcula_salto_en_BC
 371+ 9F13 21 E8 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F16 A7               and a
 373+ 9F17 ED 4A            adc hl,bc
 374+ 9F19 C9               ret
 375+ 9F1A
 376+ 9F1A              ; ----------------------------------------------------------------------
 377+ 9F1A              ;
 378+ 9F1A              ;   30/01/24
 379+ 9F1A              ;
 380+ 9F1A              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F1A              ;
 382+ 9F1A              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F1A
 384+ 9F1A 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F1B 23               inc hl
 386+ 9F1C 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F1D 69               ld l,c
 388+ 9F1E 60               ld h,b
 389+ 9F1F 22 C8 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F22 C9               ret
 391+ 9F23
# file closed: Movimiento.asm
2100  9F23              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F23              Motor_de_disparos_entidades
   2+ 9F23
   3+ 9F23 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9F26 FE 07            cp 7
   5+ 9F28 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9F29
   7+ 9F29 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9F2B 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9F2E
  10+ 9F2E CD C5 90     1 call Extrae_address
  11+ 9F31 1C               inc e
  12+ 9F32 1C               inc e
  13+ 9F33 ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F37
  15+ 9F37               ; Caja vacía ???
  16+ 9F37
  17+ 9F37 2C               inc l
  18+ 9F38
  19+ 9F38 7E               ld a,(hl)
  20+ 9F39 A7               and a
  21+ 9F3A 28 19            jr z,3F                                                              ; Caja vacía.
  22+ 9F3C
  23+ 9F3C              ; --- Trabajamos con caja:
  24+ 9F3C
  25+ 9F3C              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
  26+ 9F3C
  27+ 9F3C CD 6B 9F         call Rota_disparo_si_procede
  28+ 9F3F
  29+ 9F3F              ; ------------------------------------------------------------
  30+ 9F3F
  31+ 9F3F 2D               dec l
  32+ 9F40 2D               dec l
  33+ 9F41 2D               dec l
  34+ 9F42
  35+ 9F42 CD C5 90         call Extrae_address
  36+ 9F45              ;   (Puntero_de_impresion) del disparo en HL.
  37+ 9F45
  38+ 9F45              ;! Velocidad del disparo de entidades.
  39+ 9F45
  40+ 9F45 CD DE 99         call NextScan
  41+ 9F48
  42+ 9F48              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  43+ 9F48
  44+ 9F48 CD 59 9F         call Fin_de_disparo_de_entidad
  45+ 9F4B
  46+ 9F4B EB               ex de,hl
  47+ 9F4C
  48+ 9F4C 73               ld (hl),e
  49+ 9F4D 23               inc hl
  50+ 9F4E 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  51+ 9F4F
  52+ 9F4F 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  53+ 9F52 18 02            jr 2F
  54+ 9F54
  55+ 9F54 C9               ret
  56+ 9F55
  57+ 9F55 EB           3 ex de,hl
  58+ 9F56 10 D6        2 djnz 1B
  59+ 9F58
  60+ 9F58 C9               ret
  61+ 9F59
  62+ 9F59              ; ------------- ------------- ------------
  63+ 9F59              ;
  64+ 9F59              ;   25/9/24
  65+ 9F59
  66+ 9F59              Fin_de_disparo_de_entidad
  67+ 9F59
  68+ 9F59 7C               ld a,h
  69+ 9F5A FE 54            cp $54
  70+ 9F5C D8               ret c
  71+ 9F5D
  72+ 9F5D D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  73+ 9F5E
  74+ 9F5E 5D               ld e,l
  75+ 9F5F 54               ld d,h
  76+ 9F60
  77+ 9F60 21 E0 57         ld hl,$57e0
  78+ 9F63 ED 52            sbc hl,de
  79+ 9F65
  80+ 9F65 38 39            jr c,Elimina_disparo_entidad
  81+ 9F67
  82+ 9F67 6B               ld l,e
  83+ 9F68 62               ld h,d
  84+ 9F69
  85+ 9F69 D1               pop de
  86+ 9F6A
  87+ 9F6A C9               ret
  88+ 9F6B
  89+ 9F6B              ; ----------------------------------------------------------
  90+ 9F6B              ;
  91+ 9F6B              ;   08/10/24
  92+ 9F6B
  93+ 9F6B              Rota_disparo_si_procede
  94+ 9F6B
  95+ 9F6B              ;   Nos situamos en el byte alto de (Control).
  96+ 9F6B
  97+ 9F6B CB 76            bit 6,(hl)
  98+ 9F6D 20 03            jr nz,Decrementa_contador_de_control_de_disparo
  99+ 9F6F CB 7E            bit 7,(hl)
 100+ 9F71 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 101+ 9F72
 102+ 9F72              Decrementa_contador_de_control_de_disparo
 103+ 9F72
 104+ 9F72 35               dec (hl)
 105+ 9F73 7E               ld a,(hl)
 106+ 9F74 E6 07            and 7
 107+ 9F76 C0               ret nz
 108+ 9F77
 109+ 9F77              Rotamos_disparo_segun_proceda
 110+ 9F77
 111+ 9F77              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 112+ 9F77
 113+ 9F77 3E 07            ld a,7
 114+ 9F79 86               add (hl)
 115+ 9F7A 77               ld (hl),a                                                           ; Contador reinicializado.
 116+ 9F7B
 117+ 9F7B CD 94 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 118+ 9F7E
 119+ 9F7E CB 76            bit 6,(hl)
 120+ 9F80 20 05            jr nz,Rota_a_derecha
 121+ 9F82
 122+ 9F82
 123+ 9F82              Rota_a_izq
 124+ 9F82
 125+ 9F82 F3               di
 126+ 9F83 18 FE            jr $
 127+ 9F85 FB               ei
 128+ 9F86
 129+ 9F86 C9               ret
 130+ 9F87
 131+ 9F87              Rota_a_derecha
 132+ 9F87
 133+ 9F87 FD CB 00 3E      srl (iy+0)
 134+ 9F8B FD CB 01 3E      srl (iy+1)
 135+ 9F8F FD CB 02 3E      srl (iy+2)
 136+ 9F93
 137+ 9F93              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 138+ 9F93
 139+ 9F93 C9               ret
 140+ 9F94
 141+ 9F94              ; ------------ ----------- ------------
 142+ 9F94              ;
 143+ 9F94              ;   11/10/24
 144+ 9F94
 145+ 9F94              Puntero_objeto_en_IY
 146+ 9F94
 147+ 9F94 E5               push hl
 148+ 9F95
 149+ 9F95 2D               dec l
 150+ 9F96 2D               dec l
 151+ 9F97 2D               dec l
 152+ 9F98 2D               dec l
 153+ 9F99 2D               dec l
 154+ 9F9A 2D               dec l
 155+ 9F9B
 156+ 9F9B E5               push hl
 157+ 9F9C FD E1            pop iy
 158+ 9F9E
 159+ 9F9E E1               pop hl
 160+ 9F9F
 161+ 9F9F C9               ret
 162+ 9FA0
 163+ 9FA0              ; ------------ ----------- ------------
 164+ 9FA0              ;
 165+ 9FA0              ;   25/9/24
 166+ 9FA0
 167+ 9FA0              Elimina_disparo_entidad
 168+ 9FA0
 169+ 9FA0 21 23 8C         ld hl,Numero_de_disparos_de_entidades
 170+ 9FA3 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 171+ 9FA4
 172+ 9FA4 E1               pop hl
 173+ 9FA5 E5               push hl
 174+ 9FA6
 175+ 9FA6 2B               dec hl
 176+ 9FA7 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
 177+ 9FA8
 178+ 9FA8 16 06            ld d,6                                                              ; Contador
 179+ 9FAA AF               xor a                                                               ; Borrador
 180+ 9FAB
 181+ 9FAB 77           1 ld (hl),a
 182+ 9FAC 15               dec d
 183+ 9FAD 23               inc hl
 184+ 9FAE 20 FB            jr nz,1B
 185+ 9FB0
 186+ 9FB0 D1               pop de
 187+ 9FB1
 188+ 9FB1 21 00 00         ld hl,0
 189+ 9FB4
 190+ 9FB4 C9               ret
 191+ 9FB5              ; --------------------------------------------------------------------------------------
 192+ 9FB5              ;
 193+ 9FB5              ;   12/10/24
 194+ 9FB5              ;
 195+ 9FB5
 196+ 9FB5              Genera_datos_de_impresion_disparos_Entidades
 197+ 9FB5
 198+ 9FB5 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
 199+ 9FB8 47               ld b,a
 200+ 9FB9 3E 07            ld a,7
 201+ 9FBB 90               sub b
 202+ 9FBC C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 203+ 9FBD
 204+ 9FBD 08               ex af,af
 205+ 9FBE
 206+ 9FBE              ; ---------------
 207+ 9FBE
 208+ 9FBE              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 209+ 9FBE
 210+ 9FBE 21 23 89         ld hl,Indice_de_disparos_entidades
 211+ 9FC1
 212+ 9FC1 CD C5 90     1 call Extrae_address
 213+ 9FC4
 214+ 9FC4 13               inc de
 215+ 9FC5 13               inc de
 216+ 9FC6
 217+ 9FC6 ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 218+ 9FCA
 219+ 9FCA 2C               inc l
 220+ 9FCB
 221+ 9FCB 7E               ld a,(hl)
 222+ 9FCC A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 223+ 9FCD 28 39            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 224+ 9FCF
 225+ 9FCF              ; ----- ----- ----- -----
 226+ 9FCF
 227+ 9FCF 2D               dec l
 228+ 9FD0 2D               dec l
 229+ 9FD1 2D               dec l
 230+ 9FD2
 231+ 9FD2 CD C5 90         call Extrae_address
 232+ 9FD5 E5               push hl
 233+ 9FD6
 234+ 9FD6 1D               dec e
 235+ 9FD7
 236+ 9FD7 EB               ex de,hl
 237+ 9FD8
 238+ 9FD8 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 239+ 9FD9 2D               dec l
 240+ 9FDA 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 241+ 9FDB 2D               dec l
 242+ 9FDC 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 243+ 9FDD
 244+ 9FDD E1               pop hl                                                    ;? Puntero de impresión en HL.
 245+ 9FDE
 246+ 9FDE              Genera_scanlines_de_los_disparos_de_entidades.
 247+ 9FDE
 248+ 9FDE FD 2A 20 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 249+ 9FE2 FD 73 00         ld (iy+0),e
 250+ 9FE5 FD 70 01         ld (iy+1),b
 251+ 9FE8 FD 71 02         ld (iy+2),c
 252+ 9FEB
 253+ 9FEB FD 75 03         ld (iy+3),l
 254+ 9FEE FD 74 04         ld (iy+4),h
 255+ 9FF1
 256+ 9FF1 CD DE 99         call NextScan
 257+ 9FF4
 258+ 9FF4 FD 75 05         ld (iy+5),l
 259+ 9FF7 FD 74 06         ld (iy+6),h
 260+ 9FFA
 261+ 9FFA FD E5            push iy
 262+ 9FFC E1               pop hl
 263+ 9FFD
 264+ 9FFD 3E 07            ld a,7
 265+ 9FFF 85               add l
 266+ A000 6F               ld l,a
 267+ A001
 268+ A001 22 20 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 269+ A004
 270+ A004              ; ----- ----- ----- -----
 271+ A004
 272+ A004 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 273+ A005 3D               dec a
 274+ A006 C8               ret z
 275+ A007 08               ex af,af
 276+ A008
 277+ A008              Situa_en_siguiente_caja
 278+ A008
 279+ A008 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 280+ A00B 18 B4            jr 1B
 281+ A00D
 282+ A00D              ; --------------------------------------------------------------------------------------
 283+ A00D              ;
 284+ A00D              ;   12/10/24
 285+ A00D              ;
 286+ A00D
 287+ A00D              Genera_disparo_de_entidad_maldosa
 288+ A00D
 289+ A00D              ;   Estructura de un disparo de entidades.
 290+ A00D
 291+ A00D              ;   Disparo_1 defw 0								; Puntero objeto.
 292+ A00D              ; 	defw 0											; Puntero de impresión.
 293+ A00D              ;	defw 0											; Control.
 294+ A00D
 295+ A00D              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 296+ A00D              ;   _de la entidad en el momento de disparar.
 297+ A00D
 298+ A00D              ;   El byte alto muestra la siguiente información:
 299+ A00D              ;
 300+ A00D              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 301+ A00D              ;                        _antes de desplazarse a derecha/izquierda.
 302+ A00D              ;
 303+ A00D              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 304+ A00D              ;
 305+ A00D              ;                        10xx ..... Izquierda.
 306+ A00D              ;                        01xx ..... Derecha.
 307+ A00D              ;                        00xx ..... Recto.
 308+ A00D
 309+ A00D              ;*  Exclusiones.
 310+ A00D
 311+ A00D              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 312+ A00D              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 313+ A00D
 314+ A00D              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 315+ A00D
 316+ A00D 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
 317+ A010 A7               and a
 318+ A011 C8               ret z
 319+ A012
 320+ A012 3A C1 8B         ld a,(Coordenada_y)
 321+ A015 A7               and a
 322+ A016 C8               ret z
 323+ A017
 324+ A017 3D               dec a
 325+ A018 C8               ret z
 326+ A019
 327+ A019 FE 10            cp 16
 328+ A01B D0               ret nc
 329+ A01C
 330+ A01C              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 331+ A01C              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 332+ A01C              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 333+ A01C
 334+ A01C 21 35 8C         ld hl,Ctrl_5
 335+ A01F CB D6            set 2,(hl)
 336+ A021
 337+ A021 21 25 8C         ld hl,Permiso_de_disparo_Entidades
 338+ A024 35               dec (hl)                                            ; No más disparos en este FRAME.
 339+ A025
 340+ A025              ;   Decrementa el numero de disparos de entidades.
 341+ A025
 342+ A025 21 23 8C         ld hl,Numero_de_disparos_de_entidades
 343+ A028 35               dec (hl)
 344+ A029
 345+ A029 21 23 89         ld hl,Indice_de_disparos_entidades
 346+ A02C
 347+ A02C CD C5 90     1 call Extrae_address
 348+ A02F
 349+ A02F 13               inc de
 350+ A030 13               inc de
 351+ A031
 352+ A031 ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 353+ A035
 354+ A035              ;   Comprobamos si la caja está vacía.
 355+ A035
 356+ A035 2C               inc l
 357+ A036
 358+ A036 7E               ld a,(hl)
 359+ A037 A7               and a
 360+ A038 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 361+ A03A
 362+ A03A              ;   Caja vacía, vamos a generar un disparo.
 363+ A03A              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 364+ A03A
 365+ A03A CD 60 A0         call Genera_byte_inclinacion
 366+ A03D
 367+ A03D 7E               ld a,(hl)
 368+ A03E 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 369+ A03F
 370+ A03F 2D               dec l
 371+ A040
 372+ A040              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 373+ A040
 374+ A040 3A CA 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 375+ A043 77               ld (hl),a
 376+ A044
 377+ A044 2D               dec l
 378+ A045
 379+ A045 CD 7E A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 380+ A048
 381+ A048 70               ld (hl),b
 382+ A049 2D               dec l
 383+ A04A 71               ld (hl),c
 384+ A04B
 385+ A04B 2D               dec l
 386+ A04C
 387+ A04C              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 388+ A04C
 389+ A04C FD 7E 02         ld a,(iy+02)
 390+ A04F 77               ld (hl),a
 391+ A050 2D               dec l
 392+ A051
 393+ A051 FD 7E 01         ld a,(iy+01)
 394+ A054 77               ld (hl),a
 395+ A055 2D               dec l
 396+ A056
 397+ A056 FD 7E 00         ld a,(iy+00)
 398+ A059 77               ld (hl),a
 399+ A05A
 400+ A05A C9               ret
 401+ A05B
 402+ A05B              ;   --- --- ---
 403+ A05B
 404+ A05B              Situa_en_siguiente_disparo
 405+ A05B
 406+ A05B 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 407+ A05E 18 CC            jr 1B
 408+ A060
 409+ A060              ; --------------------------------------------------------------------------------------
 410+ A060              ;
 411+ A060              ;   09/10/24
 412+ A060              ;
 413+ A060
 414+ A060              Genera_byte_inclinacion
 415+ A060
 416+ A060 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 417+ A062
 418+ A062              ; Determina tendencia del disparo.
 419+ A062
 420+ A062 3A 75 89         ld a,(CX_Amadeus)
 421+ A065 47               ld b,a
 422+ A066 3A C0 8B         ld a,(Coordenada_X)
 423+ A069 90               sub b
 424+ A06A 38 07            jr c,Disparo_a_derecha
 425+ A06C
 426+ A06C FE 04        Disparo_a_izquierda cp 4
 427+ A06E
 428+ A06E D8               ret c
 429+ A06F C8               ret z
 430+ A070
 431+ A070 CB FE            set 7,(hl)
 432+ A072 C9               ret
 433+ A073
 434+ A073 47           Disparo_a_derecha ld b,a
 435+ A074 3E FF            ld a,$ff
 436+ A076 90               sub b
 437+ A077
 438+ A077 FE 04            cp 4
 439+ A079
 440+ A079 D8               ret c
 441+ A07A C8               ret z
 442+ A07B
 443+ A07B CB F6            set 6,(hl)
 444+ A07D C9               ret
 445+ A07E
 446+ A07E              ; --------------------------------------------------------------------------------------
 447+ A07E              ;
 448+ A07E              ;   09/10/24
 449+ A07E              ;
 450+ A07E
 451+ A07E              Modifica_puntero_de_impresion
 452+ A07E
 453+ A07E              ;   Puntero de impresión del disparo en BC.
 454+ A07E
 455+ A07E ED 4B 38 8C      ld bc,(Puntero_de_impresion_disparo_de_entidad)
 456+ A082
 457+ A082 08               ex af,af
 458+ A083 CB 77            bit 6,a
 459+ A085 28 06            jr z,1F
 460+ A087
 461+ A087 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 462+ A08B 0C               inc c
 463+ A08C C9               ret
 464+ A08D
 465+ A08D CB 7F        1 bit 7,a
 466+ A08F 28 F6            jr z,2B
 467+ A091
 468+ A091 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 469+ A095 0D               dec c
 470+ A096
 471+ A096 C9               ret
 472+ A097
 473+ A097              ; --------------------------------------------------------------------------------------
 474+ A097              ;
 475+ A097              ;   31/08/24
 476+ A097              ;
 477+ A097
 478+ A097              Compara_con_coordenadas_de_disparo
 479+ A097
 480+ A097 3A C1 8B         ld a,(Coordenada_y)
 481+ A09A 47               ld b,a
 482+ A09B 3A 3D 8C         ld a,(Coordenadas_disparo_certero)
 483+ A09E 90               sub b
 484+ A09F
 485+ A09F              ; A = "0" ok
 486+ A09F              ; A = "1" ok
 487+ A09F
 488+ A09F 28 08            jr z,Comprueba_coordenada_X
 489+ A0A1 3D               dec a
 490+ A0A2 28 05            jr z,Comprueba_coordenada_X
 491+ A0A4
 492+ A0A4              ; A = "$ff" ok
 493+ A0A4
 494+ A0A4 FE FE            cp $fe
 495+ A0A6 28 01            jr z,Comprueba_coordenada_X
 496+ A0A8
 497+ A0A8 C9               ret
 498+ A0A9
 499+ A0A9              Comprueba_coordenada_X
 500+ A0A9
 501+ A0A9 3A C0 8B         ld a,(Coordenada_X)
 502+ A0AC 47               ld b,a
 503+ A0AD 21 3E 8C         ld hl,Coordenadas_disparo_certero+1
 504+ A0B0 7E               ld a,(hl)
 505+ A0B1 90               sub b
 506+ A0B2
 507+ A0B2              ; A = "0" ok
 508+ A0B2              ; A = "1" ok
 509+ A0B2
 510+ A0B2 28 09            jr z,Activa_Impacto_en_entidad
 511+ A0B4 3D               dec a
 512+ A0B5 28 06            jr z,Activa_Impacto_en_entidad
 513+ A0B7
 514+ A0B7              ; A = "2" ok
 515+ A0B7
 516+ A0B7 3D               dec a
 517+ A0B8 28 03            jr z,Activa_Impacto_en_entidad
 518+ A0BA
 519+ A0BA              ; A = "$ff"
 520+ A0BA
 521+ A0BA FE FD            cp $fd
 522+ A0BC C0               ret nz
 523+ A0BD
 524+ A0BD              Activa_Impacto_en_entidad
 525+ A0BD
 526+ A0BD              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 527+ A0BD
 528+ A0BD 3E 02            ld a,2
 529+ A0BF 32 C3 8B         ld (Impacto),a
 530+ A0C2
 531+ A0C2              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 532+ A0C2
 533+ A0C2 11 C0 87         ld de,Indice_Explosion_entidades
 534+ A0C5 21 C6 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 535+ A0C8
 536+ A0C8 73               ld (hl),e
 537+ A0C9 23               inc hl
 538+ A0CA 72               ld (hl),d
 539+ A0CB
 540+ A0CB              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 541+ A0CB
 542+ A0CB 21 3A 8C         ld hl,Impacto2
 543+ A0CE CB 9E            res 3,(hl)
 544+ A0D0
 545+ A0D0 C9               ret
 546+ A0D1
 547+ A0D1              ; --------------------------------------------------------------------------------------
 548+ A0D1              ;
 549+ A0D1              ;   13/10/24
 550+ A0D1              ;
 551+ A0D1
 552+ A0D1              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 553+ A0D1
 554+ A0D1              Limpia_album_de_pintado_disparos_Amadeus
 555+ A0D1
 556+ A0D1 06 06            ld b,6
 557+ A0D3 AF               xor a
 558+ A0D4 77           1 ld (hl),a
 559+ A0D5 2C               inc l
 560+ A0D6 10 FC            djnz 1B
 561+ A0D8
 562+ A0D8 C9               ret
 563+ A0D9
 564+ A0D9              ; --------------------------------------------------------------------------------------
 565+ A0D9              ;
 566+ A0D9              ;   11/09/24
 567+ A0D9              ;
 568+ A0D9
 569+ A0D9              Limpia_album_de_borrado_disparos
 570+ A0D9
 571+ A0D9              ;    ld hl,Ctrl_5
 572+ A0D9              ;    bit 2,(hl)
 573+ A0D9              ;    ret z
 574+ A0D9
 575+ A0D9              ;    jr z,1F
 576+ A0D9
 577+ A0D9              ;    res 2,(hl)
 578+ A0D9
 579+ A0D9              ;    jr Limpiando
 580+ A0D9
 581+ A0D9              ;1 bit 0,(hl)
 582+ A0D9              ;    ret z
 583+ A0D9              ;    res 0,(hl)
 584+ A0D9
 585+ A0D9              Limpiando
 586+ A0D9
 587+ A0D9              ;    xor a
 588+ A0D9              ;    ld hl,(Album_de_pintado_disparos)
 589+ A0D9              ;    ld (hl),a
 590+ A0D9              ;    ld e,l
 591+ A0D9              ;    ld d,h
 592+ A0D9              ;    inc e                                           ; DE = HL+1
 593+ A0D9              ;    ld bc,$003a
 594+ A0D9              ;    ldir
 595+ A0D9
 596+ A0D9 C9               ret
 597+ A0DA
 598+ A0DA
 599+ A0DA              ; --------------------------------------------------------------------------------------
 600+ A0DA              ;
 601+ A0DA              ;   29/09/24
 602+ A0DA              ;
 603+ A0DA
 604+ A0DA              Calcula_bytes_pintado_disparos
 605+ A0DA
 606+ A0DA 2A 1C 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 607+ A0DD 45               ld b,l
 608+ A0DE 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 609+ A0E1 7D               ld a,l
 610+ A0E2
 611+ A0E2 90               sub b
 612+ A0E3 32 22 8C         ld (Num_de_bytes_album_de_disparos),a
 613+ A0E6
 614+ A0E6 C9               ret
 615+ A0E7
 616+ A0E7              ; --------------------------------------------------------------------------------------
 617+ A0E7              ;
 618+ A0E7              ;   29/09/24
 619+ A0E7              ;
 620+ A0E7              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 621+ A0E7              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 622+ A0E7              ;   _disparos que el álbum del FRAME actual).
 623+ A0E7
 624+ A0E7              Limpia_album_de_pintado_disparos_entidades
 625+ A0E7
 626+ A0E7 3A 22 8C         ld a,(Num_de_bytes_album_de_disparos)
 627+ A0EA A7               and a
 628+ A0EB 28 0E            jr z,Clean_only_one
 629+ A0ED
 630+ A0ED 47               ld b,a
 631+ A0EE 3E 31            ld a,$31
 632+ A0F0 90               sub b
 633+ A0F1 47               ld b,a
 634+ A0F2 AF           2 xor a
 635+ A0F3
 636+ A0F3 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 637+ A0F6 77           1 ld (hl),a
 638+ A0F7 23               inc hl
 639+ A0F8 10 FC            djnz 1B
 640+ A0FA C9               ret
 641+ A0FB
 642+ A0FB              Clean_only_one
 643+ A0FB
 644+ A0FB 06 07            ld b,7
 645+ A0FD 18 F3            jr 2B
 646+ A0FF
 647+ A0FF              ; --------------------------------------------------------------------------------------
 648+ A0FF              ;
 649+ A0FF              ;   29/09/24
 650+ A0FF              ;
 651+ A0FF
 652+ A0FF              Motor_Disparos_Amadeus
 653+ A0FF
 654+ A0FF 21 20 89         ld hl,Disparo_Amad+1
 655+ A102
 656+ A102 34               inc (hl)
 657+ A103 35               dec (hl)
 658+ A104
 659+ A104 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 660+ A105
 661+ A105              ;   Esta caja contiene un disparo.
 662+ A105
 663+ A105 CD 0C A1         call Consulta_Impacto
 664+ A108 CC 25 A1         call z,Mueve_disparo_Amadeus
 665+ A10B
 666+ A10B C9               ret
 667+ A10C
 668+ A10C              ; ----------------------
 669+ A10C              ;
 670+ A10C              ;
 671+ A10C              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 672+ A10C              ;
 673+ A10C              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 674+ A10C
 675+ A10C
 676+ A10C              Consulta_Impacto
 677+ A10C
 678+ A10C              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 679+ A10C              ;   _sea lo más coherente posible.
 680+ A10C
 681+ A10C E5               push hl
 682+ A10D 2B               dec hl
 683+ A10E CD 01 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 684+ A111 E1               pop hl
 685+ A112 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 686+ A113
 687+ A113 C8               ret z
 688+ A114
 689+ A114 3A 3A 8C         ld a,(Impacto2)
 690+ A117 CB DF            set 3,a
 691+ A119 32 3A 8C         ld (Impacto2),a
 692+ A11C
 693+ A11C E5               push hl
 694+ A11D CD EE A1         call Genera_coordenadas_de_disparo_Amadeus
 695+ A120 E1               pop hl
 696+ A121 CD 3E A1         call Elimina_disparo_Amadeus
 697+ A124
 698+ A124 C9               ret
 699+ A125
 700+ A125              ; ----------------------
 701+ A125              ;
 702+ A125              ;
 703+ A125              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 704+ A125
 705+ A125              Mueve_disparo_Amadeus
 706+ A125
 707+ A125 CD C5 90         call Extrae_address
 708+ A128
 709+ A128 CD ED 99         call PreviousScan
 710+ A12B CD ED 99         call PreviousScan
 711+ A12E CD ED 99         call PreviousScan
 712+ A131 CD ED 99         call PreviousScan
 713+ A134
 714+ A134              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 715+ A134
 716+ A134 7C               ld a,h
 717+ A135 D6 40            sub $40
 718+ A137 EB               ex de,hl
 719+ A138 38 04            jr c,Elimina_disparo_Amadeus
 720+ A13A
 721+ A13A               ; Introduce nuevo puntero_de_impresión en la caja.
 722+ A13A
 723+ A13A 73               ld (hl),e
 724+ A13B 23               inc hl
 725+ A13C 72               ld (hl),d
 726+ A13D
 727+ A13D C9               ret
 728+ A13E
 729+ A13E              ; ----------------------
 730+ A13E              ;
 731+ A13E              ;   29/9/24
 732+ A13E
 733+ A13E              Elimina_disparo_Amadeus
 734+ A13E
 735+ A13E              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 736+ A13E              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 737+ A13E
 738+ A13E              ;   Disparo_1A defw 0									; Puntero objeto.
 739+ A13E              ;   	defw 0											; Puntero de impresión.
 740+ A13E
 741+ A13E 2B               dec hl
 742+ A13F 2B               dec hl
 743+ A140
 744+ A140 AF               xor a
 745+ A141 77               ld (hl),a
 746+ A142 23               inc hl
 747+ A143 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 748+ A144
 749+ A144 23               inc hl
 750+ A145 77               ld (hl),a
 751+ A146 23               inc hl
 752+ A147 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 753+ A148
 754+ A148 3E 01            ld a,1
 755+ A14A 32 24 8C         ld (Permiso_de_disparo_Amadeus),a
 756+ A14D
 757+ A14D CD D1 A0         call Limpia_album_de_pintado_disparos_Amadeus
 758+ A150
 759+ A150 AF               xor a
 760+ A151 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 761+ A152
 762+ A152 C9               ret
 763+ A153
 764+ A153              ; --------------------------------------------------------------------------------------
 765+ A153              ;
 766+ A153              ;   13/10/24
 767+ A153              ;
 768+ A153
 769+ A153              Pinta_disparos_Amadeus
 770+ A153
 771+ A153 06 02            ld b,2
 772+ A155 ED 73 0C 8C      ld (Stack),sp
 773+ A159 ED 7B 1A 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 774+ A15D D1           3 pop de
 775+ A15E 14               inc d
 776+ A15F 15               dec d
 777+ A160 28 1C            jr z,1F
 778+ A162 E1               pop hl
 779+ A163
 780+ A163              Imprime_scanlines_en_pantalla
 781+ A163
 782+ A163              ; 1er scanline
 783+ A163
 784+ A163 1A               ld a,(de)
 785+ A164 AE               xor (hl)
 786+ A165 77               ld (hl),a
 787+ A166
 788+ A166 1C               inc e
 789+ A167 2C               inc l
 790+ A168
 791+ A168 1A               ld a,(de)
 792+ A169 AE               xor (hl)
 793+ A16A 77               ld (hl),a
 794+ A16B
 795+ A16B 1D               dec e
 796+ A16C E1               pop hl
 797+ A16D
 798+ A16D              ; 2º scanline
 799+ A16D
 800+ A16D 1A               ld a,(de)
 801+ A16E AE               xor (hl)
 802+ A16F 77               ld (hl),a
 803+ A170
 804+ A170 1C               inc e
 805+ A171 2C               inc l
 806+ A172
 807+ A172 1A               ld a,(de)
 808+ A173 AE               xor (hl)
 809+ A174 77               ld (hl),a
 810+ A175
 811+ A175 1D               dec e
 812+ A176
 813+ A176 18 06            jr 1F
 814+ A178
 815+ A178 ED 7B 18 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 816+ A17C 18 DF            jr 3B
 817+ A17E 10 F8        1 djnz 2B
 818+ A180 ED 7B 0C 8C      ld sp,(Stack)
 819+ A184 C9               ret
 820+ A185
 821+ A185              ; --------------------------------------------------------------------------------------
 822+ A185              ;
 823+ A185              ;   13/10/24
 824+ A185              ;
 825+ A185              ;   Modifica: HL,BC y DE.
 826+ A185
 827+ A185
 828+ A185              Genera_datos_de_impresion_disparos_Amadeus
 829+ A185
 830+ A185 ED 73 0C 8C      ld (Stack),sp
 831+ A189 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 832+ A18C D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 833+ A18D
 834+ A18D 14               inc d                                                     ;? Salimos si no hay disparo.
 835+ A18E 15               dec d
 836+ A18F
 837+ A18F 28 0E            jr z,Salida
 838+ A191
 839+ A191              Genera_scanlines_de_disparo_Amadeus
 840+ A191
 841+ A191 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 842+ A192              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 843+ A192 ED 7B 18 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 844+ A196
 845+ A196 C1               pop bc
 846+ A197 C1               pop bc
 847+ A198 C1               pop bc
 848+ A199
 849+ A199 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 850+ A19A CD ED 99         call PreviousScan
 851+ A19D E5               push hl                                                   ;? Sube 1er scanline al álbum.
 852+ A19E D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 853+ A19F
 854+ A19F              Salida
 855+ A19F
 856+ A19F ED 7B 0C 8C      ld sp,(Stack)
 857+ A1A3
 858+ A1A3 C9               ret
 859+ A1A4
 860+ A1A4              ; --------------------------------------------------------------------------------------
 861+ A1A4              ;
 862+ A1A4              ;   12/09/24
 863+ A1A4              ;
 864+ A1A4
 865+ A1A4              Genera_disparo_Amadeus
 866+ A1A4
 867+ A1A4              ;*  Exclusiones.
 868+ A1A4
 869+ A1A4 3A 24 8C         ld a,(Permiso_de_disparo_Amadeus)
 870+ A1A7 A7               and a
 871+ A1A8 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 872+ A1A9
 873+ A1A9 3D               dec a
 874+ A1AA 32 24 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 875+ A1AD
 876+ A1AD              Define_puntero_objeto_disparo
 877+ A1AD
 878+ A1AD              ;   Inicializamos contador.
 879+ A1AD
 880+ A1AD 06 00            ld b,0
 881+ A1AF
 882+ A1AF 2A 79 89         ld hl,(p.imp.amadeus)
 883+ A1B2 2C               inc l
 884+ A1B3
 885+ A1B3 3E 80            ld a,$80
 886+ A1B5 BE               cp (hl)
 887+ A1B6 28 0D            jr z,1F
 888+ A1B8
 889+ A1B8 04               inc b
 890+ A1B9
 891+ A1B9 3E 60            ld a,$60
 892+ A1BB BE               cp (hl)
 893+ A1BC 28 07            jr z,1F
 894+ A1BE
 895+ A1BE
 896+ A1BE 04               inc b
 897+ A1BF
 898+ A1BF 3E 18            ld a,$18
 899+ A1C1 BE               cp (hl)
 900+ A1C2 28 01            jr z,1F
 901+ A1C4
 902+ A1C4 04               inc b
 903+ A1C5
 904+ A1C5              ;   Calcula el Puntero_de_impresión del disparo.
 905+ A1C5
 906+ A1C5              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 907+ A1C5
 908+ A1C5 CD ED 99     1 call PreviousScan
 909+ A1C8
 910+ A1C8 78               ld a,b
 911+ A1C9 CB 3F            srl a
 912+ A1CB 28 03            jr z,4F
 913+ A1CD
 914+ A1CD              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 915+ A1CD E5               push hl
 916+ A1CE 18 02            jr 5F
 917+ A1D0 2D           4 dec l
 918+ A1D1 E5               push hl
 919+ A1D2              ; ---
 920+ A1D2
 921+ A1D2              ;   Calcula el Puntero_objeto del disparo.
 922+ A1D2
 923+ A1D2 21 76 83     5 ld hl,Indice_disparo_Amadeus
 924+ A1D5 04               inc b
 925+ A1D6 05               dec b
 926+ A1D7 28 04            jr z,2F
 927+ A1D9
 928+ A1D9              ;   Nos desplazamos por el índice de disparos.
 929+ A1D9
 930+ A1D9 2C           3 inc l
 931+ A1DA 2C               inc l
 932+ A1DB 10 FC            djnz 3B
 933+ A1DD
 934+ A1DD              ; --- Guarda el Puntero_objeto del disparo en la pila.
 935+ A1DD CD C5 90     2 call Extrae_address
 936+ A1E0 E5               push hl
 937+ A1E1              ; ---
 938+ A1E1
 939+ A1E1              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 940+ A1E1              ; HL en el 1er .db de la caja.
 941+ A1E1
 942+ A1E1 21 1F 89         ld hl,Disparo_Amad
 943+ A1E4
 944+ A1E4 06 02            ld b,2
 945+ A1E6
 946+ A1E6 D1           6 pop de
 947+ A1E7 73               ld (hl),e
 948+ A1E8 23               inc hl
 949+ A1E9 72               ld (hl),d
 950+ A1EA 23               inc hl
 951+ A1EB
 952+ A1EB 10 F9            djnz 6B
 953+ A1ED
 954+ A1ED C9               ret
 955+ A1EE
 956+ A1EE              Genera_coordenadas_de_disparo_Amadeus
 957+ A1EE
 958+ A1EE              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 959+ A1EE              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 960+ A1EE              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 961+ A1EE
 962+ A1EE CD C5 90         call Extrae_address
 963+ A1F1 CD E4 94         call Genera_coordenadas
 964+ A1F4
 965+ A1F4 3D               dec a
 966+ A1F5
 967+ A1F5 21 3D 8C         ld hl,Coordenadas_disparo_certero
 968+ A1F8 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 969+ A1F9 23               inc hl
 970+ A1FA 3A C0 8B         ld a,(Coordenada_X)
 971+ A1FD 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 972+ A1FE
 973+ A1FE AF               xor a
 974+ A1FF 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 975+ A200
 976+ A200 C9               ret
 977+ A201
 978+ A201              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 979+ A201              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 980+ A201              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 981+ A201
 982+ A201              ; ----------------------------------------------
 983+ A201              ;
 984+ A201              ;   27/08/24
 985+ A201              ;
 986+ A201              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 987+ A201              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 988+ A201
 989+ A201              Detecta_impacto_en_disparo_de_Amadeus
 990+ A201
 991+ A201              Extraccion_de_datos
 992+ A201
 993+ A201 13               inc de
 994+ A202 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
 995+ A203
 996+ A203 5E               ld e,(hl)
 997+ A204 23               inc hl
 998+ A205 56               ld d,(hl)
 999+ A206
1000+ A206 23               inc hl
1001+ A207
1002+ A207 4E               ld c,(hl)
1003+ A208 23               inc hl
1004+ A209 46               ld b,(hl)
1005+ A20A
1006+ A20A C5               push bc
1007+ A20B E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1008+ A20C
1009+ A20C              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1010+ A20C
1011+ A20C CD ED 99         call PreviousScan
1012+ A20F CD ED 99         call PreviousScan
1013+ A212
1014+ A212              Detecta_impacto_
1015+ A212
1016+ A212 1A               ld a,(de)
1017+ A213 A6               and (hl)
1018+ A214 C0               ret nz
1019+ A215
1020+ A215 13               inc de
1021+ A216 23               inc hl
1022+ A217
1023+ A217 1A               ld a,(de)
1024+ A218 A6               and (hl)
1025+ A219 C9               ret
1026+ A21A
1027+ A21A              ; -------------------------------------------------------------------------------------------------------------
1028+ A21A              ;
1029+ A21A              ;   8/8/24
1030+ A21A              ;
1031+ A21A              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1032+ A21A              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1033+ A21A              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1034+ A21A              ;
1035+ A21A              ;   MODIFICA: HL,DE,BC y A.
1036+ A21A              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1037+ A21A              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1038+ A21A
1039+ A21A              Colision_Entidad_Amadeus
1040+ A21A
1041+ A21A              ; Posible contacto de entidad con Amadeus. ?????
1042+ A21A
1043+ A21A              ; Exclusiones:
1044+ A21A
1045+ A21A 3A 5D 8C         ld a,(Shield)
1046+ A21D A7               and a
1047+ A21E C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1048+ A21F
1049+ A21F 21 33 8C         ld hl,Ctrl_3
1050+ A222 CB 76            bit 6,(hl)
1051+ A224 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1052+ A225
1053+ A225 21 3A 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1054+ A228 CB 56            bit 2,(hl)
1055+ A22A C0               ret nz
1056+ A22B
1057+ A22B 3A C1 8B     	ld a,(Coordenada_y)
1058+ A22E FE 14        	cp $14
1059+ A230 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1060+ A231
1061+ A231 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1062+ A234 A7               and a
1063+ A235 C0               ret nz
1064+ A236
1065+ A236              Genera_coordenadas_X
1066+ A236
1067+ A236              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1068+ A236              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1069+ A236
1070+ A236              ;   Limpiamos almacenes.
1071+ A236
1072+ A236              ;    call Limpia_Coordenadas_X
1073+ A236
1074+ A236              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1075+ A236
1076+ A236 21 3F 8C         ld hl,Coordenadas_X_Entidad
1077+ A239 3A C0 8B         ld a,(Coordenada_X)
1078+ A23C CD 5E A2         call Guarda_coordenadas_X
1079+ A23F
1080+ A23F              ;   Almacenamos las coordenadas X de Amadeus.
1081+ A23F
1082+ A23F 3A 75 89         ld a,(CX_Amadeus)
1083+ A242 CD 5E A2         call Guarda_coordenadas_X
1084+ A245 CD 72 A2         call Compara_coordenadas_X
1085+ A248 C0               ret nz
1086+ A249
1087+ A249 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1088+ A24B 32 C3 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1089+ A24E
1090+ A24E 2A FF 8B         ld hl,(Puntero_store_caja)
1091+ A251 2C               inc l
1092+ A252 2C               inc l
1093+ A253 2C               inc l
1094+ A254 2C               inc l
1095+ A255 22 3B 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1096+ A258
1097+ A258 21 3A 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1098+ A25B CB D6            set 2,(hl)
1099+ A25D
1100+ A25D C9               ret
1101+ A25E
1102+ A25E               ; ----- ----- ----- ----- -----
1103+ A25E
1104+ A25E 77           Guarda_coordenadas_X ld (hl),a
1105+ A25F 3C               inc a
1106+ A260 2C               inc l
1107+ A261 77               ld (hl),a
1108+ A262 3C               inc a
1109+ A263 2C               inc l
1110+ A264 77               ld (hl),a
1111+ A265 2C               inc l
1112+ A266 C9               ret
1113+ A267
1114+ A267 AF           Limpia_Coordenadas_X xor a
1115+ A268 06 06            ld b,6
1116+ A26A 21 42 8C         ld hl,Coordenadas_X_Amadeus
1117+ A26D 77           1 ld (hl),a
1118+ A26E 23               inc hl
1119+ A26F 10 FC            djnz 1B
1120+ A271 C9               ret
1121+ A272
1122+ A272              ; ----- ----- ----- ----- -----
1123+ A272
1124+ A272              Compara_coordenadas_X
1125+ A272
1126+ A272 DD 21 3F 8C      ld ix,Coordenadas_X_Entidad
1127+ A276 DD 7E 00         ld a,(ix+0)
1128+ A279 CD 87 A2         call Comparando
1129+ A27C C8               ret z
1130+ A27D
1131+ A27D 3C               inc a
1132+ A27E CD 96 A2         call Comparando_1
1133+ A281 C8               ret z
1134+ A282
1135+ A282 3C               inc a
1136+ A283 CD 96 A2         call Comparando_1
1137+ A286 C9               ret
1138+ A287
1139+ A287              ; ----- ----- ----- ----- -----
1140+ A287              ;
1141+ A287              ;   4/12/23
1142+ A287              ;
1143+ A287              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1144+ A287
1145+ A287              Comparando
1146+ A287
1147+ A287 DD 2C            inc ixl
1148+ A289 DD 2C            inc ixl
1149+ A28B DD 2C            inc ixl
1150+ A28D
1151+ A28D DD 46 00         ld b,(ix+0)
1152+ A290 DD 4E 01         ld c,(ix+1)
1153+ A293 DD 56 02         ld d,(ix+2)
1154+ A296
1155+ A296 B8           Comparando_1 cp b
1156+ A297 C8               ret z
1157+ A298 B9               cp c
1158+ A299 C8               ret z
1159+ A29A BA               cp d
1160+ A29B C9               ret
1161+ A29C
1162+ A29C              ; -----------------------------------------------------------------------
1163+ A29C              ;
1164+ A29C              ;   04/7/24
1165+ A29C              ;
1166+ A29C
1167+ A29C              Detecta_colision_nave_entidad
1168+ A29C
1169+ A29C              ; Exclusiones:
1170+ A29C
1171+ A29C              ; Salimos de la rutina si no hay advertencia de posible colisión.
1172+ A29C
1173+ A29C 21 3A 8C     	ld hl,Impacto2
1174+ A29F CB 56        	bit 2,(hl)
1175+ A2A1 C8           	ret z
1176+ A2A2
1177+ A2A2              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1178+ A2A2
1179+ A2A2 2A 7B 89         ld hl,(Pamm_Amadeus)
1180+ A2A5 CD C5 90         call Extrae_address
1181+ A2A8 54               ld d,h
1182+ A2A9 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1183+ A2AA
1184+ A2AA 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1185+ A2AD 06 10            ld b,16                                        ; Contador de scanlines en B.
1186+ A2AF FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1187+ A2B2
1188+ A2B2 C5           1 push bc
1189+ A2B3 06 03            ld b,3
1190+ A2B5 E5               push hl
1191+ A2B6
1192+ A2B6              ; .db
1193+ A2B6
1194+ A2B6 1A           3 ld a,(de)
1195+ A2B7 A7               and a
1196+ A2B8 20 03            jr nz,4F
1197+ A2BA
1198+ A2BA 2C               inc l
1199+ A2BB 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1200+ A2BD
1201+ A2BD ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1202+ A2BF 28 04            jr z,2F
1203+ A2C1
1204+ A2C1              ; Impacto.
1205+ A2C1 FD 2D            dec iyl
1206+ A2C3 28 22            jr z,5F
1207+ A2C5
1208+ A2C5 1C           2 inc e
1209+ A2C6 10 EE            djnz 3B
1210+ A2C8
1211+ A2C8 E1               pop hl
1212+ A2C9
1213+ A2C9              ; Hay salto de línea en el puntero de impresión ???
1214+ A2C9
1215+ A2C9 7C               ld a,h
1216+ A2CA D6 57            sub $57
1217+ A2CC 20 0A            jr nz,6F
1218+ A2CE
1219+ A2CE              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1220+ A2CE
1221+ A2CE 2A 79 89         ld hl,(p.imp.amadeus)
1222+ A2D1 3E 20            ld a,$20
1223+ A2D3 A7               and a
1224+ A2D4 85               add l
1225+ A2D5 6F               ld l,a
1226+ A2D6 18 01            jr 7F
1227+ A2D8
1228+ A2D8 24           6 inc h
1229+ A2D9
1230+ A2D9 C1           7 pop bc
1231+ A2DA 10 D6            djnz 1B
1232+ A2DC
1233+ A2DC              ;   Fin de la comparativa.
1234+ A2DC
1235+ A2DC              ;   NO HAY COLISIÓN !!!!!.
1236+ A2DC              ;
1237+ A2DC              ;   .db (Impacto) de Amadeus a "0".
1238+ A2DC              ;   RES el bit2 de (Impacto2).
1239+ A2DC              ;
1240+ A2DC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1241+ A2DC              ;   Lo colocamos a "0".
1242+ A2DC
1243+ A2DC 21 3A 8C         ld hl,Impacto2
1244+ A2DF CB 96            res 2,(hl)
1245+ A2E1 2A 3B 8C         ld hl,(Entidad_sospechosa_de_colision)
1246+ A2E4 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1247+ A2E6 C9               ret
1248+ A2E7
1249+ A2E7              ;   COLISIÓN !!!!!.
1250+ A2E7              ;
1251+ A2E7              ;   .db (Impacto) de Amadeus a "1".
1252+ A2E7              ;   SET el bit3 de (Impacto2).
1253+ A2E7              ;
1254+ A2E7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1255+ A2E7
1256+ A2E7 E1           5 pop hl
1257+ A2E8 C1               pop bc
1258+ A2E9
1259+ A2E9 21 78 89         ld hl,Impacto_Amadeus
1260+ A2EC 36 01            ld (hl),1
1261+ A2EE 21 3A 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1262+ A2F1 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1263+ A2F3
1264+ A2F3 11 C0 87         ld de,Indice_Explosion_entidades
1265+ A2F6 2A 3B 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1266+ A2F9
1267+ A2F9 23               inc hl
1268+ A2FA 23               inc hl
1269+ A2FB 23               inc hl
1270+ A2FC
1271+ A2FC 73               ld (hl),e
1272+ A2FD 23               inc hl
1273+ A2FE 72               ld (hl),d
1274+ A2FF
1275+ A2FF              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1276+ A2FF
1277+ A2FF 11 60 88         ld de,Indice_Explosion_Amadeus
1278+ A302 21 7B 89         ld hl,Pamm_Amadeus
1279+ A305
1280+ A305 73               ld (hl),e
1281+ A306 23               inc hl
1282+ A307 72               ld (hl),d
1283+ A308
1284+ A308 C9               ret
1285+ A309
1286+ A309
1287+ A309
# file closed: Disparo.asm
2101  A309
2102  A309              	SAVESNA "Pruebas.sna", START
2103  A309
2104  A309
2105  A309
2106  A309
# file closed: Banco_de_pruebas.asm
