# file opened: Banco_de_Pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos registros y SP.
  15  AA01
  16  AA01 ED 73 18 89  	ld (Stack_3),sp
  17  AA05
  18  AA05 08           	ex af,af'
  19  AA06 F5           	push af	;af'
  20  AA07 D9           	exx
  21  AA08 E5           	push hl	;hl'
  22  AA09 D5           	push de	;de'
  23  AA0A C5           	push bc	;bc'
  24  AA0B D9           	exx
  25  AA0C E5           	push hl	;hl
  26  AA0D D5           	push de	;de
  27  AA0E C5           	push bc	;bc
  28  AA0F 08           	ex af,af'
  29  AA10 F5           	push af	;af
  30  AA11 DD E5        	push ix
  31  AA13 FD E5        	push iy
  32  AA15
  33  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  34  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  35  AA15
  36  AA15 CD 87 8E     	call Guarda_parametros_DRAW
  37  AA18
  38  AA18              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  39  AA18              ; Pintamos Amadeus.
  40  AA18
  41  AA18 CD 66 8E     	call Pinta_entidades
  42  AA1B CD 58 8E     	call Pinta_Amadeus
  43  AA1E CD 0D 8E     	call Gestiona_entidades
  44  AA21 CD DF 8A     	call Gestiona_Amadeus
  45  AA24
  46  AA24              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  47  AA24
  48  AA24 CD 79 8E     	call Actualiza_relojes
  49  AA27
  50  AA27 CD 93 8E     	call Recupera_parametros_DRAW
  51  AA2A
  52  AA2A FD E1        	pop iy
  53  AA2C DD E1        	pop ix
  54  AA2E F1           	pop af
  55  AA2F C1           	pop bc
  56  AA30 D1           	pop de
  57  AA31 E1           	pop hl
  58  AA32 D9           	exx
  59  AA33 C1           	pop bc
  60  AA34 D1           	pop de
  61  AA35 E1           	pop hl
  62  AA36 08           	ex af,af'
  63  AA37 F1           	pop af
  64  AA38 08           	ex af,af'
  65  AA39 D9           	exx
  66  AA3A
  67  AA3A ED 7B 18 89  	ld sp,(Stack_3)
  68  AA3E
  69  AA3E
  70  AA3E              ;! debuggggg ..... 27/09/23
  71  AA3E
  72  AA3E 3A 50 89     	ld a,(Contador_de_frames_2)
  73  AA41 FE 01        	cp 1
  74  AA43 20 09        	jr nz,1F
  75  AA45 3A 4F 89     	ld a,(Contador_de_frames)
  76  AA48 FE 53        	cp $53
  77  AA4A 20 02        	jr nz,1F
  78  AA4C 18 FE        	jr $
  79  AA4E
  80  AA4E              ;! debuggggg
  81  AA4E
  82  AA4E FB           1 ei
  83  AA4F ED 4D        	reti
  84  AA51
  85  AA51              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  86  AA51
  87  AA51              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA51              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA51              ;
   3+ AA51              ;	17/02/23
   4+ AA51              ;
   5+ AA51              ;	Sprites e índices.
   6+ AA51
   7+ AA51              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1E 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 24 89        	defw End_Snapshot_1
 267+ 8500 28 89        	defw End_Snapshot_2
 268+ 8502 2C 89        	defw End_Snapshot_3
 269+ 8504 20 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 26 89        	defw End_Snapshot_disparos_1
 271+ 8508 2A 89        	defw End_Snapshot_disparos_2
 272+ 850A 2E 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  88  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 75 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 75 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  89  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5B 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 9E 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0C 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5D 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 9E 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5D 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 12 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0A 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 9E 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5D 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5D 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 9E 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 06 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 06 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0C 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0C 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0D 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0D 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  90  88C6
  91  88C6              ; ******************************************************************************************************************************************************************************************
  92  88C6              ; Constantes.
  93  88C6              ; ******************************************************************************************************************************************************************************************
  94  88C6              ;
  95  88C6              ; 4/9/23
  96  88C6              ;
  97  88C6              ; Constantes generales.
  98  88C6              ;
  99  88C6
 100  88C6              Sprite_vacio equ $f000
 101  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 102  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 103  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 104  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 105  88C6
 106  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 107  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 108  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 109  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 110  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 111  88C6              ;
 112  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 113  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 114  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 115  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 116  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 117  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 118  88C6
 119  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 120  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 121  88C6
 122  88C6
 123  88C6
 124  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 125  88C6
 126  88C6              ; ******************************************************************************************************************************************************************************************
 127  88C6              ; Variables.
 128  88C6              ; ******************************************************************************************************************************************************************************************
 129  88C6              ;
 130  88C6              ; 28/07/23
 131  88C6              ;
 132  88C6              ; Variables de DRAW. (Motor principal).
 133  88C6              ;
 134  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 135  88C6
 136  88C6 00           Filas db 0												; Filas. [DRAW]
 137  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 138  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 139  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 140  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 141  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 142  88CE
 143  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 144  88CE
 145  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 146  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 147  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 148  88CF 00           Attr db 0												; Atributos de la entidad:
 149  88D0
 150  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 151  88D0              ;
 152  88D0              ;	COLORES: 0 ..... NEGRO
 153  88D0              ;    		 1 ..... AZUL
 154  88D0              ; 			 2 ..... ROJO
 155  88D0              ;			 3 ..... MAGENTA
 156  88D0              ; 			 4 ..... VERDE
 157  88D0              ; 			 5 ..... CIAN
 158  88D0              ;			 6 ..... AMARILLO
 159  88D0              ; 			 7 ..... BLANCO
 160  88D0
 161  88D0 00 00        Indice_Sprite_der defw 0
 162  88D2 00 00        Indice_Sprite_izq defw 0
 163  88D4 00 00        Puntero_DESPLZ_der defw 0
 164  88D6 00 00        Puntero_DESPLZ_izq defw 0
 165  88D8
 166  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 167  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 168  88DB
 169  88DB              ; Variables de objeto. (Características).
 170  88DB
 171  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 172  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 173  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 174  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 175  88DF
 176  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 177  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 178  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 179  88E0 00 00 00...  Variables_de_borrado ds 6
 180  88E6
 181  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 182  88E8 00 00        	defw 0
 183  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 184  88EC 00 00 00 00  	db 0,0,0,0
 185  88F0
 186  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  88F0
 188  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 189  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 190  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 191  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 192  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 193  88F1              ;
 194  88F1              ; 														DESCRIPCIÖN:
 195  88F1              ;
 196  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 197  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 198  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 199  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 200  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 201  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 202  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 203  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 204  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 205  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 206  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 207  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 208  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 209  88F1              ;
 210  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 211  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 212  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 213  88F1
 214  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 215  88F1
 216  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 217  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 218  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 219  88F7              ;
 220  88F7              ;
 221  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 222  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 223  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 224  88F8 00           Incrementa_puntero_backup db 0
 225  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 226  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 227  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 228  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 229  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 230  88FD              ;
 231  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 232  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 233  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 234  88FD              ;
 235  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 236  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 237  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 238  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 239  88FD              ;
 240  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 241  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 242  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 243  88FD
 244  88FD
 245  88FD              ; Variables de funcionamiento. [DRAW].
 246  88FD
 247  88FD 00           Columnas db 0
 248  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 249  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 250  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 251  8901
 252  8901              ; variables de control general.
 253  8901
 254  8901 00           Ctrl_2 db 0
 255  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 256  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 257  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 258  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 259  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 260  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 261  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 262  8902              ;
 263  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 264  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 265  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 266  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 267  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 268  8902
 269  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 270  8903
 271  8903              ;! 61 Bytes por entidad.
 272  8903
 273  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 274  8903              ;					         		---------;      ;---------
 275  8903
 276  8903
 277  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 278  8903
 279  8903 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 280  8904
 281  8904              ;														DESCRIPCIÓN:
 282  8904              ;
 283  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 284  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 285  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 286  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 287  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 288  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 289  8904
 290  8904              ;														BIT 3, Recarga de nueva oleada.
 291  8904              ;														BIT 4, Recarga de nueva oleada.
 292  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 293  8904              ;														BIT 6, **** Frame completo.
 294  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 295  8904
 296  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 297  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 298  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 299  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 300  8906
 301  8906
 302  8906
 303  8906              ; Gestión de ENTIDADES y CAJAS.
 304  8906
 305  8906 00 00        Puntero_store_caja defw 0
 306  8908 00 00        Puntero_restore_caja defw 0
 307  890A 00 00        Indice_restore_caja defw 0
 308  890C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 309  890D 00           Numero_parcial_de_entidades db 0
 310  890E 00           Entidades_en_curso db 0									; ..... ..... .....
 311  890F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 312  8910              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 313  8910              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 314  8910              ;														; _ (Numero_de_malotes)="0".
 315  8910 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 316  8912 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 317  8914              ;														; _ puntero (Indice_entidades).
 318  8914
 319  8914
 320  8914              ;---------------------------------------------------------------------------------------------------------------
 321  8914              ;
 322  8914              ;	2/9/23
 323  8914              ;
 324  8914              ;	Álbumes.
 325  8914
 326  8914 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 327  8916              ;														; _variable para almacenar lo posición del puntero_
 328  8916              ; 														; _de pila, SP.
 329  8916 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 330  8918              ;														; La utiliza la rutina [Extrae_foto_registros].
 331  8918 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 332  891A 00 00        Stack_snapshot defw 0
 333  891C 00 00        Stack_snapshot_disparos defw 0
 334  891E
 335  891E 00 00        End_Snapshot defw 0
 336  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 337  8920 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 338  8922              ;														; _el snapshot de los registros del siguiente disparo.
 339  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 340  8922 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 341  8924 00 00        End_Snapshot_1 defw 0
 342  8926 00 00        End_Snapshot_disparos_1 defw 0
 343  8928 00 00        End_Snapshot_2 defw 0
 344  892A 00 00        End_Snapshot_disparos_2 defw 0
 345  892C 00 00        End_Snapshot_3 defw 0
 346  892E 00 00        End_Snapshot_disparos_3 defw 0
 347  8930
 348  8930 00 00        Puntero_indice_album_de_fotos defw 0
 349  8932 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 350  8934
 351  8934 00 00        Puntero_indice_End_Snapshot defw 0
 352  8936 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 353  8938 00 00        Puntero_de_End_Snapshot defw 0
 354  893A 00 00        Puntero_de_End_Snapshot_disparos defw 0
 355  893C
 356  893C              ;---------------------------------------------------------------------------------------------------------------
 357  893C
 358  893C              ; Gestión de Disparos.
 359  893C
 360  893C 00           Numero_de_disparotes db 0
 361  893D 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 362  893F 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 363  8941 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 364  8942              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 365  8942              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 366  8942 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 367  8944              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 368  8944              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 369  8944              ;														; _produzca colisión.
 370  8944 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 371  8946              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 372  8946 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 373  8949              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 374  8949 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 375  894C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 376  894C 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 377  894E 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 378  894F
 379  894F              ;---------------------------------------------------------------------------------------------------------------
 380  894F
 381  894F              ; Relojes y temporizaciones.
 382  894F
 383  894F 00           Contador_de_frames db 0
 384  8950 00           Contador_de_frames_2 db 0
 385  8951
 386  8951 04           Clock_explosion db 4
 387  8952 1E           Clock_Entidades_en_curso db 30
 388  8953 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 389  8954              ;														; Repite la oleada de entidades.
 390  8954 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 391  8955 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 392  8956 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 393  8957
 394  8957 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 395  8958 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 396  8959 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 397  895A
 398  895A              ;---------------------------------------------------------------------------------------------------------------
 399  895A
 400  895A              ; Gestión de NIVELES.
 401  895A
 402  895A 00           Nivel db 0												; Nivel actual del juego.
 403  895B 00 00        Puntero_indice_NIVELES defw 0
 404  895D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 405  895F              ; 														; _ que definen el NIVEL.
 406  895F              ; Y todo comienza aquí .....
 407  895F              ;
 408  895F              ; Rutina principal *************************************************************************************************************************************************************************
 409  895F              ;
 410  895F              ;	14/11/22
 411  895F
 412  895F              START
 413  895F
 414  895F 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 415  8962 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 416  8964 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 417  8966 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 418  8968 F3           	DI
 419  8969
 420  8969 3E 07        	ld a,%00000111
 421  896B CD A2 99     	call Cls
 422  896E
 423  896E CD 77 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 424  8971
 425  8971              ; INICIALIZACIÓN.
 426  8971
 427  8971 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 428  8974
 429  8974 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 430  8977
 431  8977 CD 9F 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 432  897A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 433  897A CD B5 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 434  897D              ;													     ; _ malotes antes de guardar ninguna foto.
 435  897D              ; ----------
 436  897D
 437  897D CD 27 8D     	call Restore_entidad
 438  8980
 439  8980 21 0D 89     	ld hl,Numero_parcial_de_entidades
 440  8983 46           	ld b,(hl)
 441  8984 04           	inc b
 442  8985 05           	dec b
 443  8986 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 444  8988
 445  8988              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 446  8988              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 447  8988              ;	Pintamos el resto de entidades:
 448  8988
 449  8988              ;	INICIA ENTIDADES !!!!!
 450  8988
 451  8988 C5           1 push bc  												; Guardo el contador de entidades.
 452  8989 CD 6C 8B     	call Inicia_entidad
 453  898C C1           	pop bc
 454  898D 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 455  898F
 456  898F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 457  898F              ; (Esto se dá cuando se inicia una nueva oleada).
 458  898F
 459  898F 3A 03 89     	ld a,(Ctrl_1)
 460  8992 CB 5F        	bit 3,a
 461  8994 20 15        	jr nz,5F											; Loop
 462  8996
 463  8996              ; 	INICIA AMADEUS !!!!!
 464  8996
 465  8996 CD 4E 8D     3 call Restore_Amadeus
 466  8999 CD A4 8C     	call Inicia_Puntero_objeto
 467  899C CD 95 93     	call Draw
 468  899F CD A0 7F     	call Guarda_foto_registros
 469  89A2 CD DA 8D     	call Guarda_datos_de_borrado_Amadeus
 470  89A5
 471  89A5 11 9E 85     	ld de,Amadeus_db
 472  89A8 CD 60 8D     	call Store_Amadeus
 473  89AB
 474  89AB              ; 	INICIA DISPAROS !!!!!
 475  89AB
 476  89AB              ;	call Inicia_Puntero_Disparo_Entidades
 477  89AB              ;	call Inicia_Puntero_Disparo_Amadeus
 478  89AB
 479  89AB              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 480  89AB
 481  89AB CD 9F 8B     5 call Inicia_punteros_de_cajas
 482  89AE CD 27 8D     	call Restore_entidad
 483  89B1
 484  89B1 3A 03 89     	ld a,(Ctrl_1)
 485  89B4 CB 5F        	bit 3,a
 486  89B6 28 07        	jr z,6F
 487  89B8
 488  89B8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 489  89B8
 490  89B8 21 03 89     	ld hl,Ctrl_1
 491  89BB CB 9E        	res 3,(hl)
 492  89BD 18 04        	jr Main
 493  89BF
 494  89BF
 495  89BF              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 496  89BF              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 497  89BF              ; _ para situarnos en el siguiente album.
 498  89BF
 499  89BF CD E6 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 500  89C2 F3           	di
 501  89C3
 502  89C3              ; ------------------------------------
 503  89C3
 504  89C3              Main
 505  89C3              ;
 506  89C3              ;	3/8/23
 507  89C3
 508  89C3 3E 01            ld a,1
 509  89C5 D3 FE        	out ($fe),a											; Azul.
 510  89C7
 511  89C7 FB           	ei
 512  89C8
 513  89C8 3A 52 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 514  89CB 47           	ld b,a
 515  89CC 3A 4F 89     	ld a,(Contador_de_frames)
 516  89CF B8           	cp b
 517  89D0 20 18        	jr nz,13F
 518  89D2
 519  89D2 3A 0D 89     	ld a,(Numero_parcial_de_entidades)
 520  89D5 47           	ld b,a
 521  89D6 3A 0E 89     	ld a,(Entidades_en_curso)
 522  89D9 B8           	cp b
 523  89DA 28 0E        	jr z,13F
 524  89DC 30 0C        	jr nc,13F
 525  89DE
 526  89DE 3C           	inc a
 527  89DF 32 0E 89     	ld (Entidades_en_curso),a
 528  89E2
 529  89E2 3A 52 89     	ld a,(Clock_Entidades_en_curso)
 530  89E5
 531  89E5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 532  89E5              ;! _ IMPREDECIBLE !!!!
 533  89E5
 534  89E5 C6 64        	add 100
 535  89E7 32 52 89     	ld (Clock_Entidades_en_curso),a
 536  89EA
 537  89EA              ; Habilita disparos.
 538  89EA
 539  89EA 21 54 89     13 ld hl,Disparo_Amadeus
 540  89ED 11 56 89     	ld de,CLOCK_repone_disparo_Amadeus
 541  89F0 CD 66 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 542  89F3
 543  89F3 21 57 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 544  89F6 11 59 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 545  89F9 CD 66 9D     	call Habilita_disparos
 546  89FC
 547  89FC              ; COLISIONES.
 548  89FC
 549  89FC CD 77 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 550  89FF
 551  89FF              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 552  89FF              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 553  89FF              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 554  89FF
 555  89FF AF           	xor a
 556  8A00 32 41 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 557  8A03
 558  8A03 CD 9F 8B     	call Inicia_punteros_de_cajas
 559  8A06 CD 27 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 560  8A09              ; 														; _ en DRAW.
 561  8A09 3A C6 88     	ld a,(Filas)
 562  8A0C A7           	and a
 563  8A0D 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 564  8A0F CD 39 8D     	call Incrementa_punteros_de_cajas
 565  8A12 18 F2        	jr 12B
 566  8A14
 567  8A14              ; ---------------------------------------------------------------------------------------
 568  8A14
 569  8A14 3A 0D 89     10 ld a,(Numero_parcial_de_entidades)
 570  8A17 47               ld b,a
 571  8A18 A7           	and a
 572  8A19 20 14        	jr nz,11F
 573  8A1B
 574  8A1B 21 03 89     	ld hl,Ctrl_1
 575  8A1E CB 66        	bit 4,(hl)
 576  8A20 C2 B0 8A     	jp nz,16F
 577  8A23
 578  8A23 21 03 89     	ld hl,Ctrl_1
 579  8A26 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 580  8A28
 581  8A28 3A 4F 89     	ld a,(Contador_de_frames)
 582  8A2B 3C           	inc a
 583  8A2C 32 53 89     	ld (Activa_recarga_cajas),a
 584  8A2F
 585  8A2F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 586  8A2F
 587  8A2F 3A 0E 89     11 ld a,(Entidades_en_curso)
 588  8A32 A7           	and a
 589  8A33 CA B0 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 590  8A36 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 591  8A37
 592  8A37              ; Código que ejecutamos con cada entidad:
 593  8A37              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 594  8A37
 595  8A37 C5           15 push bc 												; Nº de entidades en curso.
 596  8A38
 597  8A38              ; Impacto ???
 598  8A38
 599  8A38 3A DF 88     	ld a,(Impacto)
 600  8A3B A7           	and a
 601  8A3C 28 32        	jr z,8F
 602  8A3E
 603  8A3E              ; Hay Impacto en esta entidad.
 604  8A3E
 605  8A3E 21 51 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 606  8A41 35           	dec (hl)
 607  8A42 20 66        	jr nz,17F
 608  8A44
 609  8A44              ;! Velocidad de la animación de la explosión.
 610  8A44
 611  8A44 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 612  8A46              ;														; _,(velocidad de la explosión).
 613  8A46
 614  8A46              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 615  8A46 18 FE        	jr $
 616  8A48
 617  8A48 CD FA 8D     	call Repone_datos_de_borrado
 618  8A4B CD 40 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 619  8A4E
 620  8A4E
 621  8A4E              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 622  8A4E
 623  8A4E 3A 01 89     	ld a,(Ctrl_2)
 624  8A51 CB 4F        	bit 1,a
 625  8A53 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 626  8A55
 627  8A55              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 628  8A55
 629  8A55 3A CE 88     	ld a,(CTRL_DESPLZ)
 630  8A58 A7           	and a
 631  8A59 20 08        	jr nz,18F
 632  8A5B
 633  8A5B 21 84 84     	ld hl,Indice_Explosion_2x2-2
 634  8A5E 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 635  8A61 18 06        	jr 19F
 636  8A63
 637  8A63 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 638  8A66 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 639  8A69
 640  8A69 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 641  8A6C CB CE        	set 1,(hl)
 642  8A6E 18 22        	jr 7F
 643  8A70
 644  8A70              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 645  8A70              ; _con las coordenadas de la entidad almacenada en DRAW.
 646  8A70
 647  8A70 3A 03 89     8 ld a,(Ctrl_1)
 648  8A73 CB 57        	bit 2,a
 649  8A75 28 1B        	jr z,7F
 650  8A77
 651  8A77 2A 44 89     	ld hl,(Coordenadas_disparo_certero)
 652  8A7A EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 653  8A7B              ;														; E contiene la coordenada_X del disparo.
 654  8A7B 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 655  8A7E              ;														; H FILA, (Coordenada_y de la entidad).
 656  8A7E A7           	and a
 657  8A7F ED 52        	sbc hl,de
 658  8A81
 659  8A81 CD AE 92     	call Determina_resultado_comparativa
 660  8A84
 661  8A84 78           	ld a,b
 662  8A85 A7           	and a
 663  8A86 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 664  8A88
 665  8A88              ; ----- ----- -----
 666  8A88
 667  8A88 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 668  8A8A 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 669  8A8D
 670  8A8D 21 03 89     	ld hl,Ctrl_1
 671  8A90 CB 96        	res 2,(hl)
 672  8A92
 673  8A92 CD 08 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 674  8A95
 675  8A95 3A F0 88     	ld a,(Ctrl_0)
 676  8A98 CB 67        	bit 4,a
 677  8A9A 28 0E        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 678  8A9C
 679  8A9C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 680  8A9C              ; [[[
 681  8A9C CD C2 8D     	call Detecta_disparo_entidad
 682  8A9F              ; ]]]
 683  8A9F
 684  8A9F CD 80 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 685  8AA2 CD C8 8D     	call Guarda_datos_de_borrado
 686  8AA5
 687  8AA5 21 F0 88     	ld hl,Ctrl_0
 688  8AA8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 689  8AAA
 690  8AAA CD EC 8C     17 call Store_Restore_cajas
 691  8AAD
 692  8AAD C1           	pop bc
 693  8AAE 10 87        	djnz 15B
 694  8AB0
 695  8AB0              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 696  8AB0              ; Hemos gestionado todas las unidades.
 697  8AB0              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 698  8AB0
 699  8AB0              ;	ld hl,Ctrl_1
 700  8AB0              ;	res 2,(hl)
 701  8AB0
 702  8AB0 CD E6 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 703  8AB3              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 704  8AB3              ;														; _ interrupción.
 705  8AB3              ; ----------------------------------------
 706  8AB3
 707  8AB3 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 708  8AB6 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 709  8AB8 CA C3 89     	jp z,Main
 710  8ABB
 711  8ABB 3A 4F 89     	ld a,(Contador_de_frames)
 712  8ABE 47           	ld b,a
 713  8ABF 3A 53 89     	ld a,(Activa_recarga_cajas)
 714  8AC2 B8           	cp b
 715  8AC3 28 08        	jr z,20F
 716  8AC5
 717  8AC5 21 03 89     	ld hl,Ctrl_1
 718  8AC8 CB E6        	set 4,(hl)
 719  8ACA C3 C3 89     	jp Main
 720  8ACD
 721  8ACD 21 03 89     20 ld hl,Ctrl_1
 722  8AD0 CB A6        	res 4,(hl)
 723  8AD2
 724  8AD2 F3           	di
 725  8AD3
 726  8AD3 3A 4F 89     	ld a,(Contador_de_frames)
 727  8AD6
 728  8AD6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 729  8AD6              ;! _ IMPREDECIBLE !!!!
 730  8AD6
 731  8AD6 C6 0A        	add 10
 732  8AD8 32 52 89     	ld (Clock_Entidades_en_curso),a
 733  8ADB
 734  8ADB C3 74 89     	jp 4B
 735  8ADE
 736  8ADE C9           	ret
 737  8ADF
 738  8ADF              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 739  8ADF
 740  8ADF              Gestiona_Amadeus
 741  8ADF
 742  8ADF 3E 04            ld a,4
 743  8AE1 D3 FE        	out ($fe),a											; Azul.
 744  8AE3
 745  8AE3 CD 4E 8D     	call Restore_Amadeus
 746  8AE6
 747  8AE6              ;! Activa/desactiva impacto con Amadeus.
 748  8AE6
 749  8AE6 3A DF 88     	ld a,(Impacto)
 750  8AE9 A7           	and a
 751  8AEA 20 FE        	jr nz,$
 752  8AEC
 753  8AEC CD 59 8B     	call Mov_Amadeus
 754  8AEF
 755  8AEF 3A F0 88     	ld a,(Ctrl_0)
 756  8AF2 CB 67        	bit 4,a
 757  8AF4 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 758  8AF6
 759  8AF6 CD 80 8B     	call Guarda_foto_entidad_a_pintar
 760  8AF9 CD DA 8D     	call Guarda_datos_de_borrado_Amadeus
 761  8AFC
 762  8AFC 21 F0 88     14 ld hl,Ctrl_0
 763  8AFF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 764  8B01
 765  8B01 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 766  8B04 CD 60 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 767  8B07
 768  8B07              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 769  8B07
 770  8B07              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 771  8B07
 772  8B07              ;	call Calcula_numero_de_disparotes
 773  8B07
 774  8B07 C9           	ret
 775  8B08
 776  8B08              ; --------------------------------------------------------------------------------------------------------------
 777  8B08              ;
 778  8B08              ;	27/05/23
 779  8B08
 780  8B08              Mov_obj
 781  8B08
 782  8B08 3A 01 89     	ld a,(Ctrl_2)
 783  8B0B CB 4F        	bit 1,a
 784  8B0D 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 785  8B0F
 786  8B0F              ; Explosión:
 787  8B0F
 788  8B0F 3A 02 89     	ld a,(Frames_explosion)
 789  8B12 A7           	and a
 790  8B13 20 11        	jr nz,4F
 791  8B15
 792  8B15              ; Una alimaña menos!!!!!!!!!1
 793  8B15
 794  8B15 CD 69 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 795  8B18 21 0D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 796  8B1B 35           	dec (hl)
 797  8B1C 21 0E 89     	ld hl,Entidades_en_curso
 798  8B1F 35           	dec (hl)
 799  8B20 21 0C 89     	ld hl,Numero_de_entidades
 800  8B23 35           	dec (hl)
 801  8B24 18 32        	jr 3F
 802  8B26
 803  8B26              ; -----
 804  8B26
 805  8B26              ;	`Movemos´ la explosión.
 806  8B26
 807  8B26 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 808  8B29 23           	inc hl
 809  8B2A 23           	inc hl
 810  8B2B 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 811  8B2E CD 9E 8C     	call Extrae_address
 812  8B31 22 CA 88     	ld (Puntero_objeto),hl
 813  8B34
 814  8B34 21 02 89     	ld hl,Frames_explosion
 815  8B37 35           	dec (hl)
 816  8B38
 817  8B38              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 818  8B38 18 1E        	jr 3F
 819  8B3A
 820  8B3A AF           2 xor a
 821  8B3B 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 822  8B3E
 823  8B3E              ; Movemos Entidades malignas.
 824  8B3E
 825  8B3E CD 11 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 826  8B41
 827  8B41 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 828  8B44 CB 67        	bit 4,a
 829  8B46 C8           	ret z
 830  8B47
 831  8B47              ; Ha habido desplazamiento de la entidad maligna.
 832  8B47              ; Ha llegado a zona de AMADEUS ???
 833  8B47
 834  8B47 3A CD 88     	ld a,(Coordenada_y)
 835  8B4A FE 14        	cp $14
 836  8B4C D4 3C 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 837  8B4F              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 838  8B4F              ; ---------
 839  8B4F
 840  8B4F CD 87 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 841  8B52 CD FA 8D     	call Repone_datos_de_borrado
 842  8B55 CD 40 8C     	call Limpia_Variables_de_borrado
 843  8B58
 844  8B58 C9           3 ret													; _de la misma.
 845  8B59
 846  8B59              ; --------------------------------------------------------------------------------------------------------------
 847  8B59              ;
 848  8B59              ;	29/1/23
 849  8B59
 850  8B59              Mov_Amadeus
 851  8B59
 852  8B59 CD 8B 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 853  8B5C
 854  8B5C 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 855  8B5F CB 67        	bit 4,a
 856  8B61 C8           	ret z
 857  8B62
 858  8B62              ; ---------
 859  8B62
 860  8B62 CD 87 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 861  8B65 CD EA 8D     	call Repone_datos_de_borrado_Amadeus
 862  8B68 CD 40 8C     	call Limpia_Variables_de_borrado
 863  8B6B
 864  8B6B C9           	ret
 865  8B6C
 866  8B6C              ; -----------------------------------------------------------------------------------
 867  8B6C
 868  8B6C CD A4 8C     Inicia_entidad	call Inicia_Puntero_objeto
 869  8B6F CD B6 99     	call Recompone_posicion_inicio
 870  8B72 CD 95 93     	call Draw
 871  8B75 CD A0 7F     	call Guarda_foto_registros
 872  8B78 CD C8 8D     	call Guarda_datos_de_borrado
 873  8B7B F3           	di
 874  8B7C CD EC 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 875  8B7F C9           	ret
 876  8B80
 877  8B80              ; --------------------------------------------------------------------------------------------------------------
 878  8B80              ;
 879  8B80              ;	31/08/23
 880  8B80              ;
 881  8B80              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 882  8B80              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 883  8B80
 884  8B80              Guarda_foto_entidad_a_pintar
 885  8B80
 886  8B80              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 887  8B80
 888  8B80 CD 95 93     	call Draw
 889  8B83 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 890  8B86 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 891  8B87
 892  8B87              ; --------------------------------------------------------------------------------------------------------------
 893  8B87              ;
 894  8B87              ;	19/9/23
 895  8B87
 896  8B87 21 C6 88     Prepara_var_pintado ld hl,Filas
 897  8B8A 11 E6 88     	ld de,Variables_de_pintado
 898  8B8D 01 08 00     	ld bc,8
 899  8B90 ED B0        	ldir
 900  8B92 C9           	ret
 901  8B93
 902  8B93              ; --------------------------------------------------------------------------------------------------------------
 903  8B93
 904  8B93 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 905  8B96 11 C6 88     	ld de,Filas
 906  8B99 01 08 00     	ld bc,8
 907  8B9C ED B0        	ldir
 908  8B9E C9           	ret
 909  8B9F
 910  8B9F              ; *************************************************************************************************************************************************************
 911  8B9F              ;
 912  8B9F              ; 8/1/23
 913  8B9F              ;
 914  8B9F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 915  8B9F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 916  8B9F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 917  8B9F
 918  8B9F              ; Destruye HL y DE !!!!!
 919  8B9F
 920  8B9F              Inicia_punteros_de_cajas
 921  8B9F
 922  8B9F 21 8C 85     	ld hl,Indice_de_cajas
 923  8BA2 CD 9E 8C         call Extrae_address
 924  8BA5 22 06 89         ld (Puntero_store_caja),hl
 925  8BA8 21 8E 85     	ld hl,Indice_de_cajas+2
 926  8BAB 22 0A 89     	ld (Indice_restore_caja),hl
 927  8BAE CD 9E 8C     	call Extrae_address
 928  8BB1 22 08 89     	ld (Puntero_restore_caja),hl
 929  8BB4 C9               ret
 930  8BB5
 931  8BB5              ; ---------------------------------------------------------------
 932  8BB5              ;
 933  8BB5              ;	9/8/23
 934  8BB5              ;
 935  8BB5              ;	Inicialización y gestión de álbumes de fotos y cajas.
 936  8BB5
 937  8BB5              Inicia_punteros_de_albumes_y_malotes
 938  8BB5
 939  8BB5 21 EC 84     	ld hl,Indice_album_de_fotos
 940  8BB8 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 941  8BBB CD 9E 8C     	call Extrae_address
 942  8BBE 22 1A 89     	ld (Stack_snapshot),hl
 943  8BC1
 944  8BC1 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 945  8BC4 22 32 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 946  8BC7 CD 9E 8C     	call Extrae_address
 947  8BCA 22 1C 89     	ld (Stack_snapshot_disparos),hl
 948  8BCD
 949  8BCD 21 FC 84     	ld hl,Indice_End_Snapshot
 950  8BD0 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 951  8BD3 CD 9E 8C     	call Extrae_address
 952  8BD6 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 953  8BD9
 954  8BD9 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 955  8BDC 22 36 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 956  8BDF CD 9E 8C     	call Extrae_address
 957  8BE2 22 3A 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 958  8BE5
 959  8BE5 C9           	ret
 960  8BE6
 961  8BE6              ;	23/9/23
 962  8BE6
 963  8BE6              Avanza_puntero_de_album_de_fotos_y_malotes
 964  8BE6
 965  8BE6              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 966  8BE6
 967  8BE6              ; Estamos en el último álbum del índice???.
 968  8BE6
 969  8BE6 F3           	di
 970  8BE7 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 971  8BEA 01 F2 84     	ld bc,Indice_album_de_fotos+6
 972  8BED A7           	and a
 973  8BEE ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 974  8BF0 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 975  8BF2 FB           	ei
 976  8BF3
 977  8BF3 21 03 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 978  8BF6 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 979  8BF8 76           	halt
 980  8BF9 C9           	ret
 981  8BFA
 982  8BFA 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
 983  8BFD 23           	inc hl
 984  8BFE 23           	inc hl
 985  8BFF 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 986  8C02 CD 9E 8C     	call Extrae_address
 987  8C05 22 1A 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 988  8C08
 989  8C08 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
 990  8C0B 23           	inc hl
 991  8C0C 23           	inc hl
 992  8C0D 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 993  8C10 CD 9E 8C     	call Extrae_address
 994  8C13 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 995  8C16
 996  8C16 FB           	ei
 997  8C17 C9           	ret
 998  8C18
 999  8C18              ; *************************************************************************************************************************************************************
1000  8C18              ;
1001  8C18              ; 8/1/23
1002  8C18              ;
1003  8C18              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1004  8C18
1005  8C18 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1006  8C1B 22 3D 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1007  8C1E C9           	ret
1008  8C1F 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1009  8C22 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1010  8C25 C9           	ret
1011  8C26
1012  8C26              ; -------------------------------------------------------------------------------------------------------------
1013  8C26              ;
1014  8C26              ; 21/9/23
1015  8C26              ;
1016  8C26
1017  8C26              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1018  8C26
1019  8C26              Limpia_album_Amadeus
1020  8C26
1021  8C26 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1022  8C29 7E           	ld a,(hl)
1023  8C2A A7           	and a
1024  8C2B C8           	ret z
1025  8C2C
1026  8C2C 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1027  8C2F 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1028  8C32 01 0B 00     	ld bc,11
1029  8C35 AF           	xor a
1030  8C36 77           	ld (hl),a
1031  8C37 ED B0        	ldir
1032  8C39
1033  8C39 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1034  8C3C 22 22 89     	ld (End_Snapshot_Amadeus),hl
1035  8C3F
1036  8C3F C9           	ret
1037  8C40
1038  8C40 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1039  8C43 11 E1 88     	ld de,Variables_de_borrado+1
1040  8C46 01 05 00     	ld bc,5
1041  8C49 AF           	xor a
1042  8C4A 77           	ld (hl),a
1043  8C4B ED B0        	ldir
1044  8C4D C9           	ret
1045  8C4E
1046  8C4E              ; -------------------------------------------------------------------------------------------------------------
1047  8C4E              ;
1048  8C4E              ; 8/9/23
1049  8C4E              ;
1050  8C4E
1051  8C4E              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1052  8C4E              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1053  8C4E
1054  8C4E              Calcula_numero_de_malotes
1055  8C4E
1056  8C4E 21 00 70     	ld hl,Album_de_fotos
1057  8C51 EB           	ex de,hl
1058  8C52 2A 1E 89     	ld hl,(End_Snapshot)
1059  8C55
1060  8C55 7C           	ld a,h
1061  8C56 A7           	and a
1062  8C57 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1063  8C59
1064  8C59 06 00        4 ld b,0
1065  8C5B 7D           	ld a,l
1066  8C5C 93           	sub e
1067  8C5D 28 07        	jr z,1F
1068  8C5F
1069  8C5F              ; Nº de malotes no es "0".
1070  8C5F
1071  8C5F D6 06        2 sub 6
1072  8C61 04           	inc b
1073  8C62 A7           	and a
1074  8C63 20 FA        	jr nz,2B
1075  8C65 78           	ld a,b
1076  8C66
1077  8C66 32 0F 89     1 ld (Numero_de_malotes),a
1078  8C69 C9           	ret
1079  8C6A
1080  8C6A              ; -------------------------------------------------------------------------------------------------------------
1081  8C6A              ;
1082  8C6A              ; 8/9/23
1083  8C6A              ;
1084  8C6A
1085  8C6A              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1086  8C6A              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1087  8C6A
1088  8C6A              Calcula_malotes_Amadeus
1089  8C6A
1090  8C6A 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1091  8C6D EB           	ex de,hl
1092  8C6E 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1093  8C71
1094  8C71 7C           	ld a,h
1095  8C72 A7           	and a
1096  8C73 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1097  8C75
1098  8C75 06 00        	ld b,0
1099  8C77 7D           	ld a,l
1100  8C78 93           	sub e
1101  8C79 28 07        	jr z,1F
1102  8C7B
1103  8C7B              ; Nº de malotes no es "0".
1104  8C7B
1105  8C7B D6 06        2 sub 6
1106  8C7D 04           	inc b
1107  8C7E A7           	and a
1108  8C7F 20 FA        	jr nz,2B
1109  8C81 78           	ld a,b
1110  8C82
1111  8C82 32 0F 89     1 ld (Numero_de_malotes),a
1112  8C85 C9           	ret
1113  8C86
1114  8C86              ; -------------------------------------------------------------------------------------------------------------
1115  8C86              ;
1116  8C86              ; 28/2/23
1117  8C86              ;
1118  8C86
1119  8C86              Calcula_numero_de_disparotes
1120  8C86
1121  8C86 21 50 71     	ld hl,Album_de_fotos_disparos
1122  8C89 EB           	ex de,hl
1123  8C8A 2A 3A 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1124  8C8D
1125  8C8D 06 00        	ld b,0
1126  8C8F 7D           	ld a,l
1127  8C90 93           	sub e
1128  8C91 28 07        	jr z,1F
1129  8C93
1130  8C93              ; Nº de malotes no es "0".
1131  8C93
1132  8C93 D6 06        2 sub 6
1133  8C95 04           	inc b
1134  8C96 A7           	and a
1135  8C97 20 FA        	jr nz,2B
1136  8C99 78           	ld a,b
1137  8C9A
1138  8C9A 32 3C 89     1 ld (Numero_de_disparotes),a
1139  8C9D C9           	ret
1140  8C9E
1141  8C9E              ; *************************************************************************************************************************************************************
1142  8C9E              ;
1143  8C9E              ; 20/10/22
1144  8C9E              ;
1145  8C9E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1146  8C9E              ;
1147  8C9E              ; Destruye el puntero y DE !!!!!
1148  8C9E
1149  8C9E 5E           Extrae_address ld e,(hl)
1150  8C9F 23           	inc hl
1151  8CA0 56           	ld d,(hl)
1152  8CA1 2B           	dec hl
1153  8CA2 EB           	ex de,hl
1154  8CA3 C9           	ret
1155  8CA4
1156  8CA4              ; *************************************************************************************************************************************************************
1157  8CA4              ;
1158  8CA4              ;	7/2/23
1159  8CA4              ;
1160  8CA4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1161  8CA4              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1162  8CA4              ;
1163  8CA4              ;   Destruye HL y BC !!!!!,
1164  8CA4              ;
1165  8CA4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1166  8CA4              ;					"0" ..... Izquierda.
1167  8CA4
1168  8CA4              Inicia_Puntero_objeto
1169  8CA4
1170  8CA4 3A DA 88     	ld a,(Cuad_objeto)
1171  8CA7 E6 01        	and 1
1172  8CA9 F5           	push af
1173  8CAA CC C8 8C     	call z,Inicia_puntero_objeto_izq
1174  8CAD F1           	pop af
1175  8CAE 28 2B        	jr z,1F
1176  8CB0 CD B5 8C     	call Inicia_puntero_objeto_der
1177  8CB3 18 26        	jr 1F
1178  8CB5
1179  8CB5              ; Arrancamos desde la parte izquierda de la pantalla.
1180  8CB5              ; Iniciamos (Indice_Sprite_der).
1181  8CB5
1182  8CB5 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1183  8CB8 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1184  8CBB CD 9E 8C     	call Extrae_address
1185  8CBE 22 CA 88     	ld (Puntero_objeto),hl
1186  8CC1
1187  8CC1 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1188  8CC4 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1189  8CC7 C9           	ret
1190  8CC8
1191  8CC8              ; Arrancamos desde la parte derecha de la pantalla.
1192  8CC8              ; Iniciamos (Indice_Sprite_izq).
1193  8CC8
1194  8CC8 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1195  8CCB 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1196  8CCE CD 9E 8C     	call Extrae_address
1197  8CD1 22 CA 88     	ld (Puntero_objeto),hl
1198  8CD4
1199  8CD4 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1200  8CD7 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1201  8CDA C9           	ret
1202  8CDB
1203  8CDB              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1204  8CDB
1205  8CDB 21 40 83     1 ld hl,Amadeus
1206  8CDE ED 4B CA 88  	ld bc,(Puntero_objeto)
1207  8CE2 B7 ED 42     	sub hl,bc
1208  8CE5 C0           	ret nz
1209  8CE6 21 F0 88     	ld hl,Ctrl_0
1210  8CE9 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1211  8CEB C9           	ret 												; _de nuestra nave en los extremos.
1212  8CEC
1213  8CEC              ; *************************************************************************************************************************************************************
1214  8CEC              ;
1215  8CEC              ;	14/5/23
1216  8CEC              ;
1217  8CEC              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1218  8CEC              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1219  8CEC
1220  8CEC              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1221  8CEC              ;	_de la 2ª y 3ª entidad respectivamente.
1222  8CEC
1223  8CEC              Store_Restore_cajas
1224  8CEC
1225  8CEC E5           	push hl
1226  8CED D5           	push de
1227  8CEE C5            	push bc
1228  8CEF
1229  8CEF              ;	STORE !!!!!
1230  8CEF              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1231  8CEF
1232  8CEF 21 C6 88     	ld hl,Filas
1233  8CF2 ED 5B 06 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1234  8CF6 01 3D 00     	ld bc,61
1235  8CF9 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1236  8CFB
1237  8CFB              ; 	Entidad_sospechosa. 20/4/23
1238  8CFB
1239  8CFB 3A DF 88     	ld a,(Impacto)
1240  8CFE A7           	and a
1241  8CFF 28 0C        	jr z,1F
1242  8D01
1243  8D01 2A 06 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1244  8D04 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1245  8D07 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1246  8D08 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1247  8D0A 22 42 89     	ld (Entidad_sospechosa_de_colision),hl
1248  8D0D
1249  8D0D              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1250  8D0D
1251  8D0D 2A 08 89     1 ld hl,(Puntero_restore_caja)
1252  8D10 7E           	ld a,(hl)
1253  8D11 A7           	and a
1254  8D12 F5           	push af
1255  8D13 28 08        	jr z,2F
1256  8D15
1257  8D15 11 C6 88     	ld de,Filas
1258  8D18 01 3D 00     	ld bc,61
1259  8D1B ED B0        	ldir
1260  8D1D
1261  8D1D CD 39 8D     2 call Incrementa_punteros_de_cajas
1262  8D20 F1           	pop af
1263  8D21 28 EA        	jr z,1B
1264  8D23
1265  8D23 C1           	pop bc
1266  8D24 D1           	pop de
1267  8D25 E1           	pop hl
1268  8D26
1269  8D26 C9           	ret
1270  8D27
1271  8D27              ; **************************************************************************************************
1272  8D27              ;
1273  8D27              ;	12/05/23
1274  8D27              ;
1275  8D27              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1276  8D27
1277  8D27 E5           Restore_entidad push hl
1278  8D28 D5           	push de
1279  8D29 C5            	push bc
1280  8D2A
1281  8D2A 2A 06 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1282  8D2D 11 C6 88     	ld de,Filas
1283  8D30 01 3D 00     	ld bc,61
1284  8D33 ED B0        	ldir
1285  8D35
1286  8D35 C1           	pop bc
1287  8D36 D1           	pop de
1288  8D37 E1           	pop hl
1289  8D38 C9           	ret
1290  8D39
1291  8D39
1292  8D39              ; **************************************************************************************************
1293  8D39              ;
1294  8D39              ;	08/05/23
1295  8D39              ;
1296  8D39              ;	Incrementamos los dos punteros de entidades. (+1).
1297  8D39
1298  8D39 2A 08 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1299  8D3C 22 06 89     	ld (Puntero_store_caja),hl
1300  8D3F 2A 0A 89     	ld hl,(Indice_restore_caja)
1301  8D42 23           	inc hl
1302  8D43 23           	inc hl
1303  8D44 22 0A 89     	ld (Indice_restore_caja),hl
1304  8D47 CD 9E 8C         call Extrae_address
1305  8D4A 22 08 89         ld (Puntero_restore_caja),hl
1306  8D4D C9               ret
1307  8D4E
1308  8D4E              ; **************************************************************************************************
1309  8D4E              ;
1310  8D4E              ;	25/01/23
1311  8D4E              ;
1312  8D4E              ;	Restore_Amadeus
1313  8D4E              ;
1314  8D4E              ;	Cargamos en DRAW los parámetros de Amadeus.
1315  8D4E              ;
1316  8D4E
1317  8D4E E5           Restore_Amadeus	push hl
1318  8D4F D5           	push de
1319  8D50 C5            	push bc
1320  8D51 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1321  8D54 11 C6 88     	ld de,Filas
1322  8D57 01 3D 00     	ld bc,61
1323  8D5A ED B0        	ldir
1324  8D5C C1           	pop bc
1325  8D5D D1           	pop de
1326  8D5E E1           	pop hl
1327  8D5F C9           	ret
1328  8D60
1329  8D60              ; *************************************************************************************************************************************************************
1330  8D60              ;
1331  8D60              ;	29/04/23
1332  8D60              ;
1333  8D60              ;	Store_Amadeus
1334  8D60              ;
1335  8D60              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1336  8D60              ;
1337  8D60              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1338  8D60              ;
1339  8D60              ;	DESTRUYE: HL y BC y DE.
1340  8D60
1341  8D60 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1342  8D63 01 3D 00     	ld bc,61
1343  8D66 ED B0        	ldir
1344  8D68 C9           	ret
1345  8D69
1346  8D69              ; -----------------------------------------------------------
1347  8D69              ;
1348  8D69              ;	27/04/23
1349  8D69              ;
1350  8D69              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1351  8D69              ;
1352  8D69              ;	Destruye: HL,BC,DE,A
1353  8D69
1354  8D69 21 C6 88     Borra_datos_entidad ld hl,Filas
1355  8D6C 01 3C 00     	ld bc,60
1356  8D6F AF           	xor a
1357  8D70 77           	ld (hl),a
1358  8D71 11 C7 88     	ld de,Filas+1
1359  8D74 ED B0        	ldir
1360  8D76 C9           	ret
1361  8D77
1362  8D77              ; -----------------------------------------------------------
1363  8D77
1364  8D77              ; Teclado.
1365  8D77
1366  8D77 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1367  8D79 DB FE        	in a,($fe)
1368  8D7B E6 01        	and $01
1369  8D7D 28 02        	jr z,1f
1370  8D7F 18 F6        	jr Pulsa_ENTER
1371  8D81 C9           1 ret
1372  8D82
1373  8D82              ; **************************************************************************************************
1374  8D82              ;
1375  8D82              ; Temporización.
1376  8D82
1377  8D82              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1378  8D82              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1379  8D82              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1380  8D82              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1381  8D82
1382  8D82              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1383  8D82              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1384  8D82              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1385  8D82
1386  8D82              ; A partir de $4f61 no hace falta DELAY.
1387  8D82
1388  8D82              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1389  8D82
1390  8D82 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1391  8D85 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1392  8D86 78           	LD A,B
1393  8D87 A7           	AND A
1394  8D88 20 FB        	JR NZ,wait
1395  8D8A C9           	RET
1396  8D8B
1397  8D8B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1398  8D8B              ;
1399  8D8B              ;	5/3/23
1400  8D8B              ;
1401  8D8B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1402  8D8B
1403  8D8B              Movimiento_Amadeus
1404  8D8B
1405  8D8B              ; Disparo.
1406  8D8B
1407  8D8B 3A 54 89     	ld a,(Disparo_Amadeus)
1408  8D8E A7           	and a
1409  8D8F 20 02        	jr nz,1F
1410  8D91 18 15        	jr 2F
1411  8D93
1412  8D93 3E F7        1 ld a,$f7													; "5" para disparar.
1413  8D95 DB FE        	in a,($fe)
1414  8D97 E6 10        	and $10
1415  8D99
1416  8D99 F5           	push af
1417  8D9A CC 9F 8E     	call z,Genera_disparo
1418  8D9D F1           	pop af
1419  8D9E 20 08        	jr nz,2F
1420  8DA0
1421  8DA0 3A 54 89     	ld a,(Disparo_Amadeus)
1422  8DA3 EE 01        	xor 1
1423  8DA5 32 54 89     	ld (Disparo_Amadeus),a
1424  8DA8
1425  8DA8 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1426  8DAA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1427  8DAC E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1428  8DAE CC 70 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1429  8DB1
1430  8DB1 3E F7        	ld a,$f7
1431  8DB3 DB FE        	in a,($fe)
1432  8DB5 E6 01        	and $01
1433  8DB7 C8           	ret z
1434  8DB8
1435  8DB8 3E F7        	ld a,$f7
1436  8DBA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1437  8DBC E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1438  8DBE CC 52 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1439  8DC1 C9           	ret
1440  8DC2
1441  8DC2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1442  8DC2              ;
1443  8DC2              ;	Rutina provisional para que los malotes cagen balas.
1444  8DC2
1445  8DC2              Detecta_disparo_entidad
1446  8DC2
1447  8DC2 3A 57 89     	ld a,(Disparo_entidad)
1448  8DC5 A7           	and a
1449  8DC6 C8           	ret z
1450  8DC7
1451  8DC7              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1452  8DC7
1453  8DC7              ;	ld a,$7f				; Detecta SPACE.
1454  8DC7              ;	in a,($fe)
1455  8DC7              ;	and 1
1456  8DC7              ;	ret nz
1457  8DC7
1458  8DC7              ;	call Genera_disparo
1459  8DC7 C9           	ret
1460  8DC8
1461  8DC8              ; ----------------------------------------------------------------------
1462  8DC8              ;
1463  8DC8              ;	8/9/23
1464  8DC8
1465  8DC8              Guarda_datos_de_borrado
1466  8DC8
1467  8DC8 F3           	di
1468  8DC9
1469  8DC9 2A 1A 89     	ld hl,(Stack_snapshot)
1470  8DCC
1471  8DCC 2B           	dec hl
1472  8DCD 7E           	ld a,(hl)
1473  8DCE A7           	and a
1474  8DCF C8           	ret z										; Salimos si es álbum está vacío.
1475  8DD0
1476  8DD0 11 E5 88     	ld de,Variables_de_borrado+5
1477  8DD3 01 06 00     	ld bc,6
1478  8DD6 ED B8        	lddr
1479  8DD8
1480  8DD8 FB           	ei
1481  8DD9
1482  8DD9 C9           	ret
1483  8DDA
1484  8DDA              ; ----------------------------------------------------------------------
1485  8DDA              ;
1486  8DDA              ;	8/9/23
1487  8DDA
1488  8DDA 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1489  8DDD 2B            	dec hl
1490  8DDE 7E           	ld a,(hl)
1491  8DDF A7           	and a
1492  8DE0 C8           	ret z										; Salimos si es álbum está vacío.
1493  8DE1
1494  8DE1 11 E5 88     	ld de,Variables_de_borrado+5
1495  8DE4 01 06 00     	ld bc,6
1496  8DE7 ED B8        	lddr
1497  8DE9 C9           	ret
1498  8DEA
1499  8DEA              ; ----------------------------------------------------------------------
1500  8DEA              ;
1501  8DEA              ;	9/9/23
1502  8DEA
1503  8DEA              Repone_datos_de_borrado_Amadeus
1504  8DEA
1505  8DEA 21 E0 88     	ld hl,Variables_de_borrado
1506  8DED 11 A0 72     	ld de,Album_de_fotos_Amadeus
1507  8DF0 01 06 00     	ld bc,6
1508  8DF3 ED B0        	ldir
1509  8DF5
1510  8DF5 EB           	ex de,hl
1511  8DF6 22 22 89     	ld (End_Snapshot_Amadeus),hl
1512  8DF9
1513  8DF9 C9           	ret
1514  8DFA
1515  8DFA              ; ----------------------------------------------------------------------
1516  8DFA              ;
1517  8DFA              ;	18/9/23
1518  8DFA              ;
1519  8DFA
1520  8DFA              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1521  8DFA              ;	_ Album_de_fotos correspondiente.
1522  8DFA
1523  8DFA              ;	DI.
1524  8DFA
1525  8DFA              Repone_datos_de_borrado
1526  8DFA
1527  8DFA F3           	di
1528  8DFB
1529  8DFB ED 5B 1A 89  	ld de,(Stack_snapshot)
1530  8DFF 21 E0 88     	ld hl,Variables_de_borrado
1531  8E02 01 06 00     	ld bc,6
1532  8E05 ED B0        	ldir
1533  8E07
1534  8E07 EB           	ex de,hl
1535  8E08 22 1A 89     	ld (Stack_snapshot),hl
1536  8E0B
1537  8E0B FB           	ei
1538  8E0C
1539  8E0C C9           	ret
1540  8E0D
1541  8E0D              ; ----------------------------------------------------------------------
1542  8E0D              ;
1543  8E0D              ;	11/8/23
1544  8E0D
1545  8E0D              Gestiona_entidades
1546  8E0D
1547  8E0D              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1548  8E0D              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1549  8E0D
1550  8E0D              ; PINTAMOS.
1551  8E0D
1552  8E0D 3E 02        	ld a,2
1553  8E0F D3 FE            out ($fe),a											; Rojo.
1554  8E11
1555  8E11              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1556  8E11              ; _ , no gestionamos los álbumes de fotos.
1557  8E11
1558  8E11 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1559  8E14 01 EC 84     	ld bc,Indice_album_de_fotos
1560  8E17 A7           	and a
1561  8E18 ED 42        	sbc hl,bc
1562  8E1A
1563  8E1A 28 FE        	jr z,$
1564  8E1C C8           	ret z
1565  8E1D
1566  8E1D              ;	call Extrae_foto_disparos
1567  8E1D              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1568  8E1D
1569  8E1D CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1570  8E20
1571  8E20              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1572  8E20
1573  8E20 3A 03 89     	ld a,(Ctrl_1)
1574  8E23 CB 6F        	bit 5,a
1575  8E25 20 22        	jr nz,1F
1576  8E27
1577  8E27              ; !!! debug. El buffer no está completo.
1578  8E27              ;	ld a,(Contador_de_frames)
1579  8E27              ;	jr $
1580  8E27
1581  8E27              ; No hemos terminado de guardar el último FRAME.
1582  8E27
1583  8E27 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1584  8E2A 2B           	dec hl
1585  8E2B 2B           	dec hl
1586  8E2C 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
1587  8E2F
1588  8E2F 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
1589  8E32 2B           	dec hl
1590  8E33 2B           	dec hl
1591  8E34 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
1592  8E37 CD 9E 8C     	call Extrae_address
1593  8E3A 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1594  8E3D
1595  8E3D CD 9E 8C     	call Extrae_address
1596  8E40
1597  8E40              ; Esta vacío este album???
1598  8E40
1599  8E40 24           	inc h
1600  8E41 25           	dec h
1601  8E42 28 05        	jr z,1F
1602  8E44
1603  8E44              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1604  8E44
1605  8E44 22 1A 89     	ld (Stack_snapshot),hl
1606  8E47 18 09        	jr 2F
1607  8E49
1608  8E49              ; FRAME completo.
1609  8E49
1610  8E49 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
1611  8E4C CD 9E 8C     	call Extrae_address
1612  8E4F 22 1A 89     	ld (Stack_snapshot),hl
1613  8E52
1614  8E52              ;	En este punto:
1615  8E52
1616  8E52              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1617  8E52              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1618  8E52
1619  8E52 21 03 89     2 ld hl,Ctrl_1
1620  8E55 CB AE        	res 5,(hl)
1621  8E57
1622  8E57 C9           	ret
1623  8E58
1624  8E58              ; -----------------------------------------------------------------------------------
1625  8E58
1626  8E58              Pinta_Amadeus
1627  8E58
1628  8E58 3E 06        	ld a,6
1629  8E5A D3 FE            out ($fe),a										; Amarillo
1630  8E5C
1631  8E5C CD 6A 8C        	call Calcula_malotes_Amadeus
1632  8E5F CD 25 97     	call Extrae_foto_Amadeus
1633  8E62 CD 26 8C     	call Limpia_album_Amadeus
1634  8E65
1635  8E65 C9           	ret
1636  8E66
1637  8E66              Pinta_entidades
1638  8E66
1639  8E66 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1640  8E69 01 EC 84     	ld bc,Indice_album_de_fotos
1641  8E6C A7           	and a
1642  8E6D ED 42        	sbc hl,bc
1643  8E6F
1644  8E6F 28 FE        	jr z,$
1645  8E71 C8           	ret z
1646  8E72
1647  8E72              ; Pintamos siempre que esté completo Album_de_fotos.
1648  8E72
1649  8E72 CD 4E 8C     	call Calcula_numero_de_malotes
1650  8E75 CD A3 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1651  8E78
1652  8E78 C9           	ret
1653  8E79
1654  8E79              ; -----------------------------------------------------------------------------------
1655  8E79
1656  8E79              Actualiza_relojes
1657  8E79
1658  8E79 21 4F 89     	ld hl,Contador_de_frames
1659  8E7C 7E           	ld a,(hl)
1660  8E7D FE FF        	cp $ff
1661  8E7F 20 04        	jr nz,1F
1662  8E81 34           	inc (hl)
1663  8E82 21 50 89     	ld hl,Contador_de_frames_2
1664  8E85 34           1 inc (hl)											; 0 - 255
1665  8E86 C9           	ret
1666  8E87
1667  8E87              ; ---------------------------------------------------------------
1668  8E87              ;
1669  8E87              ;	27/9/23
1670  8E87
1671  8E87              Guarda_parametros_DRAW
1672  8E87
1673  8E87 21 C6 88     	ld hl,Filas
1674  8E8A 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1675  8E8D 01 3D 00     	ld bc,61
1676  8E90 ED B0        	ldir
1677  8E92 C9           	ret
1678  8E93
1679  8E93              Recupera_parametros_DRAW
1680  8E93
1681  8E93 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1682  8E96 11 C6 88     	ld de,Filas
1683  8E99 01 3D 00     	ld bc,61
1684  8E9C ED B0        	ldir
1685  8E9E C9           	ret
1686  8E9F
1687  8E9F              ; ---------------------------------------------------------------
1688  8E9F
1689  8E9F
1690  8E9F              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E9F              ; ******************************************************************************************************************************************************************************************
   2+ 8E9F              ;
   3+ 8E9F              ;   21/07/23
   4+ 8E9F              ;
   5+ 8E9F              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E9F              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E9F              ;
   8+ 8E9F              ;
   9+ 8E9F              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E9F              ;
  11+ 8E9F              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E9F              ;               _ hacen las entidades hacia abajo.
  13+ 8E9F              ;
  14+ 8E9F              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E9F              ;
  16+ 8E9F              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E9F              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E9F              ;
  19+ 8E9F              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E9F              ;           _ la bala.
  21+ 8E9F              ;
  22+ 8E9F              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E9F              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E9F              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E9F              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E9F              ;           _ en el momento de generarse la bala)).
  27+ 8E9F
  28+ 8E9F              Genera_disparo
  29+ 8E9F
  30+ 8E9F              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E9F              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E9F              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E9F              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E9F              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E9F              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E9F              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E9F
  38+ 8E9F              ; Exclusiones:
  39+ 8E9F
  40+ 8E9F 3A DE 88         ld a,(Vel_down)
  41+ 8EA2 47               ld b,a
  42+ 8EA3 3A 4E 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EA6 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EA7 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EA8 3A FD 88         ld a,(Columnas)
  46+ 8EAB 47               ld b,a
  47+ 8EAC 3A C7 88         ld a,(Columns)
  48+ 8EAF B8               cp b
  49+ 8EB0 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EB1
  51+ 8EB1              ; ----- ----- -----
  52+ 8EB1
  53+ 8EB1 3A F0 88         ld a,(Ctrl_0)
  54+ 8EB4 CB 77            bit 6,a
  55+ 8EB6 20 06            jr nz,14F
  56+ 8EB8
  57+ 8EB8 3A CD 88         ld a,(Coordenada_y)
  58+ 8EBB FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EBD D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EBE
  61+ 8EBE 21 00 80     14 ld hl,Indice_disparo
  62+ 8EC1 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8EC4 4F               ld c,a
  64+ 8EC5 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EC7              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EC7              ;                                            ""        ""       "f9", B="1"
  67+ 8EC7              ;                                            ""        ""       "fb", B="2"
  68+ 8EC7              ;                                            ""        ""       "fb", B="3"
  69+ 8EC7 A7               and a
  70+ 8EC8 28 10            jr z,1F
  71+ 8ECA E6 01            and 1
  72+ 8ECC C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8ECD
  74+ 8ECD 79               ld a,c
  75+ 8ECE 16 F9            ld d,$f9
  76+ 8ED0 23           2 inc hl
  77+ 8ED1 23               inc hl
  78+ 8ED2 04               inc b
  79+ 8ED3 BA               cp d
  80+ 8ED4 28 04            jr z,1F
  81+ 8ED6 14               inc d
  82+ 8ED7 14               inc d
  83+ 8ED8 18 F6            jr 2B
  84+ 8EDA
  85+ 8EDA CD 9E 8C     1 call Extrae_address
  86+ 8EDD E5               push hl
  87+ 8EDE FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EE0 DD 21 6B 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EE4
  90+ 8EE4              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EE4              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EE4
  93+ 8EE4 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EE7 CB 77            bit 6,a
  95+ 8EE9 20 04            jr nz,19F
  96+ 8EEB
  97+ 8EEB AF               xor a
  98+ 8EEC 32 57 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EEF
 100+ 8EEF 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8EF2 FE 02            cp 2
 102+ 8EF4 38 66            jr c,3F
 103+ 8EF6 28 64            jr z,3F
 104+ 8EF8
 105+ 8EF8              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EF8
 107+ 8EF8 E6 01            and 1
 108+ 8EFA 28 30            jr z,4F
 109+ 8EFC
 110+ 8EFC              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EFC              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EFC              ;
 113+ 8EFC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EFC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EFC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EFC
 117+ 8EFC 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8EFF
 119+ 8EFF              ;   Amadeus o entidad ???.
 120+ 8EFF
 121+ 8EFF 3A F0 88         ld a,(Ctrl_0)
 122+ 8F02 CB 77            bit 6,a
 123+ 8F04 28 0A            jr z,8F
 124+ 8F06
 125+ 8F06              ; 	Dispara Amadeus.
 126+ 8F06
 127+ 8F06 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F08 CD 94 96         call PreviousScan
 129+ 8F0B CD 94 96         call PreviousScan
 130+ 8F0E
 131+ 8F0E              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F0E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F0E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F0E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F0E
 136+ 8F0E 18 11            jr 10F
 137+ 8F10
 138+ 8F10              ; 	Dispara Entidad.
 139+ 8F10
 140+ 8F10 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F13              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F13
 143+ 8F13              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F13              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F13
 146+ 8F13 C5               push bc
 147+ 8F14 06 10            ld b,16
 148+ 8F16 CD 85 96     9 call NextScan
 149+ 8F19 10 FB            djnz 9B
 150+ 8F1B C1               pop bc
 151+ 8F1C CD 86 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F1F 18 06            jr 17F
 153+ 8F21
 154+ 8F21              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F21              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F21              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F21              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F21
 159+ 8F21 CD 86 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F24 CD FB 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F27              ;                                                      ; _al generar el disparo.
 162+ 8F27
 163+ 8F27              ; 	LLegados a este punto tendremos:
 164+ 8F27              ;
 165+ 8F27              ;       Puntero_objeto_disparo en IY.
 166+ 8F27              ;       Rutinas_de_impresion en IX.
 167+ 8F27              ;       Puntero_de_impresion en HL.
 168+ 8F27              ;       Impacto/Dirección en BC.
 169+ 8F27
 170+ 8F27 CD 8E 8F     17 call Almacena_disparo
 171+ 8F2A 18 52            jr 6F                                             ; RET.
 172+ 8F2C
 173+ 8F2C              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F2C              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F2C              ;
 176+ 8F2C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F2C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F2C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F2C
 180+ 8F2C 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8F2F
 182+ 8F2F              ;   Amadeus o entidad ???.
 183+ 8F2F
 184+ 8F2F 3A F0 88         ld a,(Ctrl_0)
 185+ 8F32 CB 77            bit 6,a
 186+ 8F34 28 0A            jr z,11F
 187+ 8F36
 188+ 8F36              ; 	Dispara Amadeus.
 189+ 8F36
 190+ 8F36 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F38 CD 94 96         call PreviousScan
 192+ 8F3B CD 94 96         call PreviousScan
 193+ 8F3E
 194+ 8F3E              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F3E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F3E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F3E
 199+ 8F3E 18 11            jr 13F
 200+ 8F40
 201+ 8F40              ; 	Dispara Entidad.
 202+ 8F40
 203+ 8F40 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F43              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F43
 206+ 8F43              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F43              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F43
 209+ 8F43 C5               push bc
 210+ 8F44 06 10            ld b,16
 211+ 8F46 CD 85 96     12 call NextScan
 212+ 8F49 10 FB            djnz 12B
 213+ 8F4B C1               pop bc
 214+ 8F4C
 215+ 8F4C CD 7F 8F         call Ajusta_disparo_parte_derecha
 216+ 8F4F 18 06            jr 18F
 217+ 8F51
 218+ 8F51              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F51              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F51              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F51              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F51
 223+ 8F51 CD 7F 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F54 CD FB 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F57              ;                                                       ; _al generar el disparo.
 226+ 8F57
 227+ 8F57              ; LLegados a este punto tendremos:
 228+ 8F57              ;
 229+ 8F57              ;       Puntero_objeto_disparo en IY.
 230+ 8F57              ;       Rutinas_de_impresion en IX.
 231+ 8F57              ;       Puntero_de_impresion en HL.
 232+ 8F57              ;       Impacto/Dirección en BC.
 233+ 8F57
 234+ 8F57 CD 8E 8F     18 call Almacena_disparo
 235+ 8F5A 18 22            jr 6F                                               ; RET.
 236+ 8F5C
 237+ 8F5C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F5C
 239+ 8F5C 28 11        3 jr z,5F
 240+ 8F5E
 241+ 8F5E              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F5E              ;
 243+ 8F5E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F5E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F5E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F5E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F5E
 248+ 8F5E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F5E              ;	   ""        ""       "f9", B="1"
 250+ 8F5E              ;	   ""        ""       "fb", B="2"
 251+ 8F5E              ; 	   ""        ""       "fb", B="3"
 252+ 8F5E
 253+ 8F5E 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8F61 CD 85 96     	call NextScan
 255+ 8F64
 256+ 8F64              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F64              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F64              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F64              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F64
 261+ 8F64 CD 86 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F67
 263+ 8F67              ; 	No se produce impacto. B="$80"
 264+ 8F67              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F67
 266+ 8F67 01 80 80         ld bc,$8080
 267+ 8F6A
 268+ 8F6A              ; 	LLegados a este punto tendremos:
 269+ 8F6A              ;
 270+ 8F6A              ;       Puntero_objeto_disparo en IY.
 271+ 8F6A              ;       Rutinas_de_impresion en IX.
 272+ 8F6A              ;       Puntero_de_impresion en HL.
 273+ 8F6A              ;       Impacto/Dirección en BC.
 274+ 8F6A
 275+ 8F6A CD 8E 8F         call Almacena_disparo
 276+ 8F6D 18 0F            jr 6F                                           ; RET.
 277+ 8F6F
 278+ 8F6F              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F6F              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F6F              ;
 281+ 8F6F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F6F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F6F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F6F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F6F
 286+ 8F6F 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F72 CD 85 96     	call NextScan
 288+ 8F75
 289+ 8F75              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F75              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F75              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F75              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F75
 294+ 8F75 CD 7F 8F         call Ajusta_disparo_parte_derecha
 295+ 8F78
 296+ 8F78              ; 	No se produce impacto. B="$80"
 297+ 8F78              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F78
 299+ 8F78 01 80 80     15 ld bc,$8080
 300+ 8F7B
 301+ 8F7B              ; 	LLegados a este punto tendremos:
 302+ 8F7B              ;
 303+ 8F7B              ;       Puntero_objeto_disparo en IY.
 304+ 8F7B              ;       Rutinas_de_impresion en IX.
 305+ 8F7B              ;       Puntero_de_impresion en HL.
 306+ 8F7B              ;       Impacto/Dirección en BC.
 307+ 8F7B
 308+ 8F7B CD 8E 8F         call Almacena_disparo
 309+ 8F7E
 310+ 8F7E C9           6 ret
 311+ 8F7F
 312+ 8F7F              ; ----------------------------------------------------------------
 313+ 8F7F              ;
 314+ 8F7F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F7F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F7F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F7F
 318+ 8F7F 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F80 FE 02            cp 2
 320+ 8F82 38 01            jr c,1F
 321+ 8F84 23               inc hl
 322+ 8F85 C9           1 ret
 323+ 8F86
 324+ 8F86 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F87 FE 01        	cp 1
 326+ 8F89 20 01        	jr nz,1F
 327+ 8F8B 2B           	dec hl
 328+ 8F8C 2B           1 dec hl
 329+ 8F8D C9               ret
 330+ 8F8E
 331+ 8F8E              ; ----------------------------------------------------------------
 332+ 8F8E              ;
 333+ 8F8E              ;   25/02/23
 334+ 8F8E              ;
 335+ 8F8E              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F8E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F8E              ;
 338+ 8F8E              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F8E              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F8E
 341+ 8F8E              Almacena_disparo
 342+ 8F8E
 343+ 8F8E E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F8F F1               pop af
 345+ 8F90 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F91
 347+ 8F91 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F92 E6 01            and 1
 349+ 8F94 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F96              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F96              ; 	Dispara AMADEUS.
 352+ 8F96
 353+ 8F96              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F96              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F96              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F96              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F96
 358+ 8F96 C5               push bc
 359+ 8F97 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F9A 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F9D A7               and a
 362+ 8F9E ED 42            sbc hl,bc
 363+ 8FA0 CC 1F 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FA3 C1               pop bc
 365+ 8FA4 28 54            jr z,4F
 366+ 8FA6
 367+ 8FA6 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FA9 23               inc hl
 369+ 8FAA 23               inc hl
 370+ 8FAB 22 3F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FAE              ;                                                   ; _ Disparo_(+1).
 372+ 8FAE 18 18            jr 2F
 373+ 8FB0
 374+ 8FB0              ; Dispara una entidad.
 375+ 8FB0
 376+ 8FB0 C5           1 push bc
 377+ 8FB1 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FB4 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FB7 A7               and a
 380+ 8FB8 ED 42            sbc hl,bc
 381+ 8FBA CC 18 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FBD C1               pop bc
 383+ 8FBE 28 3A            jr z,4F
 384+ 8FC0
 385+ 8FC0 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FC3 23               inc hl
 387+ 8FC4 23               inc hl
 388+ 8FC5 22 3D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FC8              ;                                                   ; _ Disparo_(+1).
 390+ 8FC8 CD 9E 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FCB              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FCB              ;
 393+ 8FCB              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FCB              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FCB              ;                                                     Puntero_de_impresion en HL.
 396+ 8FCB              ;                                                     Impacto/Dirección en BC.
 397+ 8FCB
 398+ 8FCB 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FCC 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FCD 23               inc hl                                          ; _ al siguiente.
 401+ 8FCE A7               and a
 402+ 8FCF 20 C0            jr nz,3B
 403+ 8FD1
 404+ 8FD1 08               ex af,af
 405+ 8FD2 ED 73 14 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FD6 F9               ld sp,hl
 407+ 8FD7
 408+ 8FD7 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FD9 F5               push af                                         ; Puntero de impresión.
 410+ 8FDA FD E5            push iy                                         ; Puntero objeto.
 411+ 8FDC C5               push bc                                         ; Control.
 412+ 8FDD
 413+ 8FDD ED 7B 14 89      ld sp,(Stack)
 414+ 8FE1
 415+ 8FE1              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FE1
 417+ 8FE1 21 03 89     	ld hl,Ctrl_1
 418+ 8FE4 CB C6        	set 0,(hl)
 419+ 8FE6
 420+ 8FE6 DD E5        	push ix
 421+ 8FE8 E1               pop hl
 422+ 8FE9 F5               push af
 423+ 8FEA DD E1            pop ix
 424+ 8FEC
 425+ 8FEC CD A0 7F     	call Guarda_foto_registros
 426+ 8FEF
 427+ 8FEF 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FF2 CB 86        	res 0,(hl)
 429+ 8FF4
 430+ 8FF4              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FF4              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FF4
 433+ 8FF4 CD 1F 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FF7 CD 18 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FFA
 436+ 8FFA C9           4 ret
 437+ 8FFB
 438+ 8FFB              ; ----------------------------------------------------------------
 439+ 8FFB              ;
 440+ 8FFB              ;   4/3/23
 441+ 8FFB              ;
 442+ 8FFB              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FFB              ;   _ al generarse el disparo.
 444+ 8FFB              ;
 445+ 8FFB              ;       "$80" ..... No se produce colisión.
 446+ 8FFB              ;       "$81" ..... Se produce colisión.
 447+ 8FFB              ;
 448+ 8FFB              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FFB              ;         _ que forman el disparo.
 450+ 8FFB
 451+ 8FFB
 452+ 8FFB              Comprueba_Colision
 453+ 8FFB
 454+ 8FFB              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FFB
 456+ 8FFB FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FFD E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FFE
 459+ 8FFE CD 34 90         call Modifica_H_Velocidad_disparo
 460+ 9001
 461+ 9001 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9002 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9004 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9006
 465+ 9006 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9008 CD 24 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 900B
 468+ 900B 7B               ld a,e
 469+ 900C E6 01            and 1
 470+ 900E 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9010              ;                                                  ; _ para activar IMPACTO.
 472+ 9010 E1               pop hl
 473+ 9011 E5               push hl
 474+ 9012 CD 85 96         call NextScan
 475+ 9015
 476+ 9015 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9016 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9018 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 901A              ;                                                  ; _ 2º scanline si esto es así.
 480+ 901A 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 901C CD 24 90         call Bucle_2
 482+ 901F
 483+ 901F 43           1 ld b,e
 484+ 9020 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9021 FD E1            pop iy
 486+ 9023 C9               ret
 487+ 9024
 488+ 9024              ; ---------- ----------
 489+ 9024
 490+ 9024 06 02        Bucle_2 ld b,2
 491+ 9026 FD 7E 00     2 ld a,(iy)
 492+ 9029 A6               and (hl)
 493+ 902A 28 02            jr z,1F
 494+ 902C 1E 81            ld e,$81
 495+ 902E 23           1 inc hl
 496+ 902F FD 23            inc iy
 497+ 9031 10 F3            djnz 2B
 498+ 9033 C9               ret
 499+ 9034
 500+ 9034              ; ---------- ----------
 501+ 9034              ;
 502+ 9034              ;   21/7/23
 503+ 9034
 504+ 9034              Modifica_H_Velocidad_disparo
 505+ 9034
 506+ 9034 3A 4E 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9037 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9039 D0               ret nc                                         ; _ incrementamos H.
 509+ 903A 24               inc h
 510+ 903B
 511+ 903B C9               ret
 512+ 903C
 513+ 903C              ; -------------------------------------------------------------------------------------------------------------
 514+ 903C              ;
 515+ 903C              ;   11/04/23
 516+ 903C              ;
 517+ 903C              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 903C              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 903C              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 903C              ;
 521+ 903C              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 903C
 523+ 903C              Compara_coordenadas_X
 524+ 903C
 525+ 903C              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 903C              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 903C
 528+ 903C              ; Preparamos registros:
 529+ 903C
 530+ 903C 21 CC 88         ld hl,Filas+6
 531+ 903F 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9040 23               inc hl
 533+ 9041 23               inc hl
 534+ 9042 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9043 43               ld b,e
 536+ 9044
 537+ 9044 21 DA 88         ld hl,Filas+20
 538+ 9047 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9048 21 49 89         ld hl,Coordenadas_X_Entidad
 540+ 904B CD 67 92         call Guarda_coordenadas_X
 541+ 904E
 542+ 904E              ; Preparamos registros:
 543+ 904E
 544+ 904E 21 A4 85         ld hl,Amadeus_db+6
 545+ 9051 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9052 23               inc hl
 547+ 9053 23               inc hl
 548+ 9054 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9055 7B               ld a,e
 550+ 9056 08               ex af,af'
 551+ 9057 21 B2 85         ld hl,Amadeus_db+20
 552+ 905A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 905B 21 46 89         ld hl,Coordenadas_X_Amadeus
 554+ 905E CD 67 92         call Guarda_coordenadas_X
 555+ 9061
 556+ 9061              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9061              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9061
 559+ 9061 04               inc b
 560+ 9062 05               dec b
 561+ 9063 28 04            jr z,1F
 562+ 9065 06 03            ld b,3
 563+ 9067 18 02            jr 2F
 564+ 9069 06 02        1 ld b,2
 565+ 906B 08           2 ex af,af'
 566+ 906C 3C               inc a
 567+ 906D 3D               dec a
 568+ 906E 28 04            jr z,5F
 569+ 9070 0E 03            ld c,3
 570+ 9072 18 02            jr 6F
 571+ 9074 0E 02        5 ld c,2
 572+ 9076 79           6 ld a,c
 573+ 9077 08               ex af,af'
 574+ 9078 11 49 89         ld de,Coordenadas_X_Entidad
 575+ 907B 1A           4 ld a,(de)
 576+ 907C 21 46 89         ld hl,Coordenadas_X_Amadeus
 577+ 907F BE           3 cp (hl)
 578+ 9080 28 0E            jr z,7F
 579+ 9082 23               inc hl
 580+ 9083 0D               dec c
 581+ 9084 20 F9            jr nz,3B
 582+ 9086 13               inc de
 583+ 9087 08               ex af,af'
 584+ 9088 4F               ld c,a
 585+ 9089 08               ex af,af'
 586+ 908A 10 EF            djnz 4B
 587+ 908C
 588+ 908C              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 908C
 590+ 908C CD A3 92     8 call Limpia_Coordenadas_X
 591+ 908F C9               ret
 592+ 9090
 593+ 9090 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9092 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9095 21 41 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9098 CB D6            set 2,(hl)
 597+ 909A 18 F0            jr 8B
 598+ 909C
 599+ 909C              ; -----------------------------------------------------------------------
 600+ 909C              ;
 601+ 909C              ;   17/04/23
 602+ 909C              ;
 603+ 909C
 604+ 909C              Detecta_colision_nave_entidad
 605+ 909C
 606+ 909C              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 909C
 608+ 909C 2A C8 88         ld hl,(Posicion_actual)
 609+ 909F CD E0 95         call Calcula_puntero_de_impresion
 610+ 90A2
 611+ 90A2              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90A2              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90A2
 614+ 90A2 DD E5            push ix
 615+ 90A4 E1               pop hl
 616+ 90A5 E5               push hl
 617+ 90A6
 618+ 90A6              ; ----- ----- -----
 619+ 90A6 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90A8 06 0A            ld b,10
 621+ 90AA CD DA 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90AD 7B               ld a,e
 623+ 90AE FE 05            cp 5
 624+ 90B0 38 0E            jr c,3F
 625+ 90B2
 626+ 90B2              ; LLegados a este punto:
 627+ 90B2              ;
 628+ 90B2              ;   HAY COLISIÓN !!!!!.
 629+ 90B2              ;
 630+ 90B2              ;   .db (Impacto) de Amadeus a "1".
 631+ 90B2              ;   SET el bit3 de (Impacto2).
 632+ 90B2              ;
 633+ 90B2              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90B2
 635+ 90B2 21 B7 85         ld hl,Amadeus_db+25
 636+ 90B5 36 01            ld (hl),1
 637+ 90B7 21 41 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90BA CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90BC CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90BE 18 18            jr 1F
 641+ 90C0
 642+ 90C0              ; -----
 643+ 90C0
 644+ 90C0 E1           3 pop hl
 645+ 90C1 CD 85 96         call NextScan
 646+ 90C4 E5               push hl
 647+ 90C5 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90C6 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90C8 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90CA 30 0C            jr nc,1F
 651+ 90CC              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90CC 10 DC            djnz 2B
 653+ 90CE
 654+ 90CE              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90CE
 656+ 90CE              ; LLegados a este punto:
 657+ 90CE              ;
 658+ 90CE              ;   NO HAY COLISIÓN !!!!!.
 659+ 90CE              ;
 660+ 90CE              ;   .db (Impacto) de Amadeus a "0".
 661+ 90CE              ;   RES el bit2 de (Impacto2).
 662+ 90CE              ;
 663+ 90CE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90CE              ;   Lo colocamos a "0".
 665+ 90CE
 666+ 90CE 21 41 89         ld hl,Impacto2
 667+ 90D1 CB 96            res 2,(hl)
 668+ 90D3 2A 42 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90D6 36 00            ld (hl),0
 670+ 90D8
 671+ 90D8 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90D9 C9               ret
 673+ 90DA
 674+ 90DA               ; ---------- ----------
 675+ 90DA
 676+ 90DA C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90DB 3A C7 88         ld a,(Columns)
 678+ 90DE 47               ld b,a
 679+ 90DF FD 7E 00     2 ld a,(iy)
 680+ 90E2 BE               cp (hl)
 681+ 90E3 28 01            jr z,1F
 682+ 90E5
 683+ 90E5 1C               inc e
 684+ 90E6
 685+ 90E6 23           1 inc hl
 686+ 90E7 FD 23            inc iy
 687+ 90E9 10 F4            djnz 2B
 688+ 90EB C1               pop bc
 689+ 90EC C9               ret
 690+ 90ED
 691+ 90ED              ; -------------------------------------------------------------------------------------------------------------
 692+ 90ED              ;
 693+ 90ED              ;   13/03/23
 694+ 90ED              ;
 695+ 90ED              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90ED              ;
 697+ 90ED              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90ED
 699+ 90ED 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90F0 7E               ld a,(hl)
 701+ 90F1 A7               and a
 702+ 90F2 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90F3
 704+ 90F3 44               ld b,h
 705+ 90F4 4D               ld c,l
 706+ 90F5 2A 1C 89         ld hl,(Stack_snapshot_disparos)
 707+ 90F8 E5               push hl
 708+ 90F9 A7               and a
 709+ 90FA ED 42            sbc hl,bc
 710+ 90FC E5               push hl
 711+ 90FD C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90FE
 713+ 90FE E1               pop hl
 714+ 90FF 54               ld d,h
 715+ 9100 5D               ld e,l
 716+ 9101 1B               dec de
 717+ 9102 ED B8            lddr                                                ; Limpiamos.
 718+ 9104
 719+ 9104 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9107 22 1C 89         ld (Stack_snapshot_disparos),hl
 721+ 910A
 722+ 910A C9               ret
 723+ 910B
 724+ 910B              ; -------------------------------------------------------------------------------------------------------------
 725+ 910B              ;
 726+ 910B              ;   18/07/23
 727+ 910B              ;
 728+ 910B
 729+ 910B              Motor_de_disparos
 730+ 910B
 731+ 910B              ; Gestiona DISPAROS DE AMADEUS.
 732+ 910B
 733+ 910B 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 910E 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9111
 736+ 9111 CD 9E 8C     2 call Extrae_address
 737+ 9114 7E               ld a,(hl)
 738+ 9115 A7               and a
 739+ 9116 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9118
 741+ 9118              ; ----- ----- ----- ----- ----- -----
 742+ 9118
 743+ 9118 C5               push bc
 744+ 9119 CD DD 91         call foto_disparo_a_borrar
 745+ 911C
 746+ 911C              ; Existe colisión con este disparo???
 747+ 911C
 748+ 911C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 911D 7E               ld a,(hl)
 750+ 911E 2B               dec hl
 751+ 911F E6 01            and 1
 752+ 9121 28 1D            jr z,9F
 753+ 9123
 754+ 9123              ;   En este punto:
 755+ 9123              ;
 756+ 9123              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9123              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9123              ;   _con la entidad).
 759+ 9123              ;
 760+ 9123              ;   Disparo_2A defw 0                                ; Control.
 761+ 9123              ;    defw 0                                          ; Puntero objeto.
 762+ 9123              ;    defw 0                                          ; Puntero de impresión.
 763+ 9123              ;    defw 0                                          ; Rutina de impresión.
 764+ 9123
 765+ 9123 E5               push hl
 766+ 9124
 767+ 9124 06 04            ld b,4
 768+ 9126 23           19 inc hl
 769+ 9127 10 FD            djnz 19B
 770+ 9129
 771+ 9129 CD 9E 8C         call Extrae_address
 772+ 912C CD 4E 9D         call Genera_coordenadas_disparo
 773+ 912F
 774+ 912F              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 912F
 776+ 912F 21 44 89         ld hl,Coordenadas_disparo_certero
 777+ 9132 72               ld (hl),d
 778+ 9133 23               inc hl
 779+ 9134 73               ld (hl),e
 780+ 9135
 781+ 9135              ; Elimino el disparo de la base de datos.
 782+ 9135
 783+ 9135 E1               pop hl
 784+ 9136 CD 5C 92         call Elimina_disparo_de_base_de_datos
 785+ 9139 21 41 89         ld hl,Impacto2
 786+ 913C CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 913E
 788+ 913E 18 06            jr 11F
 789+ 9140
 790+ 9140 CD 06 92     9 call Mueve_disparo
 791+ 9143 CD DD 91         call foto_disparo_a_borrar
 792+ 9146
 793+ 9146 C1           11 pop bc
 794+ 9147 18 04            jr 7F
 795+ 9149
 796+ 9149              ; ----- ----- ----- ----- ----- -----
 797+ 9149
 798+ 9149 ED 42        1 sbc hl,bc
 799+ 914B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 914D
 801+ 914D 2A 3F 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9150 23               inc hl
 803+ 9151 23               inc hl
 804+ 9152 22 3F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9155 18 BA            jr 2B
 806+ 9157
 807+ 9157 CD 1F 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 915A              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 915A
 810+ 915A              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 915A
 812+ 915A 01 8A 85         ld bc,Disparo_11
 813+ 915D 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9160
 815+ 9160 CD 9E 8C     5 call Extrae_address
 816+ 9163 7E               ld a,(hl)
 817+ 9164 A7               and a
 818+ 9165 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9167
 820+ 9167              ; ----- ----- ----- ----- ----- -----
 821+ 9167
 822+ 9167 C5               push bc
 823+ 9168 CD DD 91         call foto_disparo_a_borrar
 824+ 916B
 825+ 916B              ; Existe colisión con este disparo???
 826+ 916B
 827+ 916B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 916C 7E               ld a,(hl)
 829+ 916D 2B               dec hl
 830+ 916E E6 01            and 1
 831+ 9170 28 4D            jr z,10F
 832+ 9172
 833+ 9172              ;! La colisión se produce con Amadeus???
 834+ 9172              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9172
 836+ 9172 E5               push hl
 837+ 9173
 838+ 9173 06 04            ld b,4
 839+ 9175 23           16 inc hl
 840+ 9176 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9178
 842+ 9178 CD 9E 8C         call Extrae_address
 843+ 917B CD 4E 9D         call Genera_coordenadas_disparo
 844+ 917E
 845+ 917E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 917F FE 16            cp $16
 847+ 9181 38 2A            jr c,15F
 848+ 9183
 849+ 9183
 850+ 9183              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9183
 852+ 9183 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9184
 854+ 9184              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9184
 856+ 9184
 857+ 9184 2A 4C 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9187
 859+ 9187              ; Coordenada X de Amadeus en D.
 860+ 9187
 861+ 9187 7D               ld a,l
 862+ 9188 E6 1F            and $1F
 863+ 918A 57               ld d,a
 864+ 918B
 865+ 918B 21 A6 85         ld hl,Amadeus_db+8
 866+ 918E 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 918F
 868+ 918F 21 46 89         ld hl,Coordenadas_X_Amadeus
 869+ 9192 CD 67 92         call Guarda_coordenadas_X
 870+ 9195
 871+ 9195 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9196
 873+ 9196              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9196
 875+ 9196 06 02            ld b,2
 876+ 9198 C5           20 push bc
 877+ 9199
 878+ 9199 06 03            ld b,3
 879+ 919B 21 46 89         ld hl,Coordenadas_X_Amadeus
 880+ 919E 7E           18 ld a,(hl)
 881+ 919F BA               cp d
 882+ 91A0 20 04            jr nz,17F
 883+ 91A2
 884+ 91A2              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91A2
 886+ 91A2 C1               pop bc
 887+ 91A3 E1               pop hl
 888+ 91A4 18 0D            jr 14F
 889+ 91A6
 890+ 91A6 23           17 inc hl
 891+ 91A7 10 F5            djnz 18B
 892+ 91A9
 893+ 91A9 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91AA
 895+ 91AA C1               pop bc
 896+ 91AB 10 EB            djnz 20B
 897+ 91AD
 898+ 91AD
 899+ 91AD              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91AD              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91AD
 902+ 91AD E1           15 pop hl
 903+ 91AE 23               inc hl
 904+ 91AF 35               dec (hl)
 905+ 91B0 2B               dec hl
 906+ 91B1 18 0C            jr 10F
 907+ 91B3
 908+ 91B3              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91B3              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91B3
 911+ 91B3 E5           14 push hl
 912+ 91B4 CD 5C 92         call Elimina_disparo_de_base_de_datos
 913+ 91B7 21 41 89         ld hl,Impacto2
 914+ 91BA CB CE            set 1,(hl)
 915+ 91BC E1               pop hl
 916+ 91BD 18 06            jr 12F
 917+ 91BF
 918+ 91BF              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91BF
 920+ 91BF CD 06 92     10 call Mueve_disparo
 921+ 91C2 CD DD 91         call foto_disparo_a_borrar
 922+ 91C5 C1           12 pop bc
 923+ 91C6
 924+ 91C6 18 04            jr 8F
 925+ 91C8
 926+ 91C8              ; ----- ----- ----- ----- ----- -----
 927+ 91C8
 928+ 91C8 ED 42        4 sbc hl,bc
 929+ 91CA 28 0A            jr z,6F
 930+ 91CC
 931+ 91CC 2A 3D 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91CF 23               inc hl
 933+ 91D0 23               inc hl
 934+ 91D1 22 3D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91D4 18 8A            jr 5B
 936+ 91D6
 937+ 91D6 CD 18 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91D9 CD A3 92         call Limpia_Coordenadas_X
 939+ 91DC C9               ret
 940+ 91DD
 941+ 91DD              ; ------------------------------------------------------------------
 942+ 91DD
 943+ 91DD              foto_disparo_a_borrar
 944+ 91DD
 945+ 91DD 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91DE A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91DF C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91E0
 949+ 91E0 E5               push hl
 950+ 91E1 23               inc hl
 951+ 91E2 23               inc hl
 952+ 91E3 ED 73 14 89      ld (Stack),sp
 953+ 91E7 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91E8 FD E1            pop iy
 955+ 91EA DD E1            pop ix
 956+ 91EC E1               pop hl
 957+ 91ED ED 7B 14 89      ld sp,(Stack)
 958+ 91F1 3A 03 89         ld a,(Ctrl_1)
 959+ 91F4 CB C7            set 0,a
 960+ 91F6 32 03 89         ld (Ctrl_1),a
 961+ 91F9 CD A0 7F         call Guarda_foto_registros
 962+ 91FC 3A 03 89         ld a,(Ctrl_1)
 963+ 91FF CB 87            res 0,a
 964+ 9201 32 03 89         ld (Ctrl_1),a
 965+ 9204 E1               pop hl
 966+ 9205 C9               ret
 967+ 9206
 968+ 9206              ;---------------------------------------------------
 969+ 9206              ;
 970+ 9206              ;   18/07/23
 971+ 9206              ;
 972+ 9206
 973+ 9206              Mueve_disparo
 974+ 9206
 975+ 9206              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9206              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9206              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9206
 979+ 9206 E5               push hl
 980+ 9207
 981+ 9207 7E               ld a,(hl)
 982+ 9208
 983+ 9208 06 04            ld b,4
 984+ 920A 23           1 inc hl
 985+ 920B 10 FD            djnz 1B
 986+ 920D
 987+ 920D              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 920D
 989+ 920D CD 9E 8C         call Extrae_address
 990+ 9210
 991+ 9210 E6 01            and 1
 992+ 9212 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9214
 994+ 9214              ; Disparo hacia arriba, (Amadeus).
 995+ 9214
 996+ 9214              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9214              ; _ de la dificultad.
 998+ 9214
 999+ 9214 CD 94 96         call PreviousScan
1000+ 9217 CD 94 96         call PreviousScan
1001+ 921A CD 94 96         call PreviousScan
1002+ 921D CD 94 96         call PreviousScan
1003+ 9220
1004+ 9220              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9220
1006+ 9220 7C               ld a,h
1007+ 9221 FE 40            cp $40
1008+ 9223 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9225
1010+ 9225              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9225
1012+ 9225 EB               ex de,hl
1013+ 9226 06 04            ld b,4
1014+ 9228 2B           6 dec hl
1015+ 9229 10 FD            djnz 6B
1016+ 922B
1017+ 922B CD 5C 92         call Elimina_disparo_de_base_de_datos
1018+ 922E E1               pop hl
1019+ 922F 18 10            jr 7F
1020+ 9231
1021+ 9231              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9231              ; HL contiene el puntero de impresión del disparo.
1023+ 9231              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9231
1025+ 9231 D5           3 push de
1026+ 9232 C5               push bc
1027+ 9233
1028+ 9233 CD FB 8F         call Comprueba_Colision
1029+ 9236
1030+ 9236              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9236
1032+ 9236 78               ld a,b
1033+ 9237
1034+ 9237 C1               pop bc
1035+ 9238 D1               pop de
1036+ 9239
1037+ 9239 EB               ex de,hl
1038+ 923A
1039+ 923A 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 923B 23               inc hl                                      ; _ movimiento.
1041+ 923C 72               ld (hl),d
1042+ 923D
1043+ 923D E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 923E
1045+ 923E 23               inc hl                                      ; _ en curso.
1046+ 923F 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9240 2B               dec hl
1048+ 9241
1049+ 9241 C9           7 ret
1050+ 9242
1051+ 9242              ; Disparo hacia abajo, (Entidad).
1052+ 9242
1053+ 9242 3A 4E 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9245 47               ld b,a
1055+ 9246
1056+ 9246 CD 85 96     4 call NextScan
1057+ 9249 10 FB            djnz 4B
1058+ 924B
1059+ 924B              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 924B
1061+ 924B 7C               ld a,h
1062+ 924C FE 58            cp $58
1063+ 924E 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9250
1065+ 9250 EB               ex de,hl
1066+ 9251 06 04            ld b,4
1067+ 9253 2B           5 dec hl
1068+ 9254 10 FD            djnz 5B
1069+ 9256
1070+ 9256 CD 5C 92         call Elimina_disparo_de_base_de_datos
1071+ 9259 E1               pop hl
1072+ 925A 18 E5            jr 7B
1073+ 925C
1074+ 925C              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 925C
1076+ 925C 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 925F AF               xor a
1078+ 9260 77               ld (hl),a
1079+ 9261 54               ld d,h
1080+ 9262 5D               ld e,l
1081+ 9263 13               inc de
1082+ 9264 ED B0            ldir
1083+ 9266 C9               ret
1084+ 9267
1085+ 9267              ; -----------------------------------------------------------------
1086+ 9267              ;
1087+ 9267              ;   19/7/23
1088+ 9267              ;
1089+ 9267              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9267              ;
1091+ 9267              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9267              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9267              ;
1094+ 9267              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9267              ;
1096+ 9267              ;   INPUTS:
1097+ 9267              ;
1098+ 9267              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9267              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9267
1101+ 9267              ;   MODIFICA: A, HL, BC y DE.
1102+ 9267
1103+ 9267              Guarda_coordenadas_X
1104+ 9267
1105+ 9267 7B               ld a,e
1106+ 9268 A7               and a
1107+ 9269 20 04            jr nz,1F
1108+ 926B
1109+ 926B 06 02            ld b,2
1110+ 926D 18 02            jr 2F
1111+ 926F
1112+ 926F 06 03        1 ld b,3
1113+ 9271 72           2 ld (hl),d
1114+ 9272 23               inc hl
1115+ 9273 14               inc d
1116+ 9274 10 FB            djnz 2B
1117+ 9276
1118+ 9276 C9               ret
1119+ 9277
1120+ 9277              ; -----------------------------------------------------------------
1121+ 9277              ;
1122+ 9277              ;   12/04/23
1123+ 9277              ;
1124+ 9277
1125+ 9277 3A 41 89     Selector_de_impactos ld a,(Impacto2)
1126+ 927A A7               and a
1127+ 927B C8               ret z
1128+ 927C
1129+ 927C FE 04            cp 4
1130+ 927E 20 09            jr nz,1F
1131+ 9280
1132+ 9280
1133+ 9280              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9280
1135+ 9280 CD 9C 90         call Detecta_colision_nave_entidad
1136+ 9283
1137+ 9283 21 41 89         ld hl,Impacto2
1138+ 9286 CB 5E            bit 3,(hl)
1139+ 9288 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9289
1141+ 9289              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9289              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9289
1144+ 9289 21 41 89     1 ld hl,Impacto2
1145+ 928C CB 4E            bit 1,(hl)
1146+ 928E 28 07            jr z,2F
1147+ 9290
1148+ 9290 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9293 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9295 18 0B            jr 3F
1151+ 9297
1152+ 9297 21 41 89     2 ld hl,Impacto2
1153+ 929A CB 46            bit 0,(hl)
1154+ 929C C8               ret z
1155+ 929D
1156+ 929D              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 929D
1158+ 929D 21 03 89         ld hl,Ctrl_1
1159+ 92A0 CB D6            set 2,(hl)
1160+ 92A2
1161+ 92A2 C9           3 ret
1162+ 92A3
1163+ 92A3              ; -----------------------------------------------------------------
1164+ 92A3              ;
1165+ 92A3              ;   19/7/23
1166+ 92A3              ;
1167+ 92A3              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92A3
1169+ 92A3 AF           Limpia_Coordenadas_X xor a
1170+ 92A4 06 06            ld b,6
1171+ 92A6 21 46 89         ld hl,Coordenadas_X_Amadeus
1172+ 92A9 77           1 ld (hl),a
1173+ 92AA 23               inc hl
1174+ 92AB 10 FC            djnz 1B
1175+ 92AD C9               ret
1176+ 92AE
1177+ 92AE              ; -----------------------------------------------------------------
1178+ 92AE              ;
1179+ 92AE              ;   25/04/23
1180+ 92AE              ;
1181+ 92AE
1182+ 92AE              Determina_resultado_comparativa
1183+ 92AE
1184+ 92AE              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92AE              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92AE              ;
1187+ 92AE              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92AE              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92AE              ;
1190+ 92AE              ;   SBC HL,DE
1191+ 92AE
1192+ 92AE              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92AE              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92AE
1195+ 92AE              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92AE              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92AE
1198+ 92AE
1199+ 92AE 3A DA 88         ld a,(Cuad_objeto)
1200+ 92B1 FE 02            cp 2
1201+ 92B3 28 26            jr z,2F
1202+ 92B5 38 24            jr c,2F
1203+ 92B7
1204+ 92B7              ; Cuadrantes 3º y 4º
1205+ 92B7
1206+ 92B7 E6 01            and 1
1207+ 92B9 28 10            jr z,4F
1208+ 92BB
1209+ 92BB              ; Cuadrante 3º
1210+ 92BB
1211+ 92BB 7C               ld a,h
1212+ 92BC 06 00            ld b,0
1213+ 92BE
1214+ 92BE CD 49 93         call Compara_cositas_H3
1215+ 92C1
1216+ 92C1 04               inc b
1217+ 92C2 05               dec b
1218+ 92C3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92C4
1220+ 92C4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92C5 06 00            ld b,0
1222+ 92C7
1223+ 92C7 CD 5B 93         call Compara_cositas_L3
1224+ 92CA C9               ret
1225+ 92CB
1226+ 92CB              ; Cuadrante 4º
1227+ 92CB
1228+ 92CB 7C           4 ld a,h
1229+ 92CC 06 00            ld b,0
1230+ 92CE
1231+ 92CE CD 6D 93         call Compara_cositas_H4
1232+ 92D1
1233+ 92D1 04               inc b
1234+ 92D2 05               dec b
1235+ 92D3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92D4
1237+ 92D4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92D5 06 00            ld b,0
1239+ 92D7
1240+ 92D7 CD 83 93         call Compara_cositas_L4
1241+ 92DA C9               ret
1242+ 92DB
1243+ 92DB              ; Cuadrantes 1º y 2º.
1244+ 92DB
1245+ 92DB 28 10        2 jr z,3F
1246+ 92DD
1247+ 92DD              ; 1er Cuadrante
1248+ 92DD
1249+ 92DD 7C               ld a,h
1250+ 92DE 06 00            ld b,0
1251+ 92E0
1252+ 92E0 CD 21 93         call Compara_cositas_H1
1253+ 92E3
1254+ 92E3 04               inc b
1255+ 92E4 05               dec b
1256+ 92E5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92E6
1258+ 92E6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92E7 06 00            ld b,0
1260+ 92E9
1261+ 92E9 CD 37 93         call Compara_cositas_L1
1262+ 92EC C9               ret
1263+ 92ED
1264+ 92ED
1265+ 92ED              ; 2º Cuadrante
1266+ 92ED
1267+ 92ED 7C           3 ld a,h
1268+ 92EE 06 00            ld b,0
1269+ 92F0
1270+ 92F0 CD FD 92         call Compara_cositas_H2
1271+ 92F3
1272+ 92F3 04               inc b
1273+ 92F4 05               dec b
1274+ 92F5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92F6
1276+ 92F6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92F7 06 00            ld b,0
1278+ 92F9
1279+ 92F9 CD 0F 93         call Compara_cositas_L2
1280+ 92FC C9               ret
1281+ 92FD
1282+ 92FD A7           Compara_cositas_H2 and a
1283+ 92FE 28 0D            jr z,1F
1284+ 9300              ;    cp $fd
1285+ 9300              ;    jr z,1F
1286+ 9300              ;    cp $fe
1287+ 9300              ;    jr z,1F
1288+ 9300 FE FF            cp $ff
1289+ 9302 28 09            jr z,1F
1290+ 9304 FE 01            cp $01
1291+ 9306 28 05            jr z,1F
1292+ 9308 FE 02            cp $02
1293+ 930A 28 01            jr z,1F
1294+ 930C C0               ret nz
1295+ 930D 04           1 inc b
1296+ 930E C9               ret
1297+ 930F
1298+ 930F A7           Compara_cositas_L2 and a
1299+ 9310 28 0D            jr z,1F
1300+ 9312              ;    cp $fd
1301+ 9312              ;    jr z,1F
1302+ 9312 FE FE            cp $fe
1303+ 9314 28 09            jr z,1F
1304+ 9316 FE FF            cp $ff
1305+ 9318 28 05            jr z,1F
1306+ 931A FE 01            cp $01
1307+ 931C 28 01            jr z,1F
1308+ 931E              ;    cp $02
1309+ 931E              ;    jr z,1F
1310+ 931E C0               ret nz
1311+ 931F 04           1 inc b
1312+ 9320 C9               ret
1313+ 9321
1314+ 9321 A7           Compara_cositas_H1 and a
1315+ 9322 28 11            jr z,1F
1316+ 9324              ;    cp $fd
1317+ 9324              ;    jr z,1F
1318+ 9324              ;    cp $fe
1319+ 9324              ;    jr z,1F
1320+ 9324 FE FF            cp $ff
1321+ 9326 28 0D            jr z,1F
1322+ 9328 FE 01            cp $01
1323+ 932A 28 09            jr z,1F
1324+ 932C FE 02            cp $02
1325+ 932E 28 05            jr z,1F
1326+ 9330 FE 03            cp $03
1327+ 9332 28 01            jr z,1F
1328+ 9334 C0               ret nz
1329+ 9335 04           1 inc b
1330+ 9336 C9               ret
1331+ 9337
1332+ 9337 A7           Compara_cositas_L1 and a
1333+ 9338 28 0D            jr z,1F
1334+ 933A              ;    cp $fd
1335+ 933A              ;    jr z,1F
1336+ 933A              ;    cp $fe
1337+ 933A              ;    jr z,1F
1338+ 933A              ;    cp $ff
1339+ 933A              ;    jr z,1F
1340+ 933A FE 01            cp $01
1341+ 933C 28 09            jr z,1F
1342+ 933E FE 02            cp $02
1343+ 9340 28 05            jr z,1F
1344+ 9342 FE 03            cp $03
1345+ 9344 28 01            jr z,1F
1346+ 9346 C0               ret nz
1347+ 9347 04           1 inc b
1348+ 9348 C9               ret
1349+ 9349
1350+ 9349 A7           Compara_cositas_H3 and a
1351+ 934A 28 0D            jr z,1F
1352+ 934C              ;    cp $fd
1353+ 934C              ;    jr z,1F
1354+ 934C FE FE            cp $fe
1355+ 934E 28 09            jr z,1F
1356+ 9350 FE FF            cp $ff
1357+ 9352 28 05            jr z,1F
1358+ 9354 FE 01            cp $01
1359+ 9356 28 01            jr z,1F
1360+ 9358              ;    cp $02
1361+ 9358              ;    jr z,1F
1362+ 9358              ;    cp $03
1363+ 9358              ;    jr z,1F
1364+ 9358 C0               ret nz
1365+ 9359 04           1 inc b
1366+ 935A C9               ret
1367+ 935B
1368+ 935B A7           Compara_cositas_L3 and a
1369+ 935C 28 0D            jr z,1F
1370+ 935E              ;    cp $fd
1371+ 935E              ;    jr z,1F
1372+ 935E              ;    cp $fe
1373+ 935E              ;    jr z,1F
1374+ 935E              ;    cp $ff
1375+ 935E              ;    jr z,1F
1376+ 935E FE 01            cp $01
1377+ 9360 28 09            jr z,1F
1378+ 9362 FE 02            cp $02
1379+ 9364 28 05            jr z,1F
1380+ 9366 FE 03            cp $03
1381+ 9368 28 01            jr z,1F
1382+ 936A C0               ret nz
1383+ 936B 04           1 inc b
1384+ 936C C9               ret
1385+ 936D
1386+ 936D A7           Compara_cositas_H4 and a
1387+ 936E 28 11            jr z,1F
1388+ 9370 FE FD            cp $fd
1389+ 9372 28 0D            jr z,1F
1390+ 9374 FE FE            cp $fe
1391+ 9376 28 09            jr z,1F
1392+ 9378 FE FF            cp $ff
1393+ 937A 28 05            jr z,1F
1394+ 937C FE 01            cp $01
1395+ 937E 28 01            jr z,1F
1396+ 9380              ;    cp $02
1397+ 9380              ;    jr z,1F
1398+ 9380              ;    cp $03
1399+ 9380              ;    jr z,1F
1400+ 9380 C0               ret nz
1401+ 9381 04           1 inc b
1402+ 9382 C9               ret
1403+ 9383
1404+ 9383 A7           Compara_cositas_L4 and a
1405+ 9384 28 0D            jr z,1F
1406+ 9386              ;    cp $fd
1407+ 9386              ;    jr z,1F
1408+ 9386 FE FE            cp $fe
1409+ 9388 28 09            jr z,1F
1410+ 938A FE FF            cp $ff
1411+ 938C 28 05            jr z,1F
1412+ 938E FE 01            cp $01
1413+ 9390 28 01            jr z,1F
1414+ 9392              ;    cp $02
1415+ 9392              ;    jr z,1F
1416+ 9392              ;    cp $03
1417+ 9392              ;    jr z,1F
1418+ 9392 C0               ret nz
1419+ 9393 04           1 inc b
1420+ 9394 C9               ret
# file closed: Disparo.asm
1691  9395              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9395              ; ******************************************************************************************************************************************************************************************
   2+ 9395              ;
   3+ 9395              ; 26/06/23
   4+ 9395              ;
   5+ 9395              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9395
   7+ 9395 CD 79 96     Draw call Prepara_draw
   8+ 9398 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9399 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 939A 28 05        	jr z,2F
  11+ 939C
  12+ 939C 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 939F 18 0C        	jr 1F
  14+ 93A1
  15+ 93A1 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93A4 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93A7 CD 36 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93AA              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93AA CD DB 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93AD
  21+ 93AD 3A F0 88     1 ld a,(Ctrl_0)
  22+ 93B0 CB 6F        	bit 5,a
  23+ 93B2 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93B4
  25+ 93B4 CD CC 93     	call Comprueba_limite_horizontal
  26+ 93B7 CD 5C 94     	call Comprueba_limite_vertical
  27+ 93BA
  28+ 93BA              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93BA              ; -----------------------
  30+ 93BA              ; -----------------------
  31+ 93BA              ; -----------------------
  32+ 93BA
  33+ 93BA CD A9 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93BD CD E0 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93C0 CD 3F 96     	call Define_rutina_de_impresion
  36+ 93C3
  37+ 93C3 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93C6 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93C8 32 F0 88     	ld (Ctrl_0),a
  40+ 93CB
  41+ 93CB C9           	ret
  42+ 93CC
  43+ 93CC              ; *******************************************************************************************************************************************************************************************
  44+ 93CC              ;	21/01/23
  45+ 93CC              ;
  46+ 93CC              ; 	Comprueba_limite_horizontal.
  47+ 93CC              ;
  48+ 93CC              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93CC              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93CC              ;
  51+ 93CC              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93CC              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93CC              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93CC              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93CC
  56+ 93CC
  57+ 93CC
  58+ 93CC 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93CF CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93D1 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93D3 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93D5 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93D8 18 09            jr 6F
  64+ 93DA CB 5F        1 bit 3,a
  65+ 93DC 28 0A            jr z,2F
  66+ 93DE E6 F7            and $f7
  67+ 93E0 32 F0 88         ld (Ctrl_0),a
  68+ 93E3 CD 36 95     6 call Inicializacion
  69+ 93E6 18 5B            jr 5F
  70+ 93E8 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93E9
  72+ 93E9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93E9              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93E9
  75+ 93E9 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93EA 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93ED CD 98 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93F0 67           	ld h,a
  79+ 93F1 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93F2 CD 98 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93F5 67           	ld h,a
  82+ 93F6 A7           	and a
  83+ 93F7 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93F9 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93FA 3A DA 88     	ld a,(Cuad_objeto)
  86+ 93FD FE 02        	cp 2
  87+ 93FF 38 1E        	jr c,3F
  88+ 9401 28 1C        	jr z,3F
  89+ 9403 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9404 28 23            jr z,7F
  91+ 9406 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9408 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 940A E1           	pop hl
  94+ 940B
  95+ 940B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 940B              ; _para indicar con E="2" en caso necesario.
  97+ 940B
  98+ 940B E5               push hl
  99+ 940C C5               push bc
 100+ 940D CD 98 99     	call calcula_tercio
 101+ 9410 FE 01        	cp 1
 102+ 9412 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9414 CD 44 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9417 28 26            jr z,9F
 105+ 9419 38 24            jr c,9F
 106+ 941B 1E 00        11 ld e,0
 107+ 941D 18 22            jr 8F
 108+ 941F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9420 28 07        	jr z, 7F
 110+ 9422 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9424 1E 00         	ld e,0
 112+ 9426 E1           	pop hl
 113+ 9427 18 04        	jr 4F
 114+ 9429 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 942B 18 15            jr 10F
 116+ 942D
 117+ 942D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 942D              ; _para indicar con E="2" en caso necesario.
 119+ 942D
 120+ 942D E5           4 push hl
 121+ 942E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 942F CD 98 99     	call calcula_tercio
 123+ 9432 FE 01        	cp 1
 124+ 9434 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9436 CD 44 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9439 28 04            jr z,9F
 127+ 943B 30 02            jr nc,9F
 128+ 943D 18 02        	jr 8F
 129+ 943F 1E 02        9 ld e,2
 130+ 9441 C1           8 pop bc
 131+ 9442 E1           10 pop hl
 132+ 9443 C9           5 ret
 133+ 9444
 134+ 9444              ; --------------------
 135+ 9444              ;
 136+ 9444              ; 25/08/22
 137+ 9444
 138+ 9444 CD 98 99     Comprueba_centro call calcula_tercio
 139+ 9447 67               ld h,a
 140+ 9448 08           	ex af,af
 141+ 9449 FE 02        	cp 2
 142+ 944B 38 07        	jr c,1F
 143+ 944D 28 05        	jr z,1F
 144+ 944F 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9452 18 03        	jr 2F
 146+ 9454 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9457 08           2 ex af,af
 148+ 9458 A7               and a
 149+ 9459 ED 42            sbc hl,bc
 150+ 945B C9               ret
 151+ 945C
 152+ 945C              ; *********************************************************************************************************************************************************************************************
 153+ 945C              ;
 154+ 945C              ;   16/8/22
 155+ 945C              ;
 156+ 945C              ;	Comprueba_limite_vertical
 157+ 945C              ;
 158+ 945C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 945C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 945C              ;
 161+ 945C
 162+ 945C 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 945F 7D           	ld a,l
 164+ 9460 E6 1F        	and $1F
 165+ 9462 57           	ld d,a
 166+ 9463 3A 00 89     	ld a,(Limite_vertical)
 167+ 9466 BA           	cp d 											; Límite - Posición.
 168+ 9467 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9468 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 946B CB 47        	bit 0,a
 171+ 946D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 946F
 173+ 946F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 946F
 175+ 946F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9470 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9472
 178+ 9472              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9472              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9472
 181+ 9472 3A CC 88         ld a,(Coordenada_X)
 182+ 9475 16 0F            ld d,Centro_izquierda
 183+ 9477 A7               and a
 184+ 9478 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9479 28 1E            jr z,3F
 186+ 947B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 947D              ;                                                    ; _salimos sin modificar nada.
 188+ 947D 18 0E            jr 2F
 189+ 947F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9480 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9482
 192+ 9482              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9482              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9482
 195+ 9482 3A CC 88         ld a,(Coordenada_X)
 196+ 9485 16 10            ld d,Centro_derecha
 197+ 9487 A7               and a
 198+ 9488 92               sub d
 199+ 9489 28 0E            jr z,3F
 200+ 948B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 948D              ;                                                    ; _salimos sin modificar nada.
 202+ 948D CB 43        2 bit 0,e
 203+ 948F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9491 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9492 CD 26 95         call Modificaccionne
 206+ 9495 C1           	pop bc
 207+ 9496 CD 36 95         call Inicializacion
 208+ 9499 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 949A
 210+ 949A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 949A
 212+ 949A C5           4 push bc
 213+ 949B 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 949E 0A           	ld a,(bc)
 215+ 949F 3D           	dec a
 216+ 94A0 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94A1 7D           	ld a,l
 218+ 94A2 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94A3 CB 47        	bit 0,a
 220+ 94A5 28 03        	jr z,5F
 221+ 94A7 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94A8 18 2E        	jr 7F
 223+ 94AA
 224+ 94AA              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94AA
 226+ 94AA 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94AB F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94AC 3A F0 88     	ld a,(Ctrl_0)
 229+ 94AF CB 4F        	bit 1,a
 230+ 94B1 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94B3 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94B4
 233+ 94B4              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94B4
 235+ 94B4 1C               inc e
 236+ 94B5 1D               dec e
 237+ 94B6 20 07            jr nz,12F
 238+ 94B8 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94B9 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94BA 22 C8 88     	ld (Posicion_actual),hl
 241+ 94BD 18 44        13 jr 9F
 242+ 94BF CB 43        12 bit 0,e
 243+ 94C1 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94C3              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94C3 C1           	pop bc
 246+ 94C4 18 D3        	jr 3B
 247+ 94C6 80           14 add b
 248+ 94C7 6F               ld l,a
 249+ 94C8 22 C8 88     	ld (Posicion_actual),hl
 250+ 94CB CD 26 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94CE 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94D0 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94D2 32 F0 88         ld (Ctrl_0),a
 254+ 94D5 F1           	pop af
 255+ 94D6 18 2B        	jr 9F
 256+ 94D8
 257+ 94D8              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94D8
 259+ 94D8 F5           7 push af
 260+ 94D9 3A F0 88     	ld a,(Ctrl_0)
 261+ 94DC CB 47        	bit 0,a
 262+ 94DE 20 1D        	jr nz,8F
 263+ 94E0 F1           	pop af
 264+ 94E1
 265+ 94E1              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94E1
 267+ 94E1 1C           	inc e
 268+ 94E2 1D               dec e
 269+ 94E3 20 07            jr nz,10F
 270+ 94E5 90           	sub b
 271+ 94E6 6F               ld l,a
 272+ 94E7 22 C8 88     	ld (Posicion_actual),hl
 273+ 94EA 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94EC              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94EC CB 43        10 bit 0,e
 276+ 94EE 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94F0              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94F0 C1           	pop bc
 279+ 94F1 18 A6        	jr 3B
 280+ 94F3 90           16 sub b
 281+ 94F4 6F               ld l,a
 282+ 94F5 22 C8 88     	ld (Posicion_actual),hl
 283+ 94F8 CD 26 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94FB 18 06            jr 9F
 285+ 94FD E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94FF 32 F0 88         ld (Ctrl_0),a
 287+ 9502 F1           	pop af
 288+ 9503 C1           9 pop bc
 289+ 9504 1E 00        	ld e,0
 290+ 9506 CD 36 95         call Inicializacion
 291+ 9509 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 950A 08           	ex af,af
 293+ 950B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 950C 18 8B            jr 3B
 295+ 950E
 296+ 950E              ; --------------------
 297+ 950E
 298+ 950E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9510 CD 94 96     1 call PreviousScan
 300+ 9513 10 FB            djnz 1B
 301+ 9515 22 C8 88     	ld (Posicion_actual),hl
 302+ 9518 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9519 C9           	ret
 304+ 951A
 305+ 951A              ; --------------------
 306+ 951A
 307+ 951A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 951C CD 85 96     1 call NextScan
 309+ 951F 10 FB            djnz 1B
 310+ 9521 22 C8 88     	ld (Posicion_actual),hl
 311+ 9524 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9525 C9           	ret
 313+ 9526
 314+ 9526              ; --------------------
 315+ 9526              ;
 316+ 9526              ;	22/01/23
 317+ 9526              ;
 318+ 9526              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9526              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9526              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9526
 322+ 9526
 323+ 9526              Modificaccionne
 324+ 9526
 325+ 9526 3A DA 88     	ld a,(Cuad_objeto)
 326+ 9529 FE 02        	cp 2
 327+ 952B CC 0E 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 952E DC 0E 95         call c,Modifica_Pos_actual
 329+ 9531 C8           	ret z
 330+ 9532 CD 1A 95         call Modifica_Pos_actual2
 331+ 9535 C9               ret
 332+ 9536
 333+ 9536              ; *************************************************************************************************************************************************************************************************
 334+ 9536              ;
 335+ 9536              ;	13/8/22
 336+ 9536              ;
 337+ 9536              ;	Inicializacion
 338+ 9536              ;
 339+ 9536              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9536              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9536              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9536              ;
 343+ 9536              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9536              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9536              ;	_ desaparece/aparece.
 346+ 9536
 347+ 9536              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9536              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9536              ;
 350+ 9536              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9536              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9536              ; 		   [E] ="0"
 353+ 9536
 354+ 9536              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9536
 356+ 9536 CD 98 99     Inicializacion call calcula_tercio
 357+ 9539 28 36        	jr z,primit
 358+ 953B E6 02        	and 2
 359+ 953D 20 07        	jr nz,segmit
 360+ 953F 7D           	ld a,l
 361+ 9540 FE 7F        	cp $7f
 362+ 9542 38 2D        	jr c,primit
 363+ 9544 28 2B        	jr z,primit
 364+ 9546 CD A3 95     segmit call column
 365+ 9549 38 13        	jr c,tercuad
 366+ 954B 3E 04        cuarcuad ld a,4
 367+ 954D 32 DA 88     	ld (Cuad_objeto),a
 368+ 9550 21 20 48     	ld hl,$4820
 369+ 9553 22 FE 88     	ld (Limite_horizontal),hl
 370+ 9556 21 00 89     	ld hl,Limite_vertical
 371+ 9559 36 0D        	ld (hl),$0d
 372+ 955B 08           	ex af,af
 373+ 955C 18 3C        	jr 1F
 374+ 955E              tercuad
 375+ 955E 3E 03        	ld a,3
 376+ 9560 32 DA 88     	ld (Cuad_objeto),a
 377+ 9563 21 20 48     	ld hl,$4820
 378+ 9566 22 FE 88     	ld (Limite_horizontal),hl
 379+ 9569 21 00 89     	ld hl,Limite_vertical
 380+ 956C 36 12        	ld (hl),$12
 381+ 956E 08           	ex af,af
 382+ 956F 18 29        	jr 1F
 383+ 9571 CD A3 95     primit call column
 384+ 9574 38 13        	jr c, primcuad
 385+ 9576              segcuad
 386+ 9576 3E 02        	ld a,2
 387+ 9578 32 DA 88     	ld (Cuad_objeto),a
 388+ 957B 21 C0 4F     	ld hl,$4fc0
 389+ 957E 22 FE 88     	ld (Limite_horizontal),hl
 390+ 9581 21 00 89     	ld hl,Limite_vertical
 391+ 9584 36 0D        	ld (hl),$0d
 392+ 9586 08           	ex af,af
 393+ 9587 18 11        	jr 1F
 394+ 9589              primcuad
 395+ 9589 3E 01        	ld a,1
 396+ 958B 32 DA 88     	ld (Cuad_objeto),a
 397+ 958E 21 C0 4F     	ld hl,$4fc0
 398+ 9591 22 FE 88     	ld (Limite_horizontal),hl
 399+ 9594 21 00 89     	ld hl,Limite_vertical
 400+ 9597 36 12        	ld (hl),$12
 401+ 9599 08           	ex af,af
 402+ 959A CD 23 9D     1 call Genera_coordenadas
 403+ 959D 21 F0 88     	ld hl,Ctrl_0
 404+ 95A0 CB EE        	set 5,(hl)
 405+ 95A2 C9           	ret
 406+ 95A3
 407+ 95A3              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95A3
 409+ 95A3              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95A3              ;
 411+ 95A3              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95A3
 413+ 95A3 7D           column ld a,l
 414+ 95A4 E6 1F        	and $1f
 415+ 95A6 FE 10         	cp $10
 416+ 95A8 C9            	ret
 417+ 95A9
 418+ 95A9              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95A9              ;
 420+ 95A9              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95A9              ;
 422+ 95A9              ; 14/12/22
 423+ 95A9              ;
 424+ 95A9              ;	Modifica: A y BC.
 425+ 95A9
 426+ 95A9 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95AC E6 01        	and 1
 428+ 95AE 28 17        	jr z,1F
 429+ 95B0
 430+ 95B0              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95B0
 432+ 95B0 3A CC 88     	ld a,(Coordenada_X)
 433+ 95B3 47           	ld b,a
 434+ 95B4 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95B5 79           	ld a,c
 436+ 95B6 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95B7 38 08        	jr c,2F
 438+ 95B9 47           	ld b,a
 439+ 95BA 79           	ld a,c
 440+ 95BB 90           	sub b
 441+ 95BC 32 FD 88     	ld (Columnas),a
 442+ 95BF 18 1B        	jr 4F
 443+ 95C1 79           2 ld a,c
 444+ 95C2 32 FD 88     	ld (Columnas),a
 445+ 95C5 18 15        	jr 4F
 446+ 95C7
 447+ 95C7              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95C7
 449+ 95C7 3A CC 88     1 ld a,(Coordenada_X)
 450+ 95CA 81           	add c
 451+ 95CB 3D           	dec a
 452+ 95CC D6 1F        	sub $1f
 453+ 95CE 38 08        	jr c,3F
 454+ 95D0 47           	ld b,a
 455+ 95D1 79           	ld a,c
 456+ 95D2 90           	sub b
 457+ 95D3 32 FD 88     	ld (Columnas),a
 458+ 95D6 18 04        	jr 4F
 459+ 95D8 79           3 ld a,c
 460+ 95D9 32 FD 88     	ld (Columnas),a
 461+ 95DC D9           4 exx
 462+ 95DD 4F           	ld c,a
 463+ 95DE D9           	exx
 464+ 95DF C9            ret
 465+ 95E0
 466+ 95E0              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95E0              ;
 468+ 95E0              ;   19/7/23
 469+ 95E0              ;
 470+ 95E0              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95E0              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95E0              ;
 473+ 95E0              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95E0              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95E0              ;
 476+ 95E0              ;	DESTRUYE: HL,B Y A.
 477+ 95E0
 478+ 95E0 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95E3 FE 02        	cp 2
 480+ 95E5 38 18        	jr c,1F
 481+ 95E7 28 16        	jr z,1F
 482+ 95E9 E6 01        	and 1
 483+ 95EB 28 0D        	jr z,3F
 484+ 95ED
 485+ 95ED              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95ED
 487+ 95ED CD 33 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95F0
 489+ 95F0 7D           9 ld a,l
 490+ 95F1 E6 1F        	and $1f
 491+ 95F3 28 2A        	jr z,7F
 492+ 95F5 2B           	dec hl
 493+ 95F6 10 F8        	djnz 9B
 494+ 95F8 18 25        	jr 7F
 495+ 95FA
 496+ 95FA              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95FA
 498+ 95FA 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 95FD 18 20        	jr 7F
 500+ 95FF
 501+ 95FF 28 14        1 jr z,2F
 502+ 9601
 503+ 9601              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9601
 505+ 9601 CD 33 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9604
 507+ 9604 7D           4 ld a,l
 508+ 9605 E6 1F        	and $1f
 509+ 9607 28 03        	jr z,6F
 510+ 9609 2B           	dec hl
 511+ 960A 10 F8        	djnz 4B
 512+ 960C 06 0F        6 ld b,15
 513+ 960E CD 94 96     5 call PreviousScan
 514+ 9611 10 FB        	djnz 5B
 515+ 9613 18 0A        	jr 7F
 516+ 9615
 517+ 9615              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9615
 519+ 9615 CD 33 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9618 06 0F        	ld b,15
 521+ 961A CD 94 96     8 call PreviousScan
 522+ 961D 10 FB        	djnz 8B
 523+ 961F
 524+ 961F E5           7 push hl
 525+ 9620 DD E1        	pop ix
 526+ 9622
 527+ 9622 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 9625 E5           	push hl
 529+ 9626 FD E1        	pop iy
 530+ 9628
 531+ 9628              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9628
 533+ 9628 3A F0 88     	ld a,(Ctrl_0)
 534+ 962B CB 77        	bit 6,a
 535+ 962D C8           	ret z
 536+ 962E
 537+ 962E              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 962E              ; _ entidad / Amadeus´.
 539+ 962E
 540+ 962E DD 22 4C 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9632
 542+ 9632 C9           	ret
 543+ 9633
 544+ 9633              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9633              ;
 546+ 9633              ;	2/1/23
 547+ 9633              ;
 548+ 9633              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9633              ;
 550+ 9633              ;	Tras esta rutina tenemos:
 551+ 9633              ;
 552+ 9633              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9633              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9633              ;
 555+ 9633              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9633
 557+ 9633 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 9636 3A FD 88     	ld a,(Columnas)
 559+ 9639 3D           	dec a
 560+ 963A 20 01        	jr nz,1F
 561+ 963C 3C           	inc a
 562+ 963D 47           1 ld b,a
 563+ 963E C9           	ret
 564+ 963F
 565+ 963F              ; --------------------------------------------------------------------------------------------------------------------
 566+ 963F              ;
 567+ 963F              ;	3/1/23
 568+ 963F              ;
 569+ 963F              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 963F              ;
 571+ 963F              ;	Destruye: A,B,HL y DE.
 572+ 963F
 573+ 963F              Define_rutina_de_impresion
 574+ 963F
 575+ 963F 3A C7 88     	ld a,(Columns)
 576+ 9642 47           	ld b,a
 577+ 9643 3A FD 88     	ld a,(Columnas)
 578+ 9646 B8           	cp b
 579+ 9647 20 0D        	jr nz,2f
 580+ 9649
 581+ 9649              ;	La entidad se imprime entera.
 582+ 9649
 583+ 9649 21 68 97     	ld hl, Indice_entidades_completas
 584+ 964C E6 01        	and 1
 585+ 964E 28 02        	jr z,1F
 586+ 9650
 587+ 9650 23           	inc hl
 588+ 9651 23           	inc hl
 589+ 9652
 590+ 9652 CD 9E 8C     1 call Extrae_address
 591+ 9655 C9           	ret		;	ret
 592+ 9656
 593+ 9656              ;	La entidad no se imprime entera en pantalla.
 594+ 9656
 595+ 9656 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 9659 E6 01        	and 1
 597+ 965B 28 17        	jr z,3F
 598+ 965D
 599+ 965D              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 965D
 601+ 965D 21 6C 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9660 3A C7 88     4 ld a,(Columns)
 603+ 9663 E6 01        	and 1
 604+ 9665 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9667
 606+ 9667 23           	inc hl
 607+ 9668 23           	inc hl
 608+ 9669
 609+ 9669 3A FD 88     	ld a,(Columnas)
 610+ 966C E6 01        	and 1
 611+ 966E 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9670
 613+ 9670 23           	inc hl
 614+ 9671 23           	inc hl
 615+ 9672
 616+ 9672 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9674
 618+ 9674 21 72 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9677 18 E7        	jr 4B
 620+ 9679
 621+ 9679              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9679              ;
 623+ 9679              ;	Prepara_draw
 624+ 9679              ;
 625+ 9679              ;	Es una rutina de carga.
 626+ 9679              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9679              ;
 628+ 9679              ;	FUNCIONAMIENTO:
 629+ 9679              ;
 630+ 9679              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9679              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9679              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9679              ;
 634+ 9679              ;	DESTRUYE:
 635+ 9679              ;
 636+ 9679              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9679
 638+ 9679 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 967C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 967D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 967E 4E           	ld c,(hl)
 642+ 967F 2A C8 88     	ld hl,(Posicion_actual)
 643+ 9682 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9684 C9           	ret
 645+ 9685
 646+ 9685              ;----------------------------------------------------------------------------------------------------------------
 647+ 9685              ;
 648+ 9685              ;	5/08/22
 649+ 9685              ;
 650+ 9685              ;   NextScan.
 651+ 9685              ;
 652+ 9685              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9685              ;
 654+ 9685              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9685              ;
 656+ 9685              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9685              ;
 658+ 9685              ;       DESTRUIDOS: AF y HL !!!
 659+ 9685              ;
 660+ 9685              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9685              ;
 662+ 9685
 663+ 9685 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9686 7C               ld a,h
 665+ 9687 E6 07            and 7
 666+ 9689 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 968A
 668+ 968A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 968B C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 968D 6F               ld l,a
 671+ 968E D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 968F
 673+ 968F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9690 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9692 67               ld h,a
 676+ 9693 C9               ret
 677+ 9694
 678+ 9694              ;----------------------------------------------------------------------------------------------------------------
 679+ 9694              ;
 680+ 9694              ;	5/08/22
 681+ 9694              ;
 682+ 9694              ;   PreviousScan.
 683+ 9694              ;
 684+ 9694              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9694              ;
 686+ 9694              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9694              ;
 688+ 9694              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9694              ;
 690+ 9694              ;       DESTRUIDOS: AF y HL !!!
 691+ 9694              ;
 692+ 9694              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9694              ;
 694+ 9694
 695+ 9694 7C           PreviousScan ld a,h
 696+ 9695 25               dec h               ; Dec H.
 697+ 9696 E6 07            and 7
 698+ 9698 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9699
 700+ 9699 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 969A D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 969C 6F               ld l,a
 703+ 969D D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 969E
 705+ 969E 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 969F C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96A1 67               ld h,a
 708+ 96A2 C9               ret
 709+ 96A3
 710+ 96A3              ; -----------------------------------------------------------------------------------
 711+ 96A3              ;
 712+ 96A3              ;	31/7/23
 713+ 96A3              ;
 714+ 96A3              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96A3              ;	Extrae fotos de Album_de_fotos.
 716+ 96A3
 717+ 96A3              Extrae_foto_entidades
 718+ 96A3
 719+ 96A3 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96A6 7E           	ld a,(hl)
 721+ 96A7 A7           	and a
 722+ 96A8 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96A9
 724+ 96A9 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96AC A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96AD C8           	ret z
 727+ 96AE
 728+ 96AE              ; -----------------------------------
 729+ 96AE
 730+ 96AE ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96B2 31 00 70     	ld sp,Album_de_fotos
 732+ 96B5
 733+ 96B5 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96B7 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96B8 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96B9
 737+ 96B9 ED 73 16 89  	ld (Stack_2),sp
 738+ 96BD ED 7B 14 89  	ld sp,(Stack)
 739+ 96C1
 740+ 96C1              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96C1
 742+ 96C1 3E CD        	ld a,$cd
 743+ 96C3 32 CB 96     	ld (Imprime),a
 744+ 96C6 EB           	ex de,hl
 745+ 96C7 22 CC 96     	ld (Imprime+1),hl
 746+ 96CA EB           	ex de,hl
 747+ 96CB
 748+ 96CB              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96CB
 750+ 96CB 00 00 00     Imprime db 0,0,0
 751+ 96CE
 752+ 96CE ED 73 14 89  	ld (Stack),sp
 753+ 96D2
 754+ 96D2 3A 0F 89     	ld a,(Numero_de_malotes)
 755+ 96D5 3D           	dec a
 756+ 96D6 28 09        	jr z,1F
 757+ 96D8 32 0F 89      	ld (Numero_de_malotes),a
 758+ 96DB
 759+ 96DB ED 7B 16 89  	ld sp,(Stack_2)
 760+ 96DF 18 D4        	jr 2B
 761+ 96E1
 762+ 96E1 AF           1 xor a
 763+ 96E2 32 16 89     	ld (Stack_2),a
 764+ 96E5
 765+ 96E5 C9           	ret
 766+ 96E6
 767+ 96E6              ; -----------------------------------------------------------------------------------
 768+ 96E6              ;
 769+ 96E6              ;	28/2/23
 770+ 96E6              ;
 771+ 96E6              ;	Pinta los disparos generados.
 772+ 96E6
 773+ 96E6              Extrae_foto_disparos
 774+ 96E6
 775+ 96E6 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96E9 7E               ld a,(hl)
 777+ 96EA A7               and a
 778+ 96EB C8               ret z
 779+ 96EC
 780+ 96EC 3A 3C 89     	ld a,(Numero_de_disparotes)
 781+ 96EF A7           	and a
 782+ 96F0 C8           	ret z
 783+ 96F1 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96F5 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96F8
 786+ 96F8 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96FA E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96FB D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96FC
 790+ 96FC ED 73 16 89  	ld (Stack_2),sp
 791+ 9700 ED 7B 14 89  	ld sp,(Stack)
 792+ 9704
 793+ 9704              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 9704
 795+ 9704 3E CD        	ld a,$cd
 796+ 9706 32 0E 97     	ld (Imprime2),a
 797+ 9709 EB           	ex de,hl
 798+ 970A 22 0F 97     	ld (Imprime2+1),hl
 799+ 970D EB           	ex de,hl
 800+ 970E
 801+ 970E              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 970E
 803+ 970E 00 00 00     Imprime2 db 0,0,0
 804+ 9711
 805+ 9711 3A 3C 89     	ld a,(Numero_de_disparotes)
 806+ 9714 3D           	dec a
 807+ 9715 28 09        	jr z,1F
 808+ 9717 32 3C 89      	ld (Numero_de_disparotes),a
 809+ 971A
 810+ 971A ED 7B 16 89  	ld sp,(Stack_2)
 811+ 971E 18 D8        	jr 2B
 812+ 9720
 813+ 9720 AF           1 xor a
 814+ 9721 32 16 89     	ld (Stack_2),a
 815+ 9724 C9           	ret
 816+ 9725
 817+ 9725              ; -----------------------------------------------------------------------------------
 818+ 9725              ;
 819+ 9725              ;	4/9/23
 820+ 9725              ;
 821+ 9725              ;	Rutina principal de pintado de Amadeus.
 822+ 9725              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 9725
 824+ 9725 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 9728 7E           	ld a,(hl)
 826+ 9729 A7           	and a
 827+ 972A C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 972B
 829+ 972B 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 972E A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 972F C8           	ret z
 832+ 9730
 833+ 9730              ; -----------------------------------
 834+ 9730
 835+ 9730 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 9734 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 9737
 838+ 9737 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 9739 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 973A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 973B
 842+ 973B ED 73 16 89  	ld (Stack_2),sp
 843+ 973F ED 7B 14 89  	ld sp,(Stack)
 844+ 9743
 845+ 9743              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 9743
 847+ 9743 3E CD        	ld a,$cd
 848+ 9745 32 4D 97     	ld (Imprime_Amadeus),a
 849+ 9748 EB           	ex de,hl
 850+ 9749 22 4E 97     	ld (Imprime_Amadeus+1),hl
 851+ 974C EB           	ex de,hl
 852+ 974D
 853+ 974D              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 974D
 855+ 974D 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 9750
 857+ 9750 ED 73 14 89  	ld (Stack),sp
 858+ 9754
 859+ 9754 3A 0F 89     	ld a,(Numero_de_malotes)
 860+ 9757 3D           	dec a
 861+ 9758 28 09        	jr z,1F
 862+ 975A 32 0F 89      	ld (Numero_de_malotes),a
 863+ 975D
 864+ 975D ED 7B 16 89  	ld sp,(Stack_2)
 865+ 9761 18 D4        	jr 2B
 866+ 9763
 867+ 9763 AF           1 xor a
 868+ 9764 32 16 89     	ld (Stack_2),a
 869+ 9767
 870+ 9767 C9           	ret
# file closed: Draw_XOR.asm
1692  9768              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9768              ;   índices de Rutinas de impresión.
   2+ 9768
   3+ 9768 78 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 976A A5 97            defw Pinta_Amadeus_3x2
   5+ 976C
   6+ 976C FB 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 976E 9B 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9770 4F 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9772
  10+ 9772 25 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9774 29 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9776 DD 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9778
  14+ 9778
  15+ 9778              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9778              ;
  17+ 9778              ;   12/12/22
  18+ 9778              ;
  19+ 9778              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9778              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9778              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9778              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9778              ;
  24+ 9778              ;   Modifica: DE y HL.
  25+ 9778
  26+ 9778 ED 73 14 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 977C FD F9        	ld sp,iy
  28+ 977E 06 10            ld b,16
  29+ 9780 D1           1 pop de
  30+ 9781 7B               ld a,e
  31+ 9782 AE               xor (hl)
  32+ 9783 77           	ld (hl),a
  33+ 9784 23           	inc hl
  34+ 9785 7A               ld a,d
  35+ 9786 AE               xor (hl)
  36+ 9787 77           	ld (hl),a
  37+ 9788 2B           	dec hl
  38+ 9789 24           	inc h
  39+ 978A 7C               ld a,h
  40+ 978B E6 07            and 7
  41+ 978D 20 0A            jr nz,2F
  42+ 978F 7D               ld a,l
  43+ 9790 C6 20            add a,$20
  44+ 9792 6F               ld l,a
  45+ 9793 38 04            jr c,2F
  46+ 9795 7C               ld a,h
  47+ 9796 D6 08            sub 8
  48+ 9798 67               ld h,a
  49+ 9799 7C           2 ld a,h
  50+ 979A FE 58            cp $58
  51+ 979C 28 02            jr z,3F
  52+ 979E 10 E0            djnz 1B
  53+ 97A0 ED 7B 14 89  3 ld sp,(Stack)
  54+ 97A4 C9           	ret
  55+ 97A5
  56+ 97A5 ED 73 14 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97A9 FD F9        	ld sp,iy
  58+ 97AB 06 08            ld b,8
  59+ 97AD D1           1 pop de
  60+ 97AE 7B               ld a,e
  61+ 97AF AE               xor (hl)
  62+ 97B0 77           	ld (hl),a
  63+ 97B1 23           	inc hl
  64+ 97B2 7A               ld a,d
  65+ 97B3 AE               xor (hl)
  66+ 97B4 77           	ld (hl),a
  67+ 97B5 23           	inc hl
  68+ 97B6 D1           	pop de
  69+ 97B7 7B               ld a,e
  70+ 97B8 AE               xor (hl)
  71+ 97B9 77           	ld (hl),a
  72+ 97BA 2B           	dec hl
  73+ 97BB 2B           	dec hl
  74+ 97BC 24           	inc h
  75+ 97BD 7C               ld a,h
  76+ 97BE E6 07            and 7
  77+ 97C0 20 0A            jr nz,2F
  78+ 97C2 7D               ld a,l
  79+ 97C3 C6 20            add a,$20
  80+ 97C5 6F               ld l,a
  81+ 97C6 38 04            jr c,2F
  82+ 97C8 7C               ld a,h
  83+ 97C9 D6 08            sub 8
  84+ 97CB 67               ld h,a
  85+ 97CC 7C           2 ld a,h
  86+ 97CD FE 58            cp $58
  87+ 97CF 28 25            jr z,4F
  88+ 97D1 7A               ld a,d
  89+ 97D2 AE               xor (hl)
  90+ 97D3 77               ld (hl),a
  91+ 97D4 D1           	pop de
  92+ 97D5 23           	inc hl
  93+ 97D6 7B               ld a,e
  94+ 97D7 AE               xor (hl)
  95+ 97D8 77           	ld (hl),a
  96+ 97D9 23           	inc hl
  97+ 97DA 7A               ld a,d
  98+ 97DB AE               xor (hl)
  99+ 97DC 77           	ld (hl),a
 100+ 97DD 2B           	dec hl
 101+ 97DE 2B           	dec hl
 102+ 97DF 24           	inc h
 103+ 97E0 7C               ld a,h
 104+ 97E1 E6 07            and 7
 105+ 97E3 20 0A            jr nz,3F
 106+ 97E5 7D               ld a,l
 107+ 97E6 C6 20            add a,$20
 108+ 97E8 6F               ld l,a
 109+ 97E9 38 04            jr c,3F
 110+ 97EB 7C               ld a,h
 111+ 97EC D6 08            sub 8
 112+ 97EE 67               ld h,a
 113+ 97EF 7C           3 ld a,h
 114+ 97F0 FE 58            cp $58
 115+ 97F2 28 02            jr z,4F
 116+ 97F4 10 B7            djnz 1B
 117+ 97F6 ED 7B 14 89  4 ld sp,(Stack)
 118+ 97FA C9           	ret
 119+ 97FB
 120+ 97FB              ; ---------------------------------------------------
 121+ 97FB
 122+ 97FB ED 73 14 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97FF FD F9        	ld sp,iy
 124+ 9801
 125+ 9801              ; >>>
 126+ 9801
 127+ 9801 06 10            ld b,16
 128+ 9803 D1           1 pop de
 129+ 9804 7A           	ld a,d
 130+ 9805 AE           	xor (hl)
 131+ 9806 77           	ld (hl),a
 132+ 9807 24           	inc h
 133+ 9808 7C               ld a,h
 134+ 9809 E6 07            and 7
 135+ 980B 20 0C            jr nz,2F
 136+ 980D 7D               ld a,l
 137+ 980E C6 20            add a,$20
 138+ 9810 6F               ld l,a
 139+ 9811 38 06            jr c,2F
 140+ 9813 7C               ld a,h
 141+ 9814 D6 08            sub 8
 142+ 9816 67               ld h,a
 143+ 9817 18 00            jr 2F
 144+ 9819 7C           2 ld a,h
 145+ 981A FE 58            cp $58
 146+ 981C 28 02            jr z,3F
 147+ 981E 10 E3            djnz 1B
 148+ 9820 ED 7B 14 89  3 ld sp,(Stack)
 149+ 9824 C9           	ret
 150+ 9825
 151+ 9825 ED 73 14 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9829 FD F9        	ld sp,iy
 153+ 982B
 154+ 982B              ; >>>
 155+ 982B
 156+ 982B 06 10            ld b,16
 157+ 982D D1           1 pop de
 158+ 982E 7B           	ld a,e
 159+ 982F AE           	xor (hl)
 160+ 9830 77           	ld (hl),a
 161+ 9831 24           	inc h
 162+ 9832 7C               ld a,h
 163+ 9833 E6 07            and 7
 164+ 9835 20 0C            jr nz,2F
 165+ 9837 7D               ld a,l
 166+ 9838 C6 20            add a,$20
 167+ 983A 6F               ld l,a
 168+ 983B 38 06            jr c,2F
 169+ 983D 7C               ld a,h
 170+ 983E D6 08            sub 8
 171+ 9840 67               ld h,a
 172+ 9841 18 00            jr 2F
 173+ 9843 7C           2 ld a,h
 174+ 9844 FE 58            cp $58
 175+ 9846 28 02            jr z,3F
 176+ 9848 10 E3            djnz 1B
 177+ 984A ED 7B 14 89  3 ld sp,(Stack)
 178+ 984E C9           	ret
 179+ 984F
 180+ 984F              ; ---------------------------------------------------
 181+ 984F
 182+ 984F ED 73 14 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9853 FD F9        	ld sp,iy
 184+ 9855 06 08            ld b,8
 185+ 9857 D1           1 pop de
 186+ 9858 7A           	ld a,d
 187+ 9859 AE           	xor (hl)
 188+ 985A 77           	ld (hl),a
 189+ 985B 23           	inc hl
 190+ 985C D1           	pop de
 191+ 985D 7B           	ld a,e
 192+ 985E AE           	xor (hl)
 193+ 985F 77           	ld (hl),a
 194+ 9860 2B           	dec hl
 195+ 9861 24            	inc h
 196+ 9862 7C               ld a,h
 197+ 9863 E6 07            and 7
 198+ 9865 20 0A            jr nz,2F
 199+ 9867 7D               ld a,l
 200+ 9868 C6 20            add a,$20
 201+ 986A 6F               ld l,a
 202+ 986B 38 04            jr c,2F
 203+ 986D 7C               ld a,h
 204+ 986E D6 08            sub 8
 205+ 9870 67               ld h,a
 206+ 9871 7C           2 ld a,h
 207+ 9872 FE 58            cp $58
 208+ 9874 28 20            jr z,4F
 209+ 9876 D1               pop de
 210+ 9877 7B           	ld a,e
 211+ 9878 AE           	xor (hl)
 212+ 9879 77           	ld (hl),a
 213+ 987A 23           	inc hl
 214+ 987B 7A           	ld a,d
 215+ 987C AE           	xor (hl)
 216+ 987D 77           	ld (hl),a
 217+ 987E 2B           	dec hl
 218+ 987F 24           	inc h
 219+ 9880 7C               ld a,h
 220+ 9881 E6 07            and 7
 221+ 9883 20 0A            jr nz,3F
 222+ 9885 7D               ld a,l
 223+ 9886 C6 20            add a,$20
 224+ 9888 6F               ld l,a
 225+ 9889 38 04            jr c,3F
 226+ 988B 7C               ld a,h
 227+ 988C D6 08            sub 8
 228+ 988E 67               ld h,a
 229+ 988F 7C           3 ld a,h
 230+ 9890 FE 58            cp $58
 231+ 9892 28 02            jr z,4F
 232+ 9894 10 C1            djnz 1B
 233+ 9896 ED 7B 14 89  4 ld sp,(Stack)
 234+ 989A C9           	ret
 235+ 989B
 236+ 989B ED 73 14 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 989F FD F9        	ld sp,iy
 238+ 98A1 06 08            ld b,8
 239+ 98A3 D1           1 pop de
 240+ 98A4 D1           	pop de
 241+ 98A5 7B           	ld a,e
 242+ 98A6 AE           	xor (hl)
 243+ 98A7 77           	ld (hl),a
 244+ 98A8 24            	inc h
 245+ 98A9 7C               ld a,h
 246+ 98AA E6 07            and 7
 247+ 98AC 20 0A            jr nz,2F
 248+ 98AE 7D               ld a,l
 249+ 98AF C6 20            add a,$20
 250+ 98B1 6F               ld l,a
 251+ 98B2 38 04            jr c,2F
 252+ 98B4 7C               ld a,h
 253+ 98B5 D6 08            sub 8
 254+ 98B7 67               ld h,a
 255+ 98B8 7C           2 ld a,h
 256+ 98B9 FE 58            cp $58
 257+ 98BB 28 1B            jr z,4F
 258+ 98BD D1               pop de
 259+ 98BE 7A           	ld a,d
 260+ 98BF AE           	xor (hl)
 261+ 98C0 77           	ld (hl),a
 262+ 98C1 24           	inc h
 263+ 98C2 7C               ld a,h
 264+ 98C3 E6 07            and 7
 265+ 98C5 20 0A            jr nz,3F
 266+ 98C7 7D               ld a,l
 267+ 98C8 C6 20            add a,$20
 268+ 98CA 6F               ld l,a
 269+ 98CB 38 04            jr c,3F
 270+ 98CD 7C               ld a,h
 271+ 98CE D6 08            sub 8
 272+ 98D0 67               ld h,a
 273+ 98D1 7C           3 ld a,h
 274+ 98D2 FE 58            cp $58
 275+ 98D4 28 02            jr z,4F
 276+ 98D6 10 CB            djnz 1B
 277+ 98D8 ED 7B 14 89  4 ld sp,(Stack)
 278+ 98DC C9           	ret
 279+ 98DD
 280+ 98DD ED 73 14 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98E1 FD F9        	ld sp,iy
 282+ 98E3 06 08            ld b,8
 283+ 98E5 D1           1 pop de
 284+ 98E6 7B           	ld a,e
 285+ 98E7 AE           	xor (hl)
 286+ 98E8 77           	ld (hl),a
 287+ 98E9 23           	inc hl
 288+ 98EA 7A           	ld a,d
 289+ 98EB AE           	xor (hl)
 290+ 98EC 77           	ld (hl),a
 291+ 98ED 2B           	dec hl
 292+ 98EE 24             	inc h
 293+ 98EF 7C               ld a,h
 294+ 98F0 E6 07            and 7
 295+ 98F2 20 0A            jr nz,2F
 296+ 98F4 7D               ld a,l
 297+ 98F5 C6 20            add a,$20
 298+ 98F7 6F               ld l,a
 299+ 98F8 38 04            jr c,2F
 300+ 98FA 7C               ld a,h
 301+ 98FB D6 08            sub 8
 302+ 98FD 67               ld h,a
 303+ 98FE 7C           2 ld a,h
 304+ 98FF FE 58            cp $58
 305+ 9901 28 21            jr z,4F
 306+ 9903 D1               pop de
 307+ 9904 7A           	ld a,d
 308+ 9905 AE           	xor (hl)
 309+ 9906 77           	ld (hl),a
 310+ 9907 23           	inc hl
 311+ 9908 D1               pop de
 312+ 9909 7B           	ld a,e
 313+ 990A AE           	xor (hl)
 314+ 990B 77           	ld (hl),a
 315+ 990C 2B           	dec hl
 316+ 990D 24           	inc h
 317+ 990E 7C               ld a,h
 318+ 990F E6 07            and 7
 319+ 9911 20 0A            jr nz,3F
 320+ 9913 7D               ld a,l
 321+ 9914 C6 20            add a,$20
 322+ 9916 6F               ld l,a
 323+ 9917 38 04            jr c,3F
 324+ 9919 7C               ld a,h
 325+ 991A D6 08            sub 8
 326+ 991C 67               ld h,a
 327+ 991D 7C           3 ld a,h
 328+ 991E FE 58            cp $58
 329+ 9920 28 02            jr z,4F
 330+ 9922 10 C1            djnz 1B
 331+ 9924 ED 7B 14 89  4 ld sp,(Stack)
 332+ 9928 C9           	ret
 333+ 9929
 334+ 9929 ED 73 14 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 992D FD F9        	ld sp,iy
 336+ 992F 06 08            ld b,8
 337+ 9931 D1           1 pop de
 338+ 9932 7B           	ld a,e
 339+ 9933 AE           	xor (hl)
 340+ 9934 77           	ld (hl),a
 341+ 9935 24            	inc h
 342+ 9936 7C               ld a,h
 343+ 9937 E6 07            and 7
 344+ 9939 20 0A            jr nz,2F
 345+ 993B 7D               ld a,l
 346+ 993C C6 20            add a,$20
 347+ 993E 6F               ld l,a
 348+ 993F 38 04            jr c,2F
 349+ 9941 7C               ld a,h
 350+ 9942 D6 08            sub 8
 351+ 9944 67               ld h,a
 352+ 9945 7C           2 ld a,h
 353+ 9946 FE 58            cp $58
 354+ 9948 28 1C            jr z,4F
 355+ 994A D1               pop de
 356+ 994B 7A           	ld a,d
 357+ 994C AE           	xor (hl)
 358+ 994D 77           	ld (hl),a
 359+ 994E 24           	inc h
 360+ 994F 7C               ld a,h
 361+ 9950 E6 07            and 7
 362+ 9952 20 0A            jr nz,3F
 363+ 9954 7D               ld a,l
 364+ 9955 C6 20            add a,$20
 365+ 9957 6F               ld l,a
 366+ 9958 38 04            jr c,3F
 367+ 995A 7C               ld a,h
 368+ 995B D6 08            sub 8
 369+ 995D 67               ld h,a
 370+ 995E 7C           3 ld a,h
 371+ 995F FE 58            cp $58
 372+ 9961 28 03            jr z,4F
 373+ 9963 D1               pop de
 374+ 9964 10 CB            djnz 1B
 375+ 9966 ED 7B 14 89  4 ld sp,(Stack)
 376+ 996A C9           	ret
 377+ 996B
 378+ 996B              ; ---------------------------------------------------
 379+ 996B              ;
 380+ 996B              ;   27/02/23
 381+ 996B              ;
 382+ 996B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 996B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 996B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 996B
 386+ 996B ED 73 14 89  Pinta_Disparo ld (Stack),sp
 387+ 996F FD F9            ld sp,iy
 388+ 9971 06 03            ld b,3
 389+ 9973 D1           1 pop de
 390+ 9974 7B               ld a,e
 391+ 9975 AE               xor (hl)
 392+ 9976 77               ld (hl),a
 393+ 9977 23               inc hl
 394+ 9978 7A               ld a,d
 395+ 9979 AE               xor (hl)
 396+ 997A 77               ld (hl),a
 397+ 997B 2B               dec hl
 398+ 997C
 399+ 997C 24               inc h
 400+ 997D 7C               ld a,h
 401+ 997E E6 07            and 7
 402+ 9980 20 0A            jr nz,2F
 403+ 9982 7D               ld a,l
 404+ 9983 C6 20            add a,$20
 405+ 9985 6F               ld l,a
 406+ 9986 38 04            jr c,2F
 407+ 9988 7C               ld a,h
 408+ 9989 D6 08            sub 8
 409+ 998B 67               ld h,a
 410+ 998C 7C           2 ld a,h
 411+ 998D FE 58            cp $58
 412+ 998F 28 02            jr z,3F
 413+ 9991
 414+ 9991 10 E0            djnz 1B
 415+ 9993 ED 7B 14 89  3 ld sp,(Stack)
 416+ 9997 C9               ret
 417+ 9998
# file closed: Rutinas_de_impresion_sprites.asm
1693  9998              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9998              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9998              ;
   3+ 9998              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9998              ;
   5+ 9998              ; *****************************************************************************************************************************************************************************************
   6+ 9998              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9998
   8+ 9998 7C           calcula_tercio ld a,h
   9+ 9999 E6 18        	and $18
  10+ 999B CB 2F        	sra a
  11+ 999D CB 2F        	sra a
  12+ 999F CB 2F        	sra a
  13+ 99A1 C9           	ret
  14+ 99A2
# file closed: calcula_tercio.asm
1694  99A2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99A2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99A2              ;
   3+ 99A2              ;
   4+ 99A2              ;	CLS.
   5+ 99A2              ;
   6+ 99A2              ;	Limpia la pantalla y define sus atributos.
   7+ 99A2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99A2              ;
   9+ 99A2              ;	COLORES: 0 ..... NEGRO
  10+ 99A2              ;    		 1 ..... AZUL
  11+ 99A2              ; 			 2 ..... ROJO
  12+ 99A2              ;			 3 ..... MAGENTA
  13+ 99A2              ; 			 4 ..... VERDE
  14+ 99A2              ; 			 5 ..... CIAN
  15+ 99A2              ;			 6 ..... AMARILLO
  16+ 99A2              ; 			 7 ..... BLANCO
  17+ 99A2              ;
  18+ 99A2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99A2              ;
  20+ 99A2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99A2
  22+ 99A2
  23+ 99A2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99A5 11 01 40     	LD DE,$4001
  25+ 99A8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99AB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99AD ED B0        	LDIR
  28+ 99AF 01 FF 02     	LD BC,767
  29+ 99B2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99B3 ED B0        	LDIR
  31+ 99B5 C9           	ret
  32+ 99B6
# file closed: Cls.asm
1695  99B6              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99B6              ; ******************************************************************************************************************************************************************************************
   2+ 99B6              ;
   3+ 99B6              ;   20/05/23
   4+ 99B6              ;
   5+ 99B6              ;	Recompone_posicion_inicio
   6+ 99B6              ;
   7+ 99B6              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99B6              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99B6              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99B6              ;	_ a una u otra rutina.
  11+ 99B6
  12+ 99B6              Recompone_posicion_inicio
  13+ 99B6
  14+ 99B6 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 99B9 7D           	ld a,l
  16+ 99BA E6 1F        	and $1f
  17+ 99BC 28 16        	jr z,1F
  18+ 99BE
  19+ 99BE FE 1F        	cp $1f
  20+ 99C0 28 0D        	jr z,3F
  21+ 99C2
  22+ 99C2 21 01 89     	ld hl,Ctrl_2
  23+ 99C5 CB C6        	set 0,(hl)
  24+ 99C7 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 99CA 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 99CD 18 08        	jr 2F
  27+ 99CF
  28+ 99CF CD 70 9B     3 call Mov_left
  29+ 99D2 18 03        	jr 2F
  30+ 99D4
  31+ 99D4 CD 52 9A     1 call Mov_right
  32+ 99D7 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99DA 22 CA 88     	ld (Puntero_objeto),hl
  34+ 99DD C9           	ret
  35+ 99DE
  36+ 99DE              ; ******************************************************************************************************************************************************************************************
  37+ 99DE              ;
  38+ 99DE              ;   27/05/23
  39+ 99DE              ;
  40+ 99DE              ;	Mov_down
  41+ 99DE              ;
  42+ 99DE              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99DE              ;
  44+ 99DE              ;
  45+ 99DE              Mov_down
  46+ 99DE
  47+ 99DE CD 40 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99E1              ;																	; _ repone (Puntero_objeto).
  49+ 99E1 21 F0 88     	ld hl,Ctrl_0
  50+ 99E4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99E6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99E6              ; 																	; _ en el caso de que no lo haya.
  53+ 99E6 3A DE 88     	ld a,(Vel_down)
  54+ 99E9 47           	ld b,a
  55+ 99EA 2A C8 88         ld hl,(Posicion_actual)
  56+ 99ED CD 98 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99F0 E6 02        	and 2
  58+ 99F2 28 0F        	jr z,1F
  59+ 99F4
  60+ 99F4              ; Nos encontramos en el último tercio de pantalla.
  61+ 99F4              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99F4
  63+ 99F4 7C           	ld a,h
  64+ 99F5 FE 57        	cp $57
  65+ 99F7 20 0A        	jr nz,1F
  66+ 99F9
  67+ 99F9 7D           	ld a,l
  68+ 99FA C6 20        	add $20
  69+ 99FC 30 05        	jr nc,1F
  70+ 99FE
  71+ 99FE              ; ------------------------------
  72+ 99FE              ;	call Reaparece_arriba
  73+ 99FE CD FD 9C     	call Reinicio
  74+ 9A01              ; ------------------------------
  75+ 9A01
  76+ 9A01 18 08        	jr 3F
  77+ 9A03 CD 85 96     1 call NextScan
  78+ 9A06 22 C8 88     	ld (Posicion_actual),hl
  79+ 9A09 10 E2            djnz 2B
  80+ 9A0B CD 23 9D     3 call Genera_coordenadas
  81+ 9A0E C9           	ret
  82+ 9A0F
  83+ 9A0F              ; ******************************************************************************************************************************************************************************************
  84+ 9A0F              ;
  85+ 9A0F              ;   27/05/23
  86+ 9A0F              ;
  87+ 9A0F              ;	Mov_up
  88+ 9A0F              ;
  89+ 9A0F              ; 	Mueve el Sprite hacia arriba.
  90+ 9A0F              ;
  91+ 9A0F              ;
  92+ 9A0F              Mov_up
  93+ 9A0F
  94+ 9A0F CD 40 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A12              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A12 21 F0 88     	ld hl,Ctrl_0
  97+ 9A15 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A17              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A17              ; 																		; _ en el caso de que no lo haya.
 100+ 9A17 3A DD 88     	ld a,(Vel_up)
 101+ 9A1A 47           	ld b,a
 102+ 9A1B 2A C8 88     	ld hl,(Posicion_actual)
 103+ 9A1E CD 98 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A21 A7           	and a
 105+ 9A22 20 10        	jr nz,1F
 106+ 9A24
 107+ 9A24              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A24              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A24
 110+ 9A24 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A25 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A27 20 0B            jr nz,1F
 113+ 9A29 7D               ld a,l
 114+ 9A2A D6 20            sub $20
 115+ 9A2C 30 06            jr nc,1F
 116+ 9A2E 25               dec h
 117+ 9A2F
 118+ 9A2F              ; -----------------------------
 119+ 9A2F CD DE 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A32              ;	call Reinicio
 121+ 9A32              ; -----------------------------
 122+ 9A32
 123+ 9A32 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A34 CD 94 96     1 call PreviousScan
 125+ 9A37 22 C8 88     	ld (Posicion_actual),hl
 126+ 9A3A 10 E2            djnz 3B
 127+ 9A3C CD 23 9D     2 call Genera_coordenadas
 128+ 9A3F C9           	ret
 129+ 9A40
 130+ 9A40              ; -----------------------------
 131+ 9A40              ;
 132+ 9A40              ;	27/5/23
 133+ 9A40              ;
 134+ 9A40              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A40              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A40              ;
 137+ 9A40              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A40              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A40              ;
 140+ 9A40              ;	Modifica: A y (Puntero_objeto).
 141+ 9A40
 142+ 9A40 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A43 CB 47        	bit 0,a
 144+ 9A45 C8           	ret z
 145+ 9A46 CB 87        	res 0,a
 146+ 9A48 32 01 89     	ld (Ctrl_2),a
 147+ 9A4B 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A4E 22 CA 88     	ld (Puntero_objeto),hl
 149+ 9A51 C9           	ret
 150+ 9A52
 151+ 9A52              ; ******************************************************************************************************************************************************************************************
 152+ 9A52              ;
 153+ 9A52              ;	19/10/22
 154+ 9A52              ;
 155+ 9A52              ;	Mov_right.
 156+ 9A52              ;
 157+ 9A52              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A52              ;
 159+ 9A52
 160+ 9A52 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 9A55 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A57              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A57              ; 																	; _ en el caso de que no lo haya.
 164+ 9A57 3A F0 88     	ld a,(Ctrl_0)
 165+ 9A5A CB 77        	bit 6,a
 166+ 9A5C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A5E
 168+ 9A5E CD 8C 9C     	call Stop_Amadeus_right
 169+ 9A61 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A62 18 4D        	jr 8F
 171+ 9A64
 172+ 9A64 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A67 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A69 20 46        	jr nz,8F
 175+ 9A6B
 176+ 9A6B 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A6E A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A6F 28 40        	jr z,8F
 179+ 9A71
 180+ 9A71              ; ---------- ---------- ----------
 181+ 9A71              ;
 182+ 9A71              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A71
 184+ 9A71 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A74 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A76 28 11        	jr z,1F
 187+ 9A78 38 06        	jr c,6F
 188+ 9A7A FE 04        	cp 4
 189+ 9A7C 28 14        	jr z,7F
 190+ 9A7E 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A80
 192+ 9A80              ; ---------- ---------- ----------
 193+ 9A80              ;
 194+ 9A80              ; Perfiles de velocidad
 195+ 9A80              ;
 196+ 9A80
 197+ 9A80 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A83 FE FE        	cp $fe
 199+ 9A85 20 2A        	jr nz,8F
 200+ 9A87 18 10        	jr 3F
 201+ 9A89 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A8C FE FD        	cp $fd
 203+ 9A8E 20 21        	jr nz,8F
 204+ 9A90 18 07        	jr 3F
 205+ 9A92 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A95 FE FB        	cp $fb
 207+ 9A97 20 18        	jr nz,8F
 208+ 9A99
 209+ 9A99              ; ---------- ---------- ----------
 210+ 9A99
 211+ 9A99              3
 212+ 9A99 CD CC 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A9C              ;	call Reinicio
 214+ 9A9C
 215+ 9A9C              ; ---------- ---------- ----------
 216+ 9A9C              ;
 217+ 9A9C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A9C
 219+ 9A9C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A9E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A9F CD B8 9A     	call DESPLZ_DER
 222+ 9AA2 C1           	pop bc
 223+ 9AA3 10 F9        	djnz 5B
 224+ 9AA5 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AA8 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AA9 22 C8 88     	ld (Posicion_actual),hl
 227+ 9AAC CD 23 9D     	call Genera_coordenadas
 228+ 9AAF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AB1
 230+ 9AB1              ; ---------- ---------- ----------
 231+ 9AB1
 232+ 9AB1 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9AB4 CD B8 9A     	call DESPLZ_DER
 234+ 9AB7 C9           2 ret
 235+ 9AB8
 236+ 9AB8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AB8              ;
 238+ 9AB8              ;	22/9/22
 239+ 9AB8              ;
 240+ 9AB8
 241+ 9AB8 CD C7 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9ABB CD 13 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9ABE CD 3C 9B         call Ciclo_completo
 244+ 9AC1 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AC4 CB FE        	set 7,(hl)
 246+ 9AC6 C9           	ret
 247+ 9AC7
 248+ 9AC7              ; ******************************************************************************************************************************************************************************************
 249+ 9AC7              ;	15/02/23
 250+ 9AC7              ;
 251+ 9AC7
 252+ 9AC7 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9ACA 47           	ld b,a
 254+ 9ACB 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9ACE 23           1 inc hl
 256+ 9ACF 23           	inc hl
 257+ 9AD0 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AD2 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AD5 CD 9E 8C     	call Extrae_address
 260+ 9AD8 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9ADB
 262+ 9ADB              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9ADB
 264+ 9ADB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9ADB              ; Cuántos movimientos hemos hecho ??
 266+ 9ADB              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9ADB
 268+ 9ADB 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9ADE EB           	ex de,hl
 270+ 9ADF A7           	and a
 271+ 9AE0 ED 52        	sbc hl,de
 272+ 9AE2 CB 3D        	srl l
 273+ 9AE4 3E 08        6 ld a,8
 274+ 9AE6 95           	sub l
 275+ 9AE7 30 1E        	jr nc,3F
 276+ 9AE9
 277+ 9AE9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AE9              ; B="0".
 279+ 9AE9
 280+ 9AE9 04           4 inc b
 281+ 9AEA 3C           	inc a
 282+ 9AEB 20 FC        	jr nz,4B
 283+ 9AED 78           	ld a,b
 284+ 9AEE 08           	ex af,af
 285+ 9AEF 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9AF2 23           5 inc hl
 287+ 9AF3 23           	inc hl
 288+ 9AF4 10 FC        	djnz 5B
 289+ 9AF6 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AF9 CD 9E 8C     	call Extrae_address
 291+ 9AFC 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9AFF
 293+ 9AFF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AFF              ; _(Posicion_actual).
 295+ 9AFF
 296+ 9AFF 21 C8 88     	ld hl,Posicion_actual
 297+ 9B02 34           	inc (hl)
 298+ 9B03 08               ex af,af
 299+ 9B04 6F           	ld l,a
 300+ 9B05 18 DD        	jr 6B
 301+ 9B07
 302+ 9B07              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B07
 304+ 9B07 47           3 ld b,a
 305+ 9B08 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B0B 23           2 inc hl
 307+ 9B0C 23           	inc hl
 308+ 9B0D 10 FC        	djnz 2B
 309+ 9B0F 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B12 C9           8 ret
 311+ 9B13
 312+ 9B13              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B13              ;
 314+ 9B13              ;	24/7/22
 315+ 9B13              ;
 316+ 9B13              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B13              ;
 318+ 9B13              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B13              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B13              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B13
 322+ 9B13 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B16 A7           	and a
 324+ 9B17 20 1F        	jr nz,1F
 325+ 9B19 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B1B 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9B1E
 328+ 9B1E 21 C7 88     	ld hl,Columns
 329+ 9B21 34           	inc (hl)
 330+ 9B22 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9B25 E6 01        	and 1
 332+ 9B27 28 0F        	jr z,1F
 333+ 9B29 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B2C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B2D 22 C8 88     	ld (Posicion_actual),hl
 336+ 9B30 CD 23 9D     	call Genera_coordenadas
 337+ 9B33 CD 98 9C     	call Inc_CTRL_DESPLZ
 338+ 9B36 18 03        	jr 2F
 339+ 9B38 CD 98 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B3B C9           2 ret
 341+ 9B3C
 342+ 9B3C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B3C              ;
 344+ 9B3C              ;	24/7/22
 345+ 9B3C              ;
 346+ 9B3C              ;	Ciclo_completo.
 347+ 9B3C              ;
 348+ 9B3C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B3C              ;
 350+ 9B3C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B3C              ; 	Decrementamos (Columns).
 352+ 9B3C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B3C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B3C
 355+ 9B3C
 356+ 9B3C 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B3F FE FF        	cp $ff
 358+ 9B41 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B43 E6 F0        	and $f0
 360+ 9B45 20 28        	jr nz,3F
 361+ 9B47
 362+ 9B47              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B47
 364+ 9B47 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9B4A 47           	ld b,a
 366+ 9B4B 3E F8        	ld a,$f8
 367+ 9B4D 80           	add b
 368+ 9B4E 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9B51 18 1C        	jr 3F
 370+ 9B53 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B56 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B57 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B58 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9B5B 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B5E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B60 20 0A        	jr nz,2F
 377+ 9B62 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B65 23           	inc hl
 379+ 9B66 22 C8 88     	ld (Posicion_actual),hl
 380+ 9B69 CD 23 9D     	call Genera_coordenadas
 381+ 9B6C
 382+ 9B6C              ; Inicia el puntero de Sprite.
 383+ 9B6C
 384+ 9B6C CD B5 8C     2 call Inicia_puntero_objeto_der
 385+ 9B6F C9           3 ret
 386+ 9B70
 387+ 9B70              ; ******************************************************************************************************************************************************************************************
 388+ 9B70              ;
 389+ 9B70              ;	15/02/23
 390+ 9B70              ;
 391+ 9B70              ;	Mov_left.
 392+ 9B70              ;
 393+ 9B70              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B70              ;
 395+ 9B70              Mov_left
 396+ 9B70
 397+ 9B70 21 F0 88     	ld hl,Ctrl_0
 398+ 9B73 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B75              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B75              ; 																	; _ en el caso de que no lo haya.
 401+ 9B75 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B78 CB 77        	bit 6,a
 403+ 9B7A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B7C
 405+ 9B7C CD 92 9C     	call Stop_Amadeus_left
 406+ 9B7F C8           	ret z
 407+ 9B80 20 4A        	jr nz,8F
 408+ 9B82
 409+ 9B82 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B85 A7           	and a
 411+ 9B86 20 44        	jr nz,8F
 412+ 9B88
 413+ 9B88 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B8B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B8C 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B8E
 417+ 9B8E              ; ---------- ---------- ----------
 418+ 9B8E
 419+ 9B8E 3A DB 88     	ld a,(Vel_left)
 420+ 9B91 FE 02        	cp 2
 421+ 9B93 28 0F        	jr z,1F
 422+ 9B95 38 04        	jr c,6F
 423+ 9B97 FE 04        	cp 4
 424+ 9B99 28 12        	jr z,7F
 425+ 9B9B
 426+ 9B9B              ; ---------- ---------- ----------
 427+ 9B9B
 428+ 9B9B 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B9E FE F8        	cp $f8
 430+ 9BA0 20 2A        	jr nz,8F
 431+ 9BA2 18 10        	jr 4F
 432+ 9BA4 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9BA7 FE F9        	cp $f9
 434+ 9BA9 20 21        	jr nz,8F
 435+ 9BAB 18 07        	jr 4F
 436+ 9BAD 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9BB0 FE FB        	cp $fb
 438+ 9BB2 20 18        	jr nz,8F
 439+ 9BB4
 440+ 9BB4              ; ---------- ---------- ----------
 441+ 9BB4
 442+ 9BB4              4
 443+ 9BB4 CD BA 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BB7              ;	call Reinicio
 445+ 9BB7
 446+ 9BB7              ; ---------- ---------- ----------
 447+ 9BB7
 448+ 9BB7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BB9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BBA
 451+ 9BBA              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BBA              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BBA
 454+ 9BBA CD D3 9B     	call DESPLZ_IZQ
 455+ 9BBD C1           	pop bc
 456+ 9BBE 10 F9        	djnz 5B
 457+ 9BC0 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BC3 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BC4 22 C8 88     	ld (Posicion_actual),hl
 460+ 9BC7 CD 23 9D     	call Genera_coordenadas
 461+ 9BCA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BCC
 463+ 9BCC              ; ---------- ---------- ----------
 464+ 9BCC
 465+ 9BCC              ; Movemos, no hay recolocación.
 466+ 9BCC
 467+ 9BCC 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9BCF CD D3 9B     	call DESPLZ_IZQ
 469+ 9BD2 C9           2 ret
 470+ 9BD3
 471+ 9BD3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BD3              ;
 473+ 9BD3              ;	22/9/22
 474+ 9BD3
 475+ 9BD3              DESPLZ_IZQ
 476+ 9BD3
 477+ 9BD3 CD E2 9B     	call Desplaza_izquierda
 478+ 9BD6 CD 2E 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BD9 CD 56 9C     	call Ciclo_completo_2
 480+ 9BDC 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BDF CB BE        	res 7,(hl)
 482+ 9BE1 C9           	ret
 483+ 9BE2
 484+ 9BE2              Desplaza_izquierda
 485+ 9BE2
 486+ 9BE2 3A DB 88     	ld a,(Vel_left)
 487+ 9BE5 47           	ld b,a
 488+ 9BE6 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BE9 23           1 inc hl
 490+ 9BEA 23           	inc hl
 491+ 9BEB 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BED 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BF0 CD 9E 8C     	call Extrae_address
 494+ 9BF3 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9BF6
 496+ 9BF6              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BF6
 498+ 9BF6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BF6              ; Cuántos movimientos hemos hecho ??
 500+ 9BF6              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BF6
 502+ 9BF6 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BF9 EB           	ex de,hl
 504+ 9BFA A7           	and a
 505+ 9BFB ED 52        	sbc hl,de
 506+ 9BFD CB 3D        	srl l
 507+ 9BFF 3E 08        6 ld a,8
 508+ 9C01 95           	sub l
 509+ 9C02 30 1E        	jr nc,3F
 510+ 9C04
 511+ 9C04              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9C04              ; B="0".
 513+ 9C04
 514+ 9C04 04           4 inc b
 515+ 9C05 3C           	inc a
 516+ 9C06 20 FC        	jr nz,4B
 517+ 9C08 78           	ld a,b
 518+ 9C09 08           	ex af,af
 519+ 9C0A 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9C0D 23           5 inc hl
 521+ 9C0E 23           	inc hl
 522+ 9C0F 10 FC        	djnz 5B
 523+ 9C11 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C14 CD 9E 8C     	call Extrae_address
 525+ 9C17 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9C1A
 527+ 9C1A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C1A              ; _(Posicion_actual).
 529+ 9C1A
 530+ 9C1A 21 C8 88     	ld hl,Posicion_actual
 531+ 9C1D 35           	dec (hl)
 532+ 9C1E 08           	ex af,af
 533+ 9C1F 6F           	ld l,a
 534+ 9C20 18 DD        	jr 6B
 535+ 9C22
 536+ 9C22              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C22
 538+ 9C22 47           3 ld b,a
 539+ 9C23 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9C26 23           2 inc hl
 541+ 9C27 23           	inc hl
 542+ 9C28 10 FC        	djnz 2B
 543+ 9C2A 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C2D C9           8 ret
 545+ 9C2E
 546+ 9C2E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C2E              ;
 548+ 9C2E              ;	modifica_parametros_1er_DESPLZ
 549+ 9C2E              ;
 550+ 9C2E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C2E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C2E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C2E
 554+ 9C2E 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C31 A7           	and a
 556+ 9C32 20 1E        	jr nz,1F
 557+ 9C34 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C35 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9C38 21 C7 88     	ld hl,Columns
 560+ 9C3B 34           	inc (hl)
 561+ 9C3C 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9C3F E6 01        	and 1
 563+ 9C41 20 0F        	jr nz,1F
 564+ 9C43 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C46 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C47 22 C8 88     	ld (Posicion_actual),hl
 567+ 9C4A CD 23 9D     	call Genera_coordenadas
 568+ 9C4D CD A9 9C     	call Dec_CTRL_DESPLZ
 569+ 9C50 18 03        	jr 2F
 570+ 9C52 CD A9 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C55 C9           2 ret
 572+ 9C56
 573+ 9C56              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C56
 575+ 9C56 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C59 FE F7        	cp $f7
 577+ 9C5B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C5D 30 2C        	jr nc,3F
 579+ 9C5F
 580+ 9C5F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C5F
 582+ 9C5F 06 00        	ld b,0
 583+ 9C61 04           4 inc b
 584+ 9C62 3C           	inc a
 585+ 9C63 FE F7        	cp $f7
 586+ 9C65 20 FA        	jr nz,4B
 587+ 9C67 3E FF        	ld a,$ff
 588+ 9C69 90           	sub b
 589+ 9C6A 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9C6D 18 1C        	jr 3F
 591+ 9C6F
 592+ 9C6F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C6F
 594+ 9C6F 21 C7 88     1 ld hl,Columns
 595+ 9C72 35           	dec (hl)
 596+ 9C73 AF           	xor a
 597+ 9C74 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C77 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C7A E6 01        	and 1
 600+ 9C7C 28 0A        	jr z,2F
 601+ 9C7E 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C81 2B           	dec hl
 603+ 9C82 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C85 CD 23 9D     	call Genera_coordenadas
 605+ 9C88
 606+ 9C88              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C88
 608+ 9C88 CD C8 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C8B C9           3 ret
 610+ 9C8C
 611+ 9C8C              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C8C              ;
 613+ 9C8C              ;	19/10/22
 614+ 9C8C              ;
 615+ 9C8C              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C8C              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C8C
 618+ 9C8C 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C8F FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C91 C9           	ret
 621+ 9C92
 622+ 9C92              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C92              ;
 624+ 9C92              ;	19/10/22
 625+ 9C92              ;
 626+ 9C92              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C92              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C92
 629+ 9C92 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C95 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C97 C9           	ret
 632+ 9C98
 633+ 9C98              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C98              ;
 635+ 9C98              ;	24/7/22
 636+ 9C98              ;
 637+ 9C98              ;	Inc_CTRL_DESPLZ
 638+ 9C98              ;
 639+ 9C98              ;
 640+ 9C98              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C98
 642+ 9C98 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C9B 3A DC 88     	ld a,(Vel_right)
 644+ 9C9E A7           	and a
 645+ 9C9F 28 06        	jr z,1F
 646+ 9CA1 47           	ld b,a
 647+ 9CA2 34           3 inc (hl)
 648+ 9CA3 10 FD        	djnz 3B
 649+ 9CA5 18 01        	jr 2F
 650+ 9CA7 34           1 inc (hl)
 651+ 9CA8 C9           2 ret
 652+ 9CA9
 653+ 9CA9              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9CA9              ;
 655+ 9CA9              ;	5/2/23
 656+ 9CA9              ;
 657+ 9CA9              ;	Dec_CTRL_DESPLZ
 658+ 9CA9              ;
 659+ 9CA9              ;
 660+ 9CA9              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9CA9
 662+ 9CA9 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9CAC 3A DB 88     	ld a,(Vel_left)
 664+ 9CAF A7           	and a
 665+ 9CB0 28 06        	jr z,1F
 666+ 9CB2 47           	ld b,a
 667+ 9CB3 35           3 dec (hl)
 668+ 9CB4 10 FD        	djnz 3B
 669+ 9CB6 18 01        	jr 2F
 670+ 9CB8 35           1 dec (hl)
 671+ 9CB9 C9           2 ret
 672+ 9CBA
 673+ 9CBA              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CBA
 675+ 9CBA 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CBD 01 1F 00     	ld bc,31
 677+ 9CC0 A7           	and a
 678+ 9CC1 ED 4A        	adc hl,bc
 679+ 9CC3 22 C8 88     	ld (Posicion_actual),hl
 680+ 9CC6 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CC9 CB C6        	set 0,(hl)
 682+ 9CCB C9           	ret
 683+ 9CCC
 684+ 9CCC              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CCC
 686+ 9CCC 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CCF 01 1F 00     	ld bc,31
 688+ 9CD2 A7           	and a
 689+ 9CD3 ED 42        	sbc hl,bc
 690+ 9CD5 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CD8 21 F0 88     	ld hl,Ctrl_0
 692+ 9CDB CB CE        	set 1,(hl)
 693+ 9CDD C9           	ret
 694+ 9CDE
 695+ 9CDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CDE
 697+ 9CDE 24           Reaparece_abajo inc h
 698+ 9CDF 01 E0 17     	ld bc,$17e0
 699+ 9CE2 A7           	and a
 700+ 9CE3 ED 4A        	adc hl,bc
 701+ 9CE5 22 C8 88     	ld (Posicion_actual),hl
 702+ 9CE8 21 F0 88     	ld hl,Ctrl_0
 703+ 9CEB CB D6        	set 2,(hl)
 704+ 9CED C9           	ret
 705+ 9CEE
 706+ 9CEE              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CEE
 708+ 9CEE 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CF1 A7           	and a
 710+ 9CF2 ED 42        	sbc hl,bc
 711+ 9CF4 22 C8 88     	ld (Posicion_actual),hl
 712+ 9CF7 21 F0 88     	ld hl,Ctrl_0
 713+ 9CFA CB DE        	set 3,(hl)
 714+ 9CFC C9           	ret
 715+ 9CFD
 716+ 9CFD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CFD              ;
 718+ 9CFD              ;	15/07/23
 719+ 9CFD
 720+ 9CFD              Reinicio
 721+ 9CFD
 722+ 9CFD              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CFD
 724+ 9CFD AF           	xor a
 725+ 9CFE 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9D01 CD 1F 9D     	call Limpia_contenido_hl
 727+ 9D04
 728+ 9D04 21 C8 88     	ld hl,Posicion_actual
 729+ 9D07 CD 1F 9D     	call Limpia_contenido_hl
 730+ 9D0A
 731+ 9D0A CD 51 A0     	call Inicializa_Puntero_indice_mov
 732+ 9D0D CD DB 9F     	call Inicia_Puntero_mov
 733+ 9D10
 734+ 9D10 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9D13 06 05        	ld b,5
 736+ 9D15 77           1 ld (hl),a
 737+ 9D16 23           	inc hl
 738+ 9D17 10 FC        	djnz 1B
 739+ 9D19
 740+ 9D19 21 01 89     	ld hl,Ctrl_2
 741+ 9D1C CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D1E
 743+ 9D1E C9           	ret
 744+ 9D1F
 745+ 9D1F 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D20 23           	inc hl
 747+ 9D21 77           	ld (hl),a
 748+ 9D22 C9           	ret
 749+ 9D23
 750+ 9D23
# file closed: Direcciones.asm
1696  9D23              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D23              ; ------------------------------------------------------------------------
   2+ 9D23              ;
   3+ 9D23              ;	02/04/23
   4+ 9D23              ;
   5+ 9D23              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D23              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D23              ;
   8+ 9D23              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D23              ;
  10+ 9D23              ;	Modifica: A,BC y DE.
  11+ 9D23
  12+ 9D23 C5           Genera_coordenadas push bc
  13+ 9D24 E5           	push hl
  14+ 9D25 D5           	push de
  15+ 9D26
  16+ 9D26 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9D29
  18+ 9D29 7D           	ld a,l
  19+ 9D2A E6 1F        	and $1f
  20+ 9D2C 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D2F
  22+ 9D2F CD 98 99     	call calcula_tercio
  23+ 9D32 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D33
  25+ 9D33 1E 00        	ld e,0
  26+ 9D35 7D           	ld a,l
  27+ 9D36 E6 E0        	and $e0
  28+ 9D38 28 01        	jr z,1F
  29+ 9D3A 04           	inc b
  30+ 9D3B
  31+ 9D3B 04           1 inc b
  32+ 9D3C 05           	dec b
  33+ 9D3D 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D3F              ;														; _ , salimos.
  35+ 9D3F 1C           3 inc e
  36+ 9D40 D6 20        	sub 32
  37+ 9D42 20 FB        	jr nz,3B
  38+ 9D44 10 F5        	djnz 1B
  39+ 9D46
  40+ 9D46 7B           2 ld a,e
  41+ 9D47 32 CD 88     	ld (Coordenada_y),a
  42+ 9D4A
  43+ 9D4A D1           	pop de
  44+ 9D4B E1           	pop hl
  45+ 9D4C C1           	pop bc
  46+ 9D4D
  47+ 9D4D C9           	ret
  48+ 9D4E
  49+ 9D4E              ; ------------------------------------------------------------------------
  50+ 9D4E              ;	28/05/23
  51+ 9D4E              ;
  52+ 9D4E              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D4E              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D4E              ;
  55+ 9D4E              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D4E              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D4E              ;
  58+ 9D4E              ;		DE="$120d"
  59+ 9D4E              ;
  60+ 9D4E              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D4E              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D4E              ;
  63+ 9D4E              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D4E
  65+ 9D4E              ;	Modifica: A,BC y DE.
  66+ 9D4E
  67+ 9D4E
  68+ 9D4E              Genera_coordenadas_disparo
  69+ 9D4E
  70+ 9D4E              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D4E
  72+ 9D4E 7D           	ld a,l
  73+ 9D4F E6 1F        	and $1f
  74+ 9D51 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D52 CD 98 99     	call calcula_tercio
  76+ 9D55 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D56 1E 00        	ld e,0
  78+ 9D58 7D           	ld a,l
  79+ 9D59 E6 E0        	and $e0
  80+ 9D5B 28 01        	jr z,1F
  81+ 9D5D 04           	inc b
  82+ 9D5E 1C           1 inc e
  83+ 9D5F D6 20        	sub 32
  84+ 9D61 20 FB        	jr nz,1B
  85+ 9D63 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D65 C9           	ret
  87+ 9D66
# file closed: Genera_coordenadas.asm
1697  9D66              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D66              ; Relojes y temporizaciones.
   2+ 9D66
   3+ 9D66              ; ------------------------------------------------------
   4+ 9D66              ;
   5+ 9D66              ;	16/7/23
   6+ 9D66              ;
   7+ 9D66              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D66              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D66              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D66              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D66              ;
  12+ 9D66              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D66              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D66
  15+ 9D66              ; Disparo_entidad db 1
  16+ 9D66              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D66              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D66
  19+ 9D66              Habilita_disparos
  20+ 9D66
  21+ 9D66 7E           	ld a,(hl)
  22+ 9D67 A7           	and a
  23+ 9D68 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D69
  25+ 9D69 EB           	ex de,hl
  26+ 9D6A
  27+ 9D6A 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D6B C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D6C
  30+ 9D6C              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D6C
  32+ 9D6C 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D6D 7E           	ld a,(hl)
  34+ 9D6E 23           	inc hl
  35+ 9D6F 77           	ld (hl),a
  36+ 9D70
  37+ 9D70 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D71 3E 01        	ld a,1
  39+ 9D73 77           	ld (hl),a
  40+ 9D74 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1698  9D75              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D75
   2+ 9D75
   3+ 9D75              ;   07/07/23
   4+ 9D75              ;
   5+ 9D75              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D75              ;
   7+ 9D75              ;   Codificación:
   8+ 9D75              ;
   9+ 9D75              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D75              ;
  11+ 9D75              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D75              ;
  13+ 9D75              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D75              ;
  15+ 9D75              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D75              ;
  17+ 9D75              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D75              ;                               ..... %01000010 Vel_up 4
  19+ 9D75              ;                                               Vel_down 2
  20+ 9D75              ;                               ..... $42
  21+ 9D75              ;
  22+ 9D75              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D75              ;
  24+ 9D75              ;                               ..... %01000010 Vel_left 4
  25+ 9D75              ;                                               Vel_right 2
  26+ 9D75              ;                               ..... $42
  27+ 9D75              ;
  28+ 9D75              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D75              ;
  30+ 9D75              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D75              ;
  32+ 9D75              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D75              ;
  34+ 9D75              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D75              ;                                     $53
  36+ 9D75              ;
  37+ 9D75              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D75              ;
  39+ 9D75              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D75              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D75              ;
  42+ 9D75              ;                       Arriba ..... $81
  43+ 9D75              ;                       Arriba - izquierda ..... $a1
  44+ 9D75              ;                       Arriba - derecha ..... $91
  45+ 9D75              ;
  46+ 9D75              ;                       Abajo ..... $41
  47+ 9D75              ;                       Abajo - izquierda ..... $61
  48+ 9D75              ;                       Abajo - derecha ..... $51
  49+ 9D75              ;
  50+ 9D75              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D75              ;
  52+ 9D75              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D75              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D75              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D75              ;
  56+ 9D75              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D75              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D75              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D75              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D75              ;
  61+ 9D75              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D75              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D75              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D75              ;
  65+ 9D75              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D75              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D75              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D75              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D75
  70+ 9D75              ; ----- ----- ----- ----- -----
  71+ 9D75
  72+ 9D75 A1 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D77 A9 9D            defw F_1
  74+ 9D79 B3 9D            defw F_2
  75+ 9D7B BD 9D            defw Codo_abajo_derecha
  76+ 9D7D F1 9D            defw Derecha_y_subiendo
  77+ 9D7F FB 9D            defw Derecha_y_subiendo_1
  78+ 9D81 05 9E            defw F_3
  79+ 9D83 0F 9E            defw F_4
  80+ 9D85 19 9E            defw Derecha_y_bajando
  81+ 9D87 23 9E            defw Derecha_y_bajando_1
  82+ 9D89 2D 9E            defw Derecha_y_bajando_2
  83+ 9D8B 37 9E            defw Codo_derecha_abajo
  84+ 9D8D 67 9E            defw Codo_abajo_izq.
  85+ 9D8F 9B 9E            defw Izquierda_y_subiendo
  86+ 9D91 A5 9E            defw Izquierda_y_subiendo_1
  87+ 9D93 AF 9E            defw F_5
  88+ 9D95 B9 9E            defw F_6
  89+ 9D97 C3 9E            defw Izquierda_y_bajando
  90+ 9D99 CD 9E            defw Izquierda_y_bajando_1
  91+ 9D9B D7 9E            defw Izquierda_y_bajando_2
  92+ 9D9D E1 9E            defw Codo_izquierda_abajo
  93+ 9D9F 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DA1
  95+ 9DA1 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DA5 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DA9
  98+ 9DA9 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DAD 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DB1 08 00
 100+ 9DB3 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DB7 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DBB 0F FE
 102+ 9DBD
 103+ 9DBD 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DC1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DC5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DC9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DCD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DD9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DDD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DE1 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DE5 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DE9 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DED 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DF1
 117+ 9DF1 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DF5 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DF9 06 00
 119+ 9DFB
 120+ 9DFB 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DFF 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E03 02 00
 122+ 9E05
 123+ 9E05 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E09 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E0D 04 00
 125+ 9E0F 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E13 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E17 08 00
 127+ 9E19
 128+ 9E19 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E1D 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E21 02 00
 130+ 9E23
 131+ 9E23 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E27 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E2B 06 00
 133+ 9E2D
 134+ 9E2D 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E31 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E35 06 00
 136+ 9E37
 137+ 9E37              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E37
 139+ 9E37 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E3B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E3F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E43 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E47 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E4B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E5B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E5F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E63 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E67
 152+ 9E67 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E6B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E6F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E73 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E77 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E7B 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E7F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E83 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E87 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E8B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E8F 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E93 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E97 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E9B
 166+ 9E9B 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E9F 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EA3 06 00
 168+ 9EA5
 169+ 9EA5 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EA9 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EAD 02 00
 171+ 9EAF
 172+ 9EAF 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EB3 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EB7 04 00
 174+ 9EB9 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EBD 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EC1 08 00
 176+ 9EC3
 177+ 9EC3 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EC7 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9ECB 02 00
 179+ 9ECD
 180+ 9ECD 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9ED1 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9ED5 06 00
 182+ 9ED7
 183+ 9ED7 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EDB 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EDF 06 00
 185+ 9EE1
 186+ 9EE1 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EE5 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EE9 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EED 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EF1 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EF5 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EF9 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EFD 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F01 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F05 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F09 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F0D 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F11
 199+ 9F11              ; ----- ----- ----- ----- -----
 200+ 9F11              ;
 201+ 9F11              ;   27/06/23
 202+ 9F11
 203+ 9F11              Movimiento
 204+ 9F11
 205+ 9F11              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F11
 207+ 9F11              ;    ld hl,(Posicion_actual)
 208+ 9F11
 209+ 9F11 FB               ei
 210+ 9F12
 211+ 9F12 3A 01 89         ld a,(Ctrl_2)
 212+ 9F15 CB 57            bit 2,a
 213+ 9F17 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F19
 215+ 9F19 2A F3 88         ld hl,(Puntero_mov)
 216+ 9F1C 7E               ld a,(hl)
 217+ 9F1D
 218+ 9F1D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F1D
 220+ 9F1D              Inicia_desplazamiento.
 221+ 9F1D
 222+ 9F1D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F1D
 224+ 9F1D CD 12 A0         call Ajusta_velocidad_desplazamiento
 225+ 9F20
 226+ 9F20              ; Iniciamos (Repetimos_mov).
 227+ 9F20
 228+ 9F20 7E               ld a,(hl)
 229+ 9F21 E6 0F            and $0f
 230+ 9F23 32 F9 88         ld (Repetimos_desplazamiento),a
 231+ 9F26 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F29
 233+ 9F29              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F29
 235+ 9F29 23               inc hl
 236+ 9F2A 7E               ld a,(hl)
 237+ 9F2B 32 FC 88         ld (Cola_de_desplazamiento),a
 238+ 9F2E 2B               dec hl
 239+ 9F2F
 240+ 9F2F 21 01 89         ld hl,Ctrl_2
 241+ 9F32 CB D6            set 2,(hl)
 242+ 9F34
 243+ 9F34              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F34              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F34
 246+ 9F34              Desplazamiento_iniciado
 247+ 9F34
 248+ 9F34 CD E6 9F         call Aplica_desplazamiento
 249+ 9F37
 250+ 9F37 3A 01 89         ld a,(Ctrl_2)
 251+ 9F3A CB 67            bit 4,a
 252+ 9F3C C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F3D
 254+ 9F3D 21 F9 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F40 35               dec (hl)
 256+ 9F41 C0               ret nz
 257+ 9F42
 258+ 9F42              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F42              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F42              ; Analiza (Cola_de_desplazamiento).
 261+ 9F42
 262+ 9F42 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F45 A7               and a
 264+ 9F46 CC 3B A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F49 28 30            jr z,Reinicia_el_movimiento
 266+ 9F4B
 267+ 9F4B FE FF            cp $ff
 268+ 9F4D 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F4F
 270+ 9F4F FE FE            cp $fe
 271+ 9F51 CC BF 9F         call z,Fijamos_bucle
 272+ 9F54 28 25            jr z,Reinicia_el_movimiento
 273+ 9F56
 274+ 9F56 FE FD            cp $fd
 275+ 9F58 20 11            jr nz,1F
 276+ 9F5A
 277+ 9F5A              ; ---
 278+ 9F5A              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F5A
 280+ 9F5A 3A 01 89         ld a,(Ctrl_2)
 281+ 9F5D CB 5F            bit 3,a
 282+ 9F5F 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F61
 284+ 9F61              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F61
 286+ 9F61 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F64 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F66
 289+ 9F66 CD D0 9F         call Inicia_Repetimos_movimiento
 290+ 9F69 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F6B              ; ---
 292+ 9F6B
 293+ 9F6B FE 01        1 cp 1
 294+ 9F6D CA A9 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F70
 296+ 9F70 3D               dec a
 297+ 9F71 32 FC 88         ld (Cola_de_desplazamiento),a
 298+ 9F74
 299+ 9F74 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F77 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F7A              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F7A C9               ret
 303+ 9F7B
 304+ 9F7B              Reinicia_el_movimiento
 305+ 9F7B
 306+ 9F7B F3               di
 307+ 9F7C
 308+ 9F7C 3A 01 89         ld a,(Ctrl_2)
 309+ 9F7F CB 5F            bit 3,a
 310+ 9F81 28 1B            jr z,2F
 311+ 9F83
 312+ 9F83              ; (Cola_de_desplazamiento)="254".
 313+ 9F83
 314+ 9F83 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F86 35               dec (hl)
 316+ 9F87 20 15            jr nz,2F
 317+ 9F89
 318+ 9F89              ; Fin de las repeticiones del último movimiento.
 319+ 9F89
 320+ 9F89 21 01 89         ld hl,Ctrl_2
 321+ 9F8C CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F8E
 323+ 9F8E 2A F3 88         ld hl,(Puntero_mov)
 324+ 9F91 23               inc hl
 325+ 9F92 23               inc hl
 326+ 9F93 23               inc hl
 327+ 9F94 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F97              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F97 7E               ld a,(hl)
 330+ 9F98 32 FC 88         ld (Cola_de_desplazamiento),a
 331+ 9F9B
 332+ 9F9B C3 42 9F         jp Cola
 333+ 9F9E
 334+ 9F9E CD DB 9F     2 call Inicia_Puntero_mov
 335+ 9FA1
 336+ 9FA1 21 01 89         ld hl,Ctrl_2
 337+ 9FA4 CB 96            res 2,(hl)
 338+ 9FA6
 339+ 9FA6 C3 11 9F         jp Movimiento
 340+ 9FA9
 341+ 9FA9              Siguiente_desplazamiento
 342+ 9FA9
 343+ 9FA9              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FA9              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FA9
 346+ 9FA9 21 01 89         ld hl,Ctrl_2
 347+ 9FAC CB 96            res 2,(hl)
 348+ 9FAE
 349+ 9FAE 2A F3 88         ld hl,(Puntero_mov)
 350+ 9FB1 23               inc hl
 351+ 9FB2 23               inc hl
 352+ 9FB3 22 F3 88         ld (Puntero_mov),hl
 353+ 9FB6
 354+ 9FB6 7E               ld a,(hl)
 355+ 9FB7 A7               and a
 356+ 9FB8 CC 3B A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FBB CA 7B 9F         jp z,Reinicia_el_movimiento
 358+ 9FBE
 359+ 9FBE C9               ret
 360+ 9FBF              ; Subrutinas -----------------------------------------
 361+ 9FBF              ; ---------- --------- --------- ---------- ----------
 362+ 9FBF              ;
 363+ 9FBF              ;   24/07/23
 364+ 9FBF              ;
 365+ 9FBF              ;   Fijamos_bucle
 366+ 9FBF              ;
 367+ 9FBF              ;
 368+ 9FBF
 369+ 9FBF              Fijamos_bucle
 370+ 9FBF
 371+ 9FBF 3A F7 88         ld a,(Incrementa_puntero)
 372+ 9FC2 3C               inc a
 373+ 9FC3 32 F8 88         ld (Incrementa_puntero_backup),a
 374+ 9FC6
 375+ 9FC6 CD 3B A0         call Incrementa_Puntero_indice_mov
 376+ 9FC9 2A F1 88         ld hl,(Puntero_indice_mov)
 377+ 9FCC 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FCF C9               ret
 379+ 9FD0
 380+ 9FD0              ; ---------- --------- --------- ---------- ----------
 381+ 9FD0              ;
 382+ 9FD0              ;   07/7/23
 383+ 9FD0              ;
 384+ 9FD0              ;   Inicia_Repetimos_movimiento
 385+ 9FD0              ;
 386+ 9FD0              ;
 387+ 9FD0
 388+ 9FD0              Inicia_Repetimos_movimiento
 389+ 9FD0
 390+ 9FD0              ; Iniciamos (Repetimos_movimiento).
 391+ 9FD0
 392+ 9FD0 DD 2A F3 88      ld ix,(Puntero_mov)
 393+ 9FD4 DD 7E 02         ld a,(ix+2)
 394+ 9FD7 32 FB 88         ld (Repetimos_movimiento),a
 395+ 9FDA
 396+ 9FDA C9               ret
 397+ 9FDB
 398+ 9FDB              ; ---------- --------- --------- ---------- ----------
 399+ 9FDB              ;
 400+ 9FDB              ;   26/6/23
 401+ 9FDB              ;
 402+ 9FDB              ;   Inicia_Puntero_mov
 403+ 9FDB              ;
 404+ 9FDB              ;
 405+ 9FDB
 406+ 9FDB 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FDE 5E               ld e,(hl)
 408+ 9FDF 23               inc hl
 409+ 9FE0 56               ld d,(hl)
 410+ 9FE1 EB               ex de,hl
 411+ 9FE2 22 F3 88         ld (Puntero_mov),hl
 412+ 9FE5 C9               ret
 413+ 9FE6
 414+ 9FE6              ; ---------- --------- --------- ---------- ----------
 415+ 9FE6              ;
 416+ 9FE6              ;   27/06/23
 417+ 9FE6              ;
 418+ 9FE6              ;   Aplica_movimiento.
 419+ 9FE6
 420+ 9FE6              Aplica_desplazamiento
 421+ 9FE6
 422+ 9FE6              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FE6
 424+ 9FE6 2A F3 88         ld hl, (Puntero_mov)
 425+ 9FE9
 426+ 9FE9 7E               ld a,(hl)
 427+ 9FEA E6 F0            and $f0
 428+ 9FEC C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FED
 430+ 9FED CB 7E            bit 7,(hl)
 431+ 9FEF 28 03            jr z,1F
 432+ 9FF1 CD 0F 9A         call Mov_up
 433+ 9FF4 2A F3 88     1 ld hl, (Puntero_mov)
 434+ 9FF7 CB 76            bit 6,(hl)
 435+ 9FF9 28 03            jr z,2F
 436+ 9FFB CD DE 99         call Mov_down
 437+ 9FFE 2A F3 88     2 ld hl, (Puntero_mov)
 438+ A001 CB 6E            bit 5,(hl)
 439+ A003 28 03            jr z,3F
 440+ A005 CD 70 9B         call Mov_left
 441+ A008 2A F3 88     3 ld hl, (Puntero_mov)
 442+ A00B CB 66            bit 4,(hl)
 443+ A00D C8               ret z
 444+ A00E CD 52 9A         call Mov_right
 445+ A011 C9               ret
 446+ A012
 447+ A012              ; ---------- --------- --------- ---------- ----------
 448+ A012              ;
 449+ A012              ;   26/06/23
 450+ A012              ;
 451+ A012              ;   Ajusta_velocidad_desplazamiento.
 452+ A012
 453+ A012              Ajusta_velocidad_desplazamiento
 454+ A012
 455+ A012              ; 1er byte de la cadena de movimiento.
 456+ A012              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A012
 458+ A012 CD 30 A0         call Extrae_nibble_alto
 459+ A015
 460+ A015 32 DD 88         ld (Vel_up),a
 461+ A018 79               ld a,c
 462+ A019 E6 0F            and $0f
 463+ A01B 32 DE 88         ld (Vel_down),a
 464+ A01E
 465+ A01E              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A01E              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A01E
 468+ A01E 23               inc hl
 469+ A01F CD 30 A0         call Extrae_nibble_alto
 470+ A022
 471+ A022 32 DB 88         ld (Vel_left),a
 472+ A025 79               ld a,c
 473+ A026 E6 0F            and $0f
 474+ A028 32 DC 88         ld (Vel_right),a
 475+ A02B
 476+ A02B              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A02B
 478+ A02B 23               inc hl
 479+ A02C 22 F3 88         ld (Puntero_mov),hl
 480+ A02F C9               ret
 481+ A030
 482+ A030 06 04        Extrae_nibble_alto ld b,4
 483+ A032 7E               ld a,(hl)
 484+ A033 4F               ld c,a
 485+ A034 E6 F0            and $f0
 486+ A036 CB 3F        1 srl a
 487+ A038 10 FC            djnz 1B
 488+ A03A C9               ret
 489+ A03B
 490+ A03B              ; ---------- --------- --------- ---------- ----------
 491+ A03B              ;
 492+ A03B              ;   5/7/23
 493+ A03B              ;
 494+ A03B              ;   Incrementa_Puntero_indice_mov
 495+ A03B
 496+ A03B              Incrementa_Puntero_indice_mov
 497+ A03B
 498+ A03B 21 F7 88         ld hl,Incrementa_puntero
 499+ A03E 34               inc (hl)
 500+ A03F
 501+ A03F 2A F1 88         ld hl,(Puntero_indice_mov)
 502+ A042 01 02 00         ld bc,2
 503+ A045 A7               and a
 504+ A046 09               add hl,bc
 505+ A047 22 F1 88         ld (Puntero_indice_mov),hl
 506+ A04A
 507+ A04A 7E               ld a,(hl)
 508+ A04B A7               and a
 509+ A04C
 510+ A04C              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A04C
 512+ A04C              ;    jr z,$
 513+ A04C
 514+ A04C              ;! Reinicia el Patrón de movimiento.
 515+ A04C
 516+ A04C CC 51 A0         call z,Inicializa_Puntero_indice_mov
 517+ A04F
 518+ A04F AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A050
 520+ A050 C9               ret
 521+ A051
 522+ A051
 523+ A051              ; ---------- --------- --------- ---------- ----------
 524+ A051              ;
 525+ A051              ;   24/07/23
 526+ A051              ;
 527+ A051              ;   Inicializa_Puntero_indice_mov
 528+ A051
 529+ A051              Inicializa_Puntero_indice_mov
 530+ A051
 531+ A051              ; Existe etiqueta de bucle principal???
 532+ A051
 533+ A051 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A054 24               inc h
 535+ A055 25               dec h
 536+ A056 28 05            jr z,2F
 537+ A058
 538+ A058 22 F1 88         ld (Puntero_indice_mov),hl
 539+ A05B 18 14            jr 3F
 540+ A05D
 541+ A05D              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A05D
 543+ A05D 3A F7 88     2 ld a,(Incrementa_puntero)
 544+ A060 47               ld b,a
 545+ A061
 546+ A061 2A F1 88         ld hl,(Puntero_indice_mov)
 547+ A064 2B           1 dec hl
 548+ A065 2B               dec hl
 549+ A066 10 FC            djnz 1B
 550+ A068 22 F1 88         ld (Puntero_indice_mov),hl
 551+ A06B
 552+ A06B AF               xor a
 553+ A06C 32 F7 88         ld (Incrementa_puntero),a
 554+ A06F 18 06            jr 4F
 555+ A071
 556+ A071 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 557+ A074 32 F7 88         ld (Incrementa_puntero),a
 558+ A077 C9           4 ret
 559+ A078
 560+ A078
 561+ A078
# file closed: Patrones_de_mov.asm
1699  A078              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A078              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A078              ;
   3+ A078              ;	4/9/23
   4+ A078              ;
   5+ A078              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A078
   7+ A078              ;	ADC HL,SP	LD (addr),SP
   8+ A078              ;	ADD HL,SP	LD SP,(addr)
   9+ A078              ;	ADD IX,SP	LD SP,nn
  10+ A078              ; 	ADD IY,SP	LD SP,HL
  11+ A078              ;				LD SP,IX
  12+ A078              ;	DEC SP		LD SP,IY
  13+ A078
  14+ A078              ;	EX (SP),HL
  15+ A078              ;	EX (SP),IX
  16+ A078              ;	EX (SP),IY
  17+ A078
  18+ A078              ;	INC SP
  19+ A078
  20+ A078                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 14 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD              ; Disparo o entidad?
  41+ 7FAD
  42+ 7FAD 3A 03 89         ld a,(Ctrl_1)
  43+ 7FB0 CB 47            bit 0,a
  44+ 7FB2 28 05            jr z,2F
  45+ 7FB4
  46+ 7FB4 2A 1C 89         ld hl,(Stack_snapshot_disparos)
  47+ 7FB7 18 0F            jr 4F
  48+ 7FB9
  49+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  50+ 7FB9
  51+ 7FB9 3A F0 88     2 ld a,(Ctrl_0)
  52+ 7FBC CB 77            bit 6,a
  53+ 7FBE 28 05            jr z,7F
  54+ 7FC0
  55+ 7FC0              ; Guardamos foto de Amadeus.
  56+ 7FC0
  57+ 7FC0 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  58+ 7FC3 18 03            jr 4F
  59+ 7FC5
  60+ 7FC5 2A 1A 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  61+ 7FC8
  62+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  63+ 7FCA
  64+ 7FCA D1           1 pop de
  65+ 7FCB 73               ld (hl),e
  66+ 7FCC 23               inc hl
  67+ 7FCD 72               ld (hl),d
  68+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  69+ 7FCF 10 F9            djnz 1B
  70+ 7FD1
  71+ 7FD1              ; Disparo o entidad ?
  72+ 7FD1
  73+ 7FD1 3A 03 89         ld a,(Ctrl_1)
  74+ 7FD4 CB 47            bit 0,a
  75+ 7FD6 28 05            jr z,5F
  76+ 7FD8
  77+ 7FD8 22 1C 89         ld (Stack_snapshot_disparos),hl
  78+ 7FDB 18 13            jr 6F
  79+ 7FDD
  80+ 7FDD              ; Entidad o Amadeus ?
  81+ 7FDD
  82+ 7FDD 3A F0 88     5 ld a,(Ctrl_0)
  83+ 7FE0 CB 77            bit 6,a
  84+ 7FE2 28 09            jr z,8F
  85+ 7FE4
  86+ 7FE4 22 22 89         ld (End_Snapshot_Amadeus),hl
  87+ 7FE7 ED 7B 14 89      ld sp,(Stack)
  88+ 7FEB FB               ei
  89+ 7FEC C9               ret
  90+ 7FED
  91+ 7FED 22 1A 89     8 ld (Stack_snapshot),hl
  92+ 7FF0 ED 7B 14 89  6 ld sp,(Stack)
  93+ 7FF4
  94+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  95+ 7FF4
  96+ 7FF4 5D               ld e,l
  97+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  98+ 7FF6
  99+ 7FF6 2A 38 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 100+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 101+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 102+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
 103+ 7FFC
 104+ 7FFC FB               ei
 105+ 7FFD C9               ret
 106+ 7FFE
 107+ 7FFE              ; ------------------------------------------------
 108+ 7FFE              ;
 109+ 7FFE              ;   3/08/23
 110+ 7FFE              ;
 111+ 7FFE              ;   La rutina estará situada justo después de:
 112+ 7FFE              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 113+ 7FFE
 114+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 115+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 116+ 7FFE
 117+ 7FFE                  org $72ec
 118+ 72EC
 119+ 72EC              Gestiona_albumes_de_fotos
 120+ 72EC
 121+ 72EC              ;   En 1er lugar limpiamos el FRAME pintado.
 122+ 72EC              ;   Vaciamos Album_de_fotos.
 123+ 72EC
 124+ 72EC              ;   Album_de_fotos. Contiene datos ???
 125+ 72EC
 126+ 72EC 21 01 70         ld hl,Album_de_fotos+1
 127+ 72EF 7E               ld a,(hl)
 128+ 72F0 A7               and a
 129+ 72F1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 130+ 72F3
 131+ 72F3 2A 1E 89         ld hl,(End_Snapshot)
 132+ 72F6 01 00 70         ld bc,Album_de_fotos
 133+ 72F9 11 01 70         ld de,Album_de_fotos+1
 134+ 72FC AF               xor a
 135+ 72FD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 136+ 72FE
 137+ 72FE CD 8E 73         call Limpia_album
 138+ 7301
 139+ 7301 21 00 00         ld hl,0
 140+ 7304 22 1E 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 141+ 7307
 142+ 7307              ; ----- ----- ----- -----
 143+ 7307
 144+ 7307              ;   Album_de_fotos_1. Contiene datos ???
 145+ 7307
 146+ 7307 21 55 70     3 ld hl,Album_de_fotos_1+1
 147+ 730A 7E               ld a,(hl)
 148+ 730B A7               and a
 149+ 730C 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 150+ 730E              ;                               ; _ información del album2 al album1.
 151+ 730E
 152+ 730E              ; ----- ----- ----- -----
 153+ 730E              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 154+ 730E
 155+ 730E 2A 24 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 156+ 7311 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 157+ 7314 11 00 70         ld de,Album_de_fotos        ; Destino.
 158+ 7317
 159+ 7317 CD 8E 73         call Limpia_album
 160+ 731A
 161+ 731A              ;   Calculamos (End_Snapshot)
 162+ 731A
 163+ 731A A7               and a
 164+ 731B ED 4A            adc hl,bc
 165+ 731D 22 1E 89         ld (End_Snapshot),hl
 166+ 7320
 167+ 7320              ;   Limpiamos Album_de_fotos_1.
 168+ 7320
 169+ 7320 2A 24 89         ld hl,(End_Snapshot_1)
 170+ 7323 01 54 70         ld bc,Album_de_fotos_1
 171+ 7326 11 55 70         ld de,Album_de_fotos_1+1
 172+ 7329 AF               xor a
 173+ 732A 02               ld (bc),a
 174+ 732B
 175+ 732B CD 8E 73         call Limpia_album
 176+ 732E
 177+ 732E 21 00 00         ld hl,0
 178+ 7331 22 24 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 179+ 7334
 180+ 7334              ; ----- ----- ----- -----
 181+ 7334
 182+ 7334              ;   Album_de_fotos_2. Contiene datos ???
 183+ 7334
 184+ 7334 21 A9 70     1 ld hl,Album_de_fotos_2+1
 185+ 7337 7E               ld a,(hl)
 186+ 7338 A7               and a
 187+ 7339 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 188+ 733B              ;                               ; _ información del album3 al album2.
 189+ 733B              ; ----- ----- ----- -----
 190+ 733B              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 191+ 733B
 192+ 733B 2A 28 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 193+ 733E 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 194+ 7341 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 195+ 7344
 196+ 7344 CD 8E 73         call Limpia_album
 197+ 7347
 198+ 7347              ;   Calculamos (End_Snapshot_1):
 199+ 7347
 200+ 7347 A7               and a
 201+ 7348 ED 4A            adc hl,bc
 202+ 734A 22 24 89         ld (End_Snapshot_1),hl
 203+ 734D
 204+ 734D              ;   Limpiamos Album_de_fotos_2.
 205+ 734D
 206+ 734D 2A 28 89         ld hl,(End_Snapshot_2)
 207+ 7350 01 A8 70         ld bc,Album_de_fotos_2
 208+ 7353 11 A9 70         ld de,Album_de_fotos_2+1
 209+ 7356 AF               xor a
 210+ 7357 02               ld (bc),a
 211+ 7358
 212+ 7358 CD 8E 73         call Limpia_album
 213+ 735B
 214+ 735B 21 00 00         ld hl,0
 215+ 735E 22 28 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 216+ 7361
 217+ 7361              ; ----- ----- ----- -----
 218+ 7361
 219+ 7361              ;   Album_de_fotos_3. Contiene datos ???
 220+ 7361
 221+ 7361 21 FD 70     2 ld hl,Album_de_fotos_3+1
 222+ 7364 7E               ld a,(hl)
 223+ 7365 A7               and a
 224+ 7366 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 225+ 7367
 226+ 7367              ; ----- ----- ----- -----
 227+ 7367              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 228+ 7367
 229+ 7367 2A 2C 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 230+ 736A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 231+ 736D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 232+ 7370
 233+ 7370 CD 8E 73         call Limpia_album
 234+ 7373
 235+ 7373              ;   Calculamos (End_Snapshot_2):
 236+ 7373
 237+ 7373 A7               and a
 238+ 7374 ED 4A            adc hl,bc
 239+ 7376 22 28 89         ld (End_Snapshot_2),hl
 240+ 7379
 241+ 7379              ;   Limpiamos Album_de_fotos_3.
 242+ 7379
 243+ 7379 2A 2C 89         ld hl,(End_Snapshot_3)
 244+ 737C 01 FC 70         ld bc,Album_de_fotos_3
 245+ 737F 11 FD 70         ld de,Album_de_fotos_3+1
 246+ 7382 AF               xor a
 247+ 7383 02               ld (bc),a
 248+ 7384
 249+ 7384 CD 8E 73         call Limpia_album
 250+ 7387
 251+ 7387 21 00 00         ld hl,0
 252+ 738A 22 2C 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 253+ 738D C9               ret
 254+ 738E
 255+ 738E              ; ----------------------------------------------------
 256+ 738E              ;
 257+ 738E              ;   10/8/23
 258+ 738E              ;
 259+ 738E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 260+ 738E              ;
 261+ 738E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 262+ 738E              ;           BC ..... Dirección de inicio del álbum.
 263+ 738E              ;           DE ..... Dirección de inicio del álbum. +1
 264+ 738E
 265+ 738E              ;    ld hl,(End_Snapshot)
 266+ 738E              ;    ld bc,Album_de_fotos
 267+ 738E              ;    ld de,Album_de_fotos+1
 268+ 738E
 269+ 738E              ;   MODIFICA: A,HL,BC y DE.
 270+ 738E
 271+ 738E              Limpia_album
 272+ 738E D5               push de                     ; Guardo DESTINO.
 273+ 738F C5               push bc                     ; Guardo ORIGEN.
 274+ 7390 ED 42            sbc hl,bc
 275+ 7392 4D               ld c,l
 276+ 7393 44               ld b,h
 277+ 7394 E1               pop hl
 278+ 7395 C5               push bc
 279+ 7396 ED B0            ldir
 280+ 7398 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 281+ 7399 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 282+ 739A C9               ret                         ; _ a otro).
 283+ 739B              ;
 284+ 739B
 285+ 739B              ; -----------------------------------------------
 286+ 739B
 287+ 739B
 288+ 739B
 289+ 739B
 290+ 739B
# file closed: Guarda_foto_registros.asm
1700  739B
1701  739B              	SAVESNA "Pruebas.sna", START
1702  739B
1703  739B
1704  739B
1705  739B
# file closed: Banco_de_Pruebas.asm
