# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 A7 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 3A B1 89     	ld a,(Ctrl_3)
  40  AA1C CB 47        	bit 0,a
  41  AA1E 28 03        	jr z,1F
  42  AA20
  43  AA20 CD 4B 92     	call Extrae_foto_entidades
  44  AA23
  45  AA23              ;	ld a,6
  46  AA23              ;	out ($fe),a
  47  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  48  AA23
  49  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  50  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  51  AA23
  52  AA23              ;	ld a,7
  53  AA23              ;	out ($fe),a												; Borde blanco.
  54  AA23              ;	call Guarda_parametros_DRAW
  55  AA23              ;	call Restore_Amadeus
  56  AA23
  57  AA23              ; Posible colisión Entidad-Amadeus ???
  58  AA23
  59  AA23              ;	ld a,(Impacto2)
  60  AA23              ;	bit 2,a
  61  AA23              ;	jr z,1F
  62  AA23
  63  AA23              ;	call Detecta_colision_nave_entidad
  64  AA23
  65  AA23              ;1 ld a,4
  66  AA23              ;	out ($fe),a
  67  AA23              ;	call Gestiona_Amadeus
  68  AA23
  69  AA23              ;	ld a,7
  70  AA23              ;	out ($fe),a											; Borde blanco.
  71  AA23              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  72  AA23              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  73  AA23
  74  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  75  AA23
  76  AA23              ;	call Recupera_parametros_DRAW
  77  AA23
  78  AA23 CD 2C 8D     1 call Actualiza_relojes
  79  AA26
  80  AA26 21 B1 89     	ld hl,Ctrl_3
  81  AA29 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  82  AA2B
  83  AA2B FD E1        	pop iy
  84  AA2D DD E1        	pop ix
  85  AA2F F1           	pop af
  86  AA30 C1           	pop bc
  87  AA31 D1           	pop de
  88  AA32 E1           	pop hl
  89  AA33 D9           	exx
  90  AA34 C1           	pop bc
  91  AA35 D1           	pop de
  92  AA36 E1           	pop hl
  93  AA37 08           	ex af,af'
  94  AA38 F1           	pop af
  95  AA39 08           	ex af,af'
  96  AA3A D9           	exx
  97  AA3B
  98  AA3B ED 7B A7 89  	ld sp,(Stack_3)
  99  AA3F
 100  AA3F FB           	ei
 101  AA40
 102  AA40 3E 01        	ld a,1												; Borde azul.
 103  AA42 D3 FE        	out ($fe),a
 104  AA44
 105  AA44 C9           	ret
 106  AA45
 107  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 108  AA45
 109  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 110  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D 8C 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 111  878C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 878C
   2+ 878C
   3+ 878C              ;   07/07/23
   4+ 878C              ;
   5+ 878C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 878C              ;
   7+ 878C              ;   Codificación:
   8+ 878C              ;
   9+ 878C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 878C              ;
  11+ 878C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 878C              ;
  13+ 878C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 878C              ;
  15+ 878C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 878C              ;
  17+ 878C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 878C              ;                               ..... %01000010 Vel_up 4
  19+ 878C              ;                                               Vel_down 2
  20+ 878C              ;                               ..... $42
  21+ 878C              ;
  22+ 878C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 878C              ;
  24+ 878C              ;                               ..... %01000010 Vel_left 4
  25+ 878C              ;                                               Vel_right 2
  26+ 878C              ;                               ..... $42
  27+ 878C              ;
  28+ 878C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 878C              ;
  30+ 878C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 878C              ;
  32+ 878C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 878C              ;
  34+ 878C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 878C              ;                                     $53
  36+ 878C              ;
  37+ 878C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 878C              ;
  39+ 878C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 878C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 878C              ;
  42+ 878C              ;                       Arriba ..... $81
  43+ 878C              ;                       Arriba - izquierda ..... $a1
  44+ 878C              ;                       Arriba - derecha ..... $91
  45+ 878C              ;
  46+ 878C              ;                       Abajo ..... $41
  47+ 878C              ;                       Abajo - izquierda ..... $61
  48+ 878C              ;                       Abajo - derecha ..... $51
  49+ 878C              ;
  50+ 878C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 878C              ;
  52+ 878C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 878C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 878C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 878C              ;
  56+ 878C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 878C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 878C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 878C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 878C              ;
  61+ 878C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 878C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 878C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 878C              ;
  65+ 878C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 878C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 878C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 878C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 878C
  70+ 878C              ; ----- ----- ----- ----- -----
  71+ 878C
  72+ 878C B8 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 878E C0 87            defw F_1
  74+ 8790 CA 87            defw F_2
  75+ 8792 D4 87            defw Codo_abajo_derecha
  76+ 8794 08 88            defw Derecha_y_subiendo
  77+ 8796 12 88            defw Derecha_y_subiendo_1
  78+ 8798 1C 88            defw F_3
  79+ 879A 26 88            defw F_4
  80+ 879C 30 88            defw Derecha_y_bajando
  81+ 879E 3A 88            defw Derecha_y_bajando_1
  82+ 87A0 44 88            defw Derecha_y_bajando_2
  83+ 87A2 4E 88            defw Codo_derecha_abajo
  84+ 87A4 7E 88            defw Codo_abajo_izq.
  85+ 87A6 B2 88            defw Izquierda_y_subiendo
  86+ 87A8 BC 88            defw Izquierda_y_subiendo_1
  87+ 87AA C6 88            defw F_5
  88+ 87AC D0 88            defw F_6
  89+ 87AE DA 88            defw Izquierda_y_bajando
  90+ 87B0 E4 88            defw Izquierda_y_bajando_1
  91+ 87B2 EE 88            defw Izquierda_y_bajando_2
  92+ 87B4 F8 88            defw Codo_izquierda_abajo
  93+ 87B6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87B8
  95+ 87B8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87BC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87C0
  98+ 87C0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87C4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87C8 08 00
 100+ 87CA
 101+ 87CA 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87CE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87D2 0F FE
 103+ 87D4
 104+ 87D4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 87D8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 87DC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 87E0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 87E4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 87E8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 87EC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 87F0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 87F4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 87F8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 87FC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8800 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8804 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8808
 118+ 8808 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 880C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8810 06 00
 120+ 8812
 121+ 8812 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8816 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 881A 02 00
 123+ 881C
 124+ 881C 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8820 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8824 04 00
 126+ 8826
 127+ 8826 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 882A 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 882E 08 00
 129+ 8830
 130+ 8830 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8834 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8838 02 00
 132+ 883A
 133+ 883A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 883E 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8842 06 00
 135+ 8844
 136+ 8844 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8848 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 884C 06 00
 138+ 884E
 139+ 884E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 884E
 141+ 884E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8852 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8856 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 885A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 885E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8862 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8866 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 886A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 886E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8872 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8876 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 887A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 887E
 154+ 887E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8882 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8886 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 888A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 888E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8892 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8896 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 889A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 889E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88A2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88A6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88AA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88AE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88B2
 168+ 88B2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88B6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88BA 06 00
 170+ 88BC
 171+ 88BC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88C0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88C4 02 00
 173+ 88C6
 174+ 88C6 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88CA 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88CE 04 00
 176+ 88D0
 177+ 88D0 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 88D4 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 88D8 08 00
 179+ 88DA
 180+ 88DA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 88DE 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 88E2 02 00
 182+ 88E4
 183+ 88E4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 88E8 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 88EC 06 00
 185+ 88EE
 186+ 88EE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 88F2 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 88F6 06 00
 188+ 88F8
 189+ 88F8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 88FC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8900 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8904 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8908 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 890C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8910 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8914 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8918 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 891C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8920 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8924 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8928
 202+ 8928
 203+ 8928
 204+ 8928
 205+ 8928
 206+ 8928
 207+ 8928
 208+ 8928
 209+ 8928
 210+ 8928
# file closed: Patrones_de_mov.asm
 112  8928              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8928              ; 19/1/24
   2+ 8928
   3+ 8928              Indice_de_niveles
   4+ 8928
   5+ 8928 30 89        	defw Nivel_1
   6+ 892A 3B 89        	defw Nivel_2
   7+ 892C
   8+ 892C              ;	...
   9+ 892C              ;	...
  10+ 892C              ;	+ Niveles ...
  11+ 892C
  12+ 892C 00 00        	defw 0
  13+ 892E 00 00        	defw 0
  14+ 8930
  15+ 8930 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8931 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8935 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8939 01 01
  18+ 893B
  19+ 893B 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 893C 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8940 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8944 01 02
  22+ 8946 02 01 01 01  	db 2,1,1,1,1,2
  22+ 894A 01 02
  23+ 894C
# file closed: Niveles.asm
 113  894C
 114  894C              ; ******************************************************************************************************************************************************************************************
 115  894C              ; Constantes.
 116  894C              ; ******************************************************************************************************************************************************************************************
 117  894C              ;
 118  894C              ; 25/12/23
 119  894C
 120  894C              ;
 121  894C              ; Constantes.
 122  894C              ;
 123  894C
 124  894C              Sprite_vacio equ $eae0
 125  894C              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 126  894C              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 127  894C              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 128  894C              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 129  894C
 130  894C              Almacen_de_scanlines_masticados equ $e9df
 131  894C              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 132  894C
 133  894C              Almacen_de_movimientos_masticados_Amadeus equ $e700
 134  894C              ;
 135  894C              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 136  894C              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 137  894C              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 138  894C              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 139  894C              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 140  894C              ;														; 55 Bytes.
 141  894C
 142  894C              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 143  894C              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 144  894C
 145  894C              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 146  894C
 147  894C              ; ******************************************************************************************************************************************************************************************
 148  894C              ; Variables.
 149  894C              ; ******************************************************************************************************************************************************************************************
 150  894C              ;
 151  894C              ; 18/01/24
 152  894C              ;
 153  894C              ; Variables de DRAW. (Motor principal).	42 Bytes.
 154  894C              ;
 155  894C
 156  894C              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 157  894C
 158  894C 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 159  894D              ;															- Patrón de movimiento.
 160  894D              ;															- Aspecto
 161  894D 00           Filas db 0												; Filas. [DRAW]
 162  894E 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 163  894F 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 164  8951 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 165  8953 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 166  8954 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 167  8955
 168  8955              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 169  8955
 170  8955 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 171  8956              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 172  8956              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 173  8956 00           Attr db 0												; Atributos de la entidad:
 174  8957
 175  8957              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 176  8957              ;
 177  8957              ;	COLORES: 0 ..... NEGRO
 178  8957              ;    		 1 ..... AZUL
 179  8957              ; 			 2 ..... ROJO
 180  8957              ;			 3 ..... MAGENTA
 181  8957              ; 			 4 ..... VERDE
 182  8957              ; 			 5 ..... CIAN
 183  8957              ;			 6 ..... AMARILLO
 184  8957              ; 			 7 ..... BLANCO
 185  8957
 186  8957 00 00        Indice_Sprite_der defw 0
 187  8959 00 00        Indice_Sprite_izq defw 0
 188  895B 00 00        Puntero_DESPLZ_der defw 0
 189  895D 00 00        Puntero_DESPLZ_izq defw 0
 190  895F
 191  895F 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 192  8961 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 193  8962
 194  8962              ; Variables de objeto. (Características).
 195  8962
 196  8962 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 197  8963              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 198  8963              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 199  8963 00 00 00...  Variables_de_borrado ds 6
 200  8969
 201  8969 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 202  896B              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 203  896B
 204  896B 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 205  896D
 206  896D              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 207  896D              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 208  896D
 209  896D 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 210  896F              ;														; _palabras que componen el "movimiento_masticado".
 211  896F
 212  896F              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 213  896F
 214  896F 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 215  8970              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 216  8970              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 217  8970              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 218  8970              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 219  8970              ;
 220  8970              ; 														DESCRIPCIÖN:
 221  8970              ;
 222  8970              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 223  8970              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 224  8970              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 225  8970              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 226  8970              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 227  8970              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 228  8970              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 229  8970              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 230  8970              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 231  8970              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 232  8970              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 233  8970              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 234  8970              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 235  8970              ;
 236  8970              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 237  8970              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 238  8970              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 239  8970
 240  8970              ; Variables de funcionamiento. [DRAW].
 241  8970
 242  8970 00           Columnas db 0
 243  8971 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 244  8973              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 245  8973 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 246  8974
 247  8974              ; variables de control general.
 248  8974
 249  8974 00           Ctrl_2 db 0
 250  8975              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 251  8975              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 252  8975              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 253  8975              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 254  8975              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 255  8975              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 256  8975              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 257  8975              ;
 258  8975              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 259  8975              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 260  8975              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 261  8975              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 262  8975              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 263  8975              ;														BIT 4, ???
 264  8975              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 265  8975
 266  8975 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 267  8976
 268  8976              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 269  8976
 270  8976              ;					         		---------;      ;---------
 271  8976
 272  8976              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 273  8976
 274  8976              Perfiles_de_velocidad
 275  8976
 276  8976 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 277  8977 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 278  8978 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 279  8979 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 280  897A
 281  897A              ; Contadores de 16 bits.
 282  897A
 283  897A 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 284  897C 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 285  897E 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 286  8980 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 287  8982
 288  8982              ; Movimiento. ------------------------------------------------------------------------------------------------------
 289  8982
 290  8982 DF E9        Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 291  8984 02 80        Puntero_de_scanlines_en_album defw Album_de_fotos+2
 292  8986
 293  8986 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 294  8988 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 295  898A 00 00        Puntero_indice_mov_bucle defw 0							;
 296  898C              ;
 297  898C              ;
 298  898C 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 299  898D              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 300  898D              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 301  898D 00           Incrementa_puntero_backup db 0
 302  898E 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 303  898F              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 304  898F 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 305  8990 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 306  8991 00           Cola_de_desplazamiento db 0								; Este byte indica:
 307  8992              ;
 308  8992              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 309  8992              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 310  8992              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 311  8992              ;
 312  8992              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 313  8992              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 314  8992              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 315  8992              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 316  8992              ;
 317  8992              ;														;	"$ff" ..... Bucle infinito de repetición.
 318  8992              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 319  8992              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 320  8992              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 321  8992
 322  8992 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 323  8993
 324  8993              ;														DESCRIPCIÓN:
 325  8993              ;
 326  8993              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 327  8993              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 328  8993              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 329  8993              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 330  8993              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 331  8993              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 332  8993
 333  8993              ;														BIT 3, Recarga de nueva oleada.
 334  8993              ;														BIT 4, Recarga de nueva oleada.
 335  8993              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 336  8993              ;														BIT 6, **** Frame completo.
 337  8993              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 338  8993
 339  8993 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 340  8995              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 341  8995              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 342  8995              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 343  8995
 344  8995              ; Gestión de ENTIDADES y CAJAS.
 345  8995
 346  8995 00 00        Puntero_store_caja defw 0
 347  8997 00 00        Puntero_restore_caja defw 0
 348  8999 00 00        Indice_restore_caja defw 0
 349  899B 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 350  899C 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 351  899D 00           Entidades_en_curso db 0									; ..... ..... .....
 352  899E 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 353  899F              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 354  899F              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 355  899F              ;														; _ (Numero_de_malotes)="0".
 356  899F 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  89A1 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  89A3              ;														; _ puntero (Indice_entidades).
 359  89A3
 360  89A3              ;---------------------------------------------------------------------------------------------------------------
 361  89A3              ;
 362  89A3              ;	11/01/24
 363  89A3              ;
 364  89A3              ;	Álbumes.
 365  89A3
 366  89A3 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  89A5              ;														; _variable para almacenar lo posición del puntero_
 368  89A5              ; 														; _de pila, SP.
 369  89A5 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  89A7              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  89A7 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 372  89A9 00 80        Stack_snapshot defw Album_de_fotos
 373  89AB 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 374  89AD
 375  89AD              ;End_Snapshot defw Album_de_fotos
 376  89AD              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 377  89AD 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 378  89AF              ;														; _el snapshot de los registros del siguiente disparo.
 379  89AF              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 380  89AF AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 381  89B1
 382  89B1 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 383  89B2              ;
 384  89B2              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 385  89B2              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 386  89B2              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 387  89B2
 388  89B2 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 389  89B3              ;
 390  89B3              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 391  89B3              ;
 392  89B3              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 393  89B3              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 394  89B3              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 395  89B3              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 396  89B3              ;
 397  89B3              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 398  89B3              ;															_ masticados ya generados.
 399  89B3              ;
 400  89B3              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 401  89B3              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 402  89B3              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 403  89B3              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 404  89B3
 405  89B3
 406  89B3              ; Gestión de Disparos.
 407  89B3
 408  89B3 00           Numero_de_disparotes db 0
 409  89B4 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 410  89B6 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 411  89B8 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 412  89B9              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 413  89B9              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 414  89B9 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 415  89BB              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 416  89BB              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 417  89BB              ;														; _produzca colisión.
 418  89BB 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 419  89BD              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 420  89BD 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 421  89C0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 422  89C0 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 423  89C3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 424  89C3 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 425  89C4
 426  89C4              ;---------------------------------------------------------------------------------------------------------------
 427  89C4
 428  89C4              ; Relojes y temporizaciones.
 429  89C4
 430  89C4 00           Contador_de_frames db 0
 431  89C5 00           Contador_de_frames_2 db 0
 432  89C6
 433  89C6 04           Clock_explosion db 4
 434  89C7 14           Clock_Entidades_en_curso db 20
 435  89C8 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 436  89C9              ;														; Repite la oleada de entidades.
 437  89C9 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 438  89CA 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 439  89CB 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 440  89CC
 441  89CC 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 442  89CD 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 443  89CE 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 444  89CF
 445  89CF              ;---------------------------------------------------------------------------------------------------------------
 446  89CF
 447  89CF              ; Gestión de NIVELES.
 448  89CF
 449  89CF 00           Nivel db 0												; Nivel actual del juego.
 450  89D0 00 00        Puntero_indice_NIVELES defw 0
 451  89D2 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 452  89D4              ; 														; _ que definen el NIVEL.
 453  89D4              ; Y todo comienza aquí .....
 454  89D4              ;
 455  89D4              ; 	INICIO  *************************************************************************************************************************************************************************
 456  89D4              ;
 457  89D4              ;	5/1/24
 458  89D4
 459  89D4              START
 460  89D4
 461  89D4 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 462  89D7 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 463  89D9 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 464  89DB ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 465  89DD F3           	DI
 466  89DE
 467  89DE              ;	ld a,%00000111
 468  89DE              ;	call Cls
 469  89DE CD 9D 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 470  89E1
 471  89E1              ; INICIALIZACIÓN.
 472  89E1
 473  89E1              ;	Inicializa 1er Nivel.
 474  89E1
 475  89E1 21 28 89     	ld hl,Indice_de_niveles
 476  89E4 22 D0 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 477  89E7 CD 3E 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 478  89EA
 479  89EA              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 480  89EA              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 481  89EA              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 482  89EA
 483  89EA              ;	Provisional, (para desarrollo).
 484  89EA
 485  89EA              	;-
 486  89EA              ;	ld hl,Numero_parcial_de_entidades
 487  89EA              ;	ld b,(hl)
 488  89EA              ;	inc b
 489  89EA              ;	dec b
 490  89EA              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 491  89EA
 492  89EA CD 83 8D     4 call Inicia_Entidades
 493  89ED
 494  89ED CD 60 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 495  89F0
 496  89F0              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 497  89F0              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 498  89F0              ; (Esto se dá cuando se inicia una nueva oleada).
 499  89F0
 500  89F0              ;	ld a,(Ctrl_1)
 501  89F0              ;	bit 3,a
 502  89F0              ;	jr nz,5F											; Loop
 503  89F0
 504  89F0              ; 	INICIA AMADEUS !!!!!
 505  89F0
 506  89F0              ;3 call Restore_Amadeus
 507  89F0              ;	call Inicia_Puntero_objeto
 508  89F0              ;	call Draw
 509  89F0
 510  89F0              ;	call Guarda_movimiento_masticado	;! Provisional
 511  89F0
 512  89F0              ;	call Guarda_foto_registros
 513  89F0              ;	call Guarda_datos_de_borrado_Amadeus
 514  89F0
 515  89F0              ;	ld de,Amadeus_db
 516  89F0              ;	call Store_Amadeus
 517  89F0
 518  89F0              ; 	INICIA DISPAROS !!!!!
 519  89F0
 520  89F0              ;	call Inicia_Puntero_Disparo_Entidades
 521  89F0              ;	call Inicia_Puntero_Disparo_Amadeus
 522  89F0
 523  89F0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 524  89F0
 525  89F0              ;5 call Inicia_punteros_de_cajas
 526  89F0              ;	call Restore_entidad
 527  89F0
 528  89F0              ;	ld a,(Ctrl_1)
 529  89F0              ;	bit 3,a
 530  89F0              ;	jr z,6F
 531  89F0
 532  89F0              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 533  89F0
 534  89F0              ;	ld hl,Ctrl_1
 535  89F0              ;	res 3,(hl)
 536  89F0              ;	jr Main
 537  89F0
 538  89F0              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 539  89F0
 540  89F0 CD AC 8B     6 call Calcula_numero_de_malotes
 541  89F3
 542  89F3 CD 9F 8A     	call Genera_scanlines_masticados
 543  89F6
 544  89F6              ;	jr $
 545  89F6
 546  89F6 21 B1 89     	ld hl,Ctrl_3
 547  89F9 CB C6        	set 0,(hl)											; Frame completo.
 548  89FB FB           	ei
 549  89FC 76           	halt
 550  89FD
 551  89FD              ; ------------------------------------
 552  89FD
 553  89FD              Main
 554  89FD              ;
 555  89FD              ;	11/12/23
 556  89FD
 557  89FD              ; Aparece nueva entidad ???
 558  89FD
 559  89FD              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 560  89FD              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 561  89FD              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 562  89FD              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 563  89FD              ;														; _un 2º bloque.
 564  89FD
 565  89FD              ;	ld a,1
 566  89FD              ;	out ($fe),a
 567  89FD
 568  89FD CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot 				; Lo 1º que hacemos después de pintar el limpiar el álbum de fotos e inicializar
 569  8A00              ; 													 	; _(Stack_snapshot).
 570  8A00
 571  8A00 3A C7 89     	ld a,(Clock_Entidades_en_curso)
 572  8A03 47           	ld b,a
 573  8A04 3A C4 89     	ld a,(Contador_de_frames)
 574  8A07 B8           	cp b
 575  8A08 20 18        	jr nz,13F
 576  8A0A
 577  8A0A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 578  8A0A              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 579  8A0A
 580  8A0A 3A 9C 89     21 ld a,(Numero_parcial_de_entidades)
 581  8A0D 47           	ld b,a
 582  8A0E 3A 9D 89     	ld a,(Entidades_en_curso)
 583  8A11 B8           	cp b
 584  8A12 28 0E        	jr z,13F
 585  8A14 30 0C        	jr nc,13F
 586  8A16
 587  8A16 3C           	inc a
 588  8A17 32 9D 89     	ld (Entidades_en_curso),a
 589  8A1A
 590  8A1A              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 591  8A1A
 592  8A1A 3A C7 89     	ld a,(Clock_Entidades_en_curso)
 593  8A1D              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 594  8A1D              ;! _ IMPREDECIBLE !!!!
 595  8A1D C6 64        	add 100
 596  8A1F 32 C7 89     	ld (Clock_Entidades_en_curso),a
 597  8A22
 598  8A22              ; -------------------------------------------------------------------------------------------------------------
 599  8A22
 600  8A22              ; Habilita disparos.
 601  8A22
 602  8A22              13
 603  8A22
 604  8A22              ;	ld hl,Disparo_Amadeus
 605  8A22              ;	ld de,CLOCK_repone_disparo_Amadeus
 606  8A22              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 607  8A22
 608  8A22              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 609  8A22              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 610  8A22              ;	call Habilita_disparos
 611  8A22
 612  8A22              ; COLISIONES.
 613  8A22
 614  8A22              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 615  8A22
 616  8A22              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 617  8A22              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 618  8A22              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 619  8A22
 620  8A22              ;	xor a
 621  8A22              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 622  8A22
 623  8A22              ;	call Inicia_punteros_de_cajas
 624  8A22              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 625  8A22              ; 														; _ en DRAW.
 626  8A22
 627  8A22              ;	ld a,(Filas)
 628  8A22              ;	and a
 629  8A22              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 630  8A22              ;	call Incrementa_punteros_de_cajas
 631  8A22              ;	jr 12B
 632  8A22
 633  8A22              ; ---------------------------------------------------------------------------------------
 634  8A22
 635  8A22 3A 9C 89     10 ld a,(Numero_parcial_de_entidades)
 636  8A25 47               ld b,a
 637  8A26 A7           	and a
 638  8A27 20 00        	jr nz,11F
 639  8A29
 640  8A29              ;	ld hl,Ctrl_1;
 641  8A29              ;	bit 4,(hl)
 642  8A29              ;	jp nz,16F
 643  8A29
 644  8A29              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 645  8A29
 646  8A29              ;	ld hl,Ctrl_1
 647  8A29              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 648  8A29
 649  8A29              ;	ld a,(Contador_de_frames)
 650  8A29              ;	inc a
 651  8A29              ;	ld (Activa_recarga_cajas),a
 652  8A29
 653  8A29              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 654  8A29
 655  8A29 3A 9D 89     11 ld a,(Entidades_en_curso)
 656  8A2C A7           	and a
 657  8A2D 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 658  8A2F 47           	ld b,a												; No hay entidades que gestionar.
 659  8A30
 660  8A30              ; ( Código que ejecutamos con cada entidad: ).
 661  8A30
 662  8A30              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 663  8A30
 664  8A30 C5           15 push bc 												; Nº de entidades en curso.
 665  8A31
 666  8A31 CD 33 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 667  8A34
 668  8A34
 669  8A34 3A B1 89     	ld a,(Ctrl_3)
 670  8A37 CB 57        	bit 2,a
 671  8A39 F3           	di
 672  8A3A 20 FE        	jr nz,$
 673  8A3C FB           	ei
 674  8A3D
 675  8A3D
 676  8A3D
 677  8A3D
 678  8A3D              ; Existe "Entidad_guía" ???.
 679  8A3D              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 680  8A3D
 681  8A3D              ;	ld a,(Ctrl_3)
 682  8A3D              ;	bit 1,a
 683  8A3D              ;	jr nz,22F
 684  8A3D
 685  8A3D              ; Almacén de "Movimientos_masticados" lleno ???
 686  8A3D              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 687  8A3D              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 688  8A3D
 689  8A3D              ;;	ld a,(Ctrl_3)
 690  8A3D              ;;	bit 3,a
 691  8A3D              ;;	jr nz,22F
 692  8A3D
 693  8A3D              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 694  8A3D
 695  8A3D              ;	ld hl,Ctrl_2
 696  8A3D              ;	set 5,(hl)
 697  8A3D              ;	ld hl,Ctrl_3
 698  8A3D              ;	set 1,(hl)
 699  8A3D
 700  8A3D              ; Impacto ???
 701  8A3D
 702  8A3D              ;22 ld a,(Impacto)
 703  8A3D              ;	and a
 704  8A3D              ;	jr z,8F
 705  8A3D
 706  8A3D              ; Hay Impacto en esta entidad.
 707  8A3D
 708  8A3D              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 709  8A3D              ;	dec (hl)
 710  8A3D              ;	jp nz,17F
 711  8A3D
 712  8A3D              ;! Velocidad de la animación de la explosión.
 713  8A3D
 714  8A3D              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 715  8A3D              ;														; _,(velocidad de la explosión).
 716  8A3D              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 717  8A3D
 718  8A3D              ;	call Repone_datos_de_borrado
 719  8A3D              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 720  8A3D
 721  8A3D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 722  8A3D
 723  8A3D              ;	ld a,(Ctrl_2)
 724  8A3D              ;	bit 1,a
 725  8A3D              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 726  8A3D
 727  8A3D              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 728  8A3D
 729  8A3D              ;	ld a,(CTRL_DESPLZ)
 730  8A3D              ;	and a
 731  8A3D              ;	jr nz,18F
 732  8A3D
 733  8A3D              ;	ld hl,Indice_Explosion_2x2-2
 734  8A3D              ;	ld (Puntero_DESPLZ_der),hl
 735  8A3D              ;	jr 19F
 736  8A3D
 737  8A3D              ;18 ld hl,Indice_Explosion_2x3-2
 738  8A3D              ;	ld (Puntero_DESPLZ_der),hl
 739  8A3D
 740  8A3D              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 741  8A3D              ;	set 1,(hl)
 742  8A3D              ;	jr 7F
 743  8A3D
 744  8A3D              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 745  8A3D              ; _con las coordenadas de la entidad almacenada en DRAW.
 746  8A3D
 747  8A3D              ;8 ld a,(Ctrl_1)
 748  8A3D              ;	bit 2,a
 749  8A3D              ;	jr z,7F
 750  8A3D
 751  8A3D              ;	ld hl,(Coordenadas_disparo_certero)
 752  8A3D              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 753  8A3D              ;														; E contiene la coordenada_X del disparo.
 754  8A3D              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 755  8A3D              ;														; H FILA, (Coordenada_y de la entidad).
 756  8A3D              ;	and a
 757  8A3D              ;	sbc hl,de
 758  8A3D
 759  8A3D              ;	call Determina_resultado_comparativa
 760  8A3D
 761  8A3D              ;	ld a,b
 762  8A3D              ;	and a
 763  8A3D              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 764  8A3D
 765  8A3D              ; ----- ----- -----
 766  8A3D
 767  8A3D              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 768  8A3D              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 769  8A3D
 770  8A3D              ;	ld hl,Ctrl_1
 771  8A3D              ;	res 2,(hl)
 772  8A3D
 773  8A3D CD 5C 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 774  8A40
 775  8A40              ;	ld a,(Ctrl_0)
 776  8A40              ;	bit 4,a
 777  8A40              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 778  8A40
 779  8A40              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 780  8A40              ; [[[
 781  8A40              ;	call Detecta_disparo_entidad
 782  8A40              ; ]]]
 783  8A40
 784  8A40 CD ED 8D     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 785  8A43
 786  8A43              ;	ld hl,Ctrl_0
 787  8A43              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 788  8A43
 789  8A43 CD DD 8D     17 call Store_Restore_cajas
 790  8A46
 791  8A46 C1           	pop bc
 792  8A47
 793  8A47 10 E7        	djnz 15B
 794  8A49
 795  8A49 CD 60 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 796  8A4C
 797  8A4C              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 798  8A4C              ; Hemos gestionado todas las unidades.
 799  8A4C              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 800  8A4C
 801  8A4C              ;	ld hl,Ctrl_1
 802  8A4C              ;	res 2,(hl)
 803  8A4C
 804  8A4C              16
 805  8A4C
 806  8A4C CD AC 8B     	call Calcula_numero_de_malotes
 807  8A4F
 808  8A4F 21 B1 89     	ld hl,Ctrl_3
 809  8A52 CB C6        	set 0,(hl)											; Frame completo.
 810  8A54
 811  8A54 AF           	xor a
 812  8A55 D3 FE        	out ($fe),a
 813  8A57
 814  8A57 76           	halt
 815  8A58
 816  8A58              ; ----------------------------------------
 817  8A58
 818  8A58              ;	ld a,(Ctrl_1) 										; Existe Loop?
 819  8A58              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 820  8A58 CA FD 89     	jp z,Main
 821  8A5B
 822  8A5B              ; RECARGA DE NUEVA OLEADA.
 823  8A5B
 824  8A5B              ;	ld a,(Contador_de_frames)
 825  8A5B              ;	ld b,a
 826  8A5B              ;	ld a,(Activa_recarga_cajas)
 827  8A5B              ;	cp b
 828  8A5B              ;	jr z,20F
 829  8A5B
 830  8A5B              ;	ld hl,Ctrl_1
 831  8A5B              ;	set 4,(hl)
 832  8A5B              ;	jp Main
 833  8A5B
 834  8A5B              ;20 ld hl,Ctrl_1
 835  8A5B              ;	res 4,(hl)
 836  8A5B
 837  8A5B              ;	ld a,(Contador_de_frames)
 838  8A5B
 839  8A5B              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 840  8A5B              ;! _ IMPREDECIBLE !!!!
 841  8A5B
 842  8A5B              ;	add 10
 843  8A5B              ;	ld (Clock_Entidades_en_curso),a
 844  8A5B
 845  8A5B              ;	jp 4B
 846  8A5B
 847  8A5B C9           	ret
 848  8A5C
 849  8A5C              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 850  8A5C              ;
 851  8A5C              ;	16/11/23
 852  8A5C
 853  8A5C              ;;Gestiona_Amadeus
 854  8A5C
 855  8A5C              ;! Activa/desactiva impacto con Amadeus.
 856  8A5C
 857  8A5C              ;	ld a,(Impacto)
 858  8A5C              ;	and a
 859  8A5C              ;	jr nz,2F
 860  8A5C
 861  8A5C              ;;	call Mov_Amadeus
 862  8A5C
 863  8A5C              ;;2 ld a,(Ctrl_0)
 864  8A5C              ;;	bit 4,a
 865  8A5C              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 866  8A5C
 867  8A5C              ;;	call Guarda_foto_entidad_a_pintar
 868  8A5C              ;;	call Guarda_datos_de_borrado_Amadeus
 869  8A5C
 870  8A5C              ;;1 ld hl,Ctrl_0
 871  8A5C              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 872  8A5C
 873  8A5C              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 874  8A5C
 875  8A5C              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 876  8A5C
 877  8A5C              ;	call Calcula_numero_de_disparotes
 878  8A5C
 879  8A5C              ;;	ret
 880  8A5C
 881  8A5C              ; --------------------------------------------------------------------------------------------------------------
 882  8A5C              ;
 883  8A5C              ;	15/12/23
 884  8A5C
 885  8A5C              Mov_obj
 886  8A5C
 887  8A5C              ;	ld a,(Ctrl_2)
 888  8A5C              ;	bit 1,a
 889  8A5C              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 890  8A5C
 891  8A5C              ; Explosión:
 892  8A5C
 893  8A5C              ;	ld a,(Frames_explosion)
 894  8A5C              ;	and a
 895  8A5C              ;	jr nz,4F
 896  8A5C
 897  8A5C              ;!  Una alimaña menos!!!!!!!!!1
 898  8A5C
 899  8A5C              ; Se trataba de una Entidad_guía ???
 900  8A5C
 901  8A5C              ;	ld a,(Ctrl_2)
 902  8A5C              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 903  8A5C              ;	jr z,5F
 904  8A5C
 905  8A5C              ;	ld hl,Ctrl_3
 906  8A5C              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 907  8A5C
 908  8A5C              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 909  8A5C              ;!! _generado puede ser distinto, (aletoriedad).
 910  8A5C
 911  8A5C              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 912  8A5C              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 913  8A5C              ;	dec (hl)
 914  8A5C              ;	ld hl,Entidades_en_curso
 915  8A5C              ;	dec (hl)
 916  8A5C              ;	ld hl,Numero_de_entidades
 917  8A5C              ;	dec (hl)
 918  8A5C              ;	jr 3F
 919  8A5C
 920  8A5C              ; -----
 921  8A5C
 922  8A5C              ;	`Movemos´ la explosión.
 923  8A5C
 924  8A5C              ;4 ld hl,(Puntero_DESPLZ_der)
 925  8A5C              ;	inc hl
 926  8A5C              ;	inc hl
 927  8A5C              ;	call Extrae_address
 928  8A5C              ;;	ld (Puntero_objeto),hl
 929  8A5C
 930  8A5C              ;;	ld hl,Frames_explosion
 931  8A5C              ;;	dec (hl)
 932  8A5C
 933  8A5C              ;;	ld hl,Ctrl_0
 934  8A5C              ;;	set 4,(hl);;
 935  8A5C
 936  8A5C              ;;	jr 3F
 937  8A5C
 938  8A5C              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 939  8A5C
 940  8A5C              ;2 xor a
 941  8A5C              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 942  8A5C
 943  8A5C              ; Movemos Entidades malignas.
 944  8A5C              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 945  8A5C
 946  8A5C              ;	ld a,(Ctrl_2)
 947  8A5C              ;	bit 5,a
 948  8A5C              ;	jr nz,8F
 949  8A5C
 950  8A5C              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 951  8A5C              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 952  8A5C              ;	jr 7F
 953  8A5C
 954  8A5C              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 955  8A5C
 956  8A5C              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 957  8A5C              ;	bit 4,a
 958  8A5C              ;	ret z
 959  8A5C
 960  8A5C              ; Ha habido desplazamiento de la entidad maligna.
 961  8A5C              ; Ha llegado a zona de AMADEUS ???
 962  8A5C
 963  8A5C              ;7 ld a,(Coordenada_y)
 964  8A5C              ;	cp $14
 965  8A5C              ;	jr c,1F
 966  8A5C
 967  8A5C              ; ---------
 968  8A5C
 969  8A5C              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 970  8A5C              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 971  8A5C
 972  8A5C              ;	di
 973  8A5C              ;	call Genera_coordenadas_X
 974  8A5C              ;	call Compara_coordenadas_X
 975  8A5C              ;	ei
 976  8A5C
 977  8A5C              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 978  8A5C
 979  8A5C              ; ---------
 980  8A5C
 981  8A5C              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 982  8A5C CD 11 8D     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 983  8A5F CD 9E 8B     	call Limpia_Variables_de_borrado
 984  8A62
 985  8A62 C9           3 ret
 986  8A63
 987  8A63              ; --------------------------------------------------------------------------------------------------------------
 988  8A63              ;
 989  8A63              ;	29/1/23
 990  8A63
 991  8A63              Mov_Amadeus
 992  8A63
 993  8A63              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 994  8A63
 995  8A63 CD E4 95     	call Mov_right
 996  8A66
 997  8A66 3A 6F 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 998  8A69 CB 67        	bit 4,a
 999  8A6B C8           	ret z
1000  8A6C
1001  8A6C              ; ---------
1002  8A6C
1003  8A6C              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1004  8A6C CD 01 8D     	call Repone_datos_de_borrado_Amadeus
1005  8A6F CD 9E 8B     	call Limpia_Variables_de_borrado
1006  8A72
1007  8A72 C9           	ret
1008  8A73
1009  8A73              ; -----------------------------------------------------------------------------------
1010  8A73              ;
1011  8A73              ;	20/01/24
1012  8A73              ;
1013  8A73              ;
1014  8A73
1015  8A73              Construye_movimientos_masticados_entidad
1016  8A73
1017  8A73 2A 6B 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1018  8A76 E5           	push hl
1019  8A77 CD 02 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1020  8A7A              ;															; _ el (Contador_de_mov_masticados).
1021  8A7A CD FE 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1022  8A7D              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1023  8A7D CD 40 95     	call Recompone_posicion_inicio
1024  8A80
1025  8A80 CD 34 8F     1 call Draw
1026  8A83 CD E6 8A     	call Guarda_movimiento_masticado
1027  8A86
1028  8A86 CD BA 98     	call Movimiento
1029  8A89
1030  8A89 3A B1 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1031  8A8C CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1032  8A8E 28 F0        	jr z,1B
1033  8A90
1034  8A90              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1035  8A90              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1036  8A90
1037  8A90 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1038  8A91 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1039  8A94
1040  8A94              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1041  8A94
1042  8A94 CD 1E 9A     	call Situa_en_contador_general_de_mov_masticados
1043  8A97
1044  8A97              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1045  8A97              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1046  8A97
1047  8A97 ED 4B 6D 89  	ld bc,(Contador_de_mov_masticados)
1048  8A9B 71           	ld (hl),c
1049  8A9C 23           	inc hl
1050  8A9D 70           	ld (hl),b
1051  8A9E
1052  8A9E C9           	ret
1053  8A9F
1054  8A9F              ; -----------------------------------------------------------------------------------
1055  8A9F              ;
1056  8A9F              ;	22/02/24
1057  8A9F              ;
1058  8A9F              ;	INPUTS: Los registros A y B contienen (Numero_de_malotes), venimos de ejecutar [Calcula_numero_de_malotes].
1059  8A9F
1060  8A9F              Genera_scanlines_masticados
1061  8A9F
1062  8A9F 2A 84 89     	ld hl,(Puntero_de_scanlines_en_album) 				; Dirección donde se encuentra el puntero de impresión.
1063  8AA2 ED 5B 82 89  	ld de, (Puntero_de_scanlines_masticados)
1064  8AA6
1065  8AA6 C5           1  push bc 												; Guardamos nº de malotes en la pila.
1066  8AA7
1067  8AA7 01 05 00     	ld bc,5 											; Sumando para ir actualizando (Puntero_de_scanlines_en_album).
1068  8AAA
1069  8AAA 7E           	ld a,(hl)
1070  8AAB 12           	ld (de),a
1071  8AAC              ;	ld (hl),e
1072  8AAC
1073  8AAC 23           	inc hl
1074  8AAD 7E           	ld a,(hl)
1075  8AAE              ;	ld (hl),d
1076  8AAE
1077  8AAE 13           	inc de
1078  8AAF 12           	ld (de),a 											; 1er scanline, (Puntero_de_impresion) en el Almacén de scanlines masticados.
1079  8AB0              ;				                                        ; La dirección donde se encuentra el (Puntero_de_impresion) dentro del almacén de scanlines_masticados_
1080  8AB0              ; 														; _sustituye al (Puntero_de_impresion) dentro del Album_de_fotos.
1081  8AB0
1082  8AB0 CD BD 8A     	call Construimos_scanlines
1083  8AB3
1084  8AB3              ; Actualizamos (Puntero_de_scanlines_en_album). Nos situamos en el Puntero_de_impresion de la siguiente entidad.
1085  8AB3
1086  8AB3 A7           	and a
1087  8AB4 ED 4A        	adc hl,bc
1088  8AB6 22 84 89     	ld (Puntero_de_scanlines_en_album),hl
1089  8AB9
1090  8AB9 C1           	pop bc 												; Recupero (Numero_de_malotes).
1091  8ABA 10 EA        	djnz 1B
1092  8ABC
1093  8ABC C9           	ret
1094  8ABD
1095  8ABD              ; --------------------------------------------------------
1096  8ABD
1097  8ABD E5           Construimos_scanlines push hl
1098  8ABE C5           	push bc
1099  8ABF
1100  8ABF 06 0F        	ld b,15
1101  8AC1 1B           	dec de
1102  8AC2
1103  8AC2 1A           	ld a,(de)
1104  8AC3 6F           	ld l,a
1105  8AC4 13           	inc de
1106  8AC5 1A           	ld a,(de)
1107  8AC6 67           	ld h,a 												; Puntero_de_impresión en HL.
1108  8AC7
1109  8AC7 13           	inc de
1110  8AC8
1111  8AC8 CD 2D 92     1 call NextScan
1112  8ACB
1113  8ACB              ; Entramos en memoria de attr.???
1114  8ACB
1115  8ACB              ; Si es así, decrementamos H. (Repetimos el último scancline).
1116  8ACB
1117  8ACB 7C           	ld a,h
1118  8ACC FE 58        	cp $58
1119  8ACE 20 03        	jr nz,2F
1120  8AD0
1121  8AD0 21 00 00     	ld hl,0 											; Scanline NO IMPRIMIBLE, "0".
1122  8AD3
1123  8AD3 7D           2 ld a,l
1124  8AD4 12           	ld (de),a
1125  8AD5 13           	inc de
1126  8AD6 7C           	ld a,h
1127  8AD7 12           	ld (de),a
1128  8AD8
1129  8AD8 13           	inc de
1130  8AD9
1131  8AD9 24           	inc h
1132  8ADA 25           	dec h
1133  8ADB 28 02        	jr z,3F  											; No generamos más escanlines si hemos entrado en memoria de attr.
1134  8ADD
1135  8ADD 10 E9        	djnz 1B 											; 16 scanlines generados.
1136  8ADF
1137  8ADF ED 53 82 89  3 ld (Puntero_de_scanlines_masticados),de 				; Actualizamos puntero.
1138  8AE3
1139  8AE3 C1           	pop bc
1140  8AE4 E1           	pop hl
1141  8AE5
1142  8AE5 C9           	ret
1143  8AE6
1144  8AE6              ; -----------------------------------------------------------------------------------
1145  8AE6              ;
1146  8AE6              ;	28/12/23
1147  8AE6              ;
1148  8AE6              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1149  8AE6              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1150  8AE6
1151  8AE6              Guarda_movimiento_masticado
1152  8AE6
1153  8AE6 ED 73 A3 89  	ld (Stack),sp
1154  8AEA ED 7B 6B 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1155  8AEE
1156  8AEE E5           	push hl
1157  8AEF DD E5            push ix
1158  8AF1 FD E5            push iy
1159  8AF3
1160  8AF3 ED 7B A3 89      ld sp,(Stack)
1161  8AF7
1162  8AF7 2A 6D 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1163  8AFA 23           	inc hl
1164  8AFB 22 6D 89     	ld (Contador_de_mov_masticados),hl
1165  8AFE
1166  8AFE CD 02 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1167  8B01              ;															; _ el (Contador_de_mov_masticados).
1168  8B01 C9               ret
1169  8B02
1170  8B02              ; --------------------------------------------------------------------------------------------------------------
1171  8B02              ;
1172  8B02              ;	12/1/24
1173  8B02              ;
1174  8B02              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1175  8B02
1176  8B02              Actualiza_Puntero_de_almacen_de_mov_masticados
1177  8B02
1178  8B02 2A 6B 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1179  8B05 01 06 00     	ld bc,6
1180  8B08 A7           	and a
1181  8B09 ED 4A        	adc hl,bc
1182  8B0B 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1183  8B0E C9           	ret
1184  8B0F
1185  8B0F              ; --------------------------------------------------------------------------------------------------------------
1186  8B0F              ;
1187  8B0F              ;	15/01/24
1188  8B0F              ;
1189  8B0F              ;	Cargamos los registros_
1190  8B0F              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1191  8B0F              ;
1192  8B0F              ;	HL contiene la dirección de la rutina de impresión.
1193  8B0F              ;	IX contiene el puntero de impresión.
1194  8B0F              ;	IY contiene (Puntero_objeto).
1195  8B0F
1196  8B0F
1197  8B0F ED 73 A3 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1198  8B13 ED 7B 6B 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1199  8B17
1200  8B17 FD E1        	pop iy
1201  8B19 DD E1        	pop ix
1202  8B1B E1           	pop hl
1203  8B1C
1204  8B1C ED 73 6B 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1205  8B20
1206  8B20 ED 7B A3 89  	ld sp,(Stack)
1207  8B24
1208  8B24 C9           	ret
1209  8B25
1210  8B25              ; --------------------------------------------------------------------------------------------------------------
1211  8B25              ;
1212  8B25              ;	28/12/23
1213  8B25              ;
1214  8B25              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1215  8B25              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1216  8B25
1217  8B25              Guarda_foto_entidad_a_pintar
1218  8B25
1219  8B25 3A 6F 89     	ld a,(Ctrl_0)
1220  8B28 CB 77        	bit 6,a
1221  8B2A 28 04        	jr z,5F
1222  8B2C
1223  8B2C              ;	Guarda la foto de Amadeus.
1224  8B2C
1225  8B2C              ;	call Draw
1226  8B2C              ;	call Guarda_movimiento_masticado	;! Provisional
1227  8B2C CD BF 80     	call Guarda_foto_registros
1228  8B2F C9           	ret
1229  8B30
1230  8B30              ; ENTIDADES!
1231  8B30              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1232  8B30
1233  8B30 3A B1 89     5 ld a,(Ctrl_3)
1234  8B33 CB 5F        	bit 3,a
1235  8B35 28 01        	jr z,1F
1236  8B37
1237  8B37              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1238  8B37
1239  8B37              4
1240  8B37              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1241  8B37 C9           	ret
1242  8B38
1243  8B38              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1244  8B38
1245  8B38 3A B1 89     1 ld a,(Ctrl_3)
1246  8B3B CB 57        	bit 2,a
1247  8B3D 20 10        	jr nz,6F
1248  8B3F
1249  8B3F              ; Entidad guía o fantasma ???
1250  8B3F
1251  8B3F 3A 74 89     	ld a,(Ctrl_2)
1252  8B42 CB 6F        	bit 5,a
1253  8B44 20 10        	jr nz,3F
1254  8B46
1255  8B46              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1256  8B46
1257  8B46 18 EF        	jr 4B
1258  8B48
1259  8B48              ; ENTIDAD_GUÍA:
1260  8B48              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1261  8B48              ; _guardando "movimientos_masticados".
1262  8B48
1263  8B48 3A B1 89     2 ld a,(Ctrl_3)
1264  8B4B CB 57        	bit 2,a
1265  8B4D 28 07        	jr z,3F
1266  8B4F
1267  8B4F              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1268  8B4F              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1269  8B4F
1270  8B4F CB 97        6 res 2,a
1271  8B51 CB DF        	set 3,a
1272  8B53 32 B1 89     	ld (Ctrl_3),a
1273  8B56
1274  8B56
1275  8B56              ;	Esto sólo lo ejecuta una entidad guía.
1276  8B56
1277  8B56 CD 34 8F     3 	call Draw
1278  8B59 CD E6 8A     	call Guarda_movimiento_masticado
1279  8B5C CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1280  8B5F
1281  8B5F              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1282  8B5F              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1283  8B5F
1284  8B5F              ;	call Convierte_guia_en_fantasma
1285  8B5F C9           	ret
1286  8B60
1287  8B60              ; *************************************************************************************************************************************************************
1288  8B60              ;
1289  8B60              ; 8/1/23
1290  8B60              ;
1291  8B60              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1292  8B60              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1293  8B60              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1294  8B60
1295  8B60              ; Destruye HL y DE !!!!!
1296  8B60
1297  8B60              Inicia_punteros_de_cajas
1298  8B60
1299  8B60 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1300  8B63 CD F8 8B         call Extrae_address
1301  8B66 22 95 89         ld (Puntero_store_caja),hl
1302  8B69 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1303  8B6C 22 99 89     	ld (Indice_restore_caja),hl
1304  8B6F CD F8 8B     	call Extrae_address
1305  8B72 22 97 89     	ld (Puntero_restore_caja),hl
1306  8B75 C9               ret
1307  8B76
1308  8B76              ; *************************************************************************************************************************************************************
1309  8B76              ;
1310  8B76              ; 8/1/23
1311  8B76              ;
1312  8B76              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1313  8B76
1314  8B76 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1315  8B79 22 B4 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1316  8B7C C9           	ret
1317  8B7D 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1318  8B80 22 B6 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1319  8B83 C9           	ret
1320  8B84
1321  8B84              ; -------------------------------------------------------------------------------------------------------------
1322  8B84              ;
1323  8B84              ; 21/9/23
1324  8B84              ;
1325  8B84
1326  8B84              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1327  8B84
1328  8B84              Limpia_album_Amadeus
1329  8B84
1330  8B84 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1331  8B87 7E           	ld a,(hl)
1332  8B88 A7           	and a
1333  8B89 C8           	ret z
1334  8B8A
1335  8B8A 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1336  8B8D 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1337  8B90 01 0B 00     	ld bc,11
1338  8B93 AF           	xor a
1339  8B94 77           	ld (hl),a
1340  8B95 ED B0        	ldir
1341  8B97
1342  8B97 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1343  8B9A 22 AF 89     	ld (End_Snapshot_Amadeus),hl
1344  8B9D
1345  8B9D C9           	ret
1346  8B9E
1347  8B9E 21 63 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1348  8BA1 11 64 89     	ld de,Variables_de_borrado+1
1349  8BA4 01 05 00     	ld bc,5
1350  8BA7 AF           	xor a
1351  8BA8 77           	ld (hl),a
1352  8BA9 ED B0        	ldir
1353  8BAB C9           	ret
1354  8BAC
1355  8BAC              ; -------------------------------------------------------------------------------------------------------------
1356  8BAC              ;
1357  8BAC              ; 	21/02/24
1358  8BAC              ;
1359  8BAC              ;	MODIFICA: AF,HL,BC,DE
1360  8BAC              ;
1361  8BAC              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1362  8BAC              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1363  8BAC
1364  8BAC              Calcula_numero_de_malotes
1365  8BAC
1366  8BAC 21 00 80     	ld hl,Album_de_fotos
1367  8BAF EB           	ex de,hl
1368  8BB0 2A A9 89     	ld hl,(Stack_snapshot)
1369  8BB3
1370  8BB3 06 00        	ld b,0
1371  8BB5 7D           	ld a,l
1372  8BB6 93           	sub e
1373  8BB7 28 07        	jr z,1F
1374  8BB9
1375  8BB9              ; Nº de malotes no es "0".
1376  8BB9
1377  8BB9 D6 06        2 sub 6
1378  8BBB 04           	inc b
1379  8BBC A7           	and a
1380  8BBD 20 FA        	jr nz,2B
1381  8BBF 78           	ld a,b
1382  8BC0
1383  8BC0 32 9E 89     1 ld (Numero_de_malotes),a
1384  8BC3 C9           	ret
1385  8BC4
1386  8BC4              ; -------------------------------------------------------------------------------------------------------------
1387  8BC4              ;
1388  8BC4              ; 8/9/23
1389  8BC4              ;
1390  8BC4
1391  8BC4              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1392  8BC4              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1393  8BC4
1394  8BC4              Calcula_malotes_Amadeus
1395  8BC4
1396  8BC4 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1397  8BC7 EB           	ex de,hl
1398  8BC8 2A AF 89     	ld hl,(End_Snapshot_Amadeus)
1399  8BCB
1400  8BCB 7C           	ld a,h
1401  8BCC A7           	and a
1402  8BCD 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1403  8BCF
1404  8BCF 06 00        	ld b,0
1405  8BD1 7D           	ld a,l
1406  8BD2 93           	sub e
1407  8BD3 28 07        	jr z,1F
1408  8BD5
1409  8BD5              ; Nº de malotes no es "0".
1410  8BD5
1411  8BD5 D6 06        2 sub 6
1412  8BD7 04           	inc b
1413  8BD8 A7           	and a
1414  8BD9 20 FA        	jr nz,2B
1415  8BDB 78           	ld a,b
1416  8BDC
1417  8BDC 32 9E 89     1 ld (Numero_de_malotes),a
1418  8BDF C9           	ret
1419  8BE0
1420  8BE0              ; -------------------------------------------------------------------------------------------------------------
1421  8BE0              ;
1422  8BE0              ; 28/2/23
1423  8BE0              ;
1424  8BE0
1425  8BE0              Calcula_numero_de_disparotes
1426  8BE0
1427  8BE0 21 56 80     	ld hl,Album_de_fotos_disparos
1428  8BE3 EB           	ex de,hl
1429  8BE4 2A AD 89     	ld hl,(End_Snapshot_disparos)
1430  8BE7
1431  8BE7 06 00        	ld b,0
1432  8BE9 7D           	ld a,l
1433  8BEA 93           	sub e
1434  8BEB 28 07        	jr z,1F
1435  8BED
1436  8BED              ; Nº de malotes no es "0".
1437  8BED
1438  8BED D6 06        2 sub 6
1439  8BEF 04           	inc b
1440  8BF0 A7           	and a
1441  8BF1 20 FA        	jr nz,2B
1442  8BF3 78           	ld a,b
1443  8BF4
1444  8BF4 32 B3 89     1 ld (Numero_de_disparotes),a
1445  8BF7 C9           	ret
1446  8BF8
1447  8BF8              ; *************************************************************************************************************************************************************
1448  8BF8              ;
1449  8BF8              ; 20/10/22
1450  8BF8              ;
1451  8BF8              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1452  8BF8              ;
1453  8BF8              ; Destruye el puntero y DE !!!!!
1454  8BF8
1455  8BF8 5E           Extrae_address ld e,(hl)
1456  8BF9 23           	inc hl
1457  8BFA 56           	ld d,(hl)
1458  8BFB 2B           	dec hl
1459  8BFC EB           	ex de,hl
1460  8BFD C9           	ret
1461  8BFE
1462  8BFE              ; *************************************************************************************************************************************************************
1463  8BFE              ;
1464  8BFE              ;	20/1/24
1465  8BFE              ;
1466  8BFE              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1467  8BFE              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1468  8BFE              ;
1469  8BFE              ;   Destruye HL y BC !!!!!,
1470  8BFE              ;
1471  8BFE              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1472  8BFE              ;					"0" ..... Izquierda.
1473  8BFE
1474  8BFE              Inicia_Puntero_objeto
1475  8BFE
1476  8BFE 3A 61 89     	ld a,(Cuad_objeto)
1477  8C01 E6 01        	and 1
1478  8C03 F5           	push af
1479  8C04 CC 20 8C     	call z,Inicia_puntero_objeto_izq
1480  8C07 F1           	pop af
1481  8C08 C8           	ret z
1482  8C09 CD 0D 8C     	call Inicia_puntero_objeto_der
1483  8C0C C9           	ret
1484  8C0D
1485  8C0D              ; Arrancamos desde la parte izquierda de la pantalla.
1486  8C0D              ; Iniciamos (Indice_Sprite_der).
1487  8C0D
1488  8C0D 2A 57 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1489  8C10 22 5B 89     	ld (Puntero_DESPLZ_der),hl
1490  8C13 CD F8 8B     	call Extrae_address
1491  8C16 22 51 89     	ld (Puntero_objeto),hl
1492  8C19
1493  8C19 2A 59 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1494  8C1C 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
1495  8C1F C9           	ret
1496  8C20
1497  8C20              ; Arrancamos desde la parte derecha de la pantalla.
1498  8C20              ; Iniciamos (Indice_Sprite_izq).
1499  8C20
1500  8C20 2A 59 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1501  8C23 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
1502  8C26 CD F8 8B     	call Extrae_address
1503  8C29 22 51 89     	ld (Puntero_objeto),hl
1504  8C2C
1505  8C2C 2A 57 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1506  8C2F 22 5B 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1507  8C32 C9           	ret
1508  8C33
1509  8C33              ; **************************************************************************************************
1510  8C33              ;
1511  8C33              ;	31/01/24
1512  8C33              ;
1513  8C33              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1514  8C33
1515  8C33              Restore_entidad
1516  8C33
1517  8C33 2A 95 89     	ld hl,(Puntero_store_caja)
1518  8C36 11 4C 89     	ld de,Bandeja_DRAW
1519  8C39 7E           	ld a,(hl)
1520  8C3A 12           	ld (de),a
1521  8C3B 23           	inc hl 											; (Tipo).
1522  8C3C
1523  8C3C 11 53 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1524  8C3F 01 02 00     	ld bc,2
1525  8C42 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1526  8C44
1527  8C44 13           	inc de
1528  8C45 7E           	ld a,(hl)
1529  8C46 12           	ld (de),a 										; Transferimos (Attr).
1530  8C47 23           	inc hl
1531  8C48
1532  8C48 11 62 89     	ld de,Impacto
1533  8C4B
1534  8C4B 7E           	ld a,(hl)
1535  8C4C 12           	ld (de),a 										; Transferimos (Impacto).
1536  8C4D 23           	inc hl
1537  8C4E
1538  8C4E 13           	inc de
1539  8C4F
1540  8C4F 01 06 00     	ld bc,6
1541  8C52 ED B0        	ldir
1542  8C54
1543  8C54 01 07 00     	ld bc,7
1544  8C57 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1545  8C59              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1546  8C59 11 74 89     	ld de,Ctrl_2
1547  8C5C
1548  8C5C 7E           	ld a,(hl)
1549  8C5D 12           	ld (de),a 										; Transferimos (Ctrl_2).
1550  8C5E
1551  8C5E C9           	ret
1552  8C5F
1553  8C5F              ; **************************************************************************************************
1554  8C5F              ;
1555  8C5F              ;	08/05/23
1556  8C5F              ;
1557  8C5F              ;	Incrementamos los dos punteros de entidades. (+1).
1558  8C5F
1559  8C5F              Incrementa_punteros_de_cajas
1560  8C5F
1561  8C5F 2A 97 89     	ld hl,(Puntero_restore_caja)
1562  8C62 22 95 89     	ld (Puntero_store_caja),hl
1563  8C65 2A 99 89     	ld hl,(Indice_restore_caja)
1564  8C68 23           	inc hl
1565  8C69 23           	inc hl
1566  8C6A 22 99 89     	ld (Indice_restore_caja),hl
1567  8C6D CD F8 8B         call Extrae_address
1568  8C70 22 97 89         ld (Puntero_restore_caja),hl
1569  8C73 C9               ret
1570  8C74
1571  8C74              ; **************************************************************************************************
1572  8C74              ;
1573  8C74              ;	21/12/23
1574  8C74              ;
1575  8C74              ;	Restore_Amadeus
1576  8C74              ;
1577  8C74              ;	Cargamos en DRAW los parámetros de Amadeus.
1578  8C74              ;
1579  8C74
1580  8C74 E5           Restore_Amadeus	push hl
1581  8C75 D5           	push de
1582  8C76 C5            	push bc
1583  8C77 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1584  8C7A 11 4C 89     	ld de,Bandeja_DRAW
1585  8C7D 01 2A 00     	ld bc,42
1586  8C80 ED B0        	ldir
1587  8C82 C1           	pop bc
1588  8C83 D1           	pop de
1589  8C84 E1           	pop hl
1590  8C85 C9           	ret
1591  8C86
1592  8C86              ; *************************************************************************************************************************************************************
1593  8C86              ;
1594  8C86              ;	21/12/23
1595  8C86              ;
1596  8C86              ;	Store_Amadeus
1597  8C86              ;
1598  8C86              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1599  8C86              ;
1600  8C86              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1601  8C86              ;
1602  8C86              ;	DESTRUYE: HL y BC y DE.
1603  8C86
1604  8C86 21 4C 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1605  8C89 01 2A 00     	ld bc,42
1606  8C8C ED B0        	ldir
1607  8C8E C9           	ret
1608  8C8F
1609  8C8F              ; -----------------------------------------------------------
1610  8C8F              ;
1611  8C8F              ;	21/12/23
1612  8C8F              ;
1613  8C8F              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1614  8C8F              ;
1615  8C8F              ;	Destruye: HL,BC,DE,A
1616  8C8F
1617  8C8F 21 4C 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1618  8C92 01 29 00     	ld bc,41
1619  8C95 AF           	xor a
1620  8C96 77           	ld (hl),a
1621  8C97 11 4D 89     	ld de,Bandeja_DRAW+1
1622  8C9A ED B0        	ldir
1623  8C9C C9           	ret
1624  8C9D
1625  8C9D              ; -----------------------------------------------------------
1626  8C9D
1627  8C9D              ; Teclado.
1628  8C9D
1629  8C9D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1630  8C9F DB FE        	in a,($fe)
1631  8CA1 E6 01        	and $01
1632  8CA3 28 02        	jr z,1f
1633  8CA5 18 F6        	jr Pulsa_ENTER
1634  8CA7 C9           1 ret
1635  8CA8
1636  8CA8              ; **************************************************************************************************
1637  8CA8              ;
1638  8CA8              ; Temporización.
1639  8CA8
1640  8CA8              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1641  8CA8              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1642  8CA8              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1643  8CA8              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1644  8CA8
1645  8CA8              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1646  8CA8              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1647  8CA8              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1648  8CA8
1649  8CA8              ; A partir de $4f61 no hace falta DELAY.
1650  8CA8
1651  8CA8              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1652  8CA8
1653  8CA8 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1654  8CAB 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1655  8CAC 78           	LD A,B
1656  8CAD A7           	AND A
1657  8CAE 20 FB        	JR NZ,wait
1658  8CB0 C9           	RET
1659  8CB1
1660  8CB1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1661  8CB1              ;
1662  8CB1              ;	5/3/23
1663  8CB1              ;
1664  8CB1              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1665  8CB1
1666  8CB1              Movimiento_Amadeus
1667  8CB1
1668  8CB1              ; Disparo.
1669  8CB1
1670  8CB1 3A C9 89     	ld a,(Disparo_Amadeus)
1671  8CB4 A7           	and a
1672  8CB5 20 02        	jr nz,1F
1673  8CB7 18 15        	jr 2F
1674  8CB9
1675  8CB9 3E F7        1 ld a,$f7													; "5" para disparar.
1676  8CBB DB FE        	in a,($fe)
1677  8CBD E6 10        	and $10
1678  8CBF
1679  8CBF F5           	push af
1680  8CC0 CC 34 9A     	call z,Genera_disparo
1681  8CC3 F1           	pop af
1682  8CC4 20 08        	jr nz,2F
1683  8CC6
1684  8CC6 3A C9 89     	ld a,(Disparo_Amadeus)
1685  8CC9 EE 01        	xor 1
1686  8CCB 32 C9 89     	ld (Disparo_Amadeus),a
1687  8CCE 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1688  8CD0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1689  8CD2 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1690  8CD4 CC 07 97         call z,Mov_left											;			"			"			"			"			"			"			"			"
1691  8CD7
1692  8CD7 3E F7        	ld a,$f7
1693  8CD9 DB FE        	in a,($fe)
1694  8CDB E6 01        	and $01
1695  8CDD C8           	ret z
1696  8CDE
1697  8CDE 3E F7        	ld a,$f7
1698  8CE0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1699  8CE2 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1700  8CE4 CC E4 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1701  8CE7 C9           	ret
1702  8CE8
1703  8CE8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1704  8CE8              ;
1705  8CE8              ;	Rutina provisional para que los malotes cagen balas.
1706  8CE8
1707  8CE8              Detecta_disparo_entidad
1708  8CE8
1709  8CE8 3A CC 89     	ld a,(Disparo_entidad)
1710  8CEB A7           	and a
1711  8CEC C8           	ret z
1712  8CED
1713  8CED              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1714  8CED
1715  8CED              ;	ld a,$7f				; Detecta SPACE.
1716  8CED              ;	in a,($fe)
1717  8CED              ;	and 1
1718  8CED              ;	ret nz
1719  8CED
1720  8CED CD 34 9A     	call Genera_disparo
1721  8CF0 C9           	ret
1722  8CF1
1723  8CF1              ; ----------------------------------------------------------------------
1724  8CF1              ;
1725  8CF1              ;	8/9/23
1726  8CF1
1727  8CF1 2A AF 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1728  8CF4 2B            	dec hl
1729  8CF5 7E           	ld a,(hl)
1730  8CF6 A7           	and a
1731  8CF7 C8           	ret z										; Salimos si es álbum está vacío.
1732  8CF8
1733  8CF8 11 68 89     	ld de,Variables_de_borrado+5
1734  8CFB 01 06 00     	ld bc,6
1735  8CFE ED B8        	lddr
1736  8D00 C9           	ret
1737  8D01
1738  8D01              ; ----------------------------------------------------------------------
1739  8D01              ;
1740  8D01              ;	9/9/23
1741  8D01
1742  8D01              Repone_datos_de_borrado_Amadeus
1743  8D01
1744  8D01 21 63 89     	ld hl,Variables_de_borrado
1745  8D04 11 AC 80     	ld de,Album_de_fotos_Amadeus
1746  8D07 01 06 00     	ld bc,6
1747  8D0A ED B0        	ldir
1748  8D0C
1749  8D0C EB           	ex de,hl
1750  8D0D 22 AF 89     	ld (End_Snapshot_Amadeus),hl
1751  8D10
1752  8D10 C9           	ret
1753  8D11
1754  8D11              ; ----------------------------------------------------------------------
1755  8D11              ;
1756  8D11              ;	27/10/23
1757  8D11              ;
1758  8D11
1759  8D11              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1760  8D11              ;	_ Album_de_fotos correspondiente.
1761  8D11
1762  8D11              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1763  8D11              ;	_ durante el proceso de escritura.
1764  8D11
1765  8D11              Repone_datos_de_borrado
1766  8D11
1767  8D11 ED 5B A9 89  	ld de,(Stack_snapshot)
1768  8D15 21 63 89     	ld hl,Variables_de_borrado
1769  8D18 01 06 00     	ld bc,6
1770  8D1B ED B0        	ldir
1771  8D1D
1772  8D1D EB           	ex de,hl
1773  8D1E 22 A9 89     	ld (Stack_snapshot),hl
1774  8D21
1775  8D21 C9           	ret
1776  8D22
1777  8D22              ; --------------------------------------------------------------------------------------
1778  8D22
1779  8D22              Pinta_Amadeus
1780  8D22
1781  8D22 CD C4 8B        	call Calcula_malotes_Amadeus
1782  8D25 CD CD 92     	call Extrae_foto_Amadeus
1783  8D28 CD 84 8B     	call Limpia_album_Amadeus
1784  8D2B
1785  8D2B C9           	ret
1786  8D2C
1787  8D2C              ; -----------------------------------------------------------------------------------
1788  8D2C              ;
1789  8D2C              ;	10/12/23
1790  8D2C              ;
1791  8D2C              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1792  8D2C
1793  8D2C              Actualiza_relojes
1794  8D2C
1795  8D2C 3A B1 89     	ld a,(Ctrl_3)
1796  8D2F CB 47        	bit 0,a
1797  8D31 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1798  8D32
1799  8D32 21 C4 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1800  8D35 34           	inc (hl)
1801  8D36
1802  8D36 34           	inc (hl)
1803  8D37 35           	dec (hl)
1804  8D38 C0           	ret nz
1805  8D39
1806  8D39 21 C5 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1807  8D3C 34           	inc (hl)
1808  8D3D C9           	ret
1809  8D3E
1810  8D3E              ; ---------------------------------------------------------------
1811  8D3E
1812  8D3E              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8D3E              ;---------------------------------------------------------------------------------------------------------------
   2+ 8D3E              ;
   3+ 8D3E              ;   19/1/24
   4+ 8D3E              ;
   5+ 8D3E              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8D3E              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8D3E              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8D3E              ;	_ de la 1ª entidad del Nivel.
   9+ 8D3E              ;
  10+ 8D3E              ;	MODIFICA: HL,DE y A.
  11+ 8D3E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8D3E
  13+ 8D3E              Inicializa_Nivel
  14+ 8D3E
  15+ 8D3E 2A D0 89     	ld hl,(Puntero_indice_NIVELES)
  16+ 8D41 CD F8 8B     	call Extrae_address
  17+ 8D44 7E           	ld a,(hl)
  18+ 8D45 32 9B 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8D48 23           	inc hl
  20+ 8D49 CD 56 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8D4C 22 D2 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8D4F CD 5F 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8D52              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D52 CD 70 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8D55 C9           	ret
  26+ 8D56
  27+ 8D56              ; ----------------------
  28+ 8D56
  29+ 8D56 11 76 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8D59 01 04 00     	ld bc,4
  31+ 8D5C ED B0        	ldir
  32+ 8D5E C9           	ret
  33+ 8D5F
  34+ 8D5F 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8D60 CD B0 8E         call Calcula_salto_en_BC
  36+ 8D63 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8D66 A7               and a
  38+ 8D67 ED 4A            adc hl,bc
  39+ 8D69 CD F8 8B         call Extrae_address
  40+ 8D6C 22 86 89         ld (Puntero_indice_mov),hl
  41+ 8D6F C9               ret
  42+ 8D70
  43+ 8D70 3A 4C 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8D73 CD B0 8E     	call Calcula_salto_en_BC
  45+ 8D76 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8D79 A7               and a
  47+ 8D7A ED 4A            adc hl,bc
  48+ 8D7C CD F8 8B         call Extrae_address
  49+ 8D7F 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8D82 C9           	ret
  51+ 8D83
  52+ 8D83              ;---------------------------------------------------------------------------------------------------------------
  53+ 8D83              ;
  54+ 8D83              ;   5/1/24
  55+ 8D83              ;
  56+ 8D83              ;	Destruye A,BC,HL,DE
  57+ 8D83
  58+ 8D83              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8D83              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8D83
  61+ 8D83              Inicia_Entidades
  62+ 8D83
  63+ 8D83              ; Preparamos los punteros de las cajas de entidades:
  64+ 8D83
  65+ 8D83 CD 60 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8D86              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8D86 CD 17 8F     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8D89
  69+ 8D89 2A D2 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8D8C
  71+ 8D8C 22 D2 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8D8F
  73+ 8D8F CD 5E 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8D92
  75+ 8D92 2A D2 89     	ld hl,(Datos_de_nivel)
  76+ 8D95
  77+ 8D95              ; En este punto:
  78+ 8D95              ;
  79+ 8D95              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8D95              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8D95
  82+ 8D95 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8D96
  84+ 8D96 7E           	ld a,(hl)
  85+ 8D97 CD D3 8D     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8D9A
  87+ 8D9A CD C2 8E     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8D9D
  89+ 8D9D              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8D9D
  91+ 8D9D CD 80 8E     	call Busca_mov_masticados_segun_tipo
  92+ 8DA0
  93+ 8DA0 A7           	and a
  94+ 8DA1 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8DA3
  96+ 8DA3              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8DA3
  98+ 8DA3              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8DA3              ;	_ de este tipo de entidad.
 100+ 8DA3
 101+ 8DA3 CD 1E 9A     	call Situa_en_contador_general_de_mov_masticados
 102+ 8DA6 CD 2B 9A     	call Transfiere_datos_de_contadores
 103+ 8DA9
 104+ 8DA9 18 06        	jr 4F
 105+ 8DAB
 106+ 8DAB CD 73 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8DAE
 108+ 8DAE              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8DAE              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8DAE              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8DAE              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8DAE              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8DAE
 114+ 8DAE CD 3E 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8DB1              ;																; _ Mov_masticados ya generados.
 116+ 8DB1 CD ED 8D     4 call Guarda_foto_de_mov_masticado
 117+ 8DB4
 118+ 8DB4              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8DB4
 120+ 8DB4 2A 69 89     	ld hl,(Puntero_de_impresion)
 121+ 8DB7 CD 35 9F     	call Genera_coordenadas
 122+ 8DBA CD E9 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8DBD CD F7 8D     	call Limpiamos_bandeja_DRAW
 124+ 8DC0 CD 5F 8C     	call Incrementa_punteros_de_cajas
 125+ 8DC3
 126+ 8DC3              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8DC3              ; _ entidad del Nivel.
 128+ 8DC3
 129+ 8DC3 3A B2 89     	ld a,(Ctrl_4)
 130+ 8DC6 E6 F0        	and $f0
 131+ 8DC8 32 B2 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8DCB
 133+ 8DCB              ; Siguiente entidad del Nivel.
 134+ 8DCB
 135+ 8DCB 2A D2 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8DCE 23           	inc hl 														; _ entidad del Nivel.
 137+ 8DCF
 138+ 8DCF C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8DD0
 140+ 8DD0 10 BA        	djnz 2B
 141+ 8DD2
 142+ 8DD2 C9           	ret
 143+ 8DD3
 144+ 8DD3              ; ---------------------------------------------------------------------
 145+ 8DD3              ;
 146+ 8DD3              ;	10/02/24
 147+ 8DD3              ;
 148+ 8DD3              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8DD3              ;
 150+ 8DD3              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8DD3
 152+ 8DD3              Definicion_segun_tipo
 153+ 8DD3
 154+ 8DD3 CD B0 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8DD6 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8DD9 CD B8 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8DDC C9           	ret
 158+ 8DDD
 159+ 8DDD              ; ---------------------------------------------------------------------
 160+ 8DDD              ;
 161+ 8DDD              ;	30/01/24
 162+ 8DDD
 163+ 8DDD
 164+ 8DDD              Store_Restore_cajas
 165+ 8DDD
 166+ 8DDD              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8DDD
 168+ 8DDD 2A 69 89     	ld hl,(Puntero_de_impresion)
 169+ 8DE0 CD 35 9F     	call Genera_coordenadas
 170+ 8DE3
 171+ 8DE3 CD E9 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8DE6 CD F7 8D     	call Limpiamos_bandeja_DRAW
 173+ 8DE9
 174+ 8DE9              ; 	Entidad_sospechosa. 20/4/23
 175+ 8DE9
 176+ 8DE9              ;	ld a,(Impacto)
 177+ 8DE9              ;	and a
 178+ 8DE9              ;	jr z,1F
 179+ 8DE9
 180+ 8DE9              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8DE9              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8DE9              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8DE9              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8DE9              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8DE9
 186+ 8DE9
 187+ 8DE9              ;1 ld hl,(Puntero_restore_caja)
 188+ 8DE9              ;	ld a,(hl)
 189+ 8DE9              ;	and a
 190+ 8DE9              ;	push af
 191+ 8DE9              ;	jr z,2F
 192+ 8DE9
 193+ 8DE9              ;	di
 194+ 8DE9              ;	ld de,Bandeja_DRAW
 195+ 8DE9              ;	ld bc,42
 196+ 8DE9              ;	ldir
 197+ 8DE9              ;	ei
 198+ 8DE9
 199+ 8DE9 CD 5F 8C     2 call Incrementa_punteros_de_cajas
 200+ 8DEC C9           	ret
 201+ 8DED
 202+ 8DED
 203+ 8DED              ; ---------------------------------------------------------------------
 204+ 8DED              ;
 205+ 8DED              ;	29/01/24
 206+ 8DED
 207+ 8DED CD 0F 8B     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 208+ 8DF0 CD BF 80     	call Guarda_foto_registros
 209+ 8DF3              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 210+ 8DF3              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 211+ 8DF3              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 212+ 8DF3              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 213+ 8DF3
 214+ 8DF3 CD 02 8E     	call Decrementa_Contador_de_mov_masticados
 215+ 8DF6 C9           	ret
 216+ 8DF7
 217+ 8DF7              ; ---------------------------------------------------------------------
 218+ 8DF7              ;
 219+ 8DF7              ;	25/01/24
 220+ 8DF7
 221+ 8DF7 21 4C 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 222+ 8DFA 06 2A        	ld b,42
 223+ 8DFC AF           	xor a
 224+ 8DFD
 225+ 8DFD 77           1 ld (hl),a
 226+ 8DFE 23           	inc hl
 227+ 8DFF 10 FC        	djnz 1B
 228+ 8E01
 229+ 8E01 C9           	ret
 230+ 8E02
 231+ 8E02              ; ---------------------------------------------------------------------
 232+ 8E02              ;
 233+ 8E02              ;	22/01/24
 234+ 8E02
 235+ 8E02 2A 6D 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 236+ 8E05 2B           	dec hl
 237+ 8E06
 238+ 8E06 24           	inc h
 239+ 8E07 25           	dec h
 240+ 8E08
 241+ 8E08 FC 0F 8E     	call m,Reinicia_entidad_maliciosa
 242+ 8E0B
 243+ 8E0B              ;	jr nz,1F
 244+ 8E0B
 245+ 8E0B              ;	inc l
 246+ 8E0B              ;	dec l
 247+ 8E0B
 248+ 8E0B              ;	di
 249+ 8E0B              ;	jr z,$
 250+ 8E0B              ;	ei
 251+ 8E0B
 252+ 8E0B 22 6D 89     1 ld (Contador_de_mov_masticados),hl
 253+ 8E0E C9           	ret
 254+ 8E0F
 255+ 8E0F              ; ---------------------------------------------------------------------
 256+ 8E0F              ;
 257+ 8E0F              ;	10/2/24
 258+ 8E0F
 259+ 8E0F              Reinicia_entidad_maliciosa
 260+ 8E0F
 261+ 8E0F              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 262+ 8E0F
 263+ 8E0F CD 1E 9A     	call Situa_en_contador_general_de_mov_masticados
 264+ 8E12 CD 2B 9A     	call Transfiere_datos_de_contadores
 265+ 8E15
 266+ 8E15              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 267+ 8E15
 268+ 8E15 3A 4C 89     	ld a,(Tipo)
 269+ 8E18 CD D3 8D     	call Definicion_segun_tipo
 270+ 8E1B
 271+ 8E1B E5           	push hl
 272+ 8E1C DD E1        	pop ix
 273+ 8E1E
 274+ 8E1E DD 6E 0B     	ld l,(ix+11)
 275+ 8E21 DD 66 0C     	ld h,(ix+12)
 276+ 8E24
 277+ 8E24 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 278+ 8E27
 279+ 8E27              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 280+ 8E27              ;	Queremos pintar la entidad en su posición de inicio.
 281+ 8E27
 282+ 8E27 2A A9 89     	ld hl,(Stack_snapshot)
 283+ 8E2A 01 06 00     	ld bc,6
 284+ 8E2D A7           	and a
 285+ 8E2E ED 42        	sbc hl,bc
 286+ 8E30 22 A9 89     	ld (Stack_snapshot),hl
 287+ 8E33
 288+ 8E33 CD 0F 8B     	call Cargamos_registros_con_mov_masticado
 289+ 8E36 CD BF 80     	call Guarda_foto_registros
 290+ 8E39
 291+ 8E39 2A 6D 89     	ld hl,(Contador_de_mov_masticados)
 292+ 8E3C 2B           	dec hl
 293+ 8E3D
 294+ 8E3D C9           	ret
 295+ 8E3E
 296+ 8E3E
 297+ 8E3E
 298+ 8E3E
 299+ 8E3E              ; ---------------------------------------------------------------------
 300+ 8E3E              ;
 301+ 8E3E              ;	22/01/24
 302+ 8E3E
 303+ 8E3E 21 B2 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 304+ 8E41 CB 46        	bit 0,(hl)
 305+ 8E43 20 0D        	jr nz,1F
 306+ 8E45 CB 4E        	bit 1,(hl)
 307+ 8E47 20 0C        	jr nz,2F
 308+ 8E49 CB 56        	bit 2,(hl)
 309+ 8E4B 20 0B        	jr nz,3F
 310+ 8E4D CB 5E        	bit 3,(hl)
 311+ 8E4F 20 0A        	jr nz,4F
 312+ 8E51 C9           	ret
 313+ 8E52
 314+ 8E52 CB E6        1 set 4,(hl)
 315+ 8E54 C9           	ret
 316+ 8E55 CB EE        2 set 5,(hl)
 317+ 8E57 C9           	ret
 318+ 8E58 CB F6        3 set 6,(hl)
 319+ 8E5A C9           	ret
 320+ 8E5B CB FE        4 set 7,(hl)
 321+ 8E5D C9           	ret
 322+ 8E5E
 323+ 8E5E              ; ---------------------------------------------------------------------
 324+ 8E5E              ;
 325+ 8E5E              ;	23/01/24
 326+ 8E5E              ;
 327+ 8E5E              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 328+ 8E5E              ;
 329+ 8E5E              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 330+ 8E5E              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 331+ 8E5E              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 332+ 8E5E              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 333+ 8E5E
 334+ 8E5E              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 335+ 8E5E
 336+ 8E5E 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 337+ 8E5F 3D           	dec a
 338+ 8E60 20 06        	jr nz,1F
 339+ 8E62
 340+ 8E62              ; --- Tipo_1
 341+ 8E62
 342+ 8E62 21 B2 89     	ld hl,Ctrl_4
 343+ 8E65 CB C6        	set 0,(hl)
 344+ 8E67 C9           	ret
 345+ 8E68
 346+ 8E68 3D           1 dec a
 347+ 8E69 20 06        	jr nz,2F
 348+ 8E6B
 349+ 8E6B              ; --- Tipo_2
 350+ 8E6B
 351+ 8E6B 21 B2 89     	ld hl,Ctrl_4
 352+ 8E6E CB CE        	set 1,(hl)
 353+ 8E70 C9           	ret
 354+ 8E71
 355+ 8E71 3D           2 dec a
 356+ 8E72 20 06        	jr nz,3F
 357+ 8E74
 358+ 8E74              ; --- Tipo_3
 359+ 8E74
 360+ 8E74 21 B2 89     	ld hl,Ctrl_4
 361+ 8E77 CB D6        	set 2,(hl)
 362+ 8E79 C9           	ret
 363+ 8E7A
 364+ 8E7A              ; --- Tipo_3
 365+ 8E7A
 366+ 8E7A 21 B2 89     3 ld hl,Ctrl_4
 367+ 8E7D CB D6        	set 2,(hl)
 368+ 8E7F C9           	ret
 369+ 8E80
 370+ 8E80              ; ---------------------------------------------------------------------
 371+ 8E80              ;
 372+ 8E80              ;	22/01/24
 373+ 8E80
 374+ 8E80 21 B2 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 375+ 8E83 CB 46        	bit 0,(hl)
 376+ 8E85 20 0E        	jr nz,1F
 377+ 8E87
 378+ 8E87 CB 4E        	bit 1,(hl)
 379+ 8E89 20 10        	jr nz,2F
 380+ 8E8B
 381+ 8E8B CB 56        	bit 2,(hl)
 382+ 8E8D 20 12        	jr nz,3F
 383+ 8E8F
 384+ 8E8F CB 5E        	bit 3,(hl)
 385+ 8E91 20 14        	jr nz,4F
 386+ 8E93 18 19        	jr 6F
 387+ 8E95
 388+ 8E95              ; Entidad_de_Tipo_1.
 389+ 8E95
 390+ 8E95 CB 66        1 bit 4,(hl)
 391+ 8E97 28 15        	jr z,6F
 392+ 8E99 18 10        	jr 5F
 393+ 8E9B
 394+ 8E9B              ; Entidad_de_Tipo_2.
 395+ 8E9B
 396+ 8E9B CB 6E        2 bit 5,(hl)
 397+ 8E9D 28 0F        	jr z,6F
 398+ 8E9F 18 0A        	jr 5F
 399+ 8EA1
 400+ 8EA1              ; Entidad_de_Tipo_3.
 401+ 8EA1
 402+ 8EA1 CB 76        3 bit 6,(hl)
 403+ 8EA3 28 09        	jr z,6F
 404+ 8EA5 18 04        	jr 5F
 405+ 8EA7
 406+ 8EA7              ; Entidad_de_Tipo_4.
 407+ 8EA7
 408+ 8EA7 CB 7E        4 bit 7,(hl)
 409+ 8EA9 28 03        	jr z,6F
 410+ 8EAB
 411+ 8EAB              ; Esta entidad TIENE MOV_MASTICADOS.
 412+ 8EAB
 413+ 8EAB AF           5 xor a
 414+ 8EAC 3C           	inc a
 415+ 8EAD C9           	ret
 416+ 8EAE
 417+ 8EAE              ; Esta entidad NO TIENE MOV_MASTICADOS.
 418+ 8EAE
 419+ 8EAE AF           6 xor a
 420+ 8EAF C9           	ret
 421+ 8EB0
 422+ 8EB0              ;	------------------------------------------------------------------------------------
 423+ 8EB0              ;
 424+ 8EB0              ;	12/01/24
 425+ 8EB0              ;
 426+ 8EB0              ;	INPUTS:	A contiene el (Tipo) de entidad.
 427+ 8EB0              ;
 428+ 8EB0              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 429+ 8EB0              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 430+ 8EB0
 431+ 8EB0 CB 27        Calcula_salto_en_BC sla a
 432+ 8EB2 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 433+ 8EB4 4F           	ld c,a
 434+ 8EB5 06 00        	ld b,0
 435+ 8EB7 C9           	ret
 436+ 8EB8
 437+ 8EB8              ; ------------------------------------------------------------------
 438+ 8EB8              ;
 439+ 8EB8              ;	19/1/24
 440+ 8EB8              ;
 441+ 8EB8              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 442+ 8EB8              ;	Actualiza (Datos_de_entidad) con esa dirección.
 443+ 8EB8
 444+ 8EB8 A7           Situa_en_datos_de_definicion and a
 445+ 8EB9 ED 4A        	adc hl,bc
 446+ 8EBB CD F8 8B     	call Extrae_address
 447+ 8EBE 22 A1 89         ld (Datos_de_entidad),hl
 448+ 8EC1 C9           	ret
 449+ 8EC2
 450+ 8EC2              ; ------------------------------------------------------------------
 451+ 8EC2
 452+ 8EC2              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 453+ 8EC2              ; 	inc de
 454+ 8EC2              ; 	inc de
 455+ 8EC2              ; 	ex de,hl
 456+ 8EC2              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 457+ 8EC2              ; 	ret
 458+ 8EC2
 459+ 8EC2              ; ----------------------------------------------------------------------------------------------------------
 460+ 8EC2              ;
 461+ 8EC2              ;	31/1/24
 462+ 8EC2              ;
 463+ 8EC2              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 464+ 8EC2              ;	_ de entidad.
 465+ 8EC2              ;
 466+ 8EC2              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 467+ 8EC2              ;
 468+ 8EC2              ;
 469+ 8EC2              ;	MODIFICA: HL,DE y BC
 470+ 8EC2
 471+ 8EC2
 472+ 8EC2              Definicion_de_entidad_a_bandeja_DRAW
 473+ 8EC2
 474+ 8EC2 11 4C 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 475+ 8EC5 01 03 00     	ld bc,3
 476+ 8EC8 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 477+ 8ECA              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 478+ 8ECA 11 56 89     	ld de,Attr									; DE en (Attr).
 479+ 8ECD 01 05 00     	ld bc,5
 480+ 8ED0 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 481+ 8ED2              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 482+ 8ED2 11 5F 89     	ld de,Posicion_inicio
 483+ 8ED5 01 03 00     	ld bc,3
 484+ 8ED8 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 485+ 8EDA              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 486+ 8EDA 11 6B 89     	ld de,Puntero_de_almacen_de_mov_masticados
 487+ 8EDD 01 02 00     	ld bc,2
 488+ 8EE0 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 489+ 8EE2
 490+ 8EE2 11 75 89     	ld de,Frames_explosion
 491+ 8EE5 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 492+ 8EE7 12           	ld (de),a 									; Vuelco (Frames_explosion).
 493+ 8EE8
 494+ 8EE8 C9           	ret
 495+ 8EE9
 496+ 8EE9              ; ----------------------------------------------------------------------------------------------------------
 497+ 8EE9              ;
 498+ 8EE9              ;	22/01/24
 499+ 8EE9              ;
 500+ 8EE9              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 501+ 8EE9              ;
 502+ 8EE9              ;	Las cajas contienen entidades iniciadas:
 503+ 8EE9              ;
 504+ 8EE9              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 505+ 8EE9              ;
 506+ 8EE9              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 507+ 8EE9              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 508+ 8EE9              ;
 509+ 8EE9              ;	MODIFICA: HL,DE y BC
 510+ 8EE9
 511+ 8EE9 21 4C 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 512+ 8EEC ED 5B 95 89  	ld de,(Puntero_store_caja)
 513+ 8EF0 7E           	ld a,(hl)
 514+ 8EF1 12           	ld (de),a
 515+ 8EF2 13           	inc de 													; (Tipo).
 516+ 8EF3
 517+ 8EF3 21 53 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 518+ 8EF6 01 02 00     	ld bc,2
 519+ 8EF9 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 520+ 8EFB              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 521+ 8EFB 23           	inc hl
 522+ 8EFC 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 523+ 8EFD 12           	ld (de),a
 524+ 8EFE 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 525+ 8EFF
 526+ 8EFF 21 62 89     	ld hl,Impacto
 527+ 8F02 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 528+ 8F03 12           	ld (de),a
 529+ 8F04 13           	inc de 													; (Impacto), volcado a la caja.
 530+ 8F05              ;															; DE situado ahora en (Variables_de_borrado).
 531+ 8F05 23           	inc hl
 532+ 8F06 01 06 00     	ld bc,6
 533+ 8F09 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 534+ 8F0B              ; 															; DE situado ahora en (Puntero_de_impresión).
 535+ 8F0B 01 07 00     	ld bc,7
 536+ 8F0E ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 537+ 8F10              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 538+ 8F10              ;															; HL apunta ahora a (Columnas).
 539+ 8F10 21 74 89     	ld hl,Ctrl_2
 540+ 8F13 7E           	ld a,(hl)
 541+ 8F14 12           	ld (de),a 												; Volcamos (Ctrl_2).
 542+ 8F15 13           	inc de
 543+ 8F16
 544+ 8F16 C9           	ret
 545+ 8F17
 546+ 8F17              ;---------------------------------------------------------------------------------------------------------------
 547+ 8F17              ;
 548+ 8F17              ;	5/1/24
 549+ 8F17              ;
 550+ 8F17              ;	INICIALIZA (Numero_parcial_de_entidades).
 551+ 8F17              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 552+ 8F17              ;
 553+ 8F17              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 554+ 8F17              ;
 555+ 8F17              ;	(Numero_parcial_de_entidades)="7".
 556+ 8F17              ;
 557+ 8F17              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 558+ 8F17              ;
 559+ 8F17              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 560+ 8F17              ;
 561+ 8F17              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 562+ 8F17              ;	MODIFICA: A y B.
 563+ 8F17              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 564+ 8F17
 565+ 8F17              Inicializa_Numero_parcial_de_entidades
 566+ 8F17
 567+ 8F17              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 568+ 8F17
 569+ 8F17 3A 9B 89     	ld a,(Numero_de_entidades)
 570+ 8F1A A7           	and a
 571+ 8F1B
 572+ 8F1B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 573+ 8F1B              ;	jr z,$
 574+ 8F1B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 575+ 8F1B
 576+ 8F1B 20 03        	jr nz,3F
 577+ 8F1D
 578+ 8F1D              ; ---------- ---------- ----------
 579+ 8F1D
 580+ 8F1D              ;! RESET para pruebas. Omitir esta línea en modo normal.
 581+ 8F1D              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 582+ 8F1D
 583+ 8F1D CD 3E 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 584+ 8F20
 585+ 8F20              ; ---------- ---------- ----------
 586+ 8F20
 587+ 8F20 3A 9B 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 588+ 8F23 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 589+ 8F25 38 08        	jr c,1F
 590+ 8F27
 591+ 8F27              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 592+ 8F27              ; Actualizamos variables.
 593+ 8F27
 594+ 8F27 3E 07        	ld a,7
 595+ 8F29 32 9C 89     	ld (Numero_parcial_de_entidades),a
 596+ 8F2C 47           	ld b,a
 597+ 8F2D 18 04        	jr 2F
 598+ 8F2F
 599+ 8F2F              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 600+ 8F2F              ; (Numero_de_entidades)="0".
 601+ 8F2F
 602+ 8F2F 32 9C 89     1 ld (Numero_parcial_de_entidades),a
 603+ 8F32 47           	ld b,a
 604+ 8F33 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1813  8F34              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F34              ; ******************************************************************************************************************************************************************************************
   2+ 8F34              ;
   3+ 8F34              ; 26/06/23
   4+ 8F34              ;
   5+ 8F34              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F34
   7+ 8F34              Draw
   8+ 8F34
   9+ 8F34 CD 21 92     	call Prepara_draw
  10+ 8F37 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8F38 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8F39 28 05        	jr z,2F
  13+ 8F3B
  14+ 8F3B 3A 61 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8F3E 18 0C        	jr 1F
  16+ 8F40
  17+ 8F40 2A 5F 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8F43 22 4F 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8F46 CD D5 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8F49              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8F49
  22+ 8F49 CD 82 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8F4C
  24+ 8F4C 3A 6F 89     1 ld a,(Ctrl_0)
  25+ 8F4F CB 6F        	bit 5,a
  26+ 8F51 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8F53
  28+ 8F53 CD 6B 8F     	call Comprueba_limite_horizontal
  29+ 8F56 CD FB 8F     	call Comprueba_limite_vertical
  30+ 8F59
  31+ 8F59              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8F59              ; -----------------------
  33+ 8F59              ; -----------------------
  34+ 8F59              ; -----------------------
  35+ 8F59
  36+ 8F59 CD 51 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8F5C CD 88 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8F5F CD E7 91     	call Define_rutina_de_impresion
  39+ 8F62
  40+ 8F62 3A 6F 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8F65 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8F67 32 6F 89     	ld (Ctrl_0),a
  43+ 8F6A
  44+ 8F6A C9           	ret
  45+ 8F6B
  46+ 8F6B              ; *******************************************************************************************************************************************************************************************
  47+ 8F6B              ;	21/01/23
  48+ 8F6B              ;
  49+ 8F6B              ; 	Comprueba_limite_horizontal.
  50+ 8F6B              ;
  51+ 8F6B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8F6B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8F6B              ;
  54+ 8F6B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8F6B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8F6B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8F6B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8F6B
  59+ 8F6B
  60+ 8F6B
  61+ 8F6B 3A 6F 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8F6E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8F70 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8F72 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8F74 32 6F 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8F77 18 09            jr 6F
  67+ 8F79 CB 5F        1 bit 3,a
  68+ 8F7B 28 0A            jr z,2F
  69+ 8F7D E6 F7            and $f7
  70+ 8F7F 32 6F 89         ld (Ctrl_0),a
  71+ 8F82 CD D5 90     6 call Inicializacion
  72+ 8F85 18 5B            jr 5F
  73+ 8F87 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8F88
  75+ 8F88              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8F88              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8F88
  78+ 8F88 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8F89 2A 71 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8F8C CD 17 9F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8F8F 67           	ld h,a
  82+ 8F90 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8F91 CD 17 9F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8F94 67           	ld h,a
  85+ 8F95 A7           	and a
  86+ 8F96 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8F98 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8F99 3A 61 89     	ld a,(Cuad_objeto)
  89+ 8F9C FE 02        	cp 2
  90+ 8F9E 38 1E        	jr c,3F
  91+ 8FA0 28 1C        	jr z,3F
  92+ 8FA2 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8FA3 28 23            jr z,7F
  94+ 8FA5 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8FA7 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8FA9 E1           	pop hl
  97+ 8FAA
  98+ 8FAA              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8FAA              ; _para indicar con E="2" en caso necesario.
 100+ 8FAA
 101+ 8FAA E5               push hl
 102+ 8FAB C5               push bc
 103+ 8FAC CD 17 9F     	call calcula_tercio
 104+ 8FAF FE 01        	cp 1
 105+ 8FB1 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8FB3 CD E3 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8FB6 28 26            jr z,9F
 108+ 8FB8 38 24            jr c,9F
 109+ 8FBA 1E 00        11 ld e,0
 110+ 8FBC 18 22            jr 8F
 111+ 8FBE 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8FBF 28 07        	jr z, 7F
 113+ 8FC1 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8FC3 1E 00         	ld e,0
 115+ 8FC5 E1           	pop hl
 116+ 8FC6 18 04        	jr 4F
 117+ 8FC8 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8FCA 18 15            jr 10F
 119+ 8FCC
 120+ 8FCC              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8FCC              ; _para indicar con E="2" en caso necesario.
 122+ 8FCC
 123+ 8FCC E5           4 push hl
 124+ 8FCD C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8FCE CD 17 9F     	call calcula_tercio
 126+ 8FD1 FE 01        	cp 1
 127+ 8FD3 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8FD5 CD E3 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8FD8 28 04            jr z,9F
 130+ 8FDA 30 02            jr nc,9F
 131+ 8FDC 18 02        	jr 8F
 132+ 8FDE 1E 02        9 ld e,2
 133+ 8FE0 C1           8 pop bc
 134+ 8FE1 E1           10 pop hl
 135+ 8FE2 C9           5 ret
 136+ 8FE3
 137+ 8FE3              ; --------------------
 138+ 8FE3              ;
 139+ 8FE3              ; 25/08/22
 140+ 8FE3
 141+ 8FE3 CD 17 9F     Comprueba_centro call calcula_tercio
 142+ 8FE6 67               ld h,a
 143+ 8FE7 08           	ex af,af
 144+ 8FE8 FE 02        	cp 2
 145+ 8FEA 38 07        	jr c,1F
 146+ 8FEC 28 05        	jr z,1F
 147+ 8FEE 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8FF1 18 03        	jr 2F
 149+ 8FF3 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8FF6 08           2 ex af,af
 151+ 8FF7 A7               and a
 152+ 8FF8 ED 42            sbc hl,bc
 153+ 8FFA C9               ret
 154+ 8FFB
 155+ 8FFB              ; *********************************************************************************************************************************************************************************************
 156+ 8FFB              ;
 157+ 8FFB              ;   16/8/22
 158+ 8FFB              ;
 159+ 8FFB              ;	Comprueba_limite_vertical
 160+ 8FFB              ;
 161+ 8FFB              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8FFB              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8FFB              ;
 164+ 8FFB
 165+ 8FFB 2A 4F 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8FFE 7D           	ld a,l
 167+ 8FFF E6 1F        	and $1F
 168+ 9001 57           	ld d,a
 169+ 9002 3A 73 89     	ld a,(Limite_vertical)
 170+ 9005 BA           	cp d 											; Límite - Posición.
 171+ 9006 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9007 3A 61 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 900A CB 47        	bit 0,a
 174+ 900C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 900E
 176+ 900E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 900E
 178+ 900E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 900F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9011
 181+ 9011              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9011              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9011
 184+ 9011 3A 53 89         ld a,(Coordenada_X)
 185+ 9014 16 0F            ld d,Centro_izquierda
 186+ 9016 A7               and a
 187+ 9017 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 9018 28 1E            jr z,3F
 189+ 901A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 901C              ;                                                    ; _salimos sin modificar nada.
 191+ 901C 18 0E            jr 2F
 192+ 901E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 901F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 9021
 195+ 9021              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 9021              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 9021
 198+ 9021 3A 53 89         ld a,(Coordenada_X)
 199+ 9024 16 10            ld d,Centro_derecha
 200+ 9026 A7               and a
 201+ 9027 92               sub d
 202+ 9028 28 0E            jr z,3F
 203+ 902A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 902C              ;                                                    ; _salimos sin modificar nada.
 205+ 902C CB 43        2 bit 0,e
 206+ 902E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 9030 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9031 CD C5 90         call Modificaccionne
 209+ 9034 C1           	pop bc
 210+ 9035 CD D5 90         call Inicializacion
 211+ 9038 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 9039
 213+ 9039              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 9039
 215+ 9039 C5           4 push bc
 216+ 903A 01 4E 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 903D 0A           	ld a,(bc)
 218+ 903E 3D           	dec a
 219+ 903F 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9040 7D           	ld a,l
 221+ 9041 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9042 CB 47        	bit 0,a
 223+ 9044 28 03        	jr z,5F
 224+ 9046 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9047 18 2E        	jr 7F
 226+ 9049
 227+ 9049              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9049
 229+ 9049 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 904A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 904B 3A 6F 89     	ld a,(Ctrl_0)
 232+ 904E CB 4F        	bit 1,a
 233+ 9050 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9052 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9053
 236+ 9053              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9053
 238+ 9053 1C               inc e
 239+ 9054 1D               dec e
 240+ 9055 20 07            jr nz,12F
 241+ 9057 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9058 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9059 22 4F 89     	ld (Posicion_actual),hl
 244+ 905C 18 44        13 jr 9F
 245+ 905E CB 43        12 bit 0,e
 246+ 9060 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9062              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9062 C1           	pop bc
 249+ 9063 18 D3        	jr 3B
 250+ 9065 80           14 add b
 251+ 9066 6F               ld l,a
 252+ 9067 22 4F 89     	ld (Posicion_actual),hl
 253+ 906A CD C5 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 906D 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 906F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9071 32 6F 89         ld (Ctrl_0),a
 257+ 9074 F1           	pop af
 258+ 9075 18 2B        	jr 9F
 259+ 9077
 260+ 9077              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9077
 262+ 9077 F5           7 push af
 263+ 9078 3A 6F 89     	ld a,(Ctrl_0)
 264+ 907B CB 47        	bit 0,a
 265+ 907D 20 1D        	jr nz,8F
 266+ 907F F1           	pop af
 267+ 9080
 268+ 9080              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9080
 270+ 9080 1C           	inc e
 271+ 9081 1D               dec e
 272+ 9082 20 07            jr nz,10F
 273+ 9084 90           	sub b
 274+ 9085 6F               ld l,a
 275+ 9086 22 4F 89     	ld (Posicion_actual),hl
 276+ 9089 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 908B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 908B CB 43        10 bit 0,e
 279+ 908D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 908F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 908F C1           	pop bc
 282+ 9090 18 A6        	jr 3B
 283+ 9092 90           16 sub b
 284+ 9093 6F               ld l,a
 285+ 9094 22 4F 89     	ld (Posicion_actual),hl
 286+ 9097 CD C5 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 909A 18 06            jr 9F
 288+ 909C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 909E 32 6F 89         ld (Ctrl_0),a
 290+ 90A1 F1           	pop af
 291+ 90A2 C1           9 pop bc
 292+ 90A3 1E 00        	ld e,0
 293+ 90A5 CD D5 90         call Inicializacion
 294+ 90A8 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 90A9 08           	ex af,af
 296+ 90AA F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 90AB 18 8B            jr 3B
 298+ 90AD
 299+ 90AD              ; --------------------
 300+ 90AD
 301+ 90AD 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 90AF CD 3C 92     1 call PreviousScan
 303+ 90B2 10 FB            djnz 1B
 304+ 90B4 22 4F 89     	ld (Posicion_actual),hl
 305+ 90B7 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 90B8 C9           	ret
 307+ 90B9
 308+ 90B9              ; --------------------
 309+ 90B9
 310+ 90B9 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 90BB CD 2D 92     1 call NextScan
 312+ 90BE 10 FB            djnz 1B
 313+ 90C0 22 4F 89     	ld (Posicion_actual),hl
 314+ 90C3 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 90C4 C9           	ret
 316+ 90C5
 317+ 90C5              ; --------------------
 318+ 90C5              ;
 319+ 90C5              ;	22/01/23
 320+ 90C5              ;
 321+ 90C5              ;	E="1". Hemos cambiado de cuadrante.
 322+ 90C5              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 90C5              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 90C5
 325+ 90C5
 326+ 90C5              Modificaccionne
 327+ 90C5
 328+ 90C5 3A 61 89     	ld a,(Cuad_objeto)
 329+ 90C8 FE 02        	cp 2
 330+ 90CA CC AD 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 90CD DC AD 90         call c,Modifica_Pos_actual
 332+ 90D0 C8           	ret z
 333+ 90D1 CD B9 90         call Modifica_Pos_actual2
 334+ 90D4 C9               ret
 335+ 90D5
 336+ 90D5              ; *************************************************************************************************************************************************************************************************
 337+ 90D5              ;
 338+ 90D5              ;	13/8/22
 339+ 90D5              ;
 340+ 90D5              ;	Inicializacion
 341+ 90D5              ;
 342+ 90D5              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 90D5              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 90D5              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 90D5              ;
 346+ 90D5              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 90D5              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 90D5              ;	_ desaparece/aparece.
 349+ 90D5
 350+ 90D5              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 90D5              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 90D5              ;
 353+ 90D5              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 90D5              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 90D5              ; 		   [E] ="0"
 356+ 90D5
 357+ 90D5              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 90D5
 359+ 90D5 CD 17 9F     Inicializacion call calcula_tercio
 360+ 90D8 28 36        	jr z,primit
 361+ 90DA E6 02        	and 2
 362+ 90DC 20 07        	jr nz,segmit
 363+ 90DE 7D           	ld a,l
 364+ 90DF FE 7F        	cp $7f
 365+ 90E1 38 2D        	jr c,primit
 366+ 90E3 28 2B        	jr z,primit
 367+ 90E5 CD 4B 91     segmit call column
 368+ 90E8 38 13        	jr c,tercuad
 369+ 90EA 3E 04        cuarcuad ld a,4
 370+ 90EC 32 61 89     	ld (Cuad_objeto),a
 371+ 90EF 21 20 48     	ld hl,$4820
 372+ 90F2 22 71 89     	ld (Limite_horizontal),hl
 373+ 90F5 21 73 89     	ld hl,Limite_vertical
 374+ 90F8 36 0D        	ld (hl),$0d
 375+ 90FA 08           	ex af,af
 376+ 90FB 18 3C        	jr 1F
 377+ 90FD              tercuad
 378+ 90FD 3E 03        	ld a,3
 379+ 90FF 32 61 89     	ld (Cuad_objeto),a
 380+ 9102 21 20 48     	ld hl,$4820
 381+ 9105 22 71 89     	ld (Limite_horizontal),hl
 382+ 9108 21 73 89     	ld hl,Limite_vertical
 383+ 910B 36 12        	ld (hl),$12
 384+ 910D 08           	ex af,af
 385+ 910E 18 29        	jr 1F
 386+ 9110 CD 4B 91     primit call column
 387+ 9113 38 13        	jr c, primcuad
 388+ 9115              segcuad
 389+ 9115 3E 02        	ld a,2
 390+ 9117 32 61 89     	ld (Cuad_objeto),a
 391+ 911A 21 C0 4F     	ld hl,$4fc0
 392+ 911D 22 71 89     	ld (Limite_horizontal),hl
 393+ 9120 21 73 89     	ld hl,Limite_vertical
 394+ 9123 36 0D        	ld (hl),$0d
 395+ 9125 08           	ex af,af
 396+ 9126 18 11        	jr 1F
 397+ 9128              primcuad
 398+ 9128 3E 01        	ld a,1
 399+ 912A 32 61 89     	ld (Cuad_objeto),a
 400+ 912D 21 C0 4F     	ld hl,$4fc0
 401+ 9130 22 71 89     	ld (Limite_horizontal),hl
 402+ 9133 21 73 89     	ld hl,Limite_vertical
 403+ 9136 36 12        	ld (hl),$12
 404+ 9138 08           	ex af,af
 405+ 9139
 406+ 9139 C5           1 push bc
 407+ 913A E5           	push hl
 408+ 913B D5           	push de
 409+ 913C
 410+ 913C 2A 4F 89     	ld hl,(Posicion_actual)
 411+ 913F CD 35 9F     	call Genera_coordenadas
 412+ 9142
 413+ 9142 D1           	pop de
 414+ 9143 E1           	pop hl
 415+ 9144 C1           	pop bc
 416+ 9145
 417+ 9145 21 6F 89     	ld hl,Ctrl_0
 418+ 9148 CB EE        	set 5,(hl)
 419+ 914A C9           	ret
 420+ 914B
 421+ 914B              ; ------------------------------------------------------------------------------------------------------------------
 422+ 914B
 423+ 914B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 914B              ;
 425+ 914B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 914B
 427+ 914B 7D           column ld a,l
 428+ 914C E6 1F        	and $1f
 429+ 914E FE 10         	cp $10
 430+ 9150 C9            	ret
 431+ 9151
 432+ 9151              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9151              ;
 434+ 9151              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9151              ;
 436+ 9151              ; 14/12/22
 437+ 9151              ;
 438+ 9151              ;	Modifica: A y BC.
 439+ 9151
 440+ 9151 3A 61 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9154 E6 01        	and 1
 442+ 9156 28 17        	jr z,1F
 443+ 9158
 444+ 9158              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9158
 446+ 9158 3A 53 89     	ld a,(Coordenada_X)
 447+ 915B 47           	ld b,a
 448+ 915C 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 915D 79           	ld a,c
 450+ 915E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 915F 38 08        	jr c,2F
 452+ 9161 47           	ld b,a
 453+ 9162 79           	ld a,c
 454+ 9163 90           	sub b
 455+ 9164 32 70 89     	ld (Columnas),a
 456+ 9167 18 1B        	jr 4F
 457+ 9169 79           2 ld a,c
 458+ 916A 32 70 89     	ld (Columnas),a
 459+ 916D 18 15        	jr 4F
 460+ 916F
 461+ 916F              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 916F
 463+ 916F 3A 53 89     1 ld a,(Coordenada_X)
 464+ 9172 81           	add c
 465+ 9173 3D           	dec a
 466+ 9174 D6 1F        	sub $1f
 467+ 9176 38 08        	jr c,3F
 468+ 9178 47           	ld b,a
 469+ 9179 79           	ld a,c
 470+ 917A 90           	sub b
 471+ 917B 32 70 89     	ld (Columnas),a
 472+ 917E 18 04        	jr 4F
 473+ 9180 79           3 ld a,c
 474+ 9181 32 70 89     	ld (Columnas),a
 475+ 9184 D9           4 exx
 476+ 9185 4F           	ld c,a
 477+ 9186 D9           	exx
 478+ 9187 C9            ret
 479+ 9188
 480+ 9188              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9188              ;
 482+ 9188              ;   19/7/23
 483+ 9188              ;
 484+ 9188              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9188              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9188              ;
 487+ 9188              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9188              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9188              ;
 490+ 9188              ;	DESTRUYE: HL,B Y A.
 491+ 9188
 492+ 9188 3A 61 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 918B FE 02        	cp 2
 494+ 918D 38 18        	jr c,1F
 495+ 918F 28 16        	jr z,1F
 496+ 9191 E6 01        	and 1
 497+ 9193 28 0D        	jr z,3F
 498+ 9195
 499+ 9195              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9195
 501+ 9195 CD DB 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9198
 503+ 9198 7D           9 ld a,l
 504+ 9199 E6 1F        	and $1f
 505+ 919B 28 2A        	jr z,7F
 506+ 919D 2B           	dec hl
 507+ 919E 10 F8        	djnz 9B
 508+ 91A0 18 25        	jr 7F
 509+ 91A2
 510+ 91A2              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 91A2
 512+ 91A2 2A 4F 89     3 ld hl,(Posicion_actual)
 513+ 91A5 18 20        	jr 7F
 514+ 91A7
 515+ 91A7 28 14        1 jr z,2F
 516+ 91A9
 517+ 91A9              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 91A9
 519+ 91A9 CD DB 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 91AC
 521+ 91AC 7D           4 ld a,l
 522+ 91AD E6 1F        	and $1f
 523+ 91AF 28 03        	jr z,6F
 524+ 91B1 2B           	dec hl
 525+ 91B2 10 F8        	djnz 4B
 526+ 91B4 06 0F        6 ld b,15
 527+ 91B6 CD 3C 92     5 call PreviousScan
 528+ 91B9 10 FB        	djnz 5B
 529+ 91BB 18 0A        	jr 7F
 530+ 91BD
 531+ 91BD              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 91BD
 533+ 91BD CD DB 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 91C0 06 0F        	ld b,15
 535+ 91C2 CD 3C 92     8 call PreviousScan
 536+ 91C5 10 FB        	djnz 8B
 537+ 91C7
 538+ 91C7 E5           7 push hl
 539+ 91C8 DD E1        	pop ix
 540+ 91CA
 541+ 91CA 2A 51 89     	ld hl,(Puntero_objeto)
 542+ 91CD E5           	push hl
 543+ 91CE FD E1        	pop iy
 544+ 91D0
 545+ 91D0              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 91D0
 547+ 91D0 3A 6F 89     	ld a,(Ctrl_0)
 548+ 91D3 CB 77        	bit 6,a
 549+ 91D5 C8           	ret z
 550+ 91D6
 551+ 91D6              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 91D6              ; _ entidad / Amadeus´.
 553+ 91D6
 554+ 91D6 DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 91DA
 556+ 91DA C9           	ret
 557+ 91DB
 558+ 91DB              ; --------------------------------------------------------------------------------------------------------------------
 559+ 91DB              ;
 560+ 91DB              ;	2/1/23
 561+ 91DB              ;
 562+ 91DB              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 91DB              ;
 564+ 91DB              ;	Tras esta rutina tenemos:
 565+ 91DB              ;
 566+ 91DB              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 91DB              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 91DB              ;
 569+ 91DB              ;	DESTRUYE!!!!! HL,B y A.
 570+ 91DB
 571+ 91DB 2A 4F 89     Operandos ld hl,(Posicion_actual)
 572+ 91DE 3A 70 89     	ld a,(Columnas)
 573+ 91E1 3D           	dec a
 574+ 91E2 20 01        	jr nz,1F
 575+ 91E4 3C           	inc a
 576+ 91E5 47           1 ld b,a
 577+ 91E6 C9           	ret
 578+ 91E7
 579+ 91E7              ; --------------------------------------------------------------------------------------------------------------------
 580+ 91E7              ;
 581+ 91E7              ;	3/1/23
 582+ 91E7              ;
 583+ 91E7              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 91E7              ;
 585+ 91E7              ;	Destruye: A,B,HL y DE.
 586+ 91E7
 587+ 91E7              Define_rutina_de_impresion
 588+ 91E7
 589+ 91E7 3A 4E 89     	ld a,(Columns)
 590+ 91EA 47           	ld b,a
 591+ 91EB 3A 70 89     	ld a,(Columnas)
 592+ 91EE B8           	cp b
 593+ 91EF 20 0D        	jr nz,2f
 594+ 91F1
 595+ 91F1              ;	La entidad se imprime entera.
 596+ 91F1
 597+ 91F1 21 10 93     	ld hl, Indice_entidades_completas
 598+ 91F4 E6 01        	and 1
 599+ 91F6 28 02        	jr z,1F
 600+ 91F8
 601+ 91F8 23           	inc hl
 602+ 91F9 23           	inc hl
 603+ 91FA
 604+ 91FA CD F8 8B     1 call Extrae_address
 605+ 91FD C9           	ret		;	ret
 606+ 91FE
 607+ 91FE              ;	La entidad no se imprime entera en pantalla.
 608+ 91FE
 609+ 91FE 3A 61 89     2 ld a,(Cuad_objeto)
 610+ 9201 E6 01        	and 1
 611+ 9203 28 17        	jr z,3F
 612+ 9205
 613+ 9205              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9205
 615+ 9205 21 14 93     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9208 3A 4E 89     4 ld a,(Columns)
 617+ 920B E6 01        	and 1
 618+ 920D 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 920F
 620+ 920F 23           	inc hl
 621+ 9210 23           	inc hl
 622+ 9211
 623+ 9211 3A 70 89     	ld a,(Columnas)
 624+ 9214 E6 01        	and 1
 625+ 9216 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 9218
 627+ 9218 23           	inc hl
 628+ 9219 23           	inc hl
 629+ 921A
 630+ 921A 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 921C
 632+ 921C 21 1A 93     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 921F 18 E7        	jr 4B
 634+ 9221
 635+ 9221              ; --------------------------------------------------------------------------------------------------------------------
 636+ 9221              ;
 637+ 9221              ;	Prepara_draw
 638+ 9221              ;
 639+ 9221              ;	Es una rutina de carga.
 640+ 9221              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 9221              ;
 642+ 9221              ;	FUNCIONAMIENTO:
 643+ 9221              ;
 644+ 9221              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 9221              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 9221              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 9221              ;
 648+ 9221              ;	DESTRUYE:
 649+ 9221              ;
 650+ 9221              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 9221
 652+ 9221 21 4D 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9224 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9225 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9226 4E           	ld c,(hl)
 656+ 9227 2A 4F 89     	ld hl,(Posicion_actual)
 657+ 922A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 922C C9           	ret
 659+ 922D
 660+ 922D              ;----------------------------------------------------------------------------------------------------------------
 661+ 922D              ;
 662+ 922D              ;	5/08/22
 663+ 922D              ;
 664+ 922D              ;   NextScan.
 665+ 922D              ;
 666+ 922D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 922D              ;
 668+ 922D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 922D              ;
 670+ 922D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 922D              ;
 672+ 922D              ;       DESTRUIDOS: AF y HL !!!
 673+ 922D              ;
 674+ 922D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 922D              ;
 676+ 922D
 677+ 922D 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 922E 7C               ld a,h
 679+ 922F E6 07            and 7
 680+ 9231 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9232
 682+ 9232 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9233 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9235 6F               ld l,a
 685+ 9236 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9237
 687+ 9237 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9238 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 923A 67               ld h,a
 690+ 923B C9               ret
 691+ 923C
 692+ 923C              ;----------------------------------------------------------------------------------------------------------------
 693+ 923C              ;
 694+ 923C              ;	5/08/22
 695+ 923C              ;
 696+ 923C              ;   PreviousScan.
 697+ 923C              ;
 698+ 923C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 923C              ;
 700+ 923C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 923C              ;
 702+ 923C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 923C              ;
 704+ 923C              ;       DESTRUIDOS: AF y HL !!!
 705+ 923C              ;
 706+ 923C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 923C              ;
 708+ 923C
 709+ 923C 7C           PreviousScan ld a,h
 710+ 923D 25               dec h               ; Dec H.
 711+ 923E E6 07            and 7
 712+ 9240 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9241
 714+ 9241 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9242 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9244 6F               ld l,a
 717+ 9245 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9246
 719+ 9246 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9247 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9249 67               ld h,a
 722+ 924A C9               ret
 723+ 924B
 724+ 924B              ; -----------------------------------------------------------------------------------
 725+ 924B              ;
 726+ 924B              ;	31/7/23
 727+ 924B              ;
 728+ 924B              ;	Rutina principal de pintado de entidades.
 729+ 924B              ;	Extrae la foto del frame, (entidades).
 730+ 924B
 731+ 924B              Extrae_foto_entidades
 732+ 924B
 733+ 924B 21 01 80     	ld hl,Album_de_fotos+1
 734+ 924E 7E           	ld a,(hl)
 735+ 924F A7           	and a
 736+ 9250 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9251
 738+ 9251              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9251
 740+ 9251 3A 9E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9254 A7           	and a
 742+ 9255 C8           	ret z
 743+ 9256
 744+ 9256              ; -----------------------------------
 745+ 9256
 746+ 9256 ED 73 A3 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 925A 31 00 80     	ld sp,Album_de_fotos
 748+ 925D
 749+ 925D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 925F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9260 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9261
 753+ 9261 ED 73 A5 89  	ld (Stack_2),sp
 754+ 9265 ED 7B A3 89  	ld sp,(Stack)
 755+ 9269
 756+ 9269              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9269
 758+ 9269 3E CD        	ld a,$cd
 759+ 926B 32 73 92     	ld (Imprime),a
 760+ 926E EB           	ex de,hl
 761+ 926F 22 74 92     	ld (Imprime+1),hl
 762+ 9272 EB           	ex de,hl
 763+ 9273
 764+ 9273              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9273
 766+ 9273 00 00 00     Imprime db 0,0,0
 767+ 9276
 768+ 9276 ED 73 A3 89  	ld (Stack),sp
 769+ 927A
 770+ 927A 3A 9E 89     	ld a,(Numero_de_malotes)
 771+ 927D 3D           	dec a
 772+ 927E 28 09        	jr z,1F
 773+ 9280 32 9E 89      	ld (Numero_de_malotes),a
 774+ 9283
 775+ 9283 ED 7B A5 89  	ld sp,(Stack_2)
 776+ 9287 18 D4        	jr 2B
 777+ 9289
 778+ 9289 AF           1 xor a
 779+ 928A 32 A5 89     	ld (Stack_2),a
 780+ 928D
 781+ 928D C9           	ret
 782+ 928E
 783+ 928E              ; -----------------------------------------------------------------------------------
 784+ 928E              ;
 785+ 928E              ;	28/2/23
 786+ 928E              ;
 787+ 928E              ;	Pinta los disparos generados.
 788+ 928E
 789+ 928E              Extrae_foto_disparos
 790+ 928E
 791+ 928E 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9291 7E               ld a,(hl)
 793+ 9292 A7               and a
 794+ 9293 C8               ret z
 795+ 9294
 796+ 9294 3A B3 89     	ld a,(Numero_de_disparotes)
 797+ 9297 A7           	and a
 798+ 9298 C8           	ret z
 799+ 9299 ED 73 A3 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 929D 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 92A0
 802+ 92A0 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 92A2 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 92A3 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 92A4
 806+ 92A4 ED 73 A5 89  	ld (Stack_2),sp
 807+ 92A8 ED 7B A3 89  	ld sp,(Stack)
 808+ 92AC
 809+ 92AC              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 92AC
 811+ 92AC 3E CD        	ld a,$cd
 812+ 92AE 32 B6 92     	ld (Imprime2),a
 813+ 92B1 EB           	ex de,hl
 814+ 92B2 22 B7 92     	ld (Imprime2+1),hl
 815+ 92B5 EB           	ex de,hl
 816+ 92B6
 817+ 92B6              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 92B6
 819+ 92B6 00 00 00     Imprime2 db 0,0,0
 820+ 92B9
 821+ 92B9 3A B3 89     	ld a,(Numero_de_disparotes)
 822+ 92BC 3D           	dec a
 823+ 92BD 28 09        	jr z,1F
 824+ 92BF 32 B3 89      	ld (Numero_de_disparotes),a
 825+ 92C2
 826+ 92C2 ED 7B A5 89  	ld sp,(Stack_2)
 827+ 92C6 18 D8        	jr 2B
 828+ 92C8
 829+ 92C8 AF           1 xor a
 830+ 92C9 32 A5 89     	ld (Stack_2),a
 831+ 92CC C9           	ret
 832+ 92CD
 833+ 92CD              ; -----------------------------------------------------------------------------------
 834+ 92CD              ;
 835+ 92CD              ;	4/9/23
 836+ 92CD              ;
 837+ 92CD              ;	Rutina principal de pintado de Amadeus.
 838+ 92CD              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 92CD
 840+ 92CD 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 92D0 7E           	ld a,(hl)
 842+ 92D1 A7           	and a
 843+ 92D2 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 92D3
 845+ 92D3 3A 9E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 92D6 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 92D7 C8           	ret z
 848+ 92D8
 849+ 92D8              ; -----------------------------------
 850+ 92D8
 851+ 92D8 ED 73 A3 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 92DC 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 92DF
 854+ 92DF FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 92E1 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 92E2 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 92E3
 858+ 92E3 ED 73 A5 89  	ld (Stack_2),sp
 859+ 92E7 ED 7B A3 89  	ld sp,(Stack)
 860+ 92EB
 861+ 92EB              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 92EB
 863+ 92EB 3E CD        	ld a,$cd
 864+ 92ED 32 F5 92     	ld (Imprime_Amadeus),a
 865+ 92F0 EB           	ex de,hl
 866+ 92F1 22 F6 92     	ld (Imprime_Amadeus+1),hl
 867+ 92F4 EB           	ex de,hl
 868+ 92F5
 869+ 92F5              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 92F5
 871+ 92F5 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 92F8
 873+ 92F8 ED 73 A3 89  	ld (Stack),sp
 874+ 92FC
 875+ 92FC 3A 9E 89     	ld a,(Numero_de_malotes)
 876+ 92FF 3D           	dec a
 877+ 9300 28 09        	jr z,1F
 878+ 9302 32 9E 89      	ld (Numero_de_malotes),a
 879+ 9305
 880+ 9305 ED 7B A5 89  	ld sp,(Stack_2)
 881+ 9309 18 D4        	jr 2B
 882+ 930B
 883+ 930B AF           1 xor a
 884+ 930C 32 A5 89     	ld (Stack_2),a
 885+ 930F
 886+ 930F C9           	ret
# file closed: Draw_XOR.asm
1814  9310              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9310              ;   índices de Rutinas de impresión.
   2+ 9310
   3+ 9310 20 93        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9312 4D 93            defw Pinta_Amadeus_3x2
   5+ 9314
   6+ 9314 A3 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9316 43 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9318 F7 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 931A
  10+ 931A CD 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 931C D1 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 931E 85 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9320
  14+ 9320
  15+ 9320              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9320              ;
  17+ 9320              ;   12/12/22
  18+ 9320              ;
  19+ 9320              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9320              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9320              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9320              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9320              ;
  24+ 9320              ;   Modifica: DE y HL.
  25+ 9320
  26+ 9320 ED 73 A3 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9324 FD F9        	ld sp,iy
  28+ 9326 06 10            ld b,16
  29+ 9328 D1           1 pop de
  30+ 9329 7B               ld a,e
  31+ 932A AE               xor (hl)
  32+ 932B 77           	ld (hl),a
  33+ 932C 23           	inc hl
  34+ 932D 7A               ld a,d
  35+ 932E AE               xor (hl)
  36+ 932F 77           	ld (hl),a
  37+ 9330 2B           	dec hl
  38+ 9331 24           	inc h
  39+ 9332 7C               ld a,h
  40+ 9333 E6 07            and 7
  41+ 9335 20 0A            jr nz,2F
  42+ 9337 7D               ld a,l
  43+ 9338 C6 20            add a,$20
  44+ 933A 6F               ld l,a
  45+ 933B 38 04            jr c,2F
  46+ 933D 7C               ld a,h
  47+ 933E D6 08            sub 8
  48+ 9340 67               ld h,a
  49+ 9341 7C           2 ld a,h
  50+ 9342 FE 58            cp $58
  51+ 9344 28 02            jr z,3F
  52+ 9346 10 E0            djnz 1B
  53+ 9348 ED 7B A3 89  3 ld sp,(Stack)
  54+ 934C C9           	ret
  55+ 934D
  56+ 934D ED 73 A3 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9351 FD F9        	ld sp,iy
  58+ 9353 06 08            ld b,8
  59+ 9355 D1           1 pop de
  60+ 9356 7B               ld a,e
  61+ 9357 AE               xor (hl)
  62+ 9358 77           	ld (hl),a
  63+ 9359 23           	inc hl
  64+ 935A 7A               ld a,d
  65+ 935B AE               xor (hl)
  66+ 935C 77           	ld (hl),a
  67+ 935D 23           	inc hl
  68+ 935E D1           	pop de
  69+ 935F 7B               ld a,e
  70+ 9360 AE               xor (hl)
  71+ 9361 77           	ld (hl),a
  72+ 9362 2B           	dec hl
  73+ 9363 2B           	dec hl
  74+ 9364 24           	inc h
  75+ 9365 7C               ld a,h
  76+ 9366 E6 07            and 7
  77+ 9368 20 0A            jr nz,2F
  78+ 936A 7D               ld a,l
  79+ 936B C6 20            add a,$20
  80+ 936D 6F               ld l,a
  81+ 936E 38 04            jr c,2F
  82+ 9370 7C               ld a,h
  83+ 9371 D6 08            sub 8
  84+ 9373 67               ld h,a
  85+ 9374 7C           2 ld a,h
  86+ 9375 FE 58            cp $58
  87+ 9377 28 25            jr z,4F
  88+ 9379 7A               ld a,d
  89+ 937A AE               xor (hl)
  90+ 937B 77               ld (hl),a
  91+ 937C D1           	pop de
  92+ 937D 23           	inc hl
  93+ 937E 7B               ld a,e
  94+ 937F AE               xor (hl)
  95+ 9380 77           	ld (hl),a
  96+ 9381 23           	inc hl
  97+ 9382 7A               ld a,d
  98+ 9383 AE               xor (hl)
  99+ 9384 77           	ld (hl),a
 100+ 9385 2B           	dec hl
 101+ 9386 2B           	dec hl
 102+ 9387 24           	inc h
 103+ 9388 7C               ld a,h
 104+ 9389 E6 07            and 7
 105+ 938B 20 0A            jr nz,3F
 106+ 938D 7D               ld a,l
 107+ 938E C6 20            add a,$20
 108+ 9390 6F               ld l,a
 109+ 9391 38 04            jr c,3F
 110+ 9393 7C               ld a,h
 111+ 9394 D6 08            sub 8
 112+ 9396 67               ld h,a
 113+ 9397 7C           3 ld a,h
 114+ 9398 FE 58            cp $58
 115+ 939A 28 02            jr z,4F
 116+ 939C 10 B7            djnz 1B
 117+ 939E ED 7B A3 89  4 ld sp,(Stack)
 118+ 93A2 C9           	ret
 119+ 93A3
 120+ 93A3              ; ---------------------------------------------------
 121+ 93A3
 122+ 93A3 ED 73 A3 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 93A7 FD F9        	ld sp,iy
 124+ 93A9
 125+ 93A9              ; >>>
 126+ 93A9
 127+ 93A9 06 10            ld b,16
 128+ 93AB D1           1 pop de
 129+ 93AC 7A           	ld a,d
 130+ 93AD AE           	xor (hl)
 131+ 93AE 77           	ld (hl),a
 132+ 93AF 24           	inc h
 133+ 93B0 7C               ld a,h
 134+ 93B1 E6 07            and 7
 135+ 93B3 20 0C            jr nz,2F
 136+ 93B5 7D               ld a,l
 137+ 93B6 C6 20            add a,$20
 138+ 93B8 6F               ld l,a
 139+ 93B9 38 06            jr c,2F
 140+ 93BB 7C               ld a,h
 141+ 93BC D6 08            sub 8
 142+ 93BE 67               ld h,a
 143+ 93BF 18 00            jr 2F
 144+ 93C1 7C           2 ld a,h
 145+ 93C2 FE 58            cp $58
 146+ 93C4 28 02            jr z,3F
 147+ 93C6 10 E3            djnz 1B
 148+ 93C8 ED 7B A3 89  3 ld sp,(Stack)
 149+ 93CC C9           	ret
 150+ 93CD
 151+ 93CD ED 73 A3 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 93D1 FD F9        	ld sp,iy
 153+ 93D3
 154+ 93D3              ; >>>
 155+ 93D3
 156+ 93D3 06 10            ld b,16
 157+ 93D5 D1           1 pop de
 158+ 93D6 7B           	ld a,e
 159+ 93D7 AE           	xor (hl)
 160+ 93D8 77           	ld (hl),a
 161+ 93D9 24           	inc h
 162+ 93DA 7C               ld a,h
 163+ 93DB E6 07            and 7
 164+ 93DD 20 0C            jr nz,2F
 165+ 93DF 7D               ld a,l
 166+ 93E0 C6 20            add a,$20
 167+ 93E2 6F               ld l,a
 168+ 93E3 38 06            jr c,2F
 169+ 93E5 7C               ld a,h
 170+ 93E6 D6 08            sub 8
 171+ 93E8 67               ld h,a
 172+ 93E9 18 00            jr 2F
 173+ 93EB 7C           2 ld a,h
 174+ 93EC FE 58            cp $58
 175+ 93EE 28 02            jr z,3F
 176+ 93F0 10 E3            djnz 1B
 177+ 93F2 ED 7B A3 89  3 ld sp,(Stack)
 178+ 93F6 C9           	ret
 179+ 93F7
 180+ 93F7              ; ---------------------------------------------------
 181+ 93F7
 182+ 93F7 ED 73 A3 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 93FB FD F9        	ld sp,iy
 184+ 93FD 06 08            ld b,8
 185+ 93FF D1           1 pop de
 186+ 9400 7A           	ld a,d
 187+ 9401 AE           	xor (hl)
 188+ 9402 77           	ld (hl),a
 189+ 9403 23           	inc hl
 190+ 9404 D1           	pop de
 191+ 9405 7B           	ld a,e
 192+ 9406 AE           	xor (hl)
 193+ 9407 77           	ld (hl),a
 194+ 9408 2B           	dec hl
 195+ 9409 24            	inc h
 196+ 940A 7C               ld a,h
 197+ 940B E6 07            and 7
 198+ 940D 20 0A            jr nz,2F
 199+ 940F 7D               ld a,l
 200+ 9410 C6 20            add a,$20
 201+ 9412 6F               ld l,a
 202+ 9413 38 04            jr c,2F
 203+ 9415 7C               ld a,h
 204+ 9416 D6 08            sub 8
 205+ 9418 67               ld h,a
 206+ 9419 7C           2 ld a,h
 207+ 941A FE 58            cp $58
 208+ 941C 28 20            jr z,4F
 209+ 941E D1               pop de
 210+ 941F 7B           	ld a,e
 211+ 9420 AE           	xor (hl)
 212+ 9421 77           	ld (hl),a
 213+ 9422 23           	inc hl
 214+ 9423 7A           	ld a,d
 215+ 9424 AE           	xor (hl)
 216+ 9425 77           	ld (hl),a
 217+ 9426 2B           	dec hl
 218+ 9427 24           	inc h
 219+ 9428 7C               ld a,h
 220+ 9429 E6 07            and 7
 221+ 942B 20 0A            jr nz,3F
 222+ 942D 7D               ld a,l
 223+ 942E C6 20            add a,$20
 224+ 9430 6F               ld l,a
 225+ 9431 38 04            jr c,3F
 226+ 9433 7C               ld a,h
 227+ 9434 D6 08            sub 8
 228+ 9436 67               ld h,a
 229+ 9437 7C           3 ld a,h
 230+ 9438 FE 58            cp $58
 231+ 943A 28 02            jr z,4F
 232+ 943C 10 C1            djnz 1B
 233+ 943E ED 7B A3 89  4 ld sp,(Stack)
 234+ 9442 C9           	ret
 235+ 9443
 236+ 9443 ED 73 A3 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9447 FD F9        	ld sp,iy
 238+ 9449 06 08            ld b,8
 239+ 944B D1           1 pop de
 240+ 944C D1           	pop de
 241+ 944D 7B           	ld a,e
 242+ 944E AE           	xor (hl)
 243+ 944F 77           	ld (hl),a
 244+ 9450 24            	inc h
 245+ 9451 7C               ld a,h
 246+ 9452 E6 07            and 7
 247+ 9454 20 0A            jr nz,2F
 248+ 9456 7D               ld a,l
 249+ 9457 C6 20            add a,$20
 250+ 9459 6F               ld l,a
 251+ 945A 38 04            jr c,2F
 252+ 945C 7C               ld a,h
 253+ 945D D6 08            sub 8
 254+ 945F 67               ld h,a
 255+ 9460 7C           2 ld a,h
 256+ 9461 FE 58            cp $58
 257+ 9463 28 1B            jr z,4F
 258+ 9465 D1               pop de
 259+ 9466 7A           	ld a,d
 260+ 9467 AE           	xor (hl)
 261+ 9468 77           	ld (hl),a
 262+ 9469 24           	inc h
 263+ 946A 7C               ld a,h
 264+ 946B E6 07            and 7
 265+ 946D 20 0A            jr nz,3F
 266+ 946F 7D               ld a,l
 267+ 9470 C6 20            add a,$20
 268+ 9472 6F               ld l,a
 269+ 9473 38 04            jr c,3F
 270+ 9475 7C               ld a,h
 271+ 9476 D6 08            sub 8
 272+ 9478 67               ld h,a
 273+ 9479 7C           3 ld a,h
 274+ 947A FE 58            cp $58
 275+ 947C 28 02            jr z,4F
 276+ 947E 10 CB            djnz 1B
 277+ 9480 ED 7B A3 89  4 ld sp,(Stack)
 278+ 9484 C9           	ret
 279+ 9485
 280+ 9485 ED 73 A3 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9489 FD F9        	ld sp,iy
 282+ 948B 06 08            ld b,8
 283+ 948D D1           1 pop de
 284+ 948E 7B           	ld a,e
 285+ 948F AE           	xor (hl)
 286+ 9490 77           	ld (hl),a
 287+ 9491 23           	inc hl
 288+ 9492 7A           	ld a,d
 289+ 9493 AE           	xor (hl)
 290+ 9494 77           	ld (hl),a
 291+ 9495 2B           	dec hl
 292+ 9496 24             	inc h
 293+ 9497 7C               ld a,h
 294+ 9498 E6 07            and 7
 295+ 949A 20 0A            jr nz,2F
 296+ 949C 7D               ld a,l
 297+ 949D C6 20            add a,$20
 298+ 949F 6F               ld l,a
 299+ 94A0 38 04            jr c,2F
 300+ 94A2 7C               ld a,h
 301+ 94A3 D6 08            sub 8
 302+ 94A5 67               ld h,a
 303+ 94A6 7C           2 ld a,h
 304+ 94A7 FE 58            cp $58
 305+ 94A9 28 21            jr z,4F
 306+ 94AB D1               pop de
 307+ 94AC 7A           	ld a,d
 308+ 94AD AE           	xor (hl)
 309+ 94AE 77           	ld (hl),a
 310+ 94AF 23           	inc hl
 311+ 94B0 D1               pop de
 312+ 94B1 7B           	ld a,e
 313+ 94B2 AE           	xor (hl)
 314+ 94B3 77           	ld (hl),a
 315+ 94B4 2B           	dec hl
 316+ 94B5 24           	inc h
 317+ 94B6 7C               ld a,h
 318+ 94B7 E6 07            and 7
 319+ 94B9 20 0A            jr nz,3F
 320+ 94BB 7D               ld a,l
 321+ 94BC C6 20            add a,$20
 322+ 94BE 6F               ld l,a
 323+ 94BF 38 04            jr c,3F
 324+ 94C1 7C               ld a,h
 325+ 94C2 D6 08            sub 8
 326+ 94C4 67               ld h,a
 327+ 94C5 7C           3 ld a,h
 328+ 94C6 FE 58            cp $58
 329+ 94C8 28 02            jr z,4F
 330+ 94CA 10 C1            djnz 1B
 331+ 94CC ED 7B A3 89  4 ld sp,(Stack)
 332+ 94D0 C9           	ret
 333+ 94D1
 334+ 94D1 ED 73 A3 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 94D5 FD F9        	ld sp,iy
 336+ 94D7 06 08            ld b,8
 337+ 94D9 D1           1 pop de
 338+ 94DA 7B           	ld a,e
 339+ 94DB AE           	xor (hl)
 340+ 94DC 77           	ld (hl),a
 341+ 94DD 24            	inc h
 342+ 94DE 7C               ld a,h
 343+ 94DF E6 07            and 7
 344+ 94E1 20 0A            jr nz,2F
 345+ 94E3 7D               ld a,l
 346+ 94E4 C6 20            add a,$20
 347+ 94E6 6F               ld l,a
 348+ 94E7 38 04            jr c,2F
 349+ 94E9 7C               ld a,h
 350+ 94EA D6 08            sub 8
 351+ 94EC 67               ld h,a
 352+ 94ED 7C           2 ld a,h
 353+ 94EE FE 58            cp $58
 354+ 94F0 28 1C            jr z,4F
 355+ 94F2 D1               pop de
 356+ 94F3 7A           	ld a,d
 357+ 94F4 AE           	xor (hl)
 358+ 94F5 77           	ld (hl),a
 359+ 94F6 24           	inc h
 360+ 94F7 7C               ld a,h
 361+ 94F8 E6 07            and 7
 362+ 94FA 20 0A            jr nz,3F
 363+ 94FC 7D               ld a,l
 364+ 94FD C6 20            add a,$20
 365+ 94FF 6F               ld l,a
 366+ 9500 38 04            jr c,3F
 367+ 9502 7C               ld a,h
 368+ 9503 D6 08            sub 8
 369+ 9505 67               ld h,a
 370+ 9506 7C           3 ld a,h
 371+ 9507 FE 58            cp $58
 372+ 9509 28 03            jr z,4F
 373+ 950B D1               pop de
 374+ 950C 10 CB            djnz 1B
 375+ 950E ED 7B A3 89  4 ld sp,(Stack)
 376+ 9512 C9           	ret
 377+ 9513
 378+ 9513              ; ---------------------------------------------------
 379+ 9513              ;
 380+ 9513              ;   27/02/23
 381+ 9513              ;
 382+ 9513              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9513              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9513              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9513
 386+ 9513 ED 73 A3 89  Pinta_Disparo ld (Stack),sp
 387+ 9517 FD F9            ld sp,iy
 388+ 9519 06 03            ld b,3
 389+ 951B D1           1 pop de
 390+ 951C 7B               ld a,e
 391+ 951D AE               xor (hl)
 392+ 951E 77               ld (hl),a
 393+ 951F 23               inc hl
 394+ 9520 7A               ld a,d
 395+ 9521 AE               xor (hl)
 396+ 9522 77               ld (hl),a
 397+ 9523 2B               dec hl
 398+ 9524
 399+ 9524 24               inc h
 400+ 9525 7C               ld a,h
 401+ 9526 E6 07            and 7
 402+ 9528 20 0A            jr nz,2F
 403+ 952A 7D               ld a,l
 404+ 952B C6 20            add a,$20
 405+ 952D 6F               ld l,a
 406+ 952E 38 04            jr c,2F
 407+ 9530 7C               ld a,h
 408+ 9531 D6 08            sub 8
 409+ 9533 67               ld h,a
 410+ 9534 7C           2 ld a,h
 411+ 9535 FE 58            cp $58
 412+ 9537 28 02            jr z,3F
 413+ 9539
 414+ 9539 10 E0            djnz 1B
 415+ 953B ED 7B A3 89  3 ld sp,(Stack)
 416+ 953F C9               ret
 417+ 9540
# file closed: Rutinas_de_impresion_sprites.asm
1815  9540              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9540
   2+ 9540              ; ******************************************************************************************************************************************************************************************
   3+ 9540              ;
   4+ 9540              ;   20/05/23
   5+ 9540              ;
   6+ 9540              ;	Recompone_posicion_inicio
   7+ 9540              ;
   8+ 9540              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9540              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9540              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9540              ;	_ a una u otra rutina.
  12+ 9540
  13+ 9540              Recompone_posicion_inicio
  14+ 9540
  15+ 9540 2A 5F 89     	ld hl,(Posicion_inicio)
  16+ 9543 7D           	ld a,l
  17+ 9544 E6 1F        	and $1f
  18+ 9546 28 16        	jr z,1F
  19+ 9548
  20+ 9548 FE 1F        	cp $1f
  21+ 954A 28 0D        	jr z,3F
  22+ 954C
  23+ 954C 21 74 89     	ld hl,Ctrl_2
  24+ 954F CB C6        	set 0,(hl)
  25+ 9551 2A 51 89     	ld hl,(Puntero_objeto)
  26+ 9554 22 93 89     	ld (Repone_puntero_objeto),hl
  27+ 9557 18 08        	jr 2F
  28+ 9559
  29+ 9559 CD 07 97     3 call Mov_left
  30+ 955C 18 03        	jr 2F
  31+ 955E
  32+ 955E CD E4 95     1 call Mov_right
  33+ 9561 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9564 22 51 89     	ld (Puntero_objeto),hl
  35+ 9567 C9           	ret
  36+ 9568
  37+ 9568              ; ******************************************************************************************************************************************************************************************
  38+ 9568              ;
  39+ 9568              ;   27/05/23
  40+ 9568              ;
  41+ 9568              ;	Mov_down
  42+ 9568              ;
  43+ 9568              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9568              ;
  45+ 9568              ;
  46+ 9568              Mov_down
  47+ 9568
  48+ 9568 CD D2 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 956B              ;																	; _ repone (Puntero_objeto).
  50+ 956B 21 6F 89     	ld hl,Ctrl_0
  51+ 956E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9570              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9570              ; 																	; _ en el caso de que no lo haya.
  54+ 9570 3A 79 89     	ld a,(Vel_down)
  55+ 9573 47           	ld b,a
  56+ 9574 2A 4F 89         ld hl,(Posicion_actual)
  57+ 9577 CD 17 9F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 957A E6 02        	and 2
  59+ 957C 28 17        	jr z,1F
  60+ 957E
  61+ 957E              ; Nos encontramos en el último tercio de pantalla.
  62+ 957E              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 957E
  64+ 957E 7C           	ld a,h
  65+ 957F FE 57        	cp $57
  66+ 9581 20 12        	jr nz,1F
  67+ 9583
  68+ 9583 7D           	ld a,l
  69+ 9584 C6 20        	add $20
  70+ 9586 30 0D        	jr nc,1F
  71+ 9588
  72+ 9588              ; ------------------------------
  73+ 9588              ;
  74+ 9588              ;	12/01/24
  75+ 9588
  76+ 9588              ;	call Reaparece_arriba
  77+ 9588 CD 94 98     	call Reinicio
  78+ 958B
  79+ 958B              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 958B
  81+ 958B 3A B1 89     	ld a,(Ctrl_3)
  82+ 958E CB CF        	set 1,a
  83+ 9590 32 B1 89     	ld (Ctrl_3),a
  84+ 9593
  85+ 9593 18 08        	jr 3F
  86+ 9595              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9595              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9595              ; ------------------------------
  89+ 9595
  90+ 9595 CD 2D 92     1 call NextScan
  91+ 9598 22 4F 89     	ld (Posicion_actual),hl
  92+ 959B 10 DA            djnz 2B
  93+ 959D CD 35 9F     3 call Genera_coordenadas
  94+ 95A0 C9           	ret
  95+ 95A1
  96+ 95A1              ; ******************************************************************************************************************************************************************************************
  97+ 95A1              ;
  98+ 95A1              ;   27/05/23
  99+ 95A1              ;
 100+ 95A1              ;	Mov_up
 101+ 95A1              ;
 102+ 95A1              ; 	Mueve el Sprite hacia arriba.
 103+ 95A1              ;
 104+ 95A1              ;
 105+ 95A1              Mov_up
 106+ 95A1
 107+ 95A1 CD D2 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 95A4              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 95A4 21 6F 89     	ld hl,Ctrl_0
 110+ 95A7 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 95A9              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 95A9              ; 																		; _ en el caso de que no lo haya.
 113+ 95A9 3A 78 89     	ld a,(Vel_up)
 114+ 95AC 47           	ld b,a
 115+ 95AD 2A 4F 89     	ld hl,(Posicion_actual)
 116+ 95B0 CD 17 9F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 95B3 A7           	and a
 118+ 95B4 20 10        	jr nz,1F
 119+ 95B6
 120+ 95B6              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 95B6              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 95B6
 123+ 95B6 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 95B7 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 95B9 20 0B            jr nz,1F
 126+ 95BB 7D               ld a,l
 127+ 95BC D6 20            sub $20
 128+ 95BE 30 06            jr nc,1F
 129+ 95C0 25               dec h
 130+ 95C1
 131+ 95C1              ; -----------------------------
 132+ 95C1 CD 75 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 95C4              ;	call Reinicio
 134+ 95C4              ; -----------------------------
 135+ 95C4
 136+ 95C4 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 95C6 CD 3C 92     1 call PreviousScan
 138+ 95C9 22 4F 89     	ld (Posicion_actual),hl
 139+ 95CC 10 E2            djnz 3B
 140+ 95CE CD 35 9F     2 call Genera_coordenadas
 141+ 95D1 C9           	ret
 142+ 95D2
 143+ 95D2              ; -----------------------------
 144+ 95D2              ;
 145+ 95D2              ;	27/5/23
 146+ 95D2              ;
 147+ 95D2              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95D2              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95D2              ;
 150+ 95D2              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95D2              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95D2              ;
 153+ 95D2              ;	Modifica: A y (Puntero_objeto).
 154+ 95D2
 155+ 95D2 3A 74 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95D5 CB 47        	bit 0,a
 157+ 95D7 C8           	ret z
 158+ 95D8 CB 87        	res 0,a
 159+ 95DA 32 74 89     	ld (Ctrl_2),a
 160+ 95DD 2A 93 89     	ld hl,(Repone_puntero_objeto)
 161+ 95E0 22 51 89     	ld (Puntero_objeto),hl
 162+ 95E3 C9           	ret
 163+ 95E4
 164+ 95E4              ; ******************************************************************************************************************************************************************************************
 165+ 95E4              ;
 166+ 95E4              ;	19/10/22
 167+ 95E4              ;
 168+ 95E4              ;	Mov_right.
 169+ 95E4              ;
 170+ 95E4              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95E4              ;
 172+ 95E4
 173+ 95E4 3A 6F 89     Mov_right ld a,(Ctrl_0)
 174+ 95E7 CB 77        	bit 6,a
 175+ 95E9 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95EB
 177+ 95EB CD 23 98     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95EE C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95EF
 180+ 95EF 21 6F 89     	ld hl,Ctrl_0
 181+ 95F2 CB E6        	set 4,(hl)
 182+ 95F4 18 52        	jr 8F
 183+ 95F6
 184+ 95F6 21 6F 89     10 ld hl,Ctrl_0
 185+ 95F9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95FB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95FB              ; 																	; _ en el caso de que no lo haya.
 188+ 95FB 3A 53 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95FE FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9600 20 46        	jr nz,8F
 191+ 9602
 192+ 9602 3A 55 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9605 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9606 28 40        	jr z,8F
 195+ 9608
 196+ 9608              ; ---------- ---------- ----------
 197+ 9608              ;
 198+ 9608              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9608
 200+ 9608 3A 77 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 960B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 960D 28 11        	jr z,1F
 203+ 960F 38 06        	jr c,6F
 204+ 9611 FE 04        	cp 4
 205+ 9613 28 14        	jr z,7F
 206+ 9615 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9617
 208+ 9617              ; ---------- ---------- ----------
 209+ 9617              ;
 210+ 9617              ; Perfiles de velocidad
 211+ 9617              ;
 212+ 9617
 213+ 9617 3A 55 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 961A FE FE        	cp $fe
 215+ 961C 20 2A        	jr nz,8F
 216+ 961E 18 10        	jr 3F
 217+ 9620 3A 55 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9623 FE FD        	cp $fd
 219+ 9625 20 21        	jr nz,8F
 220+ 9627 18 07        	jr 3F
 221+ 9629 3A 55 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 962C FE FB        	cp $fb
 223+ 962E 20 18        	jr nz,8F
 224+ 9630
 225+ 9630              ; ---------- ---------- ----------
 226+ 9630
 227+ 9630              3
 228+ 9630 CD 63 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9633              ;	call Reinicio
 230+ 9633
 231+ 9633              ; ---------- ---------- ----------
 232+ 9633              ;
 233+ 9633              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9633
 235+ 9633 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9635 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9636 CD 4F 96     	call DESPLZ_DER
 238+ 9639 C1           	pop bc
 239+ 963A 10 F9        	djnz 5B
 240+ 963C 2A 4F 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 963F 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9640 22 4F 89     	ld (Posicion_actual),hl
 243+ 9643 CD 35 9F     	call Genera_coordenadas
 244+ 9646 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9648
 246+ 9648              ; ---------- ---------- ----------
 247+ 9648
 248+ 9648 2A 4F 89     8 ld hl,(Posicion_actual)
 249+ 964B CD 4F 96     	call DESPLZ_DER
 250+ 964E C9           2 ret
 251+ 964F
 252+ 964F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 964F              ;
 254+ 964F              ;	22/9/22
 255+ 964F              ;
 256+ 964F
 257+ 964F CD 5E 96     DESPLZ_DER call Desplaza_derecha
 258+ 9652 CD AA 96         call modifica_parametros_1er_DESPLZ_2
 259+ 9655 CD D3 96         call Ciclo_completo
 260+ 9658 21 6F 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 965B CB FE        	set 7,(hl)
 262+ 965D C9           	ret
 263+ 965E
 264+ 965E              ; ******************************************************************************************************************************************************************************************
 265+ 965E              ;	15/02/23
 266+ 965E              ;
 267+ 965E
 268+ 965E 3A 77 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9661 47           	ld b,a
 270+ 9662 2A 5B 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9665 23           1 inc hl
 272+ 9666 23           	inc hl
 273+ 9667 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9669 22 5B 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 966C CD F8 8B     	call Extrae_address
 276+ 966F 22 51 89     	ld (Puntero_objeto),hl
 277+ 9672
 278+ 9672              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9672
 280+ 9672              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9672              ; Cuántos movimientos hemos hecho ??
 282+ 9672              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9672
 284+ 9672 2A 57 89     7 ld hl,(Indice_Sprite_der)
 285+ 9675 EB           	ex de,hl
 286+ 9676 A7           	and a
 287+ 9677 ED 52        	sbc hl,de
 288+ 9679 CB 3D        	srl l
 289+ 967B 3E 08        6 ld a,8
 290+ 967D 95           	sub l
 291+ 967E 30 1E        	jr nc,3F
 292+ 9680
 293+ 9680              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9680              ; B="0".
 295+ 9680
 296+ 9680 04           4 inc b
 297+ 9681 3C           	inc a
 298+ 9682 20 FC        	jr nz,4B
 299+ 9684 78           	ld a,b
 300+ 9685 08           	ex af,af
 301+ 9686 2A 57 89     	ld hl,(Indice_Sprite_der)
 302+ 9689 23           5 inc hl
 303+ 968A 23           	inc hl
 304+ 968B 10 FC        	djnz 5B
 305+ 968D 22 5B 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9690 CD F8 8B     	call Extrae_address
 307+ 9693 22 51 89     	ld (Puntero_objeto),hl
 308+ 9696
 309+ 9696              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9696              ; _(Posicion_actual).
 311+ 9696
 312+ 9696 21 4F 89     	ld hl,Posicion_actual
 313+ 9699 34           	inc (hl)
 314+ 969A 08               ex af,af
 315+ 969B 6F           	ld l,a
 316+ 969C 18 DD        	jr 6B
 317+ 969E
 318+ 969E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 969E
 320+ 969E 47           3 ld b,a
 321+ 969F 2A 59 89     	ld hl,(Indice_Sprite_izq)
 322+ 96A2 23           2 inc hl
 323+ 96A3 23           	inc hl
 324+ 96A4 10 FC        	djnz 2B
 325+ 96A6 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 96A9 C9           8 ret
 327+ 96AA
 328+ 96AA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 96AA              ;
 330+ 96AA              ;	24/7/22
 331+ 96AA              ;
 332+ 96AA              ;	modifica_parametros_1er_DESPLZ_2
 333+ 96AA              ;
 334+ 96AA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 96AA              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 96AA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 96AA
 338+ 96AA 3A 55 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 96AD A7           	and a
 340+ 96AE 20 1F        	jr nz,1F
 341+ 96B0 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 96B2 32 55 89         ld (CTRL_DESPLZ),a
 343+ 96B5
 344+ 96B5 21 4E 89     	ld hl,Columns
 345+ 96B8 34           	inc (hl)
 346+ 96B9 3A 61 89     	ld a,(Cuad_objeto)
 347+ 96BC E6 01        	and 1
 348+ 96BE 28 0F        	jr z,1F
 349+ 96C0 2A 4F 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 96C3 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 96C4 22 4F 89     	ld (Posicion_actual),hl
 352+ 96C7 CD 35 9F     	call Genera_coordenadas
 353+ 96CA CD 2F 98     	call Inc_CTRL_DESPLZ
 354+ 96CD 18 03        	jr 2F
 355+ 96CF CD 2F 98     1 call Inc_CTRL_DESPLZ
 356+ 96D2 C9           2 ret
 357+ 96D3
 358+ 96D3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96D3              ;
 360+ 96D3              ;	24/7/22
 361+ 96D3              ;
 362+ 96D3              ;	Ciclo_completo.
 363+ 96D3              ;
 364+ 96D3              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96D3              ;
 366+ 96D3              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96D3              ; 	Decrementamos (Columns).
 368+ 96D3              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96D3              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96D3
 371+ 96D3
 372+ 96D3 3A 55 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96D6 FE FF        	cp $ff
 374+ 96D8 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96DA E6 F0        	and $f0
 376+ 96DC 20 28        	jr nz,3F
 377+ 96DE
 378+ 96DE              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96DE
 380+ 96DE 3A 55 89     	ld a,(CTRL_DESPLZ)
 381+ 96E1 47           	ld b,a
 382+ 96E2 3E F8        	ld a,$f8
 383+ 96E4 80           	add b
 384+ 96E5 32 55 89     	ld (CTRL_DESPLZ),a
 385+ 96E8 18 1C        	jr 3F
 386+ 96EA 21 4E 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96ED 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96EE AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96EF 32 55 89     	ld (CTRL_DESPLZ),a
 390+ 96F2 3A 61 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96F5 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96F7 20 0A        	jr nz,2F
 393+ 96F9 2A 4F 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96FC 23           	inc hl
 395+ 96FD 22 4F 89     	ld (Posicion_actual),hl
 396+ 9700 CD 35 9F     	call Genera_coordenadas
 397+ 9703
 398+ 9703              ; Inicia el puntero de Sprite.
 399+ 9703
 400+ 9703 CD 0D 8C     2 call Inicia_puntero_objeto_der
 401+ 9706 C9           3 ret
 402+ 9707
 403+ 9707              ; ******************************************************************************************************************************************************************************************
 404+ 9707              ;
 405+ 9707              ;	15/02/23
 406+ 9707              ;
 407+ 9707              ;	Mov_left.
 408+ 9707              ;
 409+ 9707              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9707              ;
 411+ 9707              Mov_left
 412+ 9707
 413+ 9707 21 6F 89     	ld hl,Ctrl_0
 414+ 970A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 970C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 970C              ; 																	; _ en el caso de que no lo haya.
 417+ 970C 3A 6F 89     	ld a,(Ctrl_0)
 418+ 970F CB 77        	bit 6,a
 419+ 9711 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9713
 421+ 9713 CD 29 98     	call Stop_Amadeus_left
 422+ 9716 C8           	ret z
 423+ 9717 20 4A        	jr nz,8F
 424+ 9719
 425+ 9719 3A 53 89     11 ld a,(Coordenada_X)
 426+ 971C A7           	and a
 427+ 971D 20 44        	jr nz,8F
 428+ 971F
 429+ 971F 3A 55 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9722 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9723 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9725
 433+ 9725              ; ---------- ---------- ----------
 434+ 9725
 435+ 9725 3A 76 89     	ld a,(Vel_left)
 436+ 9728 FE 02        	cp 2
 437+ 972A 28 0F        	jr z,1F
 438+ 972C 38 04        	jr c,6F
 439+ 972E FE 04        	cp 4
 440+ 9730 28 12        	jr z,7F
 441+ 9732
 442+ 9732              ; ---------- ---------- ----------
 443+ 9732
 444+ 9732 3A 55 89     6 ld a,(CTRL_DESPLZ)
 445+ 9735 FE F8        	cp $f8
 446+ 9737 20 2A        	jr nz,8F
 447+ 9739 18 10        	jr 4F
 448+ 973B 3A 55 89     1 ld a,(CTRL_DESPLZ)
 449+ 973E FE F9        	cp $f9
 450+ 9740 20 21        	jr nz,8F
 451+ 9742 18 07        	jr 4F
 452+ 9744 3A 55 89     7 ld a,(CTRL_DESPLZ)
 453+ 9747 FE FB        	cp $fb
 454+ 9749 20 18        	jr nz,8F
 455+ 974B
 456+ 974B              ; ---------- ---------- ----------
 457+ 974B
 458+ 974B              4
 459+ 974B CD 51 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 974E              ;	call Reinicio
 461+ 974E
 462+ 974E              ; ---------- ---------- ----------
 463+ 974E
 464+ 974E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9750 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9751
 467+ 9751              ;	ld hl,(Indice_Sprite_izq)
 468+ 9751              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9751
 470+ 9751 CD 6A 97     	call DESPLZ_IZQ
 471+ 9754 C1           	pop bc
 472+ 9755 10 F9        	djnz 5B
 473+ 9757 2A 4F 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 975A 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 975B 22 4F 89     	ld (Posicion_actual),hl
 476+ 975E CD 35 9F     	call Genera_coordenadas
 477+ 9761 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9763
 479+ 9763              ; ---------- ---------- ----------
 480+ 9763
 481+ 9763              ; Movemos, no hay recolocación.
 482+ 9763
 483+ 9763 2A 4F 89     8 ld hl,(Posicion_actual)
 484+ 9766 CD 6A 97     	call DESPLZ_IZQ
 485+ 9769 C9           2 ret
 486+ 976A
 487+ 976A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 976A              ;
 489+ 976A              ;	22/9/22
 490+ 976A
 491+ 976A              DESPLZ_IZQ
 492+ 976A
 493+ 976A CD 79 97     	call Desplaza_izquierda
 494+ 976D CD C5 97         call modifica_parametros_1er_DESPLZ
 495+ 9770 CD ED 97     	call Ciclo_completo_2
 496+ 9773 21 6F 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9776 CB BE        	res 7,(hl)
 498+ 9778 C9           	ret
 499+ 9779
 500+ 9779              Desplaza_izquierda
 501+ 9779
 502+ 9779 3A 76 89     	ld a,(Vel_left)
 503+ 977C 47           	ld b,a
 504+ 977D 2A 5D 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9780 23           1 inc hl
 506+ 9781 23           	inc hl
 507+ 9782 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9784 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9787 CD F8 8B     	call Extrae_address
 510+ 978A 22 51 89     	ld (Puntero_objeto),hl
 511+ 978D
 512+ 978D              ; Modifica (Puntero_DESPLZ_der).
 513+ 978D
 514+ 978D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 978D              ; Cuántos movimientos hemos hecho ??
 516+ 978D              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 978D
 518+ 978D 2A 59 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9790 EB           	ex de,hl
 520+ 9791 A7           	and a
 521+ 9792 ED 52        	sbc hl,de
 522+ 9794 CB 3D        	srl l
 523+ 9796 3E 08        6 ld a,8
 524+ 9798 95           	sub l
 525+ 9799 30 1E        	jr nc,3F
 526+ 979B
 527+ 979B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 979B              ; B="0".
 529+ 979B
 530+ 979B 04           4 inc b
 531+ 979C 3C           	inc a
 532+ 979D 20 FC        	jr nz,4B
 533+ 979F 78           	ld a,b
 534+ 97A0 08           	ex af,af
 535+ 97A1 2A 59 89     	ld hl,(Indice_Sprite_izq)
 536+ 97A4 23           5 inc hl
 537+ 97A5 23           	inc hl
 538+ 97A6 10 FC        	djnz 5B
 539+ 97A8 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 97AB CD F8 8B     	call Extrae_address
 541+ 97AE 22 51 89     	ld (Puntero_objeto),hl
 542+ 97B1
 543+ 97B1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 97B1              ; _(Posicion_actual).
 545+ 97B1
 546+ 97B1 21 4F 89     	ld hl,Posicion_actual
 547+ 97B4 35           	dec (hl)
 548+ 97B5 08           	ex af,af
 549+ 97B6 6F           	ld l,a
 550+ 97B7 18 DD        	jr 6B
 551+ 97B9
 552+ 97B9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 97B9
 554+ 97B9 47           3 ld b,a
 555+ 97BA 2A 57 89     	ld hl,(Indice_Sprite_der)
 556+ 97BD 23           2 inc hl
 557+ 97BE 23           	inc hl
 558+ 97BF 10 FC        	djnz 2B
 559+ 97C1 22 5B 89     	ld (Puntero_DESPLZ_der),hl
 560+ 97C4 C9           8 ret
 561+ 97C5
 562+ 97C5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 97C5              ;
 564+ 97C5              ;	modifica_parametros_1er_DESPLZ
 565+ 97C5              ;
 566+ 97C5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 97C5              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 97C5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 97C5
 570+ 97C5 3A 55 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 97C8 A7           	and a
 572+ 97C9 20 1E        	jr nz,1F
 573+ 97CB 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 97CC 32 55 89         ld (CTRL_DESPLZ),a
 575+ 97CF 21 4E 89     	ld hl,Columns
 576+ 97D2 34           	inc (hl)
 577+ 97D3 3A 61 89     	ld a,(Cuad_objeto)
 578+ 97D6 E6 01        	and 1
 579+ 97D8 20 0F        	jr nz,1F
 580+ 97DA 2A 4F 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97DD 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97DE 22 4F 89     	ld (Posicion_actual),hl
 583+ 97E1 CD 35 9F     	call Genera_coordenadas
 584+ 97E4 CD 40 98     	call Dec_CTRL_DESPLZ
 585+ 97E7 18 03        	jr 2F
 586+ 97E9 CD 40 98     1 call Dec_CTRL_DESPLZ
 587+ 97EC C9           2 ret
 588+ 97ED
 589+ 97ED              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97ED
 591+ 97ED 3A 55 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97F0 FE F7        	cp $f7
 593+ 97F2 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97F4 30 2C        	jr nc,3F
 595+ 97F6
 596+ 97F6              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97F6
 598+ 97F6 06 00        	ld b,0
 599+ 97F8 04           4 inc b
 600+ 97F9 3C           	inc a
 601+ 97FA FE F7        	cp $f7
 602+ 97FC 20 FA        	jr nz,4B
 603+ 97FE 3E FF        	ld a,$ff
 604+ 9800 90           	sub b
 605+ 9801 32 55 89     	ld (CTRL_DESPLZ),a
 606+ 9804 18 1C        	jr 3F
 607+ 9806
 608+ 9806              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9806
 610+ 9806 21 4E 89     1 ld hl,Columns
 611+ 9809 35           	dec (hl)
 612+ 980A AF           	xor a
 613+ 980B 32 55 89     	ld (CTRL_DESPLZ),a
 614+ 980E 3A 61 89     	ld a,(Cuad_objeto)
 615+ 9811 E6 01        	and 1
 616+ 9813 28 0A        	jr z,2F
 617+ 9815 2A 4F 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9818 2B           	dec hl
 619+ 9819 22 4F 89     	ld (Posicion_actual),hl
 620+ 981C CD 35 9F     	call Genera_coordenadas
 621+ 981F
 622+ 981F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 981F
 624+ 981F CD 20 8C     2 call Inicia_puntero_objeto_izq
 625+ 9822 C9           3 ret
 626+ 9823
 627+ 9823              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9823              ;
 629+ 9823              ;	19/10/22
 630+ 9823              ;
 631+ 9823              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9823              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9823
 634+ 9823 3A 53 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9826 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9828 C9           	ret
 637+ 9829
 638+ 9829              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9829              ;
 640+ 9829              ;	19/10/22
 641+ 9829              ;
 642+ 9829              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9829              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9829
 645+ 9829 3A 53 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 982C FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 982E C9           	ret
 648+ 982F
 649+ 982F              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 982F              ;
 651+ 982F              ;	24/7/22
 652+ 982F              ;
 653+ 982F              ;	Inc_CTRL_DESPLZ
 654+ 982F              ;
 655+ 982F              ;
 656+ 982F              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 982F
 658+ 982F 21 55 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9832 3A 77 89     	ld a,(Vel_right)
 660+ 9835 A7           	and a
 661+ 9836 28 06        	jr z,1F
 662+ 9838 47           	ld b,a
 663+ 9839 34           3 inc (hl)
 664+ 983A 10 FD        	djnz 3B
 665+ 983C 18 01        	jr 2F
 666+ 983E 34           1 inc (hl)
 667+ 983F C9           2 ret
 668+ 9840
 669+ 9840              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9840              ;
 671+ 9840              ;	5/2/23
 672+ 9840              ;
 673+ 9840              ;	Dec_CTRL_DESPLZ
 674+ 9840              ;
 675+ 9840              ;
 676+ 9840              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9840
 678+ 9840 21 55 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9843 3A 76 89     	ld a,(Vel_left)
 680+ 9846 A7           	and a
 681+ 9847 28 06        	jr z,1F
 682+ 9849 47           	ld b,a
 683+ 984A 35           3 dec (hl)
 684+ 984B 10 FD        	djnz 3B
 685+ 984D 18 01        	jr 2F
 686+ 984F 35           1 dec (hl)
 687+ 9850 C9           2 ret
 688+ 9851
 689+ 9851              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9851
 691+ 9851 2A 4F 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9854 01 1F 00     	ld bc,31
 693+ 9857 A7           	and a
 694+ 9858 ED 4A        	adc hl,bc
 695+ 985A 22 4F 89     	ld (Posicion_actual),hl
 696+ 985D 21 6F 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9860 CB C6        	set 0,(hl)
 698+ 9862 C9           	ret
 699+ 9863
 700+ 9863              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9863
 702+ 9863 2A 4F 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9866 01 1F 00     	ld bc,31
 704+ 9869 A7           	and a
 705+ 986A ED 42        	sbc hl,bc
 706+ 986C 22 4F 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 986F 21 6F 89     	ld hl,Ctrl_0
 708+ 9872 CB CE        	set 1,(hl)
 709+ 9874 C9           	ret
 710+ 9875
 711+ 9875              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9875
 713+ 9875 24           Reaparece_abajo inc h
 714+ 9876 01 E0 17     	ld bc,$17e0
 715+ 9879 A7           	and a
 716+ 987A ED 4A        	adc hl,bc
 717+ 987C 22 4F 89     	ld (Posicion_actual),hl
 718+ 987F 21 6F 89     	ld hl,Ctrl_0
 719+ 9882 CB D6        	set 2,(hl)
 720+ 9884 C9           	ret
 721+ 9885
 722+ 9885              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9885
 724+ 9885 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9888 A7           	and a
 726+ 9889 ED 42        	sbc hl,bc
 727+ 988B 22 4F 89     	ld (Posicion_actual),hl
 728+ 988E 21 6F 89     	ld hl,Ctrl_0
 729+ 9891 CB DE        	set 3,(hl)
 730+ 9893 C9           	ret
 731+ 9894
 732+ 9894              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9894              ;
 734+ 9894              ;	15/07/23
 735+ 9894
 736+ 9894              Reinicio
 737+ 9894
 738+ 9894              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9894
 740+ 9894 AF           	xor a
 741+ 9895 21 8A 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9898 CD B6 98     	call Limpia_contenido_hl
 743+ 989B
 744+ 989B 21 4F 89     	ld hl,Posicion_actual
 745+ 989E CD B6 98     	call Limpia_contenido_hl
 746+ 98A1
 747+ 98A1 CD 5F 8D     	call Inicializa_Puntero_indice_mov
 748+ 98A4 CD 82 99     	call Inicia_Puntero_mov
 749+ 98A7
 750+ 98A7 21 8C 89     	ld hl,Incrementa_puntero
 751+ 98AA 06 05        	ld b,5
 752+ 98AC 77           1 ld (hl),a
 753+ 98AD 23           	inc hl
 754+ 98AE 10 FC        	djnz 1B
 755+ 98B0
 756+ 98B0 21 74 89     	ld hl,Ctrl_2
 757+ 98B3 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 98B5
 759+ 98B5 C9           	ret
 760+ 98B6
 761+ 98B6 77           Limpia_contenido_hl	ld (hl),a
 762+ 98B7 23           	inc hl
 763+ 98B8 77           	ld (hl),a
 764+ 98B9 C9           	ret
 765+ 98BA
 766+ 98BA
# file closed: Direcciones.asm
1816  98BA              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 98BA              ; ----- ----- ----- ----- -----
   2+ 98BA              ;
   3+ 98BA              ;   28/12/23
   4+ 98BA
   5+ 98BA              Movimiento
   6+ 98BA
   7+ 98BA              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 98BA
   9+ 98BA 3A 74 89         ld a,(Ctrl_2)
  10+ 98BD CB 57            bit 2,a
  11+ 98BF 20 1B            jr nz, Desplazamiento_iniciado
  12+ 98C1
  13+ 98C1 2A 88 89         ld hl,(Puntero_mov)
  14+ 98C4 7E               ld a,(hl)
  15+ 98C5
  16+ 98C5              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 98C5
  18+ 98C5              Inicia_desplazamiento.
  19+ 98C5
  20+ 98C5              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 98C5
  22+ 98C5 CD B8 99         call Ajusta_velocidad_desplazamiento
  23+ 98C8
  24+ 98C8              ; Iniciamos (Repetimos_mov).
  25+ 98C8
  26+ 98C8 7E               ld a,(hl)
  27+ 98C9 E6 0F            and $0f
  28+ 98CB 32 8E 89         ld (Repetimos_desplazamiento),a
  29+ 98CE 32 8F 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98D1
  31+ 98D1              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98D1
  33+ 98D1 23               inc hl
  34+ 98D2 7E               ld a,(hl)
  35+ 98D3 32 91 89         ld (Cola_de_desplazamiento),a
  36+ 98D6 2B               dec hl
  37+ 98D7
  38+ 98D7 21 74 89         ld hl,Ctrl_2
  39+ 98DA CB D6            set 2,(hl)
  40+ 98DC
  41+ 98DC              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98DC              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98DC
  44+ 98DC              Desplazamiento_iniciado
  45+ 98DC
  46+ 98DC CD 8C 99         call Aplica_desplazamiento
  47+ 98DF
  48+ 98DF              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98DF
  50+ 98DF 3A B1 89         ld a,(Ctrl_3)
  51+ 98E2 CB 4F            bit 1,a
  52+ 98E4 C0               ret nz
  53+ 98E5
  54+ 98E5 21 8E 89     3 ld hl,Repetimos_desplazamiento
  55+ 98E8 35               dec (hl)
  56+ 98E9 C0               ret nz
  57+ 98EA
  58+ 98EA              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98EA              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98EA              ; Analiza (Cola_de_desplazamiento).
  61+ 98EA
  62+ 98EA 3A 91 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98ED A7               and a
  64+ 98EE CC E1 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98F1 28 30            jr z,Reinicia_el_movimiento
  66+ 98F3
  67+ 98F3 FE FF            cp $ff
  68+ 98F5 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98F7
  70+ 98F7 FE FE            cp $fe
  71+ 98F9 CC 66 99         call z,Fijamos_bucle
  72+ 98FC 28 25            jr z,Reinicia_el_movimiento
  73+ 98FE
  74+ 98FE FE FD            cp $fd
  75+ 9900 20 11            jr nz,1F
  76+ 9902
  77+ 9902              ; ---
  78+ 9902              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9902
  80+ 9902 3A 74 89         ld a,(Ctrl_2)
  81+ 9905 CB 5F            bit 3,a
  82+ 9907 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9909
  84+ 9909              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9909
  86+ 9909 21 74 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 990C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 990E
  89+ 990E CD 77 99         call Inicia_Repetimos_movimiento
  90+ 9911 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9913              ; ---
  92+ 9913
  93+ 9913 FE 01        1 cp 1
  94+ 9915 CA 50 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9918
  96+ 9918 3D               dec a
  97+ 9919 32 91 89         ld (Cola_de_desplazamiento),a
  98+ 991C
  99+ 991C 3A 8F 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 991F 32 8E 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9922              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9922 C9               ret
 103+ 9923
 104+ 9923              Reinicia_el_movimiento
 105+ 9923
 106+ 9923 3A 74 89         ld a,(Ctrl_2)
 107+ 9926 CB 5F            bit 3,a
 108+ 9928 28 1B            jr z,2F
 109+ 992A
 110+ 992A              ; (Cola_de_desplazamiento)="254".
 111+ 992A
 112+ 992A 21 90 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 992D 35               dec (hl)
 114+ 992E 20 15            jr nz,2F
 115+ 9930
 116+ 9930              ; Fin de las repeticiones del último movimiento.
 117+ 9930
 118+ 9930 21 74 89         ld hl,Ctrl_2
 119+ 9933 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9935
 121+ 9935 2A 88 89         ld hl,(Puntero_mov)
 122+ 9938 23               inc hl
 123+ 9939 23               inc hl
 124+ 993A 23               inc hl
 125+ 993B 22 88 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 993E              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 993E 7E               ld a,(hl)
 128+ 993F 32 91 89         ld (Cola_de_desplazamiento),a
 129+ 9942
 130+ 9942 C3 EA 98         jp Cola
 131+ 9945
 132+ 9945 CD 82 99     2 call Inicia_Puntero_mov
 133+ 9948
 134+ 9948 21 74 89         ld hl,Ctrl_2
 135+ 994B CB 96            res 2,(hl)
 136+ 994D
 137+ 994D C3 BA 98         jp Movimiento
 138+ 9950
 139+ 9950              Siguiente_desplazamiento
 140+ 9950
 141+ 9950              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9950              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9950
 144+ 9950 21 74 89         ld hl,Ctrl_2
 145+ 9953 CB 96            res 2,(hl)
 146+ 9955
 147+ 9955 2A 88 89         ld hl,(Puntero_mov)
 148+ 9958 23               inc hl
 149+ 9959 23               inc hl
 150+ 995A 22 88 89         ld (Puntero_mov),hl
 151+ 995D
 152+ 995D 7E               ld a,(hl)
 153+ 995E A7               and a
 154+ 995F CC E1 99         call z,Incrementa_Puntero_indice_mov
 155+ 9962 CA 23 99         jp z,Reinicia_el_movimiento
 156+ 9965
 157+ 9965 C9               ret
 158+ 9966
 159+ 9966              ; Subrutinas -----------------------------------------
 160+ 9966              ; ---------- --------- --------- ---------- ----------
 161+ 9966              ;
 162+ 9966              ;   24/07/23
 163+ 9966              ;
 164+ 9966              ;   Fijamos_bucle
 165+ 9966              ;
 166+ 9966              ;
 167+ 9966
 168+ 9966              Fijamos_bucle
 169+ 9966
 170+ 9966 3A 8C 89         ld a,(Incrementa_puntero)
 171+ 9969 3C               inc a
 172+ 996A 32 8D 89         ld (Incrementa_puntero_backup),a
 173+ 996D
 174+ 996D CD E1 99         call Incrementa_Puntero_indice_mov
 175+ 9970 2A 86 89         ld hl,(Puntero_indice_mov)
 176+ 9973 22 8A 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9976 C9               ret
 178+ 9977
 179+ 9977              ; ---------- --------- --------- ---------- ----------
 180+ 9977              ;
 181+ 9977              ;   07/7/23
 182+ 9977              ;
 183+ 9977              ;   Inicia_Repetimos_movimiento
 184+ 9977              ;
 185+ 9977              ;
 186+ 9977
 187+ 9977              Inicia_Repetimos_movimiento
 188+ 9977
 189+ 9977              ; Iniciamos (Repetimos_movimiento).
 190+ 9977
 191+ 9977 DD 2A 88 89      ld ix,(Puntero_mov)
 192+ 997B DD 7E 02         ld a,(ix+2)
 193+ 997E 32 90 89         ld (Repetimos_movimiento),a
 194+ 9981
 195+ 9981 C9               ret
 196+ 9982
 197+ 9982              ; ---------- --------- --------- ---------- ----------
 198+ 9982              ;
 199+ 9982              ;   26/6/23
 200+ 9982              ;
 201+ 9982              ;   Inicia_Puntero_mov
 202+ 9982              ;
 203+ 9982              ;
 204+ 9982
 205+ 9982 2A 86 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9985 CD F8 8B         call Extrae_address
 207+ 9988 22 88 89         ld (Puntero_mov),hl
 208+ 998B C9               ret
 209+ 998C
 210+ 998C              ; ---------- --------- --------- ---------- ----------
 211+ 998C              ;
 212+ 998C              ;   27/06/23
 213+ 998C              ;
 214+ 998C              ;   Aplica_movimiento.
 215+ 998C
 216+ 998C              Aplica_desplazamiento
 217+ 998C
 218+ 998C              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 998C
 220+ 998C 2A 88 89         ld hl, (Puntero_mov)
 221+ 998F
 222+ 998F 7E               ld a,(hl)
 223+ 9990 E6 F0            and $f0
 224+ 9992 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9993
 226+ 9993 CB 7E            bit 7,(hl)
 227+ 9995 28 03            jr z,1F
 228+ 9997 CD A1 95         call Mov_up
 229+ 999A 2A 88 89     1 ld hl, (Puntero_mov)
 230+ 999D CB 76            bit 6,(hl)
 231+ 999F 28 03            jr z,2F
 232+ 99A1 CD 68 95         call Mov_down
 233+ 99A4
 234+ 99A4              ; Se ha aplicado reinicio ???
 235+ 99A4              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 99A4
 237+ 99A4              ;    ld a,(Ctrl_3)
 238+ 99A4              ;    bit 1,a
 239+ 99A4              ;    ret nz
 240+ 99A4
 241+ 99A4 2A 88 89     2 ld hl, (Puntero_mov)
 242+ 99A7 CB 6E            bit 5,(hl)
 243+ 99A9 28 03            jr z,3F
 244+ 99AB CD 07 97         call Mov_left
 245+ 99AE 2A 88 89     3 ld hl, (Puntero_mov)
 246+ 99B1 CB 66            bit 4,(hl)
 247+ 99B3 C8               ret z
 248+ 99B4 CD E4 95         call Mov_right
 249+ 99B7 C9               ret
 250+ 99B8
 251+ 99B8              ; ---------- --------- --------- ---------- ----------
 252+ 99B8              ;
 253+ 99B8              ;   26/06/23
 254+ 99B8              ;
 255+ 99B8              ;   Ajusta_velocidad_desplazamiento.
 256+ 99B8
 257+ 99B8              Ajusta_velocidad_desplazamiento
 258+ 99B8
 259+ 99B8              ; 1er byte de la cadena de movimiento.
 260+ 99B8              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 99B8
 262+ 99B8 CD D6 99         call Extrae_nibble_alto
 263+ 99BB
 264+ 99BB 32 78 89         ld (Vel_up),a
 265+ 99BE 79               ld a,c
 266+ 99BF E6 0F            and $0f
 267+ 99C1 32 79 89         ld (Vel_down),a
 268+ 99C4
 269+ 99C4              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 99C4              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 99C4
 272+ 99C4 23               inc hl
 273+ 99C5 CD D6 99         call Extrae_nibble_alto
 274+ 99C8
 275+ 99C8 32 76 89         ld (Vel_left),a
 276+ 99CB 79               ld a,c
 277+ 99CC E6 0F            and $0f
 278+ 99CE 32 77 89         ld (Vel_right),a
 279+ 99D1
 280+ 99D1              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99D1
 282+ 99D1 23               inc hl
 283+ 99D2 22 88 89         ld (Puntero_mov),hl
 284+ 99D5 C9               ret
 285+ 99D6
 286+ 99D6 06 04        Extrae_nibble_alto ld b,4
 287+ 99D8 7E               ld a,(hl)
 288+ 99D9 4F               ld c,a
 289+ 99DA E6 F0            and $f0
 290+ 99DC CB 3F        1 srl a
 291+ 99DE 10 FC            djnz 1B
 292+ 99E0 C9               ret
 293+ 99E1
 294+ 99E1              ; ---------- --------- --------- ---------- ----------
 295+ 99E1              ;
 296+ 99E1              ;   5/7/23
 297+ 99E1              ;
 298+ 99E1              ;   Incrementa_Puntero_indice_mov
 299+ 99E1
 300+ 99E1              Incrementa_Puntero_indice_mov
 301+ 99E1
 302+ 99E1 21 8C 89         ld hl,Incrementa_puntero
 303+ 99E4 34               inc (hl)
 304+ 99E5
 305+ 99E5 2A 86 89         ld hl,(Puntero_indice_mov)
 306+ 99E8 01 02 00         ld bc,2
 307+ 99EB A7               and a
 308+ 99EC 09               add hl,bc
 309+ 99ED 22 86 89         ld (Puntero_indice_mov),hl
 310+ 99F0
 311+ 99F0 7E               ld a,(hl)
 312+ 99F1 A7               and a
 313+ 99F2
 314+ 99F2              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99F2
 316+ 99F2              ;    jr z,$
 317+ 99F2
 318+ 99F2              ;! Reinicia el Patrón de movimiento.
 319+ 99F2
 320+ 99F2 CC F7 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99F5
 322+ 99F5 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99F6
 324+ 99F6 C9               ret
 325+ 99F7
 326+ 99F7              ; ---------- --------- --------- ---------- ----------
 327+ 99F7              ;
 328+ 99F7              ;   15/01/24
 329+ 99F7              ;
 330+ 99F7              ;   Inicializa_Puntero_indice_mov
 331+ 99F7
 332+ 99F7              Inicializa_Puntero_indice_mov_2
 333+ 99F7
 334+ 99F7              ; Existe etiqueta de bucle principal???
 335+ 99F7
 336+ 99F7 2A 8A 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99FA 24               inc h
 338+ 99FB 25               dec h
 339+ 99FC 28 05            jr z,2F
 340+ 99FE
 341+ 99FE 22 86 89         ld (Puntero_indice_mov),hl
 342+ 9A01 18 14            jr 3F
 343+ 9A03
 344+ 9A03              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9A03
 346+ 9A03 3A 8C 89     2 ld a,(Incrementa_puntero)
 347+ 9A06 47               ld b,a
 348+ 9A07
 349+ 9A07 2A 86 89         ld hl,(Puntero_indice_mov)
 350+ 9A0A 2B           1 dec hl
 351+ 9A0B 2B               dec hl
 352+ 9A0C 10 FC            djnz 1B
 353+ 9A0E 22 86 89         ld (Puntero_indice_mov),hl
 354+ 9A11
 355+ 9A11 AF               xor a
 356+ 9A12 32 8C 89         ld (Incrementa_puntero),a
 357+ 9A15 18 06            jr 4F
 358+ 9A17
 359+ 9A17 3A 8D 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9A1A 32 8C 89         ld (Incrementa_puntero),a
 361+ 9A1D C9           4 ret
 362+ 9A1E
 363+ 9A1E              ; ----------------------------------------------------------------------
 364+ 9A1E              ;
 365+ 9A1E              ;   30/01/24
 366+ 9A1E              ;
 367+ 9A1E              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9A1E
 369+ 9A1E 3A 4C 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9A21 CD B0 8E         call Calcula_salto_en_BC
 371+ 9A24 21 7A 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A27 A7               and a
 373+ 9A28 ED 4A            adc hl,bc
 374+ 9A2A C9               ret
 375+ 9A2B
 376+ 9A2B              ; ----------------------------------------------------------------------
 377+ 9A2B              ;
 378+ 9A2B              ;   30/01/24
 379+ 9A2B              ;
 380+ 9A2B              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A2B              ;
 382+ 9A2B              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A2B
 384+ 9A2B 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A2C 23               inc hl
 386+ 9A2D 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A2E 69               ld l,c
 388+ 9A2F 60               ld h,b
 389+ 9A30 22 6D 89         ld (Contador_de_mov_masticados),hl
 390+ 9A33 C9               ret
 391+ 9A34
# file closed: Movimiento.asm
1817  9A34              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9A34              ; ******************************************************************************************************************************************************************************************
   2+ 9A34              ;
   3+ 9A34              ;   21/07/23
   4+ 9A34              ;
   5+ 9A34              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9A34              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9A34              ;
   8+ 9A34              ;
   9+ 9A34              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9A34              ;
  11+ 9A34              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9A34              ;               _ hacen las entidades hacia abajo.
  13+ 9A34              ;
  14+ 9A34              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9A34              ;
  16+ 9A34              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9A34              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9A34              ;
  19+ 9A34              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9A34              ;           _ la bala.
  21+ 9A34              ;
  22+ 9A34              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9A34              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9A34              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9A34              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9A34              ;           _ en el momento de generarse la bala)).
  27+ 9A34
  28+ 9A34              Genera_disparo
  29+ 9A34
  30+ 9A34              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9A34              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9A34              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9A34              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9A34              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9A34              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9A34              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9A34
  38+ 9A34              ; Exclusiones:
  39+ 9A34
  40+ 9A34 3A 79 89         ld a,(Vel_down)
  41+ 9A37 47               ld b,a
  42+ 9A38 3A C3 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9A3B B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9A3C D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9A3D 3A 70 89         ld a,(Columnas)
  46+ 9A40 47               ld b,a
  47+ 9A41 3A 4E 89         ld a,(Columns)
  48+ 9A44 B8               cp b
  49+ 9A45 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9A46
  51+ 9A46              ; ----- ----- -----
  52+ 9A46
  53+ 9A46 3A 6F 89         ld a,(Ctrl_0)
  54+ 9A49 CB 77            bit 6,a
  55+ 9A4B 20 06            jr nz,14F
  56+ 9A4D
  57+ 9A4D 3A 54 89         ld a,(Coordenada_y)
  58+ 9A50 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9A52 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9A53
  61+ 9A53 21 31 81     14 ld hl,Indice_disparo
  62+ 9A56 3A 55 89         ld a,(CTRL_DESPLZ)
  63+ 9A59 4F               ld c,a
  64+ 9A5A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9A5C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9A5C              ;                                            ""        ""       "f9", B="1"
  67+ 9A5C              ;                                            ""        ""       "fb", B="2"
  68+ 9A5C              ;                                            ""        ""       "fb", B="3"
  69+ 9A5C A7               and a
  70+ 9A5D 28 10            jr z,1F
  71+ 9A5F E6 01            and 1
  72+ 9A61 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9A62
  74+ 9A62 79               ld a,c
  75+ 9A63 16 F9            ld d,$f9
  76+ 9A65 23           2 inc hl
  77+ 9A66 23               inc hl
  78+ 9A67 04               inc b
  79+ 9A68 BA               cp d
  80+ 9A69 28 04            jr z,1F
  81+ 9A6B 14               inc d
  82+ 9A6C 14               inc d
  83+ 9A6D 18 F6            jr 2B
  84+ 9A6F
  85+ 9A6F CD F8 8B     1 call Extrae_address
  86+ 9A72 E5               push hl
  87+ 9A73 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9A75 DD 21 13 95  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9A79
  90+ 9A79              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9A79              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9A79
  93+ 9A79 3A 6F 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9A7C CB 77            bit 6,a
  95+ 9A7E 20 04            jr nz,19F
  96+ 9A80
  97+ 9A80 AF               xor a
  98+ 9A81 32 CC 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9A84
 100+ 9A84 3A 61 89     19 ld a,(Cuad_objeto)
 101+ 9A87 FE 02            cp 2
 102+ 9A89 38 66            jr c,3F
 103+ 9A8B 28 64            jr z,3F
 104+ 9A8D
 105+ 9A8D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9A8D
 107+ 9A8D E6 01            and 1
 108+ 9A8F 28 30            jr z,4F
 109+ 9A91
 110+ 9A91              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9A91              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9A91              ;
 113+ 9A91              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9A91              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9A91              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9A91
 117+ 9A91 2A 4F 89     	ld hl,(Posicion_actual)
 118+ 9A94
 119+ 9A94              ;   Amadeus o entidad ???.
 120+ 9A94
 121+ 9A94 3A 6F 89         ld a,(Ctrl_0)
 122+ 9A97 CB 77            bit 6,a
 123+ 9A99 28 0A            jr z,8F
 124+ 9A9B
 125+ 9A9B              ; 	Dispara Amadeus.
 126+ 9A9B
 127+ 9A9B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9A9D CD 3C 92         call PreviousScan
 129+ 9AA0 CD 3C 92         call PreviousScan
 130+ 9AA3
 131+ 9AA3              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9AA3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9AA3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9AA3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9AA3
 136+ 9AA3 18 11            jr 10F
 137+ 9AA5
 138+ 9AA5              ; 	Dispara Entidad.
 139+ 9AA5
 140+ 9AA5 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9AA8              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9AA8
 143+ 9AA8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9AA8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9AA8
 146+ 9AA8 C5               push bc
 147+ 9AA9 06 10            ld b,16
 148+ 9AAB CD 2D 92     9 call NextScan
 149+ 9AAE 10 FB            djnz 9B
 150+ 9AB0 C1               pop bc
 151+ 9AB1 CD 1B 9B         call Ajusta_disparo_parte_izquierda
 152+ 9AB4 18 06            jr 17F
 153+ 9AB6
 154+ 9AB6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9AB6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9AB6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9AB6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9AB6
 159+ 9AB6 CD 1B 9B     10 call Ajusta_disparo_parte_izquierda
 160+ 9AB9 CD 90 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9ABC              ;                                                      ; _al generar el disparo.
 162+ 9ABC
 163+ 9ABC              ; 	LLegados a este punto tendremos:
 164+ 9ABC              ;
 165+ 9ABC              ;       Puntero_objeto_disparo en IY.
 166+ 9ABC              ;       Rutinas_de_impresion en IX.
 167+ 9ABC              ;       Puntero_de_impresion en HL.
 168+ 9ABC              ;       Impacto/Dirección en BC.
 169+ 9ABC
 170+ 9ABC CD 23 9B     17 call Almacena_disparo
 171+ 9ABF 18 52            jr 6F                                             ; RET.
 172+ 9AC1
 173+ 9AC1              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9AC1              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9AC1              ;
 176+ 9AC1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9AC1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9AC1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9AC1
 180+ 9AC1 2A 4F 89     4 ld hl,(Posicion_actual)
 181+ 9AC4
 182+ 9AC4              ;   Amadeus o entidad ???.
 183+ 9AC4
 184+ 9AC4 3A 6F 89         ld a,(Ctrl_0)
 185+ 9AC7 CB 77            bit 6,a
 186+ 9AC9 28 0A            jr z,11F
 187+ 9ACB
 188+ 9ACB              ; 	Dispara Amadeus.
 189+ 9ACB
 190+ 9ACB 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9ACD CD 3C 92         call PreviousScan
 192+ 9AD0 CD 3C 92         call PreviousScan
 193+ 9AD3
 194+ 9AD3              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9AD3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9AD3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9AD3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9AD3
 199+ 9AD3 18 11            jr 13F
 200+ 9AD5
 201+ 9AD5              ; 	Dispara Entidad.
 202+ 9AD5
 203+ 9AD5 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9AD8              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9AD8
 206+ 9AD8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9AD8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9AD8
 209+ 9AD8 C5               push bc
 210+ 9AD9 06 10            ld b,16
 211+ 9ADB CD 2D 92     12 call NextScan
 212+ 9ADE 10 FB            djnz 12B
 213+ 9AE0 C1               pop bc
 214+ 9AE1
 215+ 9AE1 CD 14 9B         call Ajusta_disparo_parte_derecha
 216+ 9AE4 18 06            jr 18F
 217+ 9AE6
 218+ 9AE6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9AE6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9AE6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9AE6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9AE6
 223+ 9AE6 CD 14 9B     13 call Ajusta_disparo_parte_derecha
 224+ 9AE9 CD 90 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9AEC              ;                                                       ; _al generar el disparo.
 226+ 9AEC
 227+ 9AEC              ; LLegados a este punto tendremos:
 228+ 9AEC              ;
 229+ 9AEC              ;       Puntero_objeto_disparo en IY.
 230+ 9AEC              ;       Rutinas_de_impresion en IX.
 231+ 9AEC              ;       Puntero_de_impresion en HL.
 232+ 9AEC              ;       Impacto/Dirección en BC.
 233+ 9AEC
 234+ 9AEC CD 23 9B     18 call Almacena_disparo
 235+ 9AEF 18 22            jr 6F                                               ; RET.
 236+ 9AF1
 237+ 9AF1              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9AF1
 239+ 9AF1 28 11        3 jr z,5F
 240+ 9AF3
 241+ 9AF3              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9AF3              ;
 243+ 9AF3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9AF3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9AF3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9AF3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9AF3
 248+ 9AF3              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9AF3              ;	   ""        ""       "f9", B="1"
 250+ 9AF3              ;	   ""        ""       "fb", B="2"
 251+ 9AF3              ; 	   ""        ""       "fb", B="3"
 252+ 9AF3
 253+ 9AF3 2A 4F 89     	ld hl,(Posicion_actual)
 254+ 9AF6 CD 2D 92     	call NextScan
 255+ 9AF9
 256+ 9AF9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9AF9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9AF9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9AF9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9AF9
 261+ 9AF9 CD 1B 9B         call Ajusta_disparo_parte_izquierda
 262+ 9AFC
 263+ 9AFC              ; 	No se produce impacto. B="$80"
 264+ 9AFC              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9AFC
 266+ 9AFC 01 80 80         ld bc,$8080
 267+ 9AFF
 268+ 9AFF              ; 	LLegados a este punto tendremos:
 269+ 9AFF              ;
 270+ 9AFF              ;       Puntero_objeto_disparo en IY.
 271+ 9AFF              ;       Rutinas_de_impresion en IX.
 272+ 9AFF              ;       Puntero_de_impresion en HL.
 273+ 9AFF              ;       Impacto/Dirección en BC.
 274+ 9AFF
 275+ 9AFF CD 23 9B         call Almacena_disparo
 276+ 9B02 18 0F            jr 6F                                           ; RET.
 277+ 9B04
 278+ 9B04              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9B04              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9B04              ;
 281+ 9B04              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9B04              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9B04              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9B04              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9B04
 286+ 9B04 2A 4F 89     5 ld hl,(Posicion_actual)
 287+ 9B07 CD 2D 92     	call NextScan
 288+ 9B0A
 289+ 9B0A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9B0A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9B0A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9B0A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9B0A
 294+ 9B0A CD 14 9B         call Ajusta_disparo_parte_derecha
 295+ 9B0D
 296+ 9B0D              ; 	No se produce impacto. B="$80"
 297+ 9B0D              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9B0D
 299+ 9B0D 01 80 80     15 ld bc,$8080
 300+ 9B10
 301+ 9B10              ; 	LLegados a este punto tendremos:
 302+ 9B10              ;
 303+ 9B10              ;       Puntero_objeto_disparo en IY.
 304+ 9B10              ;       Rutinas_de_impresion en IX.
 305+ 9B10              ;       Puntero_de_impresion en HL.
 306+ 9B10              ;       Impacto/Dirección en BC.
 307+ 9B10
 308+ 9B10 CD 23 9B         call Almacena_disparo
 309+ 9B13
 310+ 9B13 C9           6 ret
 311+ 9B14
 312+ 9B14              ; ----------------------------------------------------------------
 313+ 9B14              ;
 314+ 9B14              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9B14              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9B14              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9B14
 318+ 9B14 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9B15 FE 02            cp 2
 320+ 9B17 38 01            jr c,1F
 321+ 9B19 23               inc hl
 322+ 9B1A C9           1 ret
 323+ 9B1B
 324+ 9B1B 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9B1C FE 01        	cp 1
 326+ 9B1E 20 01        	jr nz,1F
 327+ 9B20 2B           	dec hl
 328+ 9B21 2B           1 dec hl
 329+ 9B22 C9               ret
 330+ 9B23
 331+ 9B23              ; ----------------------------------------------------------------
 332+ 9B23              ;
 333+ 9B23              ;   25/02/23
 334+ 9B23              ;
 335+ 9B23              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9B23              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9B23              ;
 338+ 9B23              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9B23              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9B23
 341+ 9B23              Almacena_disparo
 342+ 9B23
 343+ 9B23 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9B24 F1               pop af
 345+ 9B25 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9B26
 347+ 9B26 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9B27 E6 01            and 1
 349+ 9B29 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9B2B              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9B2B              ; 	Dispara AMADEUS.
 352+ 9B2B
 353+ 9B2B              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9B2B              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9B2B              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9B2B              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9B2B
 358+ 9B2B C5               push bc
 359+ 9B2C 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9B2F 2A B6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9B32 A7               and a
 362+ 9B33 ED 42            sbc hl,bc
 363+ 9B35 CC 7D 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9B38 C1               pop bc
 365+ 9B39 28 54            jr z,4F
 366+ 9B3B
 367+ 9B3B 2A B6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9B3E 23               inc hl
 369+ 9B3F 23               inc hl
 370+ 9B40 22 B6 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9B43              ;                                                   ; _ Disparo_(+1).
 372+ 9B43 18 18            jr 2F
 373+ 9B45
 374+ 9B45              ; Dispara una entidad.
 375+ 9B45
 376+ 9B45 C5           1 push bc
 377+ 9B46 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9B49 2A B4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9B4C A7               and a
 380+ 9B4D ED 42            sbc hl,bc
 381+ 9B4F CC 76 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9B52 C1               pop bc
 383+ 9B53 28 3A            jr z,4F
 384+ 9B55
 385+ 9B55 2A B4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9B58 23               inc hl
 387+ 9B59 23               inc hl
 388+ 9B5A 22 B4 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9B5D              ;                                                   ; _ Disparo_(+1).
 390+ 9B5D CD F8 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9B60              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9B60              ;
 393+ 9B60              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9B60              ;                                                     Rutinas_de_impresion en IX.
 395+ 9B60              ;                                                     Puntero_de_impresion en HL.
 396+ 9B60              ;                                                     Impacto/Dirección en BC.
 397+ 9B60
 398+ 9B60 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9B61 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9B62 23               inc hl                                          ; _ al siguiente.
 401+ 9B63 A7               and a
 402+ 9B64 20 C0            jr nz,3B
 403+ 9B66
 404+ 9B66 08               ex af,af
 405+ 9B67 ED 73 A3 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9B6B F9               ld sp,hl
 407+ 9B6C
 408+ 9B6C DD E5            push ix                                         ; Rutina de impresión.
 409+ 9B6E F5               push af                                         ; Puntero de impresión.
 410+ 9B6F FD E5            push iy                                         ; Puntero objeto.
 411+ 9B71 C5               push bc                                         ; Control.
 412+ 9B72
 413+ 9B72 ED 7B A3 89      ld sp,(Stack)
 414+ 9B76
 415+ 9B76              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9B76
 417+ 9B76 21 92 89     	ld hl,Ctrl_1
 418+ 9B79 CB C6        	set 0,(hl)
 419+ 9B7B
 420+ 9B7B DD E5        	push ix
 421+ 9B7D E1               pop hl
 422+ 9B7E F5               push af
 423+ 9B7F DD E1            pop ix
 424+ 9B81
 425+ 9B81 CD BF 80     	call Guarda_foto_registros
 426+ 9B84
 427+ 9B84 21 92 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9B87 CB 86        	res 0,(hl)
 429+ 9B89
 430+ 9B89              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9B89              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9B89
 433+ 9B89 CD 7D 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9B8C CD 76 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9B8F
 436+ 9B8F C9           4 ret
 437+ 9B90
 438+ 9B90              ; ----------------------------------------------------------------
 439+ 9B90              ;
 440+ 9B90              ;   4/3/23
 441+ 9B90              ;
 442+ 9B90              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9B90              ;   _ al generarse el disparo.
 444+ 9B90              ;
 445+ 9B90              ;       "$80" ..... No se produce colisión.
 446+ 9B90              ;       "$81" ..... Se produce colisión.
 447+ 9B90              ;
 448+ 9B90              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9B90              ;         _ que forman el disparo.
 450+ 9B90
 451+ 9B90
 452+ 9B90              Comprueba_Colision
 453+ 9B90
 454+ 9B90              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9B90
 456+ 9B90 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9B92 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9B93
 459+ 9B93 CD C9 9B         call Modifica_H_Velocidad_disparo
 460+ 9B96
 461+ 9B96 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9B97 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9B99 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9B9B
 465+ 9B9B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9B9D CD B9 9B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9BA0
 468+ 9BA0 7B               ld a,e
 469+ 9BA1 E6 01            and 1
 470+ 9BA3 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9BA5              ;                                                  ; _ para activar IMPACTO.
 472+ 9BA5 E1               pop hl
 473+ 9BA6 E5               push hl
 474+ 9BA7 CD 2D 92         call NextScan
 475+ 9BAA
 476+ 9BAA 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9BAB FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9BAD 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9BAF              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9BAF 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9BB1 CD B9 9B         call Bucle_2
 482+ 9BB4
 483+ 9BB4 43           1 ld b,e
 484+ 9BB5 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9BB6 FD E1            pop iy
 486+ 9BB8 C9               ret
 487+ 9BB9
 488+ 9BB9              ; ---------- ----------
 489+ 9BB9
 490+ 9BB9 06 02        Bucle_2 ld b,2
 491+ 9BBB FD 7E 00     2 ld a,(iy)
 492+ 9BBE A6               and (hl)
 493+ 9BBF 28 02            jr z,1F
 494+ 9BC1 1E 81            ld e,$81
 495+ 9BC3 23           1 inc hl
 496+ 9BC4 FD 23            inc iy
 497+ 9BC6 10 F3            djnz 2B
 498+ 9BC8 C9               ret
 499+ 9BC9
 500+ 9BC9              ; ---------- ----------
 501+ 9BC9              ;
 502+ 9BC9              ;   21/7/23
 503+ 9BC9
 504+ 9BC9              Modifica_H_Velocidad_disparo
 505+ 9BC9
 506+ 9BC9 3A C3 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9BCC FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9BCE D0               ret nc                                         ; _ incrementamos H.
 509+ 9BCF 24               inc h
 510+ 9BD0
 511+ 9BD0 C9               ret
 512+ 9BD1
 513+ 9BD1              ; -------------------------------------------------------------------------------------------------------------
 514+ 9BD1              ;
 515+ 9BD1              ;   04/12/23
 516+ 9BD1              ;
 517+ 9BD1              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9BD1              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9BD1              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9BD1              ;
 521+ 9BD1              ;   MODIFICA: HL,DE,B y A.
 522+ 9BD1
 523+ 9BD1              Genera_coordenadas_X
 524+ 9BD1
 525+ 9BD1              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9BD1              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9BD1
 528+ 9BD1              ;   Limpiamos almacenes.
 529+ 9BD1
 530+ 9BD1 CD 02 9C         call Limpia_Coordenadas_X
 531+ 9BD4
 532+ 9BD4              ;   Almacenamos coordenadas X.
 533+ 9BD4
 534+ 9BD4              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9BD4
 536+ 9BD4 2A 69 89         ld hl,(Puntero_de_impresion)
 537+ 9BD7 11 C0 89         ld de,Coordenadas_X_Entidad
 538+ 9BDA 06 02            ld b,2
 539+ 9BDC
 540+ 9BDC 3A 55 89         ld a,(CTRL_DESPLZ)
 541+ 9BDF A7               and a
 542+ 9BE0 28 01            jr z,1F
 543+ 9BE2 04               inc b
 544+ 9BE3
 545+ 9BE3 CD F9 9B     1 call Guarda_coordenadas_X
 546+ 9BE6
 547+ 9BE6              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9BE6
 549+ 9BE6 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 9BE9 11 BD 89         ld de,Coordenadas_X_Amadeus
 551+ 9BEC 06 02            ld b,2
 552+ 9BEE
 553+ 9BEE 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 9BF1 A7               and a
 555+ 9BF2 28 01            jr z,2F
 556+ 9BF4 04               inc b
 557+ 9BF5
 558+ 9BF5 CD F9 9B     2 call Guarda_coordenadas_X
 559+ 9BF8
 560+ 9BF8              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9BF8
 562+ 9BF8 C9               ret
 563+ 9BF9
 564+ 9BF9              ; ----- ----- ----- ----- -----
 565+ 9BF9
 566+ 9BF9 7D           Guarda_coordenadas_X  ld a,l
 567+ 9BFA E6 1F            and $1f
 568+ 9BFC 12           1 ld (de),a
 569+ 9BFD 3C               inc a
 570+ 9BFE 13               inc de
 571+ 9BFF 10 FB            djnz 1B
 572+ 9C01 C9               ret
 573+ 9C02
 574+ 9C02 AF           Limpia_Coordenadas_X xor a
 575+ 9C03 06 06            ld b,6
 576+ 9C05 21 BD 89         ld hl,Coordenadas_X_Amadeus
 577+ 9C08 77           1 ld (hl),a
 578+ 9C09 23               inc hl
 579+ 9C0A 10 FC            djnz 1B
 580+ 9C0C C9               ret
 581+ 9C0D
 582+ 9C0D              ; ----- ----- ----- ----- -----
 583+ 9C0D
 584+ 9C0D              Compara_coordenadas_X
 585+ 9C0D
 586+ 9C0D 06 03            ld b,3
 587+ 9C0F 11 C2 89         ld de,Coordenadas_X_Entidad+2
 588+ 9C12
 589+ 9C12 1A               ld a,(de)
 590+ 9C13 A7               and a
 591+ 9C14 20 01            jr nz,2F
 592+ 9C16 05               dec b
 593+ 9C17
 594+ 9C17 1B           2 dec de
 595+ 9C18 1B               dec de
 596+ 9C19 21 BD 89         ld hl,Coordenadas_X_Amadeus
 597+ 9C1C
 598+ 9C1C D5           1 push de
 599+ 9C1D E5               push hl
 600+ 9C1E C5               push bc
 601+ 9C1F
 602+ 9C1F CD 29 9C         call Comparando
 603+ 9C22
 604+ 9C22 C1               pop bc
 605+ 9C23 E1               pop hl
 606+ 9C24 D1               pop de
 607+ 9C25
 608+ 9C25 13               inc de
 609+ 9C26 10 F4            djnz 1B
 610+ 9C28
 611+ 9C28 C9               ret
 612+ 9C29
 613+ 9C29              ; ----- ----- ----- ----- -----
 614+ 9C29              ;
 615+ 9C29              ;   4/12/23
 616+ 9C29              ;
 617+ 9C29              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9C29
 619+ 9C29 06 03        Comparando ld b,3
 620+ 9C2B 1A               ld a,(de)
 621+ 9C2C 4E           2 ld c,(hl)
 622+ 9C2D B9               cp c
 623+ 9C2E 28 04            jr z,1F
 624+ 9C30 23               inc hl
 625+ 9C31 10 F9            djnz 2B
 626+ 9C33 C9               ret
 627+ 9C34
 628+ 9C34 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9C36 32 62 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9C39 21 B8 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9C3C CB D6            set 2,(hl)
 632+ 9C3E C9               ret
 633+ 9C3F
 634+ 9C3F              ; -----------------------------------------------------------------------
 635+ 9C3F              ;
 636+ 9C3F              ;   7/12/23
 637+ 9C3F              ;
 638+ 9C3F
 639+ 9C3F              Detecta_colision_nave_entidad
 640+ 9C3F
 641+ 9C3F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9C3F
 643+ 9C3F FD 2A 51 89      ld iy,(Puntero_objeto)
 644+ 9C43 2A 69 89         ld hl,(Puntero_de_impresion)
 645+ 9C46
 646+ 9C46 E5               push hl
 647+ 9C47
 648+ 9C47              ; ----- ----- -----
 649+ 9C47 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9C49 06 0A            ld b,10
 651+ 9C4B CD 7B 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9C4E 7B               ld a,e
 653+ 9C4F FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9C51 38 0E            jr c,3F
 655+ 9C53
 656+ 9C53              ; LLegados a este punto:
 657+ 9C53              ;
 658+ 9C53              ;   HAY COLISIÓN !!!!!.
 659+ 9C53              ;
 660+ 9C53              ;   .db (Impacto) de Amadeus a "1".
 661+ 9C53              ;   SET el bit3 de (Impacto2).
 662+ 9C53              ;
 663+ 9C53              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9C53
 665+ 9C53 21 62 89         ld hl,Impacto
 666+ 9C56 36 01            ld (hl),1
 667+ 9C58 21 B8 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9C5B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9C5D CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9C5F
 671+ 9C5F 18 18            jr 1F
 672+ 9C61
 673+ 9C61              ; -----
 674+ 9C61
 675+ 9C61 E1           3 pop hl
 676+ 9C62 CD 2D 92         call NextScan
 677+ 9C65 E5               push hl
 678+ 9C66 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9C67 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9C69 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9C6B 30 0C            jr nc,1F
 682+ 9C6D              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9C6D 10 DC            djnz 2B
 684+ 9C6F
 685+ 9C6F              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9C6F
 687+ 9C6F              ; LLegados a este punto:
 688+ 9C6F              ;
 689+ 9C6F              ;   NO HAY COLISIÓN !!!!!.
 690+ 9C6F              ;
 691+ 9C6F              ;   .db (Impacto) de Amadeus a "0".
 692+ 9C6F              ;   RES el bit2 de (Impacto2).
 693+ 9C6F              ;
 694+ 9C6F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9C6F              ;   Lo colocamos a "0".
 696+ 9C6F
 697+ 9C6F 21 B8 89         ld hl,Impacto2
 698+ 9C72 CB 96            res 2,(hl)
 699+ 9C74 2A B9 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9C77 36 00            ld (hl),0
 701+ 9C79
 702+ 9C79 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9C7A C9               ret
 704+ 9C7B
 705+ 9C7B               ; ---------- ----------
 706+ 9C7B
 707+ 9C7B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9C7C 3A 4E 89         ld a,(Columns)
 709+ 9C7F 47               ld b,a
 710+ 9C80 FD 7E 00     2 ld a,(iy)
 711+ 9C83 BE               cp (hl)
 712+ 9C84 28 01            jr z,1F
 713+ 9C86
 714+ 9C86 1C               inc e
 715+ 9C87
 716+ 9C87 23           1 inc hl
 717+ 9C88 FD 23            inc iy
 718+ 9C8A 10 F4            djnz 2B
 719+ 9C8C C1               pop bc
 720+ 9C8D C9               ret
 721+ 9C8E
 722+ 9C8E              ; -------------------------------------------------------------------------------------------------------------
 723+ 9C8E              ;
 724+ 9C8E              ;   13/03/23
 725+ 9C8E              ;
 726+ 9C8E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9C8E              ;
 728+ 9C8E              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9C8E
 730+ 9C8E 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9C91 7E               ld a,(hl)
 732+ 9C92 A7               and a
 733+ 9C93 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9C94
 735+ 9C94 44               ld b,h
 736+ 9C95 4D               ld c,l
 737+ 9C96 2A AB 89         ld hl,(Stack_snapshot_disparos)
 738+ 9C99 E5               push hl
 739+ 9C9A A7               and a
 740+ 9C9B ED 42            sbc hl,bc
 741+ 9C9D E5               push hl
 742+ 9C9E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9C9F
 744+ 9C9F E1               pop hl
 745+ 9CA0 54               ld d,h
 746+ 9CA1 5D               ld e,l
 747+ 9CA2 1B               dec de
 748+ 9CA3 ED B8            lddr                                                ; Limpiamos.
 749+ 9CA5
 750+ 9CA5 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9CA8 22 AB 89         ld (Stack_snapshot_disparos),hl
 752+ 9CAB
 753+ 9CAB C9               ret
 754+ 9CAC
 755+ 9CAC              ; -------------------------------------------------------------------------------------------------------------
 756+ 9CAC              ;
 757+ 9CAC              ;   18/07/23
 758+ 9CAC              ;
 759+ 9CAC
 760+ 9CAC              Motor_de_disparos
 761+ 9CAC
 762+ 9CAC              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9CAC
 764+ 9CAC 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9CAF 2A B6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9CB2
 767+ 9CB2 CD F8 8B     2 call Extrae_address
 768+ 9CB5 7E               ld a,(hl)
 769+ 9CB6 A7               and a
 770+ 9CB7 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9CB9
 772+ 9CB9              ; ----- ----- ----- ----- ----- -----
 773+ 9CB9
 774+ 9CB9 C5               push bc
 775+ 9CBA CD 7E 9D         call foto_disparo_a_borrar
 776+ 9CBD
 777+ 9CBD              ; Existe colisión con este disparo???
 778+ 9CBD
 779+ 9CBD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9CBE 7E               ld a,(hl)
 781+ 9CBF 2B               dec hl
 782+ 9CC0 E6 01            and 1
 783+ 9CC2 28 1D            jr z,9F
 784+ 9CC4
 785+ 9CC4              ;   En este punto:
 786+ 9CC4              ;
 787+ 9CC4              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9CC4              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9CC4              ;   _con la entidad).
 790+ 9CC4              ;
 791+ 9CC4              ;   Disparo_2A defw 0                                ; Control.
 792+ 9CC4              ;    defw 0                                          ; Puntero objeto.
 793+ 9CC4              ;    defw 0                                          ; Puntero de impresión.
 794+ 9CC4              ;    defw 0                                          ; Rutina de impresión.
 795+ 9CC4
 796+ 9CC4 E5               push hl
 797+ 9CC5
 798+ 9CC5 06 04            ld b,4
 799+ 9CC7 23           19 inc hl
 800+ 9CC8 10 FD            djnz 19B
 801+ 9CCA
 802+ 9CCA CD F8 8B         call Extrae_address
 803+ 9CCD CD 61 9F         call Genera_coordenadas_disparo
 804+ 9CD0
 805+ 9CD0              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9CD0
 807+ 9CD0 21 BB 89         ld hl,Coordenadas_disparo_certero
 808+ 9CD3 72               ld (hl),d
 809+ 9CD4 23               inc hl
 810+ 9CD5 73               ld (hl),e
 811+ 9CD6
 812+ 9CD6              ; Elimino el disparo de la base de datos.
 813+ 9CD6
 814+ 9CD6 E1               pop hl
 815+ 9CD7 CD FD 9D         call Elimina_disparo_de_base_de_datos
 816+ 9CDA 21 B8 89         ld hl,Impacto2
 817+ 9CDD CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9CDF
 819+ 9CDF 18 06            jr 11F
 820+ 9CE1
 821+ 9CE1 CD A7 9D     9 call Mueve_disparo
 822+ 9CE4 CD 7E 9D         call foto_disparo_a_borrar
 823+ 9CE7
 824+ 9CE7 C1           11 pop bc
 825+ 9CE8 18 04            jr 7F
 826+ 9CEA
 827+ 9CEA              ; ----- ----- ----- ----- ----- -----
 828+ 9CEA
 829+ 9CEA ED 42        1 sbc hl,bc
 830+ 9CEC 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9CEE
 832+ 9CEE 2A B6 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9CF1 23               inc hl
 834+ 9CF2 23               inc hl
 835+ 9CF3 22 B6 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9CF6 18 BA            jr 2B
 837+ 9CF8
 838+ 9CF8 CD 7D 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9CFB              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9CFB
 841+ 9CFB              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9CFB
 843+ 9CFB 01 9F 86         ld bc,Disparo_11
 844+ 9CFE 2A B4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9D01
 846+ 9D01 CD F8 8B     5 call Extrae_address
 847+ 9D04 7E               ld a,(hl)
 848+ 9D05 A7               and a
 849+ 9D06 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9D08
 851+ 9D08              ; ----- ----- ----- ----- ----- -----
 852+ 9D08
 853+ 9D08 C5               push bc
 854+ 9D09 CD 7E 9D         call foto_disparo_a_borrar
 855+ 9D0C
 856+ 9D0C              ; Existe colisión con este disparo???
 857+ 9D0C
 858+ 9D0C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9D0D 7E               ld a,(hl)
 860+ 9D0E 2B               dec hl
 861+ 9D0F E6 01            and 1
 862+ 9D11 28 4D            jr z,10F
 863+ 9D13
 864+ 9D13              ;! La colisión se produce con Amadeus???
 865+ 9D13              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9D13
 867+ 9D13 E5               push hl
 868+ 9D14
 869+ 9D14 06 04            ld b,4
 870+ 9D16 23           16 inc hl
 871+ 9D17 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9D19
 873+ 9D19 CD F8 8B         call Extrae_address
 874+ 9D1C CD 61 9F         call Genera_coordenadas_disparo
 875+ 9D1F
 876+ 9D1F 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9D20 FE 16            cp $16
 878+ 9D22 38 2A            jr c,15F
 879+ 9D24
 880+ 9D24
 881+ 9D24              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9D24
 883+ 9D24 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9D25
 885+ 9D25              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9D25
 887+ 9D25 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 9D28
 889+ 9D28              ; Coordenada X de Amadeus en D.
 890+ 9D28
 891+ 9D28 7D               ld a,l
 892+ 9D29 E6 1F            and $1F
 893+ 9D2B 57               ld d,a
 894+ 9D2C
 895+ 9D2C 21 BB 86         ld hl,Amadeus_db+8
 896+ 9D2F 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9D30
 898+ 9D30 21 BD 89         ld hl,Coordenadas_X_Amadeus
 899+ 9D33 CD F9 9B         call Guarda_coordenadas_X
 900+ 9D36
 901+ 9D36 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9D37
 903+ 9D37              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9D37
 905+ 9D37 06 02            ld b,2
 906+ 9D39 C5           20 push bc
 907+ 9D3A
 908+ 9D3A 06 03            ld b,3
 909+ 9D3C 21 BD 89         ld hl,Coordenadas_X_Amadeus
 910+ 9D3F 7E           18 ld a,(hl)
 911+ 9D40 BA               cp d
 912+ 9D41 20 04            jr nz,17F
 913+ 9D43
 914+ 9D43              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9D43
 916+ 9D43 C1               pop bc
 917+ 9D44 E1               pop hl
 918+ 9D45 18 0D            jr 14F
 919+ 9D47
 920+ 9D47 23           17 inc hl
 921+ 9D48 10 F5            djnz 18B
 922+ 9D4A
 923+ 9D4A 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9D4B
 925+ 9D4B C1               pop bc
 926+ 9D4C 10 EB            djnz 20B
 927+ 9D4E
 928+ 9D4E
 929+ 9D4E              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9D4E              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9D4E
 932+ 9D4E E1           15 pop hl
 933+ 9D4F 23               inc hl
 934+ 9D50 35               dec (hl)
 935+ 9D51 2B               dec hl
 936+ 9D52 18 0C            jr 10F
 937+ 9D54
 938+ 9D54              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9D54              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9D54
 941+ 9D54 E5           14 push hl
 942+ 9D55 CD FD 9D         call Elimina_disparo_de_base_de_datos
 943+ 9D58 21 B8 89         ld hl,Impacto2
 944+ 9D5B CB CE            set 1,(hl)
 945+ 9D5D E1               pop hl
 946+ 9D5E 18 06            jr 12F
 947+ 9D60
 948+ 9D60              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9D60
 950+ 9D60 CD A7 9D     10 call Mueve_disparo
 951+ 9D63 CD 7E 9D         call foto_disparo_a_borrar
 952+ 9D66 C1           12 pop bc
 953+ 9D67
 954+ 9D67 18 04            jr 8F
 955+ 9D69
 956+ 9D69              ; ----- ----- ----- ----- ----- -----
 957+ 9D69
 958+ 9D69 ED 42        4 sbc hl,bc
 959+ 9D6B 28 0A            jr z,6F
 960+ 9D6D
 961+ 9D6D 2A B4 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9D70 23               inc hl
 963+ 9D71 23               inc hl
 964+ 9D72 22 B4 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9D75 18 8A            jr 5B
 966+ 9D77
 967+ 9D77 CD 76 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9D7A CD 02 9C         call Limpia_Coordenadas_X
 969+ 9D7D C9               ret
 970+ 9D7E
 971+ 9D7E              ; ------------------------------------------------------------------
 972+ 9D7E
 973+ 9D7E              foto_disparo_a_borrar
 974+ 9D7E
 975+ 9D7E 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9D7F A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9D80 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9D81
 979+ 9D81 E5               push hl
 980+ 9D82 23               inc hl
 981+ 9D83 23               inc hl
 982+ 9D84 ED 73 A3 89      ld (Stack),sp
 983+ 9D88 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9D89 FD E1            pop iy
 985+ 9D8B DD E1            pop ix
 986+ 9D8D E1               pop hl
 987+ 9D8E ED 7B A3 89      ld sp,(Stack)
 988+ 9D92 3A 92 89         ld a,(Ctrl_1)
 989+ 9D95 CB C7            set 0,a
 990+ 9D97 32 92 89         ld (Ctrl_1),a
 991+ 9D9A CD BF 80         call Guarda_foto_registros
 992+ 9D9D 3A 92 89         ld a,(Ctrl_1)
 993+ 9DA0 CB 87            res 0,a
 994+ 9DA2 32 92 89         ld (Ctrl_1),a
 995+ 9DA5 E1               pop hl
 996+ 9DA6 C9               ret
 997+ 9DA7
 998+ 9DA7              ;---------------------------------------------------
 999+ 9DA7              ;
1000+ 9DA7              ;   18/07/23
1001+ 9DA7              ;
1002+ 9DA7
1003+ 9DA7              Mueve_disparo
1004+ 9DA7
1005+ 9DA7              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9DA7              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9DA7              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9DA7
1009+ 9DA7 E5               push hl
1010+ 9DA8
1011+ 9DA8 7E               ld a,(hl)
1012+ 9DA9
1013+ 9DA9 06 04            ld b,4
1014+ 9DAB 23           1 inc hl
1015+ 9DAC 10 FD            djnz 1B
1016+ 9DAE
1017+ 9DAE              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9DAE
1019+ 9DAE CD F8 8B         call Extrae_address
1020+ 9DB1
1021+ 9DB1 E6 01            and 1
1022+ 9DB3 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9DB5
1024+ 9DB5              ; Disparo hacia arriba, (Amadeus).
1025+ 9DB5
1026+ 9DB5              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9DB5              ; _ de la dificultad.
1028+ 9DB5
1029+ 9DB5 CD 3C 92         call PreviousScan
1030+ 9DB8 CD 3C 92         call PreviousScan
1031+ 9DBB CD 3C 92         call PreviousScan
1032+ 9DBE CD 3C 92         call PreviousScan
1033+ 9DC1
1034+ 9DC1              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9DC1
1036+ 9DC1 7C               ld a,h
1037+ 9DC2 FE 40            cp $40
1038+ 9DC4 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9DC6
1040+ 9DC6              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9DC6
1042+ 9DC6 EB               ex de,hl
1043+ 9DC7 06 04            ld b,4
1044+ 9DC9 2B           6 dec hl
1045+ 9DCA 10 FD            djnz 6B
1046+ 9DCC
1047+ 9DCC CD FD 9D         call Elimina_disparo_de_base_de_datos
1048+ 9DCF E1               pop hl
1049+ 9DD0 18 10            jr 7F
1050+ 9DD2
1051+ 9DD2              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9DD2              ; HL contiene el puntero de impresión del disparo.
1053+ 9DD2              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9DD2
1055+ 9DD2 D5           3 push de
1056+ 9DD3 C5               push bc
1057+ 9DD4
1058+ 9DD4 CD 90 9B         call Comprueba_Colision
1059+ 9DD7
1060+ 9DD7              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9DD7
1062+ 9DD7 78               ld a,b
1063+ 9DD8
1064+ 9DD8 C1               pop bc
1065+ 9DD9 D1               pop de
1066+ 9DDA
1067+ 9DDA EB               ex de,hl
1068+ 9DDB
1069+ 9DDB 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9DDC 23               inc hl                                      ; _ movimiento.
1071+ 9DDD 72               ld (hl),d
1072+ 9DDE
1073+ 9DDE E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9DDF
1075+ 9DDF 23               inc hl                                      ; _ en curso.
1076+ 9DE0 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9DE1 2B               dec hl
1078+ 9DE2
1079+ 9DE2 C9           7 ret
1080+ 9DE3
1081+ 9DE3              ; Disparo hacia abajo, (Entidad).
1082+ 9DE3
1083+ 9DE3 3A C3 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9DE6 47               ld b,a
1085+ 9DE7
1086+ 9DE7 CD 2D 92     4 call NextScan
1087+ 9DEA 10 FB            djnz 4B
1088+ 9DEC
1089+ 9DEC              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9DEC
1091+ 9DEC 7C               ld a,h
1092+ 9DED FE 58            cp $58
1093+ 9DEF 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9DF1
1095+ 9DF1 EB               ex de,hl
1096+ 9DF2 06 04            ld b,4
1097+ 9DF4 2B           5 dec hl
1098+ 9DF5 10 FD            djnz 5B
1099+ 9DF7
1100+ 9DF7 CD FD 9D         call Elimina_disparo_de_base_de_datos
1101+ 9DFA E1               pop hl
1102+ 9DFB 18 E5            jr 7B
1103+ 9DFD
1104+ 9DFD              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9DFD
1106+ 9DFD 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9E00 AF               xor a
1108+ 9E01 77               ld (hl),a
1109+ 9E02 54               ld d,h
1110+ 9E03 5D               ld e,l
1111+ 9E04 13               inc de
1112+ 9E05 ED B0            ldir
1113+ 9E07 C9               ret
1114+ 9E08
1115+ 9E08              ; -----------------------------------------------------------------
1116+ 9E08              ;
1117+ 9E08              ;   7/12/23
1118+ 9E08              ;
1119+ 9E08
1120+ 9E08 3A B8 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9E0B A7               and a
1122+ 9E0C C8               ret z
1123+ 9E0D
1124+ 9E0D              ; Analizamos si hay impacto por disparos.
1125+ 9E0D
1126+ 9E0D              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9E0D
1128+ 9E0D CB 4F            bit 1,a
1129+ 9E0F 28 07            jr z,1F
1130+ 9E11
1131+ 9E11 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9E14 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9E16 18 08            jr 2F
1134+ 9E18
1135+ 9E18 CB 47        1 bit 0,a
1136+ 9E1A C8               ret z
1137+ 9E1B
1138+ 9E1B              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9E1B
1140+ 9E1B 21 92 89         ld hl,Ctrl_1
1141+ 9E1E CB D6            set 2,(hl)
1142+ 9E20
1143+ 9E20 C9           2 ret
1144+ 9E21
1145+ 9E21              ; -----------------------------------------------------------------
1146+ 9E21              ;
1147+ 9E21              ;   25/04/23
1148+ 9E21              ;
1149+ 9E21
1150+ 9E21              Determina_resultado_comparativa
1151+ 9E21
1152+ 9E21              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9E21              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9E21              ;
1155+ 9E21              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9E21              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9E21              ;
1158+ 9E21              ;   SBC HL,DE
1159+ 9E21
1160+ 9E21              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9E21              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9E21
1163+ 9E21              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9E21              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9E21
1166+ 9E21
1167+ 9E21 3A 61 89         ld a,(Cuad_objeto)
1168+ 9E24 FE 02            cp 2
1169+ 9E26 28 26            jr z,2F
1170+ 9E28 38 24            jr c,2F
1171+ 9E2A
1172+ 9E2A              ; Cuadrantes 3º y 4º
1173+ 9E2A
1174+ 9E2A E6 01            and 1
1175+ 9E2C 28 10            jr z,4F
1176+ 9E2E
1177+ 9E2E              ; Cuadrante 3º
1178+ 9E2E
1179+ 9E2E 7C               ld a,h
1180+ 9E2F 06 00            ld b,0
1181+ 9E31
1182+ 9E31 CD BC 9E         call Compara_cositas_H3
1183+ 9E34
1184+ 9E34 04               inc b
1185+ 9E35 05               dec b
1186+ 9E36 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9E37
1188+ 9E37 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9E38 06 00            ld b,0
1190+ 9E3A
1191+ 9E3A CD CE 9E         call Compara_cositas_L3
1192+ 9E3D C9               ret
1193+ 9E3E
1194+ 9E3E              ; Cuadrante 4º
1195+ 9E3E
1196+ 9E3E 7C           4 ld a,h
1197+ 9E3F 06 00            ld b,0
1198+ 9E41
1199+ 9E41 CD E0 9E         call Compara_cositas_H4
1200+ 9E44
1201+ 9E44 04               inc b
1202+ 9E45 05               dec b
1203+ 9E46 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9E47
1205+ 9E47 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9E48 06 00            ld b,0
1207+ 9E4A
1208+ 9E4A CD F6 9E         call Compara_cositas_L4
1209+ 9E4D C9               ret
1210+ 9E4E
1211+ 9E4E              ; Cuadrantes 1º y 2º.
1212+ 9E4E
1213+ 9E4E 28 10        2 jr z,3F
1214+ 9E50
1215+ 9E50              ; 1er Cuadrante
1216+ 9E50
1217+ 9E50 7C               ld a,h
1218+ 9E51 06 00            ld b,0
1219+ 9E53
1220+ 9E53 CD 94 9E         call Compara_cositas_H1
1221+ 9E56
1222+ 9E56 04               inc b
1223+ 9E57 05               dec b
1224+ 9E58 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9E59
1226+ 9E59 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9E5A 06 00            ld b,0
1228+ 9E5C
1229+ 9E5C CD AA 9E         call Compara_cositas_L1
1230+ 9E5F C9               ret
1231+ 9E60
1232+ 9E60
1233+ 9E60              ; 2º Cuadrante
1234+ 9E60
1235+ 9E60 7C           3 ld a,h
1236+ 9E61 06 00            ld b,0
1237+ 9E63
1238+ 9E63 CD 70 9E         call Compara_cositas_H2
1239+ 9E66
1240+ 9E66 04               inc b
1241+ 9E67 05               dec b
1242+ 9E68 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9E69
1244+ 9E69 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9E6A 06 00            ld b,0
1246+ 9E6C
1247+ 9E6C CD 82 9E         call Compara_cositas_L2
1248+ 9E6F C9               ret
1249+ 9E70
1250+ 9E70 A7           Compara_cositas_H2 and a
1251+ 9E71 28 0D            jr z,1F
1252+ 9E73              ;    cp $fd
1253+ 9E73              ;    jr z,1F
1254+ 9E73              ;    cp $fe
1255+ 9E73              ;    jr z,1F
1256+ 9E73 FE FF            cp $ff
1257+ 9E75 28 09            jr z,1F
1258+ 9E77 FE 01            cp $01
1259+ 9E79 28 05            jr z,1F
1260+ 9E7B FE 02            cp $02
1261+ 9E7D 28 01            jr z,1F
1262+ 9E7F C0               ret nz
1263+ 9E80 04           1 inc b
1264+ 9E81 C9               ret
1265+ 9E82
1266+ 9E82 A7           Compara_cositas_L2 and a
1267+ 9E83 28 0D            jr z,1F
1268+ 9E85              ;    cp $fd
1269+ 9E85              ;    jr z,1F
1270+ 9E85 FE FE            cp $fe
1271+ 9E87 28 09            jr z,1F
1272+ 9E89 FE FF            cp $ff
1273+ 9E8B 28 05            jr z,1F
1274+ 9E8D FE 01            cp $01
1275+ 9E8F 28 01            jr z,1F
1276+ 9E91              ;    cp $02
1277+ 9E91              ;    jr z,1F
1278+ 9E91 C0               ret nz
1279+ 9E92 04           1 inc b
1280+ 9E93 C9               ret
1281+ 9E94
1282+ 9E94 A7           Compara_cositas_H1 and a
1283+ 9E95 28 11            jr z,1F
1284+ 9E97              ;    cp $fd
1285+ 9E97              ;    jr z,1F
1286+ 9E97              ;    cp $fe
1287+ 9E97              ;    jr z,1F
1288+ 9E97 FE FF            cp $ff
1289+ 9E99 28 0D            jr z,1F
1290+ 9E9B FE 01            cp $01
1291+ 9E9D 28 09            jr z,1F
1292+ 9E9F FE 02            cp $02
1293+ 9EA1 28 05            jr z,1F
1294+ 9EA3 FE 03            cp $03
1295+ 9EA5 28 01            jr z,1F
1296+ 9EA7 C0               ret nz
1297+ 9EA8 04           1 inc b
1298+ 9EA9 C9               ret
1299+ 9EAA
1300+ 9EAA A7           Compara_cositas_L1 and a
1301+ 9EAB 28 0D            jr z,1F
1302+ 9EAD              ;    cp $fd
1303+ 9EAD              ;    jr z,1F
1304+ 9EAD              ;    cp $fe
1305+ 9EAD              ;    jr z,1F
1306+ 9EAD              ;    cp $ff
1307+ 9EAD              ;    jr z,1F
1308+ 9EAD FE 01            cp $01
1309+ 9EAF 28 09            jr z,1F
1310+ 9EB1 FE 02            cp $02
1311+ 9EB3 28 05            jr z,1F
1312+ 9EB5 FE 03            cp $03
1313+ 9EB7 28 01            jr z,1F
1314+ 9EB9 C0               ret nz
1315+ 9EBA 04           1 inc b
1316+ 9EBB C9               ret
1317+ 9EBC
1318+ 9EBC A7           Compara_cositas_H3 and a
1319+ 9EBD 28 0D            jr z,1F
1320+ 9EBF              ;    cp $fd
1321+ 9EBF              ;    jr z,1F
1322+ 9EBF FE FE            cp $fe
1323+ 9EC1 28 09            jr z,1F
1324+ 9EC3 FE FF            cp $ff
1325+ 9EC5 28 05            jr z,1F
1326+ 9EC7 FE 01            cp $01
1327+ 9EC9 28 01            jr z,1F
1328+ 9ECB              ;    cp $02
1329+ 9ECB              ;    jr z,1F
1330+ 9ECB              ;    cp $03
1331+ 9ECB              ;    jr z,1F
1332+ 9ECB C0               ret nz
1333+ 9ECC 04           1 inc b
1334+ 9ECD C9               ret
1335+ 9ECE
1336+ 9ECE A7           Compara_cositas_L3 and a
1337+ 9ECF 28 0D            jr z,1F
1338+ 9ED1              ;    cp $fd
1339+ 9ED1              ;    jr z,1F
1340+ 9ED1              ;    cp $fe
1341+ 9ED1              ;    jr z,1F
1342+ 9ED1              ;    cp $ff
1343+ 9ED1              ;    jr z,1F
1344+ 9ED1 FE 01            cp $01
1345+ 9ED3 28 09            jr z,1F
1346+ 9ED5 FE 02            cp $02
1347+ 9ED7 28 05            jr z,1F
1348+ 9ED9 FE 03            cp $03
1349+ 9EDB 28 01            jr z,1F
1350+ 9EDD C0               ret nz
1351+ 9EDE 04           1 inc b
1352+ 9EDF C9               ret
1353+ 9EE0
1354+ 9EE0 A7           Compara_cositas_H4 and a
1355+ 9EE1 28 11            jr z,1F
1356+ 9EE3 FE FD            cp $fd
1357+ 9EE5 28 0D            jr z,1F
1358+ 9EE7 FE FE            cp $fe
1359+ 9EE9 28 09            jr z,1F
1360+ 9EEB FE FF            cp $ff
1361+ 9EED 28 05            jr z,1F
1362+ 9EEF FE 01            cp $01
1363+ 9EF1 28 01            jr z,1F
1364+ 9EF3              ;    cp $02
1365+ 9EF3              ;    jr z,1F
1366+ 9EF3              ;    cp $03
1367+ 9EF3              ;    jr z,1F
1368+ 9EF3 C0               ret nz
1369+ 9EF4 04           1 inc b
1370+ 9EF5 C9               ret
1371+ 9EF6
1372+ 9EF6 A7           Compara_cositas_L4 and a
1373+ 9EF7 28 0D            jr z,1F
1374+ 9EF9              ;    cp $fd
1375+ 9EF9              ;    jr z,1F
1376+ 9EF9 FE FE            cp $fe
1377+ 9EFB 28 09            jr z,1F
1378+ 9EFD FE FF            cp $ff
1379+ 9EFF 28 05            jr z,1F
1380+ 9F01 FE 01            cp $01
1381+ 9F03 28 01            jr z,1F
1382+ 9F05              ;    cp $02
1383+ 9F05              ;    jr z,1F
1384+ 9F05              ;    cp $03
1385+ 9F05              ;    jr z,1F
1386+ 9F05 C0               ret nz
1387+ 9F06 04           1 inc b
1388+ 9F07 C9               ret
# file closed: Disparo.asm
1818  9F08              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F08              ; Relojes y temporizaciones.
   2+ 9F08
   3+ 9F08              ; ------------------------------------------------------
   4+ 9F08              ;
   5+ 9F08              ;	16/7/23
   6+ 9F08              ;
   7+ 9F08              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9F08              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F08              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F08              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F08              ;
  12+ 9F08              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F08              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F08
  15+ 9F08              ; Disparo_entidad db 1
  16+ 9F08              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9F08              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9F08
  19+ 9F08              Habilita_disparos
  20+ 9F08
  21+ 9F08 7E           	ld a,(hl)
  22+ 9F09 A7           	and a
  23+ 9F0A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9F0B
  25+ 9F0B EB           	ex de,hl
  26+ 9F0C
  27+ 9F0C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9F0D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9F0E
  30+ 9F0E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9F0E
  32+ 9F0E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9F0F 7E           	ld a,(hl)
  34+ 9F10 23           	inc hl
  35+ 9F11 77           	ld (hl),a
  36+ 9F12
  37+ 9F12 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9F13 3E 01        	ld a,1
  39+ 9F15 77           	ld (hl),a
  40+ 9F16 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1819  9F17              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9F17              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9F17              ;
   3+ 9F17              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9F17              ;
   5+ 9F17              ; *****************************************************************************************************************************************************************************************
   6+ 9F17              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9F17
   8+ 9F17 7C           calcula_tercio ld a,h
   9+ 9F18 E6 18        	and $18
  10+ 9F1A CB 2F        	sra a
  11+ 9F1C CB 2F        	sra a
  12+ 9F1E CB 2F        	sra a
  13+ 9F20 C9           	ret
  14+ 9F21
# file closed: calcula_tercio.asm
1820  9F21              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9F21              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9F21              ;
   3+ 9F21              ;
   4+ 9F21              ;	CLS.
   5+ 9F21              ;
   6+ 9F21              ;	Limpia la pantalla y define sus atributos.
   7+ 9F21              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9F21              ;
   9+ 9F21              ;	COLORES: 0 ..... NEGRO
  10+ 9F21              ;    		 1 ..... AZUL
  11+ 9F21              ; 			 2 ..... ROJO
  12+ 9F21              ;			 3 ..... MAGENTA
  13+ 9F21              ; 			 4 ..... VERDE
  14+ 9F21              ; 			 5 ..... CIAN
  15+ 9F21              ;			 6 ..... AMARILLO
  16+ 9F21              ; 			 7 ..... BLANCO
  17+ 9F21              ;
  18+ 9F21              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9F21              ;
  20+ 9F21              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9F21
  22+ 9F21
  23+ 9F21 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9F24 11 01 40     	LD DE,$4001
  25+ 9F27 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9F2A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9F2C ED B0        	LDIR
  28+ 9F2E 01 FF 02     	LD BC,767
  29+ 9F31 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9F32 ED B0        	LDIR
  31+ 9F34 C9           	ret
  32+ 9F35
# file closed: Cls.asm
1821  9F35              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9F35              ; ------------------------------------------------------------------------
   2+ 9F35              ;
   3+ 9F35              ;	30/1/24
   4+ 9F35              ;
   5+ 9F35              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9F35              ;	Fila superior "0", Columna izquierda "0".
   7+ 9F35              ;
   8+ 9F35              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9F35              ;
  10+ 9F35              ;	Modifica: A,BC y DE.
  11+ 9F35
  12+ 9F35 7D           Genera_coordenadas ld a,l
  13+ 9F36 E6 1F        	and $1f
  14+ 9F38 32 53 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9F3B
  16+ 9F3B 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9F3C FE 40        	cp $40
  18+ 9F3E 38 1C        	jr c,4F
  19+ 9F40
  20+ 9F40 CD 17 9F     	call calcula_tercio
  21+ 9F43 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9F44
  23+ 9F44 1E 00        	ld e,0
  24+ 9F46 7D           	ld a,l
  25+ 9F47 E6 E0        	and $e0
  26+ 9F49 28 01        	jr z,1F
  27+ 9F4B 04           	inc b
  28+ 9F4C
  29+ 9F4C 04           1 inc b
  30+ 9F4D 05           	dec b
  31+ 9F4E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9F50              ;														; _ , salimos.
  33+ 9F50 1C           3 inc e
  34+ 9F51 D6 20        	sub 32
  35+ 9F53 20 FB        	jr nz,3B
  36+ 9F55 10 F5        	djnz 1B
  37+ 9F57
  38+ 9F57 7B           2 ld a,e
  39+ 9F58 32 54 89     	ld (Coordenada_y),a
  40+ 9F5B C9           	ret
  41+ 9F5C
  42+ 9F5C AF           4 xor a
  43+ 9F5D 32 54 89     	ld (Coordenada_y),a
  44+ 9F60 C9           	ret
  45+ 9F61
  46+ 9F61              ; ------------------------------------------------------------------------
  47+ 9F61              ;	28/05/23
  48+ 9F61              ;
  49+ 9F61              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9F61              ;	Fila superior "0", Columna izquierda "0".
  51+ 9F61              ;
  52+ 9F61              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9F61              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9F61              ;
  55+ 9F61              ;		DE="$120d"
  56+ 9F61              ;
  57+ 9F61              ;		D, (Coordenada_X), Columnas, $12
  58+ 9F61              ;		E, (Coordenada_y), Filas, $0d
  59+ 9F61              ;
  60+ 9F61              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9F61
  62+ 9F61              ;	Modifica: A,BC y DE.
  63+ 9F61
  64+ 9F61
  65+ 9F61              Genera_coordenadas_disparo
  66+ 9F61
  67+ 9F61              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9F61
  69+ 9F61 7D           	ld a,l
  70+ 9F62 E6 1F        	and $1f
  71+ 9F64 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9F65 CD 17 9F     	call calcula_tercio
  73+ 9F68 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9F69 1E 00        	ld e,0
  75+ 9F6B 7D           	ld a,l
  76+ 9F6C E6 E0        	and $e0
  77+ 9F6E 28 01        	jr z,1F
  78+ 9F70 04           	inc b
  79+ 9F71 1C           1 inc e
  80+ 9F72 D6 20        	sub 32
  81+ 9F74 20 FB        	jr nz,1B
  82+ 9F76 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9F78 C9           	ret
  84+ 9F79
# file closed: Genera_coordenadas.asm
1822  9F79              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F79              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F79              ;
   3+ 9F79              ;	12/12/23
   4+ 9F79              ;
   5+ 9F79              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F79
   7+ 9F79              ;	ADC HL,SP	LD (addr),SP
   8+ 9F79              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F79              ;	ADD IX,SP	LD SP,nn
  10+ 9F79              ; 	ADD IY,SP	LD SP,HL
  11+ 9F79              ;				LD SP,IX
  12+ 9F79              ;	DEC SP		LD SP,IY
  13+ 9F79
  14+ 9F79              ;	EX (SP),HL
  15+ 9F79              ;	EX (SP),IX
  16+ 9F79              ;	EX (SP),IY
  17+ 9F79
  18+ 9F79              ;	INC SP
  19+ 9F79
  20+ 9F79                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 A3 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 69 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 6B 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A 92 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A AB 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 6F 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A AF 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A A9 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A 92 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 AB 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 6F 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 AF 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B A3 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 A9 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B A3 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A A9 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 A9 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1823  8131
1824  8131              	SAVESNA "Pruebas.sna", START
1825  8131
1826  8131
1827  8131
1828  8131
# file closed: Banco_de_pruebas.asm
