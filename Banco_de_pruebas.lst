# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 40 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83E8              ;                  _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
198+  84FA 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  84FC 02           	db 2											; (Cuad_objeto).
200+  84FD
201+  84FD 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
215+  8517 A3 94 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  851E
218+  851E 00           	db 0 											; (Columnas).
219+  851F 00 00        	defw 0											; (Limite_horizontal).
220+  8521 00           	db 0											; (Limite_vertical).
221+  8522
222+  8522              ; ---------- ---------- ---------- ---------- ----------
223+  8522
224+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  8524 00 00        	defw 0                                          ; (Posicion_actual).
226+  8526 00 00        	defw 0											; (Puntero_objeto).
227+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  852B
229+  852B 04           	db %00000100									; (Attr).
230+  852C
231+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8530
234+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  8534
237+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  8536 01           	db 1											; (Cuad_objeto).
239+  8537
240+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  853B
242+  853B 00 00        	db 0,0											; Variables_de_borrado
243+  853D 00 00        	defw 0										 	;	" " " " " " "
244+  853F 00 00        	defw 0											;	" " " " " " "
245+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  8545
247+  8545 00 00        	db 0,0											; Variables_de_pintado
248+  8547 00 00        	defw 0											;	" " " " " " "
249+  8549 00 00        	defw 0											;	" " " " " " "
250+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  854F
252+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8551
254+  8551 A5 94 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8558
257+  8558 00           	db 0 											; (Columnas).
258+  8559 00 00        	defw 0											; (Limite_horizontal).
259+  855B 00           	db 0											; (Limite_vertical).
260+  855C
261+  855C              ; ---------- ---------- ---------- ---------- ----------
262+  855C
263+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  855E 00 00        	defw 0                                          ; (Posicion_actual).
265+  8560 00 00        	defw 0 											; (Puntero_objeto).
266+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  8565
268+  8565 01           	db %00000001									; (Attr).
269+  8566
270+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  856A
273+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  856E
276+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8570 00           	db 0											; (Cuad_objeto).
278+  8571
279+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  8575
281+  8575 00 00        	db 0,0											; Variables_de_borrado
282+  8577 00 00        	defw 0										 	;	" " " " " " "
283+  8579 00 00        	defw 0											;	" " " " " " "
284+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  857F
286+  857F 00 00        	db 0,0											; Variables_de_pintado
287+  8581 00 00        	defw 0											;	" " " " " " "
288+  8583 00 00        	defw 0											;	" " " " " " "
289+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8589
291+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  858B
293+  858B 95 94 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  8592
296+  8592 00           	db 0 											; (Columnas).
297+  8593 00 00        	defw 0											; (Limite_horizontal).
298+  8595 00           	db 0											; (Limite_vertical).
299+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
135   85C5 91 94        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
163   85D1
164   85D1
165   85D1
166   85D1
167   85D1
168   85D1
169   85D1              ; Gestión de ENTIDADES.
170   85D1
171   85D1 00 00        Puntero_store_entidades defw 0
172   85D3 00 00        Puntero_restore_entidades defw 0
173   85D5 00 00        Indice_restore defw 0
174   85D7 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
175   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
176   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
177   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
178   85D9              ;														; _ (Numero_de_malotes)="0".
179   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
180   85DB              ;														; _variable para almacenar lo posición del puntero_
181   85DB              ; 														; _de pila, SP.
182   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
183   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
184   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
185   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
186   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
187   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
188   85E1              ;														; _el snapshot de los registros del siguiente disparo.
189   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
190   85E1
191   85E1              ; Gestión de Disparos.
192   85E1
193   85E1 00           Numero_de_disparotes db 0
194   85E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
195   85E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
196   85E6 00           Impacto db 0
197   85E7
198   85E7              ; Gestión de FRAMES.
199   85E7
200   85E7 00           Switch db 0
201   85E8
202   85E8              ; Variables de Raster y localización en pantalla.
203   85E8
204   85E8 00 FF        Temp_Raster defw $ff00
205   85EA
206   85EA              ; Rutina principal *************************************************************************************************************************************************************************
207   85EA              ;
208   85EA              ;	14/11/22
209   85EA
210   85EA 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
211   85ED
212   85ED 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
213   85EF ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
214   85F1 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
215   85F3 F3           	DI
216   85F4
217   85F4 3E 01        	ld a,1
218   85F6 D3 FE        	out ($fe),a
219   85F8
220   85F8 3E 07        	ld a,%00000111
221   85FA CD CA 90     	call Cls
222   85FD
223   85FD              ;	call Pinta_FILAS
224   85FD
225   85FD CD 3C 88     	call Pulsa_ENTER
226   8600
227   8600 21 D7 85     	ld hl,Numero_de_entidades
228   8603 46           	ld b,(hl)
229   8604 04           	inc b
230   8605 05           	dec b
231   8606 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
232   8608
233   8608              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
234   8608              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
235   8608              ;	Pintamos el resto de entidades:
236   8608
237   8608 CD 35 87     	call Inicia_punteros_de_entidades
238   860B
239   860B              ;	INICIA ENTIDADES!!!!!
240   860B
241   860B C5           1 push bc  												; Guardo el contador de entidades.
242   860C CD 8F 87      	call Inicia_Puntero_objeto
243   860F CD 1A 8B     	call Draw
244   8612 CD A0 7F     	call Guarda_foto_registros
245   8615 CD D7 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
246   8618 C1           	pop bc
247   8619 10 F0        	djnz 1B  											; Decremento el contador de entidades.
248   861B
249   861B              ; 	INICIA AMADEUS!!!!!
250   861B
251   861B CD 18 88     3 call Restore_Amadeus
252   861E CD 8F 87     	call Inicia_Puntero_objeto
253   8621 CD 1A 8B     	call Draw
254   8624 CD A0 7F     	call Guarda_foto_registros
255   8627 CD 2A 88     	call Store_Amadeus
256   862A
257   862A              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
258   862A
259   862A CD 4B 87     	call Inicia_Puntero_Disparo_Entidades
260   862D CD 52 87     	call Inicia_Puntero_Disparo_Amadeus
261   8630
262   8630              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
263   8630
264   8630 CD 35 87     	call Inicia_punteros_de_entidades
265   8633 CD 06 88     	call Restore_Primera_entidad
266   8636
267   8636 3A D7 85     	ld a,(Numero_de_entidades)
268   8639 3C           	inc a
269   863A 32 D8 85     	ld (Numero_de_malotes),a
270   863D
271   863D FB           2 ei
272   863E 18 FD        	jr 2B
273   8640
274   8640              ; -----------------------------------------------------------------------------------
275   8640
276   8640              Frame
277   8640
278   8640              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
279   8640              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
280   8640
281   8640 3E 02            ld a,2
282   8642 D3 FE            out ($fe),a
283   8644 CD 1E 8E     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
284   8647 CD 57 8E     	call Extrae_foto_disparos
285   864A 3E 01            ld a,1
286   864C D3 FE            out ($fe),a
287   864E
288   864E              ; ----------------------------------------------------------------------
289   864E
290   864E CD 14 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
291   8651 CD 32 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
292   8654
293   8654 21 00 70     	ld hl,Album_de_fotos
294   8657 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
295   865A              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
296   865A 3A D7 85         ld a,(Numero_de_entidades)
297   865D 47               ld b,a
298   865E A7           	and a
299   865F 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
300   8661
301   8661 C5           2 push bc
302   8662 CD AE 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
303   8665 3A C3 85     	ld a,(Ctrl_0)
304   8668 CB 67        	bit 4,a
305   866A 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
306   866C
307   866C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
308   866C              ; Las entidades sólo generan disparo cuando se mueven.
309   866C              ; 16/02/23.
310   866C              ; [[[
311   866C CD 73 88     	call Detecta_disparo_entidad
312   866F              ; ]]]
313   866F CD FC 86     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
314   8672
315   8672 21 C3 85     1 ld hl,Ctrl_0
316   8675 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
317   8677 AF           	xor a
318   8678 32 C4 85     	ld (Obj_dibujado),a
319   867B CD D7 87     	call Store_Restore_entidades
320   867E C1           	pop bc
321   867F 10 E0        	djnz 2B
322   8681
323   8681              ; Tras la gestión de las entidades, ... AMADEUS.
324   8681
325   8681 CD 18 88     4 call Restore_Amadeus
326   8684 CD CD 86     	call Mov_Amadeus
327   8687 3A C3 85     	ld a,(Ctrl_0)
328   868A CB 67        	bit 4,a
329   868C 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
330   868E CD FC 86     	call Guarda_foto_entidad_a_pintar
331   8691
332   8691 21 C3 85     3 ld hl,Ctrl_0
333   8694 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
334   8696 AF           	xor a
335   8697 32 C4 85     	ld (Obj_dibujado),a
336   869A CD 2A 88     	call Store_Amadeus
337   869D
338   869D              ; -----
339   869D
340   869D CD 35 87     	call Inicia_punteros_de_entidades
341   86A0 CD 06 88     	call Restore_Primera_entidad
342   86A3
343   86A3              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
344   86A3
345   86A3 CD 59 87     	call Calcula_numero_de_malotes
346   86A6 CD 71 87     	call Calcula_numero_de_disparotes
347   86A9
348   86A9 3E 04        	ld a,4
349   86AB D3 FE        	out ($fe),a
350   86AD C9           	ret
351   86AE
352   86AE              ; --------------------------------------------------------------------------------------------------------------
353   86AE              ;
354   86AE              ;	29/1/23
355   86AE
356   86AE              Mov_obj
357   86AE
358   86AE              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
359   86AE
360   86AE AF           	xor a
361   86AF 32 C4 85     	ld (Obj_dibujado),a
362   86B2 CD 06 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
363   86B5              ;														; Obj_dibujado="0".
364   86B5              ; Movemos Entidades malignas.
365   86B5
366   86B5 CD A7 94     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
367   86B8 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
368   86BB CB 67        	bit 4,a
369   86BD C8           	ret z
370   86BE
371   86BE              ; ---------
372   86BE
373   86BE 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
374   86C0 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
375   86C3 CD 06 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
376   86C6 CD 1D 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
377   86C9 CD EC 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
378   86CC C9           	ret													; _de la misma.
379   86CD
380   86CD              ; --------------------------------------------------------------------------------------------------------------
381   86CD              ;
382   86CD              ;	29/1/23
383   86CD
384   86CD              Mov_Amadeus
385   86CD
386   86CD AF           	xor a
387   86CE 32 C4 85     	ld (Obj_dibujado),a
388   86D1 CD 06 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
389   86D4              ;														; Obj_dibujado="0".
390   86D4              ; Movemos Amadeus.
391   86D4
392   86D4 CD 50 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
393   86D7 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
394   86DA CB 67        	bit 4,a
395   86DC C8           	ret z
396   86DD
397   86DD              ; ---------
398   86DD
399   86DD 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
400   86DF 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
401   86E2 CD 06 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
402   86E5 CD 1D 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
403   86E8 CD EC 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
404   86EB C9           	ret													; _de la nave.
405   86EC
406   86EC              ; --------------------------------------------------------------------------------------------------------------
407   86EC              ;
408   86EC              ;	31/01/23
409   86EC              ;
410   86EC              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
411   86EC
412   86EC              Guarda_foto_entidad_a_borrar
413   86EC
414   86EC CD F4 8D     	call Prepara_draw
415   86EF CD 2E 8D     	call calcula_CColumnass
416   86F2 CD 65 8D     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
417   86F5 CD BA 8D     	call Define_rutina_de_impresion
418   86F8 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
419   86FB C9           	ret
420   86FC
421   86FC              ; --------------------------------------------------------------------------------------------------------------
422   86FC              ;
423   86FC              ;	31/01/23
424   86FC              ;
425   86FC              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
426   86FC              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
427   86FC
428   86FC              Guarda_foto_entidad_a_pintar
429   86FC
430   86FC CD 29 87     	call Repone_pintar
431   86FF CD 1A 8B     	call Draw
432   8702 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
433   8705 C9           	ret
434   8706
435   8706              ; --------------------------------------------------------------------------------------------------------------
436   8706              ;
437   8706              ;
438   8706
439   8706 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
440   8709 3A C4 85     	ld a,(Obj_dibujado)
441   870C A7           	and a
442   870D 28 05        	jr z,1F
443   870F 11 B9 85     	ld de,Variables_de_pintado
444   8712 18 03        	jr 2F
445   8714 11 AF 85     1 ld de,Variables_de_borrado
446   8717 01 08 00     2 ld bc,8
447   871A ED B0        	ldir
448   871C C9           	ret
449   871D
450   871D              ; --------------------------------------------------------------------------------------------------------------
451   871D
452   871D 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
453   8720 11 96 85     	ld de,Filas
454   8723 01 08 00     	ld bc,8
455   8726 ED B0        	ldir
456   8728 C9           	ret
457   8729
458   8729 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
459   872C 11 96 85     	ld de,Filas
460   872F 01 08 00     	ld bc,8
461   8732 ED B0        	ldir
462   8734 C9           	ret
463   8735
464   8735              ; *************************************************************************************************************************************************************
465   8735              ;
466   8735              ; 8/1/23
467   8735              ;
468   8735              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
469   8735              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
470   8735              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
471   8735
472   8735              ; Destruye HL y DE !!!!!
473   8735
474   8735              Inicia_punteros_de_entidades
475   8735
476   8735 21 68 84     	ld hl,Indice_de_entidades
477   8738 CD 89 87         call Extrae_address
478   873B 22 D1 85         ld (Puntero_store_entidades),hl
479   873E 21 6A 84     	ld hl,Indice_de_entidades+2
480   8741 22 D5 85     	ld (Indice_restore),hl
481   8744 CD 89 87     	call Extrae_address
482   8747 22 D3 85     	ld (Puntero_restore_entidades),hl
483   874A C9               ret
484   874B
485   874B              ; *************************************************************************************************************************************************************
486   874B              ;
487   874B              ; 8/1/23
488   874B              ;
489   874B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
490   874B
491   874B 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
492   874E 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
493   8751 C9           	ret
494   8752 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
495   8755 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
496   8758 C9           	ret
497   8759
498   8759              ; -------------------------------------------------------------------------------------------------------------
499   8759              ;
500   8759              ; 28/2/23
501   8759              ;
502   8759
503   8759              Calcula_numero_de_malotes
504   8759
505   8759 21 00 70     	ld hl,Album_de_fotos
506   875C EB           	ex de,hl
507   875D 2A DD 85     	ld hl,(Stack_snapshot)
508   8760
509   8760 06 00        	ld b,0
510   8762 7D           	ld a,l
511   8763 93           	sub e
512   8764 28 07        	jr z,1F
513   8766
514   8766              ; Nº de malotes no es "0".
515   8766
516   8766 D6 06        2 sub 6
517   8768 04           	inc b
518   8769 A7           	and a
519   876A 20 FA        	jr nz,2B
520   876C 78           	ld a,b
521   876D
522   876D 32 D8 85     1 ld (Numero_de_malotes),a
523   8770 C9           	ret
524   8771
525   8771              ; -------------------------------------------------------------------------------------------------------------
526   8771              ;
527   8771              ; 28/2/23
528   8771              ;
529   8771
530   8771              Calcula_numero_de_disparotes
531   8771
532   8771 21 60 70     	ld hl,Album_de_fotos_disparos
533   8774 EB           	ex de,hl
534   8775 2A DF 85     	ld hl,(Stack_snapshot_disparos)
535   8778
536   8778 06 00        	ld b,0
537   877A 7D           	ld a,l
538   877B 93           	sub e
539   877C 28 07        	jr z,1F
540   877E
541   877E              ; Nº de malotes no es "0".
542   877E
543   877E D6 06        2 sub 6
544   8780 04           	inc b
545   8781 A7           	and a
546   8782 20 FA        	jr nz,2B
547   8784 78           	ld a,b
548   8785
549   8785 32 E1 85     1 ld (Numero_de_disparotes),a
550   8788 C9           	ret
551   8789              ; *************************************************************************************************************************************************************
552   8789              ;
553   8789              ; 20/10/22
554   8789              ;
555   8789              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
556   8789              ;
557   8789              ; Destruye el puntero y DE !!!!!
558   8789
559   8789 5E           Extrae_address ld e,(hl)
560   878A 23           	inc hl
561   878B 56           	ld d,(hl)
562   878C 2B           	dec hl
563   878D EB           	ex de,hl
564   878E C9           	ret
565   878F
566   878F              ; *************************************************************************************************************************************************************
567   878F              ;
568   878F              ;	7/2/23
569   878F              ;
570   878F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
571   878F              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
572   878F              ;
573   878F              ;   Destruye HL y BC !!!!!,
574   878F              ;
575   878F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
576   878F              ;					"0" ..... Izquierda.
577   878F
578   878F              Inicia_Puntero_objeto
579   878F
580   878F 3A AA 85     	ld a,(Cuad_objeto)
581   8792 E6 01        	and 1
582   8794 F5           	push af
583   8795 CC B3 87     	call z,Inicia_puntero_objeto_izq
584   8798 F1           	pop af
585   8799 28 2B        	jr z,1F
586   879B CD A0 87     	call Inicia_puntero_objeto_der
587   879E 18 26        	jr 1F
588   87A0
589   87A0              ; Arrancamos desde la parte izquierda de la pantalla.
590   87A0              ; Iniciamos (Indice_Sprite_der).
591   87A0
592   87A0 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
593   87A3 22 A4 85     	ld (Puntero_DESPLZ_der),hl
594   87A6 CD 89 87     	call Extrae_address
595   87A9 22 9A 85     	ld (Puntero_objeto),hl
596   87AC
597   87AC 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
598   87AF              ;	call Extrae_address
599   87AF 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
600   87B2 C9           	ret
601   87B3
602   87B3              ; Arrancamos desde la parte derecha de la pantalla.
603   87B3              ; Iniciamos (Indice_Sprite_izq).
604   87B3
605   87B3 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
606   87B6 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
607   87B9 CD 89 87     	call Extrae_address
608   87BC 22 9A 85     	ld (Puntero_objeto),hl
609   87BF
610   87BF 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
611   87C2              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
612   87C2 22 A4 85     	ld (Puntero_DESPLZ_der),hl
613   87C5 C9           	ret
614   87C6
615   87C6              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
616   87C6
617   87C6 21 38 83     1 ld hl,Amadeus
618   87C9 ED 4B 9A 85  	ld bc,(Puntero_objeto)
619   87CD B7 ED 42     	sub hl,bc
620   87D0 C0           	ret nz
621   87D1 21 C3 85     	ld hl,Ctrl_0
622   87D4 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
623   87D6 C9           	ret 												; _de nuestra nave en los extremos.
624   87D7
625   87D7              ; *************************************************************************************************************************************************************
626   87D7              ;
627   87D7              ;	8/1/23
628   87D7              ;
629   87D7              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
630   87D7              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
631   87D7
632   87D7              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
633   87D7              ;	_de la 2ª y 3ª entidad respectivamente.
634   87D7
635   87D7              Store_Restore_entidades
636   87D7
637   87D7 E5           	push hl
638   87D8 D5           	push de
639   87D9 C5            	push bc
640   87DA
641   87DA              ;	STORE !!!!!
642   87DA              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
643   87DA
644   87DA 21 96 85     	ld hl,Filas
645   87DD ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
646   87E1 01 3A 00     	ld bc,58
647   87E4 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
648   87E6
649   87E6              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
650   87E6
651   87E6 2A D3 85     	ld hl,(Puntero_restore_entidades)
652   87E9 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
653   87EC 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
654   87EF 01 3A 00     	ld bc,58
655   87F2 ED B0        	ldir
656   87F4
657   87F4              ;	Incrementa RESTORE !!!!!
658   87F4
659   87F4 2A D5 85         ld hl,(Indice_restore)
660   87F7 23           	inc hl
661   87F8 23           	inc hl
662   87F9 22 D5 85     	ld (Indice_restore),hl
663   87FC CD 89 87         call Extrae_address
664   87FF 22 D3 85         ld (Puntero_restore_entidades),hl
665   8802 C1           	pop bc
666   8803 D1           	pop de
667   8804 E1           	pop hl
668   8805 C9           	ret
669   8806
670   8806              ; **************************************************************************************************
671   8806              ;
672   8806              ;	29/10/22
673   8806              ;
674   8806              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
675   8806
676   8806 E5           Restore_Primera_entidad push hl
677   8807 D5           	push de
678   8808 C5            	push bc
679   8809 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
680   880C 11 96 85     	ld de,Filas
681   880F 01 3A 00     	ld bc,58
682   8812 ED B0        	ldir
683   8814 C1           	pop bc
684   8815 D1           	pop de
685   8816 E1           	pop hl
686   8817 C9           	ret
687   8818
688   8818              ; **************************************************************************************************
689   8818              ;
690   8818              ;	25/01/23
691   8818              ;
692   8818              ;	Restore_Amadeus
693   8818              ;
694   8818              ;	Cargamos en DRAW los parámetros de Amadeus.
695   8818              ;
696   8818
697   8818 E5           Restore_Amadeus	push hl
698   8819 D5           	push de
699   881A C5            	push bc
700   881B 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
701   881E 11 96 85     	ld de,Filas
702   8821 01 3A 00     	ld bc,58
703   8824 ED B0        	ldir
704   8826 C1           	pop bc
705   8827 D1           	pop de
706   8828 E1           	pop hl
707   8829 C9           	ret
708   882A
709   882A              ; *************************************************************************************************************************************************************
710   882A              ;
711   882A              ;	29/01/23
712   882A              ;
713   882A              ;	Store_Amadeus
714   882A              ;
715   882A              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
716   882A              ;
717   882A
718   882A E5           Store_Amadeus push hl
719   882B D5           	push de
720   882C C5            	push bc
721   882D 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
722   8830 11 74 84     	ld de,Amadeus_db
723   8833 01 3A 00     	ld bc,58
724   8836 ED B0        	ldir
725   8838 C1           	pop bc
726   8839 D1           	pop de
727   883A E1           	pop hl
728   883B C9           	ret
729   883C
730   883C              ; **************************************************************************************************
731   883C
732   883C              ; Teclado.
733   883C
734   883C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
735   883E DB FE        	in a,($fe)
736   8840 E6 01        	and $01
737   8842 28 02        	jr z,1f
738   8844 18 F6        	jr Pulsa_ENTER
739   8846 C9           1 ret
740   8847
741   8847              ; **************************************************************************************************
742   8847              ;
743   8847              ; Temporización.
744   8847
745   8847              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
746   8847              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
747   8847              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
748   8847              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
749   8847
750   8847              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
751   8847              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
752   8847              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
753   8847
754   8847              ; A partir de $4f61 no hace falta DELAY.
755   8847
756   8847              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
757   8847
758   8847 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
759   884A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
760   884B 78           	LD A,B
761   884C A7           	AND A
762   884D 20 FB        	JR NZ,wait
763   884F C9           	RET
764   8850
765   8850              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
766   8850              ;
767   8850              ;	5/3/23
768   8850              ;
769   8850              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
770   8850
771   8850              Movimiento_Amadeus
772   8850
773   8850              ; Disparo.
774   8850
775   8850 3E F7        	ld a,$f7												; "5" para disparar.
776   8852 DB FE        	in a,($fe)
777   8854 E6 10        	and $10
778   8856 CC A7 88     	call z,Genera_disparo
779   8859
780   8859 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
781   885B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
782   885D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
783   885F CC 58 92         call z,Mov_left											;			"			"			"			"			"			"			"			"
784   8862 3E F7        	ld a,$f7
785   8864 DB FE        	in a,($fe)
786   8866 E6 01        	and $01
787   8868 C8           	ret z
788   8869
789   8869 3E F7        	ld a,$f7
790   886B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
791   886D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
792   886F CC 3A 91     	call z,Mov_right										;			"			"			"			"			"			"			"			"
793   8872 C9           	ret
794   8873
795   8873              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
796   8873              ;
797   8873              ;	Rutina provisional para que los malotes cagen balas.
798   8873
799   8873 3E 7F        Detecta_disparo_entidad ld a,$7f
800   8875 DB FE        	in a,($fe)
801   8877 E6 01        	and 1
802   8879 C0           	ret nz
803   887A CD A7 88     	call Genera_disparo
804   887D C9           	ret
805   887E
806   887E              ; Pinta indicadores de FILAS. ------------------------------------------------------
807   887E
808   887E 21 10 40     Pinta_FILAS ld hl,$4010
809   8881              ;	ld b,9
810   8881              ;2 push hl
811   8881              ;	push bc
812   8881 06 BF        	ld b,$bf
813   8883 36 80        1 ld (hl),%10000000
814   8885 CD 00 8E     	call NextScan
815   8888 10 F9        	djnz 1B
816   888A              ;	pop bc
817   888A              ;	pop hl
818   888A              ;	inc l
819   888A              ;	djnz 2B
820   888A 06 03        	ld b,3
821   888C 21 00 47         ld hl,$4700
822   888F CD 95 88     3 call Bucle_1
823   8892 10 FB            djnz 3B
824   8894 C9               ret
825   8895
826   8895 C5           Bucle_1 push bc
827   8896 E5                   push hl
828   8897 D1                   pop de
829   8898 13                   inc de
830   8899 01 FF 00             ld bc,255
831   889C 36 FF                ld (hl),255
832   889E ED B0                ldir
833   88A0 23                   inc hl
834   88A1 3E 07                ld a,7
835   88A3 84                   add a,h
836   88A4 67                   ld h,a
837   88A5 C1                   pop bc
838   88A6 C9                   ret
839   88A7
840   88A7              ; ---------------------------------------------------------------
841   88A7
842   88A7              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88A7              ; ******************************************************************************************************************************************************************************************
  2+  88A7              ;
  3+  88A7              ;   19/02/23
  4+  88A7              ;
  5+  88A7              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88A7              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88A7              ;
  8+  88A7              ;
  9+  88A7              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88A7              ;
 11+  88A7              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88A7              ;               _ hacen las entidades hacia abajo.
 13+  88A7              ;
 14+  88A7              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88A7              ;
 16+  88A7              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88A7              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88A7              ;
 19+  88A7              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88A7              ;           _ la bala.
 21+  88A7              ;
 22+  88A7              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88A7              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88A7              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88A7              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88A7              ;           _ en el momento de generarse la bala)).
 27+  88A7
 28+  88A7              Genera_disparo
 29+  88A7
 30+  88A7              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88A7              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88A7              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88A7              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88A7              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88A7              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88A7              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88A7
 38+  88A7              ; Exclusiones:
 39+  88A7
 40+  88A7 3A CC 85         ld a,(Columnas)
 41+  88AA 47               ld b,a
 42+  88AB 3A 97 85         ld a,(Columns)
 43+  88AE B8               cp b
 44+  88AF C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88B0
 46+  88B0              ; ----- ----- -----
 47+  88B0
 48+  88B0              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 49+  88B0
 50+  88B0 21 F2 83         ld hl,ON_Disparo_2A
 51+  88B3 CD 89 87         call Extrae_address
 52+  88B6 24               inc h
 53+  88B7 25               dec h
 54+  88B8 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
 55+  88BA
 56+  88BA 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 57+  88BD A7               and a
 58+  88BE ED 52            sbc hl,de
 59+  88C0 D0               ret nc
 60+  88C1
 61+  88C1              ; ----- ----- -----
 62+  88C1
 63+  88C1 21 00 80     14 ld hl,Indice_disparo
 64+  88C4 3A 9E 85         ld a,(CTRL_DESPLZ)
 65+  88C7 4F               ld c,a
 66+  88C8 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 67+  88CA              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 68+  88CA              ;                                            ""        ""       "f9", B="1"
 69+  88CA              ;                                            ""        ""       "fb", B="2"
 70+  88CA              ;                                            ""        ""       "fb", B="3"
 71+  88CA A7               and a
 72+  88CB 28 10            jr z,1F
 73+  88CD E6 01            and 1
 74+  88CF C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 75+  88D0
 76+  88D0 79               ld a,c
 77+  88D1 16 F9            ld d,$f9
 78+  88D3 23           2 inc hl
 79+  88D4 23               inc hl
 80+  88D5 04               inc b
 81+  88D6 BA               cp d
 82+  88D7 28 04            jr z,1F
 83+  88D9 14               inc d
 84+  88DA 14               inc d
 85+  88DB 18 F6            jr 2B
 86+  88DD
 87+  88DD CD 89 87     1 call Extrae_address
 88+  88E0 E5               push hl
 89+  88E1 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 90+  88E3 DD 21 93 90  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 91+  88E7
 92+  88E7              ;	Se cumplen las condiciones necesarias para generar un disparo.
 93+  88E7              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 94+  88E7
 95+  88E7 3A AA 85     	ld a,(Cuad_objeto)
 96+  88EA FE 02            cp 2
 97+  88EC 38 60            jr c,3F
 98+  88EE 28 5E            jr z,3F
 99+  88F0
100+  88F0              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
101+  88F0
102+  88F0 E6 01            and 1
103+  88F2 28 2D            jr z,4F
104+  88F4
105+  88F4              ; 	Estamos en el 3er cuadrante de pantalla.
106+  88F4              ; 	3er CUAD. ----- ----- ----- ----- -----
107+  88F4              ;
108+  88F4              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
109+  88F4              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
110+  88F4              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
111+  88F4
112+  88F4 2A 98 85     	ld hl,(Posicion_actual)
113+  88F7
114+  88F7              ;   Amadeus o entidad ???.
115+  88F7
116+  88F7 3A C3 85         ld a,(Ctrl_0)
117+  88FA CB 77            bit 6,a
118+  88FC 28 0D            jr z,8F
119+  88FE
120+  88FE              ; 	Dispara Amadeus.
121+  88FE
122+  88FE 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
123+  8900 CD 0F 8E         call PreviousScan
124+  8903 CD 0F 8E         call PreviousScan
125+  8906
126+  8906              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
127+  8906              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
128+  8906              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
129+  8906              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
130+  8906
131+  8906 CD 78 89         call Ajusta_disparo_parte_izquierda
132+  8909 18 0E            jr 10F
133+  890B
134+  890B              ; 	Dispara Entidad.
135+  890B
136+  890B 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
137+  890D
138+  890D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
139+  890D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
140+  890D
141+  890D C5               push bc
142+  890E 06 10            ld b,16
143+  8910 CD 00 8E     9 call NextScan
144+  8913 10 FB            djnz 9B
145+  8915 C1               pop bc
146+  8916
147+  8916              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
148+  8916              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
149+  8916              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
150+  8916              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
151+  8916
152+  8916 CD 78 89         call Ajusta_disparo_parte_izquierda
153+  8919
154+  8919 CD ED 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
155+  891C              ;                                                   ; _al generar el disparo.
156+  891C
157+  891C              ; 	LLegados a este punto tendremos:
158+  891C              ;
159+  891C              ;       Puntero_objeto_disparo en IY.
160+  891C              ;       Rutinas_de_impresion en IX.
161+  891C              ;       Puntero_de_impresion en HL.
162+  891C              ;       Impacto/Dirección en BC.
163+  891C
164+  891C CD 80 89         call Almacena_disparo
165+  891F 18 4F            jr 6F                                           ; RET.
166+  8921
167+  8921
168+  8921              ; 	Estamos en el 4º cuadrante de pantalla.
169+  8921              ; 	4º CUAD. ----- ----- ----- ----- -----
170+  8921              ;
171+  8921              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
172+  8921              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
173+  8921              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
174+  8921
175+  8921 2A 98 85     4 ld hl,(Posicion_actual)
176+  8924
177+  8924              ;   Amadeus o entidad ???.
178+  8924
179+  8924 3A C3 85         ld a,(Ctrl_0)
180+  8927 CB 77            bit 6,a
181+  8929 28 0D            jr z,11F
182+  892B
183+  892B              ; 	Dispara Amadeus.
184+  892B
185+  892B 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
186+  892D CD 0F 8E         call PreviousScan
187+  8930 CD 0F 8E         call PreviousScan
188+  8933
189+  8933              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
190+  8933              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
191+  8933              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
192+  8933              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
193+  8933
194+  8933 CD 71 89         call Ajusta_disparo_parte_derecha
195+  8936 18 0E            jr 13F
196+  8938
197+  8938              ; 	Dispara Entidad.
198+  8938
199+  8938 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
200+  893A
201+  893A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
202+  893A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
203+  893A
204+  893A C5               push bc
205+  893B
206+  893B 06 10            ld b,16
207+  893D CD 00 8E     12 call NextScan
208+  8940 10 FB            djnz 12B
209+  8942
210+  8942 C1               pop bc
211+  8943
212+  8943              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
213+  8943              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
214+  8943              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
215+  8943              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
216+  8943
217+  8943 CD 71 89         call Ajusta_disparo_parte_derecha
218+  8946
219+  8946 CD ED 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
220+  8949              ;                                                     ; _al generar el disparo.
221+  8949
222+  8949              ; LLegados a este punto tendremos:
223+  8949              ;
224+  8949              ;       Puntero_objeto_disparo en IY.
225+  8949              ;       Rutinas_de_impresion en IX.
226+  8949              ;       Puntero_de_impresion en HL.
227+  8949              ;       Impacto/Dirección en BC.
228+  8949
229+  8949 CD 80 89         call Almacena_disparo
230+  894C 18 22            jr 6F                                           ; RET.
231+  894E
232+  894E              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
233+  894E
234+  894E 28 11        3 jr z,5F
235+  8950
236+  8950              ; 	1er CUAD. ----- ----- ----- ----- -----
237+  8950              ;
238+  8950              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
239+  8950              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
240+  8950              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
241+  8950              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
242+  8950
243+  8950              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
244+  8950              ;	   ""        ""       "f9", B="1"
245+  8950              ;	   ""        ""       "fb", B="2"
246+  8950              ; 	   ""        ""       "fb", B="3"
247+  8950
248+  8950 2A 98 85     	ld hl,(Posicion_actual)
249+  8953 CD 00 8E     	call NextScan
250+  8956
251+  8956              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
252+  8956              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
253+  8956              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
254+  8956              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
255+  8956
256+  8956 CD 78 89         call Ajusta_disparo_parte_izquierda
257+  8959
258+  8959              ; 	No se produce impacto. B="$80"
259+  8959              ; 	Dirección del proyectil hacia abajo. C="$80"
260+  8959
261+  8959 01 80 80         ld bc,$8080
262+  895C
263+  895C              ; 	LLegados a este punto tendremos:
264+  895C              ;
265+  895C              ;       Puntero_objeto_disparo en IY.
266+  895C              ;       Rutinas_de_impresion en IX.
267+  895C              ;       Puntero_de_impresion en HL.
268+  895C              ;       Impacto/Dirección en BC.
269+  895C
270+  895C CD 80 89         call Almacena_disparo
271+  895F 18 0F            jr 6F                                           ; RET.
272+  8961
273+  8961              ; 	Estamos en el 2º cuadrante de pantalla.
274+  8961              ; 	2º CUAD. ----- ----- ----- ----- -----
275+  8961              ;
276+  8961              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
277+  8961              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
278+  8961              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
279+  8961              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
280+  8961
281+  8961 2A 98 85     5 ld hl,(Posicion_actual)
282+  8964 CD 00 8E     	call NextScan
283+  8967
284+  8967              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
285+  8967              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
286+  8967              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
287+  8967              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
288+  8967
289+  8967 CD 71 89         call Ajusta_disparo_parte_derecha
290+  896A
291+  896A              ; 	No se produce impacto. B="$80"
292+  896A              ; 	Dirección del proyectil hacia abajo. C="80"
293+  896A
294+  896A 01 80 80     15 ld bc,$8080
295+  896D
296+  896D              ; 	LLegados a este punto tendremos:
297+  896D              ;
298+  896D              ;       Puntero_objeto_disparo en IY.
299+  896D              ;       Rutinas_de_impresion en IX.
300+  896D              ;       Puntero_de_impresion en HL.
301+  896D              ;       Impacto/Dirección en BC.
302+  896D
303+  896D CD 80 89         call Almacena_disparo
304+  8970
305+  8970 C9           6 ret
306+  8971
307+  8971              ; ----------------------------------------------------------------
308+  8971              ;
309+  8971              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
310+  8971              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
311+  8971              ;	_ (lado izq. o derecho), de la entidad que lo genera.
312+  8971
313+  8971 78           Ajusta_disparo_parte_derecha ld a,b
314+  8972 FE 02            cp 2
315+  8974 38 01            jr c,1F
316+  8976 23               inc hl
317+  8977 C9           1 ret
318+  8978
319+  8978 78           Ajusta_disparo_parte_izquierda ld a,b
320+  8979 FE 01        	cp 1
321+  897B 20 01        	jr nz,1F
322+  897D 2B           	dec hl
323+  897E 2B           1 dec hl
324+  897F C9               ret
325+  8980
326+  8980              ; ----------------------------------------------------------------
327+  8980              ;
328+  8980              ;   25/02/23
329+  8980              ;
330+  8980              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
331+  8980              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
332+  8980
333+  8980              Almacena_disparo
334+  8980
335+  8980 E5               push hl  										; HL contiene el puntero de impresión.
336+  8981 F1               pop af
337+  8982 08               ex af,af                                        ; Puntero_de_impresion en AF'.
338+  8983
339+  8983 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
340+  8984 E6 01            and 1
341+  8986 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
342+  8988              ;                                                   ; _ es Amadeus o una entidad la que dispara.
343+  8988              ; 	Dispara AMADEUS.
344+  8988
345+  8988              ;	Comprobamos que a Amadeus aún le quedan disparos.
346+  8988              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
347+  8988              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
348+  8988              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
349+  8988
350+  8988 C5               push bc
351+  8989 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
352+  898C 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
353+  898F A7               and a
354+  8990 ED 42            sbc hl,bc
355+  8992 CC 52 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
356+  8995 C1               pop bc
357+  8996 28 54            jr z,4F
358+  8998
359+  8998 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
360+  899B 23               inc hl
361+  899C 23               inc hl
362+  899D 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
363+  89A0              ;                                                   ; _ Disparo_(+1).
364+  89A0 18 18            jr 2F
365+  89A2
366+  89A2              ; Dispara una entidad.
367+  89A2
368+  89A2 C5           1 push bc
369+  89A3 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
370+  89A6 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
371+  89A9 A7               and a
372+  89AA ED 42            sbc hl,bc
373+  89AC CC 4B 87         call z,Inicia_Puntero_Disparo_Entidades
374+  89AF C1               pop bc
375+  89B0 28 3A            jr z,4F
376+  89B2
377+  89B2 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
378+  89B5 23               inc hl
379+  89B6 23               inc hl
380+  89B7 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
381+  89BA              ;                                                   ; _ Disparo_(+1).
382+  89BA CD 89 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
383+  89BD              ;                                                   ; _ los 8 bytes que definen el disparo:
384+  89BD              ;
385+  89BD              ;                                                     Puntero_objeto_disparo en IY.
386+  89BD              ;                                                     Rutinas_de_impresion en IX.
387+  89BD              ;                                                     Puntero_de_impresion en HL.
388+  89BD              ;                                                     Impacto/Dirección en BC.
389+  89BD
390+  89BD 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
391+  89BE 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
392+  89BF 23               inc hl                                          ; _ al siguiente.
393+  89C0 A7               and a
394+  89C1 20 C0            jr nz,3B
395+  89C3
396+  89C3 08               ex af,af
397+  89C4 ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
398+  89C8 F9               ld sp,hl
399+  89C9
400+  89C9 DD E5            push ix                                         ; Rutina de impresión.
401+  89CB F5               push af                                         ; Puntero de impresión.
402+  89CC FD E5            push iy                                         ; Puntero objeto.
403+  89CE C5               push bc                                         ; Control.
404+  89CF
405+  89CF ED 7B D9 85      ld sp,(Stack)
406+  89D3
407+  89D3              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
408+  89D3
409+  89D3 21 D0 85     	ld hl,Ctrl_1
410+  89D6 CB C6        	set 0,(hl)
411+  89D8
412+  89D8 DD E5        	push ix
413+  89DA E1               pop hl
414+  89DB F5               push af
415+  89DC DD E1            pop ix
416+  89DE
417+  89DE CD A0 7F     	call Guarda_foto_registros
418+  89E1
419+  89E1 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
420+  89E4 CB 86        	res 0,(hl)
421+  89E6
422+  89E6              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
423+  89E6              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
424+  89E6
425+  89E6 CD 52 87         call Inicia_Puntero_Disparo_Amadeus
426+  89E9 CD 4B 87         call Inicia_Puntero_Disparo_Entidades
427+  89EC
428+  89EC C9           4 ret
429+  89ED
430+  89ED              ; ----------------------------------------------------------------
431+  89ED              ;
432+  89ED              ;   4/3/23
433+  89ED              ;
434+  89ED              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
435+  89ED              ;   _ al generarse el disparo.
436+  89ED              ;
437+  89ED              ;       "$80" ..... No se produce colisión.
438+  89ED              ;       "$81" ..... Se produce colisión.
439+  89ED
440+  89ED              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
441+  89ED              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
442+  89ED
443+  89ED
444+  89ED FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
445+  89EF E5               push hl                                        ; Puntero de impresión.
446+  89F0 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
447+  89F2 CD 04 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
448+  89F5 E1               pop hl
449+  89F6 E5               push hl
450+  89F7 CD 00 8E         call NextScan
451+  89FA 1E 80            ld e,$80                                       ; ----- ( ) -----
452+  89FC CD 04 8A         call Bucle_2
453+  89FF
454+  89FF              ; Hay impacto.
455+  89FF
456+  89FF 43           2 ld b,e
457+  8A00 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
458+  8A01 FD E1            pop iy
459+  8A03 C9               ret
460+  8A04
461+  8A04               ; ---------- ----------
462+  8A04
463+  8A04 06 02        Bucle_2 ld b,2
464+  8A06 FD 7E 00     2 ld a,(iy)
465+  8A09 A6               and (hl)
466+  8A0A 28 02            jr z,1F
467+  8A0C 1E 81            ld e,$81
468+  8A0E 23           1 inc hl
469+  8A0F FD 23            inc iy
470+  8A11 10 F3            djnz 2B
471+  8A13 C9               ret
472+  8A14
473+  8A14              ; -------------------------------------------------------------------------------------------------------------
474+  8A14              ;
475+  8A14              ;   13/03/23
476+  8A14              ;
477+  8A14              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
478+  8A14              ;
479+  8A14              ;   DESTRUYE: HL,BC,DE y A.
480+  8A14
481+  8A14 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
482+  8A17 7E               ld a,(hl)
483+  8A18 A7               and a
484+  8A19 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
485+  8A1A
486+  8A1A 44               ld b,h
487+  8A1B 4D               ld c,l
488+  8A1C 2A DF 85         ld hl,(Stack_snapshot_disparos)
489+  8A1F E5               push hl
490+  8A20 A7               and a
491+  8A21 ED 42            sbc hl,bc
492+  8A23 E5               push hl
493+  8A24 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
494+  8A25
495+  8A25 E1               pop hl
496+  8A26 54               ld d,h
497+  8A27 5D               ld e,l
498+  8A28 1B               dec de
499+  8A29 ED B8            lddr                                                ; Limpiamos.
500+  8A2B
501+  8A2B 21 60 70         ld hl,Album_de_fotos_disparos
502+  8A2E 22 DF 85         ld (Stack_snapshot_disparos),hl
503+  8A31
504+  8A31 C9               ret
505+  8A32
506+  8A32              ; -------------------------------------------------------------------------------------------------------------
507+  8A32              ;
508+  8A32              ;   14/03/23
509+  8A32              ;
510+  8A32
511+  8A32 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
512+  8A35 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
513+  8A38
514+  8A38 CD 89 87     2 call Extrae_address
515+  8A3B 7E               ld a,(hl)
516+  8A3C A7               and a
517+  8A3D 28 16            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
518+  8A3F
519+  8A3F              ; ----- ----- ----- ----- ----- -----
520+  8A3F
521+  8A3F C5               push bc
522+  8A40 CD 9B 8A         call foto_disparo_a_borrar
523+  8A43
524+  8A43              ; Existe colisión con este disparo???
525+  8A43
526+  8A43 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
527+  8A44 7E               ld a,(hl)
528+  8A45 2B               dec hl
529+  8A46 E6 01            and 1
530+  8A48 28 02            jr z,9F
531+  8A4A
532+  8A4A              ; Elimino el disparo de la base de datos.
533+  8A4A
534+  8A4A 18 FE            jr $
535+  8A4C
536+  8A4C CD C4 8A     9 call Mueve_disparo
537+  8A4F CD 9B 8A         call foto_disparo_a_borrar
538+  8A52 C1               pop bc
539+  8A53
540+  8A53 18 04            jr 7F
541+  8A55
542+  8A55              ; ----- ----- ----- ----- ----- -----
543+  8A55
544+  8A55 ED 42        1 sbc hl,bc
545+  8A57 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
546+  8A59
547+  8A59 2A E4 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
548+  8A5C 23               inc hl
549+  8A5D 23               inc hl
550+  8A5E 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
551+  8A61 18 D5            jr 2B
552+  8A63
553+  8A63 CD 52 87     3 call Inicia_Puntero_Disparo_Amadeus
554+  8A66
555+  8A66 01 66 84         ld bc,Disparo_11
556+  8A69 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
557+  8A6C
558+  8A6C CD 89 87     5 call Extrae_address
559+  8A6F 7E               ld a,(hl)
560+  8A70 A7               and a
561+  8A71 28 16            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
562+  8A73
563+  8A73              ; ----- ----- ----- ----- ----- -----
564+  8A73
565+  8A73 C5               push bc
566+  8A74
567+  8A74 CD 9B 8A         call foto_disparo_a_borrar
568+  8A77
569+  8A77              ; Existe colisión con este disparo???
570+  8A77
571+  8A77 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
572+  8A78 7E               ld a,(hl)
573+  8A79 2B               dec hl
574+  8A7A E6 01            and 1
575+  8A7C 28 02            jr z,10F
576+  8A7E
577+  8A7E              ; Elimino el disparo de la base de datos.
578+  8A7E
579+  8A7E 18 FE            jr $
580+  8A80
581+  8A80 CD C4 8A     10 call Mueve_disparo
582+  8A83 CD 9B 8A         call foto_disparo_a_borrar
583+  8A86 C1               pop bc
584+  8A87
585+  8A87 18 04            jr 8F
586+  8A89
587+  8A89              ; ----- ----- ----- ----- ----- -----
588+  8A89
589+  8A89 ED 42        4 sbc hl,bc
590+  8A8B 28 0A            jr z,6F
591+  8A8D
592+  8A8D 2A E2 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
593+  8A90 23               inc hl
594+  8A91 23               inc hl
595+  8A92 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
596+  8A95 18 D5            jr 5B
597+  8A97
598+  8A97 CD 4B 87     6 call Inicia_Puntero_Disparo_Entidades
599+  8A9A C9               ret
600+  8A9B
601+  8A9B              ; ------------------------------------------------------------------
602+  8A9B
603+  8A9B              foto_disparo_a_borrar
604+  8A9B
605+  8A9B 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
606+  8A9C A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
607+  8A9D C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
608+  8A9E
609+  8A9E E5               push hl
610+  8A9F 23               inc hl
611+  8AA0 23               inc hl
612+  8AA1 ED 73 D9 85      ld (Stack),sp
613+  8AA5 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
614+  8AA6 FD E1            pop iy
615+  8AA8 DD E1            pop ix
616+  8AAA E1               pop hl
617+  8AAB ED 7B D9 85      ld sp,(Stack)
618+  8AAF 3A D0 85         ld a,(Ctrl_1)
619+  8AB2 CB C7            set 0,a
620+  8AB4 32 D0 85         ld (Ctrl_1),a
621+  8AB7 CD A0 7F         call Guarda_foto_registros
622+  8ABA 3A D0 85         ld a,(Ctrl_1)
623+  8ABD CB 87            res 0,a
624+  8ABF 32 D0 85         ld (Ctrl_1),a
625+  8AC2 E1               pop hl
626+  8AC3 C9               ret
627+  8AC4
628+  8AC4 E5           Mueve_disparo push hl
629+  8AC5 7E               ld a,(hl)
630+  8AC6 06 04            ld b,4
631+  8AC8 23           1 inc hl
632+  8AC9 10 FD            djnz 1B
633+  8ACB
634+  8ACB CD 89 87         call Extrae_address
635+  8ACE
636+  8ACE E6 01            and 1
637+  8AD0 28 24            jr z,2F
638+  8AD2
639+  8AD2              ; Disparo hacia arriba, (Amadeus).
640+  8AD2
641+  8AD2              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
642+  8AD2              ; _ de la dificultad.
643+  8AD2
644+  8AD2 CD 0F 8E         call PreviousScan
645+  8AD5 CD 0F 8E         call PreviousScan
646+  8AD8 CD 0F 8E         call PreviousScan
647+  8ADB
648+  8ADB              ; Detecta si el disparo de Amadeus sale de pantalla:
649+  8ADB
650+  8ADB 7C               ld a,h
651+  8ADC FE 40            cp $40
652+  8ADE 30 05            jr nc,3F
653+  8AE0
654+  8AE0              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
655+  8AE0
656+  8AE0 CD 09 8B         call Elimina_disparo_de_base_de_datos
657+  8AE3 18 0C            jr 4F
658+  8AE5
659+  8AE5              ; Se ha desplazado la bala, compruebo colisión.
660+  8AE5
661+  8AE5 D5           3 push de
662+  8AE6 C5               push bc
663+  8AE7 CD ED 89         call Comprueba_Colision
664+  8AEA 78               ld a,b
665+  8AEB C1               pop bc
666+  8AEC D1               pop de
667+  8AED
668+  8AED EB               ex de,hl
669+  8AEE
670+  8AEE 73               ld (hl),e
671+  8AEF 23               inc hl
672+  8AF0 72               ld (hl),d
673+  8AF1
674+  8AF1 E1           4 pop hl
675+  8AF2 23               inc hl
676+  8AF3 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
677+  8AF4 2B               dec hl
678+  8AF5 C9               ret
679+  8AF6
680+  8AF6              ; Disparo hacia abajo, (Entidad).
681+  8AF6
682+  8AF6              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
683+  8AF6              ; _ de la dificultad.
684+  8AF6
685+  8AF6 CD 00 8E     2 call NextScan
686+  8AF9 CD 00 8E         call NextScan
687+  8AFC CD 00 8E         call NextScan
688+  8AFF
689+  8AFF                ; Detecta si el disparo de la entidad sale de la pantalla.
690+  8AFF
691+  8AFF 7C               ld a,h
692+  8B00 FE 58            cp $58
693+  8B02 38 E1            jr c,3B
694+  8B04
695+  8B04 CD 09 8B         call Elimina_disparo_de_base_de_datos
696+  8B07 18 E8            jr 4B
697+  8B09
698+  8B09
699+  8B09              Elimina_disparo_de_base_de_datos
700+  8B09
701+  8B09              ;    jr $
702+  8B09
703+  8B09 EB               ex de,hl
704+  8B0A 06 04            ld b,4
705+  8B0C 2B           1 dec hl
706+  8B0D 10 FD            djnz 1B
707+  8B0F 01 07 00         ld bc,7
708+  8B12
709+  8B12 AF               xor a
710+  8B13 77               ld (hl),a
711+  8B14 54               ld d,h
712+  8B15 5D               ld e,l
713+  8B16 13               inc de
714+  8B17
715+  8B17 ED B0            ldir
716+  8B19
717+  8B19 C9               ret
# file closed: Disparo.asm
843   8B1A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8B1A              ; ******************************************************************************************************************************************************************************************
  2+  8B1A              ;
  3+  8B1A              ; 01/23
  4+  8B1A              ;
  5+  8B1A              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8B1A
  7+  8B1A CD F4 8D     Draw call Prepara_draw
  8+  8B1D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8B1E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8B1F 28 05        	jr z,2F
 11+  8B21
 12+  8B21 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8B24 18 0C        	jr 1F
 14+  8B26 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8B29 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8B2C CD BB 8C     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8B2F              ;													; _la esquina superior izquierda de la pantalla.
 18+  8B2F CD 29 95     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8B32 3A C3 85     1 ld a,(Ctrl_0)
 20+  8B35 CB 6F        	bit 5,a
 21+  8B37 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8B39
 23+  8B39 CD 51 8B     	call Comprueba_limite_horizontal
 24+  8B3C CD E1 8B     	call Comprueba_limite_vertical
 25+  8B3F
 26+  8B3F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8B3F
 28+  8B3F CD 2E 8D     3 call calcula_CColumnass
 29+  8B42 CD 65 8D     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8B45 CD BA 8D     	call Define_rutina_de_impresion
 31+  8B48
 32+  8B48 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8B4B CB AF        	res 5,a											; _a ser de utilidad.
 34+  8B4D 32 C3 85     	ld (Ctrl_0),a
 35+  8B50
 36+  8B50 C9           	ret
 37+  8B51
 38+  8B51              ; *******************************************************************************************************************************************************************************************
 39+  8B51              ;	21/01/23
 40+  8B51              ;
 41+  8B51              ; 	Comprueba_limite_horizontal.
 42+  8B51              ;
 43+  8B51              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8B51              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8B51              ;
 46+  8B51              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8B51              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8B51              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8B51              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8B51
 51+  8B51
 52+  8B51
 53+  8B51 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8B54 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8B56 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8B58 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8B5A 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8B5D 18 09            jr 6F
 59+  8B5F CB 5F        1 bit 3,a
 60+  8B61 28 0A            jr z,2F
 61+  8B63 E6 F7            and $f7
 62+  8B65 32 C3 85         ld (Ctrl_0),a
 63+  8B68 CD BB 8C     6 call Inicializacion
 64+  8B6B 18 5B            jr 5F
 65+  8B6D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8B6E
 67+  8B6E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8B6E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8B6E
 70+  8B6E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8B6F 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8B72 CD C0 90     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8B75 67           	ld h,a
 74+  8B76 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8B77 CD C0 90     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8B7A 67           	ld h,a
 77+  8B7B A7           	and a
 78+  8B7C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8B7E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8B7F 3A AA 85     	ld a,(Cuad_objeto)
 81+  8B82 FE 02        	cp 2
 82+  8B84 38 1E        	jr c,3F
 83+  8B86 28 1C        	jr z,3F
 84+  8B88 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8B89 28 23            jr z,7F
 86+  8B8B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8B8D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8B8F E1           	pop hl
 89+  8B90
 90+  8B90              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8B90              ; _para indicar con E="2" en caso necesario.
 92+  8B90
 93+  8B90 E5               push hl
 94+  8B91 C5               push bc
 95+  8B92 CD C0 90     	call calcula_tercio
 96+  8B95 FE 01        	cp 1
 97+  8B97 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8B99 CD C9 8B         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8B9C 28 26            jr z,9F
100+  8B9E 38 24            jr c,9F
101+  8BA0 1E 00        11 ld e,0
102+  8BA2 18 22            jr 8F
103+  8BA4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8BA5 28 07        	jr z, 7F
105+  8BA7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8BA9 1E 00         	ld e,0
107+  8BAB E1           	pop hl
108+  8BAC 18 04        	jr 4F
109+  8BAE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8BB0 18 15            jr 10F
111+  8BB2
112+  8BB2              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8BB2              ; _para indicar con E="2" en caso necesario.
114+  8BB2
115+  8BB2 E5           4 push hl
116+  8BB3 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8BB4 CD C0 90     	call calcula_tercio
118+  8BB7 FE 01        	cp 1
119+  8BB9 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8BBB CD C9 8B         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8BBE 28 04            jr z,9F
122+  8BC0 30 02            jr nc,9F
123+  8BC2 18 02        	jr 8F
124+  8BC4 1E 02        9 ld e,2
125+  8BC6 C1           8 pop bc
126+  8BC7 E1           10 pop hl
127+  8BC8 C9           5 ret
128+  8BC9
129+  8BC9              ; --------------------
130+  8BC9              ;
131+  8BC9              ; 25/08/22
132+  8BC9
133+  8BC9 CD C0 90     Comprueba_centro call calcula_tercio
134+  8BCC 67               ld h,a
135+  8BCD 08           	ex af,af
136+  8BCE FE 02        	cp 2
137+  8BD0 38 07        	jr c,1F
138+  8BD2 28 05        	jr z,1F
139+  8BD4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8BD7 18 03        	jr 2F
141+  8BD9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8BDC 08           2 ex af,af
143+  8BDD A7               and a
144+  8BDE ED 42            sbc hl,bc
145+  8BE0 C9               ret
146+  8BE1
147+  8BE1              ; *********************************************************************************************************************************************************************************************
148+  8BE1              ;
149+  8BE1              ;   16/8/22
150+  8BE1              ;
151+  8BE1              ;	Comprueba_limite_vertical
152+  8BE1              ;
153+  8BE1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8BE1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8BE1              ;
156+  8BE1
157+  8BE1 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8BE4 7D           	ld a,l
159+  8BE5 E6 1F        	and $1F
160+  8BE7 57           	ld d,a
161+  8BE8 3A CF 85     	ld a,(Limite_vertical)
162+  8BEB BA           	cp d 											; Límite - Posición.
163+  8BEC 08           	ex af,af 										; Resultado de CP d en F'.
164+  8BED 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8BF0 CB 47        	bit 0,a
166+  8BF2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8BF4
168+  8BF4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8BF4
170+  8BF4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8BF5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8BF7
173+  8BF7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8BF7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8BF7
176+  8BF7 3A 9C 85         ld a,(Coordenada_X)
177+  8BFA 16 0F            ld d,Centro_izquierda
178+  8BFC A7               and a
179+  8BFD 92               sub d 											 ; Posición - Centro_izquierda.
180+  8BFE 28 1E            jr z,3F
181+  8C00 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8C02              ;                                                    ; _salimos sin modificar nada.
183+  8C02 18 0E            jr 2F
184+  8C04 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8C05 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8C07
187+  8C07              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8C07              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8C07
190+  8C07 3A 9C 85         ld a,(Coordenada_X)
191+  8C0A 16 10            ld d,Centro_derecha
192+  8C0C A7               and a
193+  8C0D 92               sub d
194+  8C0E 28 0E            jr z,3F
195+  8C10 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8C12              ;                                                    ; _salimos sin modificar nada.
197+  8C12 CB 43        2 bit 0,e
198+  8C14 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8C16 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8C17 CD AB 8C         call Modificaccionne
201+  8C1A C1           	pop bc
202+  8C1B CD BB 8C         call Inicializacion
203+  8C1E C9           3 ret 				 								 ; Salimos de la rutina.
204+  8C1F
205+  8C1F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8C1F
207+  8C1F C5           4 push bc
208+  8C20 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8C23 0A           	ld a,(bc)
210+  8C24 3D           	dec a
211+  8C25 47           	ld b,a 											 ; Columnas-1 en B.
212+  8C26 7D           	ld a,l
213+  8C27 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8C28 CB 47        	bit 0,a
215+  8C2A 28 03        	jr z,5F
216+  8C2C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8C2D 18 2E        	jr 7F
218+  8C2F
219+  8C2F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8C2F
221+  8C2F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8C30 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8C31 3A C3 85     	ld a,(Ctrl_0)
224+  8C34 CB 4F        	bit 1,a
225+  8C36 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8C38 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8C39
228+  8C39              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8C39
230+  8C39 1C               inc e
231+  8C3A 1D               dec e
232+  8C3B 20 07            jr nz,12F
233+  8C3D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8C3E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8C3F 22 98 85     	ld (Posicion_actual),hl
236+  8C42 18 44        13 jr 9F
237+  8C44 CB 43        12 bit 0,e
238+  8C46 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8C48              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8C48 C1           	pop bc
241+  8C49 18 D3        	jr 3B
242+  8C4B 80           14 add b
243+  8C4C 6F               ld l,a
244+  8C4D 22 98 85     	ld (Posicion_actual),hl
245+  8C50 CD AB 8C         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8C53 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8C55 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8C57 32 C3 85         ld (Ctrl_0),a
249+  8C5A F1           	pop af
250+  8C5B 18 2B        	jr 9F
251+  8C5D
252+  8C5D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8C5D
254+  8C5D F5           7 push af
255+  8C5E 3A C3 85     	ld a,(Ctrl_0)
256+  8C61 CB 47        	bit 0,a
257+  8C63 20 1D        	jr nz,8F
258+  8C65 F1           	pop af
259+  8C66
260+  8C66              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8C66
262+  8C66 1C           	inc e
263+  8C67 1D               dec e
264+  8C68 20 07            jr nz,10F
265+  8C6A 90           	sub b
266+  8C6B 6F               ld l,a
267+  8C6C 22 98 85     	ld (Posicion_actual),hl
268+  8C6F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8C71              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8C71 CB 43        10 bit 0,e
271+  8C73 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8C75              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8C75 C1           	pop bc
274+  8C76 18 A6        	jr 3B
275+  8C78 90           16 sub b
276+  8C79 6F               ld l,a
277+  8C7A 22 98 85     	ld (Posicion_actual),hl
278+  8C7D CD AB 8C         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8C80 18 06            jr 9F
280+  8C82 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8C84 32 C3 85         ld (Ctrl_0),a
282+  8C87 F1           	pop af
283+  8C88 C1           9 pop bc
284+  8C89 1E 00        	ld e,0
285+  8C8B CD BB 8C         call Inicializacion
286+  8C8E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8C8F 08           	ex af,af
288+  8C90 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8C91 18 8B            jr 3B
290+  8C93
291+  8C93              ; --------------------
292+  8C93
293+  8C93 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8C95 CD 0F 8E     1 call PreviousScan
295+  8C98 10 FB            djnz 1B
296+  8C9A 22 98 85     	ld (Posicion_actual),hl
297+  8C9D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8C9E C9           	ret
299+  8C9F
300+  8C9F              ; --------------------
301+  8C9F
302+  8C9F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8CA1 CD 00 8E     1 call NextScan
304+  8CA4 10 FB            djnz 1B
305+  8CA6 22 98 85     	ld (Posicion_actual),hl
306+  8CA9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8CAA C9           	ret
308+  8CAB
309+  8CAB              ; --------------------
310+  8CAB              ;
311+  8CAB              ;	22/01/23
312+  8CAB              ;
313+  8CAB              ;	E="1". Hemos cambiado de cuadrante.
314+  8CAB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8CAB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8CAB
317+  8CAB
318+  8CAB              Modificaccionne
319+  8CAB
320+  8CAB 3A AA 85     	ld a,(Cuad_objeto)
321+  8CAE FE 02        	cp 2
322+  8CB0 CC 93 8C         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8CB3 DC 93 8C         call c,Modifica_Pos_actual
324+  8CB6 C8           	ret z
325+  8CB7 CD 9F 8C         call Modifica_Pos_actual2
326+  8CBA C9               ret
327+  8CBB
328+  8CBB              ; *************************************************************************************************************************************************************************************************
329+  8CBB              ;
330+  8CBB              ;	13/8/22
331+  8CBB              ;
332+  8CBB              ;	Inicializacion
333+  8CBB              ;
334+  8CBB              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8CBB              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8CBB              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8CBB              ;
338+  8CBB              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8CBB              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8CBB              ;	_ desaparece/aparece.
341+  8CBB
342+  8CBB              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8CBB              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8CBB              ;
345+  8CBB              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8CBB              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8CBB              ; 		   [E] ="0"
348+  8CBB
349+  8CBB              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8CBB
351+  8CBB CD C0 90     Inicializacion call calcula_tercio
352+  8CBE 28 36        	jr z,primit
353+  8CC0 E6 02        	and 2
354+  8CC2 20 07        	jr nz,segmit
355+  8CC4 7D           	ld a,l
356+  8CC5 FE 7F        	cp $7f
357+  8CC7 38 2D        	jr c,primit
358+  8CC9 28 2B        	jr z,primit
359+  8CCB CD 28 8D     segmit call column
360+  8CCE 38 13        	jr c,tercuad
361+  8CD0 3E 04        cuarcuad ld a,4
362+  8CD2 32 AA 85     	ld (Cuad_objeto),a
363+  8CD5 21 20 48     	ld hl,$4820
364+  8CD8 22 CD 85     	ld (Limite_horizontal),hl
365+  8CDB 21 CF 85     	ld hl,Limite_vertical
366+  8CDE 36 0D        	ld (hl),$0d
367+  8CE0 08           	ex af,af
368+  8CE1 18 3C        	jr 1F
369+  8CE3              tercuad
370+  8CE3 3E 03        	ld a,3
371+  8CE5 32 AA 85     	ld (Cuad_objeto),a
372+  8CE8 21 20 48     	ld hl,$4820
373+  8CEB 22 CD 85     	ld (Limite_horizontal),hl
374+  8CEE 21 CF 85     	ld hl,Limite_vertical
375+  8CF1 36 12        	ld (hl),$12
376+  8CF3 08           	ex af,af
377+  8CF4 18 29        	jr 1F
378+  8CF6 CD 28 8D     primit call column
379+  8CF9 38 13        	jr c, primcuad
380+  8CFB              segcuad
381+  8CFB 3E 02        	ld a,2
382+  8CFD 32 AA 85     	ld (Cuad_objeto),a
383+  8D00 21 C0 4F     	ld hl,$4fc0
384+  8D03 22 CD 85     	ld (Limite_horizontal),hl
385+  8D06 21 CF 85     	ld hl,Limite_vertical
386+  8D09 36 0D        	ld (hl),$0d
387+  8D0B 08           	ex af,af
388+  8D0C 18 11        	jr 1F
389+  8D0E              primcuad
390+  8D0E 3E 01        	ld a,1
391+  8D10 32 AA 85     	ld (Cuad_objeto),a
392+  8D13 21 C0 4F     	ld hl,$4fc0
393+  8D16 22 CD 85     	ld (Limite_horizontal),hl
394+  8D19 21 CF 85     	ld hl,Limite_vertical
395+  8D1C 36 12        	ld (hl),$12
396+  8D1E 08           	ex af,af
397+  8D1F CD F2 93     1 call Genera_coordenadas
398+  8D22 21 C3 85     	ld hl,Ctrl_0
399+  8D25 CB EE        	set 5,(hl)
400+  8D27 C9           	ret
401+  8D28
402+  8D28              ; ------------------------------------------------------------------------------------------------------------------
403+  8D28
404+  8D28              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8D28              ;
406+  8D28              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8D28
408+  8D28 7D           column ld a,l
409+  8D29 E6 1F        	and $1f
410+  8D2B FE 10         	cp $10
411+  8D2D C9            	ret
412+  8D2E
413+  8D2E              ; --------------------------------------------------------------------------------------------------------------------
414+  8D2E              ;
415+  8D2E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8D2E              ;
417+  8D2E              ; 14/12/22
418+  8D2E              ;
419+  8D2E              ;	Modifica: A y BC.
420+  8D2E
421+  8D2E 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8D31 E6 01        	and 1
423+  8D33 28 17        	jr z,1F
424+  8D35
425+  8D35              ; Nos encontramos en la parte izquierda de la pantalla
426+  8D35
427+  8D35 3A 9C 85     	ld a,(Coordenada_X)
428+  8D38 47           	ld b,a
429+  8D39 04           	inc b											; (Coordenada_X)+1 en B.
430+  8D3A 79           	ld a,c
431+  8D3B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8D3C 38 08        	jr c,2F
433+  8D3E 47           	ld b,a
434+  8D3F 79           	ld a,c
435+  8D40 90           	sub b
436+  8D41 32 CC 85     	ld (Columnas),a
437+  8D44 18 1B        	jr 4F
438+  8D46 79           2 ld a,c
439+  8D47 32 CC 85     	ld (Columnas),a
440+  8D4A 18 15        	jr 4F
441+  8D4C
442+  8D4C              ; Nos encontramos en la parte derecha de la pantalla.
443+  8D4C
444+  8D4C 3A 9C 85     1 ld a,(Coordenada_X)
445+  8D4F 81           	add c
446+  8D50 3D           	dec a
447+  8D51 D6 1F        	sub $1f
448+  8D53 38 08        	jr c,3F
449+  8D55 47           	ld b,a
450+  8D56 79           	ld a,c
451+  8D57 90           	sub b
452+  8D58 32 CC 85     	ld (Columnas),a
453+  8D5B 18 04        	jr 4F
454+  8D5D 79           3 ld a,c
455+  8D5E 32 CC 85     	ld (Columnas),a
456+  8D61 D9           4 exx
457+  8D62 4F           	ld c,a
458+  8D63 D9           	exx
459+  8D64 C9            ret
460+  8D65
461+  8D65              ; --------------------------------------------------------------------------------------------------------------------
462+  8D65              ;
463+  8D65              ; 7/1/23
464+  8D65              ;
465+  8D65              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8D65              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8D65              ;
468+  8D65              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8D65              ;	DESTRUYE: HL,B Y A.
470+  8D65
471+  8D65 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8D68 FE 02        	cp 2
473+  8D6A 38 18        	jr c,1F
474+  8D6C 28 16        	jr z,1F
475+  8D6E E6 01        	and 1
476+  8D70 28 0D        	jr z,3F
477+  8D72
478+  8D72              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8D72
480+  8D72 CD AE 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8D75
482+  8D75 7D           9 ld a,l
483+  8D76 E6 1F        	and $1f
484+  8D78 28 2A        	jr z,7F
485+  8D7A 2B           	dec hl
486+  8D7B 10 F8        	djnz 9B
487+  8D7D 18 25        	jr 7F
488+  8D7F
489+  8D7F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8D7F
491+  8D7F 2A 98 85     3 ld hl,(Posicion_actual)
492+  8D82 18 20        	jr 7F
493+  8D84
494+  8D84 28 14        1 jr z,2F
495+  8D86
496+  8D86              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8D86
498+  8D86 CD AE 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8D89 7D           4 ld a,l
500+  8D8A E6 1F        	and $1f
501+  8D8C 28 03        	jr z,6F
502+  8D8E 2B           	dec hl
503+  8D8F 10 F8        	djnz 4B
504+  8D91 06 0F        6 ld b,15
505+  8D93 CD 0F 8E     5 call PreviousScan
506+  8D96 10 FB        	djnz 5B
507+  8D98 18 0A        	jr 7F
508+  8D9A
509+  8D9A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8D9A
511+  8D9A CD AE 8D     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8D9D 06 0F        	ld b,15
513+  8D9F CD 0F 8E     8 call PreviousScan
514+  8DA2 10 FB        	djnz 8B
515+  8DA4
516+  8DA4 E5           7 push hl
517+  8DA5 DD E1        	pop ix
518+  8DA7
519+  8DA7 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8DAA E5           	push hl
521+  8DAB FD E1        	pop iy
522+  8DAD
523+  8DAD C9           	ret
524+  8DAE
525+  8DAE              ; --------------------------------------------------------------------------------------------------------------------
526+  8DAE              ;
527+  8DAE              ;	2/1/23
528+  8DAE              ;
529+  8DAE              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8DAE              ;
531+  8DAE              ;	Tras esta rutina tenemos:
532+  8DAE              ;
533+  8DAE              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8DAE              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8DAE              ;
536+  8DAE              ;	DESTRUYE!!!!! HL,B y A.
537+  8DAE
538+  8DAE 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8DB1 3A CC 85     	ld a,(Columnas)
540+  8DB4 3D           	dec a
541+  8DB5 20 01        	jr nz,1F
542+  8DB7 3C           	inc a
543+  8DB8 47           1 ld b,a
544+  8DB9 C9           	ret
545+  8DBA
546+  8DBA              ; --------------------------------------------------------------------------------------------------------------------
547+  8DBA              ;
548+  8DBA              ;	3/1/23
549+  8DBA              ;
550+  8DBA              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8DBA              ;
552+  8DBA              ;	Destruye: A,B,HL y DE.
553+  8DBA
554+  8DBA              Define_rutina_de_impresion
555+  8DBA
556+  8DBA 3A 97 85     	ld a,(Columns)
557+  8DBD 47           	ld b,a
558+  8DBE 3A CC 85     	ld a,(Columnas)
559+  8DC1 B8           	cp b
560+  8DC2 20 0D        	jr nz,2f
561+  8DC4
562+  8DC4              ;	La entidad se imprime entera.
563+  8DC4
564+  8DC4 21 90 8E     	ld hl, Indice_entidades_completas
565+  8DC7 E6 01        	and 1
566+  8DC9 28 02        	jr z,1F
567+  8DCB
568+  8DCB 23           	inc hl
569+  8DCC 23           	inc hl
570+  8DCD
571+  8DCD CD 89 87     1 call Extrae_address
572+  8DD0 C9           	ret		;	ret
573+  8DD1
574+  8DD1              ;	La entidad no se imprime entera en pantalla.
575+  8DD1
576+  8DD1 3A AA 85     2 ld a,(Cuad_objeto)
577+  8DD4 E6 01        	and 1
578+  8DD6 28 17        	jr z,3F
579+  8DD8
580+  8DD8              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8DD8
582+  8DD8 21 94 8E     	ld hl, Indice_entidades_incompletas_izquierda
583+  8DDB 3A 97 85     4 ld a,(Columns)
584+  8DDE E6 01        	and 1
585+  8DE0 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8DE2
587+  8DE2 23           	inc hl
588+  8DE3 23           	inc hl
589+  8DE4
590+  8DE4 3A CC 85     	ld a,(Columnas)
591+  8DE7 E6 01        	and 1
592+  8DE9 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8DEB
594+  8DEB 23           	inc hl
595+  8DEC 23           	inc hl
596+  8DED
597+  8DED 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8DEF
599+  8DEF 21 9A 8E     3 ld hl, Indice_entidades_incompletas_derecha
600+  8DF2 18 E7        	jr 4B
601+  8DF4
602+  8DF4              ; --------------------------------------------------------------------------------------------------------------------
603+  8DF4              ;
604+  8DF4              ;	Prepara_draw
605+  8DF4              ;
606+  8DF4              ;	Es una rutina de carga.
607+  8DF4              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8DF4              ;
609+  8DF4              ;	FUNCIONAMIENTO:
610+  8DF4              ;
611+  8DF4              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8DF4              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8DF4              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8DF4              ;
615+  8DF4              ;	DESTRUYE:
616+  8DF4              ;
617+  8DF4              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8DF4
619+  8DF4 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8DF7 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8DF8 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8DF9 4E           	ld c,(hl)
623+  8DFA 2A 98 85     	ld hl,(Posicion_actual)
624+  8DFD 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8DFF C9           	ret
626+  8E00
627+  8E00              ;----------------------------------------------------------------------------------------------------------------
628+  8E00              ;
629+  8E00              ;	5/08/22
630+  8E00              ;
631+  8E00              ;   NextScan.
632+  8E00              ;
633+  8E00              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8E00              ;
635+  8E00              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8E00              ;
637+  8E00              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8E00              ;
639+  8E00              ;       DESTRUIDOS: AF y HL !!!
640+  8E00              ;
641+  8E00              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8E00              ;
643+  8E00
644+  8E00 24           NextScan inc h          ; Incrementamos el scanline.
645+  8E01 7C               ld a,h
646+  8E02 E6 07            and 7
647+  8E04 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8E05
649+  8E05 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8E06 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8E08 6F               ld l,a
652+  8E09 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8E0A
654+  8E0A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8E0B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8E0D 67               ld h,a
657+  8E0E C9               ret
658+  8E0F
659+  8E0F              ;----------------------------------------------------------------------------------------------------------------
660+  8E0F              ;
661+  8E0F              ;	5/08/22
662+  8E0F              ;
663+  8E0F              ;   PreviousScan.
664+  8E0F              ;
665+  8E0F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8E0F              ;
667+  8E0F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8E0F              ;
669+  8E0F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8E0F              ;
671+  8E0F              ;       DESTRUIDOS: AF y HL !!!
672+  8E0F              ;
673+  8E0F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8E0F              ;
675+  8E0F
676+  8E0F 7C           PreviousScan ld a,h
677+  8E10 25               dec h               ; Dec H.
678+  8E11 E6 07            and 7
679+  8E13 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8E14
681+  8E14 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8E15 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8E17 6F               ld l,a
684+  8E18 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8E19
686+  8E19 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8E1A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8E1C 67               ld h,a
689+  8E1D C9               ret
690+  8E1E
691+  8E1E              ; -----------------------------------------------------------------------------------
692+  8E1E              ;
693+  8E1E              ;	28/2/23
694+  8E1E              ;
695+  8E1E              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8E1E              ;	Extrae fotos de Album_de_fotos.
697+  8E1E
698+  8E1E 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8E21 A7           	and a
700+  8E22 C8           	ret z
701+  8E23 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8E27 31 00 70     	ld sp,Album_de_fotos
703+  8E2A
704+  8E2A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8E2C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8E2D D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8E2E
708+  8E2E ED 73 DB 85  	ld (Stack_2),sp
709+  8E32 ED 7B D9 85  	ld sp,(Stack)
710+  8E36
711+  8E36              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8E36
713+  8E36 3E CD        	ld a,$cd
714+  8E38 32 40 8E     	ld (Imprime),a
715+  8E3B EB           	ex de,hl
716+  8E3C 22 41 8E     	ld (Imprime+1),hl
717+  8E3F EB           	ex de,hl
718+  8E40
719+  8E40              ; Ejecuta la llamada:	CALL $xx,xx
720+  8E40
721+  8E40 00 00 00     Imprime db 0,0,0
722+  8E43
723+  8E43 3A D8 85     	ld a,(Numero_de_malotes)
724+  8E46 3D           	dec a
725+  8E47 28 09        	jr z,1F
726+  8E49 32 D8 85      	ld (Numero_de_malotes),a
727+  8E4C
728+  8E4C ED 7B DB 85   	ld sp,(Stack_2)
729+  8E50 18 D8        	jr 2B
730+  8E52
731+  8E52 AF           1 xor a
732+  8E53 32 DB 85     	ld (Stack_2),a
733+  8E56 C9           	ret
734+  8E57
735+  8E57              ; -----------------------------------------------------------------------------------
736+  8E57              ;
737+  8E57              ;	28/2/23
738+  8E57              ;
739+  8E57              ;	Pinta los disparos generados.
740+  8E57
741+  8E57              Extrae_foto_disparos
742+  8E57
743+  8E57 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8E5A A7           	and a
745+  8E5B C8           	ret z
746+  8E5C ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8E60 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8E63
749+  8E63 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8E65 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8E66 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8E67
753+  8E67 ED 73 DB 85  	ld (Stack_2),sp
754+  8E6B ED 7B D9 85  	ld sp,(Stack)
755+  8E6F
756+  8E6F              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8E6F
758+  8E6F 3E CD        	ld a,$cd
759+  8E71 32 79 8E     	ld (Imprime2),a
760+  8E74 EB           	ex de,hl
761+  8E75 22 7A 8E     	ld (Imprime2+1),hl
762+  8E78 EB           	ex de,hl
763+  8E79
764+  8E79              ; Ejecuta la llamada:	CALL $xx,xx
765+  8E79
766+  8E79 00 00 00     Imprime2 db 0,0,0
767+  8E7C
768+  8E7C 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8E7F 3D           	dec a
770+  8E80 28 09        	jr z,1F
771+  8E82 32 E1 85      	ld (Numero_de_disparotes),a
772+  8E85
773+  8E85 ED 7B DB 85  	ld sp,(Stack_2)
774+  8E89 18 D8        	jr 2B
775+  8E8B
776+  8E8B AF           1 xor a
777+  8E8C 32 DB 85     	ld (Stack_2),a
778+  8E8F C9           	ret
779+  8E90
# file closed: Draw_XOR.asm
844   8E90              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8E90              ;   índices de Rutinas de impresión.
  2+  8E90
  3+  8E90 A0 8E        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8E92 CD 8E            defw Pinta_Amadeus_3x2
  5+  8E94
  6+  8E94 23 8F        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8E96 C3 8F            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8E98 77 8F            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8E9A
 10+  8E9A 4D 8F        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8E9C 51 90            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8E9E 05 90            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8EA0
 14+  8EA0
 15+  8EA0              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8EA0              ;
 17+  8EA0              ;   12/12/22
 18+  8EA0              ;
 19+  8EA0              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8EA0              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8EA0              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8EA0              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8EA0              ;
 24+  8EA0              ;   Modifica: DE y HL.
 25+  8EA0
 26+  8EA0 ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8EA4 FD F9        	ld sp,iy
 28+  8EA6 06 10            ld b,16
 29+  8EA8 D1           1 pop de
 30+  8EA9 7B               ld a,e
 31+  8EAA AE               xor (hl)
 32+  8EAB 77           	ld (hl),a
 33+  8EAC 23           	inc hl
 34+  8EAD 7A               ld a,d
 35+  8EAE AE               xor (hl)
 36+  8EAF 77           	ld (hl),a
 37+  8EB0 2B           	dec hl
 38+  8EB1 24           	inc h
 39+  8EB2 7C               ld a,h
 40+  8EB3 E6 07            and 7
 41+  8EB5 20 0A            jr nz,2F
 42+  8EB7 7D               ld a,l
 43+  8EB8 C6 20            add a,$20
 44+  8EBA 6F               ld l,a
 45+  8EBB 38 04            jr c,2F
 46+  8EBD 7C               ld a,h
 47+  8EBE D6 08            sub 8
 48+  8EC0 67               ld h,a
 49+  8EC1 7C           2 ld a,h
 50+  8EC2 FE 58            cp $58
 51+  8EC4 28 02            jr z,3F
 52+  8EC6 10 E0            djnz 1B
 53+  8EC8 ED 7B D9 85  3 ld sp,(Stack)
 54+  8ECC C9           	ret
 55+  8ECD
 56+  8ECD ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8ED1 FD F9        	ld sp,iy
 58+  8ED3 06 08            ld b,8
 59+  8ED5 D1           1 pop de
 60+  8ED6 7B               ld a,e
 61+  8ED7 AE               xor (hl)
 62+  8ED8 77           	ld (hl),a
 63+  8ED9 23           	inc hl
 64+  8EDA 7A               ld a,d
 65+  8EDB AE               xor (hl)
 66+  8EDC 77           	ld (hl),a
 67+  8EDD 23           	inc hl
 68+  8EDE D1           	pop de
 69+  8EDF 7B               ld a,e
 70+  8EE0 AE               xor (hl)
 71+  8EE1 77           	ld (hl),a
 72+  8EE2 2B           	dec hl
 73+  8EE3 2B           	dec hl
 74+  8EE4 24           	inc h
 75+  8EE5 7C               ld a,h
 76+  8EE6 E6 07            and 7
 77+  8EE8 20 0A            jr nz,2F
 78+  8EEA 7D               ld a,l
 79+  8EEB C6 20            add a,$20
 80+  8EED 6F               ld l,a
 81+  8EEE 38 04            jr c,2F
 82+  8EF0 7C               ld a,h
 83+  8EF1 D6 08            sub 8
 84+  8EF3 67               ld h,a
 85+  8EF4 7C           2 ld a,h
 86+  8EF5 FE 58            cp $58
 87+  8EF7 28 25            jr z,4F
 88+  8EF9 7A               ld a,d
 89+  8EFA AE               xor (hl)
 90+  8EFB 77               ld (hl),a
 91+  8EFC D1           	pop de
 92+  8EFD 23           	inc hl
 93+  8EFE 7B               ld a,e
 94+  8EFF AE               xor (hl)
 95+  8F00 77           	ld (hl),a
 96+  8F01 23           	inc hl
 97+  8F02 7A               ld a,d
 98+  8F03 AE               xor (hl)
 99+  8F04 77           	ld (hl),a
100+  8F05 2B           	dec hl
101+  8F06 2B           	dec hl
102+  8F07 24           	inc h
103+  8F08 7C               ld a,h
104+  8F09 E6 07            and 7
105+  8F0B 20 0A            jr nz,3F
106+  8F0D 7D               ld a,l
107+  8F0E C6 20            add a,$20
108+  8F10 6F               ld l,a
109+  8F11 38 04            jr c,3F
110+  8F13 7C               ld a,h
111+  8F14 D6 08            sub 8
112+  8F16 67               ld h,a
113+  8F17 7C           3 ld a,h
114+  8F18 FE 58            cp $58
115+  8F1A 28 02            jr z,4F
116+  8F1C 10 B7            djnz 1B
117+  8F1E ED 7B D9 85  4 ld sp,(Stack)
118+  8F22 C9           	ret
119+  8F23
120+  8F23              ; ---------------------------------------------------
121+  8F23
122+  8F23 ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8F27 FD F9        	ld sp,iy
124+  8F29
125+  8F29              ; >>>
126+  8F29
127+  8F29 06 10            ld b,16
128+  8F2B D1           1 pop de
129+  8F2C 7A           	ld a,d
130+  8F2D AE           	xor (hl)
131+  8F2E 77           	ld (hl),a
132+  8F2F 24           	inc h
133+  8F30 7C               ld a,h
134+  8F31 E6 07            and 7
135+  8F33 20 0C            jr nz,2F
136+  8F35 7D               ld a,l
137+  8F36 C6 20            add a,$20
138+  8F38 6F               ld l,a
139+  8F39 38 06            jr c,2F
140+  8F3B 7C               ld a,h
141+  8F3C D6 08            sub 8
142+  8F3E 67               ld h,a
143+  8F3F 18 00            jr 2F
144+  8F41 7C           2 ld a,h
145+  8F42 FE 58            cp $58
146+  8F44 28 02            jr z,3F
147+  8F46 10 E3            djnz 1B
148+  8F48 ED 7B D9 85  3 ld sp,(Stack)
149+  8F4C C9           	ret
150+  8F4D
151+  8F4D ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8F51 FD F9        	ld sp,iy
153+  8F53
154+  8F53              ; >>>
155+  8F53
156+  8F53 06 10            ld b,16
157+  8F55 D1           1 pop de
158+  8F56 7B           	ld a,e
159+  8F57 AE           	xor (hl)
160+  8F58 77           	ld (hl),a
161+  8F59 24           	inc h
162+  8F5A 7C               ld a,h
163+  8F5B E6 07            and 7
164+  8F5D 20 0C            jr nz,2F
165+  8F5F 7D               ld a,l
166+  8F60 C6 20            add a,$20
167+  8F62 6F               ld l,a
168+  8F63 38 06            jr c,2F
169+  8F65 7C               ld a,h
170+  8F66 D6 08            sub 8
171+  8F68 67               ld h,a
172+  8F69 18 00            jr 2F
173+  8F6B 7C           2 ld a,h
174+  8F6C FE 58            cp $58
175+  8F6E 28 02            jr z,3F
176+  8F70 10 E3            djnz 1B
177+  8F72 ED 7B D9 85  3 ld sp,(Stack)
178+  8F76 C9           	ret
179+  8F77
180+  8F77              ; ---------------------------------------------------
181+  8F77
182+  8F77 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8F7B FD F9        	ld sp,iy
184+  8F7D 06 08            ld b,8
185+  8F7F D1           1 pop de
186+  8F80 7A           	ld a,d
187+  8F81 AE           	xor (hl)
188+  8F82 77           	ld (hl),a
189+  8F83 23           	inc hl
190+  8F84 D1           	pop de
191+  8F85 7B           	ld a,e
192+  8F86 AE           	xor (hl)
193+  8F87 77           	ld (hl),a
194+  8F88 2B           	dec hl
195+  8F89 24            	inc h
196+  8F8A 7C               ld a,h
197+  8F8B E6 07            and 7
198+  8F8D 20 0A            jr nz,2F
199+  8F8F 7D               ld a,l
200+  8F90 C6 20            add a,$20
201+  8F92 6F               ld l,a
202+  8F93 38 04            jr c,2F
203+  8F95 7C               ld a,h
204+  8F96 D6 08            sub 8
205+  8F98 67               ld h,a
206+  8F99 7C           2 ld a,h
207+  8F9A FE 58            cp $58
208+  8F9C 28 20            jr z,4F
209+  8F9E D1               pop de
210+  8F9F 7B           	ld a,e
211+  8FA0 AE           	xor (hl)
212+  8FA1 77           	ld (hl),a
213+  8FA2 23           	inc hl
214+  8FA3 7A           	ld a,d
215+  8FA4 AE           	xor (hl)
216+  8FA5 77           	ld (hl),a
217+  8FA6 2B           	dec hl
218+  8FA7 24           	inc h
219+  8FA8 7C               ld a,h
220+  8FA9 E6 07            and 7
221+  8FAB 20 0A            jr nz,3F
222+  8FAD 7D               ld a,l
223+  8FAE C6 20            add a,$20
224+  8FB0 6F               ld l,a
225+  8FB1 38 04            jr c,3F
226+  8FB3 7C               ld a,h
227+  8FB4 D6 08            sub 8
228+  8FB6 67               ld h,a
229+  8FB7 7C           3 ld a,h
230+  8FB8 FE 58            cp $58
231+  8FBA 28 02            jr z,4F
232+  8FBC 10 C1            djnz 1B
233+  8FBE ED 7B D9 85  4 ld sp,(Stack)
234+  8FC2 C9           	ret
235+  8FC3
236+  8FC3 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8FC7 FD F9        	ld sp,iy
238+  8FC9 06 08            ld b,8
239+  8FCB D1           1 pop de
240+  8FCC D1           	pop de
241+  8FCD 7B           	ld a,e
242+  8FCE AE           	xor (hl)
243+  8FCF 77           	ld (hl),a
244+  8FD0 24            	inc h
245+  8FD1 7C               ld a,h
246+  8FD2 E6 07            and 7
247+  8FD4 20 0A            jr nz,2F
248+  8FD6 7D               ld a,l
249+  8FD7 C6 20            add a,$20
250+  8FD9 6F               ld l,a
251+  8FDA 38 04            jr c,2F
252+  8FDC 7C               ld a,h
253+  8FDD D6 08            sub 8
254+  8FDF 67               ld h,a
255+  8FE0 7C           2 ld a,h
256+  8FE1 FE 58            cp $58
257+  8FE3 28 1B            jr z,4F
258+  8FE5 D1               pop de
259+  8FE6 7A           	ld a,d
260+  8FE7 AE           	xor (hl)
261+  8FE8 77           	ld (hl),a
262+  8FE9 24           	inc h
263+  8FEA 7C               ld a,h
264+  8FEB E6 07            and 7
265+  8FED 20 0A            jr nz,3F
266+  8FEF 7D               ld a,l
267+  8FF0 C6 20            add a,$20
268+  8FF2 6F               ld l,a
269+  8FF3 38 04            jr c,3F
270+  8FF5 7C               ld a,h
271+  8FF6 D6 08            sub 8
272+  8FF8 67               ld h,a
273+  8FF9 7C           3 ld a,h
274+  8FFA FE 58            cp $58
275+  8FFC 28 02            jr z,4F
276+  8FFE 10 CB            djnz 1B
277+  9000 ED 7B D9 85  4 ld sp,(Stack)
278+  9004 C9           	ret
279+  9005
280+  9005 ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  9009 FD F9        	ld sp,iy
282+  900B 06 08            ld b,8
283+  900D D1           1 pop de
284+  900E 7B           	ld a,e
285+  900F AE           	xor (hl)
286+  9010 77           	ld (hl),a
287+  9011 23           	inc hl
288+  9012 7A           	ld a,d
289+  9013 AE           	xor (hl)
290+  9014 77           	ld (hl),a
291+  9015 2B           	dec hl
292+  9016 24             	inc h
293+  9017 7C               ld a,h
294+  9018 E6 07            and 7
295+  901A 20 0A            jr nz,2F
296+  901C 7D               ld a,l
297+  901D C6 20            add a,$20
298+  901F 6F               ld l,a
299+  9020 38 04            jr c,2F
300+  9022 7C               ld a,h
301+  9023 D6 08            sub 8
302+  9025 67               ld h,a
303+  9026 7C           2 ld a,h
304+  9027 FE 58            cp $58
305+  9029 28 21            jr z,4F
306+  902B D1               pop de
307+  902C 7A           	ld a,d
308+  902D AE           	xor (hl)
309+  902E 77           	ld (hl),a
310+  902F 23           	inc hl
311+  9030 D1               pop de
312+  9031 7B           	ld a,e
313+  9032 AE           	xor (hl)
314+  9033 77           	ld (hl),a
315+  9034 2B           	dec hl
316+  9035 24           	inc h
317+  9036 7C               ld a,h
318+  9037 E6 07            and 7
319+  9039 20 0A            jr nz,3F
320+  903B 7D               ld a,l
321+  903C C6 20            add a,$20
322+  903E 6F               ld l,a
323+  903F 38 04            jr c,3F
324+  9041 7C               ld a,h
325+  9042 D6 08            sub 8
326+  9044 67               ld h,a
327+  9045 7C           3 ld a,h
328+  9046 FE 58            cp $58
329+  9048 28 02            jr z,4F
330+  904A 10 C1            djnz 1B
331+  904C ED 7B D9 85  4 ld sp,(Stack)
332+  9050 C9           	ret
333+  9051
334+  9051 ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  9055 FD F9        	ld sp,iy
336+  9057 06 08            ld b,8
337+  9059 D1           1 pop de
338+  905A 7B           	ld a,e
339+  905B AE           	xor (hl)
340+  905C 77           	ld (hl),a
341+  905D 24            	inc h
342+  905E 7C               ld a,h
343+  905F E6 07            and 7
344+  9061 20 0A            jr nz,2F
345+  9063 7D               ld a,l
346+  9064 C6 20            add a,$20
347+  9066 6F               ld l,a
348+  9067 38 04            jr c,2F
349+  9069 7C               ld a,h
350+  906A D6 08            sub 8
351+  906C 67               ld h,a
352+  906D 7C           2 ld a,h
353+  906E FE 58            cp $58
354+  9070 28 1C            jr z,4F
355+  9072 D1               pop de
356+  9073 7A           	ld a,d
357+  9074 AE           	xor (hl)
358+  9075 77           	ld (hl),a
359+  9076 24           	inc h
360+  9077 7C               ld a,h
361+  9078 E6 07            and 7
362+  907A 20 0A            jr nz,3F
363+  907C 7D               ld a,l
364+  907D C6 20            add a,$20
365+  907F 6F               ld l,a
366+  9080 38 04            jr c,3F
367+  9082 7C               ld a,h
368+  9083 D6 08            sub 8
369+  9085 67               ld h,a
370+  9086 7C           3 ld a,h
371+  9087 FE 58            cp $58
372+  9089 28 03            jr z,4F
373+  908B D1               pop de
374+  908C 10 CB            djnz 1B
375+  908E ED 7B D9 85  4 ld sp,(Stack)
376+  9092 C9           	ret
377+  9093
378+  9093              ; ---------------------------------------------------
379+  9093              ;
380+  9093              ;   27/02/23
381+  9093              ;
382+  9093              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  9093              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  9093              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  9093
386+  9093 ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  9097 FD F9            ld sp,iy
388+  9099 06 02            ld b,2
389+  909B D1           1 pop de
390+  909C 7B               ld a,e
391+  909D AE               xor (hl)
392+  909E 77               ld (hl),a
393+  909F 23               inc hl
394+  90A0 7A               ld a,d
395+  90A1 AE               xor (hl)
396+  90A2 77               ld (hl),a
397+  90A3 2B               dec hl
398+  90A4
399+  90A4 24               inc h
400+  90A5 7C               ld a,h
401+  90A6 E6 07            and 7
402+  90A8 20 0A            jr nz,2F
403+  90AA 7D               ld a,l
404+  90AB C6 20            add a,$20
405+  90AD 6F               ld l,a
406+  90AE 38 04            jr c,2F
407+  90B0 7C               ld a,h
408+  90B1 D6 08            sub 8
409+  90B3 67               ld h,a
410+  90B4 7C           2 ld a,h
411+  90B5 FE 58            cp $58
412+  90B7 28 02            jr z,3F
413+  90B9
414+  90B9 10 E0            djnz 1B
415+  90BB ED 7B D9 85  3 ld sp,(Stack)
416+  90BF C9               ret
417+  90C0
# file closed: Rutinas_de_impresion_sprites.asm
845   90C0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  90C0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  90C0              ;
  3+  90C0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  90C0              ;
  5+  90C0              ; *****************************************************************************************************************************************************************************************
  6+  90C0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  90C0
  8+  90C0 7C           calcula_tercio ld a,h
  9+  90C1 E6 18        	and $18
 10+  90C3 CB 2F        	sra a
 11+  90C5 CB 2F        	sra a
 12+  90C7 CB 2F        	sra a
 13+  90C9 C9           	ret
 14+  90CA
# file closed: calcula_tercio.asm
846   90CA              	include "Cls.asm"
# file opened: Cls.asm
  1+  90CA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  90CA              ;
  3+  90CA              ;
  4+  90CA              ;	CLS.
  5+  90CA              ;
  6+  90CA              ;	Limpia la pantalla y define sus atributos.
  7+  90CA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  90CA              ;
  9+  90CA              ;	COLORES: 0 ..... NEGRO
 10+  90CA              ;    		 1 ..... AZUL
 11+  90CA              ; 			 2 ..... ROJO
 12+  90CA              ;			 3 ..... MAGENTA
 13+  90CA              ; 			 4 ..... VERDE
 14+  90CA              ; 			 5 ..... CIAN
 15+  90CA              ;			 6 ..... AMARILLO
 16+  90CA              ; 			 7 ..... BLANCO
 17+  90CA              ;
 18+  90CA              ;	INPUT: A contiene los atributos de pantalla.
 19+  90CA              ;
 20+  90CA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  90CA
 22+  90CA
 23+  90CA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  90CD 11 01 40     	LD DE,$4001
 25+  90D0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  90D3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  90D5 ED B0        	LDIR
 28+  90D7 01 FF 02     	LD BC,767
 29+  90DA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  90DB ED B0        	LDIR
 31+  90DD C9           	ret
 32+  90DE
# file closed: Cls.asm
847   90DE              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  90DE              ; ******************************************************************************************************************************************************************************************
  2+  90DE              ;
  3+  90DE              ;   22/01/23
  4+  90DE              ;
  5+  90DE              ;	Mov_down
  6+  90DE              ;
  7+  90DE              ; 	Mueve el Sprite X px hacia abajo.
  8+  90DE              ;
  9+  90DE              ;
 10+  90DE 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  90E1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  90E3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  90E3              ; 																	; _ en el caso de que no lo haya.
 14+  90E3 3A AE 85     	ld a,(Vel_down)
 15+  90E6 47           	ld b,a
 16+  90E7 2A 98 85         ld hl,(Posicion_actual)
 17+  90EA CD C0 90     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  90ED E6 02        	and 2
 19+  90EF 28 0F        	jr z,1F
 20+  90F1
 21+  90F1              ; Nos encontramos en el último tercio de pantalla.
 22+  90F1              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  90F1
 24+  90F1 7C           	ld a,h
 25+  90F2 FE 57        	cp $57
 26+  90F4 20 0A        	jr nz,1F
 27+  90F6 7D           	ld a,l
 28+  90F7 C6 20        	add $20
 29+  90F9 30 05        	jr nc,1F
 30+  90FB
 31+  90FB              ; ------------------------------
 32+  90FB CD DC 93     	call Reaparece_arriba
 33+  90FE              ;	call Reinicio
 34+  90FE              ; ------------------------------
 35+  90FE 18 08        	jr 3F
 36+  9100 CD 00 8E     1 call NextScan
 37+  9103 22 98 85     	ld (Posicion_actual),hl
 38+  9106 10 E2            djnz 2B
 39+  9108 CD F2 93     3 call Genera_coordenadas
 40+  910B C9           	ret
 41+  910C
 42+  910C
 43+  910C              ; ******************************************************************************************************************************************************************************************
 44+  910C              ;
 45+  910C              ;   22/01/23
 46+  910C              ;
 47+  910C              ;	Mov_up
 48+  910C              ;
 49+  910C              ; 	Mueve el Sprite hacia arriba.
 50+  910C              ;
 51+  910C              ;
 52+  910C 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  910F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  9111              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  9111              ; 																		; _ en el caso de que no lo haya.
 56+  9111 3A AD 85     	ld a,(Vel_up)
 57+  9114 47           	ld b,a
 58+  9115 2A 98 85     	ld hl,(Posicion_actual)
 59+  9118 CD C0 90     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  911B A7           	and a
 61+  911C 20 10        	jr nz,1F
 62+  911E
 63+  911E              ; Nos encontramos en el 1er tercio de pantalla.
 64+  911E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  911E
 66+  911E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  911F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  9121 20 0B            jr nz,1F
 69+  9123 7D               ld a,l
 70+  9124 D6 20            sub $20
 71+  9126 30 06            jr nc,1F
 72+  9128 25               dec h
 73+  9129
 74+  9129              ; -----------------------------
 75+  9129 CD CC 93         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  912C              ;	call Reinicio
 77+  912C              ; -----------------------------
 78+  912C
 79+  912C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  912E CD 0F 8E     1 call PreviousScan
 81+  9131 22 98 85     	ld (Posicion_actual),hl
 82+  9134 10 E2            djnz 3B
 83+  9136 CD F2 93     2 call Genera_coordenadas
 84+  9139 C9           	ret
 85+  913A
 86+  913A              ; ******************************************************************************************************************************************************************************************
 87+  913A              ;
 88+  913A              ;	19/10/22
 89+  913A              ;
 90+  913A              ;	Mov_right.
 91+  913A              ;
 92+  913A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  913A              ;
 94+  913A
 95+  913A 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  913D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  913F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  913F              ; 																	; _ en el caso de que no lo haya.
 99+  913F 3A C3 85     	ld a,(Ctrl_0)
100+  9142 CB 77        	bit 6,a
101+  9144 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9146
103+  9146 CD 7A 93     	call Stop_Amadeus_right
104+  9149 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  914A 18 4D        	jr 8F
106+  914C
107+  914C 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  914F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  9151 20 46        	jr nz,8F
110+  9153
111+  9153 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9156 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  9157 28 40        	jr z,8F
114+  9159
115+  9159              ; ---------- ---------- ----------
116+  9159              ;
117+  9159              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  9159
119+  9159 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  915C FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  915E 28 11        	jr z,1F
122+  9160 38 06        	jr c,6F
123+  9162 FE 04        	cp 4
124+  9164 28 14        	jr z,7F
125+  9166 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9168
127+  9168              ; ---------- ---------- ----------
128+  9168              ;
129+  9168              ; Perfiles de velocidad
130+  9168              ;
131+  9168
132+  9168 3A 9E 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  916B FE FE        	cp $fe
134+  916D 20 2A        	jr nz,8F
135+  916F 18 10        	jr 3F
136+  9171 3A 9E 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  9174 FE FD        	cp $fd
138+  9176 20 21        	jr nz,8F
139+  9178 18 07        	jr 3F
140+  917A 3A 9E 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  917D FE FB        	cp $fb
142+  917F 20 18        	jr nz,8F
143+  9181
144+  9181              ; ---------- ---------- ----------
145+  9181
146+  9181              3
147+  9181 CD BA 93     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  9184              ;	call Reinicio
149+  9184
150+  9184              ; ---------- ---------- ----------
151+  9184              ;
152+  9184              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  9184
154+  9184 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  9186 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  9187 CD A0 91     	call DESPLZ_DER
157+  918A C1           	pop bc
158+  918B 10 F9        	djnz 5B
159+  918D 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  9190 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  9191 22 98 85     	ld (Posicion_actual),hl
162+  9194 CD F2 93     	call Genera_coordenadas
163+  9197 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  9199
165+  9199              ; ---------- ---------- ----------
166+  9199
167+  9199 2A 98 85     8 ld hl,(Posicion_actual)
168+  919C CD A0 91     	call DESPLZ_DER
169+  919F C9           2 ret
170+  91A0
171+  91A0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  91A0              ;
173+  91A0              ;	22/9/22
174+  91A0              ;
175+  91A0
176+  91A0 CD AF 91     DESPLZ_DER call Desplaza_derecha
177+  91A3 CD FB 91         call modifica_parametros_1er_DESPLZ_2
178+  91A6 CD 24 92         call Ciclo_completo
179+  91A9 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  91AC CB FE        	set 7,(hl)
181+  91AE C9           	ret
182+  91AF
183+  91AF              ; ******************************************************************************************************************************************************************************************
184+  91AF              ;	15/02/23
185+  91AF              ;
186+  91AF
187+  91AF 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  91B2 47           	ld b,a
189+  91B3 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  91B6 23           1 inc hl
191+  91B7 23           	inc hl
192+  91B8 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  91BA 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  91BD CD 89 87     	call Extrae_address
195+  91C0 22 9A 85     	ld (Puntero_objeto),hl
196+  91C3
197+  91C3              ; Modifica (Puntero_DESPLZ_izq).
198+  91C3
199+  91C3              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  91C3              ; Cuántos movimientos hemos hecho ??
201+  91C3              ; DE contiene (Puntero_DESPLZ_der).
202+  91C3
203+  91C3 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  91C6 EB           	ex de,hl
205+  91C7 A7           	and a
206+  91C8 ED 52        	sbc hl,de
207+  91CA CB 3D        	srl l
208+  91CC 3E 08        6 ld a,8
209+  91CE 95           	sub l
210+  91CF 30 1E        	jr nc,3F
211+  91D1
212+  91D1              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  91D1              ; B="0".
214+  91D1
215+  91D1 04           4 inc b
216+  91D2 3C           	inc a
217+  91D3 20 FC        	jr nz,4B
218+  91D5 78           	ld a,b
219+  91D6 08           	ex af,af
220+  91D7 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  91DA 23           5 inc hl
222+  91DB 23           	inc hl
223+  91DC 10 FC        	djnz 5B
224+  91DE 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  91E1 CD 89 87     	call Extrae_address
226+  91E4 22 9A 85     	ld (Puntero_objeto),hl
227+  91E7
228+  91E7              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  91E7              ; _(Posicion_actual).
230+  91E7
231+  91E7 21 98 85     	ld hl,Posicion_actual
232+  91EA 34           	inc (hl)
233+  91EB 08               ex af,af
234+  91EC 6F           	ld l,a
235+  91ED 18 DD        	jr 6B
236+  91EF
237+  91EF              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  91EF
239+  91EF 47           3 ld b,a
240+  91F0 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  91F3 23           2 inc hl
242+  91F4 23           	inc hl
243+  91F5 10 FC        	djnz 2B
244+  91F7 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  91FA C9           8 ret
246+  91FB
247+  91FB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  91FB              ;
249+  91FB              ;	24/7/22
250+  91FB              ;
251+  91FB              ;	modifica_parametros_1er_DESPLZ_2
252+  91FB              ;
253+  91FB              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  91FB              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  91FB              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  91FB
257+  91FB 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  91FE A7           	and a
259+  91FF 20 1F        	jr nz,1F
260+  9201 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  9203 32 9E 85         ld (CTRL_DESPLZ),a
262+  9206
263+  9206 21 97 85     	ld hl,Columns
264+  9209 34           	inc (hl)
265+  920A 3A AA 85     	ld a,(Cuad_objeto)
266+  920D E6 01        	and 1
267+  920F 28 0F        	jr z,1F
268+  9211 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  9214 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  9215 22 98 85     	ld (Posicion_actual),hl
271+  9218 CD F2 93     	call Genera_coordenadas
272+  921B CD 86 93     	call Inc_CTRL_DESPLZ
273+  921E 18 03        	jr 2F
274+  9220 CD 86 93     1 call Inc_CTRL_DESPLZ
275+  9223 C9           2 ret
276+  9224
277+  9224              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  9224              ;
279+  9224              ;	24/7/22
280+  9224              ;
281+  9224              ;	Ciclo_completo.
282+  9224              ;
283+  9224              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  9224              ;
285+  9224              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  9224              ; 	Decrementamos (Columns).
287+  9224              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  9224              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  9224
290+  9224
291+  9224 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  9227 FE FF        	cp $ff
293+  9229 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  922B E6 F0        	and $f0
295+  922D 20 28        	jr nz,3F
296+  922F
297+  922F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  922F
299+  922F 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  9232 47           	ld b,a
301+  9233 3E F8        	ld a,$f8
302+  9235 80           	add b
303+  9236 32 9E 85     	ld (CTRL_DESPLZ),a
304+  9239 18 1C        	jr 3F
305+  923B 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  923E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  923F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  9240 32 9E 85     	ld (CTRL_DESPLZ),a
309+  9243 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9246 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9248 20 0A        	jr nz,2F
312+  924A 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  924D 23           	inc hl
314+  924E 22 98 85     	ld (Posicion_actual),hl
315+  9251 CD F2 93     	call Genera_coordenadas
316+  9254
317+  9254              ; Inicia el puntero de Sprite.
318+  9254
319+  9254 CD A0 87     2 call Inicia_puntero_objeto_der
320+  9257 C9           3 ret
321+  9258
322+  9258              ; ******************************************************************************************************************************************************************************************
323+  9258              ;
324+  9258              ;	15/02/23
325+  9258              ;
326+  9258              ;	Mov_left.
327+  9258              ;
328+  9258              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9258              ;
330+  9258              Mov_left
331+  9258
332+  9258 21 C3 85     	ld hl,Ctrl_0
333+  925B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  925D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  925D              ; 																	; _ en el caso de que no lo haya.
336+  925D 3A C3 85     	ld a,(Ctrl_0)
337+  9260 CB 77        	bit 6,a
338+  9262 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9264
340+  9264 CD 80 93     	call Stop_Amadeus_left
341+  9267 C8           	ret z
342+  9268 20 50        	jr nz,8F
343+  926A
344+  926A 3A 9C 85     11 ld a,(Coordenada_X)
345+  926D A7           	and a
346+  926E 20 4A        	jr nz,8F
347+  9270
348+  9270 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  9273 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  9274 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9276
352+  9276              ; ---------- ---------- ----------
353+  9276
354+  9276 3A AB 85     	ld a,(Vel_left)
355+  9279 FE 02        	cp 2
356+  927B 28 0F        	jr z,1F
357+  927D 38 04        	jr c,6F
358+  927F FE 04        	cp 4
359+  9281 28 12        	jr z,7F
360+  9283
361+  9283              ; ---------- ---------- ----------
362+  9283
363+  9283 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  9286 FE F9        	cp $f9
365+  9288 20 30        	jr nz,8F
366+  928A 18 10        	jr 4F
367+  928C 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  928F FE FA        	cp $fa
369+  9291 20 27        	jr nz,8F
370+  9293 18 07        	jr 4F
371+  9295 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  9298 FE FC        	cp $fc
373+  929A 20 1E        	jr nz,8F
374+  929C
375+  929C              ; ---------- ---------- ----------
376+  929C
377+  929C              4
378+  929C CD A8 93     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  929F              ;	call Reinicio
380+  929F
381+  929F              ; ---------- ---------- ----------
382+  929F
383+  929F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  92A1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  92A2
386+  92A2 2A A2 85     	ld hl,(Indice_Sprite_izq)
387+  92A5 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
388+  92A8
389+  92A8 CD C1 92     	call DESPLZ_IZQ
390+  92AB C1           	pop bc
391+  92AC 10 F3        	djnz 5B
392+  92AE 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  92B1 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  92B2 22 98 85     	ld (Posicion_actual),hl
395+  92B5 CD F2 93     	call Genera_coordenadas
396+  92B8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  92BA
398+  92BA              ; ---------- ---------- ----------
399+  92BA              ; Movemos, no hay recolocación.
400+  92BA
401+  92BA 2A 98 85     8 ld hl,(Posicion_actual)
402+  92BD CD C1 92     	call DESPLZ_IZQ
403+  92C0 C9           2 ret
404+  92C1
405+  92C1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  92C1              ;
407+  92C1              ;	22/9/22
408+  92C1
409+  92C1              DESPLZ_IZQ
410+  92C1
411+  92C1 CD D0 92     	call Desplaza_izquierda
412+  92C4 CD 1C 93         call modifica_parametros_1er_DESPLZ
413+  92C7 CD 44 93     	call Ciclo_completo_2
414+  92CA 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  92CD CB BE        	res 7,(hl)
416+  92CF C9           	ret
417+  92D0
418+  92D0              Desplaza_izquierda
419+  92D0
420+  92D0 3A AB 85     	ld a,(Vel_left)
421+  92D3 47           	ld b,a
422+  92D4 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
423+  92D7 23           1 inc hl
424+  92D8 23           	inc hl
425+  92D9 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  92DB 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
427+  92DE CD 89 87     	call Extrae_address
428+  92E1 22 9A 85     	ld (Puntero_objeto),hl
429+  92E4
430+  92E4              ; Modifica (Puntero_DESPLZ_der).
431+  92E4
432+  92E4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  92E4              ; Cuántos movimientos hemos hecho ??
434+  92E4              ; DE contiene (Puntero_DESPLZ_izq).
435+  92E4
436+  92E4 2A A2 85     7 ld hl,(Indice_Sprite_izq)
437+  92E7 EB           	ex de,hl
438+  92E8 A7           	and a
439+  92E9 ED 52        	sbc hl,de
440+  92EB CB 3D        	srl l
441+  92ED 3E 08        6 ld a,8
442+  92EF 95           	sub l
443+  92F0 30 1E        	jr nc,3F
444+  92F2
445+  92F2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  92F2              ; B="0".
447+  92F2
448+  92F2 04           4 inc b
449+  92F3 3C           	inc a
450+  92F4 20 FC        	jr nz,4B
451+  92F6 78           	ld a,b
452+  92F7 08           	ex af,af
453+  92F8 2A A2 85     	ld hl,(Indice_Sprite_izq)
454+  92FB 23           5 inc hl
455+  92FC 23           	inc hl
456+  92FD 10 FC        	djnz 5B
457+  92FF 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
458+  9302 CD 89 87     	call Extrae_address
459+  9305 22 9A 85     	ld (Puntero_objeto),hl
460+  9308
461+  9308              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  9308              ; _(Posicion_actual).
463+  9308
464+  9308 21 98 85     	ld hl,Posicion_actual
465+  930B 35           	dec (hl)
466+  930C 08           	ex af,af
467+  930D 6F           	ld l,a
468+  930E 18 DD        	jr 6B
469+  9310
470+  9310              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  9310
472+  9310 47           3 ld b,a
473+  9311 2A A0 85     	ld hl,(Indice_Sprite_der)
474+  9314 23           2 inc hl
475+  9315 23           	inc hl
476+  9316 10 FC        	djnz 2B
477+  9318 22 A4 85     	ld (Puntero_DESPLZ_der),hl
478+  931B C9           8 ret
479+  931C
480+  931C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  931C              ;
482+  931C              ;	modifica_parametros_1er_DESPLZ
483+  931C              ;
484+  931C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  931C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  931C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  931C
488+  931C 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  931F A7           	and a
490+  9320 20 1E        	jr nz,1F
491+  9322 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  9323 32 9E 85         ld (CTRL_DESPLZ),a
493+  9326 21 97 85     	ld hl,Columns
494+  9329 34           	inc (hl)
495+  932A 3A AA 85     	ld a,(Cuad_objeto)
496+  932D E6 01        	and 1
497+  932F 20 0F        	jr nz,1F
498+  9331 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  9334 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  9335 22 98 85     	ld (Posicion_actual),hl
501+  9338 CD F2 93     	call Genera_coordenadas
502+  933B CD 97 93     	call Dec_CTRL_DESPLZ
503+  933E 18 03        	jr 2F
504+  9340 CD 97 93     1 call Dec_CTRL_DESPLZ
505+  9343 C9           2 ret
506+  9344
507+  9344              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  9344
509+  9344 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  9347 FE F7        	cp $f7
511+  9349 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  934B 30 2C        	jr nc,3F
513+  934D
514+  934D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  934D
516+  934D 06 00        	ld b,0
517+  934F 04           4 inc b
518+  9350 3C           	inc a
519+  9351 FE F7        	cp $f7
520+  9353 20 FA        	jr nz,4B
521+  9355 3E FF        	ld a,$ff
522+  9357 90           	sub b
523+  9358 32 9E 85     	ld (CTRL_DESPLZ),a
524+  935B 18 1C        	jr 3F
525+  935D
526+  935D              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  935D
528+  935D 21 97 85     1 ld hl,Columns
529+  9360 35           	dec (hl)
530+  9361 AF           	xor a
531+  9362 32 9E 85     	ld (CTRL_DESPLZ),a
532+  9365 3A AA 85     	ld a,(Cuad_objeto)
533+  9368 E6 01        	and 1
534+  936A 28 0A        	jr z,2F
535+  936C 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  936F 2B           	dec hl
537+  9370 22 98 85     	ld (Posicion_actual),hl
538+  9373 CD F2 93     	call Genera_coordenadas
539+  9376
540+  9376              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  9376
542+  9376 CD B3 87     2 call Inicia_puntero_objeto_izq
543+  9379 C9           3 ret
544+  937A
545+  937A              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  937A              ;
547+  937A              ;	19/10/22
548+  937A              ;
549+  937A              ;	(cp 29) para un Amadeus de 3 Columns.
550+  937A              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  937A
552+  937A 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  937D FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  937F C9           	ret
555+  9380
556+  9380              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  9380              ;
558+  9380              ;	19/10/22
559+  9380              ;
560+  9380              ;	(cp 2) para un Amadeus de 3 Columns.
561+  9380              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  9380
563+  9380 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  9383 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  9385 C9           	ret
566+  9386
567+  9386              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  9386              ;
569+  9386              ;	24/7/22
570+  9386              ;
571+  9386              ;	Inc_CTRL_DESPLZ
572+  9386              ;
573+  9386              ;
574+  9386              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  9386
576+  9386 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  9389 3A AC 85     	ld a,(Vel_right)
578+  938C A7           	and a
579+  938D 28 06        	jr z,1F
580+  938F 47           	ld b,a
581+  9390 34           3 inc (hl)
582+  9391 10 FD        	djnz 3B
583+  9393 18 01        	jr 2F
584+  9395 34           1 inc (hl)
585+  9396 C9           2 ret
586+  9397
587+  9397              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  9397              ;
589+  9397              ;	5/2/23
590+  9397              ;
591+  9397              ;	Dec_CTRL_DESPLZ
592+  9397              ;
593+  9397              ;
594+  9397              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  9397
596+  9397 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  939A 3A AB 85     	ld a,(Vel_left)
598+  939D A7           	and a
599+  939E 28 06        	jr z,1F
600+  93A0 47           	ld b,a
601+  93A1 35           3 dec (hl)
602+  93A2 10 FD        	djnz 3B
603+  93A4 18 01        	jr 2F
604+  93A6 35           1 dec (hl)
605+  93A7 C9           2 ret
606+  93A8
607+  93A8              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  93A8
609+  93A8 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  93AB 01 1F 00     	ld bc,31
611+  93AE A7           	and a
612+  93AF ED 4A        	adc hl,bc
613+  93B1 22 98 85     	ld (Posicion_actual),hl
614+  93B4 21 C3 85     	ld hl,Ctrl_0														; $xxx1
615+  93B7 CB C6        	set 0,(hl)
616+  93B9 C9           	ret
617+  93BA
618+  93BA              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  93BA
620+  93BA 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  93BD 01 1F 00     	ld bc,31
622+  93C0 A7           	and a
623+  93C1 ED 42        	sbc hl,bc
624+  93C3 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
625+  93C6 21 C3 85     	ld hl,Ctrl_0
626+  93C9 CB CE        	set 1,(hl)
627+  93CB C9           	ret
628+  93CC
629+  93CC              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  93CC
631+  93CC 24           Reaparece_abajo inc h
632+  93CD 01 E0 17     	ld bc,$17e0
633+  93D0 A7           	and a
634+  93D1 ED 4A        	adc hl,bc
635+  93D3 22 98 85     	ld (Posicion_actual),hl
636+  93D6 21 C3 85     	ld hl,Ctrl_0
637+  93D9 CB D6        	set 2,(hl)
638+  93DB C9           	ret
639+  93DC
640+  93DC              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  93DC
642+  93DC 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  93DF A7           	and a
644+  93E0 ED 42        	sbc hl,bc
645+  93E2 22 98 85     	ld (Posicion_actual),hl
646+  93E5 21 C3 85     	ld hl,Ctrl_0
647+  93E8 CB DE        	set 3,(hl)
648+  93EA C9           	ret
649+  93EB
650+  93EB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  93EB
652+  93EB 2A A8 85     Reinicio ld hl,(Posicion_inicio)
653+  93EE 22 98 85     	ld (Posicion_actual),hl
654+  93F1 C9           	ret
# file closed: Direcciones.asm
848   93F2              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  93F2              ;	12/12/22
  2+  93F2              ;
  3+  93F2              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  93F2              ;	Fila superior "0", Columna izquierda "0".
  5+  93F2              ;
  6+  93F2              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  93F2              ;
  8+  93F2              ;	Modifica: A
  9+  93F2
 10+  93F2 C5           Genera_coordenadas push bc
 11+  93F3 E5           	push hl
 12+  93F4 2A 98 85     	ld hl,(Posicion_actual)
 13+  93F7 7D           	ld a,l
 14+  93F8 E6 1F        	and $1f
 15+  93FA 32 9C 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  93FD CD C0 90     	call calcula_tercio
 17+  9400 47           	ld b,a
 18+  9401 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  9402 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  9404 7D           	ld a,l
 21+  9405 E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  9407 28 05        	jr z,2F
 23+  9409 0C           1 inc c
 24+  940A D6 20        	sub 32
 25+  940C 20 FB        	jr nz,1B
 26+  940E 0C           2 inc c
 27+  940F 04           	inc b
 28+  9410 05           	dec b
 29+  9411 28 04        	jr z,3F
 30+  9413 3E E0        	ld a,$e0
 31+  9415 10 F2        	djnz 1B
 32+  9417 79           3 ld a,c
 33+  9418 3D           	dec a
 34+  9419 32 9D 85     	ld (Coordenada_y),a
 35+  941C E1           	pop hl
 36+  941D C1           	pop bc
 37+  941E C9           	ret
# file closed: Genera_coordenadas.asm
849   941F              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  941F
  2+  941F
  3+  941F              ;   11/8/22
  4+  941F              ;
  5+  941F              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  941F              ;
  7+  941F              ;   Mov_obj.asm
  8+  941F              ;
  9+  941F              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  941F              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  941F              ;
 12+  941F              ;   Codificación:
 13+  941F              ;
 14+  941F              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  941F
 16+  941F              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  941F
 18+  941F 02 40 00     Arriba db 2,%01000000,0
 19+  9422 02 80 00     Abajo db 2,%10000000,0
 20+  9425 02 20 00     Derecha db 2,%00100000,0
 21+  9428 02 10 00     Izquierda db 2,%00010000,0
 22+  942B 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  942F 60 42 60 40
 22+  9433 63
 23+  9434 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9438 22 A3 80 A0
 24+  943C 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  9440 84 A0 83 A0
 25+  9444 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9448 80 A3 22 A0
 26+  944C 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  9450 40 60 42 60
 27+  9454 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9458 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  945C 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  9460 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  9464 84
 31+  9465 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  9469 84 00
 32+  946B 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  946F 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  9473 1F 1F 1F 1F
 34+  9477 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  947B 1F 1F 1F 1F
 34+  947F 1F
 35+  9480 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  9484 2F 2F 2F 2F
 35+  9488 2F 2F
 36+  948A 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  948E 2F 2F 00
 37+  9491
 38+  9491
 39+  9491              ; ----- ----- ----- ----- -----
 40+  9491
 41+  9491 6F 94        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  9493 6B 94        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  9495 28 94        Indice_mov_Izquierda defw Izquierda
 44+  9497 25 94        Indice_mov_Derecha defw Derecha
 45+  9499 22 94        Indice_mov_Abajo defw Abajo
 46+  949B 1F 94        Indice_mov_Arriba defw Arriba
 47+  949D 5C 94        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  949F 60 94        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  94A1 58 94        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  94A3 65 94        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  94A5 2B 94        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  94A7              ; ----- ----- ----- ----- -----
 53+  94A7
 54+  94A7 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  94AA A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  94AB 28 02            jr z,1F
 57+  94AD 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  94AF 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  94B2 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  94B4 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  94B7              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  94B7 2A C7 85         ld hl,(Puntero_mov)
 63+  94BA 7E               ld a,(hl)
 64+  94BB 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  94BE 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  94BF 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  94C2
 68+  94C2 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  94C5 A7               and a
 70+  94C6 20 0C            jr nz,12F
 71+  94C8 2A C7 85         ld hl,(Puntero_mov)
 72+  94CB 7E               ld a,(hl)
 73+  94CC A7               and a
 74+  94CD 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  94CF E6 0F            and $0f
 76+  94D1 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  94D4              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  94D4 2A C7 85     12 ld hl,(Puntero_mov)
 79+  94D7 CB 7E            bit 7,(hl)
 80+  94D9 28 03            jr z,2F
 81+  94DB CD DE 90         call Mov_down
 82+  94DE 2A C7 85     2 ld hl, (Puntero_mov)
 83+  94E1 CB 76            bit 6,(hl)
 84+  94E3 28 03            jr z,3F
 85+  94E5 CD 0C 91         call Mov_up
 86+  94E8 2A C7 85     3 ld hl, (Puntero_mov)
 87+  94EB CB 6E            bit 5,(hl)
 88+  94ED 28 03            jr z,4F
 89+  94EF CD 3A 91         call Mov_right
 90+  94F2 2A C7 85     4 ld hl, (Puntero_mov)
 91+  94F5 CB 66            bit 4,(hl)
 92+  94F7 28 03            jr z,5F
 93+  94F9 CD 58 92         call Mov_left
 94+  94FC
 95+  94FC              ; ---------- --------- --------- ---------- ----------
 96+  94FC
 97+  94FC 3A CB 85     5 ld a,(Repetimos_db)
 98+  94FF A7               and a
 99+  9500 28 07            jr z,6F
100+  9502 3D               dec a
101+  9503 32 CB 85         ld (Repetimos_db),a
102+  9506 28 01            jr z,6f
103+  9508 C9           11 ret
104+  9509 21 C9 85     6 ld hl,Contador_db_mov
105+  950C 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  950D 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  9510 23               inc hl
108+  9511 22 C7 85         ld (Puntero_mov),hl
109+  9514 18 F2            jr 11B
110+  9516 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  9519 3A CA 85         ld a,(Incrementa_puntero)
112+  951C 47               ld b,a
113+  951D 23           8 inc hl
114+  951E 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  9520 5E               ld e,(hl)
116+  9521 23               inc hl
117+  9522 56               ld d,(hl)
118+  9523 EB               ex de,hl
119+  9524 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9527 18 DF            jr 11B
121+  9529
122+  9529              ; ---------- --------- --------- ---------- ----------
123+  9529              ;
124+  9529              ;   11/8/22
125+  9529              ;
126+  9529              ;   Prepara_Puntero_mov
127+  9529
128+  9529 E5           Prepara_Puntero_mov push hl
129+  952A D5               push de
130+  952B 2A C5 85         ld hl,(Puntero_indice_mov)
131+  952E 5E               ld e,(hl)
132+  952F 23               inc hl
133+  9530 56               ld d,(hl)
134+  9531 EB               ex de,hl
135+  9532 22 C7 85         ld (Puntero_mov),hl
136+  9535 D1               pop de
137+  9536 E1               pop hl
138+  9537 C9               ret
139+  9538
140+  9538              ; ---------- --------- --------- ---------- ----------
141+  9538              ;
142+  9538              ;   11/8/22
143+  9538              ;
144+  9538              ;   Reinicia_el_movimiento
145+  9538
146+  9538 CD 29 95     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  953B AF               xor a
148+  953C 32 C9 85         ld (Contador_db_mov),a
149+  953F 32 CA 85         ld (Incrementa_puntero),a
150+  9542
151+  9542              ;    jr $
152+  9542
153+  9542 C3 A7 94         jp Movimiento
154+  9545 C9               ret
155+  9546              ; ---------- --------- --------- ---------- ----------
156+  9546
157+  9546
158+  9546
159+  9546
160+  9546
161+  9546
162+  9546
163+  9546
164+  9546
165+  9546
166+  9546
167+  9546
168+  9546
169+  9546
170+  9546
171+  9546
172+  9546
173+  9546
# file closed: Patrones_de_mov.asm
850   9546              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9546              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9546              ;
  3+  9546              ;	3/1/23
  4+  9546              ;
  5+  9546              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9546
  7+  9546              ;	ADC HL,SP	LD (addr),SP
  8+  9546              ;	ADD HL,SP	LD SP,(addr)
  9+  9546              ;	ADD IX,SP	LD SP,nn
 10+  9546              ; 	ADD IY,SP	LD SP,HL
 11+  9546              ;				LD SP,IX
 12+  9546              ;	DEC SP		LD SP,IY
 13+  9546
 14+  9546              ;	EX (SP),HL
 15+  9546              ;	EX (SP),IX
 16+  9546              ;	EX (SP),IY
 17+  9546
 18+  9546              ;	INC SP
 19+  9546
 20+  9546
 21+  9546                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
851   7FD4
852   7FD4              	SAVESNA "Pruebas.sna", START
853   7FD4
854   7FD4
855   7FD4
# file closed: Banco_de_pruebas.asm
