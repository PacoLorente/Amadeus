# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 19 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD 80 8E     	call Pinta_entidades
  44  AA1C CD 72 8E     	call Pinta_Amadeus
  45  AA1F CD 5C 8E     	call Gestiona_entidades
  46  AA22 3E 00        	ld a,0
  47  AA24 D3 FE        	out ($fe),a
  48  AA26
  49  AA26 3E 02        	ld a,2
  50  AA28 D3 FE        	out ($fe),a
  51  AA2A CD 99 8E     	call Guarda_parametros_DRAW
  52  AA2D CD CC 8D     	call Restore_Amadeus
  53  AA30 CD 4F 8B     	call Gestiona_Amadeus
  54  AA33 11 9E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  55  AA36 CD DE 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  56  AA39
  57  AA39              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  58  AA39
  59  AA39 CD A5 8E     	call Recupera_parametros_DRAW
  60  AA3C CD 8D 8E     	call Actualiza_relojes
  61  AA3F 3E 00        	ld a,0
  62  AA41 D3 FE        	out ($fe),a
  63  AA43
  64  AA43 FD E1        	pop iy
  65  AA45 DD E1        	pop ix
  66  AA47 F1           	pop af
  67  AA48 C1           	pop bc
  68  AA49 D1           	pop de
  69  AA4A E1           	pop hl
  70  AA4B D9           	exx
  71  AA4C C1           	pop bc
  72  AA4D D1           	pop de
  73  AA4E E1           	pop hl
  74  AA4F 08           	ex af,af'
  75  AA50 F1           	pop af
  76  AA51 08           	ex af,af'
  77  AA52 D9           	exx
  78  AA53
  79  AA53 ED 7B 19 89  	ld sp,(Stack_3)
  80  AA57
  81  AA57 FB           	ei
  82  AA58 C9           	ret
  83  AA59
  84  AA59              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  85  AA59
  86  AA59              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA59              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA59              ;
   3+ AA59              ;	17/02/23
   4+ AA59              ;
   5+ AA59              ;	Sprites e índices.
   6+ AA59
   7+ AA59              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 56 70        	defw Album_de_fotos_1
 259+ 84F0 AC 70        	defw Album_de_fotos_2
 260+ 84F2 02 71        	defw Album_de_fotos_3
 261+ 84F4 58 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 AE 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 04 72        	defw Album_de_fotos_disparos_2
 264+ 84FA 5A 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1F 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 25 89        	defw End_Snapshot_1
 267+ 8500 29 89        	defw End_Snapshot_2
 268+ 8502 2D 89        	defw End_Snapshot_3
 269+ 8504 21 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 27 89        	defw End_Snapshot_disparos_1
 271+ 8508 2B 89        	defw End_Snapshot_disparos_2
 272+ 850A 2F 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  87  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C              ;
  95+ 858C              ;	Índice de cajas de entidades.
  96+ 858C
  97+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 858C
  99+ 858C DD 85        	defw Caja_1
 100+ 858E 1C 86        	defw Caja_2
 101+ 8590 5B 86        	defw Caja_3
 102+ 8592 9A 86        	defw Caja_4
 103+ 8594 D9 86        	defw Caja_5
 104+ 8596 18 87        	defw Caja_6
 105+ 8598 57 87        	defw Caja_7
 106+ 859A
 107+ 859A 00 00        	defw 0
 108+ 859C 00 00        	defw 0
 109+ 859E
 110+ 859E              ; ---------- ---------- ---------- ---------- ----------
 111+ 859E
 112+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 114+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 85A7
 117+ 85A7 05           	db %00000101									; (Attr).
 118+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 85AC
 121+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 85B0
 124+ 85B0 DE 50        	defw $50de										; (Posicion_inicio).
 125+ 85B2 04           	db 4 											; (Cuad_objeto).
 126+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 85B7
 128+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 85B8
 130+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 85BE
 132+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 133+ 85C0 00 00        	defw 0											;	" " " " " " "
 134+ 85C2 00 00        	defw 0											;	" " " " " " "
 135+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85C8
 137+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85CA
 139+ 85CA 00           	db 0											; (Autoriza_movimiento).
 140+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85CF 00 00
 141+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85D4
 143+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85D7
 146+ 85D7 00           	db 0 											; (Columnas).
 147+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85DD
 150+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85DD
 152+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85DF 00 00        	defw 0											; (Posicion_actual).
 154+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85E6
 157+ 85E6 00           	db %00000000 									; (Attr).
 158+ 85E7
 159+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85EF
 164+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85F1 00           	db 0											; (Cuad_objeto).
 166+ 85F2
 167+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85F6
 169+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85F7
 171+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85FD
 173+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85FF 00 00        	defw 0											;	" " " " " " "
 175+ 8601 00 00        	defw 0											;	" " " " " " "
 176+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 8607
 178+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 8609
 180+ 8609 00           	db 0											; (Autoriza_movimiento).
 181+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 860E 00 00
 182+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 8613
 184+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 186+ 8616
 187+ 8616 00           	db 0 											; (Columnas).
 188+ 8617 00 00        	defw 0											; (Limite_horizontal).
 189+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 861C
 191+ 861C              ; ---------- ---------- ---------- ---------- ----------
 192+ 861C
 193+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 861E 00 00        	defw 0											; (Posicion_actual).
 195+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8625
 198+ 8625 00           	db %00000000 									; (Attr).
 199+ 8626
 200+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 862E
 205+ 862E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8630 00           	db 0											; (Cuad_objeto).
 207+ 8631
 208+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8635
 210+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8636
 212+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 863C
 214+ 863C 00 00        	db 0,0											; Variables_de_pintado
 215+ 863E 00 00        	defw 0											;	" " " " " " "
 216+ 8640 00 00        	defw 0											;	" " " " " " "
 217+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8646
 219+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8648
 221+ 8648 00           	db 0											; (Autoriza_movimiento).
 222+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 864D 00 00
 223+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8652
 225+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8655
 228+ 8655 00           	db 0 											; (Columnas).
 229+ 8656 00 00        	defw 0											; (Limite_horizontal).
 230+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 865B
 232+ 865B              ; ---------- ---------- ---------- ---------- ----------
 233+ 865B
 234+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 865D 00 00        	defw 0											; (Posicion_actual).
 236+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8664
 239+ 8664 00           	db %00000000 									; (Attr).
 240+ 8665
 241+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 866D
 246+ 866D 00 00        	defw 0											; (Posicion_inicio).
 247+ 866F 00           	db 0											; (Cuad_objeto).
 248+ 8670
 249+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8674
 251+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8675
 253+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 867B
 255+ 867B 00 00        	db 0,0											; Variables_de_pintado
 256+ 867D 00 00        	defw 0											;	" " " " " " "
 257+ 867F 00 00        	defw 0											;	" " " " " " "
 258+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8685
 260+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8687
 262+ 8687 00           	db 0											; (Autoriza_movimiento).
 263+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 868C 00 00
 264+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8691
 266+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8694
 269+ 8694 00           	db 0 											; (Columnas).
 270+ 8695 00 00        	defw 0											; (Limite_horizontal).
 271+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 869A
 273+ 869A              ; ---------- ---------- ---------- ---------- ----------
 274+ 869A
 275+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 869C 00 00        	defw 0											; (Posicion_actual).
 277+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 86A3
 280+ 86A3 00           	db %00000000 									; (Attr).
 281+ 86A4
 282+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 86AC
 287+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 288+ 86AE 00           	db 0											; (Cuad_objeto).
 289+ 86AF
 290+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 86B3
 292+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 86B4
 294+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 86BA
 296+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 297+ 86BC 00 00        	defw 0											;	" " " " " " "
 298+ 86BE 00 00        	defw 0											;	" " " " " " "
 299+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86C4
 301+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86C6
 303+ 86C6 00           	db 0											; (Autoriza_movimiento).
 304+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86CB 00 00
 305+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86D0
 307+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86D3
 310+ 86D3 00           	db 0 											; (Columnas).
 311+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86D9
 314+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86D9
 316+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86DB 00 00        	defw 0											; (Posicion_actual).
 318+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86E2
 321+ 86E2 00           	db %00000000 									; (Attr).
 322+ 86E3
 323+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86EB
 328+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86ED 00           	db 0											; (Cuad_objeto).
 330+ 86EE
 331+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86F2
 333+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86F3
 335+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86F9
 337+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86FB 00 00        	defw 0											;	" " " " " " "
 339+ 86FD 00 00        	defw 0											;	" " " " " " "
 340+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 8703
 342+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 8705
 344+ 8705 00           	db 0											; (Autoriza_movimiento).
 345+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 870A 00 00
 346+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 870F
 348+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 350+ 8712
 351+ 8712 00           	db 0 											; (Columnas).
 352+ 8713 00 00        	defw 0											; (Limite_horizontal).
 353+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 8718
 355+ 8718              ; ---------- ---------- ---------- ---------- ----------
 356+ 8718
 357+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 871A 00 00        	defw 0											; (Posicion_actual).
 359+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 360+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8721
 362+ 8721 00           	db %00000000 									; (Attr).
 363+ 8722
 364+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 872A
 369+ 872A 00 00        	defw 0											; (Posicion_inicio).
 370+ 872C 00           	db 0											; (Cuad_objeto).
 371+ 872D
 372+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8731
 374+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8732
 376+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8738
 378+ 8738 00 00        	db 0,0											; Variables_de_pintado
 379+ 873A 00 00        	defw 0											;	" " " " " " "
 380+ 873C 00 00        	defw 0											;	" " " " " " "
 381+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8742
 383+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8744
 385+ 8744 00           	db 0											; (Autoriza_movimiento).
 386+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8749 00 00
 387+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 874E
 389+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8751
 392+ 8751 00           	db 0 											; (Columnas).
 393+ 8752 00 00        	defw 0											; (Limite_horizontal).
 394+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8757
 396+ 8757              ; ---------- ---------- ---------- ---------- ----------
 397+ 8757
 398+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8759 00 00        	defw 0											; (Posicion_actual).
 400+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8760
 403+ 8760 00           	db %00000000 									; (Attr).
 404+ 8761
 405+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8769
 410+ 8769 00 00        	defw 0											; (Posicion_inicio).
 411+ 876B 00           	db 0											; (Cuad_objeto).
 412+ 876C
 413+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8770
 415+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8771
 417+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8777
 419+ 8777 00 00        	db 0,0											; Variables_de_pintado
 420+ 8779 00 00        	defw 0											;	" " " " " " "
 421+ 877B 00 00        	defw 0											;	" " " " " " "
 422+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8781
 424+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8783
 426+ 8783 00           	db 0											; (Autoriza_movimiento).
 427+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8788 00 00
 428+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 878D
 430+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8790
 433+ 8790 00           	db 0 											; (Columnas).
 434+ 8791 00 00        	defw 0											; (Limite_horizontal).
 435+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8796
 437+ 8796              ; -------------------------------------------------------------------------------------
 438+ 8796              ;
 439+ 8796              ;	20/05/23
 440+ 8796              ;
 441+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8796              ;
 443+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8796
 448+ 8796              Indice_de_entidades
 449+ 8796
 450+ 8796 9A 87        	defw Entidad_1
 451+ 8798 AA 87        	defw Entidad_2
 452+ 879A
 453+ 879A              ;	BADSAT, (Satélite malvado).
 454+ 879A
 455+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 879C 04           	db %00000100									; (Attr).
 457+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 87A3 01           	db 1											; (Cuad_objeto).
 461+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 87A8 87 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 87AA
 464+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 87AC 02           	db %00000010									; (Attr).
 466+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 87B3 01           	db 1											; (Cuad_objeto).
 470+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 87B8 87 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 87BA
# file closed: Cajas_y_disparos.asm
  88  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CD 87        	defw Nivel_2
   7+ 87BE DA 87        	defw Nivel_3
   8+ 87C0 EA 87        	defw Nivel_4
   9+ 87C2 FC 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 04           Nivel_1 db 4	                                ; Nº de entidades.
  18+ 87C9 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CD 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D2 01 02
  21+ 87D4 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D8 01 02
  22+ 87DA 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DB 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DF 01
  24+ 87E0 03 01 01 01  	db 3,1,1,1,1
  24+ 87E4 01
  25+ 87E5 03 01 01 01  	db 3,1,1,1,1
  25+ 87E9 01
  26+ 87EA 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EB 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EF 01
  28+ 87F0 04 01 01 01  	db 4,1,1,1,1
  28+ 87F4 01
  29+ 87F5 04 01 01 01  	db 4,1,1,1,1
  29+ 87F9 01
  30+ 87FA 02 03        	db 2,3
  31+ 87FC 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FD 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8801 01
  33+ 8802 05 01 01 01  	db 5,1,1,1,1
  33+ 8806 01
  34+ 8807 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880B 01
  35+ 880C 05 01 01 01  	db 5,1,1,1,1
  35+ 8810 01
  36+ 8811
  37+ 8811              ;---------------------------------------------------------------------------------------------------------------
  38+ 8811              ;
  39+ 8811              ;   3/9/23
  40+ 8811              ;
  41+ 8811              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8811              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8811              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8811              ;	_en la caja DRAW correspondiente.
  45+ 8811              ;
  46+ 8811              ;	MODIFICA: HL,DE y A.
  47+ 8811              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8811
  49+ 8811              Inicializa_Punteros_de_nivel
  50+ 8811
  51+ 8811 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8814 22 6C 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8817 CD 1C 8D     	call Extrae_address
  54+ 881A 7E           	ld a,(hl)
  55+ 881B 32 0D 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881E 23           	inc hl
  57+ 881F 22 6E 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8822 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8823
  60+ 8823              ;---------------------------------------------------------------------------------------------------------------
  61+ 8823              ;
  62+ 8823              ;   13/5/23
  63+ 8823              ;
  64+ 8823              ;	Destruye A,BC,HL,DE
  65+ 8823
  66+ 8823              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8823              ;	_del juego.
  68+ 8823
  69+ 8823              Prepara_cajas
  70+ 8823
  71+ 8823              ; Preparamos los punteros de las cajas.
  72+ 8823
  73+ 8823 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8826 CD 1C 8D     	call Extrae_address
  75+ 8829 CD 66 88     	call Avanza_caja
  76+ 882C
  77+ 882C CD AA 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882F
  79+ 882F 2A 6E 89     	ld hl,(Datos_de_nivel)
  80+ 8832
  81+ 8832              ; HL está en los datos del nivel correspondiente.
  82+ 8832              ; B actuará como contador de cajas.
  83+ 8832
  84+ 8832 C5           1 push bc
  85+ 8833
  86+ 8833 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8834 CD 57 88     	call PreparaBC
  88+ 8837
  89+ 8837 21 96 87     	ld hl,Indice_de_entidades
  90+ 883A CD 5F 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883D 22 13 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8840
  93+ 8840 CD 70 88     	call Datos_de_entidad_a_caja
  94+ 8843
  95+ 8843 2A 0B 89     	ld hl,(Indice_restore_caja)
  96+ 8846 CD 1C 8D     	call Extrae_address
  97+ 8849 CD 66 88     	call Avanza_caja
  98+ 884C
  99+ 884C 2A 6E 89     	ld hl,(Datos_de_nivel)
 100+ 884F 23           	inc hl
 101+ 8850 22 6E 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8853
 103+ 8853 C1           	pop bc
 104+ 8854 10 DC        	djnz 1B
 105+ 8856 C9           	ret
 106+ 8857
 107+ 8857 CB 27        PreparaBC sla a
 108+ 8859 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885B 4F           	ld c,a
 110+ 885C 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885E C9           	ret
 112+ 885F
 113+ 885F A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8860 ED 4A        	adc hl,bc
 115+ 8862 CD 1C 8D     	call Extrae_address
 116+ 8865 C9           	ret
 117+ 8866
 118+ 8866 22 07 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8869 13           	inc de
 120+ 886A 13           	inc de
 121+ 886B EB           	ex de,hl
 122+ 886C 22 0B 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886F C9           	ret
 124+ 8870
 125+ 8870              Datos_de_entidad_a_caja
 126+ 8870
 127+ 8870              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8870
 129+ 8870
 130+ 8870 ED 5B 07 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8874
 132+ 8874 01 02 00     	ld bc,2
 133+ 8877 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8879
 135+ 8879 01 07 00     	ld bc,7
 136+ 887C CD A4 88     	call Situa_DE
 137+ 887F
 138+ 887F 01 05 00     	ld bc,5
 139+ 8882 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8884
 141+ 8884 01 04 00     	ld bc,4
 142+ 8887 CD A4 88     	call Situa_DE
 143+ 888A
 144+ 888A 01 07 00     	ld bc,7
 145+ 888D ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888F
 147+ 888F 01 12 00     	ld bc,18
 148+ 8892 CD A4 88     	call Situa_DE
 149+ 8895
 150+ 8895 01 02 00     	ld bc,2
 151+ 8898 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 889A
 153+ 889A              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 889A              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 889A
 156+ 889A 01 0F 00     	ld bc,15									; *****
 157+ 889D CD A4 88     	call Situa_DE
 158+ 88A0
 159+ 88A0 3E 03        	ld a,3
 160+ 88A2 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A3
 162+ 88A3 C9           	ret
 163+ 88A4
 164+ 88A4 EB           Situa_DE ex de,hl
 165+ 88A5 A7           	and a
 166+ 88A6 ED 4A        	adc hl,bc
 167+ 88A8 EB           	ex de,hl
 168+ 88A9 C9           	ret
 169+ 88AA
 170+ 88AA              ;---------------------------------------------------------------------------------------------------------------
 171+ 88AA              ;
 172+ 88AA              ;	21/5/23
 173+ 88AA              ;
 174+ 88AA              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88AA              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88AA              ;
 177+ 88AA              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88AA              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88AA              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88AA              ;
 181+ 88AA              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88AA              ;	MODIFICA: A y B.
 183+ 88AA              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88AA
 185+ 88AA              Admin_num_entidades
 186+ 88AA
 187+ 88AA              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88AA
 189+ 88AA 3A 0D 89     	ld a,(Numero_de_entidades)
 190+ 88AD A7           	and a
 191+ 88AE              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AE              ;	jr z,$
 193+ 88AE              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AE
 195+ 88AE 20 03        	jr nz,3F
 196+ 88B0
 197+ 88B0              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88B0
 199+ 88B0 CD 11 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B3
 201+ 88B3 3A 0D 89     3 ld a,(Numero_de_entidades)
 202+ 88B6 FE 0A        	cp 10
 203+ 88B8 38 08        	jr c,1F
 204+ 88BA
 205+ 88BA              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88BA              ; Actualizamos variables.
 207+ 88BA
 208+ 88BA 3E 0A        	ld a,10
 209+ 88BC 32 0E 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BF 47           	ld b,a
 211+ 88C0 18 04        	jr 2F
 212+ 88C2
 213+ 88C2              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C2              ; (Numero_de_entidades)="0".
 215+ 88C2
 216+ 88C2 32 0E 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C5 47           	ld b,a
 218+ 88C6 C9           2 ret
# file closed: Niveles.asm
  89  88C7
  90  88C7              ; ******************************************************************************************************************************************************************************************
  91  88C7              ; Constantes.
  92  88C7              ; ******************************************************************************************************************************************************************************************
  93  88C7              ;
  94  88C7              ; 10/11/23
  95  88C7
  96  88C7              ;
  97  88C7              ; Constantes generales.
  98  88C7              ;
  99  88C7
 100  88C7              Sprite_vacio equ $f000
 101  88C7              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 102  88C7              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 103  88C7              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 104  88C7              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 105  88C7
 106  88C7              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 107  88C7              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 108  88C7              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 109  88C7              Album_de_fotos_disparos equ $7158 ; (7158h - 71ad).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 110  88C7              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 111  88C7              ;
 112  88C7              Album_de_fotos_1 equ $7056	; (7056h - 70ab).
 113  88C7              Album_de_fotos_disparos_1 equ $71ae	; (71aeh - 7203h).
 114  88C7              Album_de_fotos_2 equ $70ac	; (70ach - 7101h).
 115  88C7              Album_de_fotos_disparos_2 equ $7204	; (7204h - 7259h).
 116  88C7              Album_de_fotos_3 equ $7102	; (7102 - 7157h).
 117  88C7              Album_de_fotos_disparos_3 equ $725a	; (725ah - 72afh).
 118  88C7
 119  88C7              Album_de_fotos_Amadeus equ $72b0 ; (72b0h - 72bch) ; 12 bytes.
 120  88C7              Almacen_de_parametros_DRAW equ $72bd ; ($72bd - $72fa) ; 61 bytes.
 121  88C7
 122  88C7
 123  88C7
 124  88C7              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 125  88C7
 126  88C7              ; ******************************************************************************************************************************************************************************************
 127  88C7              ; Variables.
 128  88C7              ; ******************************************************************************************************************************************************************************************
 129  88C7              ;
 130  88C7              ; 10/11//23
 131  88C7              ;
 132  88C7              ; Variables de DRAW. (Motor principal).
 133  88C7              ;
 134  88C7              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 135  88C7
 136  88C7 00           Filas db 0												; Filas. [DRAW]
 137  88C8 00           Columns db 0  											; Nº de columnas. [DRAW]
 138  88C9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 139  88CB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 140  88CD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 141  88CE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 142  88CF
 143  88CF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 144  88CF
 145  88CF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 146  88D0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 147  88D0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 148  88D0 00           Attr db 0												; Atributos de la entidad:
 149  88D1
 150  88D1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 151  88D1              ;
 152  88D1              ;	COLORES: 0 ..... NEGRO
 153  88D1              ;    		 1 ..... AZUL
 154  88D1              ; 			 2 ..... ROJO
 155  88D1              ;			 3 ..... MAGENTA
 156  88D1              ; 			 4 ..... VERDE
 157  88D1              ; 			 5 ..... CIAN
 158  88D1              ;			 6 ..... AMARILLO
 159  88D1              ; 			 7 ..... BLANCO
 160  88D1
 161  88D1 00 00        Indice_Sprite_der defw 0
 162  88D3 00 00        Indice_Sprite_izq defw 0
 163  88D5 00 00        Puntero_DESPLZ_der defw 0
 164  88D7 00 00        Puntero_DESPLZ_izq defw 0
 165  88D9
 166  88D9 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 167  88DB 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 168  88DC
 169  88DC              ; Variables de objeto. (Características).
 170  88DC
 171  88DC 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 172  88DD 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 173  88DE 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 174  88DF 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 175  88E0
 176  88E0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 177  88E1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 178  88E1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 179  88E1 00 00 00...  Variables_de_borrado ds 6
 180  88E7
 181  88E7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 182  88E9 00 00        	defw 0
 183  88EB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 184  88ED 00 00 00 00  	db 0,0,0,0
 185  88F1
 186  88F1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  88F1
 188  88F1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 189  88F2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 190  88F2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 191  88F2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 192  88F2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 193  88F2              ;
 194  88F2              ; 														DESCRIPCIÖN:
 195  88F2              ;
 196  88F2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 197  88F2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 198  88F2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 199  88F2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 200  88F2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 201  88F2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 202  88F2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 203  88F2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 204  88F2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 205  88F2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 206  88F2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 207  88F2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 208  88F2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 209  88F2              ;
 210  88F2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 211  88F2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 212  88F2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 213  88F2
 214  88F2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 215  88F2
 216  88F2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 217  88F4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 218  88F6 00 00        Puntero_indice_mov_bucle defw 0							;
 219  88F8              ;
 220  88F8              ;
 221  88F8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 222  88F9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 223  88F9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 224  88F9 00           Incrementa_puntero_backup db 0
 225  88FA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 226  88FB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 227  88FB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 228  88FC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 229  88FD 00           Cola_de_desplazamiento db 0								; Este byte indica:
 230  88FE              ;
 231  88FE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 232  88FE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 233  88FE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 234  88FE              ;
 235  88FE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 236  88FE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 237  88FE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 238  88FE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 239  88FE              ;
 240  88FE              ;														;	"$ff" ..... Bucle infinito de repetición.
 241  88FE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 242  88FE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 243  88FE
 244  88FE
 245  88FE              ; Variables de funcionamiento. [DRAW].
 246  88FE
 247  88FE 00           Columnas db 0
 248  88FF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 249  8901              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 250  8901 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 251  8902
 252  8902              ; variables de control general.
 253  8902
 254  8902 00           Ctrl_2 db 0
 255  8903              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 256  8903              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 257  8903              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 258  8903              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 259  8903              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 260  8903              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 261  8903              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 262  8903              ;
 263  8903              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 264  8903              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 265  8903              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 266  8903              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 267  8903              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 268  8903
 269  8903              ;														BIT 5, Indica si esta entidad está trabajando como "entidad guía". "1", Entidad guía.
 270  8903
 271  8903 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8904
 273  8904              ;! 61 Bytes por entidad.
 274  8904
 275  8904              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8904              ;					         		---------;      ;---------
 277  8904
 278  8904
 279  8904              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8904
 281  8904 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8905
 283  8905              ;														DESCRIPCIÓN:
 284  8905              ;
 285  8905              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8905              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8905              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8905              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8905              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8905              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8905
 292  8905              ;														BIT 3, Recarga de nueva oleada.
 293  8905              ;														BIT 4, Recarga de nueva oleada.
 294  8905              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  8905              ;														BIT 6, **** Frame completo.
 296  8905              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8905
 298  8905 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8907              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8907              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8907              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8907
 303  8907              ; Gestión de ENTIDADES y CAJAS.
 304  8907
 305  8907 00 00        Puntero_store_caja defw 0
 306  8909 00 00        Puntero_restore_caja defw 0
 307  890B 00 00        Indice_restore_caja defw 0
 308  890D 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 309  890E 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 310  890F 00           Entidades_en_curso db 0									; ..... ..... .....
 311  8910 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 312  8911              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 313  8911              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 314  8911              ;														; _ (Numero_de_malotes)="0".
 315  8911 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 316  8913 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 317  8915              ;														; _ puntero (Indice_entidades).
 318  8915
 319  8915
 320  8915              ;---------------------------------------------------------------------------------------------------------------
 321  8915              ;
 322  8915              ;	18/11/23
 323  8915              ;
 324  8915              ;	Álbumes.
 325  8915
 326  8915 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 327  8917              ;														; _variable para almacenar lo posición del puntero_
 328  8917              ; 														; _de pila, SP.
 329  8917 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 330  8919              ;														; La utiliza la rutina [Extrae_foto_registros].
 331  8919 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 332  891B 00 00        Stack_snapshot defw 0
 333  891D 00 00        Stack_snapshot_disparos defw 0
 334  891F
 335  891F 00 00        End_Snapshot defw 0
 336  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 337  8921 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 338  8923              ;														; _el snapshot de los registros del siguiente disparo.
 339  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 340  8923 B0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 341  8925 00 00        End_Snapshot_1 defw 0
 342  8927 00 00        End_Snapshot_disparos_1 defw 0
 343  8929 00 00        End_Snapshot_2 defw 0
 344  892B 00 00        End_Snapshot_disparos_2 defw 0
 345  892D 00 00        End_Snapshot_3 defw 0
 346  892F 00 00        End_Snapshot_disparos_3 defw 0
 347  8931
 348  8931 00 00        Puntero_indice_album_de_fotos defw 0
 349  8933 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 350  8935
 351  8935 00 00        Puntero_indice_End_Snapshot defw 0
 352  8937 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 353  8939 00 00        Puntero_de_End_Snapshot defw 0
 354  893B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 355  893D
 356  893D F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 357  893E              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 358  893E
 359  893E 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 360  893F              ;
 361  893F              ;														DESCRIPCIÓN:
 362  893F              ;
 363  893F              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 364  893F              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 365  893F              ;																_ álbum. También indica que "hay recolocación" antes de ejecutar la "cascada de álbumes". El tipo de recolocación lo definen_
 366  893F              ;																_ los bits 1 y 2.
 367  893F              ;														BIT 1, Indica que la recolocación de álbumes será de Album3_a_Album2, (siempre que Álbum_3 contenga un FRAME completo).
 368  893F              ;														BIT 2, Indica que la recolocación de álbumes será de Album2_a_Album1, (siempre que álbum_2 contenga un FRAME completo).
 369  893F              ;																Nota: En el caso de que al hacer la recolocación, nos encontremos con que el álbum donante sigue incompleto, saltaremos_
 370  893F              ;																	_ a ejecutar la "Casacada" de álbumes para limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 371  893F              ;														BIT 3, Existe DOBLE RECOLOCACIÓN. Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Siempre que Album_de_fotos_3 contenga un FRAME completo,_
 372  893F              ;																_ pasaremos Album3_a_Album2 y Album2_a_Album1. También modificaremos los punteros y los situaremos al comienzo de Album_de_fotos_2.
 373  893F              ;																_ En el caso de que al hacer la DOBLE RECOLOCACIÓN, Album_de_fotos_3 esté incompleto, saltaremos a ejecutar la "Casacada" de álbumes para_
 374  893F              ;											 					_ limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 375  893F              ;														BIT 4, Buffer vacío !!!. Album_de_fotos está vacío y no podemos volcar Album_de_fotos_1. Está incompleto.
 376  893F              ;																_ El siguiente FRAME no se imprime, NO HAY CUADRO.
 377  893F
 378  893F              ;														BIT 5, Este bit a "1" indica que existe una "ENTIDAD GUÍA".
 379  893F
 380  893F 00 00 00...  Variables_de_pintado_entidad_sombra ds 14				; Almacenaremos aquí las (Variables_de_borrado)	de la "ENTIDAD GUÍA". Las utilizarán las suiguientes entidades sombra para pintarse._
 381  894D              ;							  							  _ (Variables_de_pintado) precalculadas, sin pasar por DRAW. Tras las tres variables_de_pintado precalculadas, almacenaremos el posicionamiento_
 382  894D              ;														  _ de la "Entidad guía". Estos 8 bytes son necesarios para convertir una entidad "SOMBRA" en una "ENTIDAD GUÍA", cuando ésta sea destruida:
 383  894D              ;
 384  894D              ;														Filas db 0												; Filas. [DRAW]
 385  894D              ;														Columns db 0  											; Nº de columnas. [DRAW]
 386  894D              ;														Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 387  894D              ;														Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 388  894D              ;														Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 389  894D              ;														Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 390  894D              ;
 391  894D              ;														;
 392  894D              ;---------------------------------------------------------------------------------------------------------------
 393  894D
 394  894D              ; Gestión de Disparos.
 395  894D
 396  894D 00           Numero_de_disparotes db 0
 397  894E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 398  8950 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 399  8952 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 400  8953              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 401  8953              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 402  8953 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 403  8955              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 404  8955              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 405  8955              ;														; _produzca colisión.
 406  8955 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 407  8957              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 408  8957 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 409  895A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 410  895A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 411  895D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 412  895D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 413  895F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 414  8960
 415  8960              ;---------------------------------------------------------------------------------------------------------------
 416  8960
 417  8960              ; Relojes y temporizaciones.
 418  8960
 419  8960 00           Contador_de_frames db 0
 420  8961 00           Contador_de_frames_2 db 0
 421  8962
 422  8962 04           Clock_explosion db 4
 423  8963 1E           Clock_Entidades_en_curso db 30
 424  8964 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 425  8965              ;														; Repite la oleada de entidades.
 426  8965 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 427  8966 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 428  8967 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 429  8968
 430  8968 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 431  8969 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 432  896A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 433  896B
 434  896B              ;---------------------------------------------------------------------------------------------------------------
 435  896B
 436  896B              ; Gestión de NIVELES.
 437  896B
 438  896B 00           Nivel db 0												; Nivel actual del juego.
 439  896C 00 00        Puntero_indice_NIVELES defw 0
 440  896E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 441  8970              ; 														; _ que definen el NIVEL.
 442  8970              ; Y todo comienza aquí .....
 443  8970              ;
 444  8970              ; Rutina principal *************************************************************************************************************************************************************************
 445  8970              ;
 446  8970              ;	16/11/22
 447  8970
 448  8970              START
 449  8970
 450  8970 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 451  8973 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 452  8975 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 453  8977 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 454  8979 F3           	DI
 455  897A
 456  897A 3E 07        	ld a,%00000111
 457  897C CD B4 99     	call Cls
 458  897F
 459  897F CD F5 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 460  8982
 461  8982              ; INICIALIZACIÓN.
 462  8982
 463  8982 CD 11 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 464  8985 CD 23 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 465  8988 CD 1A 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 466  898B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 467  898B CD 30 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 468  898E              ;													     ; _ malotes antes de guardar ninguna foto.
 469  898E              ; ----------
 470  898E
 471  898E CD A5 8D     	call Restore_entidad
 472  8991
 473  8991 21 0E 89     	ld hl,Numero_parcial_de_entidades
 474  8994 46           	ld b,(hl)
 475  8995 04           	inc b
 476  8996 05           	dec b
 477  8997 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 478  8999
 479  8999              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 480  8999              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 481  8999              ;	Pintamos el resto de entidades:
 482  8999
 483  8999              ;	INICIA ENTIDADES !!!!!
 484  8999
 485  8999 C5           1 push bc  												; Guardo el contador de entidades.
 486  899A CD EA 8B     	call Inicia_entidad
 487  899D C1           	pop bc
 488  899E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 489  89A0
 490  89A0              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 491  89A0              ; (Esto se dá cuando se inicia una nueva oleada).
 492  89A0
 493  89A0 3A 04 89     	ld a,(Ctrl_1)
 494  89A3 CB 5F        	bit 3,a
 495  89A5 20 15        	jr nz,5F											; Loop
 496  89A7
 497  89A7              ; 	INICIA AMADEUS !!!!!
 498  89A7
 499  89A7 CD CC 8D     3 call Restore_Amadeus
 500  89AA CD 22 8D     	call Inicia_Puntero_objeto
 501  89AD CD A7 93     	call Draw
 502  89B0 CD A0 7F     	call Guarda_foto_registros
 503  89B3 CD 29 8E     	call Guarda_datos_de_borrado_Amadeus
 504  89B6
 505  89B6 11 9E 85     	ld de,Amadeus_db
 506  89B9 CD DE 8D     	call Store_Amadeus
 507  89BC
 508  89BC              ; 	INICIA DISPAROS !!!!!
 509  89BC
 510  89BC              ;	call Inicia_Puntero_Disparo_Entidades
 511  89BC              ;	call Inicia_Puntero_Disparo_Amadeus
 512  89BC
 513  89BC              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 514  89BC
 515  89BC CD 1A 8C     5 call Inicia_punteros_de_cajas
 516  89BF CD A5 8D     	call Restore_entidad
 517  89C2
 518  89C2 3A 04 89     	ld a,(Ctrl_1)
 519  89C5 CB 5F        	bit 3,a
 520  89C7 28 07        	jr z,6F
 521  89C9
 522  89C9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 523  89C9
 524  89C9 21 04 89     	ld hl,Ctrl_1
 525  89CC CB 9E        	res 3,(hl)
 526  89CE 18 03        	jr Main
 527  89D0
 528  89D0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 529  89D0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 530  89D0              ; _ para situarnos en el siguiente album.
 531  89D0
 532  89D0
 533  89D0 CD 61 8C     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 534  89D3
 535  89D3
 536  89D3              ; ------------------------------------
 537  89D3
 538  89D3              Main
 539  89D3              ;
 540  89D3              ;	12/11/23
 541  89D3
 542  89D3              ; Aparece nueva entidad ???
 543  89D3
 544  89D3              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 545  89D3              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 546  89D3              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 547  89D3              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 548  89D3              ;														; _un 2º bloque.
 549  89D3
 550  89D3 3A 63 89     	ld a,(Clock_Entidades_en_curso)
 551  89D6 47           	ld b,a
 552  89D7 3A 60 89     	ld a,(Contador_de_frames)
 553  89DA B8           	cp b
 554  89DB 28 07        	jr z,21F
 555  89DD
 556  89DD              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 557  89DD              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 558  89DD              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 559  89DD              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 560  89DD
 561  89DD 3C           	inc a
 562  89DE B8           	cp b
 563  89DF 20 1B        	jr nz,13F
 564  89E1
 565  89E1 32 60 89     	ld (Contador_de_frames),a
 566  89E4
 567  89E4              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 568  89E4              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 569  89E4
 570  89E4 3A 0E 89     21 ld a,(Numero_parcial_de_entidades)
 571  89E7 47           	ld b,a
 572  89E8 3A 0F 89     	ld a,(Entidades_en_curso)
 573  89EB B8           	cp b
 574  89EC 28 0E        	jr z,13F
 575  89EE 30 0C        	jr nc,13F
 576  89F0
 577  89F0              ; --- --- --- --- ---
 578  89F0
 579  89F0 3C           	inc a
 580  89F1 32 0F 89     	ld (Entidades_en_curso),a
 581  89F4
 582  89F4              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 583  89F4
 584  89F4 3A 63 89     	ld a,(Clock_Entidades_en_curso)
 585  89F7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 586  89F7              ;! _ IMPREDECIBLE !!!!
 587  89F7 C6 32        	add 50
 588  89F9 32 63 89     	ld (Clock_Entidades_en_curso),a
 589  89FC
 590  89FC              ; -------------------------------------------------------------------------------------------------------------
 591  89FC
 592  89FC              ; Habilita disparos.
 593  89FC
 594  89FC 21 65 89     13 ld hl,Disparo_Amadeus
 595  89FF 11 67 89     	ld de,CLOCK_repone_disparo_Amadeus
 596  8A02 CD 78 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 597  8A05
 598  8A05 21 68 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 599  8A08 11 6A 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 600  8A0B CD 78 9D     	call Habilita_disparos
 601  8A0E
 602  8A0E              ; COLISIONES.
 603  8A0E
 604  8A0E CD 89 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 605  8A11
 606  8A11              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 607  8A11              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 608  8A11              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 609  8A11
 610  8A11 AF           	xor a
 611  8A12 32 52 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 612  8A15
 613  8A15 CD 1A 8C     	call Inicia_punteros_de_cajas
 614  8A18 CD A5 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 615  8A1B              ; 														; _ en DRAW.
 616  8A1B 3A C7 88     	ld a,(Filas)
 617  8A1E A7           	and a
 618  8A1F 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 619  8A21 CD B7 8D     	call Incrementa_punteros_de_cajas
 620  8A24 18 F2        	jr 12B
 621  8A26
 622  8A26              ; ---------------------------------------------------------------------------------------
 623  8A26
 624  8A26 3A 0E 89     10 ld a,(Numero_parcial_de_entidades)
 625  8A29 47               ld b,a
 626  8A2A A7           	and a
 627  8A2B 20 14        	jr nz,11F
 628  8A2D
 629  8A2D 21 04 89     	ld hl,Ctrl_1
 630  8A30 CB 66        	bit 4,(hl)
 631  8A32 C2 EE 8A     	jp nz,16F
 632  8A35
 633  8A35              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 634  8A35
 635  8A35 21 04 89     	ld hl,Ctrl_1
 636  8A38 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 637  8A3A
 638  8A3A 3A 60 89     	ld a,(Contador_de_frames)
 639  8A3D 3C           	inc a
 640  8A3E 32 64 89     	ld (Activa_recarga_cajas),a
 641  8A41
 642  8A41              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 643  8A41
 644  8A41 3A 0F 89     11 ld a,(Entidades_en_curso)
 645  8A44 A7           	and a
 646  8A45 CA EE 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 647  8A48 47           	ld b,a												; No hay entidades que gestionar.
 648  8A49
 649  8A49              ; Código que ejecutamos con cada entidad:
 650  8A49              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 651  8A49
 652  8A49 C5           15 push bc 												; Nº de entidades en curso.
 653  8A4A
 654  8A4A              ;	Existe Entidad guía ???
 655  8A4A
 656  8A4A 3A 3E 89     	ld a,(Ctrl_Semaforo)
 657  8A4D CB 6F        	bit 5,a
 658  8A4F 20 0A        	jr nz,22F
 659  8A51
 660  8A51              ;		Aún no existe entidad guía o ha sido eliminada. Fijamos esta entidad como una "entidad guía".
 661  8A51
 662  8A51 21 02 89     	ld hl,Ctrl_2
 663  8A54 CB EE        	set 5,(hl)
 664  8A56 CB EF        	set 5,a
 665  8A58 32 3E 89     	ld (Ctrl_Semaforo),a
 666  8A5B
 667  8A5B              ; Impacto ???
 668  8A5B
 669  8A5B 3A E0 88     22 ld a,(Impacto)
 670  8A5E A7           	and a
 671  8A5F 28 33        	jr z,8F
 672  8A61
 673  8A61              ; Hay Impacto en esta entidad.
 674  8A61
 675  8A61 21 62 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 676  8A64 35           	dec (hl)
 677  8A65 C2 E3 8A     	jp nz,17F
 678  8A68
 679  8A68              ;! Velocidad de la animación de la explosión.
 680  8A68
 681  8A68 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 682  8A6A              ;														; _,(velocidad de la explosión).
 683  8A6A
 684  8A6A              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 685  8A6A
 686  8A6A 18 FE        	jr $
 687  8A6C
 688  8A6C CD 49 8E     	call Repone_datos_de_borrado
 689  8A6F CD BE 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 690  8A72
 691  8A72              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 692  8A72
 693  8A72 3A 02 89     	ld a,(Ctrl_2)
 694  8A75 CB 4F        	bit 1,a
 695  8A77 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 696  8A79
 697  8A79              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 698  8A79
 699  8A79 3A CF 88     	ld a,(CTRL_DESPLZ)
 700  8A7C A7           	and a
 701  8A7D 20 08        	jr nz,18F
 702  8A7F
 703  8A7F 21 84 84     	ld hl,Indice_Explosion_2x2-2
 704  8A82 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 705  8A85 18 06        	jr 19F
 706  8A87
 707  8A87 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 708  8A8A 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 709  8A8D
 710  8A8D 21 02 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 711  8A90 CB CE        	set 1,(hl)
 712  8A92 18 22        	jr 7F
 713  8A94
 714  8A94              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 715  8A94              ; _con las coordenadas de la entidad almacenada en DRAW.
 716  8A94
 717  8A94 3A 04 89     8 ld a,(Ctrl_1)
 718  8A97 CB 57        	bit 2,a
 719  8A99 28 1B        	jr z,7F
 720  8A9B
 721  8A9B 2A 55 89     	ld hl,(Coordenadas_disparo_certero)
 722  8A9E EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 723  8A9F              ;														; E contiene la coordenada_X del disparo.
 724  8A9F 2A CD 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 725  8AA2              ;														; H FILA, (Coordenada_y de la entidad).
 726  8AA2 A7           	and a
 727  8AA3 ED 52        	sbc hl,de
 728  8AA5
 729  8AA5 CD C0 92     	call Determina_resultado_comparativa
 730  8AA8
 731  8AA8 78           	ld a,b
 732  8AA9 A7           	and a
 733  8AAA 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 734  8AAC
 735  8AAC              ; ----- ----- -----
 736  8AAC
 737  8AAC 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 738  8AAE 32 E0 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 739  8AB1
 740  8AB1 21 04 89     	ld hl,Ctrl_1
 741  8AB4 CB 96        	res 2,(hl)
 742  8AB6
 743  8AB6 CD 6B 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 744  8AB9
 745  8AB9 3A F1 88     	ld a,(Ctrl_0)
 746  8ABC CB 67        	bit 4,a
 747  8ABE 28 23        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 748  8AC0
 749  8AC0              ; Vamos a guardar la foto de una ENTIDAD SOMBRA ?????
 750  8AC0
 751  8AC0 3A 02 89     	ld a,(Ctrl_2)
 752  8AC3 CB 6F        	bit 5,a
 753  8AC5 20 07        	jr nz,24F
 754  8AC7
 755  8AC7              ;! Vamos a guardar en el álbum de fotos correspondiente una ENTIDAD SOMBRA !!!!!!!!!!
 756  8AC7
 757  8AC7 F3           	di
 758  8AC8 18 FE        	jr $
 759  8ACA FB           	ei
 760  8ACB
 761  8ACB CD 3E 8B     	call Preparamos_registros_entidad_SOMBRA
 762  8ACE
 763  8ACE              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 764  8ACE              ; [[[
 765  8ACE CD 23 8E     24 call Detecta_disparo_entidad
 766  8AD1              ; ]]]
 767  8AD1 CD FB 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 768  8AD4
 769  8AD4              ; ENTIDAD GUÍA ???
 770  8AD4              ;
 771  8AD4              ; Si es así hay que guardar sus (Variables_de_borrado) al almacén (Variables_de_pintado_entidad_sombra).
 772  8AD4
 773  8AD4 3A 02 89     	ld a,(Ctrl_2)
 774  8AD7 CB 6F        	bit 5,a
 775  8AD9 28 03        	jr z,23F
 776  8ADB
 777  8ADB CD 1C 8B     	call Datos_entidad_guia_a_almacen
 778  8ADE
 779  8ADE              ; --- --- --- --- ---
 780  8ADE
 781  8ADE 21 F1 88     23 ld hl,Ctrl_0
 782  8AE1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 783  8AE3
 784  8AE3 CD 6A 8D     17 call Store_Restore_cajas
 785  8AE6
 786  8AE6 C1           	pop bc
 787  8AE7              ;	djnz 15B
 788  8AE7
 789  8AE7 05           	dec b
 790  8AE8 C2 49 8A     	jp nz,15B
 791  8AEB
 792  8AEB              ;	Después de cada ciclo, LIMPIAMOS (Variables_de_pintado_entidad_sombra).
 793  8AEB
 794  8AEB CD 30 8B     	call Limpia_Variables_de_pintado_entidad_sombra
 795  8AEE
 796  8AEE              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 797  8AEE              ; Hemos gestionado todas las unidades.
 798  8AEE              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 799  8AEE
 800  8AEE              ;	ld hl,Ctrl_1
 801  8AEE              ;	res 2,(hl)
 802  8AEE
 803  8AEE CD 61 8C     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 804  8AF1              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 805  8AF1
 806  8AF1              ; ----------------------------------------
 807  8AF1
 808  8AF1 3A 04 89     	ld a,(Ctrl_1) 										; Existe Loop?
 809  8AF4 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 810  8AF6 CA D3 89     	jp z,Main
 811  8AF9
 812  8AF9              ; RECARGA DE NUEVA OLEADA.
 813  8AF9
 814  8AF9 3A 60 89     	ld a,(Contador_de_frames)
 815  8AFC 47           	ld b,a
 816  8AFD 3A 64 89     	ld a,(Activa_recarga_cajas)
 817  8B00 B8           	cp b
 818  8B01 28 08        	jr z,20F
 819  8B03
 820  8B03 21 04 89     	ld hl,Ctrl_1
 821  8B06 CB E6        	set 4,(hl)
 822  8B08 C3 D3 89     	jp Main
 823  8B0B
 824  8B0B 21 04 89     20 ld hl,Ctrl_1
 825  8B0E CB A6        	res 4,(hl)
 826  8B10
 827  8B10 3A 60 89     	ld a,(Contador_de_frames)
 828  8B13
 829  8B13              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 830  8B13              ;! _ IMPREDECIBLE !!!!
 831  8B13
 832  8B13 C6 0A        	add 10
 833  8B15 32 63 89     	ld (Clock_Entidades_en_curso),a
 834  8B18
 835  8B18 C3 85 89     	jp 4B
 836  8B1B
 837  8B1B C9           	ret
 838  8B1C
 839  8B1C              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 840  8B1C              ;
 841  8B1C              ;	18/11/23
 842  8B1C
 843  8B1C              Datos_entidad_guia_a_almacen
 844  8B1C
 845  8B1C              ; Trasbase de datos precalculados.
 846  8B1C
 847  8B1C 21 E1 88     	ld hl,Variables_de_borrado
 848  8B1F 11 3F 89     	ld de,Variables_de_pintado_entidad_sombra
 849  8B22 01 06 00     	ld bc,6
 850  8B25 ED B0        	ldir
 851  8B27
 852  8B27              ; Trasbase de datos Draw de "ENTIDAD GUÍA".
 853  8B27
 854  8B27 21 C7 88     	ld hl,Filas
 855  8B2A 01 08 00     	ld bc,8
 856  8B2D ED B0        	ldir
 857  8B2F C9           	ret
 858  8B30
 859  8B30 AF           Limpia_Variables_de_pintado_entidad_sombra xor a
 860  8B31 21 3F 89     	ld hl,Variables_de_pintado_entidad_sombra
 861  8B34 11 40 89     	ld de,Variables_de_pintado_entidad_sombra+1
 862  8B37 01 0D 00     	ld bc,13
 863  8B3A 77           	ld (hl),a
 864  8B3B ED B0        	ldir
 865  8B3D C9           	ret
 866  8B3E
 867  8B3E 21 43 89     Preparamos_registros_entidad_SOMBRA ld hl,Variables_de_pintado_entidad_sombra+4
 868  8B41 CD 1C 8D     	call Extrae_address
 869  8B44 E5           	push hl
 870  8B45 FD E1        	pop iy
 871  8B47 2B           	dec hl
 872  8B48 2B           	dec hl
 873  8B49 E5           	push hl
 874  8B4A DD E1        	pop ix
 875  8B4C 2B           	dec hl
 876  8B4D 2B           	dec hl
 877  8B4E C9           	ret
 878  8B4F
 879  8B4F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 880  8B4F              ;
 881  8B4F              ;	16/11/23
 882  8B4F
 883  8B4F              Gestiona_Amadeus
 884  8B4F
 885  8B4F              ;! Activa/desactiva impacto con Amadeus.
 886  8B4F
 887  8B4F 3A E0 88     	ld a,(Impacto)
 888  8B52 A7           	and a
 889  8B53 20 FE        	jr nz,$
 890  8B55
 891  8B55 CD D7 8B     	call Mov_Amadeus
 892  8B58
 893  8B58 3A F1 88     	ld a,(Ctrl_0)
 894  8B5B CB 67        	bit 4,a
 895  8B5D 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 896  8B5F
 897  8B5F CD FB 8B     	call Guarda_foto_entidad_a_pintar
 898  8B62 CD 29 8E     	call Guarda_datos_de_borrado_Amadeus
 899  8B65
 900  8B65 21 F1 88     14 ld hl,Ctrl_0
 901  8B68 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 902  8B6A
 903  8B6A              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 904  8B6A
 905  8B6A              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 906  8B6A
 907  8B6A              ;	call Calcula_numero_de_disparotes
 908  8B6A
 909  8B6A C9           	ret
 910  8B6B
 911  8B6B              ; --------------------------------------------------------------------------------------------------------------
 912  8B6B              ;
 913  8B6B              ;	27/05/23
 914  8B6B
 915  8B6B              Mov_obj
 916  8B6B
 917  8B6B 3A 02 89     	ld a,(Ctrl_2)
 918  8B6E CB 4F        	bit 1,a
 919  8B70 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 920  8B72
 921  8B72              ; Explosión:
 922  8B72
 923  8B72 3A 03 89     	ld a,(Frames_explosion)
 924  8B75 A7           	and a
 925  8B76 20 11        	jr nz,4F
 926  8B78
 927  8B78              ; Una alimaña menos!!!!!!!!!1
 928  8B78
 929  8B78 CD E7 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 930  8B7B 21 0E 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 931  8B7E 35           	dec (hl)
 932  8B7F 21 0F 89     	ld hl,Entidades_en_curso
 933  8B82 35           	dec (hl)
 934  8B83 21 0D 89     	ld hl,Numero_de_entidades
 935  8B86 35           	dec (hl)
 936  8B87 18 4D        	jr 3F
 937  8B89
 938  8B89              ; -----
 939  8B89
 940  8B89              ;	`Movemos´ la explosión.
 941  8B89
 942  8B89 2A D5 88     4 ld hl,(Puntero_DESPLZ_der)
 943  8B8C 23           	inc hl
 944  8B8D 23           	inc hl
 945  8B8E 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 946  8B91 CD 1C 8D     	call Extrae_address
 947  8B94 22 CB 88     	ld (Puntero_objeto),hl
 948  8B97
 949  8B97 21 03 89     	ld hl,Frames_explosion
 950  8B9A 35           	dec (hl)
 951  8B9B
 952  8B9B              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 953  8B9B 18 39        	jr 3F
 954  8B9D
 955  8B9D AF           2 xor a
 956  8B9E 32 F1 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 957  8BA1
 958  8BA1              ;	Entidad SOMBRA ???
 959  8BA1
 960  8BA1 3A 02 89     	ld a,(Ctrl_2)
 961  8BA4 CB 6F        	bit 5,a
 962  8BA6 20 14        	jr nz,5F
 963  8BA8
 964  8BA8              ;	Gestionamos una ENTIDAD SOMBRA.
 965  8BA8              ;	Hay movimiento de la entidad SOMBRA?. Existen datos en (Variables_de_pintado_entidad_sombra) ???
 966  8BA8
 967  8BA8 21 40 89     	ld hl,Variables_de_pintado_entidad_sombra+1
 968  8BAB 7E           	ld a,(hl)
 969  8BAC A7           	and a
 970  8BAD 28 07        	jr z,6F
 971  8BAF
 972  8BAF 21 F1 88     	ld hl,Ctrl_0
 973  8BB2 CB E6        	set 4,(hl)
 974  8BB4 18 1A        	jr 7F
 975  8BB6
 976  8BB6 21 F1 88     6 ld hl,Ctrl_0										; No hay movimiento de la entidad SOMBRA. Lo indicamos con el FLAG correspondiente y salimos.
 977  8BB9 CB A6        	res 4,(hl)
 978  8BBB C9           	ret
 979  8BBC
 980  8BBC              ; Movemos Entidades malignas.
 981  8BBC
 982  8BBC CD 23 9F     5 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 983  8BBF
 984  8BBF 3A F1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 985  8BC2 CB 67        	bit 4,a
 986  8BC4 C8           	ret z
 987  8BC5
 988  8BC5              ; Ha habido desplazamiento de la entidad maligna.
 989  8BC5              ; Ha llegado a zona de AMADEUS ???
 990  8BC5
 991  8BC5 3A CE 88     	ld a,(Coordenada_y)
 992  8BC8 FE 14        	cp $14
 993  8BCA D4 4E 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 994  8BCD              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 995  8BCD              ; ---------
 996  8BCD
 997  8BCD CD 02 8C         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 998  8BD0 CD 49 8E     7 call Repone_datos_de_borrado
 999  8BD3 CD BE 8C     	call Limpia_Variables_de_borrado
1000  8BD6
1001  8BD6 C9           3 ret													; _de la misma.
1002  8BD7
1003  8BD7              ; --------------------------------------------------------------------------------------------------------------
1004  8BD7              ;
1005  8BD7              ;	29/1/23
1006  8BD7
1007  8BD7              Mov_Amadeus
1008  8BD7
1009  8BD7 CD 09 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1010  8BDA
1011  8BDA 3A F1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1012  8BDD CB 67        	bit 4,a
1013  8BDF C8           	ret z
1014  8BE0
1015  8BE0              ; ---------
1016  8BE0
1017  8BE0 CD 02 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1018  8BE3 CD 39 8E     	call Repone_datos_de_borrado_Amadeus
1019  8BE6 CD BE 8C     	call Limpia_Variables_de_borrado
1020  8BE9
1021  8BE9 C9           	ret
1022  8BEA
1023  8BEA              ; -----------------------------------------------------------------------------------
1024  8BEA              ;
1025  8BEA              ;	16/11/23
1026  8BEA
1027  8BEA CD 22 8D     Inicia_entidad	call Inicia_Puntero_objeto
1028  8BED CD C8 99     	call Recompone_posicion_inicio
1029  8BF0 CD A7 93     	call Draw
1030  8BF3 CD A0 7F     	call Guarda_foto_registros
1031  8BF6 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
1032  8BF7              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
1033  8BF7 CD 6A 8D     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
1034  8BFA C9           	ret
1035  8BFB
1036  8BFB              ; --------------------------------------------------------------------------------------------------------------
1037  8BFB              ;
1038  8BFB              ;	31/08/23
1039  8BFB              ;
1040  8BFB              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1041  8BFB              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1042  8BFB
1043  8BFB              Guarda_foto_entidad_a_pintar
1044  8BFB
1045  8BFB              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
1046  8BFB
1047  8BFB CD A7 93     	call Draw
1048  8BFE CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1049  8C01 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
1050  8C02
1051  8C02              ; --------------------------------------------------------------------------------------------------------------
1052  8C02              ;
1053  8C02              ;	19/9/23
1054  8C02
1055  8C02 21 C7 88     Prepara_var_pintado ld hl,Filas
1056  8C05 11 E7 88     	ld de,Variables_de_pintado
1057  8C08 01 08 00     	ld bc,8
1058  8C0B ED B0        	ldir
1059  8C0D C9           	ret
1060  8C0E
1061  8C0E              ; --------------------------------------------------------------------------------------------------------------
1062  8C0E
1063  8C0E 21 E7 88     Repone_pintar ld hl,Variables_de_pintado
1064  8C11 11 C7 88     	ld de,Filas
1065  8C14 01 08 00     	ld bc,8
1066  8C17 ED B0        	ldir
1067  8C19 C9           	ret
1068  8C1A
1069  8C1A              ; *************************************************************************************************************************************************************
1070  8C1A              ;
1071  8C1A              ; 8/1/23
1072  8C1A              ;
1073  8C1A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1074  8C1A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1075  8C1A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1076  8C1A
1077  8C1A              ; Destruye HL y DE !!!!!
1078  8C1A
1079  8C1A              Inicia_punteros_de_cajas
1080  8C1A
1081  8C1A 21 8C 85     	ld hl,Indice_de_cajas
1082  8C1D CD 1C 8D         call Extrae_address
1083  8C20 22 07 89         ld (Puntero_store_caja),hl
1084  8C23 21 8E 85     	ld hl,Indice_de_cajas+2
1085  8C26 22 0B 89     	ld (Indice_restore_caja),hl
1086  8C29 CD 1C 8D     	call Extrae_address
1087  8C2C 22 09 89     	ld (Puntero_restore_caja),hl
1088  8C2F C9               ret
1089  8C30
1090  8C30              ; ---------------------------------------------------------------
1091  8C30              ;
1092  8C30              ;	9/8/23
1093  8C30              ;
1094  8C30              ;	Inicialización y gestión de álbumes de fotos y cajas.
1095  8C30
1096  8C30              Inicia_punteros_de_albumes_y_malotes
1097  8C30
1098  8C30 21 EC 84     	ld hl,Indice_album_de_fotos
1099  8C33 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1100  8C36 CD 1C 8D     	call Extrae_address
1101  8C39 22 1B 89     	ld (Stack_snapshot),hl
1102  8C3C
1103  8C3C 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
1104  8C3F 22 33 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
1105  8C42 CD 1C 8D     	call Extrae_address
1106  8C45 22 1D 89     	ld (Stack_snapshot_disparos),hl
1107  8C48
1108  8C48 21 FC 84     	ld hl,Indice_End_Snapshot
1109  8C4B 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1110  8C4E CD 1C 8D     	call Extrae_address
1111  8C51 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1112  8C54
1113  8C54 21 04 85     	ld hl,Indice_End_Snapshot_disparos
1114  8C57 22 37 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
1115  8C5A CD 1C 8D     	call Extrae_address
1116  8C5D 22 3B 89     	ld (Puntero_de_End_Snapshot_disparos),hl
1117  8C60
1118  8C60 C9           	ret
1119  8C61
1120  8C61              ;	23/10/23
1121  8C61
1122  8C61              Avanza_puntero_de_album_de_fotos_de_entidades
1123  8C61
1124  8C61              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
1125  8C61
1126  8C61              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
1127  8C61              ; Estamos en el último álbum del índice???.
1128  8C61              ;
1129  8C61 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1130  8C64 01 F2 84     	ld bc,Indice_album_de_fotos+6
1131  8C67 A7           	and a
1132  8C68 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
1133  8C6A 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
1134  8C6C
1135  8C6C              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
1136  8C6C              ; Actualizamos (Semaforo).
1137  8C6C
1138  8C6C 21 3D 89     	ld hl,Semaforo
1139  8C6F CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
1140  8C71
1141  8C71              ; Inicia con el buffer de video completo !!!
1142  8C71
1143  8C71 FB           	ei
1144  8C72 76           	halt
1145  8C73 C9           	ret
1146  8C74
1147  8C74 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
1148  8C77 23           	inc hl
1149  8C78 23           	inc hl
1150  8C79 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1151  8C7C CD 1C 8D     	call Extrae_address
1152  8C7F 22 1B 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1153  8C82
1154  8C82 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1155  8C85 23           	inc hl
1156  8C86 23           	inc hl
1157  8C87 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1158  8C8A CD 1C 8D     	call Extrae_address
1159  8C8D 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1160  8C90
1161  8C90 21 3D 89     	ld hl,Semaforo
1162  8C93 CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1163  8C95
1164  8C95 C9           	ret
1165  8C96
1166  8C96              ; *************************************************************************************************************************************************************
1167  8C96              ;
1168  8C96              ; 8/1/23
1169  8C96              ;
1170  8C96              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1171  8C96
1172  8C96 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1173  8C99 22 4E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1174  8C9C C9           	ret
1175  8C9D 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1176  8CA0 22 50 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1177  8CA3 C9           	ret
1178  8CA4
1179  8CA4              ; -------------------------------------------------------------------------------------------------------------
1180  8CA4              ;
1181  8CA4              ; 21/9/23
1182  8CA4              ;
1183  8CA4
1184  8CA4              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1185  8CA4
1186  8CA4              Limpia_album_Amadeus
1187  8CA4
1188  8CA4 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1189  8CA7 7E           	ld a,(hl)
1190  8CA8 A7           	and a
1191  8CA9 C8           	ret z
1192  8CAA
1193  8CAA 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1194  8CAD 11 B1 72     	ld de,Album_de_fotos_Amadeus+1
1195  8CB0 01 0B 00     	ld bc,11
1196  8CB3 AF           	xor a
1197  8CB4 77           	ld (hl),a
1198  8CB5 ED B0        	ldir
1199  8CB7
1200  8CB7 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1201  8CBA 22 23 89     	ld (End_Snapshot_Amadeus),hl
1202  8CBD
1203  8CBD C9           	ret
1204  8CBE
1205  8CBE 21 E1 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1206  8CC1 11 E2 88     	ld de,Variables_de_borrado+1
1207  8CC4 01 05 00     	ld bc,5
1208  8CC7 AF           	xor a
1209  8CC8 77           	ld (hl),a
1210  8CC9 ED B0        	ldir
1211  8CCB C9           	ret
1212  8CCC
1213  8CCC              ; -------------------------------------------------------------------------------------------------------------
1214  8CCC              ;
1215  8CCC              ; 8/9/23
1216  8CCC              ;
1217  8CCC
1218  8CCC              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1219  8CCC              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1220  8CCC
1221  8CCC              Calcula_numero_de_malotes
1222  8CCC
1223  8CCC 21 00 70     	ld hl,Album_de_fotos
1224  8CCF EB           	ex de,hl
1225  8CD0 2A 1F 89     	ld hl,(End_Snapshot)
1226  8CD3
1227  8CD3 7C           	ld a,h
1228  8CD4 A7           	and a
1229  8CD5 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1230  8CD7
1231  8CD7 06 00        4 ld b,0
1232  8CD9 7D           	ld a,l
1233  8CDA 93           	sub e
1234  8CDB 28 07        	jr z,1F
1235  8CDD
1236  8CDD              ; Nº de malotes no es "0".
1237  8CDD
1238  8CDD D6 06        2 sub 6
1239  8CDF 04           	inc b
1240  8CE0 A7           	and a
1241  8CE1 20 FA        	jr nz,2B
1242  8CE3 78           	ld a,b
1243  8CE4
1244  8CE4 32 10 89     1 ld (Numero_de_malotes),a
1245  8CE7 C9           	ret
1246  8CE8
1247  8CE8              ; -------------------------------------------------------------------------------------------------------------
1248  8CE8              ;
1249  8CE8              ; 8/9/23
1250  8CE8              ;
1251  8CE8
1252  8CE8              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1253  8CE8              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1254  8CE8
1255  8CE8              Calcula_malotes_Amadeus
1256  8CE8
1257  8CE8 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1258  8CEB EB           	ex de,hl
1259  8CEC 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1260  8CEF
1261  8CEF 7C           	ld a,h
1262  8CF0 A7           	and a
1263  8CF1 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1264  8CF3
1265  8CF3 06 00        	ld b,0
1266  8CF5 7D           	ld a,l
1267  8CF6 93           	sub e
1268  8CF7 28 07        	jr z,1F
1269  8CF9
1270  8CF9              ; Nº de malotes no es "0".
1271  8CF9
1272  8CF9 D6 06        2 sub 6
1273  8CFB 04           	inc b
1274  8CFC A7           	and a
1275  8CFD 20 FA        	jr nz,2B
1276  8CFF 78           	ld a,b
1277  8D00
1278  8D00 32 10 89     1 ld (Numero_de_malotes),a
1279  8D03 C9           	ret
1280  8D04
1281  8D04              ; -------------------------------------------------------------------------------------------------------------
1282  8D04              ;
1283  8D04              ; 28/2/23
1284  8D04              ;
1285  8D04
1286  8D04              Calcula_numero_de_disparotes
1287  8D04
1288  8D04 21 58 71     	ld hl,Album_de_fotos_disparos
1289  8D07 EB           	ex de,hl
1290  8D08 2A 3B 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1291  8D0B
1292  8D0B 06 00        	ld b,0
1293  8D0D 7D           	ld a,l
1294  8D0E 93           	sub e
1295  8D0F 28 07        	jr z,1F
1296  8D11
1297  8D11              ; Nº de malotes no es "0".
1298  8D11
1299  8D11 D6 06        2 sub 6
1300  8D13 04           	inc b
1301  8D14 A7           	and a
1302  8D15 20 FA        	jr nz,2B
1303  8D17 78           	ld a,b
1304  8D18
1305  8D18 32 4D 89     1 ld (Numero_de_disparotes),a
1306  8D1B C9           	ret
1307  8D1C
1308  8D1C              ; *************************************************************************************************************************************************************
1309  8D1C              ;
1310  8D1C              ; 20/10/22
1311  8D1C              ;
1312  8D1C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1313  8D1C              ;
1314  8D1C              ; Destruye el puntero y DE !!!!!
1315  8D1C
1316  8D1C 5E           Extrae_address ld e,(hl)
1317  8D1D 23           	inc hl
1318  8D1E 56           	ld d,(hl)
1319  8D1F 2B           	dec hl
1320  8D20 EB           	ex de,hl
1321  8D21 C9           	ret
1322  8D22
1323  8D22              ; *************************************************************************************************************************************************************
1324  8D22              ;
1325  8D22              ;	7/2/23
1326  8D22              ;
1327  8D22              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1328  8D22              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1329  8D22              ;
1330  8D22              ;   Destruye HL y BC !!!!!,
1331  8D22              ;
1332  8D22              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1333  8D22              ;					"0" ..... Izquierda.
1334  8D22
1335  8D22              Inicia_Puntero_objeto
1336  8D22
1337  8D22 3A DB 88     	ld a,(Cuad_objeto)
1338  8D25 E6 01        	and 1
1339  8D27 F5           	push af
1340  8D28 CC 46 8D     	call z,Inicia_puntero_objeto_izq
1341  8D2B F1           	pop af
1342  8D2C 28 2B        	jr z,1F
1343  8D2E CD 33 8D     	call Inicia_puntero_objeto_der
1344  8D31 18 26        	jr 1F
1345  8D33
1346  8D33              ; Arrancamos desde la parte izquierda de la pantalla.
1347  8D33              ; Iniciamos (Indice_Sprite_der).
1348  8D33
1349  8D33 2A D1 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1350  8D36 22 D5 88     	ld (Puntero_DESPLZ_der),hl
1351  8D39 CD 1C 8D     	call Extrae_address
1352  8D3C 22 CB 88     	ld (Puntero_objeto),hl
1353  8D3F
1354  8D3F 2A D3 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1355  8D42 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
1356  8D45 C9           	ret
1357  8D46
1358  8D46              ; Arrancamos desde la parte derecha de la pantalla.
1359  8D46              ; Iniciamos (Indice_Sprite_izq).
1360  8D46
1361  8D46 2A D3 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1362  8D49 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
1363  8D4C CD 1C 8D     	call Extrae_address
1364  8D4F 22 CB 88     	ld (Puntero_objeto),hl
1365  8D52
1366  8D52 2A D1 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1367  8D55 22 D5 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1368  8D58 C9           	ret
1369  8D59
1370  8D59              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1371  8D59
1372  8D59 21 40 83     1 ld hl,Amadeus
1373  8D5C ED 4B CB 88  	ld bc,(Puntero_objeto)
1374  8D60 B7 ED 42     	sub hl,bc
1375  8D63 C0           	ret nz
1376  8D64 21 F1 88     	ld hl,Ctrl_0
1377  8D67 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1378  8D69 C9           	ret 												; _de nuestra nave en los extremos.
1379  8D6A
1380  8D6A              ; *************************************************************************************************************************************************************
1381  8D6A              ;
1382  8D6A              ;	14/5/23
1383  8D6A              ;
1384  8D6A              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1385  8D6A              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1386  8D6A
1387  8D6A              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1388  8D6A              ;	_de la 2ª y 3ª entidad respectivamente.
1389  8D6A
1390  8D6A              Store_Restore_cajas
1391  8D6A
1392  8D6A E5           	push hl
1393  8D6B D5           	push de
1394  8D6C C5            	push bc
1395  8D6D
1396  8D6D              ;	STORE !!!!!
1397  8D6D              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1398  8D6D
1399  8D6D 21 C7 88     	ld hl,Filas
1400  8D70 ED 5B 07 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1401  8D74 01 3D 00     	ld bc,61
1402  8D77 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1403  8D79
1404  8D79              ; 	Entidad_sospechosa. 20/4/23
1405  8D79
1406  8D79 3A E0 88     	ld a,(Impacto)
1407  8D7C A7           	and a
1408  8D7D 28 0C        	jr z,1F
1409  8D7F
1410  8D7F 2A 07 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1411  8D82 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1412  8D85 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1413  8D86 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1414  8D88 22 53 89     	ld (Entidad_sospechosa_de_colision),hl
1415  8D8B
1416  8D8B              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1417  8D8B
1418  8D8B 2A 09 89     1 ld hl,(Puntero_restore_caja)
1419  8D8E 7E           	ld a,(hl)
1420  8D8F A7           	and a
1421  8D90 F5           	push af
1422  8D91 28 08        	jr z,2F
1423  8D93
1424  8D93 11 C7 88     	ld de,Filas
1425  8D96 01 3D 00     	ld bc,61
1426  8D99 ED B0        	ldir
1427  8D9B
1428  8D9B CD B7 8D     2 call Incrementa_punteros_de_cajas
1429  8D9E
1430  8D9E F1           	pop af
1431  8D9F 28 EA        	jr z,1B
1432  8DA1
1433  8DA1 C1           	pop bc
1434  8DA2 D1           	pop de
1435  8DA3 E1           	pop hl
1436  8DA4
1437  8DA4 C9           	ret
1438  8DA5
1439  8DA5              ; **************************************************************************************************
1440  8DA5              ;
1441  8DA5              ;	12/05/23
1442  8DA5              ;
1443  8DA5              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1444  8DA5
1445  8DA5 E5           Restore_entidad push hl
1446  8DA6 D5           	push de
1447  8DA7 C5            	push bc
1448  8DA8
1449  8DA8 2A 07 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1450  8DAB 11 C7 88     	ld de,Filas
1451  8DAE 01 3D 00     	ld bc,61
1452  8DB1 ED B0        	ldir
1453  8DB3
1454  8DB3 C1           	pop bc
1455  8DB4 D1           	pop de
1456  8DB5 E1           	pop hl
1457  8DB6 C9           	ret
1458  8DB7
1459  8DB7              ; **************************************************************************************************
1460  8DB7              ;
1461  8DB7              ;	08/05/23
1462  8DB7              ;
1463  8DB7              ;	Incrementamos los dos punteros de entidades. (+1).
1464  8DB7
1465  8DB7              Incrementa_punteros_de_cajas
1466  8DB7
1467  8DB7 2A 09 89     	ld hl,(Puntero_restore_caja)
1468  8DBA 22 07 89     	ld (Puntero_store_caja),hl
1469  8DBD 2A 0B 89     	ld hl,(Indice_restore_caja)
1470  8DC0 23           	inc hl
1471  8DC1 23           	inc hl
1472  8DC2 22 0B 89     	ld (Indice_restore_caja),hl
1473  8DC5 CD 1C 8D         call Extrae_address
1474  8DC8 22 09 89         ld (Puntero_restore_caja),hl
1475  8DCB C9               ret
1476  8DCC
1477  8DCC              ; **************************************************************************************************
1478  8DCC              ;
1479  8DCC              ;	25/01/23
1480  8DCC              ;
1481  8DCC              ;	Restore_Amadeus
1482  8DCC              ;
1483  8DCC              ;	Cargamos en DRAW los parámetros de Amadeus.
1484  8DCC              ;
1485  8DCC
1486  8DCC E5           Restore_Amadeus	push hl
1487  8DCD D5           	push de
1488  8DCE C5            	push bc
1489  8DCF 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1490  8DD2 11 C7 88     	ld de,Filas
1491  8DD5 01 3D 00     	ld bc,61
1492  8DD8 ED B0        	ldir
1493  8DDA C1           	pop bc
1494  8DDB D1           	pop de
1495  8DDC E1           	pop hl
1496  8DDD C9           	ret
1497  8DDE
1498  8DDE              ; *************************************************************************************************************************************************************
1499  8DDE              ;
1500  8DDE              ;	29/04/23
1501  8DDE              ;
1502  8DDE              ;	Store_Amadeus
1503  8DDE              ;
1504  8DDE              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1505  8DDE              ;
1506  8DDE              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1507  8DDE              ;
1508  8DDE              ;	DESTRUYE: HL y BC y DE.
1509  8DDE
1510  8DDE 21 C7 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1511  8DE1 01 3D 00     	ld bc,61
1512  8DE4 ED B0        	ldir
1513  8DE6 C9           	ret
1514  8DE7
1515  8DE7              ; -----------------------------------------------------------
1516  8DE7              ;
1517  8DE7              ;	27/04/23
1518  8DE7              ;
1519  8DE7              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1520  8DE7              ;
1521  8DE7              ;	Destruye: HL,BC,DE,A
1522  8DE7
1523  8DE7 21 C7 88     Borra_datos_entidad ld hl,Filas
1524  8DEA 01 3C 00     	ld bc,60
1525  8DED AF           	xor a
1526  8DEE 77           	ld (hl),a
1527  8DEF 11 C8 88     	ld de,Filas+1
1528  8DF2 ED B0        	ldir
1529  8DF4 C9           	ret
1530  8DF5
1531  8DF5              ; -----------------------------------------------------------
1532  8DF5
1533  8DF5              ; Teclado.
1534  8DF5
1535  8DF5 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1536  8DF7 DB FE        	in a,($fe)
1537  8DF9 E6 01        	and $01
1538  8DFB 28 02        	jr z,1f
1539  8DFD 18 F6        	jr Pulsa_ENTER
1540  8DFF C9           1 ret
1541  8E00
1542  8E00              ; **************************************************************************************************
1543  8E00              ;
1544  8E00              ; Temporización.
1545  8E00
1546  8E00              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1547  8E00              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1548  8E00              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1549  8E00              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1550  8E00
1551  8E00              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1552  8E00              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1553  8E00              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1554  8E00
1555  8E00              ; A partir de $4f61 no hace falta DELAY.
1556  8E00
1557  8E00              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1558  8E00
1559  8E00 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1560  8E03 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1561  8E04 78           	LD A,B
1562  8E05 A7           	AND A
1563  8E06 20 FB        	JR NZ,wait
1564  8E08 C9           	RET
1565  8E09
1566  8E09              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1567  8E09              ;
1568  8E09              ;	5/3/23
1569  8E09              ;
1570  8E09              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1571  8E09
1572  8E09              Movimiento_Amadeus
1573  8E09
1574  8E09              ; Disparo.
1575  8E09
1576  8E09              ;	ld a,(Disparo_Amadeus)
1577  8E09              ;	and a
1578  8E09              ;	jr nz,1F
1579  8E09              ;	jr 2F
1580  8E09
1581  8E09              ;1 ld a,$f7													; "5" para disparar.
1582  8E09              ;	in a,($fe)
1583  8E09              ;	and $10
1584  8E09
1585  8E09              ;	push af
1586  8E09              ;	call z,Genera_disparo
1587  8E09              ;	pop af
1588  8E09              ;	jr nz,2F
1589  8E09
1590  8E09              ;	ld a,(Disparo_Amadeus)
1591  8E09              ;	xor 1
1592  8E09              ;	ld (Disparo_Amadeus),a
1593  8E09
1594  8E09 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1595  8E0B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1596  8E0D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1597  8E0F CC 82 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1598  8E12
1599  8E12 3E F7        	ld a,$f7
1600  8E14 DB FE        	in a,($fe)
1601  8E16 E6 01        	and $01
1602  8E18 C8           	ret z
1603  8E19
1604  8E19 3E F7        	ld a,$f7
1605  8E1B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1606  8E1D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1607  8E1F CC 64 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1608  8E22 C9           	ret
1609  8E23
1610  8E23              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1611  8E23              ;
1612  8E23              ;	Rutina provisional para que los malotes cagen balas.
1613  8E23
1614  8E23              Detecta_disparo_entidad
1615  8E23
1616  8E23 3A 68 89     	ld a,(Disparo_entidad)
1617  8E26 A7           	and a
1618  8E27 C8           	ret z
1619  8E28
1620  8E28              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1621  8E28
1622  8E28              ;	ld a,$7f				; Detecta SPACE.
1623  8E28              ;	in a,($fe)
1624  8E28              ;	and 1
1625  8E28              ;	ret nz
1626  8E28
1627  8E28              ;	call Genera_disparo
1628  8E28 C9           	ret
1629  8E29
1630  8E29              ; ----------------------------------------------------------------------
1631  8E29              ;
1632  8E29              ;	8/9/23
1633  8E29
1634  8E29 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1635  8E2C 2B            	dec hl
1636  8E2D 7E           	ld a,(hl)
1637  8E2E A7           	and a
1638  8E2F C8           	ret z										; Salimos si es álbum está vacío.
1639  8E30
1640  8E30 11 E6 88     	ld de,Variables_de_borrado+5
1641  8E33 01 06 00     	ld bc,6
1642  8E36 ED B8        	lddr
1643  8E38 C9           	ret
1644  8E39
1645  8E39              ; ----------------------------------------------------------------------
1646  8E39              ;
1647  8E39              ;	9/9/23
1648  8E39
1649  8E39              Repone_datos_de_borrado_Amadeus
1650  8E39
1651  8E39 21 E1 88     	ld hl,Variables_de_borrado
1652  8E3C 11 B0 72     	ld de,Album_de_fotos_Amadeus
1653  8E3F 01 06 00     	ld bc,6
1654  8E42 ED B0        	ldir
1655  8E44
1656  8E44 EB           	ex de,hl
1657  8E45 22 23 89     	ld (End_Snapshot_Amadeus),hl
1658  8E48
1659  8E48 C9           	ret
1660  8E49
1661  8E49              ; ----------------------------------------------------------------------
1662  8E49              ;
1663  8E49              ;	27/10/23
1664  8E49              ;
1665  8E49
1666  8E49              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1667  8E49              ;	_ Album_de_fotos correspondiente.
1668  8E49
1669  8E49              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1670  8E49              ;	_ durante el proceso de escritura.
1671  8E49
1672  8E49              Repone_datos_de_borrado
1673  8E49
1674  8E49 F3           	di
1675  8E4A
1676  8E4A ED 5B 1B 89  	ld de,(Stack_snapshot)
1677  8E4E 21 E1 88     	ld hl,Variables_de_borrado
1678  8E51 01 06 00     	ld bc,6
1679  8E54 ED B0        	ldir
1680  8E56 FB           	ei
1681  8E57
1682  8E57 EB           	ex de,hl
1683  8E58 22 1B 89     	ld (Stack_snapshot),hl
1684  8E5B
1685  8E5B C9           	ret
1686  8E5C
1687  8E5C              ; ----------------------------------------------------------------------
1688  8E5C              ;
1689  8E5C              ;	11/8/23
1690  8E5C
1691  8E5C              Gestiona_entidades
1692  8E5C
1693  8E5C              ;	call Extrae_foto_disparos
1694  8E5C              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1695  8E5C
1696  8E5C CD FB 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1697  8E5F
1698  8E5F              ;	BUFFER vacío ??????
1699  8E5F              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1700  8E5F
1701  8E5F 3A 3E 89     	ld a,(Ctrl_Semaforo)
1702  8E62 CB 67        	bit 4,a
1703  8E64 28 05        	jr z,1F
1704  8E66
1705  8E66              ;! Buffer vacío. Inicializar (Ctrl_Semaforo) y salir sin modificar punteros.
1706  8E66
1707  8E66 AF           	xor a
1708  8E67 32 3E 89     	ld (Ctrl_Semaforo),a
1709  8E6A C9           	ret
1710  8E6B
1711  8E6B CB 47        1 bit 0,a
1712  8E6D C0           	ret nz
1713  8E6E
1714  8E6E              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1715  8E6E              ; Nos situamos al comienzo del último álbum.
1716  8E6E
1717  8E6E CD 55 73     	call Modifica_Stack_snapshot
1718  8E71
1719  8E71 C9           	ret
1720  8E72
1721  8E72              ; -----------------------------------------------------------------------------------
1722  8E72
1723  8E72              Pinta_Amadeus
1724  8E72
1725  8E72 3E 06        	ld a,6
1726  8E74 D3 FE            out ($fe),a										; Amarillo
1727  8E76
1728  8E76 CD E8 8C        	call Calcula_malotes_Amadeus
1729  8E79 CD 37 97     	call Extrae_foto_Amadeus
1730  8E7C CD A4 8C     	call Limpia_album_Amadeus
1731  8E7F
1732  8E7F C9           	ret
1733  8E80
1734  8E80              Pinta_entidades
1735  8E80
1736  8E80 3A 3D 89     	ld a,(Semaforo)
1737  8E83 CB 47        	bit 0,a
1738  8E85 C8           	ret z
1739  8E86
1740  8E86              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1741  8E86
1742  8E86 CD CC 8C     	call Calcula_numero_de_malotes
1743  8E89 CD B5 96     	call Extrae_foto_entidades
1744  8E8C
1745  8E8C C9           	ret
1746  8E8D
1747  8E8D              ; -----------------------------------------------------------------------------------
1748  8E8D              ;
1749  8E8D              ;	12/11/23
1750  8E8D              ;
1751  8E8D              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1752  8E8D
1753  8E8D              Actualiza_relojes
1754  8E8D
1755  8E8D 21 60 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1756  8E90 34           	inc (hl)
1757  8E91
1758  8E91 34           	inc (hl)
1759  8E92 35           	dec (hl)
1760  8E93 C0           	ret nz
1761  8E94
1762  8E94 21 61 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1763  8E97 34           	inc (hl)
1764  8E98 C9           	ret
1765  8E99
1766  8E99              ; ---------------------------------------------------------------
1767  8E99              ;
1768  8E99              ;	27/9/23
1769  8E99
1770  8E99              Guarda_parametros_DRAW
1771  8E99
1772  8E99 21 C7 88     	ld hl,Filas
1773  8E9C 11 BD 72     	ld de,Almacen_de_parametros_DRAW
1774  8E9F 01 3D 00     	ld bc,61
1775  8EA2 ED B0        	ldir
1776  8EA4 C9           	ret
1777  8EA5
1778  8EA5              Recupera_parametros_DRAW
1779  8EA5
1780  8EA5 21 BD 72     	ld hl,Almacen_de_parametros_DRAW
1781  8EA8 11 C7 88     	ld de,Filas
1782  8EAB 01 3D 00     	ld bc,61
1783  8EAE ED B0        	ldir
1784  8EB0 C9           	ret
1785  8EB1
1786  8EB1              ; ---------------------------------------------------------------
1787  8EB1
1788  8EB1              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EB1              ; ******************************************************************************************************************************************************************************************
   2+ 8EB1              ;
   3+ 8EB1              ;   21/07/23
   4+ 8EB1              ;
   5+ 8EB1              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EB1              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EB1              ;
   8+ 8EB1              ;
   9+ 8EB1              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EB1              ;
  11+ 8EB1              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EB1              ;               _ hacen las entidades hacia abajo.
  13+ 8EB1              ;
  14+ 8EB1              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EB1              ;
  16+ 8EB1              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EB1              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EB1              ;
  19+ 8EB1              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EB1              ;           _ la bala.
  21+ 8EB1              ;
  22+ 8EB1              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EB1              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EB1              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EB1              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EB1              ;           _ en el momento de generarse la bala)).
  27+ 8EB1
  28+ 8EB1              Genera_disparo
  29+ 8EB1
  30+ 8EB1              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EB1              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EB1              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EB1              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EB1              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EB1              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EB1              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EB1
  38+ 8EB1              ; Exclusiones:
  39+ 8EB1
  40+ 8EB1 3A DF 88         ld a,(Vel_down)
  41+ 8EB4 47               ld b,a
  42+ 8EB5 3A 5F 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EB8 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EB9 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EBA 3A FE 88         ld a,(Columnas)
  46+ 8EBD 47               ld b,a
  47+ 8EBE 3A C8 88         ld a,(Columns)
  48+ 8EC1 B8               cp b
  49+ 8EC2 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EC3
  51+ 8EC3              ; ----- ----- -----
  52+ 8EC3
  53+ 8EC3 3A F1 88         ld a,(Ctrl_0)
  54+ 8EC6 CB 77            bit 6,a
  55+ 8EC8 20 06            jr nz,14F
  56+ 8ECA
  57+ 8ECA 3A CE 88         ld a,(Coordenada_y)
  58+ 8ECD FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8ECF D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8ED0
  61+ 8ED0 21 00 80     14 ld hl,Indice_disparo
  62+ 8ED3 3A CF 88         ld a,(CTRL_DESPLZ)
  63+ 8ED6 4F               ld c,a
  64+ 8ED7 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8ED9              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8ED9              ;                                            ""        ""       "f9", B="1"
  67+ 8ED9              ;                                            ""        ""       "fb", B="2"
  68+ 8ED9              ;                                            ""        ""       "fb", B="3"
  69+ 8ED9 A7               and a
  70+ 8EDA 28 10            jr z,1F
  71+ 8EDC E6 01            and 1
  72+ 8EDE C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EDF
  74+ 8EDF 79               ld a,c
  75+ 8EE0 16 F9            ld d,$f9
  76+ 8EE2 23           2 inc hl
  77+ 8EE3 23               inc hl
  78+ 8EE4 04               inc b
  79+ 8EE5 BA               cp d
  80+ 8EE6 28 04            jr z,1F
  81+ 8EE8 14               inc d
  82+ 8EE9 14               inc d
  83+ 8EEA 18 F6            jr 2B
  84+ 8EEC
  85+ 8EEC CD 1C 8D     1 call Extrae_address
  86+ 8EEF E5               push hl
  87+ 8EF0 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EF2 DD 21 7D 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EF6
  90+ 8EF6              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EF6              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EF6
  93+ 8EF6 3A F1 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EF9 CB 77            bit 6,a
  95+ 8EFB 20 04            jr nz,19F
  96+ 8EFD
  97+ 8EFD AF               xor a
  98+ 8EFE 32 68 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F01
 100+ 8F01 3A DB 88     19 ld a,(Cuad_objeto)
 101+ 8F04 FE 02            cp 2
 102+ 8F06 38 66            jr c,3F
 103+ 8F08 28 64            jr z,3F
 104+ 8F0A
 105+ 8F0A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F0A
 107+ 8F0A E6 01            and 1
 108+ 8F0C 28 30            jr z,4F
 109+ 8F0E
 110+ 8F0E              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F0E              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F0E              ;
 113+ 8F0E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F0E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F0E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F0E
 117+ 8F0E 2A C9 88     	ld hl,(Posicion_actual)
 118+ 8F11
 119+ 8F11              ;   Amadeus o entidad ???.
 120+ 8F11
 121+ 8F11 3A F1 88         ld a,(Ctrl_0)
 122+ 8F14 CB 77            bit 6,a
 123+ 8F16 28 0A            jr z,8F
 124+ 8F18
 125+ 8F18              ; 	Dispara Amadeus.
 126+ 8F18
 127+ 8F18 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F1A CD A6 96         call PreviousScan
 129+ 8F1D CD A6 96         call PreviousScan
 130+ 8F20
 131+ 8F20              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F20              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F20              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F20              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F20
 136+ 8F20 18 11            jr 10F
 137+ 8F22
 138+ 8F22              ; 	Dispara Entidad.
 139+ 8F22
 140+ 8F22 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F25              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F25
 143+ 8F25              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F25              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F25
 146+ 8F25 C5               push bc
 147+ 8F26 06 10            ld b,16
 148+ 8F28 CD 97 96     9 call NextScan
 149+ 8F2B 10 FB            djnz 9B
 150+ 8F2D C1               pop bc
 151+ 8F2E CD 98 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F31 18 06            jr 17F
 153+ 8F33
 154+ 8F33              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F33              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F33              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F33              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F33
 159+ 8F33 CD 98 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F36 CD 0D 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F39              ;                                                      ; _al generar el disparo.
 162+ 8F39
 163+ 8F39              ; 	LLegados a este punto tendremos:
 164+ 8F39              ;
 165+ 8F39              ;       Puntero_objeto_disparo en IY.
 166+ 8F39              ;       Rutinas_de_impresion en IX.
 167+ 8F39              ;       Puntero_de_impresion en HL.
 168+ 8F39              ;       Impacto/Dirección en BC.
 169+ 8F39
 170+ 8F39 CD A0 8F     17 call Almacena_disparo
 171+ 8F3C 18 52            jr 6F                                             ; RET.
 172+ 8F3E
 173+ 8F3E              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F3E              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F3E              ;
 176+ 8F3E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F3E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F3E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F3E
 180+ 8F3E 2A C9 88     4 ld hl,(Posicion_actual)
 181+ 8F41
 182+ 8F41              ;   Amadeus o entidad ???.
 183+ 8F41
 184+ 8F41 3A F1 88         ld a,(Ctrl_0)
 185+ 8F44 CB 77            bit 6,a
 186+ 8F46 28 0A            jr z,11F
 187+ 8F48
 188+ 8F48              ; 	Dispara Amadeus.
 189+ 8F48
 190+ 8F48 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F4A CD A6 96         call PreviousScan
 192+ 8F4D CD A6 96         call PreviousScan
 193+ 8F50
 194+ 8F50              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F50              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F50              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F50              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F50
 199+ 8F50 18 11            jr 13F
 200+ 8F52
 201+ 8F52              ; 	Dispara Entidad.
 202+ 8F52
 203+ 8F52 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F55              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F55
 206+ 8F55              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F55              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F55
 209+ 8F55 C5               push bc
 210+ 8F56 06 10            ld b,16
 211+ 8F58 CD 97 96     12 call NextScan
 212+ 8F5B 10 FB            djnz 12B
 213+ 8F5D C1               pop bc
 214+ 8F5E
 215+ 8F5E CD 91 8F         call Ajusta_disparo_parte_derecha
 216+ 8F61 18 06            jr 18F
 217+ 8F63
 218+ 8F63              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F63              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F63              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F63              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F63
 223+ 8F63 CD 91 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F66 CD 0D 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F69              ;                                                       ; _al generar el disparo.
 226+ 8F69
 227+ 8F69              ; LLegados a este punto tendremos:
 228+ 8F69              ;
 229+ 8F69              ;       Puntero_objeto_disparo en IY.
 230+ 8F69              ;       Rutinas_de_impresion en IX.
 231+ 8F69              ;       Puntero_de_impresion en HL.
 232+ 8F69              ;       Impacto/Dirección en BC.
 233+ 8F69
 234+ 8F69 CD A0 8F     18 call Almacena_disparo
 235+ 8F6C 18 22            jr 6F                                               ; RET.
 236+ 8F6E
 237+ 8F6E              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F6E
 239+ 8F6E 28 11        3 jr z,5F
 240+ 8F70
 241+ 8F70              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F70              ;
 243+ 8F70              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F70              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F70              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F70              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F70
 248+ 8F70              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F70              ;	   ""        ""       "f9", B="1"
 250+ 8F70              ;	   ""        ""       "fb", B="2"
 251+ 8F70              ; 	   ""        ""       "fb", B="3"
 252+ 8F70
 253+ 8F70 2A C9 88     	ld hl,(Posicion_actual)
 254+ 8F73 CD 97 96     	call NextScan
 255+ 8F76
 256+ 8F76              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F76              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F76              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F76              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F76
 261+ 8F76 CD 98 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F79
 263+ 8F79              ; 	No se produce impacto. B="$80"
 264+ 8F79              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F79
 266+ 8F79 01 80 80         ld bc,$8080
 267+ 8F7C
 268+ 8F7C              ; 	LLegados a este punto tendremos:
 269+ 8F7C              ;
 270+ 8F7C              ;       Puntero_objeto_disparo en IY.
 271+ 8F7C              ;       Rutinas_de_impresion en IX.
 272+ 8F7C              ;       Puntero_de_impresion en HL.
 273+ 8F7C              ;       Impacto/Dirección en BC.
 274+ 8F7C
 275+ 8F7C CD A0 8F         call Almacena_disparo
 276+ 8F7F 18 0F            jr 6F                                           ; RET.
 277+ 8F81
 278+ 8F81              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F81              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F81              ;
 281+ 8F81              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F81              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F81              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F81              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F81
 286+ 8F81 2A C9 88     5 ld hl,(Posicion_actual)
 287+ 8F84 CD 97 96     	call NextScan
 288+ 8F87
 289+ 8F87              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F87              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F87              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F87              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F87
 294+ 8F87 CD 91 8F         call Ajusta_disparo_parte_derecha
 295+ 8F8A
 296+ 8F8A              ; 	No se produce impacto. B="$80"
 297+ 8F8A              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F8A
 299+ 8F8A 01 80 80     15 ld bc,$8080
 300+ 8F8D
 301+ 8F8D              ; 	LLegados a este punto tendremos:
 302+ 8F8D              ;
 303+ 8F8D              ;       Puntero_objeto_disparo en IY.
 304+ 8F8D              ;       Rutinas_de_impresion en IX.
 305+ 8F8D              ;       Puntero_de_impresion en HL.
 306+ 8F8D              ;       Impacto/Dirección en BC.
 307+ 8F8D
 308+ 8F8D CD A0 8F         call Almacena_disparo
 309+ 8F90
 310+ 8F90 C9           6 ret
 311+ 8F91
 312+ 8F91              ; ----------------------------------------------------------------
 313+ 8F91              ;
 314+ 8F91              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F91              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F91              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F91
 318+ 8F91 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F92 FE 02            cp 2
 320+ 8F94 38 01            jr c,1F
 321+ 8F96 23               inc hl
 322+ 8F97 C9           1 ret
 323+ 8F98
 324+ 8F98 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F99 FE 01        	cp 1
 326+ 8F9B 20 01        	jr nz,1F
 327+ 8F9D 2B           	dec hl
 328+ 8F9E 2B           1 dec hl
 329+ 8F9F C9               ret
 330+ 8FA0
 331+ 8FA0              ; ----------------------------------------------------------------
 332+ 8FA0              ;
 333+ 8FA0              ;   25/02/23
 334+ 8FA0              ;
 335+ 8FA0              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FA0              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FA0              ;
 338+ 8FA0              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FA0              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FA0
 341+ 8FA0              Almacena_disparo
 342+ 8FA0
 343+ 8FA0 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FA1 F1               pop af
 345+ 8FA2 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FA3
 347+ 8FA3 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FA4 E6 01            and 1
 349+ 8FA6 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FA8              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FA8              ; 	Dispara AMADEUS.
 352+ 8FA8
 353+ 8FA8              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FA8              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FA8              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FA8              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FA8
 358+ 8FA8 C5               push bc
 359+ 8FA9 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FAC 2A 50 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FAF A7               and a
 362+ 8FB0 ED 42            sbc hl,bc
 363+ 8FB2 CC 9D 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FB5 C1               pop bc
 365+ 8FB6 28 54            jr z,4F
 366+ 8FB8
 367+ 8FB8 2A 50 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FBB 23               inc hl
 369+ 8FBC 23               inc hl
 370+ 8FBD 22 50 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FC0              ;                                                   ; _ Disparo_(+1).
 372+ 8FC0 18 18            jr 2F
 373+ 8FC2
 374+ 8FC2              ; Dispara una entidad.
 375+ 8FC2
 376+ 8FC2 C5           1 push bc
 377+ 8FC3 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FC6 2A 4E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FC9 A7               and a
 380+ 8FCA ED 42            sbc hl,bc
 381+ 8FCC CC 96 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FCF C1               pop bc
 383+ 8FD0 28 3A            jr z,4F
 384+ 8FD2
 385+ 8FD2 2A 4E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FD5 23               inc hl
 387+ 8FD6 23               inc hl
 388+ 8FD7 22 4E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FDA              ;                                                   ; _ Disparo_(+1).
 390+ 8FDA CD 1C 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FDD              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FDD              ;
 393+ 8FDD              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FDD              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FDD              ;                                                     Puntero_de_impresion en HL.
 396+ 8FDD              ;                                                     Impacto/Dirección en BC.
 397+ 8FDD
 398+ 8FDD 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FDE 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FDF 23               inc hl                                          ; _ al siguiente.
 401+ 8FE0 A7               and a
 402+ 8FE1 20 C0            jr nz,3B
 403+ 8FE3
 404+ 8FE3 08               ex af,af
 405+ 8FE4 ED 73 15 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FE8 F9               ld sp,hl
 407+ 8FE9
 408+ 8FE9 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FEB F5               push af                                         ; Puntero de impresión.
 410+ 8FEC FD E5            push iy                                         ; Puntero objeto.
 411+ 8FEE C5               push bc                                         ; Control.
 412+ 8FEF
 413+ 8FEF ED 7B 15 89      ld sp,(Stack)
 414+ 8FF3
 415+ 8FF3              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FF3
 417+ 8FF3 21 04 89     	ld hl,Ctrl_1
 418+ 8FF6 CB C6        	set 0,(hl)
 419+ 8FF8
 420+ 8FF8 DD E5        	push ix
 421+ 8FFA E1               pop hl
 422+ 8FFB F5               push af
 423+ 8FFC DD E1            pop ix
 424+ 8FFE
 425+ 8FFE CD A0 7F     	call Guarda_foto_registros
 426+ 9001
 427+ 9001 21 04 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9004 CB 86        	res 0,(hl)
 429+ 9006
 430+ 9006              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9006              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9006
 433+ 9006 CD 9D 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9009 CD 96 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 900C
 436+ 900C C9           4 ret
 437+ 900D
 438+ 900D              ; ----------------------------------------------------------------
 439+ 900D              ;
 440+ 900D              ;   4/3/23
 441+ 900D              ;
 442+ 900D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 900D              ;   _ al generarse el disparo.
 444+ 900D              ;
 445+ 900D              ;       "$80" ..... No se produce colisión.
 446+ 900D              ;       "$81" ..... Se produce colisión.
 447+ 900D              ;
 448+ 900D              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 900D              ;         _ que forman el disparo.
 450+ 900D
 451+ 900D
 452+ 900D              Comprueba_Colision
 453+ 900D
 454+ 900D              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 900D
 456+ 900D FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 900F E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9010
 459+ 9010 CD 46 90         call Modifica_H_Velocidad_disparo
 460+ 9013
 461+ 9013 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9014 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9016 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9018
 465+ 9018 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 901A CD 36 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 901D
 468+ 901D 7B               ld a,e
 469+ 901E E6 01            and 1
 470+ 9020 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9022              ;                                                  ; _ para activar IMPACTO.
 472+ 9022 E1               pop hl
 473+ 9023 E5               push hl
 474+ 9024 CD 97 96         call NextScan
 475+ 9027
 476+ 9027 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9028 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 902A 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 902C              ;                                                  ; _ 2º scanline si esto es así.
 480+ 902C 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 902E CD 36 90         call Bucle_2
 482+ 9031
 483+ 9031 43           1 ld b,e
 484+ 9032 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9033 FD E1            pop iy
 486+ 9035 C9               ret
 487+ 9036
 488+ 9036              ; ---------- ----------
 489+ 9036
 490+ 9036 06 02        Bucle_2 ld b,2
 491+ 9038 FD 7E 00     2 ld a,(iy)
 492+ 903B A6               and (hl)
 493+ 903C 28 02            jr z,1F
 494+ 903E 1E 81            ld e,$81
 495+ 9040 23           1 inc hl
 496+ 9041 FD 23            inc iy
 497+ 9043 10 F3            djnz 2B
 498+ 9045 C9               ret
 499+ 9046
 500+ 9046              ; ---------- ----------
 501+ 9046              ;
 502+ 9046              ;   21/7/23
 503+ 9046
 504+ 9046              Modifica_H_Velocidad_disparo
 505+ 9046
 506+ 9046 3A 5F 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9049 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 904B D0               ret nc                                         ; _ incrementamos H.
 509+ 904C 24               inc h
 510+ 904D
 511+ 904D C9               ret
 512+ 904E
 513+ 904E              ; -------------------------------------------------------------------------------------------------------------
 514+ 904E              ;
 515+ 904E              ;   11/04/23
 516+ 904E              ;
 517+ 904E              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 904E              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 904E              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 904E              ;
 521+ 904E              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 904E
 523+ 904E              Compara_coordenadas_X
 524+ 904E
 525+ 904E              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 904E              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 904E
 528+ 904E              ; Preparamos registros:
 529+ 904E
 530+ 904E 21 CD 88         ld hl,Filas+6
 531+ 9051 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9052 23               inc hl
 533+ 9053 23               inc hl
 534+ 9054 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9055 43               ld b,e
 536+ 9056
 537+ 9056 21 DB 88         ld hl,Filas+20
 538+ 9059 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 905A 21 5A 89         ld hl,Coordenadas_X_Entidad
 540+ 905D CD 79 92         call Guarda_coordenadas_X
 541+ 9060
 542+ 9060              ; Preparamos registros:
 543+ 9060
 544+ 9060 21 A4 85         ld hl,Amadeus_db+6
 545+ 9063 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9064 23               inc hl
 547+ 9065 23               inc hl
 548+ 9066 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9067 7B               ld a,e
 550+ 9068 08               ex af,af'
 551+ 9069 21 B2 85         ld hl,Amadeus_db+20
 552+ 906C 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 906D 21 57 89         ld hl,Coordenadas_X_Amadeus
 554+ 9070 CD 79 92         call Guarda_coordenadas_X
 555+ 9073
 556+ 9073              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9073              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9073
 559+ 9073 04               inc b
 560+ 9074 05               dec b
 561+ 9075 28 04            jr z,1F
 562+ 9077 06 03            ld b,3
 563+ 9079 18 02            jr 2F
 564+ 907B 06 02        1 ld b,2
 565+ 907D 08           2 ex af,af'
 566+ 907E 3C               inc a
 567+ 907F 3D               dec a
 568+ 9080 28 04            jr z,5F
 569+ 9082 0E 03            ld c,3
 570+ 9084 18 02            jr 6F
 571+ 9086 0E 02        5 ld c,2
 572+ 9088 79           6 ld a,c
 573+ 9089 08               ex af,af'
 574+ 908A 11 5A 89         ld de,Coordenadas_X_Entidad
 575+ 908D 1A           4 ld a,(de)
 576+ 908E 21 57 89         ld hl,Coordenadas_X_Amadeus
 577+ 9091 BE           3 cp (hl)
 578+ 9092 28 0E            jr z,7F
 579+ 9094 23               inc hl
 580+ 9095 0D               dec c
 581+ 9096 20 F9            jr nz,3B
 582+ 9098 13               inc de
 583+ 9099 08               ex af,af'
 584+ 909A 4F               ld c,a
 585+ 909B 08               ex af,af'
 586+ 909C 10 EF            djnz 4B
 587+ 909E
 588+ 909E              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 909E
 590+ 909E CD B5 92     8 call Limpia_Coordenadas_X
 591+ 90A1 C9               ret
 592+ 90A2
 593+ 90A2 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90A4 32 E0 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90A7 21 52 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90AA CB D6            set 2,(hl)
 597+ 90AC 18 F0            jr 8B
 598+ 90AE
 599+ 90AE              ; -----------------------------------------------------------------------
 600+ 90AE              ;
 601+ 90AE              ;   17/04/23
 602+ 90AE              ;
 603+ 90AE
 604+ 90AE              Detecta_colision_nave_entidad
 605+ 90AE
 606+ 90AE              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90AE
 608+ 90AE 2A C9 88         ld hl,(Posicion_actual)
 609+ 90B1 CD F2 95         call Calcula_puntero_de_impresion
 610+ 90B4
 611+ 90B4              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90B4              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90B4
 614+ 90B4 DD E5            push ix
 615+ 90B6 E1               pop hl
 616+ 90B7 E5               push hl
 617+ 90B8
 618+ 90B8              ; ----- ----- -----
 619+ 90B8 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90BA 06 0A            ld b,10
 621+ 90BC CD EC 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90BF 7B               ld a,e
 623+ 90C0 FE 05            cp 5
 624+ 90C2 38 0E            jr c,3F
 625+ 90C4
 626+ 90C4              ; LLegados a este punto:
 627+ 90C4              ;
 628+ 90C4              ;   HAY COLISIÓN !!!!!.
 629+ 90C4              ;
 630+ 90C4              ;   .db (Impacto) de Amadeus a "1".
 631+ 90C4              ;   SET el bit3 de (Impacto2).
 632+ 90C4              ;
 633+ 90C4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90C4
 635+ 90C4 21 B7 85         ld hl,Amadeus_db+25
 636+ 90C7 36 01            ld (hl),1
 637+ 90C9 21 52 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90CC CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90CE CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90D0 18 18            jr 1F
 641+ 90D2
 642+ 90D2              ; -----
 643+ 90D2
 644+ 90D2 E1           3 pop hl
 645+ 90D3 CD 97 96         call NextScan
 646+ 90D6 E5               push hl
 647+ 90D7 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90D8 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90DA 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90DC 30 0C            jr nc,1F
 651+ 90DE              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90DE 10 DC            djnz 2B
 653+ 90E0
 654+ 90E0              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90E0
 656+ 90E0              ; LLegados a este punto:
 657+ 90E0              ;
 658+ 90E0              ;   NO HAY COLISIÓN !!!!!.
 659+ 90E0              ;
 660+ 90E0              ;   .db (Impacto) de Amadeus a "0".
 661+ 90E0              ;   RES el bit2 de (Impacto2).
 662+ 90E0              ;
 663+ 90E0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90E0              ;   Lo colocamos a "0".
 665+ 90E0
 666+ 90E0 21 52 89         ld hl,Impacto2
 667+ 90E3 CB 96            res 2,(hl)
 668+ 90E5 2A 53 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90E8 36 00            ld (hl),0
 670+ 90EA
 671+ 90EA E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90EB C9               ret
 673+ 90EC
 674+ 90EC               ; ---------- ----------
 675+ 90EC
 676+ 90EC C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90ED 3A C8 88         ld a,(Columns)
 678+ 90F0 47               ld b,a
 679+ 90F1 FD 7E 00     2 ld a,(iy)
 680+ 90F4 BE               cp (hl)
 681+ 90F5 28 01            jr z,1F
 682+ 90F7
 683+ 90F7 1C               inc e
 684+ 90F8
 685+ 90F8 23           1 inc hl
 686+ 90F9 FD 23            inc iy
 687+ 90FB 10 F4            djnz 2B
 688+ 90FD C1               pop bc
 689+ 90FE C9               ret
 690+ 90FF
 691+ 90FF              ; -------------------------------------------------------------------------------------------------------------
 692+ 90FF              ;
 693+ 90FF              ;   13/03/23
 694+ 90FF              ;
 695+ 90FF              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90FF              ;
 697+ 90FF              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90FF
 699+ 90FF 21 58 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9102 7E               ld a,(hl)
 701+ 9103 A7               and a
 702+ 9104 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9105
 704+ 9105 44               ld b,h
 705+ 9106 4D               ld c,l
 706+ 9107 2A 1D 89         ld hl,(Stack_snapshot_disparos)
 707+ 910A E5               push hl
 708+ 910B A7               and a
 709+ 910C ED 42            sbc hl,bc
 710+ 910E E5               push hl
 711+ 910F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9110
 713+ 9110 E1               pop hl
 714+ 9111 54               ld d,h
 715+ 9112 5D               ld e,l
 716+ 9113 1B               dec de
 717+ 9114 ED B8            lddr                                                ; Limpiamos.
 718+ 9116
 719+ 9116 21 58 71         ld hl,Album_de_fotos_disparos
 720+ 9119 22 1D 89         ld (Stack_snapshot_disparos),hl
 721+ 911C
 722+ 911C C9               ret
 723+ 911D
 724+ 911D              ; -------------------------------------------------------------------------------------------------------------
 725+ 911D              ;
 726+ 911D              ;   18/07/23
 727+ 911D              ;
 728+ 911D
 729+ 911D              Motor_de_disparos
 730+ 911D
 731+ 911D              ; Gestiona DISPAROS DE AMADEUS.
 732+ 911D
 733+ 911D 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9120 2A 50 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9123
 736+ 9123 CD 1C 8D     2 call Extrae_address
 737+ 9126 7E               ld a,(hl)
 738+ 9127 A7               and a
 739+ 9128 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 912A
 741+ 912A              ; ----- ----- ----- ----- ----- -----
 742+ 912A
 743+ 912A C5               push bc
 744+ 912B CD EF 91         call foto_disparo_a_borrar
 745+ 912E
 746+ 912E              ; Existe colisión con este disparo???
 747+ 912E
 748+ 912E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 912F 7E               ld a,(hl)
 750+ 9130 2B               dec hl
 751+ 9131 E6 01            and 1
 752+ 9133 28 1D            jr z,9F
 753+ 9135
 754+ 9135              ;   En este punto:
 755+ 9135              ;
 756+ 9135              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9135              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9135              ;   _con la entidad).
 759+ 9135              ;
 760+ 9135              ;   Disparo_2A defw 0                                ; Control.
 761+ 9135              ;    defw 0                                          ; Puntero objeto.
 762+ 9135              ;    defw 0                                          ; Puntero de impresión.
 763+ 9135              ;    defw 0                                          ; Rutina de impresión.
 764+ 9135
 765+ 9135 E5               push hl
 766+ 9136
 767+ 9136 06 04            ld b,4
 768+ 9138 23           19 inc hl
 769+ 9139 10 FD            djnz 19B
 770+ 913B
 771+ 913B CD 1C 8D         call Extrae_address
 772+ 913E CD 60 9D         call Genera_coordenadas_disparo
 773+ 9141
 774+ 9141              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9141
 776+ 9141 21 55 89         ld hl,Coordenadas_disparo_certero
 777+ 9144 72               ld (hl),d
 778+ 9145 23               inc hl
 779+ 9146 73               ld (hl),e
 780+ 9147
 781+ 9147              ; Elimino el disparo de la base de datos.
 782+ 9147
 783+ 9147 E1               pop hl
 784+ 9148 CD 6E 92         call Elimina_disparo_de_base_de_datos
 785+ 914B 21 52 89         ld hl,Impacto2
 786+ 914E CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9150
 788+ 9150 18 06            jr 11F
 789+ 9152
 790+ 9152 CD 18 92     9 call Mueve_disparo
 791+ 9155 CD EF 91         call foto_disparo_a_borrar
 792+ 9158
 793+ 9158 C1           11 pop bc
 794+ 9159 18 04            jr 7F
 795+ 915B
 796+ 915B              ; ----- ----- ----- ----- ----- -----
 797+ 915B
 798+ 915B ED 42        1 sbc hl,bc
 799+ 915D 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 915F
 801+ 915F 2A 50 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9162 23               inc hl
 803+ 9163 23               inc hl
 804+ 9164 22 50 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9167 18 BA            jr 2B
 806+ 9169
 807+ 9169 CD 9D 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 916C              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 916C
 810+ 916C              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 916C
 812+ 916C 01 8A 85         ld bc,Disparo_11
 813+ 916F 2A 4E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9172
 815+ 9172 CD 1C 8D     5 call Extrae_address
 816+ 9175 7E               ld a,(hl)
 817+ 9176 A7               and a
 818+ 9177 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9179
 820+ 9179              ; ----- ----- ----- ----- ----- -----
 821+ 9179
 822+ 9179 C5               push bc
 823+ 917A CD EF 91         call foto_disparo_a_borrar
 824+ 917D
 825+ 917D              ; Existe colisión con este disparo???
 826+ 917D
 827+ 917D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 917E 7E               ld a,(hl)
 829+ 917F 2B               dec hl
 830+ 9180 E6 01            and 1
 831+ 9182 28 4D            jr z,10F
 832+ 9184
 833+ 9184              ;! La colisión se produce con Amadeus???
 834+ 9184              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9184
 836+ 9184 E5               push hl
 837+ 9185
 838+ 9185 06 04            ld b,4
 839+ 9187 23           16 inc hl
 840+ 9188 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 918A
 842+ 918A CD 1C 8D         call Extrae_address
 843+ 918D CD 60 9D         call Genera_coordenadas_disparo
 844+ 9190
 845+ 9190 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9191 FE 16            cp $16
 847+ 9193 38 2A            jr c,15F
 848+ 9195
 849+ 9195
 850+ 9195              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9195
 852+ 9195 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9196
 854+ 9196              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9196
 856+ 9196
 857+ 9196 2A 5D 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9199
 859+ 9199              ; Coordenada X de Amadeus en D.
 860+ 9199
 861+ 9199 7D               ld a,l
 862+ 919A E6 1F            and $1F
 863+ 919C 57               ld d,a
 864+ 919D
 865+ 919D 21 A6 85         ld hl,Amadeus_db+8
 866+ 91A0 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91A1
 868+ 91A1 21 57 89         ld hl,Coordenadas_X_Amadeus
 869+ 91A4 CD 79 92         call Guarda_coordenadas_X
 870+ 91A7
 871+ 91A7 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91A8
 873+ 91A8              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91A8
 875+ 91A8 06 02            ld b,2
 876+ 91AA C5           20 push bc
 877+ 91AB
 878+ 91AB 06 03            ld b,3
 879+ 91AD 21 57 89         ld hl,Coordenadas_X_Amadeus
 880+ 91B0 7E           18 ld a,(hl)
 881+ 91B1 BA               cp d
 882+ 91B2 20 04            jr nz,17F
 883+ 91B4
 884+ 91B4              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91B4
 886+ 91B4 C1               pop bc
 887+ 91B5 E1               pop hl
 888+ 91B6 18 0D            jr 14F
 889+ 91B8
 890+ 91B8 23           17 inc hl
 891+ 91B9 10 F5            djnz 18B
 892+ 91BB
 893+ 91BB 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91BC
 895+ 91BC C1               pop bc
 896+ 91BD 10 EB            djnz 20B
 897+ 91BF
 898+ 91BF
 899+ 91BF              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91BF              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91BF
 902+ 91BF E1           15 pop hl
 903+ 91C0 23               inc hl
 904+ 91C1 35               dec (hl)
 905+ 91C2 2B               dec hl
 906+ 91C3 18 0C            jr 10F
 907+ 91C5
 908+ 91C5              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91C5              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91C5
 911+ 91C5 E5           14 push hl
 912+ 91C6 CD 6E 92         call Elimina_disparo_de_base_de_datos
 913+ 91C9 21 52 89         ld hl,Impacto2
 914+ 91CC CB CE            set 1,(hl)
 915+ 91CE E1               pop hl
 916+ 91CF 18 06            jr 12F
 917+ 91D1
 918+ 91D1              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91D1
 920+ 91D1 CD 18 92     10 call Mueve_disparo
 921+ 91D4 CD EF 91         call foto_disparo_a_borrar
 922+ 91D7 C1           12 pop bc
 923+ 91D8
 924+ 91D8 18 04            jr 8F
 925+ 91DA
 926+ 91DA              ; ----- ----- ----- ----- ----- -----
 927+ 91DA
 928+ 91DA ED 42        4 sbc hl,bc
 929+ 91DC 28 0A            jr z,6F
 930+ 91DE
 931+ 91DE 2A 4E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91E1 23               inc hl
 933+ 91E2 23               inc hl
 934+ 91E3 22 4E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91E6 18 8A            jr 5B
 936+ 91E8
 937+ 91E8 CD 96 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91EB CD B5 92         call Limpia_Coordenadas_X
 939+ 91EE C9               ret
 940+ 91EF
 941+ 91EF              ; ------------------------------------------------------------------
 942+ 91EF
 943+ 91EF              foto_disparo_a_borrar
 944+ 91EF
 945+ 91EF 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91F0 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91F1 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91F2
 949+ 91F2 E5               push hl
 950+ 91F3 23               inc hl
 951+ 91F4 23               inc hl
 952+ 91F5 ED 73 15 89      ld (Stack),sp
 953+ 91F9 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91FA FD E1            pop iy
 955+ 91FC DD E1            pop ix
 956+ 91FE E1               pop hl
 957+ 91FF ED 7B 15 89      ld sp,(Stack)
 958+ 9203 3A 04 89         ld a,(Ctrl_1)
 959+ 9206 CB C7            set 0,a
 960+ 9208 32 04 89         ld (Ctrl_1),a
 961+ 920B CD A0 7F         call Guarda_foto_registros
 962+ 920E 3A 04 89         ld a,(Ctrl_1)
 963+ 9211 CB 87            res 0,a
 964+ 9213 32 04 89         ld (Ctrl_1),a
 965+ 9216 E1               pop hl
 966+ 9217 C9               ret
 967+ 9218
 968+ 9218              ;---------------------------------------------------
 969+ 9218              ;
 970+ 9218              ;   18/07/23
 971+ 9218              ;
 972+ 9218
 973+ 9218              Mueve_disparo
 974+ 9218
 975+ 9218              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9218              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9218              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9218
 979+ 9218 E5               push hl
 980+ 9219
 981+ 9219 7E               ld a,(hl)
 982+ 921A
 983+ 921A 06 04            ld b,4
 984+ 921C 23           1 inc hl
 985+ 921D 10 FD            djnz 1B
 986+ 921F
 987+ 921F              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 921F
 989+ 921F CD 1C 8D         call Extrae_address
 990+ 9222
 991+ 9222 E6 01            and 1
 992+ 9224 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9226
 994+ 9226              ; Disparo hacia arriba, (Amadeus).
 995+ 9226
 996+ 9226              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9226              ; _ de la dificultad.
 998+ 9226
 999+ 9226 CD A6 96         call PreviousScan
1000+ 9229 CD A6 96         call PreviousScan
1001+ 922C CD A6 96         call PreviousScan
1002+ 922F CD A6 96         call PreviousScan
1003+ 9232
1004+ 9232              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9232
1006+ 9232 7C               ld a,h
1007+ 9233 FE 40            cp $40
1008+ 9235 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9237
1010+ 9237              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9237
1012+ 9237 EB               ex de,hl
1013+ 9238 06 04            ld b,4
1014+ 923A 2B           6 dec hl
1015+ 923B 10 FD            djnz 6B
1016+ 923D
1017+ 923D CD 6E 92         call Elimina_disparo_de_base_de_datos
1018+ 9240 E1               pop hl
1019+ 9241 18 10            jr 7F
1020+ 9243
1021+ 9243              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9243              ; HL contiene el puntero de impresión del disparo.
1023+ 9243              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9243
1025+ 9243 D5           3 push de
1026+ 9244 C5               push bc
1027+ 9245
1028+ 9245 CD 0D 90         call Comprueba_Colision
1029+ 9248
1030+ 9248              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9248
1032+ 9248 78               ld a,b
1033+ 9249
1034+ 9249 C1               pop bc
1035+ 924A D1               pop de
1036+ 924B
1037+ 924B EB               ex de,hl
1038+ 924C
1039+ 924C 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 924D 23               inc hl                                      ; _ movimiento.
1041+ 924E 72               ld (hl),d
1042+ 924F
1043+ 924F E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9250
1045+ 9250 23               inc hl                                      ; _ en curso.
1046+ 9251 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9252 2B               dec hl
1048+ 9253
1049+ 9253 C9           7 ret
1050+ 9254
1051+ 9254              ; Disparo hacia abajo, (Entidad).
1052+ 9254
1053+ 9254 3A 5F 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9257 47               ld b,a
1055+ 9258
1056+ 9258 CD 97 96     4 call NextScan
1057+ 925B 10 FB            djnz 4B
1058+ 925D
1059+ 925D              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 925D
1061+ 925D 7C               ld a,h
1062+ 925E FE 58            cp $58
1063+ 9260 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9262
1065+ 9262 EB               ex de,hl
1066+ 9263 06 04            ld b,4
1067+ 9265 2B           5 dec hl
1068+ 9266 10 FD            djnz 5B
1069+ 9268
1070+ 9268 CD 6E 92         call Elimina_disparo_de_base_de_datos
1071+ 926B E1               pop hl
1072+ 926C 18 E5            jr 7B
1073+ 926E
1074+ 926E              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 926E
1076+ 926E 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9271 AF               xor a
1078+ 9272 77               ld (hl),a
1079+ 9273 54               ld d,h
1080+ 9274 5D               ld e,l
1081+ 9275 13               inc de
1082+ 9276 ED B0            ldir
1083+ 9278 C9               ret
1084+ 9279
1085+ 9279              ; -----------------------------------------------------------------
1086+ 9279              ;
1087+ 9279              ;   19/7/23
1088+ 9279              ;
1089+ 9279              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9279              ;
1091+ 9279              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9279              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9279              ;
1094+ 9279              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9279              ;
1096+ 9279              ;   INPUTS:
1097+ 9279              ;
1098+ 9279              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9279              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9279
1101+ 9279              ;   MODIFICA: A, HL, BC y DE.
1102+ 9279
1103+ 9279              Guarda_coordenadas_X
1104+ 9279
1105+ 9279 7B               ld a,e
1106+ 927A A7               and a
1107+ 927B 20 04            jr nz,1F
1108+ 927D
1109+ 927D 06 02            ld b,2
1110+ 927F 18 02            jr 2F
1111+ 9281
1112+ 9281 06 03        1 ld b,3
1113+ 9283 72           2 ld (hl),d
1114+ 9284 23               inc hl
1115+ 9285 14               inc d
1116+ 9286 10 FB            djnz 2B
1117+ 9288
1118+ 9288 C9               ret
1119+ 9289
1120+ 9289              ; -----------------------------------------------------------------
1121+ 9289              ;
1122+ 9289              ;   12/04/23
1123+ 9289              ;
1124+ 9289
1125+ 9289 3A 52 89     Selector_de_impactos ld a,(Impacto2)
1126+ 928C A7               and a
1127+ 928D C8               ret z
1128+ 928E
1129+ 928E FE 04            cp 4
1130+ 9290 20 09            jr nz,1F
1131+ 9292
1132+ 9292
1133+ 9292              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9292
1135+ 9292 CD AE 90         call Detecta_colision_nave_entidad
1136+ 9295
1137+ 9295 21 52 89         ld hl,Impacto2
1138+ 9298 CB 5E            bit 3,(hl)
1139+ 929A C0               ret nz                                               ; Existe colisión, RET.
1140+ 929B
1141+ 929B              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 929B              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 929B
1144+ 929B 21 52 89     1 ld hl,Impacto2
1145+ 929E CB 4E            bit 1,(hl)
1146+ 92A0 28 07            jr z,2F
1147+ 92A2
1148+ 92A2 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92A5 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92A7 18 0B            jr 3F
1151+ 92A9
1152+ 92A9 21 52 89     2 ld hl,Impacto2
1153+ 92AC CB 46            bit 0,(hl)
1154+ 92AE C8               ret z
1155+ 92AF
1156+ 92AF              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92AF
1158+ 92AF 21 04 89         ld hl,Ctrl_1
1159+ 92B2 CB D6            set 2,(hl)
1160+ 92B4
1161+ 92B4 C9           3 ret
1162+ 92B5
1163+ 92B5              ; -----------------------------------------------------------------
1164+ 92B5              ;
1165+ 92B5              ;   19/7/23
1166+ 92B5              ;
1167+ 92B5              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92B5
1169+ 92B5 AF           Limpia_Coordenadas_X xor a
1170+ 92B6 06 06            ld b,6
1171+ 92B8 21 57 89         ld hl,Coordenadas_X_Amadeus
1172+ 92BB 77           1 ld (hl),a
1173+ 92BC 23               inc hl
1174+ 92BD 10 FC            djnz 1B
1175+ 92BF C9               ret
1176+ 92C0
1177+ 92C0              ; -----------------------------------------------------------------
1178+ 92C0              ;
1179+ 92C0              ;   25/04/23
1180+ 92C0              ;
1181+ 92C0
1182+ 92C0              Determina_resultado_comparativa
1183+ 92C0
1184+ 92C0              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92C0              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92C0              ;
1187+ 92C0              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92C0              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92C0              ;
1190+ 92C0              ;   SBC HL,DE
1191+ 92C0
1192+ 92C0              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92C0              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92C0
1195+ 92C0              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92C0              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92C0
1198+ 92C0
1199+ 92C0 3A DB 88         ld a,(Cuad_objeto)
1200+ 92C3 FE 02            cp 2
1201+ 92C5 28 26            jr z,2F
1202+ 92C7 38 24            jr c,2F
1203+ 92C9
1204+ 92C9              ; Cuadrantes 3º y 4º
1205+ 92C9
1206+ 92C9 E6 01            and 1
1207+ 92CB 28 10            jr z,4F
1208+ 92CD
1209+ 92CD              ; Cuadrante 3º
1210+ 92CD
1211+ 92CD 7C               ld a,h
1212+ 92CE 06 00            ld b,0
1213+ 92D0
1214+ 92D0 CD 5B 93         call Compara_cositas_H3
1215+ 92D3
1216+ 92D3 04               inc b
1217+ 92D4 05               dec b
1218+ 92D5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92D6
1220+ 92D6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92D7 06 00            ld b,0
1222+ 92D9
1223+ 92D9 CD 6D 93         call Compara_cositas_L3
1224+ 92DC C9               ret
1225+ 92DD
1226+ 92DD              ; Cuadrante 4º
1227+ 92DD
1228+ 92DD 7C           4 ld a,h
1229+ 92DE 06 00            ld b,0
1230+ 92E0
1231+ 92E0 CD 7F 93         call Compara_cositas_H4
1232+ 92E3
1233+ 92E3 04               inc b
1234+ 92E4 05               dec b
1235+ 92E5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92E6
1237+ 92E6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92E7 06 00            ld b,0
1239+ 92E9
1240+ 92E9 CD 95 93         call Compara_cositas_L4
1241+ 92EC C9               ret
1242+ 92ED
1243+ 92ED              ; Cuadrantes 1º y 2º.
1244+ 92ED
1245+ 92ED 28 10        2 jr z,3F
1246+ 92EF
1247+ 92EF              ; 1er Cuadrante
1248+ 92EF
1249+ 92EF 7C               ld a,h
1250+ 92F0 06 00            ld b,0
1251+ 92F2
1252+ 92F2 CD 33 93         call Compara_cositas_H1
1253+ 92F5
1254+ 92F5 04               inc b
1255+ 92F6 05               dec b
1256+ 92F7 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92F8
1258+ 92F8 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92F9 06 00            ld b,0
1260+ 92FB
1261+ 92FB CD 49 93         call Compara_cositas_L1
1262+ 92FE C9               ret
1263+ 92FF
1264+ 92FF
1265+ 92FF              ; 2º Cuadrante
1266+ 92FF
1267+ 92FF 7C           3 ld a,h
1268+ 9300 06 00            ld b,0
1269+ 9302
1270+ 9302 CD 0F 93         call Compara_cositas_H2
1271+ 9305
1272+ 9305 04               inc b
1273+ 9306 05               dec b
1274+ 9307 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9308
1276+ 9308 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9309 06 00            ld b,0
1278+ 930B
1279+ 930B CD 21 93         call Compara_cositas_L2
1280+ 930E C9               ret
1281+ 930F
1282+ 930F A7           Compara_cositas_H2 and a
1283+ 9310 28 0D            jr z,1F
1284+ 9312              ;    cp $fd
1285+ 9312              ;    jr z,1F
1286+ 9312              ;    cp $fe
1287+ 9312              ;    jr z,1F
1288+ 9312 FE FF            cp $ff
1289+ 9314 28 09            jr z,1F
1290+ 9316 FE 01            cp $01
1291+ 9318 28 05            jr z,1F
1292+ 931A FE 02            cp $02
1293+ 931C 28 01            jr z,1F
1294+ 931E C0               ret nz
1295+ 931F 04           1 inc b
1296+ 9320 C9               ret
1297+ 9321
1298+ 9321 A7           Compara_cositas_L2 and a
1299+ 9322 28 0D            jr z,1F
1300+ 9324              ;    cp $fd
1301+ 9324              ;    jr z,1F
1302+ 9324 FE FE            cp $fe
1303+ 9326 28 09            jr z,1F
1304+ 9328 FE FF            cp $ff
1305+ 932A 28 05            jr z,1F
1306+ 932C FE 01            cp $01
1307+ 932E 28 01            jr z,1F
1308+ 9330              ;    cp $02
1309+ 9330              ;    jr z,1F
1310+ 9330 C0               ret nz
1311+ 9331 04           1 inc b
1312+ 9332 C9               ret
1313+ 9333
1314+ 9333 A7           Compara_cositas_H1 and a
1315+ 9334 28 11            jr z,1F
1316+ 9336              ;    cp $fd
1317+ 9336              ;    jr z,1F
1318+ 9336              ;    cp $fe
1319+ 9336              ;    jr z,1F
1320+ 9336 FE FF            cp $ff
1321+ 9338 28 0D            jr z,1F
1322+ 933A FE 01            cp $01
1323+ 933C 28 09            jr z,1F
1324+ 933E FE 02            cp $02
1325+ 9340 28 05            jr z,1F
1326+ 9342 FE 03            cp $03
1327+ 9344 28 01            jr z,1F
1328+ 9346 C0               ret nz
1329+ 9347 04           1 inc b
1330+ 9348 C9               ret
1331+ 9349
1332+ 9349 A7           Compara_cositas_L1 and a
1333+ 934A 28 0D            jr z,1F
1334+ 934C              ;    cp $fd
1335+ 934C              ;    jr z,1F
1336+ 934C              ;    cp $fe
1337+ 934C              ;    jr z,1F
1338+ 934C              ;    cp $ff
1339+ 934C              ;    jr z,1F
1340+ 934C FE 01            cp $01
1341+ 934E 28 09            jr z,1F
1342+ 9350 FE 02            cp $02
1343+ 9352 28 05            jr z,1F
1344+ 9354 FE 03            cp $03
1345+ 9356 28 01            jr z,1F
1346+ 9358 C0               ret nz
1347+ 9359 04           1 inc b
1348+ 935A C9               ret
1349+ 935B
1350+ 935B A7           Compara_cositas_H3 and a
1351+ 935C 28 0D            jr z,1F
1352+ 935E              ;    cp $fd
1353+ 935E              ;    jr z,1F
1354+ 935E FE FE            cp $fe
1355+ 9360 28 09            jr z,1F
1356+ 9362 FE FF            cp $ff
1357+ 9364 28 05            jr z,1F
1358+ 9366 FE 01            cp $01
1359+ 9368 28 01            jr z,1F
1360+ 936A              ;    cp $02
1361+ 936A              ;    jr z,1F
1362+ 936A              ;    cp $03
1363+ 936A              ;    jr z,1F
1364+ 936A C0               ret nz
1365+ 936B 04           1 inc b
1366+ 936C C9               ret
1367+ 936D
1368+ 936D A7           Compara_cositas_L3 and a
1369+ 936E 28 0D            jr z,1F
1370+ 9370              ;    cp $fd
1371+ 9370              ;    jr z,1F
1372+ 9370              ;    cp $fe
1373+ 9370              ;    jr z,1F
1374+ 9370              ;    cp $ff
1375+ 9370              ;    jr z,1F
1376+ 9370 FE 01            cp $01
1377+ 9372 28 09            jr z,1F
1378+ 9374 FE 02            cp $02
1379+ 9376 28 05            jr z,1F
1380+ 9378 FE 03            cp $03
1381+ 937A 28 01            jr z,1F
1382+ 937C C0               ret nz
1383+ 937D 04           1 inc b
1384+ 937E C9               ret
1385+ 937F
1386+ 937F A7           Compara_cositas_H4 and a
1387+ 9380 28 11            jr z,1F
1388+ 9382 FE FD            cp $fd
1389+ 9384 28 0D            jr z,1F
1390+ 9386 FE FE            cp $fe
1391+ 9388 28 09            jr z,1F
1392+ 938A FE FF            cp $ff
1393+ 938C 28 05            jr z,1F
1394+ 938E FE 01            cp $01
1395+ 9390 28 01            jr z,1F
1396+ 9392              ;    cp $02
1397+ 9392              ;    jr z,1F
1398+ 9392              ;    cp $03
1399+ 9392              ;    jr z,1F
1400+ 9392 C0               ret nz
1401+ 9393 04           1 inc b
1402+ 9394 C9               ret
1403+ 9395
1404+ 9395 A7           Compara_cositas_L4 and a
1405+ 9396 28 0D            jr z,1F
1406+ 9398              ;    cp $fd
1407+ 9398              ;    jr z,1F
1408+ 9398 FE FE            cp $fe
1409+ 939A 28 09            jr z,1F
1410+ 939C FE FF            cp $ff
1411+ 939E 28 05            jr z,1F
1412+ 93A0 FE 01            cp $01
1413+ 93A2 28 01            jr z,1F
1414+ 93A4              ;    cp $02
1415+ 93A4              ;    jr z,1F
1416+ 93A4              ;    cp $03
1417+ 93A4              ;    jr z,1F
1418+ 93A4 C0               ret nz
1419+ 93A5 04           1 inc b
1420+ 93A6 C9               ret
# file closed: Disparo.asm
1789  93A7              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93A7              ; ******************************************************************************************************************************************************************************************
   2+ 93A7              ;
   3+ 93A7              ; 26/06/23
   4+ 93A7              ;
   5+ 93A7              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93A7
   7+ 93A7 CD 8B 96     Draw call Prepara_draw
   8+ 93AA 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93AB A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93AC 28 05        	jr z,2F
  11+ 93AE
  12+ 93AE 3A DB 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93B1 18 0C        	jr 1F
  14+ 93B3
  15+ 93B3 2A D9 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93B6 22 C9 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93B9 CD 48 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93BC              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93BC CD EB 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93BF
  21+ 93BF 3A F1 88     1 ld a,(Ctrl_0)
  22+ 93C2 CB 6F        	bit 5,a
  23+ 93C4 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93C6
  25+ 93C6 CD DE 93     	call Comprueba_limite_horizontal
  26+ 93C9 CD 6E 94     	call Comprueba_limite_vertical
  27+ 93CC
  28+ 93CC              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93CC              ; -----------------------
  30+ 93CC              ; -----------------------
  31+ 93CC              ; -----------------------
  32+ 93CC
  33+ 93CC CD BB 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93CF CD F2 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93D2 CD 51 96     	call Define_rutina_de_impresion
  36+ 93D5
  37+ 93D5 3A F1 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93D8 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93DA 32 F1 88     	ld (Ctrl_0),a
  40+ 93DD
  41+ 93DD C9           	ret
  42+ 93DE
  43+ 93DE              ; *******************************************************************************************************************************************************************************************
  44+ 93DE              ;	21/01/23
  45+ 93DE              ;
  46+ 93DE              ; 	Comprueba_limite_horizontal.
  47+ 93DE              ;
  48+ 93DE              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93DE              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93DE              ;
  51+ 93DE              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93DE              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93DE              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93DE              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93DE
  56+ 93DE
  57+ 93DE
  58+ 93DE 3A F1 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93E1 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93E3 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93E5 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93E7 32 F1 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93EA 18 09            jr 6F
  64+ 93EC CB 5F        1 bit 3,a
  65+ 93EE 28 0A            jr z,2F
  66+ 93F0 E6 F7            and $f7
  67+ 93F2 32 F1 88         ld (Ctrl_0),a
  68+ 93F5 CD 48 95     6 call Inicializacion
  69+ 93F8 18 5B            jr 5F
  70+ 93FA E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93FB
  72+ 93FB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93FB              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93FB
  75+ 93FB EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93FC 2A FF 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93FF CD AA 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9402 67           	ld h,a
  79+ 9403 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9404 CD AA 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9407 67           	ld h,a
  82+ 9408 A7           	and a
  83+ 9409 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 940B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 940C 3A DB 88     	ld a,(Cuad_objeto)
  86+ 940F FE 02        	cp 2
  87+ 9411 38 1E        	jr c,3F
  88+ 9413 28 1C        	jr z,3F
  89+ 9415 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9416 28 23            jr z,7F
  91+ 9418 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 941A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 941C E1           	pop hl
  94+ 941D
  95+ 941D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 941D              ; _para indicar con E="2" en caso necesario.
  97+ 941D
  98+ 941D E5               push hl
  99+ 941E C5               push bc
 100+ 941F CD AA 99     	call calcula_tercio
 101+ 9422 FE 01        	cp 1
 102+ 9424 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9426 CD 56 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9429 28 26            jr z,9F
 105+ 942B 38 24            jr c,9F
 106+ 942D 1E 00        11 ld e,0
 107+ 942F 18 22            jr 8F
 108+ 9431 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9432 28 07        	jr z, 7F
 110+ 9434 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9436 1E 00         	ld e,0
 112+ 9438 E1           	pop hl
 113+ 9439 18 04        	jr 4F
 114+ 943B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 943D 18 15            jr 10F
 116+ 943F
 117+ 943F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 943F              ; _para indicar con E="2" en caso necesario.
 119+ 943F
 120+ 943F E5           4 push hl
 121+ 9440 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9441 CD AA 99     	call calcula_tercio
 123+ 9444 FE 01        	cp 1
 124+ 9446 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9448 CD 56 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 944B 28 04            jr z,9F
 127+ 944D 30 02            jr nc,9F
 128+ 944F 18 02        	jr 8F
 129+ 9451 1E 02        9 ld e,2
 130+ 9453 C1           8 pop bc
 131+ 9454 E1           10 pop hl
 132+ 9455 C9           5 ret
 133+ 9456
 134+ 9456              ; --------------------
 135+ 9456              ;
 136+ 9456              ; 25/08/22
 137+ 9456
 138+ 9456 CD AA 99     Comprueba_centro call calcula_tercio
 139+ 9459 67               ld h,a
 140+ 945A 08           	ex af,af
 141+ 945B FE 02        	cp 2
 142+ 945D 38 07        	jr c,1F
 143+ 945F 28 05        	jr z,1F
 144+ 9461 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9464 18 03        	jr 2F
 146+ 9466 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9469 08           2 ex af,af
 148+ 946A A7               and a
 149+ 946B ED 42            sbc hl,bc
 150+ 946D C9               ret
 151+ 946E
 152+ 946E              ; *********************************************************************************************************************************************************************************************
 153+ 946E              ;
 154+ 946E              ;   16/8/22
 155+ 946E              ;
 156+ 946E              ;	Comprueba_limite_vertical
 157+ 946E              ;
 158+ 946E              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 946E              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 946E              ;
 161+ 946E
 162+ 946E 2A C9 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9471 7D           	ld a,l
 164+ 9472 E6 1F        	and $1F
 165+ 9474 57           	ld d,a
 166+ 9475 3A 01 89     	ld a,(Limite_vertical)
 167+ 9478 BA           	cp d 											; Límite - Posición.
 168+ 9479 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 947A 3A DB 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 947D CB 47        	bit 0,a
 171+ 947F 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9481
 173+ 9481              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9481
 175+ 9481 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9482 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9484
 178+ 9484              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9484              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9484
 181+ 9484 3A CD 88         ld a,(Coordenada_X)
 182+ 9487 16 0F            ld d,Centro_izquierda
 183+ 9489 A7               and a
 184+ 948A 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 948B 28 1E            jr z,3F
 186+ 948D 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 948F              ;                                                    ; _salimos sin modificar nada.
 188+ 948F 18 0E            jr 2F
 189+ 9491 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9492 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9494
 192+ 9494              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9494              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9494
 195+ 9494 3A CD 88         ld a,(Coordenada_X)
 196+ 9497 16 10            ld d,Centro_derecha
 197+ 9499 A7               and a
 198+ 949A 92               sub d
 199+ 949B 28 0E            jr z,3F
 200+ 949D 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 949F              ;                                                    ; _salimos sin modificar nada.
 202+ 949F CB 43        2 bit 0,e
 203+ 94A1 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94A3 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94A4 CD 38 95         call Modificaccionne
 206+ 94A7 C1           	pop bc
 207+ 94A8 CD 48 95         call Inicializacion
 208+ 94AB C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94AC
 210+ 94AC              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94AC
 212+ 94AC C5           4 push bc
 213+ 94AD 01 C8 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94B0 0A           	ld a,(bc)
 215+ 94B1 3D           	dec a
 216+ 94B2 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94B3 7D           	ld a,l
 218+ 94B4 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94B5 CB 47        	bit 0,a
 220+ 94B7 28 03        	jr z,5F
 221+ 94B9 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94BA 18 2E        	jr 7F
 223+ 94BC
 224+ 94BC              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94BC
 226+ 94BC 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94BD F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94BE 3A F1 88     	ld a,(Ctrl_0)
 229+ 94C1 CB 4F        	bit 1,a
 230+ 94C3 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94C5 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94C6
 233+ 94C6              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94C6
 235+ 94C6 1C               inc e
 236+ 94C7 1D               dec e
 237+ 94C8 20 07            jr nz,12F
 238+ 94CA 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94CB 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94CC 22 C9 88     	ld (Posicion_actual),hl
 241+ 94CF 18 44        13 jr 9F
 242+ 94D1 CB 43        12 bit 0,e
 243+ 94D3 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94D5              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94D5 C1           	pop bc
 246+ 94D6 18 D3        	jr 3B
 247+ 94D8 80           14 add b
 248+ 94D9 6F               ld l,a
 249+ 94DA 22 C9 88     	ld (Posicion_actual),hl
 250+ 94DD CD 38 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94E0 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94E2 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94E4 32 F1 88         ld (Ctrl_0),a
 254+ 94E7 F1           	pop af
 255+ 94E8 18 2B        	jr 9F
 256+ 94EA
 257+ 94EA              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94EA
 259+ 94EA F5           7 push af
 260+ 94EB 3A F1 88     	ld a,(Ctrl_0)
 261+ 94EE CB 47        	bit 0,a
 262+ 94F0 20 1D        	jr nz,8F
 263+ 94F2 F1           	pop af
 264+ 94F3
 265+ 94F3              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94F3
 267+ 94F3 1C           	inc e
 268+ 94F4 1D               dec e
 269+ 94F5 20 07            jr nz,10F
 270+ 94F7 90           	sub b
 271+ 94F8 6F               ld l,a
 272+ 94F9 22 C9 88     	ld (Posicion_actual),hl
 273+ 94FC 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94FE              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94FE CB 43        10 bit 0,e
 276+ 9500 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9502              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9502 C1           	pop bc
 279+ 9503 18 A6        	jr 3B
 280+ 9505 90           16 sub b
 281+ 9506 6F               ld l,a
 282+ 9507 22 C9 88     	ld (Posicion_actual),hl
 283+ 950A CD 38 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 950D 18 06            jr 9F
 285+ 950F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9511 32 F1 88         ld (Ctrl_0),a
 287+ 9514 F1           	pop af
 288+ 9515 C1           9 pop bc
 289+ 9516 1E 00        	ld e,0
 290+ 9518 CD 48 95         call Inicializacion
 291+ 951B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 951C 08           	ex af,af
 293+ 951D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 951E 18 8B            jr 3B
 295+ 9520
 296+ 9520              ; --------------------
 297+ 9520
 298+ 9520 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9522 CD A6 96     1 call PreviousScan
 300+ 9525 10 FB            djnz 1B
 301+ 9527 22 C9 88     	ld (Posicion_actual),hl
 302+ 952A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 952B C9           	ret
 304+ 952C
 305+ 952C              ; --------------------
 306+ 952C
 307+ 952C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 952E CD 97 96     1 call NextScan
 309+ 9531 10 FB            djnz 1B
 310+ 9533 22 C9 88     	ld (Posicion_actual),hl
 311+ 9536 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9537 C9           	ret
 313+ 9538
 314+ 9538              ; --------------------
 315+ 9538              ;
 316+ 9538              ;	22/01/23
 317+ 9538              ;
 318+ 9538              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9538              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9538              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9538
 322+ 9538
 323+ 9538              Modificaccionne
 324+ 9538
 325+ 9538 3A DB 88     	ld a,(Cuad_objeto)
 326+ 953B FE 02        	cp 2
 327+ 953D CC 20 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9540 DC 20 95         call c,Modifica_Pos_actual
 329+ 9543 C8           	ret z
 330+ 9544 CD 2C 95         call Modifica_Pos_actual2
 331+ 9547 C9               ret
 332+ 9548
 333+ 9548              ; *************************************************************************************************************************************************************************************************
 334+ 9548              ;
 335+ 9548              ;	13/8/22
 336+ 9548              ;
 337+ 9548              ;	Inicializacion
 338+ 9548              ;
 339+ 9548              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9548              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9548              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9548              ;
 343+ 9548              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9548              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9548              ;	_ desaparece/aparece.
 346+ 9548
 347+ 9548              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9548              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9548              ;
 350+ 9548              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9548              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9548              ; 		   [E] ="0"
 353+ 9548
 354+ 9548              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9548
 356+ 9548 CD AA 99     Inicializacion call calcula_tercio
 357+ 954B 28 36        	jr z,primit
 358+ 954D E6 02        	and 2
 359+ 954F 20 07        	jr nz,segmit
 360+ 9551 7D           	ld a,l
 361+ 9552 FE 7F        	cp $7f
 362+ 9554 38 2D        	jr c,primit
 363+ 9556 28 2B        	jr z,primit
 364+ 9558 CD B5 95     segmit call column
 365+ 955B 38 13        	jr c,tercuad
 366+ 955D 3E 04        cuarcuad ld a,4
 367+ 955F 32 DB 88     	ld (Cuad_objeto),a
 368+ 9562 21 20 48     	ld hl,$4820
 369+ 9565 22 FF 88     	ld (Limite_horizontal),hl
 370+ 9568 21 01 89     	ld hl,Limite_vertical
 371+ 956B 36 0D        	ld (hl),$0d
 372+ 956D 08           	ex af,af
 373+ 956E 18 3C        	jr 1F
 374+ 9570              tercuad
 375+ 9570 3E 03        	ld a,3
 376+ 9572 32 DB 88     	ld (Cuad_objeto),a
 377+ 9575 21 20 48     	ld hl,$4820
 378+ 9578 22 FF 88     	ld (Limite_horizontal),hl
 379+ 957B 21 01 89     	ld hl,Limite_vertical
 380+ 957E 36 12        	ld (hl),$12
 381+ 9580 08           	ex af,af
 382+ 9581 18 29        	jr 1F
 383+ 9583 CD B5 95     primit call column
 384+ 9586 38 13        	jr c, primcuad
 385+ 9588              segcuad
 386+ 9588 3E 02        	ld a,2
 387+ 958A 32 DB 88     	ld (Cuad_objeto),a
 388+ 958D 21 C0 4F     	ld hl,$4fc0
 389+ 9590 22 FF 88     	ld (Limite_horizontal),hl
 390+ 9593 21 01 89     	ld hl,Limite_vertical
 391+ 9596 36 0D        	ld (hl),$0d
 392+ 9598 08           	ex af,af
 393+ 9599 18 11        	jr 1F
 394+ 959B              primcuad
 395+ 959B 3E 01        	ld a,1
 396+ 959D 32 DB 88     	ld (Cuad_objeto),a
 397+ 95A0 21 C0 4F     	ld hl,$4fc0
 398+ 95A3 22 FF 88     	ld (Limite_horizontal),hl
 399+ 95A6 21 01 89     	ld hl,Limite_vertical
 400+ 95A9 36 12        	ld (hl),$12
 401+ 95AB 08           	ex af,af
 402+ 95AC CD 35 9D     1 call Genera_coordenadas
 403+ 95AF 21 F1 88     	ld hl,Ctrl_0
 404+ 95B2 CB EE        	set 5,(hl)
 405+ 95B4 C9           	ret
 406+ 95B5
 407+ 95B5              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95B5
 409+ 95B5              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95B5              ;
 411+ 95B5              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95B5
 413+ 95B5 7D           column ld a,l
 414+ 95B6 E6 1F        	and $1f
 415+ 95B8 FE 10         	cp $10
 416+ 95BA C9            	ret
 417+ 95BB
 418+ 95BB              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95BB              ;
 420+ 95BB              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95BB              ;
 422+ 95BB              ; 14/12/22
 423+ 95BB              ;
 424+ 95BB              ;	Modifica: A y BC.
 425+ 95BB
 426+ 95BB 3A DB 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95BE E6 01        	and 1
 428+ 95C0 28 17        	jr z,1F
 429+ 95C2
 430+ 95C2              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95C2
 432+ 95C2 3A CD 88     	ld a,(Coordenada_X)
 433+ 95C5 47           	ld b,a
 434+ 95C6 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95C7 79           	ld a,c
 436+ 95C8 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95C9 38 08        	jr c,2F
 438+ 95CB 47           	ld b,a
 439+ 95CC 79           	ld a,c
 440+ 95CD 90           	sub b
 441+ 95CE 32 FE 88     	ld (Columnas),a
 442+ 95D1 18 1B        	jr 4F
 443+ 95D3 79           2 ld a,c
 444+ 95D4 32 FE 88     	ld (Columnas),a
 445+ 95D7 18 15        	jr 4F
 446+ 95D9
 447+ 95D9              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95D9
 449+ 95D9 3A CD 88     1 ld a,(Coordenada_X)
 450+ 95DC 81           	add c
 451+ 95DD 3D           	dec a
 452+ 95DE D6 1F        	sub $1f
 453+ 95E0 38 08        	jr c,3F
 454+ 95E2 47           	ld b,a
 455+ 95E3 79           	ld a,c
 456+ 95E4 90           	sub b
 457+ 95E5 32 FE 88     	ld (Columnas),a
 458+ 95E8 18 04        	jr 4F
 459+ 95EA 79           3 ld a,c
 460+ 95EB 32 FE 88     	ld (Columnas),a
 461+ 95EE D9           4 exx
 462+ 95EF 4F           	ld c,a
 463+ 95F0 D9           	exx
 464+ 95F1 C9            ret
 465+ 95F2
 466+ 95F2              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95F2              ;
 468+ 95F2              ;   19/7/23
 469+ 95F2              ;
 470+ 95F2              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95F2              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95F2              ;
 473+ 95F2              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95F2              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95F2              ;
 476+ 95F2              ;	DESTRUYE: HL,B Y A.
 477+ 95F2
 478+ 95F2 3A DB 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95F5 FE 02        	cp 2
 480+ 95F7 38 18        	jr c,1F
 481+ 95F9 28 16        	jr z,1F
 482+ 95FB E6 01        	and 1
 483+ 95FD 28 0D        	jr z,3F
 484+ 95FF
 485+ 95FF              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95FF
 487+ 95FF CD 45 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9602
 489+ 9602 7D           9 ld a,l
 490+ 9603 E6 1F        	and $1f
 491+ 9605 28 2A        	jr z,7F
 492+ 9607 2B           	dec hl
 493+ 9608 10 F8        	djnz 9B
 494+ 960A 18 25        	jr 7F
 495+ 960C
 496+ 960C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 960C
 498+ 960C 2A C9 88     3 ld hl,(Posicion_actual)
 499+ 960F 18 20        	jr 7F
 500+ 9611
 501+ 9611 28 14        1 jr z,2F
 502+ 9613
 503+ 9613              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9613
 505+ 9613 CD 45 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9616
 507+ 9616 7D           4 ld a,l
 508+ 9617 E6 1F        	and $1f
 509+ 9619 28 03        	jr z,6F
 510+ 961B 2B           	dec hl
 511+ 961C 10 F8        	djnz 4B
 512+ 961E 06 0F        6 ld b,15
 513+ 9620 CD A6 96     5 call PreviousScan
 514+ 9623 10 FB        	djnz 5B
 515+ 9625 18 0A        	jr 7F
 516+ 9627
 517+ 9627              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9627
 519+ 9627 CD 45 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 962A 06 0F        	ld b,15
 521+ 962C CD A6 96     8 call PreviousScan
 522+ 962F 10 FB        	djnz 8B
 523+ 9631
 524+ 9631 E5           7 push hl
 525+ 9632 DD E1        	pop ix
 526+ 9634
 527+ 9634 2A CB 88     	ld hl,(Puntero_objeto)
 528+ 9637 E5           	push hl
 529+ 9638 FD E1        	pop iy
 530+ 963A
 531+ 963A              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 963A
 533+ 963A 3A F1 88     	ld a,(Ctrl_0)
 534+ 963D CB 77        	bit 6,a
 535+ 963F C8           	ret z
 536+ 9640
 537+ 9640              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9640              ; _ entidad / Amadeus´.
 539+ 9640
 540+ 9640 DD 22 5D 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9644
 542+ 9644 C9           	ret
 543+ 9645
 544+ 9645              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9645              ;
 546+ 9645              ;	2/1/23
 547+ 9645              ;
 548+ 9645              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9645              ;
 550+ 9645              ;	Tras esta rutina tenemos:
 551+ 9645              ;
 552+ 9645              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9645              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9645              ;
 555+ 9645              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9645
 557+ 9645 2A C9 88     Operandos ld hl,(Posicion_actual)
 558+ 9648 3A FE 88     	ld a,(Columnas)
 559+ 964B 3D           	dec a
 560+ 964C 20 01        	jr nz,1F
 561+ 964E 3C           	inc a
 562+ 964F 47           1 ld b,a
 563+ 9650 C9           	ret
 564+ 9651
 565+ 9651              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9651              ;
 567+ 9651              ;	3/1/23
 568+ 9651              ;
 569+ 9651              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9651              ;
 571+ 9651              ;	Destruye: A,B,HL y DE.
 572+ 9651
 573+ 9651              Define_rutina_de_impresion
 574+ 9651
 575+ 9651 3A C8 88     	ld a,(Columns)
 576+ 9654 47           	ld b,a
 577+ 9655 3A FE 88     	ld a,(Columnas)
 578+ 9658 B8           	cp b
 579+ 9659 20 0D        	jr nz,2f
 580+ 965B
 581+ 965B              ;	La entidad se imprime entera.
 582+ 965B
 583+ 965B 21 7A 97     	ld hl, Indice_entidades_completas
 584+ 965E E6 01        	and 1
 585+ 9660 28 02        	jr z,1F
 586+ 9662
 587+ 9662 23           	inc hl
 588+ 9663 23           	inc hl
 589+ 9664
 590+ 9664 CD 1C 8D     1 call Extrae_address
 591+ 9667 C9           	ret		;	ret
 592+ 9668
 593+ 9668              ;	La entidad no se imprime entera en pantalla.
 594+ 9668
 595+ 9668 3A DB 88     2 ld a,(Cuad_objeto)
 596+ 966B E6 01        	and 1
 597+ 966D 28 17        	jr z,3F
 598+ 966F
 599+ 966F              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 966F
 601+ 966F 21 7E 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9672 3A C8 88     4 ld a,(Columns)
 603+ 9675 E6 01        	and 1
 604+ 9677 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9679
 606+ 9679 23           	inc hl
 607+ 967A 23           	inc hl
 608+ 967B
 609+ 967B 3A FE 88     	ld a,(Columnas)
 610+ 967E E6 01        	and 1
 611+ 9680 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9682
 613+ 9682 23           	inc hl
 614+ 9683 23           	inc hl
 615+ 9684
 616+ 9684 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9686
 618+ 9686 21 84 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9689 18 E7        	jr 4B
 620+ 968B
 621+ 968B              ; --------------------------------------------------------------------------------------------------------------------
 622+ 968B              ;
 623+ 968B              ;	Prepara_draw
 624+ 968B              ;
 625+ 968B              ;	Es una rutina de carga.
 626+ 968B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 968B              ;
 628+ 968B              ;	FUNCIONAMIENTO:
 629+ 968B              ;
 630+ 968B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 968B              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 968B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 968B              ;
 634+ 968B              ;	DESTRUYE:
 635+ 968B              ;
 636+ 968B              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 968B
 638+ 968B 21 C7 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 968E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 968F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9690 4E           	ld c,(hl)
 642+ 9691 2A C9 88     	ld hl,(Posicion_actual)
 643+ 9694 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9696 C9           	ret
 645+ 9697
 646+ 9697              ;----------------------------------------------------------------------------------------------------------------
 647+ 9697              ;
 648+ 9697              ;	5/08/22
 649+ 9697              ;
 650+ 9697              ;   NextScan.
 651+ 9697              ;
 652+ 9697              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9697              ;
 654+ 9697              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9697              ;
 656+ 9697              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9697              ;
 658+ 9697              ;       DESTRUIDOS: AF y HL !!!
 659+ 9697              ;
 660+ 9697              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9697              ;
 662+ 9697
 663+ 9697 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9698 7C               ld a,h
 665+ 9699 E6 07            and 7
 666+ 969B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 969C
 668+ 969C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 969D C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 969F 6F               ld l,a
 671+ 96A0 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96A1
 673+ 96A1 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96A2 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96A4 67               ld h,a
 676+ 96A5 C9               ret
 677+ 96A6
 678+ 96A6              ;----------------------------------------------------------------------------------------------------------------
 679+ 96A6              ;
 680+ 96A6              ;	5/08/22
 681+ 96A6              ;
 682+ 96A6              ;   PreviousScan.
 683+ 96A6              ;
 684+ 96A6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96A6              ;
 686+ 96A6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96A6              ;
 688+ 96A6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96A6              ;
 690+ 96A6              ;       DESTRUIDOS: AF y HL !!!
 691+ 96A6              ;
 692+ 96A6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96A6              ;
 694+ 96A6
 695+ 96A6 7C           PreviousScan ld a,h
 696+ 96A7 25               dec h               ; Dec H.
 697+ 96A8 E6 07            and 7
 698+ 96AA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96AB
 700+ 96AB 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96AC D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96AE 6F               ld l,a
 703+ 96AF D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96B0
 705+ 96B0 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96B1 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96B3 67               ld h,a
 708+ 96B4 C9               ret
 709+ 96B5
 710+ 96B5              ; -----------------------------------------------------------------------------------
 711+ 96B5              ;
 712+ 96B5              ;	31/7/23
 713+ 96B5              ;
 714+ 96B5              ;	Rutina principal de pintado de entidades.
 715+ 96B5              ;	Extrae la foto del frame, (entidades).
 716+ 96B5
 717+ 96B5              Extrae_foto_entidades
 718+ 96B5
 719+ 96B5 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96B8 7E           	ld a,(hl)
 721+ 96B9 A7           	and a
 722+ 96BA C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96BB
 724+ 96BB              ;	No hay datos, (entidades para pintar en este frame).
 725+ 96BB
 726+ 96BB 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 96BE A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 96BF C8           	ret z
 729+ 96C0
 730+ 96C0              ; -----------------------------------
 731+ 96C0
 732+ 96C0 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 96C4 31 00 70     	ld sp,Album_de_fotos
 734+ 96C7
 735+ 96C7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 96C9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 96CA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 96CB
 739+ 96CB ED 73 17 89  	ld (Stack_2),sp
 740+ 96CF ED 7B 15 89  	ld sp,(Stack)
 741+ 96D3
 742+ 96D3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 96D3
 744+ 96D3 3E CD        	ld a,$cd
 745+ 96D5 32 DD 96     	ld (Imprime),a
 746+ 96D8 EB           	ex de,hl
 747+ 96D9 22 DE 96     	ld (Imprime+1),hl
 748+ 96DC EB           	ex de,hl
 749+ 96DD
 750+ 96DD              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 96DD
 752+ 96DD 00 00 00     Imprime db 0,0,0
 753+ 96E0
 754+ 96E0 ED 73 15 89  	ld (Stack),sp
 755+ 96E4
 756+ 96E4 3A 10 89     	ld a,(Numero_de_malotes)
 757+ 96E7 3D           	dec a
 758+ 96E8 28 09        	jr z,1F
 759+ 96EA 32 10 89      	ld (Numero_de_malotes),a
 760+ 96ED
 761+ 96ED ED 7B 17 89  	ld sp,(Stack_2)
 762+ 96F1 18 D4        	jr 2B
 763+ 96F3
 764+ 96F3 AF           1 xor a
 765+ 96F4 32 17 89     	ld (Stack_2),a
 766+ 96F7
 767+ 96F7 C9           	ret
 768+ 96F8
 769+ 96F8              ; -----------------------------------------------------------------------------------
 770+ 96F8              ;
 771+ 96F8              ;	28/2/23
 772+ 96F8              ;
 773+ 96F8              ;	Pinta los disparos generados.
 774+ 96F8
 775+ 96F8              Extrae_foto_disparos
 776+ 96F8
 777+ 96F8 21 59 71     	ld hl,Album_de_fotos_disparos+1
 778+ 96FB 7E               ld a,(hl)
 779+ 96FC A7               and a
 780+ 96FD C8               ret z
 781+ 96FE
 782+ 96FE 3A 4D 89     	ld a,(Numero_de_disparotes)
 783+ 9701 A7           	and a
 784+ 9702 C8           	ret z
 785+ 9703 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9707 31 58 71     	ld sp,Album_de_fotos_disparos
 787+ 970A
 788+ 970A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 970C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 970D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 970E
 792+ 970E ED 73 17 89  	ld (Stack_2),sp
 793+ 9712 ED 7B 15 89  	ld sp,(Stack)
 794+ 9716
 795+ 9716              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 9716
 797+ 9716 3E CD        	ld a,$cd
 798+ 9718 32 20 97     	ld (Imprime2),a
 799+ 971B EB           	ex de,hl
 800+ 971C 22 21 97     	ld (Imprime2+1),hl
 801+ 971F EB           	ex de,hl
 802+ 9720
 803+ 9720              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 9720
 805+ 9720 00 00 00     Imprime2 db 0,0,0
 806+ 9723
 807+ 9723 3A 4D 89     	ld a,(Numero_de_disparotes)
 808+ 9726 3D           	dec a
 809+ 9727 28 09        	jr z,1F
 810+ 9729 32 4D 89      	ld (Numero_de_disparotes),a
 811+ 972C
 812+ 972C ED 7B 17 89  	ld sp,(Stack_2)
 813+ 9730 18 D8        	jr 2B
 814+ 9732
 815+ 9732 AF           1 xor a
 816+ 9733 32 17 89     	ld (Stack_2),a
 817+ 9736 C9           	ret
 818+ 9737
 819+ 9737              ; -----------------------------------------------------------------------------------
 820+ 9737              ;
 821+ 9737              ;	4/9/23
 822+ 9737              ;
 823+ 9737              ;	Rutina principal de pintado de Amadeus.
 824+ 9737              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 9737
 826+ 9737 21 B0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 973A 7E           	ld a,(hl)
 828+ 973B A7           	and a
 829+ 973C C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 973D
 831+ 973D 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 9740 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 9741 C8           	ret z
 834+ 9742
 835+ 9742              ; -----------------------------------
 836+ 9742
 837+ 9742 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9746 31 B0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 9749
 840+ 9749 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 974B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 974C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 974D
 844+ 974D ED 73 17 89  	ld (Stack_2),sp
 845+ 9751 ED 7B 15 89  	ld sp,(Stack)
 846+ 9755
 847+ 9755              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9755
 849+ 9755 3E CD        	ld a,$cd
 850+ 9757 32 5F 97     	ld (Imprime_Amadeus),a
 851+ 975A EB           	ex de,hl
 852+ 975B 22 60 97     	ld (Imprime_Amadeus+1),hl
 853+ 975E EB           	ex de,hl
 854+ 975F
 855+ 975F              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 975F
 857+ 975F 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9762
 859+ 9762 ED 73 15 89  	ld (Stack),sp
 860+ 9766
 861+ 9766 3A 10 89     	ld a,(Numero_de_malotes)
 862+ 9769 3D           	dec a
 863+ 976A 28 09        	jr z,1F
 864+ 976C 32 10 89      	ld (Numero_de_malotes),a
 865+ 976F
 866+ 976F ED 7B 17 89  	ld sp,(Stack_2)
 867+ 9773 18 D4        	jr 2B
 868+ 9775
 869+ 9775 AF           1 xor a
 870+ 9776 32 17 89     	ld (Stack_2),a
 871+ 9779
 872+ 9779 C9           	ret
# file closed: Draw_XOR.asm
1790  977A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 977A              ;   índices de Rutinas de impresión.
   2+ 977A
   3+ 977A 8A 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 977C B7 97            defw Pinta_Amadeus_3x2
   5+ 977E
   6+ 977E 0D 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9780 AD 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9782 61 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9784
  10+ 9784 37 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9786 3B 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9788 EF 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 978A
  14+ 978A
  15+ 978A              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 978A              ;
  17+ 978A              ;   12/12/22
  18+ 978A              ;
  19+ 978A              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 978A              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 978A              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 978A              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 978A              ;
  24+ 978A              ;   Modifica: DE y HL.
  25+ 978A
  26+ 978A ED 73 15 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 978E FD F9        	ld sp,iy
  28+ 9790 06 10            ld b,16
  29+ 9792 D1           1 pop de
  30+ 9793 7B               ld a,e
  31+ 9794 AE               xor (hl)
  32+ 9795 77           	ld (hl),a
  33+ 9796 23           	inc hl
  34+ 9797 7A               ld a,d
  35+ 9798 AE               xor (hl)
  36+ 9799 77           	ld (hl),a
  37+ 979A 2B           	dec hl
  38+ 979B 24           	inc h
  39+ 979C 7C               ld a,h
  40+ 979D E6 07            and 7
  41+ 979F 20 0A            jr nz,2F
  42+ 97A1 7D               ld a,l
  43+ 97A2 C6 20            add a,$20
  44+ 97A4 6F               ld l,a
  45+ 97A5 38 04            jr c,2F
  46+ 97A7 7C               ld a,h
  47+ 97A8 D6 08            sub 8
  48+ 97AA 67               ld h,a
  49+ 97AB 7C           2 ld a,h
  50+ 97AC FE 58            cp $58
  51+ 97AE 28 02            jr z,3F
  52+ 97B0 10 E0            djnz 1B
  53+ 97B2 ED 7B 15 89  3 ld sp,(Stack)
  54+ 97B6 C9           	ret
  55+ 97B7
  56+ 97B7 ED 73 15 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97BB FD F9        	ld sp,iy
  58+ 97BD 06 08            ld b,8
  59+ 97BF D1           1 pop de
  60+ 97C0 7B               ld a,e
  61+ 97C1 AE               xor (hl)
  62+ 97C2 77           	ld (hl),a
  63+ 97C3 23           	inc hl
  64+ 97C4 7A               ld a,d
  65+ 97C5 AE               xor (hl)
  66+ 97C6 77           	ld (hl),a
  67+ 97C7 23           	inc hl
  68+ 97C8 D1           	pop de
  69+ 97C9 7B               ld a,e
  70+ 97CA AE               xor (hl)
  71+ 97CB 77           	ld (hl),a
  72+ 97CC 2B           	dec hl
  73+ 97CD 2B           	dec hl
  74+ 97CE 24           	inc h
  75+ 97CF 7C               ld a,h
  76+ 97D0 E6 07            and 7
  77+ 97D2 20 0A            jr nz,2F
  78+ 97D4 7D               ld a,l
  79+ 97D5 C6 20            add a,$20
  80+ 97D7 6F               ld l,a
  81+ 97D8 38 04            jr c,2F
  82+ 97DA 7C               ld a,h
  83+ 97DB D6 08            sub 8
  84+ 97DD 67               ld h,a
  85+ 97DE 7C           2 ld a,h
  86+ 97DF FE 58            cp $58
  87+ 97E1 28 25            jr z,4F
  88+ 97E3 7A               ld a,d
  89+ 97E4 AE               xor (hl)
  90+ 97E5 77               ld (hl),a
  91+ 97E6 D1           	pop de
  92+ 97E7 23           	inc hl
  93+ 97E8 7B               ld a,e
  94+ 97E9 AE               xor (hl)
  95+ 97EA 77           	ld (hl),a
  96+ 97EB 23           	inc hl
  97+ 97EC 7A               ld a,d
  98+ 97ED AE               xor (hl)
  99+ 97EE 77           	ld (hl),a
 100+ 97EF 2B           	dec hl
 101+ 97F0 2B           	dec hl
 102+ 97F1 24           	inc h
 103+ 97F2 7C               ld a,h
 104+ 97F3 E6 07            and 7
 105+ 97F5 20 0A            jr nz,3F
 106+ 97F7 7D               ld a,l
 107+ 97F8 C6 20            add a,$20
 108+ 97FA 6F               ld l,a
 109+ 97FB 38 04            jr c,3F
 110+ 97FD 7C               ld a,h
 111+ 97FE D6 08            sub 8
 112+ 9800 67               ld h,a
 113+ 9801 7C           3 ld a,h
 114+ 9802 FE 58            cp $58
 115+ 9804 28 02            jr z,4F
 116+ 9806 10 B7            djnz 1B
 117+ 9808 ED 7B 15 89  4 ld sp,(Stack)
 118+ 980C C9           	ret
 119+ 980D
 120+ 980D              ; ---------------------------------------------------
 121+ 980D
 122+ 980D ED 73 15 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9811 FD F9        	ld sp,iy
 124+ 9813
 125+ 9813              ; >>>
 126+ 9813
 127+ 9813 06 10            ld b,16
 128+ 9815 D1           1 pop de
 129+ 9816 7A           	ld a,d
 130+ 9817 AE           	xor (hl)
 131+ 9818 77           	ld (hl),a
 132+ 9819 24           	inc h
 133+ 981A 7C               ld a,h
 134+ 981B E6 07            and 7
 135+ 981D 20 0C            jr nz,2F
 136+ 981F 7D               ld a,l
 137+ 9820 C6 20            add a,$20
 138+ 9822 6F               ld l,a
 139+ 9823 38 06            jr c,2F
 140+ 9825 7C               ld a,h
 141+ 9826 D6 08            sub 8
 142+ 9828 67               ld h,a
 143+ 9829 18 00            jr 2F
 144+ 982B 7C           2 ld a,h
 145+ 982C FE 58            cp $58
 146+ 982E 28 02            jr z,3F
 147+ 9830 10 E3            djnz 1B
 148+ 9832 ED 7B 15 89  3 ld sp,(Stack)
 149+ 9836 C9           	ret
 150+ 9837
 151+ 9837 ED 73 15 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 983B FD F9        	ld sp,iy
 153+ 983D
 154+ 983D              ; >>>
 155+ 983D
 156+ 983D 06 10            ld b,16
 157+ 983F D1           1 pop de
 158+ 9840 7B           	ld a,e
 159+ 9841 AE           	xor (hl)
 160+ 9842 77           	ld (hl),a
 161+ 9843 24           	inc h
 162+ 9844 7C               ld a,h
 163+ 9845 E6 07            and 7
 164+ 9847 20 0C            jr nz,2F
 165+ 9849 7D               ld a,l
 166+ 984A C6 20            add a,$20
 167+ 984C 6F               ld l,a
 168+ 984D 38 06            jr c,2F
 169+ 984F 7C               ld a,h
 170+ 9850 D6 08            sub 8
 171+ 9852 67               ld h,a
 172+ 9853 18 00            jr 2F
 173+ 9855 7C           2 ld a,h
 174+ 9856 FE 58            cp $58
 175+ 9858 28 02            jr z,3F
 176+ 985A 10 E3            djnz 1B
 177+ 985C ED 7B 15 89  3 ld sp,(Stack)
 178+ 9860 C9           	ret
 179+ 9861
 180+ 9861              ; ---------------------------------------------------
 181+ 9861
 182+ 9861 ED 73 15 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9865 FD F9        	ld sp,iy
 184+ 9867 06 08            ld b,8
 185+ 9869 D1           1 pop de
 186+ 986A 7A           	ld a,d
 187+ 986B AE           	xor (hl)
 188+ 986C 77           	ld (hl),a
 189+ 986D 23           	inc hl
 190+ 986E D1           	pop de
 191+ 986F 7B           	ld a,e
 192+ 9870 AE           	xor (hl)
 193+ 9871 77           	ld (hl),a
 194+ 9872 2B           	dec hl
 195+ 9873 24            	inc h
 196+ 9874 7C               ld a,h
 197+ 9875 E6 07            and 7
 198+ 9877 20 0A            jr nz,2F
 199+ 9879 7D               ld a,l
 200+ 987A C6 20            add a,$20
 201+ 987C 6F               ld l,a
 202+ 987D 38 04            jr c,2F
 203+ 987F 7C               ld a,h
 204+ 9880 D6 08            sub 8
 205+ 9882 67               ld h,a
 206+ 9883 7C           2 ld a,h
 207+ 9884 FE 58            cp $58
 208+ 9886 28 20            jr z,4F
 209+ 9888 D1               pop de
 210+ 9889 7B           	ld a,e
 211+ 988A AE           	xor (hl)
 212+ 988B 77           	ld (hl),a
 213+ 988C 23           	inc hl
 214+ 988D 7A           	ld a,d
 215+ 988E AE           	xor (hl)
 216+ 988F 77           	ld (hl),a
 217+ 9890 2B           	dec hl
 218+ 9891 24           	inc h
 219+ 9892 7C               ld a,h
 220+ 9893 E6 07            and 7
 221+ 9895 20 0A            jr nz,3F
 222+ 9897 7D               ld a,l
 223+ 9898 C6 20            add a,$20
 224+ 989A 6F               ld l,a
 225+ 989B 38 04            jr c,3F
 226+ 989D 7C               ld a,h
 227+ 989E D6 08            sub 8
 228+ 98A0 67               ld h,a
 229+ 98A1 7C           3 ld a,h
 230+ 98A2 FE 58            cp $58
 231+ 98A4 28 02            jr z,4F
 232+ 98A6 10 C1            djnz 1B
 233+ 98A8 ED 7B 15 89  4 ld sp,(Stack)
 234+ 98AC C9           	ret
 235+ 98AD
 236+ 98AD ED 73 15 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98B1 FD F9        	ld sp,iy
 238+ 98B3 06 08            ld b,8
 239+ 98B5 D1           1 pop de
 240+ 98B6 D1           	pop de
 241+ 98B7 7B           	ld a,e
 242+ 98B8 AE           	xor (hl)
 243+ 98B9 77           	ld (hl),a
 244+ 98BA 24            	inc h
 245+ 98BB 7C               ld a,h
 246+ 98BC E6 07            and 7
 247+ 98BE 20 0A            jr nz,2F
 248+ 98C0 7D               ld a,l
 249+ 98C1 C6 20            add a,$20
 250+ 98C3 6F               ld l,a
 251+ 98C4 38 04            jr c,2F
 252+ 98C6 7C               ld a,h
 253+ 98C7 D6 08            sub 8
 254+ 98C9 67               ld h,a
 255+ 98CA 7C           2 ld a,h
 256+ 98CB FE 58            cp $58
 257+ 98CD 28 1B            jr z,4F
 258+ 98CF D1               pop de
 259+ 98D0 7A           	ld a,d
 260+ 98D1 AE           	xor (hl)
 261+ 98D2 77           	ld (hl),a
 262+ 98D3 24           	inc h
 263+ 98D4 7C               ld a,h
 264+ 98D5 E6 07            and 7
 265+ 98D7 20 0A            jr nz,3F
 266+ 98D9 7D               ld a,l
 267+ 98DA C6 20            add a,$20
 268+ 98DC 6F               ld l,a
 269+ 98DD 38 04            jr c,3F
 270+ 98DF 7C               ld a,h
 271+ 98E0 D6 08            sub 8
 272+ 98E2 67               ld h,a
 273+ 98E3 7C           3 ld a,h
 274+ 98E4 FE 58            cp $58
 275+ 98E6 28 02            jr z,4F
 276+ 98E8 10 CB            djnz 1B
 277+ 98EA ED 7B 15 89  4 ld sp,(Stack)
 278+ 98EE C9           	ret
 279+ 98EF
 280+ 98EF ED 73 15 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98F3 FD F9        	ld sp,iy
 282+ 98F5 06 08            ld b,8
 283+ 98F7 D1           1 pop de
 284+ 98F8 7B           	ld a,e
 285+ 98F9 AE           	xor (hl)
 286+ 98FA 77           	ld (hl),a
 287+ 98FB 23           	inc hl
 288+ 98FC 7A           	ld a,d
 289+ 98FD AE           	xor (hl)
 290+ 98FE 77           	ld (hl),a
 291+ 98FF 2B           	dec hl
 292+ 9900 24             	inc h
 293+ 9901 7C               ld a,h
 294+ 9902 E6 07            and 7
 295+ 9904 20 0A            jr nz,2F
 296+ 9906 7D               ld a,l
 297+ 9907 C6 20            add a,$20
 298+ 9909 6F               ld l,a
 299+ 990A 38 04            jr c,2F
 300+ 990C 7C               ld a,h
 301+ 990D D6 08            sub 8
 302+ 990F 67               ld h,a
 303+ 9910 7C           2 ld a,h
 304+ 9911 FE 58            cp $58
 305+ 9913 28 21            jr z,4F
 306+ 9915 D1               pop de
 307+ 9916 7A           	ld a,d
 308+ 9917 AE           	xor (hl)
 309+ 9918 77           	ld (hl),a
 310+ 9919 23           	inc hl
 311+ 991A D1               pop de
 312+ 991B 7B           	ld a,e
 313+ 991C AE           	xor (hl)
 314+ 991D 77           	ld (hl),a
 315+ 991E 2B           	dec hl
 316+ 991F 24           	inc h
 317+ 9920 7C               ld a,h
 318+ 9921 E6 07            and 7
 319+ 9923 20 0A            jr nz,3F
 320+ 9925 7D               ld a,l
 321+ 9926 C6 20            add a,$20
 322+ 9928 6F               ld l,a
 323+ 9929 38 04            jr c,3F
 324+ 992B 7C               ld a,h
 325+ 992C D6 08            sub 8
 326+ 992E 67               ld h,a
 327+ 992F 7C           3 ld a,h
 328+ 9930 FE 58            cp $58
 329+ 9932 28 02            jr z,4F
 330+ 9934 10 C1            djnz 1B
 331+ 9936 ED 7B 15 89  4 ld sp,(Stack)
 332+ 993A C9           	ret
 333+ 993B
 334+ 993B ED 73 15 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 993F FD F9        	ld sp,iy
 336+ 9941 06 08            ld b,8
 337+ 9943 D1           1 pop de
 338+ 9944 7B           	ld a,e
 339+ 9945 AE           	xor (hl)
 340+ 9946 77           	ld (hl),a
 341+ 9947 24            	inc h
 342+ 9948 7C               ld a,h
 343+ 9949 E6 07            and 7
 344+ 994B 20 0A            jr nz,2F
 345+ 994D 7D               ld a,l
 346+ 994E C6 20            add a,$20
 347+ 9950 6F               ld l,a
 348+ 9951 38 04            jr c,2F
 349+ 9953 7C               ld a,h
 350+ 9954 D6 08            sub 8
 351+ 9956 67               ld h,a
 352+ 9957 7C           2 ld a,h
 353+ 9958 FE 58            cp $58
 354+ 995A 28 1C            jr z,4F
 355+ 995C D1               pop de
 356+ 995D 7A           	ld a,d
 357+ 995E AE           	xor (hl)
 358+ 995F 77           	ld (hl),a
 359+ 9960 24           	inc h
 360+ 9961 7C               ld a,h
 361+ 9962 E6 07            and 7
 362+ 9964 20 0A            jr nz,3F
 363+ 9966 7D               ld a,l
 364+ 9967 C6 20            add a,$20
 365+ 9969 6F               ld l,a
 366+ 996A 38 04            jr c,3F
 367+ 996C 7C               ld a,h
 368+ 996D D6 08            sub 8
 369+ 996F 67               ld h,a
 370+ 9970 7C           3 ld a,h
 371+ 9971 FE 58            cp $58
 372+ 9973 28 03            jr z,4F
 373+ 9975 D1               pop de
 374+ 9976 10 CB            djnz 1B
 375+ 9978 ED 7B 15 89  4 ld sp,(Stack)
 376+ 997C C9           	ret
 377+ 997D
 378+ 997D              ; ---------------------------------------------------
 379+ 997D              ;
 380+ 997D              ;   27/02/23
 381+ 997D              ;
 382+ 997D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 997D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 997D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 997D
 386+ 997D ED 73 15 89  Pinta_Disparo ld (Stack),sp
 387+ 9981 FD F9            ld sp,iy
 388+ 9983 06 03            ld b,3
 389+ 9985 D1           1 pop de
 390+ 9986 7B               ld a,e
 391+ 9987 AE               xor (hl)
 392+ 9988 77               ld (hl),a
 393+ 9989 23               inc hl
 394+ 998A 7A               ld a,d
 395+ 998B AE               xor (hl)
 396+ 998C 77               ld (hl),a
 397+ 998D 2B               dec hl
 398+ 998E
 399+ 998E 24               inc h
 400+ 998F 7C               ld a,h
 401+ 9990 E6 07            and 7
 402+ 9992 20 0A            jr nz,2F
 403+ 9994 7D               ld a,l
 404+ 9995 C6 20            add a,$20
 405+ 9997 6F               ld l,a
 406+ 9998 38 04            jr c,2F
 407+ 999A 7C               ld a,h
 408+ 999B D6 08            sub 8
 409+ 999D 67               ld h,a
 410+ 999E 7C           2 ld a,h
 411+ 999F FE 58            cp $58
 412+ 99A1 28 02            jr z,3F
 413+ 99A3
 414+ 99A3 10 E0            djnz 1B
 415+ 99A5 ED 7B 15 89  3 ld sp,(Stack)
 416+ 99A9 C9               ret
 417+ 99AA
# file closed: Rutinas_de_impresion_sprites.asm
1791  99AA              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99AA              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99AA              ;
   3+ 99AA              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99AA              ;
   5+ 99AA              ; *****************************************************************************************************************************************************************************************
   6+ 99AA              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99AA
   8+ 99AA 7C           calcula_tercio ld a,h
   9+ 99AB E6 18        	and $18
  10+ 99AD CB 2F        	sra a
  11+ 99AF CB 2F        	sra a
  12+ 99B1 CB 2F        	sra a
  13+ 99B3 C9           	ret
  14+ 99B4
# file closed: calcula_tercio.asm
1792  99B4              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99B4              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99B4              ;
   3+ 99B4              ;
   4+ 99B4              ;	CLS.
   5+ 99B4              ;
   6+ 99B4              ;	Limpia la pantalla y define sus atributos.
   7+ 99B4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99B4              ;
   9+ 99B4              ;	COLORES: 0 ..... NEGRO
  10+ 99B4              ;    		 1 ..... AZUL
  11+ 99B4              ; 			 2 ..... ROJO
  12+ 99B4              ;			 3 ..... MAGENTA
  13+ 99B4              ; 			 4 ..... VERDE
  14+ 99B4              ; 			 5 ..... CIAN
  15+ 99B4              ;			 6 ..... AMARILLO
  16+ 99B4              ; 			 7 ..... BLANCO
  17+ 99B4              ;
  18+ 99B4              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99B4              ;
  20+ 99B4              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99B4
  22+ 99B4
  23+ 99B4 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99B7 11 01 40     	LD DE,$4001
  25+ 99BA 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99BD 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99BF ED B0        	LDIR
  28+ 99C1 01 FF 02     	LD BC,767
  29+ 99C4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99C5 ED B0        	LDIR
  31+ 99C7 C9           	ret
  32+ 99C8
# file closed: Cls.asm
1793  99C8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99C8              ; ******************************************************************************************************************************************************************************************
   2+ 99C8              ;
   3+ 99C8              ;   20/05/23
   4+ 99C8              ;
   5+ 99C8              ;	Recompone_posicion_inicio
   6+ 99C8              ;
   7+ 99C8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99C8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99C8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99C8              ;	_ a una u otra rutina.
  11+ 99C8
  12+ 99C8              Recompone_posicion_inicio
  13+ 99C8
  14+ 99C8 2A D9 88     	ld hl,(Posicion_inicio)
  15+ 99CB 7D           	ld a,l
  16+ 99CC E6 1F        	and $1f
  17+ 99CE 28 16        	jr z,1F
  18+ 99D0
  19+ 99D0 FE 1F        	cp $1f
  20+ 99D2 28 0D        	jr z,3F
  21+ 99D4
  22+ 99D4 21 02 89     	ld hl,Ctrl_2
  23+ 99D7 CB C6        	set 0,(hl)
  24+ 99D9 2A CB 88     	ld hl,(Puntero_objeto)
  25+ 99DC 22 05 89     	ld (Repone_puntero_objeto),hl
  26+ 99DF 18 08        	jr 2F
  27+ 99E1
  28+ 99E1 CD 82 9B     3 call Mov_left
  29+ 99E4 18 03        	jr 2F
  30+ 99E6
  31+ 99E6 CD 64 9A     1 call Mov_right
  32+ 99E9 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99EC 22 CB 88     	ld (Puntero_objeto),hl
  34+ 99EF C9           	ret
  35+ 99F0
  36+ 99F0              ; ******************************************************************************************************************************************************************************************
  37+ 99F0              ;
  38+ 99F0              ;   27/05/23
  39+ 99F0              ;
  40+ 99F0              ;	Mov_down
  41+ 99F0              ;
  42+ 99F0              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99F0              ;
  44+ 99F0              ;
  45+ 99F0              Mov_down
  46+ 99F0
  47+ 99F0 CD 52 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99F3              ;																	; _ repone (Puntero_objeto).
  49+ 99F3 21 F1 88     	ld hl,Ctrl_0
  50+ 99F6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99F8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99F8              ; 																	; _ en el caso de que no lo haya.
  53+ 99F8 3A DF 88     	ld a,(Vel_down)
  54+ 99FB 47           	ld b,a
  55+ 99FC 2A C9 88         ld hl,(Posicion_actual)
  56+ 99FF CD AA 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A02 E6 02        	and 2
  58+ 9A04 28 0F        	jr z,1F
  59+ 9A06
  60+ 9A06              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A06              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A06
  63+ 9A06 7C           	ld a,h
  64+ 9A07 FE 57        	cp $57
  65+ 9A09 20 0A        	jr nz,1F
  66+ 9A0B
  67+ 9A0B 7D           	ld a,l
  68+ 9A0C C6 20        	add $20
  69+ 9A0E 30 05        	jr nc,1F
  70+ 9A10
  71+ 9A10              ; ------------------------------
  72+ 9A10              ;	call Reaparece_arriba
  73+ 9A10 CD 0F 9D     	call Reinicio
  74+ 9A13              ; ------------------------------
  75+ 9A13
  76+ 9A13 18 08        	jr 3F
  77+ 9A15 CD 97 96     1 call NextScan
  78+ 9A18 22 C9 88     	ld (Posicion_actual),hl
  79+ 9A1B 10 E2            djnz 2B
  80+ 9A1D CD 35 9D     3 call Genera_coordenadas
  81+ 9A20 C9           	ret
  82+ 9A21
  83+ 9A21              ; ******************************************************************************************************************************************************************************************
  84+ 9A21              ;
  85+ 9A21              ;   27/05/23
  86+ 9A21              ;
  87+ 9A21              ;	Mov_up
  88+ 9A21              ;
  89+ 9A21              ; 	Mueve el Sprite hacia arriba.
  90+ 9A21              ;
  91+ 9A21              ;
  92+ 9A21              Mov_up
  93+ 9A21
  94+ 9A21 CD 52 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A24              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A24 21 F1 88     	ld hl,Ctrl_0
  97+ 9A27 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A29              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A29              ; 																		; _ en el caso de que no lo haya.
 100+ 9A29 3A DE 88     	ld a,(Vel_up)
 101+ 9A2C 47           	ld b,a
 102+ 9A2D 2A C9 88     	ld hl,(Posicion_actual)
 103+ 9A30 CD AA 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A33 A7           	and a
 105+ 9A34 20 10        	jr nz,1F
 106+ 9A36
 107+ 9A36              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A36              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A36
 110+ 9A36 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A37 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A39 20 0B            jr nz,1F
 113+ 9A3B 7D               ld a,l
 114+ 9A3C D6 20            sub $20
 115+ 9A3E 30 06            jr nc,1F
 116+ 9A40 25               dec h
 117+ 9A41
 118+ 9A41              ; -----------------------------
 119+ 9A41 CD F0 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A44              ;	call Reinicio
 121+ 9A44              ; -----------------------------
 122+ 9A44
 123+ 9A44 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A46 CD A6 96     1 call PreviousScan
 125+ 9A49 22 C9 88     	ld (Posicion_actual),hl
 126+ 9A4C 10 E2            djnz 3B
 127+ 9A4E CD 35 9D     2 call Genera_coordenadas
 128+ 9A51 C9           	ret
 129+ 9A52
 130+ 9A52              ; -----------------------------
 131+ 9A52              ;
 132+ 9A52              ;	27/5/23
 133+ 9A52              ;
 134+ 9A52              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A52              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A52              ;
 137+ 9A52              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A52              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A52              ;
 140+ 9A52              ;	Modifica: A y (Puntero_objeto).
 141+ 9A52
 142+ 9A52 3A 02 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A55 CB 47        	bit 0,a
 144+ 9A57 C8           	ret z
 145+ 9A58 CB 87        	res 0,a
 146+ 9A5A 32 02 89     	ld (Ctrl_2),a
 147+ 9A5D 2A 05 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A60 22 CB 88     	ld (Puntero_objeto),hl
 149+ 9A63 C9           	ret
 150+ 9A64
 151+ 9A64              ; ******************************************************************************************************************************************************************************************
 152+ 9A64              ;
 153+ 9A64              ;	19/10/22
 154+ 9A64              ;
 155+ 9A64              ;	Mov_right.
 156+ 9A64              ;
 157+ 9A64              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A64              ;
 159+ 9A64
 160+ 9A64 21 F1 88     Mov_right ld hl,Ctrl_0
 161+ 9A67 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A69              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A69              ; 																	; _ en el caso de que no lo haya.
 164+ 9A69 3A F1 88     	ld a,(Ctrl_0)
 165+ 9A6C CB 77        	bit 6,a
 166+ 9A6E 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A70
 168+ 9A70 CD 9E 9C     	call Stop_Amadeus_right
 169+ 9A73 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A74 18 4D        	jr 8F
 171+ 9A76
 172+ 9A76 3A CD 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A79 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A7B 20 46        	jr nz,8F
 175+ 9A7D
 176+ 9A7D 3A CF 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A80 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A81 28 40        	jr z,8F
 179+ 9A83
 180+ 9A83              ; ---------- ---------- ----------
 181+ 9A83              ;
 182+ 9A83              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A83
 184+ 9A83 3A DD 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A86 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A88 28 11        	jr z,1F
 187+ 9A8A 38 06        	jr c,6F
 188+ 9A8C FE 04        	cp 4
 189+ 9A8E 28 14        	jr z,7F
 190+ 9A90 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A92
 192+ 9A92              ; ---------- ---------- ----------
 193+ 9A92              ;
 194+ 9A92              ; Perfiles de velocidad
 195+ 9A92              ;
 196+ 9A92
 197+ 9A92 3A CF 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A95 FE FE        	cp $fe
 199+ 9A97 20 2A        	jr nz,8F
 200+ 9A99 18 10        	jr 3F
 201+ 9A9B 3A CF 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A9E FE FD        	cp $fd
 203+ 9AA0 20 21        	jr nz,8F
 204+ 9AA2 18 07        	jr 3F
 205+ 9AA4 3A CF 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AA7 FE FB        	cp $fb
 207+ 9AA9 20 18        	jr nz,8F
 208+ 9AAB
 209+ 9AAB              ; ---------- ---------- ----------
 210+ 9AAB
 211+ 9AAB              3
 212+ 9AAB CD DE 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AAE              ;	call Reinicio
 214+ 9AAE
 215+ 9AAE              ; ---------- ---------- ----------
 216+ 9AAE              ;
 217+ 9AAE              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AAE
 219+ 9AAE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AB0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AB1 CD CA 9A     	call DESPLZ_DER
 222+ 9AB4 C1           	pop bc
 223+ 9AB5 10 F9        	djnz 5B
 224+ 9AB7 2A C9 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9ABA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9ABB 22 C9 88     	ld (Posicion_actual),hl
 227+ 9ABE CD 35 9D     	call Genera_coordenadas
 228+ 9AC1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AC3
 230+ 9AC3              ; ---------- ---------- ----------
 231+ 9AC3
 232+ 9AC3 2A C9 88     8 ld hl,(Posicion_actual)
 233+ 9AC6 CD CA 9A     	call DESPLZ_DER
 234+ 9AC9 C9           2 ret
 235+ 9ACA
 236+ 9ACA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9ACA              ;
 238+ 9ACA              ;	22/9/22
 239+ 9ACA              ;
 240+ 9ACA
 241+ 9ACA CD D9 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9ACD CD 25 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AD0 CD 4E 9B         call Ciclo_completo
 244+ 9AD3 21 F1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AD6 CB FE        	set 7,(hl)
 246+ 9AD8 C9           	ret
 247+ 9AD9
 248+ 9AD9              ; ******************************************************************************************************************************************************************************************
 249+ 9AD9              ;	15/02/23
 250+ 9AD9              ;
 251+ 9AD9
 252+ 9AD9 3A DD 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9ADC 47           	ld b,a
 254+ 9ADD 2A D5 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AE0 23           1 inc hl
 256+ 9AE1 23           	inc hl
 257+ 9AE2 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AE4 22 D5 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AE7 CD 1C 8D     	call Extrae_address
 260+ 9AEA 22 CB 88     	ld (Puntero_objeto),hl
 261+ 9AED
 262+ 9AED              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AED
 264+ 9AED              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AED              ; Cuántos movimientos hemos hecho ??
 266+ 9AED              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AED
 268+ 9AED 2A D1 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AF0 EB           	ex de,hl
 270+ 9AF1 A7           	and a
 271+ 9AF2 ED 52        	sbc hl,de
 272+ 9AF4 CB 3D        	srl l
 273+ 9AF6 3E 08        6 ld a,8
 274+ 9AF8 95           	sub l
 275+ 9AF9 30 1E        	jr nc,3F
 276+ 9AFB
 277+ 9AFB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AFB              ; B="0".
 279+ 9AFB
 280+ 9AFB 04           4 inc b
 281+ 9AFC 3C           	inc a
 282+ 9AFD 20 FC        	jr nz,4B
 283+ 9AFF 78           	ld a,b
 284+ 9B00 08           	ex af,af
 285+ 9B01 2A D1 88     	ld hl,(Indice_Sprite_der)
 286+ 9B04 23           5 inc hl
 287+ 9B05 23           	inc hl
 288+ 9B06 10 FC        	djnz 5B
 289+ 9B08 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B0B CD 1C 8D     	call Extrae_address
 291+ 9B0E 22 CB 88     	ld (Puntero_objeto),hl
 292+ 9B11
 293+ 9B11              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B11              ; _(Posicion_actual).
 295+ 9B11
 296+ 9B11 21 C9 88     	ld hl,Posicion_actual
 297+ 9B14 34           	inc (hl)
 298+ 9B15 08               ex af,af
 299+ 9B16 6F           	ld l,a
 300+ 9B17 18 DD        	jr 6B
 301+ 9B19
 302+ 9B19              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B19
 304+ 9B19 47           3 ld b,a
 305+ 9B1A 2A D3 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B1D 23           2 inc hl
 307+ 9B1E 23           	inc hl
 308+ 9B1F 10 FC        	djnz 2B
 309+ 9B21 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B24 C9           8 ret
 311+ 9B25
 312+ 9B25              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B25              ;
 314+ 9B25              ;	24/7/22
 315+ 9B25              ;
 316+ 9B25              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B25              ;
 318+ 9B25              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B25              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B25              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B25
 322+ 9B25 3A CF 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B28 A7           	and a
 324+ 9B29 20 1F        	jr nz,1F
 325+ 9B2B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B2D 32 CF 88         ld (CTRL_DESPLZ),a
 327+ 9B30
 328+ 9B30 21 C8 88     	ld hl,Columns
 329+ 9B33 34           	inc (hl)
 330+ 9B34 3A DB 88     	ld a,(Cuad_objeto)
 331+ 9B37 E6 01        	and 1
 332+ 9B39 28 0F        	jr z,1F
 333+ 9B3B 2A C9 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B3E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B3F 22 C9 88     	ld (Posicion_actual),hl
 336+ 9B42 CD 35 9D     	call Genera_coordenadas
 337+ 9B45 CD AA 9C     	call Inc_CTRL_DESPLZ
 338+ 9B48 18 03        	jr 2F
 339+ 9B4A CD AA 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B4D C9           2 ret
 341+ 9B4E
 342+ 9B4E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B4E              ;
 344+ 9B4E              ;	24/7/22
 345+ 9B4E              ;
 346+ 9B4E              ;	Ciclo_completo.
 347+ 9B4E              ;
 348+ 9B4E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B4E              ;
 350+ 9B4E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B4E              ; 	Decrementamos (Columns).
 352+ 9B4E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B4E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B4E
 355+ 9B4E
 356+ 9B4E 3A CF 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B51 FE FF        	cp $ff
 358+ 9B53 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B55 E6 F0        	and $f0
 360+ 9B57 20 28        	jr nz,3F
 361+ 9B59
 362+ 9B59              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B59
 364+ 9B59 3A CF 88     	ld a,(CTRL_DESPLZ)
 365+ 9B5C 47           	ld b,a
 366+ 9B5D 3E F8        	ld a,$f8
 367+ 9B5F 80           	add b
 368+ 9B60 32 CF 88     	ld (CTRL_DESPLZ),a
 369+ 9B63 18 1C        	jr 3F
 370+ 9B65 21 C8 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B68 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B69 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B6A 32 CF 88     	ld (CTRL_DESPLZ),a
 374+ 9B6D 3A DB 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B70 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B72 20 0A        	jr nz,2F
 377+ 9B74 2A C9 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B77 23           	inc hl
 379+ 9B78 22 C9 88     	ld (Posicion_actual),hl
 380+ 9B7B CD 35 9D     	call Genera_coordenadas
 381+ 9B7E
 382+ 9B7E              ; Inicia el puntero de Sprite.
 383+ 9B7E
 384+ 9B7E CD 33 8D     2 call Inicia_puntero_objeto_der
 385+ 9B81 C9           3 ret
 386+ 9B82
 387+ 9B82              ; ******************************************************************************************************************************************************************************************
 388+ 9B82              ;
 389+ 9B82              ;	15/02/23
 390+ 9B82              ;
 391+ 9B82              ;	Mov_left.
 392+ 9B82              ;
 393+ 9B82              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B82              ;
 395+ 9B82              Mov_left
 396+ 9B82
 397+ 9B82 21 F1 88     	ld hl,Ctrl_0
 398+ 9B85 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B87              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B87              ; 																	; _ en el caso de que no lo haya.
 401+ 9B87 3A F1 88     	ld a,(Ctrl_0)
 402+ 9B8A CB 77        	bit 6,a
 403+ 9B8C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B8E
 405+ 9B8E CD A4 9C     	call Stop_Amadeus_left
 406+ 9B91 C8           	ret z
 407+ 9B92 20 4A        	jr nz,8F
 408+ 9B94
 409+ 9B94 3A CD 88     11 ld a,(Coordenada_X)
 410+ 9B97 A7           	and a
 411+ 9B98 20 44        	jr nz,8F
 412+ 9B9A
 413+ 9B9A 3A CF 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B9D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B9E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9BA0
 417+ 9BA0              ; ---------- ---------- ----------
 418+ 9BA0
 419+ 9BA0 3A DC 88     	ld a,(Vel_left)
 420+ 9BA3 FE 02        	cp 2
 421+ 9BA5 28 0F        	jr z,1F
 422+ 9BA7 38 04        	jr c,6F
 423+ 9BA9 FE 04        	cp 4
 424+ 9BAB 28 12        	jr z,7F
 425+ 9BAD
 426+ 9BAD              ; ---------- ---------- ----------
 427+ 9BAD
 428+ 9BAD 3A CF 88     6 ld a,(CTRL_DESPLZ)
 429+ 9BB0 FE F8        	cp $f8
 430+ 9BB2 20 2A        	jr nz,8F
 431+ 9BB4 18 10        	jr 4F
 432+ 9BB6 3A CF 88     1 ld a,(CTRL_DESPLZ)
 433+ 9BB9 FE F9        	cp $f9
 434+ 9BBB 20 21        	jr nz,8F
 435+ 9BBD 18 07        	jr 4F
 436+ 9BBF 3A CF 88     7 ld a,(CTRL_DESPLZ)
 437+ 9BC2 FE FB        	cp $fb
 438+ 9BC4 20 18        	jr nz,8F
 439+ 9BC6
 440+ 9BC6              ; ---------- ---------- ----------
 441+ 9BC6
 442+ 9BC6              4
 443+ 9BC6 CD CC 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BC9              ;	call Reinicio
 445+ 9BC9
 446+ 9BC9              ; ---------- ---------- ----------
 447+ 9BC9
 448+ 9BC9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BCB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BCC
 451+ 9BCC              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BCC              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BCC
 454+ 9BCC CD E5 9B     	call DESPLZ_IZQ
 455+ 9BCF C1           	pop bc
 456+ 9BD0 10 F9        	djnz 5B
 457+ 9BD2 2A C9 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BD5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BD6 22 C9 88     	ld (Posicion_actual),hl
 460+ 9BD9 CD 35 9D     	call Genera_coordenadas
 461+ 9BDC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BDE
 463+ 9BDE              ; ---------- ---------- ----------
 464+ 9BDE
 465+ 9BDE              ; Movemos, no hay recolocación.
 466+ 9BDE
 467+ 9BDE 2A C9 88     8 ld hl,(Posicion_actual)
 468+ 9BE1 CD E5 9B     	call DESPLZ_IZQ
 469+ 9BE4 C9           2 ret
 470+ 9BE5
 471+ 9BE5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BE5              ;
 473+ 9BE5              ;	22/9/22
 474+ 9BE5
 475+ 9BE5              DESPLZ_IZQ
 476+ 9BE5
 477+ 9BE5 CD F4 9B     	call Desplaza_izquierda
 478+ 9BE8 CD 40 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BEB CD 68 9C     	call Ciclo_completo_2
 480+ 9BEE 21 F1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BF1 CB BE        	res 7,(hl)
 482+ 9BF3 C9           	ret
 483+ 9BF4
 484+ 9BF4              Desplaza_izquierda
 485+ 9BF4
 486+ 9BF4 3A DC 88     	ld a,(Vel_left)
 487+ 9BF7 47           	ld b,a
 488+ 9BF8 2A D7 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BFB 23           1 inc hl
 490+ 9BFC 23           	inc hl
 491+ 9BFD 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BFF 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9C02 CD 1C 8D     	call Extrae_address
 494+ 9C05 22 CB 88     	ld (Puntero_objeto),hl
 495+ 9C08
 496+ 9C08              ; Modifica (Puntero_DESPLZ_der).
 497+ 9C08
 498+ 9C08              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9C08              ; Cuántos movimientos hemos hecho ??
 500+ 9C08              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9C08
 502+ 9C08 2A D3 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9C0B EB           	ex de,hl
 504+ 9C0C A7           	and a
 505+ 9C0D ED 52        	sbc hl,de
 506+ 9C0F CB 3D        	srl l
 507+ 9C11 3E 08        6 ld a,8
 508+ 9C13 95           	sub l
 509+ 9C14 30 1E        	jr nc,3F
 510+ 9C16
 511+ 9C16              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9C16              ; B="0".
 513+ 9C16
 514+ 9C16 04           4 inc b
 515+ 9C17 3C           	inc a
 516+ 9C18 20 FC        	jr nz,4B
 517+ 9C1A 78           	ld a,b
 518+ 9C1B 08           	ex af,af
 519+ 9C1C 2A D3 88     	ld hl,(Indice_Sprite_izq)
 520+ 9C1F 23           5 inc hl
 521+ 9C20 23           	inc hl
 522+ 9C21 10 FC        	djnz 5B
 523+ 9C23 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C26 CD 1C 8D     	call Extrae_address
 525+ 9C29 22 CB 88     	ld (Puntero_objeto),hl
 526+ 9C2C
 527+ 9C2C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C2C              ; _(Posicion_actual).
 529+ 9C2C
 530+ 9C2C 21 C9 88     	ld hl,Posicion_actual
 531+ 9C2F 35           	dec (hl)
 532+ 9C30 08           	ex af,af
 533+ 9C31 6F           	ld l,a
 534+ 9C32 18 DD        	jr 6B
 535+ 9C34
 536+ 9C34              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C34
 538+ 9C34 47           3 ld b,a
 539+ 9C35 2A D1 88     	ld hl,(Indice_Sprite_der)
 540+ 9C38 23           2 inc hl
 541+ 9C39 23           	inc hl
 542+ 9C3A 10 FC        	djnz 2B
 543+ 9C3C 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C3F C9           8 ret
 545+ 9C40
 546+ 9C40              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C40              ;
 548+ 9C40              ;	modifica_parametros_1er_DESPLZ
 549+ 9C40              ;
 550+ 9C40              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C40              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C40              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C40
 554+ 9C40 3A CF 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C43 A7           	and a
 556+ 9C44 20 1E        	jr nz,1F
 557+ 9C46 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C47 32 CF 88         ld (CTRL_DESPLZ),a
 559+ 9C4A 21 C8 88     	ld hl,Columns
 560+ 9C4D 34           	inc (hl)
 561+ 9C4E 3A DB 88     	ld a,(Cuad_objeto)
 562+ 9C51 E6 01        	and 1
 563+ 9C53 20 0F        	jr nz,1F
 564+ 9C55 2A C9 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C58 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C59 22 C9 88     	ld (Posicion_actual),hl
 567+ 9C5C CD 35 9D     	call Genera_coordenadas
 568+ 9C5F CD BB 9C     	call Dec_CTRL_DESPLZ
 569+ 9C62 18 03        	jr 2F
 570+ 9C64 CD BB 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C67 C9           2 ret
 572+ 9C68
 573+ 9C68              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C68
 575+ 9C68 3A CF 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C6B FE F7        	cp $f7
 577+ 9C6D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C6F 30 2C        	jr nc,3F
 579+ 9C71
 580+ 9C71              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C71
 582+ 9C71 06 00        	ld b,0
 583+ 9C73 04           4 inc b
 584+ 9C74 3C           	inc a
 585+ 9C75 FE F7        	cp $f7
 586+ 9C77 20 FA        	jr nz,4B
 587+ 9C79 3E FF        	ld a,$ff
 588+ 9C7B 90           	sub b
 589+ 9C7C 32 CF 88     	ld (CTRL_DESPLZ),a
 590+ 9C7F 18 1C        	jr 3F
 591+ 9C81
 592+ 9C81              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C81
 594+ 9C81 21 C8 88     1 ld hl,Columns
 595+ 9C84 35           	dec (hl)
 596+ 9C85 AF           	xor a
 597+ 9C86 32 CF 88     	ld (CTRL_DESPLZ),a
 598+ 9C89 3A DB 88     	ld a,(Cuad_objeto)
 599+ 9C8C E6 01        	and 1
 600+ 9C8E 28 0A        	jr z,2F
 601+ 9C90 2A C9 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C93 2B           	dec hl
 603+ 9C94 22 C9 88     	ld (Posicion_actual),hl
 604+ 9C97 CD 35 9D     	call Genera_coordenadas
 605+ 9C9A
 606+ 9C9A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C9A
 608+ 9C9A CD 46 8D     2 call Inicia_puntero_objeto_izq
 609+ 9C9D C9           3 ret
 610+ 9C9E
 611+ 9C9E              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C9E              ;
 613+ 9C9E              ;	19/10/22
 614+ 9C9E              ;
 615+ 9C9E              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C9E              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C9E
 618+ 9C9E 3A CD 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9CA1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9CA3 C9           	ret
 621+ 9CA4
 622+ 9CA4              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9CA4              ;
 624+ 9CA4              ;	19/10/22
 625+ 9CA4              ;
 626+ 9CA4              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9CA4              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9CA4
 629+ 9CA4 3A CD 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9CA7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9CA9 C9           	ret
 632+ 9CAA
 633+ 9CAA              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9CAA              ;
 635+ 9CAA              ;	24/7/22
 636+ 9CAA              ;
 637+ 9CAA              ;	Inc_CTRL_DESPLZ
 638+ 9CAA              ;
 639+ 9CAA              ;
 640+ 9CAA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9CAA
 642+ 9CAA 21 CF 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9CAD 3A DD 88     	ld a,(Vel_right)
 644+ 9CB0 A7           	and a
 645+ 9CB1 28 06        	jr z,1F
 646+ 9CB3 47           	ld b,a
 647+ 9CB4 34           3 inc (hl)
 648+ 9CB5 10 FD        	djnz 3B
 649+ 9CB7 18 01        	jr 2F
 650+ 9CB9 34           1 inc (hl)
 651+ 9CBA C9           2 ret
 652+ 9CBB
 653+ 9CBB              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9CBB              ;
 655+ 9CBB              ;	5/2/23
 656+ 9CBB              ;
 657+ 9CBB              ;	Dec_CTRL_DESPLZ
 658+ 9CBB              ;
 659+ 9CBB              ;
 660+ 9CBB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9CBB
 662+ 9CBB 21 CF 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9CBE 3A DC 88     	ld a,(Vel_left)
 664+ 9CC1 A7           	and a
 665+ 9CC2 28 06        	jr z,1F
 666+ 9CC4 47           	ld b,a
 667+ 9CC5 35           3 dec (hl)
 668+ 9CC6 10 FD        	djnz 3B
 669+ 9CC8 18 01        	jr 2F
 670+ 9CCA 35           1 dec (hl)
 671+ 9CCB C9           2 ret
 672+ 9CCC
 673+ 9CCC              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CCC
 675+ 9CCC 2A C9 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CCF 01 1F 00     	ld bc,31
 677+ 9CD2 A7           	and a
 678+ 9CD3 ED 4A        	adc hl,bc
 679+ 9CD5 22 C9 88     	ld (Posicion_actual),hl
 680+ 9CD8 21 F1 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CDB CB C6        	set 0,(hl)
 682+ 9CDD C9           	ret
 683+ 9CDE
 684+ 9CDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CDE
 686+ 9CDE 2A C9 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CE1 01 1F 00     	ld bc,31
 688+ 9CE4 A7           	and a
 689+ 9CE5 ED 42        	sbc hl,bc
 690+ 9CE7 22 C9 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CEA 21 F1 88     	ld hl,Ctrl_0
 692+ 9CED CB CE        	set 1,(hl)
 693+ 9CEF C9           	ret
 694+ 9CF0
 695+ 9CF0              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CF0
 697+ 9CF0 24           Reaparece_abajo inc h
 698+ 9CF1 01 E0 17     	ld bc,$17e0
 699+ 9CF4 A7           	and a
 700+ 9CF5 ED 4A        	adc hl,bc
 701+ 9CF7 22 C9 88     	ld (Posicion_actual),hl
 702+ 9CFA 21 F1 88     	ld hl,Ctrl_0
 703+ 9CFD CB D6        	set 2,(hl)
 704+ 9CFF C9           	ret
 705+ 9D00
 706+ 9D00              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9D00
 708+ 9D00 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9D03 A7           	and a
 710+ 9D04 ED 42        	sbc hl,bc
 711+ 9D06 22 C9 88     	ld (Posicion_actual),hl
 712+ 9D09 21 F1 88     	ld hl,Ctrl_0
 713+ 9D0C CB DE        	set 3,(hl)
 714+ 9D0E C9           	ret
 715+ 9D0F
 716+ 9D0F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9D0F              ;
 718+ 9D0F              ;	15/07/23
 719+ 9D0F
 720+ 9D0F              Reinicio
 721+ 9D0F
 722+ 9D0F              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9D0F
 724+ 9D0F AF           	xor a
 725+ 9D10 21 F6 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9D13 CD 31 9D     	call Limpia_contenido_hl
 727+ 9D16
 728+ 9D16 21 C9 88     	ld hl,Posicion_actual
 729+ 9D19 CD 31 9D     	call Limpia_contenido_hl
 730+ 9D1C
 731+ 9D1C CD 61 A0     	call Inicializa_Puntero_indice_mov
 732+ 9D1F CD EB 9F     	call Inicia_Puntero_mov
 733+ 9D22
 734+ 9D22 21 F8 88     	ld hl,Incrementa_puntero
 735+ 9D25 06 05        	ld b,5
 736+ 9D27 77           1 ld (hl),a
 737+ 9D28 23           	inc hl
 738+ 9D29 10 FC        	djnz 1B
 739+ 9D2B
 740+ 9D2B 21 02 89     	ld hl,Ctrl_2
 741+ 9D2E CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D30
 743+ 9D30 C9           	ret
 744+ 9D31
 745+ 9D31 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D32 23           	inc hl
 747+ 9D33 77           	ld (hl),a
 748+ 9D34 C9           	ret
 749+ 9D35
 750+ 9D35
# file closed: Direcciones.asm
1794  9D35              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D35              ; ------------------------------------------------------------------------
   2+ 9D35              ;
   3+ 9D35              ;	02/04/23
   4+ 9D35              ;
   5+ 9D35              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D35              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D35              ;
   8+ 9D35              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D35              ;
  10+ 9D35              ;	Modifica: A,BC y DE.
  11+ 9D35
  12+ 9D35 C5           Genera_coordenadas push bc
  13+ 9D36 E5           	push hl
  14+ 9D37 D5           	push de
  15+ 9D38
  16+ 9D38 2A C9 88     	ld hl,(Posicion_actual)
  17+ 9D3B
  18+ 9D3B 7D           	ld a,l
  19+ 9D3C E6 1F        	and $1f
  20+ 9D3E 32 CD 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D41
  22+ 9D41 CD AA 99     	call calcula_tercio
  23+ 9D44 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D45
  25+ 9D45 1E 00        	ld e,0
  26+ 9D47 7D           	ld a,l
  27+ 9D48 E6 E0        	and $e0
  28+ 9D4A 28 01        	jr z,1F
  29+ 9D4C 04           	inc b
  30+ 9D4D
  31+ 9D4D 04           1 inc b
  32+ 9D4E 05           	dec b
  33+ 9D4F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D51              ;														; _ , salimos.
  35+ 9D51 1C           3 inc e
  36+ 9D52 D6 20        	sub 32
  37+ 9D54 20 FB        	jr nz,3B
  38+ 9D56 10 F5        	djnz 1B
  39+ 9D58
  40+ 9D58 7B           2 ld a,e
  41+ 9D59 32 CE 88     	ld (Coordenada_y),a
  42+ 9D5C
  43+ 9D5C D1           	pop de
  44+ 9D5D E1           	pop hl
  45+ 9D5E C1           	pop bc
  46+ 9D5F
  47+ 9D5F C9           	ret
  48+ 9D60
  49+ 9D60              ; ------------------------------------------------------------------------
  50+ 9D60              ;	28/05/23
  51+ 9D60              ;
  52+ 9D60              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D60              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D60              ;
  55+ 9D60              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D60              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D60              ;
  58+ 9D60              ;		DE="$120d"
  59+ 9D60              ;
  60+ 9D60              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D60              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D60              ;
  63+ 9D60              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D60
  65+ 9D60              ;	Modifica: A,BC y DE.
  66+ 9D60
  67+ 9D60
  68+ 9D60              Genera_coordenadas_disparo
  69+ 9D60
  70+ 9D60              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D60
  72+ 9D60 7D           	ld a,l
  73+ 9D61 E6 1F        	and $1f
  74+ 9D63 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D64 CD AA 99     	call calcula_tercio
  76+ 9D67 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D68 1E 00        	ld e,0
  78+ 9D6A 7D           	ld a,l
  79+ 9D6B E6 E0        	and $e0
  80+ 9D6D 28 01        	jr z,1F
  81+ 9D6F 04           	inc b
  82+ 9D70 1C           1 inc e
  83+ 9D71 D6 20        	sub 32
  84+ 9D73 20 FB        	jr nz,1B
  85+ 9D75 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D77 C9           	ret
  87+ 9D78
# file closed: Genera_coordenadas.asm
1795  9D78              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D78              ; Relojes y temporizaciones.
   2+ 9D78
   3+ 9D78              ; ------------------------------------------------------
   4+ 9D78              ;
   5+ 9D78              ;	16/7/23
   6+ 9D78              ;
   7+ 9D78              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D78              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D78              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D78              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D78              ;
  12+ 9D78              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D78              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D78
  15+ 9D78              ; Disparo_entidad db 1
  16+ 9D78              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D78              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D78
  19+ 9D78              Habilita_disparos
  20+ 9D78
  21+ 9D78 7E           	ld a,(hl)
  22+ 9D79 A7           	and a
  23+ 9D7A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D7B
  25+ 9D7B EB           	ex de,hl
  26+ 9D7C
  27+ 9D7C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D7D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D7E
  30+ 9D7E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D7E
  32+ 9D7E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D7F 7E           	ld a,(hl)
  34+ 9D80 23           	inc hl
  35+ 9D81 77           	ld (hl),a
  36+ 9D82
  37+ 9D82 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D83 3E 01        	ld a,1
  39+ 9D85 77           	ld (hl),a
  40+ 9D86 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1796  9D87              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D87
   2+ 9D87
   3+ 9D87              ;   07/07/23
   4+ 9D87              ;
   5+ 9D87              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D87              ;
   7+ 9D87              ;   Codificación:
   8+ 9D87              ;
   9+ 9D87              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D87              ;
  11+ 9D87              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D87              ;
  13+ 9D87              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D87              ;
  15+ 9D87              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D87              ;
  17+ 9D87              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D87              ;                               ..... %01000010 Vel_up 4
  19+ 9D87              ;                                               Vel_down 2
  20+ 9D87              ;                               ..... $42
  21+ 9D87              ;
  22+ 9D87              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D87              ;
  24+ 9D87              ;                               ..... %01000010 Vel_left 4
  25+ 9D87              ;                                               Vel_right 2
  26+ 9D87              ;                               ..... $42
  27+ 9D87              ;
  28+ 9D87              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D87              ;
  30+ 9D87              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D87              ;
  32+ 9D87              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D87              ;
  34+ 9D87              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D87              ;                                     $53
  36+ 9D87              ;
  37+ 9D87              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D87              ;
  39+ 9D87              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D87              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D87              ;
  42+ 9D87              ;                       Arriba ..... $81
  43+ 9D87              ;                       Arriba - izquierda ..... $a1
  44+ 9D87              ;                       Arriba - derecha ..... $91
  45+ 9D87              ;
  46+ 9D87              ;                       Abajo ..... $41
  47+ 9D87              ;                       Abajo - izquierda ..... $61
  48+ 9D87              ;                       Abajo - derecha ..... $51
  49+ 9D87              ;
  50+ 9D87              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D87              ;
  52+ 9D87              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D87              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D87              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D87              ;
  56+ 9D87              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D87              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D87              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D87              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D87              ;
  61+ 9D87              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D87              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D87              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D87              ;
  65+ 9D87              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D87              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D87              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D87              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D87
  70+ 9D87              ; ----- ----- ----- ----- -----
  71+ 9D87
  72+ 9D87 B3 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D89 BB 9D            defw F_1
  74+ 9D8B C5 9D            defw F_2
  75+ 9D8D CF 9D            defw Codo_abajo_derecha
  76+ 9D8F 03 9E            defw Derecha_y_subiendo
  77+ 9D91 0D 9E            defw Derecha_y_subiendo_1
  78+ 9D93 17 9E            defw F_3
  79+ 9D95 21 9E            defw F_4
  80+ 9D97 2B 9E            defw Derecha_y_bajando
  81+ 9D99 35 9E            defw Derecha_y_bajando_1
  82+ 9D9B 3F 9E            defw Derecha_y_bajando_2
  83+ 9D9D 49 9E            defw Codo_derecha_abajo
  84+ 9D9F 79 9E            defw Codo_abajo_izq.
  85+ 9DA1 AD 9E            defw Izquierda_y_subiendo
  86+ 9DA3 B7 9E            defw Izquierda_y_subiendo_1
  87+ 9DA5 C1 9E            defw F_5
  88+ 9DA7 CB 9E            defw F_6
  89+ 9DA9 D5 9E            defw Izquierda_y_bajando
  90+ 9DAB DF 9E            defw Izquierda_y_bajando_1
  91+ 9DAD E9 9E            defw Izquierda_y_bajando_2
  92+ 9DAF F3 9E            defw Codo_izquierda_abajo
  93+ 9DB1 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DB3
  95+ 9DB3 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DB7 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DBB
  98+ 9DBB 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DBF 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DC3 08 00
 100+ 9DC5 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DC9 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DCD 0F FE
 102+ 9DCF
 103+ 9DCF 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DD3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DD7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DDB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DDF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DE3 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DE7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DEB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DEF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DF3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DF7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DFB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DFF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E03
 117+ 9E03 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E07 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E0B 06 00
 119+ 9E0D
 120+ 9E0D 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E11 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E15 02 00
 122+ 9E17
 123+ 9E17 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E1B 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E1F 04 00
 125+ 9E21 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E25 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E29 08 00
 127+ 9E2B
 128+ 9E2B 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E2F 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E33 02 00
 130+ 9E35
 131+ 9E35 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E39 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E3D 06 00
 133+ 9E3F
 134+ 9E3F 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E43 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E47 06 00
 136+ 9E49
 137+ 9E49              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E49
 139+ 9E49 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E4D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E51 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E55 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E59 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E5D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E61 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E65 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E69 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E6D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E71 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E75 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E79
 152+ 9E79 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E7D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E81 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E85 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E89 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E8D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E91 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E95 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E99 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E9D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EA1 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EA5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EA9 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EAD
 166+ 9EAD 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EB1 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EB5 06 00
 168+ 9EB7
 169+ 9EB7 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EBB 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EBF 02 00
 171+ 9EC1
 172+ 9EC1 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EC5 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EC9 04 00
 174+ 9ECB 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9ECF 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9ED3 08 00
 176+ 9ED5
 177+ 9ED5 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9ED9 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EDD 02 00
 179+ 9EDF
 180+ 9EDF 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EE3 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EE7 06 00
 182+ 9EE9
 183+ 9EE9 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EED 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EF1 06 00
 185+ 9EF3
 186+ 9EF3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EF7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EFB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EFF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F03 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F07 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F0B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F0F 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F13 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F17 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F1B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F1F 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F23
 199+ 9F23              ; ----- ----- ----- ----- -----
 200+ 9F23              ;
 201+ 9F23              ;   27/06/23
 202+ 9F23
 203+ 9F23              Movimiento
 204+ 9F23
 205+ 9F23              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F23
 207+ 9F23              ;    ld hl,(Posicion_actual)
 208+ 9F23
 209+ 9F23 3A 02 89         ld a,(Ctrl_2)
 210+ 9F26 CB 57            bit 2,a
 211+ 9F28 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F2A
 213+ 9F2A 2A F4 88         ld hl,(Puntero_mov)
 214+ 9F2D 7E               ld a,(hl)
 215+ 9F2E
 216+ 9F2E              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F2E
 218+ 9F2E              Inicia_desplazamiento.
 219+ 9F2E
 220+ 9F2E              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F2E
 222+ 9F2E CD 22 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F31
 224+ 9F31              ; Iniciamos (Repetimos_mov).
 225+ 9F31
 226+ 9F31 7E               ld a,(hl)
 227+ 9F32 E6 0F            and $0f
 228+ 9F34 32 FA 88         ld (Repetimos_desplazamiento),a
 229+ 9F37 32 FB 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9F3A
 231+ 9F3A              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F3A
 233+ 9F3A 23               inc hl
 234+ 9F3B 7E               ld a,(hl)
 235+ 9F3C 32 FD 88         ld (Cola_de_desplazamiento),a
 236+ 9F3F 2B               dec hl
 237+ 9F40
 238+ 9F40 21 02 89         ld hl,Ctrl_2
 239+ 9F43 CB D6            set 2,(hl)
 240+ 9F45
 241+ 9F45              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F45              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F45
 244+ 9F45              Desplazamiento_iniciado
 245+ 9F45
 246+ 9F45 CD F6 9F         call Aplica_desplazamiento
 247+ 9F48
 248+ 9F48 3A 02 89         ld a,(Ctrl_2)
 249+ 9F4B CB 67            bit 4,a
 250+ 9F4D C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F4E
 252+ 9F4E 21 FA 88     3 ld hl,Repetimos_desplazamiento
 253+ 9F51 35               dec (hl)
 254+ 9F52 C0               ret nz
 255+ 9F53
 256+ 9F53              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F53              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F53              ; Analiza (Cola_de_desplazamiento).
 259+ 9F53
 260+ 9F53 3A FD 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F56 A7               and a
 262+ 9F57 CC 4B A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F5A 28 30            jr z,Reinicia_el_movimiento
 264+ 9F5C
 265+ 9F5C FE FF            cp $ff
 266+ 9F5E 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F60
 268+ 9F60 FE FE            cp $fe
 269+ 9F62 CC CF 9F         call z,Fijamos_bucle
 270+ 9F65 28 25            jr z,Reinicia_el_movimiento
 271+ 9F67
 272+ 9F67 FE FD            cp $fd
 273+ 9F69 20 11            jr nz,1F
 274+ 9F6B
 275+ 9F6B              ; ---
 276+ 9F6B              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F6B
 278+ 9F6B 3A 02 89         ld a,(Ctrl_2)
 279+ 9F6E CB 5F            bit 3,a
 280+ 9F70 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F72
 282+ 9F72              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F72
 284+ 9F72 21 02 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F75 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F77
 287+ 9F77 CD E0 9F         call Inicia_Repetimos_movimiento
 288+ 9F7A 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F7C              ; ---
 290+ 9F7C
 291+ 9F7C FE 01        1 cp 1
 292+ 9F7E CA B9 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F81
 294+ 9F81 3D               dec a
 295+ 9F82 32 FD 88         ld (Cola_de_desplazamiento),a
 296+ 9F85
 297+ 9F85 3A FB 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F88 32 FA 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F8B              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F8B C9               ret
 301+ 9F8C
 302+ 9F8C              Reinicia_el_movimiento
 303+ 9F8C
 304+ 9F8C 3A 02 89         ld a,(Ctrl_2)
 305+ 9F8F CB 5F            bit 3,a
 306+ 9F91 28 1B            jr z,2F
 307+ 9F93
 308+ 9F93              ; (Cola_de_desplazamiento)="254".
 309+ 9F93
 310+ 9F93 21 FC 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F96 35               dec (hl)
 312+ 9F97 20 15            jr nz,2F
 313+ 9F99
 314+ 9F99              ; Fin de las repeticiones del último movimiento.
 315+ 9F99
 316+ 9F99 21 02 89         ld hl,Ctrl_2
 317+ 9F9C CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F9E
 319+ 9F9E 2A F4 88         ld hl,(Puntero_mov)
 320+ 9FA1 23               inc hl
 321+ 9FA2 23               inc hl
 322+ 9FA3 23               inc hl
 323+ 9FA4 22 F4 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FA7              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FA7 7E               ld a,(hl)
 326+ 9FA8 32 FD 88         ld (Cola_de_desplazamiento),a
 327+ 9FAB
 328+ 9FAB C3 53 9F         jp Cola
 329+ 9FAE
 330+ 9FAE CD EB 9F     2 call Inicia_Puntero_mov
 331+ 9FB1
 332+ 9FB1 21 02 89         ld hl,Ctrl_2
 333+ 9FB4 CB 96            res 2,(hl)
 334+ 9FB6
 335+ 9FB6 C3 23 9F         jp Movimiento
 336+ 9FB9
 337+ 9FB9              Siguiente_desplazamiento
 338+ 9FB9
 339+ 9FB9              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9FB9              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9FB9
 342+ 9FB9 21 02 89         ld hl,Ctrl_2
 343+ 9FBC CB 96            res 2,(hl)
 344+ 9FBE
 345+ 9FBE 2A F4 88         ld hl,(Puntero_mov)
 346+ 9FC1 23               inc hl
 347+ 9FC2 23               inc hl
 348+ 9FC3 22 F4 88         ld (Puntero_mov),hl
 349+ 9FC6
 350+ 9FC6 7E               ld a,(hl)
 351+ 9FC7 A7               and a
 352+ 9FC8 CC 4B A0         call z,Incrementa_Puntero_indice_mov
 353+ 9FCB CA 8C 9F         jp z,Reinicia_el_movimiento
 354+ 9FCE
 355+ 9FCE C9               ret
 356+ 9FCF              ; Subrutinas -----------------------------------------
 357+ 9FCF              ; ---------- --------- --------- ---------- ----------
 358+ 9FCF              ;
 359+ 9FCF              ;   24/07/23
 360+ 9FCF              ;
 361+ 9FCF              ;   Fijamos_bucle
 362+ 9FCF              ;
 363+ 9FCF              ;
 364+ 9FCF
 365+ 9FCF              Fijamos_bucle
 366+ 9FCF
 367+ 9FCF 3A F8 88         ld a,(Incrementa_puntero)
 368+ 9FD2 3C               inc a
 369+ 9FD3 32 F9 88         ld (Incrementa_puntero_backup),a
 370+ 9FD6
 371+ 9FD6 CD 4B A0         call Incrementa_Puntero_indice_mov
 372+ 9FD9 2A F2 88         ld hl,(Puntero_indice_mov)
 373+ 9FDC 22 F6 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9FDF C9               ret
 375+ 9FE0
 376+ 9FE0              ; ---------- --------- --------- ---------- ----------
 377+ 9FE0              ;
 378+ 9FE0              ;   07/7/23
 379+ 9FE0              ;
 380+ 9FE0              ;   Inicia_Repetimos_movimiento
 381+ 9FE0              ;
 382+ 9FE0              ;
 383+ 9FE0
 384+ 9FE0              Inicia_Repetimos_movimiento
 385+ 9FE0
 386+ 9FE0              ; Iniciamos (Repetimos_movimiento).
 387+ 9FE0
 388+ 9FE0 DD 2A F4 88      ld ix,(Puntero_mov)
 389+ 9FE4 DD 7E 02         ld a,(ix+2)
 390+ 9FE7 32 FC 88         ld (Repetimos_movimiento),a
 391+ 9FEA
 392+ 9FEA C9               ret
 393+ 9FEB
 394+ 9FEB              ; ---------- --------- --------- ---------- ----------
 395+ 9FEB              ;
 396+ 9FEB              ;   26/6/23
 397+ 9FEB              ;
 398+ 9FEB              ;   Inicia_Puntero_mov
 399+ 9FEB              ;
 400+ 9FEB              ;
 401+ 9FEB
 402+ 9FEB 2A F2 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9FEE 5E               ld e,(hl)
 404+ 9FEF 23               inc hl
 405+ 9FF0 56               ld d,(hl)
 406+ 9FF1 EB               ex de,hl
 407+ 9FF2 22 F4 88         ld (Puntero_mov),hl
 408+ 9FF5 C9               ret
 409+ 9FF6
 410+ 9FF6              ; ---------- --------- --------- ---------- ----------
 411+ 9FF6              ;
 412+ 9FF6              ;   27/06/23
 413+ 9FF6              ;
 414+ 9FF6              ;   Aplica_movimiento.
 415+ 9FF6
 416+ 9FF6              Aplica_desplazamiento
 417+ 9FF6
 418+ 9FF6              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9FF6
 420+ 9FF6 2A F4 88         ld hl, (Puntero_mov)
 421+ 9FF9
 422+ 9FF9 7E               ld a,(hl)
 423+ 9FFA E6 F0            and $f0
 424+ 9FFC C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9FFD
 426+ 9FFD CB 7E            bit 7,(hl)
 427+ 9FFF 28 03            jr z,1F
 428+ A001 CD 21 9A         call Mov_up
 429+ A004 2A F4 88     1 ld hl, (Puntero_mov)
 430+ A007 CB 76            bit 6,(hl)
 431+ A009 28 03            jr z,2F
 432+ A00B CD F0 99         call Mov_down
 433+ A00E 2A F4 88     2 ld hl, (Puntero_mov)
 434+ A011 CB 6E            bit 5,(hl)
 435+ A013 28 03            jr z,3F
 436+ A015 CD 82 9B         call Mov_left
 437+ A018 2A F4 88     3 ld hl, (Puntero_mov)
 438+ A01B CB 66            bit 4,(hl)
 439+ A01D C8               ret z
 440+ A01E CD 64 9A         call Mov_right
 441+ A021 C9               ret
 442+ A022
 443+ A022              ; ---------- --------- --------- ---------- ----------
 444+ A022              ;
 445+ A022              ;   26/06/23
 446+ A022              ;
 447+ A022              ;   Ajusta_velocidad_desplazamiento.
 448+ A022
 449+ A022              Ajusta_velocidad_desplazamiento
 450+ A022
 451+ A022              ; 1er byte de la cadena de movimiento.
 452+ A022              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ A022
 454+ A022 CD 40 A0         call Extrae_nibble_alto
 455+ A025
 456+ A025 32 DE 88         ld (Vel_up),a
 457+ A028 79               ld a,c
 458+ A029 E6 0F            and $0f
 459+ A02B 32 DF 88         ld (Vel_down),a
 460+ A02E
 461+ A02E              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ A02E              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ A02E
 464+ A02E 23               inc hl
 465+ A02F CD 40 A0         call Extrae_nibble_alto
 466+ A032
 467+ A032 32 DC 88         ld (Vel_left),a
 468+ A035 79               ld a,c
 469+ A036 E6 0F            and $0f
 470+ A038 32 DD 88         ld (Vel_right),a
 471+ A03B
 472+ A03B              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ A03B
 474+ A03B 23               inc hl
 475+ A03C 22 F4 88         ld (Puntero_mov),hl
 476+ A03F C9               ret
 477+ A040
 478+ A040 06 04        Extrae_nibble_alto ld b,4
 479+ A042 7E               ld a,(hl)
 480+ A043 4F               ld c,a
 481+ A044 E6 F0            and $f0
 482+ A046 CB 3F        1 srl a
 483+ A048 10 FC            djnz 1B
 484+ A04A C9               ret
 485+ A04B
 486+ A04B              ; ---------- --------- --------- ---------- ----------
 487+ A04B              ;
 488+ A04B              ;   5/7/23
 489+ A04B              ;
 490+ A04B              ;   Incrementa_Puntero_indice_mov
 491+ A04B
 492+ A04B              Incrementa_Puntero_indice_mov
 493+ A04B
 494+ A04B 21 F8 88         ld hl,Incrementa_puntero
 495+ A04E 34               inc (hl)
 496+ A04F
 497+ A04F 2A F2 88         ld hl,(Puntero_indice_mov)
 498+ A052 01 02 00         ld bc,2
 499+ A055 A7               and a
 500+ A056 09               add hl,bc
 501+ A057 22 F2 88         ld (Puntero_indice_mov),hl
 502+ A05A
 503+ A05A 7E               ld a,(hl)
 504+ A05B A7               and a
 505+ A05C
 506+ A05C              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ A05C
 508+ A05C              ;    jr z,$
 509+ A05C
 510+ A05C              ;! Reinicia el Patrón de movimiento.
 511+ A05C
 512+ A05C CC 61 A0         call z,Inicializa_Puntero_indice_mov
 513+ A05F
 514+ A05F AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ A060
 516+ A060 C9               ret
 517+ A061
 518+ A061
 519+ A061              ; ---------- --------- --------- ---------- ----------
 520+ A061              ;
 521+ A061              ;   24/07/23
 522+ A061              ;
 523+ A061              ;   Inicializa_Puntero_indice_mov
 524+ A061
 525+ A061              Inicializa_Puntero_indice_mov
 526+ A061
 527+ A061              ; Existe etiqueta de bucle principal???
 528+ A061
 529+ A061 2A F6 88         ld hl,(Puntero_indice_mov_bucle)
 530+ A064 24               inc h
 531+ A065 25               dec h
 532+ A066 28 05            jr z,2F
 533+ A068
 534+ A068 22 F2 88         ld (Puntero_indice_mov),hl
 535+ A06B 18 14            jr 3F
 536+ A06D
 537+ A06D              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ A06D
 539+ A06D 3A F8 88     2 ld a,(Incrementa_puntero)
 540+ A070 47               ld b,a
 541+ A071
 542+ A071 2A F2 88         ld hl,(Puntero_indice_mov)
 543+ A074 2B           1 dec hl
 544+ A075 2B               dec hl
 545+ A076 10 FC            djnz 1B
 546+ A078 22 F2 88         ld (Puntero_indice_mov),hl
 547+ A07B
 548+ A07B AF               xor a
 549+ A07C 32 F8 88         ld (Incrementa_puntero),a
 550+ A07F 18 06            jr 4F
 551+ A081
 552+ A081 3A F9 88     3 ld a,(Incrementa_puntero_backup)
 553+ A084 32 F8 88         ld (Incrementa_puntero),a
 554+ A087 C9           4 ret
 555+ A088
 556+ A088
 557+ A088
# file closed: Patrones_de_mov.asm
1797  A088              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A088              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A088              ;
   3+ A088              ;	27/10/23
   4+ A088              ;
   5+ A088              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A088
   7+ A088              ;	ADC HL,SP	LD (addr),SP
   8+ A088              ;	ADD HL,SP	LD SP,(addr)
   9+ A088              ;	ADD IX,SP	LD SP,nn
  10+ A088              ; 	ADD IY,SP	LD SP,HL
  11+ A088              ;				LD SP,IX
  12+ A088              ;	DEC SP		LD SP,IY
  13+ A088
  14+ A088              ;	EX (SP),HL
  15+ A088              ;	EX (SP),IX
  16+ A088              ;	EX (SP),IY
  17+ A088
  18+ A088              ;	INC SP
  19+ A088
  20+ A088                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 15 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 E7 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A 04 89         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 1D 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A F1 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A 1B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A 04 89         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 1D 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A F1 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 23 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B 15 89      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 1B 89     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B 15 89  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 107+ 7FFC
 108+ 7FFC 5D               ld e,l
 109+ 7FFD 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 110+ 7FFE
 111+ 7FFE 2A 39 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 112+ 8001 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 113+ 8002 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 114+ 8003 72               ld (hl),d                                     ; _ álbum a otro.
 115+ 8004 FB               ei
 116+ 8005 C9               ret
 117+ 8006
 118+ 8006              ; ------------------------------------------------
 119+ 8006              ;
 120+ 8006              ;   8/11/23
 121+ 8006              ;
 122+ 8006              ;   La rutina estará situada justo después de:
 123+ 8006              ;   Almacen_de_parametros_DRAW equ $72bd ; ($72bd - $72fa) ; 61 bytes.
 124+ 8006
 125+ 8006              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 126+ 8006              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 127+ 8006
 128+ 8006                  org $72fb
 129+ 72FB
 130+ 72FB              Gestiona_albumes_de_fotos ; 14
 131+ 72FB
 132+ 72FB              ;! Recolocacion.
 133+ 72FB
 134+ 72FB              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 135+ 72FB              ; Si está a "1" significa que Album_de_fotos_3 o Album_de_fotos_2 estaban incompletos.
 136+ 72FB
 137+ 72FB 3A 3E 89         ld a,(Ctrl_Semaforo)
 138+ 72FE CB 47            bit 0,a
 139+ 7300 28 62            jr z,7F
 140+ 7302
 141+ 7302              ; Doble recolocación ???. Album_de_fotos_2 y Album_de_fotos_1 vacíos ???
 142+ 7302
 143+ 7302 CB 5F            bit 3,a
 144+ 7304 28 1E            jr z,13F
 145+ 7306
 146+ 7306
 147+ 7306              ; DOBLE RECOLOCACIÓN. ----------- ------------ -----------
 148+ 7306
 149+ 7306              ; Album_de_fotos_1 y Album_de_fotos_2 están vacío pero ... Está Album_de_fotos_3 completo ???
 150+ 7306
 151+ 7306 3A 3D 89         ld a,(Semaforo)
 152+ 7309 CB 5F            bit 3,a
 153+ 730B 28 57            jr z,7F                     ;   No podemos hacer la doble recolocación!!! Album_de_fotos_3 está incompleto.
 154+ 730D
 155+ 730D              ; Volcamos Álbum_3 a Álbum_2
 156+ 730D              ;    ""    Álbum_2 a Álbum_1
 157+ 730D              ; Situamos (Stack_snapshot) al comienzo de Album_de_fotos_2.
 158+ 730D              ; Actualizamos (Semaforo)
 159+ 730D              ; Inicializamos (Ctrl_Semaforo)
 160+ 730D              ; Saltamos a 7F.
 161+ 730D
 162+ 730D CD E1 73         call Album3_a_Album2
 163+ 7310 CD 08 74         call Album2_a_Album1
 164+ 7313 CD 63 74         call Actualiza_punteros_de_albumes
 165+ 7316 CD 55 73         call Modifica_Stack_snapshot
 166+ 7319 21 3D 89     	ld hl,Semaforo
 167+ 731C CB 0E        	rrc (hl)
 168+ 731E AF               xor a
 169+ 731F 32 3E 89         ld (Ctrl_Semaforo),a
 170+ 7322 18 40            jr 7F
 171+ 7324
 172+ 7324              ; ------------ ---------------- ------------
 173+ 7324
 174+ 7324              ;   RECOLOCACIÓN SIMPLE.
 175+ 7324
 176+ 7324              ;   Album3_a_Album2 ?????
 177+ 7324
 178+ 7324 CB 4F        13 bit 1,a
 179+ 7326 20 0A            jr nz,10F
 180+ 7328
 181+ 7328              ;   Álbum_1 vacío.
 182+ 7328
 183+ 7328              ; Album_de_fotos_1 está vacío. Se ha completado Album_de_fotos_2 para volcar foto a Álbum_1 ???
 184+ 7328
 185+ 7328 3A 3D 89         ld a,(Semaforo)
 186+ 732B CB 57            bit 2,a
 187+ 732D 28 35            jr z,7F                      ; No puede haber recolocación. Album_de_fotos_2 está incompleto.
 188+ 732F
 189+ 732F CD 08 74         call Album2_a_Album1
 190+ 7332
 191+ 7332              ; Album3_a_Album2 !!!
 192+ 7332
 193+ 7332              ; Album_de_fotos_2 está vacío. Se ha completado el buffer ???. Está Album_de_fotos_3 completo??
 194+ 7332
 195+ 7332 3A 3D 89     10 ld a,(Semaforo)
 196+ 7335 CB 5F            bit 3,a
 197+ 7337 20 0B            jr nz,11F
 198+ 7339
 199+ 7339              ; Album_de_fotos_2 está vacío, (sus datos se han volcado a Album_de_fotos_1). Album_de_fotos_3 está incompleto por lo que no vamos a poder hacer el trasbase de datos del álbum_3 al álbum_2.
 200+ 7339              ; Activaremos el bit_3 de (Ctrl_Semaforo) para indicar este hecho.
 201+ 7339
 202+ 7339 21 3E 89         ld hl,Ctrl_Semaforo
 203+ 733C CB DE            set 3,(hl)
 204+ 733E CB 86            res 0,(hl)
 205+ 7340 CB 96            res 2,(hl)
 206+ 7342 18 20            jr 7F
 207+ 7344
 208+ 7344              ; Album_de_fotos_3 contiene un FRAME completo.
 209+ 7344              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 210+ 7344
 211+ 7344 CD E1 73     11 call Album3_a_Album2     ;   X-X-X-0
 212+ 7347 CD 55 73         call Modifica_Stack_snapshot
 213+ 734A
 214+ 734A 21 3E 89         ld hl,Ctrl_Semaforo     ; Hemos reordenado los álbumes. Inicializamos el bit_0 de (Ctrl_Semaforo).
 215+ 734D CB 86            res 0,(hl)
 216+ 734F CB 8E            res 1,(hl)
 217+ 7351 CB 96            res 2,(hl)
 218+ 7353 18 0F            jr 7F
 219+ 7355
 220+ 7355 2A 31 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 221+ 7358 CD 1C 8D     	call Extrae_address
 222+ 735B 22 1B 89     	ld (Stack_snapshot),hl
 223+ 735E 21 3D 89     	ld hl,Semaforo
 224+ 7361 CB 0E        	rrc (hl)
 225+ 7363 C9               ret
 226+ 7364
 227+ 7364              ; #############################################################3
 228+ 7364
 229+ 7364              ;   En 1er lugar limpiamos el FRAME pintado.
 230+ 7364              ;   Vaciamos Album_de_fotos.
 231+ 7364
 232+ 7364              ;   Album_de_fotos. Contiene datos ???
 233+ 7364
 234+ 7364              ;! Cascada.
 235+ 7364
 236+ 7364 21 01 70     7 ld hl,Album_de_fotos+1
 237+ 7367 7E               ld a,(hl)
 238+ 7368 A7               and a
 239+ 7369 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 240+ 736B
 241+ 736B              ;   Hemos impreso Album_de_fotos.
 242+ 736B              ;   Limpiamos el álbum y actualizamos (End_Snapshot). !!!!!!!!!!!!!!
 243+ 736B
 244+ 736B 2A 1F 89         ld hl,(End_Snapshot)
 245+ 736E 01 00 70         ld bc,Album_de_fotos
 246+ 7371 11 01 70         ld de,Album_de_fotos+1
 247+ 7374 AF               xor a
 248+ 7375 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 249+ 7376
 250+ 7376 CD 56 74         call Limpia_album
 251+ 7379
 252+ 7379 21 00 00         ld hl,0
 253+ 737C 22 1F 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 254+ 737F
 255+ 737F              ; ----- ----- ----- -----
 256+ 737F
 257+ 737F              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 258+ 737F              ;   Album_de_fotos_1. Contiene un frame completo ???
 259+ 737F
 260+ 737F 3A 3D 89     3 ld a,(Semaforo)
 261+ 7382 CB 4F            bit 1,a
 262+ 7384 20 06            jr nz,4F
 263+ 7386
 264+ 7386              ;! Buffer vacío. El siguiente FRAME no se puede preparar. !!!!!!!!!!!!!!!!!!!!!!!!!
 265+ 7386              ;! Album_de_fotos_1 está incompleto.
 266+ 7386
 267+ 7386 21 3E 89         ld hl,Ctrl_Semaforo
 268+ 7389 CB E6            set 4,(hl)
 269+ 738B C9               ret
 270+ 738C
 271+ 738C              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 272+ 738C
 273+ 738C 21 57 70     4 ld hl,Album_de_fotos_1+1
 274+ 738F 7E               ld a,(hl)
 275+ 7390 A7               and a
 276+ 7391 28 03            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 277+ 7393
 278+ 7393              ; ----- ----- ----- -----
 279+ 7393              ; ----- ----- ----- -----
 280+ 7393
 281+ 7393 CD 2F 74         call Album1_a_Album
 282+ 7396
 283+ 7396              ;   Album_de_fotos_2.
 284+ 7396
 285+ 7396 3A 3E 89     1 ld a,(Ctrl_Semaforo)
 286+ 7399 CB 5F            bit 3,a
 287+ 739B 20 36            jr nz,8F
 288+ 739D
 289+ 739D              ;   El bit_3 de (Ctrl_Semaforo) activo, indica que después de reestructurar, Album_de_fotos_2 está vacío por que Album_de_fotos_3 no está completo.
 290+ 739D              ;   Tenemos que salir de la rutina sin modificar punteros para completar Album_de_fotos_3.
 291+ 739D              ;   Activaremos el bit_0 y el bit_1 de (Ctrl_Semaforo) para volver a reestructurar y volcar sus datos a Album_de_fotos_2.
 292+ 739D
 293+ 739D              ;   Contiene Frame completo ???
 294+ 739D
 295+ 739D 3A 3D 89     12 ld a,(Semaforo)
 296+ 73A0 CB 57            bit 2,a
 297+ 73A2 20 13            jr nz,5F
 298+ 73A4
 299+ 73A4              ;   Album_de_fotos_2 NO contiene un FRAME completo. Contiene datos ???
 300+ 73A4
 301+ 73A4 21 AD 70         ld hl,Album_de_fotos_2+1
 302+ 73A7 7E               ld a,(hl)
 303+ 73A8 A7               and a
 304+ 73A9 20 04            jr nz,9F
 305+ 73AB
 306+ 73AB              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 307+ 73AB              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 308+ 73AB
 309+ 73AB CD 63 74         call Actualiza_punteros_de_albumes
 310+ 73AE C9               ret
 311+ 73AF
 312+ 73AF              ;   Album_de_fotos_2 no está completo pero contiene datos.
 313+ 73AF
 314+ 73AF 21 3E 89     9 ld hl,Ctrl_Semaforo
 315+ 73B2 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 316+ 73B4 CB D6            set 2,(hl)                   ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 317+ 73B6 C9               ret
 318+ 73B7
 319+ 73B7 21 AD 70     5 ld hl,Album_de_fotos_2+1
 320+ 73BA 7E               ld a,(hl)
 321+ 73BB A7               and a
 322+ 73BC 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 323+ 73BE
 324+ 73BE              ; ----- ----- ----- -----
 325+ 73BE              ; ----- ----- ----- -----
 326+ 73BE              ; ----- ----- ----- -----
 327+ 73BE
 328+ 73BE              ;   Album_de_fotos_2 contiene un frame completo.
 329+ 73BE              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 330+ 73BE
 331+ 73BE CD 08 74         call Album2_a_Album1
 332+ 73C1
 333+ 73C1              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 334+ 73C1              ;   Album_de_fotos_3. Contiene un frame completo ???
 335+ 73C1
 336+ 73C1 3A 3D 89     2 ld a,(Semaforo)
 337+ 73C4 CB 5F            bit 3,a
 338+ 73C6 20 13            jr nz,6F
 339+ 73C8
 340+ 73C8              ;   Album_de_fotos_3 NO contiene un FRAME completo. Contiene datos ???
 341+ 73C8
 342+ 73C8 21 03 71         ld hl,Album_de_fotos_3+1
 343+ 73CB 7E               ld a,(hl)
 344+ 73CC A7               and a
 345+ 73CD 20 04            jr nz,8F
 346+ 73CF
 347+ 73CF              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 348+ 73CF              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 349+ 73CF
 350+ 73CF CD 63 74         call Actualiza_punteros_de_albumes
 351+ 73D2 C9               ret
 352+ 73D3
 353+ 73D3              ;   Album_de_fotos_3 no está completo.
 354+ 73D3
 355+ 73D3 21 3E 89     8 ld hl,Ctrl_Semaforo
 356+ 73D6 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 357+ 73D8 CB CE            set 1,(hl)
 358+ 73DA C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 359+ 73DB
 360+ 73DB              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 361+ 73DB
 362+ 73DB 21 03 71     6 ld hl,Album_de_fotos_3+1
 363+ 73DE 7E               ld a,(hl)
 364+ 73DF A7               and a
 365+ 73E0 C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 366+ 73E1
 367+ 73E1              ; ----- ----- ----- -----
 368+ 73E1              ; ----- ----- ----- -----
 369+ 73E1              ; ----- ----- ----- -----
 370+ 73E1
 371+ 73E1 2A 2D 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 372+ 73E4 01 02 71         ld bc,Album_de_fotos_3                  ; Origen.
 373+ 73E7 11 AC 70         ld de,Album_de_fotos_2                  ; Destino.
 374+ 73EA
 375+ 73EA CD 56 74         call Limpia_album
 376+ 73ED
 377+ 73ED              ;   Actualizamos (End_Snapshot_2):
 378+ 73ED
 379+ 73ED A7               and a
 380+ 73EE ED 4A            adc hl,bc
 381+ 73F0 22 29 89         ld (End_Snapshot_2),hl
 382+ 73F3
 383+ 73F3              ;   Limpiamos Album_de_fotos_3.
 384+ 73F3
 385+ 73F3 2A 2D 89         ld hl,(End_Snapshot_3)
 386+ 73F6 01 02 71         ld bc,Album_de_fotos_3
 387+ 73F9 11 03 71         ld de,Album_de_fotos_3+1
 388+ 73FC AF               xor a
 389+ 73FD 02               ld (bc),a
 390+ 73FE CD 56 74         call Limpia_album
 391+ 7401
 392+ 7401              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 393+ 7401              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 394+ 7401
 395+ 7401 21 00 00         ld hl,0
 396+ 7404 22 2D 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 397+ 7407
 398+ 7407 C9               ret
 399+ 7408
 400+ 7408 2A 29 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 401+ 740B 01 AC 70         ld bc,Album_de_fotos_2                   ; Origen.
 402+ 740E 11 56 70         ld de,Album_de_fotos_1                   ; Destino.
 403+ 7411 CD 56 74         call Limpia_album
 404+ 7414
 405+ 7414              ;   Actualizamos (End_Snapshot_1):
 406+ 7414
 407+ 7414 A7               and a
 408+ 7415 ED 4A            adc hl,bc
 409+ 7417 22 25 89         ld (End_Snapshot_1),hl
 410+ 741A
 411+ 741A              ;   Limpiamos Album_de_fotos_2.
 412+ 741A
 413+ 741A 2A 29 89         ld hl,(End_Snapshot_2)
 414+ 741D 01 AC 70         ld bc,Album_de_fotos_2
 415+ 7420 11 AD 70         ld de,Album_de_fotos_2+1
 416+ 7423 AF               xor a
 417+ 7424 02               ld (bc),a
 418+ 7425 CD 56 74         call Limpia_album
 419+ 7428 21 00 00         ld hl,0
 420+ 742B 22 29 89         ld (End_Snapshot_2),hl                    ; Limpia (End_Snapshot_2).s
 421+ 742E C9               ret
 422+ 742F
 423+ 742F
 424+ 742F 2A 25 89     Album1_a_Album ld hl,(End_Snapshot_1)         ; Final, (origen).
 425+ 7432 01 56 70         ld bc,Album_de_fotos_1      ; Origen.
 426+ 7435 11 00 70         ld de,Album_de_fotos        ; Destino.
 427+ 7438
 428+ 7438 CD 56 74         call Limpia_album
 429+ 743B
 430+ 743B              ;   Calculamos (End_Snapshot)
 431+ 743B
 432+ 743B A7               and a
 433+ 743C ED 4A            adc hl,bc
 434+ 743E 22 1F 89         ld (End_Snapshot),hl
 435+ 7441
 436+ 7441              ;   Limpiamos Album_de_fotos_1.
 437+ 7441
 438+ 7441 2A 25 89         ld hl,(End_Snapshot_1)
 439+ 7444 01 56 70         ld bc,Album_de_fotos_1
 440+ 7447 11 57 70         ld de,Album_de_fotos_1+1
 441+ 744A AF               xor a
 442+ 744B 02               ld (bc),a
 443+ 744C
 444+ 744C CD 56 74         call Limpia_album
 445+ 744F
 446+ 744F 21 00 00         ld hl,0
 447+ 7452 22 25 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 448+ 7455 C9               ret
 449+ 7456
 450+ 7456              ; ----------------------------------------------------
 451+ 7456              ;
 452+ 7456              ;   10/8/23
 453+ 7456              ;
 454+ 7456              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 455+ 7456              ;
 456+ 7456              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 457+ 7456              ;           BC ..... Dirección de inicio del álbum.
 458+ 7456              ;           DE ..... Dirección de inicio del álbum. +1
 459+ 7456
 460+ 7456              ;    ld hl,(End_Snapshot)
 461+ 7456              ;    ld bc,Album_de_fotos
 462+ 7456              ;    ld de,Album_de_fotos+1
 463+ 7456
 464+ 7456              ;   MODIFICA: A,HL,BC y DE.
 465+ 7456
 466+ 7456              Limpia_album
 467+ 7456 D5               push de                     ; Guardo DESTINO.
 468+ 7457 C5               push bc                     ; Guardo ORIGEN.
 469+ 7458 ED 42            sbc hl,bc
 470+ 745A 4D               ld c,l
 471+ 745B 44               ld b,h
 472+ 745C E1               pop hl
 473+ 745D C5               push bc
 474+ 745E ED B0            ldir
 475+ 7460 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 476+ 7461 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 477+ 7462 C9               ret                         ; _ a otro).
 478+ 7463
 479+ 7463              ; --------------------------------------------------------------------------------------------
 480+ 7463              ;
 481+ 7463              ;   20/10/23
 482+ 7463
 483+ 7463              ;
 484+ 7463
 485+ 7463              Actualiza_punteros_de_albumes
 486+ 7463
 487+ 7463 2A 31 89         ld hl,(Puntero_indice_album_de_fotos)
 488+ 7466 2B               dec hl
 489+ 7467 2B               dec hl
 490+ 7468 22 31 89         ld (Puntero_indice_album_de_fotos),hl
 491+ 746B
 492+ 746B 2A 35 89         ld hl,(Puntero_indice_End_Snapshot)
 493+ 746E 2B               dec hl
 494+ 746F 2B               dec hl
 495+ 7470 22 35 89         ld (Puntero_indice_End_Snapshot),hl
 496+ 7473 CD 1C 8D         call Extrae_address
 497+ 7476 22 39 89         ld (Puntero_de_End_Snapshot),hl
 498+ 7479
 499+ 7479 C9               ret
 500+ 747A
# file closed: Guarda_foto_registros.asm
1798  747A
1799  747A              	SAVESNA "Pruebas.sna", START
1800  747A
1801  747A
1802  747A
1803  747A
# file closed: Banco_de_pruebas.asm
