# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 2D 88     	call Frame
  15  A104
  16  A104 3A 5D 87     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  23  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 B3 84        	defw Caja_1
  98+ 846A F0 84        	defw Caja_2
  99+ 846C 2D 85        	defw Caja_3
 100+ 846E 6A 85        	defw Caja_4
 101+ 8470 A7 85        	defw Caja_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 8484
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 848F
 128+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8490
 130+ 8490 00 00        	db 0,0											; Variables_de_borrado
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00        	defw 0											;	" " " " " " "
 133+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 849A
 135+ 849A 00 00        	db 0,0											; Variables_de_pintado
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00        	defw 0											;	" " " " " " "
 138+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 139+ 84A4
 140+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 141+ 84A7
 142+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 143+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 144+ 84AE
 145+ 84AE 00           	db 0 											; (Columnas).
 146+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 147+ 84B1 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 148+ 84B3
 149+ 84B3              ; ---------- ---------- ---------- ---------- ----------
 150+ 84B3
 151+ 84B3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 152+ 84B5 00 00        	defw 0											; (Posicion_actual).
 153+ 84B7 00 00        	defw 0 											; (Puntero_objeto).
 154+ 84B9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 155+ 84BC
 156+ 84BC 00           	db %00000000 									; (Attr).
 157+ 84BD
 158+ 84BD 00 00        	defw 0											; (Indice_Sprite_der).
 159+ 84BF 00 00        	defw 0											; (Indice_Sprite_izq).
 160+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 161+ 84C3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 162+ 84C5
 163+ 84C5 00 00        	defw 0											; (Posicion_inicio).
 164+ 84C7 00           	db 0											; (Cuad_objeto).
 165+ 84C8
 166+ 84C8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 167+ 84CC
 168+ 84CC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 169+ 84CD
 170+ 84CD 00 00        	db 0,0										    ; Variables_de_borrado
 171+ 84CF 00 00        	defw 0											;	" " " " " " "
 172+ 84D1 00 00        	defw 0											;	" " " " " " "
 173+ 84D3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 174+ 84D7
 175+ 84D7 00 00        	db 0,0											; Variables_de_pintado
 176+ 84D9 00 00        	defw 0											;	" " " " " " "
 177+ 84DB 00 00        	defw 0											;	" " " " " " "
 178+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 179+ 84E1
 180+ 84E1 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 181+ 84E4
 182+ 84E4 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 183+ 84E8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 184+ 84EB
 185+ 84EB 00           	db 0 											; (Columnas).
 186+ 84EC 00 00        	defw 0											; (Limite_horizontal).
 187+ 84EE 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 188+ 84F0
 189+ 84F0              ; ---------- ---------- ---------- ---------- ----------
 190+ 84F0
 191+ 84F0 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 84F2 00 00        	defw 0											; (Posicion_actual).
 193+ 84F4 00 00        	defw 0 											; (Puntero_objeto).
 194+ 84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 84F9
 196+ 84F9 00           	db %00000000 									; (Attr).
 197+ 84FA
 198+ 84FA 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 84FC 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 8502
 203+ 8502 00 00        	defw 0											; (Posicion_inicio).
 204+ 8504 00           	db 0											; (Cuad_objeto).
 205+ 8505
 206+ 8505 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8509
 208+ 8509 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 850A
 210+ 850A 00 00        	db 0,0										    ; Variables_de_borrado
 211+ 850C 00 00        	defw 0											;	" " " " " " "
 212+ 850E 00 00        	defw 0											;	" " " " " " "
 213+ 8510 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 214+ 8514
 215+ 8514 00 00        	db 0,0											; Variables_de_pintado
 216+ 8516 00 00        	defw 0											;	" " " " " " "
 217+ 8518 00 00        	defw 0											;	" " " " " " "
 218+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 219+ 851E
 220+ 851E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 221+ 8521
 222+ 8521 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 223+ 8525 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8528
 225+ 8528 00           	db 0 											; (Columnas).
 226+ 8529 00 00        	defw 0											; (Limite_horizontal).
 227+ 852B 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 228+ 852D
 229+ 852D              ; ---------- ---------- ---------- ---------- ----------
 230+ 852D
 231+ 852D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 232+ 852F 00 00        	defw 0											; (Posicion_actual).
 233+ 8531 00 00        	defw 0 											; (Puntero_objeto).
 234+ 8533 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 8536
 236+ 8536 00           	db %00000000 									; (Attr).
 237+ 8537
 238+ 8537 00 00        	defw 0											; (Indice_Sprite_der).
 239+ 8539 00 00        	defw 0											; (Indice_Sprite_izq).
 240+ 853B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 241+ 853D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 242+ 853F
 243+ 853F 00 00        	defw 0											; (Posicion_inicio).
 244+ 8541 00           	db 0											; (Cuad_objeto).
 245+ 8542
 246+ 8542 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 247+ 8546
 248+ 8546 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 249+ 8547
 250+ 8547 00 00        	db 0,0										    ; Variables_de_borrado
 251+ 8549 00 00        	defw 0											;	" " " " " " "
 252+ 854B 00 00        	defw 0											;	" " " " " " "
 253+ 854D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 254+ 8551
 255+ 8551 00 00        	db 0,0											; Variables_de_pintado
 256+ 8553 00 00        	defw 0											;	" " " " " " "
 257+ 8555 00 00        	defw 0											;	" " " " " " "
 258+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 855B
 260+ 855B 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 261+ 855E
 262+ 855E 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 263+ 8562 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 264+ 8565
 265+ 8565 00           	db 0 											; (Columnas).
 266+ 8566 00 00        	defw 0											; (Limite_horizontal).
 267+ 8568 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 268+ 856A
 269+ 856A              ; ---------- ---------- ---------- ---------- ----------
 270+ 856A
 271+ 856A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 272+ 856C 00 00        	defw 0											; (Posicion_actual).
 273+ 856E 00 00        	defw 0 											; (Puntero_objeto).
 274+ 8570 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 275+ 8573
 276+ 8573 00           	db %00000000 									; (Attr).
 277+ 8574
 278+ 8574 00 00        	defw 0											; (Indice_Sprite_der).
 279+ 8576 00 00        	defw 0											; (Indice_Sprite_izq).
 280+ 8578 00 00        	defw 0											; (Puntero_DESPLZ_der).
 281+ 857A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 282+ 857C
 283+ 857C 00 00        	defw 0											; (Posicion_inicio).
 284+ 857E 00           	db 0											; (Cuad_objeto).
 285+ 857F
 286+ 857F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 287+ 8583
 288+ 8583 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 289+ 8584
 290+ 8584 00 00        	db 0,0										    ; Variables_de_borrado
 291+ 8586 00 00        	defw 0											;	" " " " " " "
 292+ 8588 00 00        	defw 0											;	" " " " " " "
 293+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 294+ 858E
 295+ 858E 00 00        	db 0,0											; Variables_de_pintado
 296+ 8590 00 00        	defw 0											;	" " " " " " "
 297+ 8592 00 00        	defw 0											;	" " " " " " "
 298+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 299+ 8598
 300+ 8598 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 301+ 859B
 302+ 859B 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 303+ 859F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 304+ 85A2
 305+ 85A2 00           	db 0 											; (Columnas).
 306+ 85A3 00 00        	defw 0											; (Limite_horizontal).
 307+ 85A5 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 308+ 85A7
 309+ 85A7              ; ---------- ---------- ---------- ---------- ----------
 310+ 85A7
 311+ 85A7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 312+ 85A9 00 00        	defw 0											; (Posicion_actual).
 313+ 85AB 00 00        	defw 0 											; (Puntero_objeto).
 314+ 85AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 315+ 85B0
 316+ 85B0 00           	db %00000000 									; (Attr).
 317+ 85B1
 318+ 85B1 00 00        	defw 0											; (Indice_Sprite_der).
 319+ 85B3 00 00        	defw 0											; (Indice_Sprite_izq).
 320+ 85B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 321+ 85B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 322+ 85B9
 323+ 85B9 00 00        	defw 0											; (Posicion_inicio).
 324+ 85BB 00           	db 0											; (Cuad_objeto).
 325+ 85BC
 326+ 85BC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 327+ 85C0
 328+ 85C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 329+ 85C1
 330+ 85C1 00 00        	db 0,0										    ; Variables_de_borrado
 331+ 85C3 00 00        	defw 0											;	" " " " " " "
 332+ 85C5 00 00        	defw 0											;	" " " " " " "
 333+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 334+ 85CB
 335+ 85CB 00 00        	db 0,0											; Variables_de_pintado
 336+ 85CD 00 00        	defw 0											;	" " " " " " "
 337+ 85CF 00 00        	defw 0											;	" " " " " " "
 338+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 85D5
 340+ 85D5 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 341+ 85D8
 342+ 85D8 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 343+ 85DC 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 344+ 85DF
 345+ 85DF 00           	db 0 											; (Columnas).
 346+ 85E0 00 00        	defw 0											; (Limite_horizontal).
 347+ 85E2 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 348+ 85E4
 349+ 85E4              	; -------------------------------------------------------------------------------------
 350+ 85E4              ;
 351+ 85E4              ;	20/05/23
 352+ 85E4              ;
 353+ 85E4              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 354+ 85E4              ;
 355+ 85E4              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 356+ 85E4              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 357+ 85E4              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 358+ 85E4              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 359+ 85E4
 360+ 85E4              Indice_de_entidades
 361+ 85E4
 362+ 85E4 EE 85        	defw Entidad_1
 363+ 85E6 FE 85        	defw Entidad_2
 364+ 85E8 0E 86        	defw Entidad_3
 365+ 85EA 1E 86        	defw Entidad_4
 366+ 85EC 2E 86        	defw Entidad_5
 367+ 85EE
 368+ 85EE              ;	BADSAT, (Satélite malvado).
 369+ 85EE
 370+ 85EE 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 371+ 85F0 04           	db %00000100									; (Attr).
 372+ 85F1 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 373+ 85F3 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 374+ 85F5 9F 47        	defw $479f	                             	    ; (Posicion_inicio).
 375+ 85F7 01           	db 1											; (Cuad_objeto).
 376+ 85F8 02 01 01 04  	db 2,1,1,4                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 377+ 85FC 48 99        	defw Indice_mov_Escaloncitos_izquierda_abajo  	; (Puntero_indice_mov)
 378+ 85FE
 379+ 85FE 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 380+ 8600 02           	db %00000010									; (Attr).
 381+ 8601 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 382+ 8603 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 383+ 8605 5F 48        	defw $485f                                      ; (Posicion_inicio).
 384+ 8607 01           	db 1											; (Cuad_objeto).
 385+ 8608 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 386+ 860C 48 99        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 387+ 860E
 388+ 860E 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 389+ 8610 04           	db %00000100									; (Attr).
 390+ 8611 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 391+ 8613 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 392+ 8615 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 393+ 8617 01           	db 1											; (Cuad_objeto).
 394+ 8618 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 395+ 861C 3C 99        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 396+ 861E
 397+ 861E 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 398+ 8620 01           	db %00000001									; (Attr).
 399+ 8621 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 400+ 8623 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 401+ 8625 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 402+ 8627 01           	db 1											; (Cuad_objeto).
 403+ 8628 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 404+ 862C 48 99        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 405+ 862E
 406+ 862E 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 407+ 8630 01           	db %00000001									; (Attr).
 408+ 8631 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 409+ 8633 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 410+ 8635 0A 40        	defw $400a                                      ; (Posicion_inicio).
 411+ 8637 01           	db 1											; (Cuad_objeto).
 412+ 8638 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 413+ 863C 3E 99        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  24  863E              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 863E              ; 13/05/23
   2+ 863E
   3+ 863E              Indice_de_niveles
   4+ 863E
   5+ 863E 4C 86        	defw Nivel_1
   6+ 8640 52 86        	defw Nivel_2
   7+ 8642 58 86        	defw Nivel_3
   8+ 8644 5E 86        	defw Nivel_4
   9+ 8646 64 86        	defw Nivel_5
  10+ 8648
  11+ 8648              ;	...
  12+ 8648              ;	...
  13+ 8648              ;	+ Niveles ...
  14+ 8648
  15+ 8648 00 00        	defw 0
  16+ 864A 00 00        	defw 0
  17+ 864C
  18+ 864C 09           Nivel_1 db 9                                    ; Nº de entidades.
  19+ 864D 01 02 03 04  	db 1,2,3,4,5 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 8651 05
  20+ 8652 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 8653 02 01 01 01  	db 2,1,1,1,1								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 8657 01
  22+ 8658 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 8659 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  23+ 865D 01
  24+ 865E 11           Nivel_4 db 17									; Nº de entidades.
  25+ 865F 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 8663 01
  26+ 8664 14           Nivel_5 db 20									; Nº de entidades.
  27+ 8665 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  27+ 8669 01
  28+ 866A
  29+ 866A
  30+ 866A              ;---------------------------------------------------------------------------------------------------------------
  31+ 866A              ;
  32+ 866A              ;   20/5/23
  33+ 866A              ;
  34+ 866A              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  35+ 866A              ;	Asigna el (Numero_de_entidades).
  36+ 866A              ;
  37+ 866A              ;	DESTRUYE HL,DE y A.
  38+ 866A
  39+ 866A              Inicializa_Punteros_de_nivel
  40+ 866A
  41+ 866A 21 3E 86     	ld hl,Indice_de_niveles
  42+ 866D 22 91 87     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  43+ 8670 CD 17 8A     	call Extrae_address
  44+ 8673 7E           	ld a,(hl)
  45+ 8674 32 64 87     	ld (Numero_de_entidades),a
  46+ 8677 C9           	ret
  47+ 8678
  48+ 8678 2A 91 87     Extrae_Datos_de_entidades ld hl,(Puntero_indice_NIVELES)
  49+ 867B CD 17 8A     	call Extrae_address
  50+ 867E 23           	inc hl
  51+ 867F 22 93 87     	ld (Datos_de_nivel),hl						 ; Situamos (Datos_de_nivel) en los tipos de entidad que se van a asignar_
  52+ 8682              ;												 ; _ a cada caja.
  53+ 8682 C9           	ret
  54+ 8683
  55+ 8683              ;---------------------------------------------------------------------------------------------------------------
  56+ 8683              ;
  57+ 8683              ;   13/5/23
  58+ 8683              ;
  59+ 8683              ;	Destruye A,BC,HL,DE
  60+ 8683
  61+ 8683              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_1
  62+ 8683              ;	_del juego.
  63+ 8683
  64+ 8683              Prepara_cajas
  65+ 8683
  66+ 8683              ; Preparamos los punteros de las cajas.
  67+ 8683
  68+ 8683 21 68 84     	ld hl,Indice_de_cajas
  69+ 8686 CD 17 8A     	call Extrae_address
  70+ 8689 CD C6 86     	call Avanza_caja
  71+ 868C
  72+ 868C CD 01 87     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  73+ 868F
  74+ 868F 2A 93 87     	ld hl,(Datos_de_nivel)
  75+ 8692
  76+ 8692              ; HL está en los datos del nivel correspondiente.
  77+ 8692              ; B actuará como contador de cajas.
  78+ 8692
  79+ 8692 C5           1 push bc
  80+ 8693
  81+ 8693 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  82+ 8694 CD B7 86     	call PreparaBC
  83+ 8697
  84+ 8697 21 E4 85     	ld hl,Indice_de_entidades
  85+ 869A CD BF 86     	call SBC_HL_con_BC_y_Extrae
  86+ 869D 22 6A 87         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  87+ 86A0
  88+ 86A0 CD D0 86     	call Datos_de_entidad_a_caja
  89+ 86A3
  90+ 86A3 2A 62 87     	ld hl,(Indice_restore_caja)
  91+ 86A6 CD 17 8A     	call Extrae_address
  92+ 86A9 CD C6 86     	call Avanza_caja
  93+ 86AC
  94+ 86AC 2A 93 87     	ld hl,(Datos_de_nivel)
  95+ 86AF 23           	inc hl
  96+ 86B0 22 93 87     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
  97+ 86B3
  98+ 86B3 C1           	pop bc
  99+ 86B4 10 DC        	djnz 1B
 100+ 86B6 C9           	ret
 101+ 86B7
 102+ 86B7 CB 27        PreparaBC sla a
 103+ 86B9 D6 02        	sub 2										; [(Nivel)*2]-2.
 104+ 86BB 4F           	ld c,a
 105+ 86BC 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 106+ 86BE C9           	ret
 107+ 86BF
 108+ 86BF A7           SBC_HL_con_BC_y_Extrae and a
 109+ 86C0 ED 4A        	adc hl,bc
 110+ 86C2 CD 17 8A     	call Extrae_address
 111+ 86C5 C9           	ret
 112+ 86C6
 113+ 86C6 22 5E 87     Avanza_caja	ld (Puntero_store_caja),hl
 114+ 86C9 13           	inc de
 115+ 86CA 13           	inc de
 116+ 86CB EB           	ex de,hl
 117+ 86CC 22 62 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 118+ 86CF C9           	ret
 119+ 86D0
 120+ 86D0              Datos_de_entidad_a_caja
 121+ 86D0
 122+ 86D0              ;		; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar Entidad_
 123+ 86D0              ;		; _ la 1ª caja.
 124+ 86D0
 125+ 86D0 ED 5B 5E 87  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 126+ 86D4
 127+ 86D4 01 02 00     	ld bc,2
 128+ 86D7 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 129+ 86D9
 130+ 86D9 01 07 00     	ld bc,7
 131+ 86DC CD FB 86     	call Situa_DE
 132+ 86DF
 133+ 86DF 01 05 00     	ld bc,5
 134+ 86E2 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 135+ 86E4
 136+ 86E4 01 04 00     	ld bc,4
 137+ 86E7 CD FB 86     	call Situa_DE
 138+ 86EA
 139+ 86EA 01 07 00     	ld bc,7
 140+ 86ED ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 141+ 86EF
 142+ 86EF 01 18 00     	ld bc,24
 143+ 86F2 CD FB 86     	call Situa_DE
 144+ 86F5
 145+ 86F5 01 02 00     	ld bc,2
 146+ 86F8 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 147+ 86FA
 148+ 86FA C9           	ret
 149+ 86FB
 150+ 86FB EB           Situa_DE ex de,hl
 151+ 86FC A7           	and a
 152+ 86FD ED 4A        	adc hl,bc
 153+ 86FF EB           	ex de,hl
 154+ 8700 C9           	ret
 155+ 8701
 156+ 8701              ;---------------------------------------------------------------------------------------------------------------
 157+ 8701              ;
 158+ 8701              ;	20/5/23
 159+ 8701
 160+ 8701              Admin_num_entidades
 161+ 8701
 162+ 8701 3A 64 87     	ld a,(Numero_de_entidades)
 163+ 8704 A7           	and a
 164+ 8705              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 165+ 8705 28 FE        	jr z,$
 166+ 8707              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 167+ 8707 FE 05        	cp 5
 168+ 8709 38 0C        	jr c,1F
 169+ 870B
 170+ 870B 06 05        	ld b,5
 171+ 870D 90           	sub b
 172+ 870E 32 64 87     	ld (Numero_de_entidades),a
 173+ 8711 78           	ld a,b
 174+ 8712 32 65 87     	ld (Numero_parcial_de_entidades),a
 175+ 8715 18 08        	jr 2F
 176+ 8717
 177+ 8717              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 178+ 8717              ; (Numero_de_entidades)="0".
 179+ 8717
 180+ 8717 47           1 ld b,a
 181+ 8718 32 65 87     	ld (Numero_parcial_de_entidades),a
 182+ 871B AF           	xor a
 183+ 871C 32 64 87     	ld (Numero_de_entidades),a
 184+ 871F C9           2 ret
# file closed: Niveles.asm
  25  8720
  26  8720              ; ******************************************************************************************************************************************************************************************
  27  8720              ; Constantes.
  28  8720              ; ******************************************************************************************************************************************************************************************
  29  8720              ;
  30  8720              ; 8/11/22
  31  8720              ;
  32  8720              ; Constantes generales.
  33  8720              ;
  34  8720
  35  8720              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  36  8720              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  37  8720              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  38  8720              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  39  8720
  40  8720              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  41  8720              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  42  8720              ;                               				        ; De momento situamos este almacén en $7000.
  43  8720              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  44  8720              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  45  8720              ;                               				        ; De momento situamos este almacén en $7060.
  46  8720
  47  8720              ; ******************************************************************************************************************************************************************************************
  48  8720              ; Variables.
  49  8720              ; ******************************************************************************************************************************************************************************************
  50  8720              ;
  51  8720              ; 10/11/22
  52  8720              ;
  53  8720              ; Variables de DRAW. (Motor principal).
  54  8720              ;
  55  8720              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  56  8720
  57  8720 00           Filas db 0												; Filas. [DRAW]
  58  8721 00           Columns db 0  											; Nº de columnas. [DRAW]
  59  8722 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  60  8724 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  61  8726 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  62  8727 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  63  8728
  64  8728              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  65  8728
  66  8728 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  67  8729              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  68  8729              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  69  8729 00           Attr db 0												; Atributos de la entidad:
  70  872A
  71  872A              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  72  872A              ;
  73  872A              ;	COLORES: 0 ..... NEGRO
  74  872A              ;    		 1 ..... AZUL
  75  872A              ; 			 2 ..... ROJO
  76  872A              ;			 3 ..... MAGENTA
  77  872A              ; 			 4 ..... VERDE
  78  872A              ; 			 5 ..... CIAN
  79  872A              ;			 6 ..... AMARILLO
  80  872A              ; 			 7 ..... BLANCO
  81  872A
  82  872A 00 00        Indice_Sprite_der defw 0
  83  872C 00 00        Indice_Sprite_izq defw 0
  84  872E 00 00        Puntero_DESPLZ_der defw 0
  85  8730 00 00        Puntero_DESPLZ_izq defw 0
  86  8732
  87  8732 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  88  8734 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  89  8735
  90  8735              ; Variables de objeto. (Características).
  91  8735
  92  8735 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  93  8736 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  94  8737 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  95  8738 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  96  8739
  97  8739 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  98  873A              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  99  873A              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 100  873A 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 101  873C 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 102  873E 00 00        	defw 0
 103  8740 00 00 00 00  	db 0,0,0,0
 104  8744
 105  8744 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 106  8746 00 00        	defw 0
 107  8748 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  874A 00 00 00 00  	db 0,0,0,0
 109  874E
 110  874E              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 111  874E
 112  874E 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 113  874F              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 114  874F              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 115  874F              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 116  874F              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 117  874F              ;
 118  874F              ; 														DESCRIPCIÖN:
 119  874F              ;
 120  874F              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 121  874F              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 122  874F              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 123  874F              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 124  874F              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 125  874F              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 126  874F              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 127  874F              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 128  874F              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 129  874F              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 130  874F              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 131  874F              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 132  874F              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 133  874F              ;
 134  874F              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 135  874F              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 136  874F              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 137  874F
 138  874F 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 139  8750
 140  8750              ; Movimiento.
 141  8750
 142  8750 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 143  8751 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 144  8753 00 00        Puntero_mov defw 0
 145  8755 00           Contador_db_mov db 0
 146  8756 00           Incrementa_puntero db 0
 147  8757 00           Repetimos_db db 0
 148  8758
 149  8758              ; Variables de funcionamiento. [DRAW].
 150  8758
 151  8758 00           Columnas db 0
 152  8759 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 153  875B              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 154  875B 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 155  875C
 156  875C              ; variables de control general.
 157  875C
 158  875C 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 159  875D
 160  875D              ; 61 Bytes por entidad.
 161  875D              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 162  875D              ;					         		---------;      ;---------
 163  875D
 164  875D
 165  875D              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 166  875D
 167  875D 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 168  875E
 169  875E              ;														DESCRIPCIÓN:
 170  875E              ;
 171  875E              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 172  875E              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 173  875E              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 174  875E              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 175  875E              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 176  875E              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 177  875E              ;														BIT 3, .............
 178  875E              ;														BIT 4, .............
 179  875E
 180  875E              ; Gestión de ENTIDADES y CAJAS.
 181  875E
 182  875E              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 183  875E 00 00        Puntero_store_caja defw 0
 184  8760 00 00        Puntero_restore_caja defw 0
 185  8762 00 00        Indice_restore_caja defw 0
 186  8764 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 187  8765 00           Numero_parcial_de_entidades db 0
 188  8766 00           Entidades_en_curso db 0									; Las entidades parciales no se muestran todas a la vez. Se pretende que vayan apareciendo_
 189  8767              ;														; _ poco a poco. (Entidades_en_curso) son el nº de entidades parciales que hay en pantalla.
 190  8767 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 191  8768              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 192  8768              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 193  8768              ;														; _ (Numero_de_malotes)="0".
 194  8768 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 195  876A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 196  876C              ;														; _ puntero (Indice_entidades).
 197  876C
 198  876C
 199  876C              ;---------------------------------------------------------------------------------------------------------------
 200  876C              ;
 201  876C              ; Sirven para PINTAR.
 202  876C
 203  876C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 204  876E              ;														; _variable para almacenar lo posición del puntero_
 205  876E              ; 														; _de pila, SP.
 206  876E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 207  8770              ;														; La utiliza la rutina [Extrae_foto_registros].
 208  8770 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 209  8772              ;														; _el snapshot de los registros de la siguiente entidad.
 210  8772              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 211  8772 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 212  8774              ;														; _el snapshot de los registros del siguiente disparo.
 213  8774              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 214  8774
 215  8774              ;---------------------------------------------------------------------------------------------------------------
 216  8774
 217  8774              ; Gestión de Disparos.
 218  8774
 219  8774 00           Numero_de_disparotes db 0
 220  8775 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 221  8777 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 222  8779 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 223  877A              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 224  877A              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 225  877A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 226  877C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 227  877C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 228  877C              ;														; _produzca colisión.
 229  877C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 230  877E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 231  877E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 232  8781              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 233  8781 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 234  8784              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 235  8784
 236  8784              ;---------------------------------------------------------------------------------------------------------------
 237  8784
 238  8784              ; Relojes y temporizaciones.
 239  8784
 240  8784 00           Contador_de_frames db 0
 241  8785 00           Secundero db 0
 242  8786 00           Activa_loop db 0										; Esta señal espera (Secundero)+X para habilitar el Loop.
 243  8787              ;														; Repite la oleada de entidades.
 244  8787 01           Habilita_disparo_Amadeus db 1
 245  8788 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 246  8789 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 247  878A
 248  878A 01           Habilita_disparo_entidad db 1
 249  878B 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 250  878C 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 251  878D
 252  878D              ;---------------------------------------------------------------------------------------------------------------
 253  878D
 254  878D              ; Gestión de FRAMES.
 255  878D
 256  878D 00           Switch db 0
 257  878E
 258  878E              ; Variables de Raster y localización en pantalla.
 259  878E
 260  878E 00 FF        Temp_Raster defw $ff00
 261  8790
 262  8790              ;---------------------------------------------------------------------------------------------------------------
 263  8790
 264  8790              ; Gestión de NIVELES.
 265  8790
 266  8790 00           Nivel db 0												 ; Nivel actual del juego.
 267  8791 00 00        Puntero_indice_NIVELES defw 0
 268  8793 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 269  8795              ; 														 ; _ que definen el NIVEL.
 270  8795
 271  8795
 272  8795              ; Y todo comienza aquí .....
 273  8795              ;
 274  8795              ; Rutina principal *************************************************************************************************************************************************************************
 275  8795              ;
 276  8795              ;	14/11/22
 277  8795
 278  8795              START
 279  8795
 280  8795 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 281  8798 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 282  879A ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 283  879C ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 284  879E F3           	DI
 285  879F
 286  879F 3E 07        	ld a,%00000111
 287  87A1 CD 4A 95     	call Cls
 288  87A4
 289  87A4              ;	call Pinta_FILAS
 290  87A4
 291  87A4 CD 6A 86     	call Inicializa_Punteros_de_nivel					 ; Sitúa los punteros en el nivel 1 y carga el nº de entidades.
 292  87A7 CD F0 8A     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 293  87AA
 294  87AA CD 78 86     4 call Extrae_Datos_de_entidades
 295  87AD CD 83 86     	call Prepara_cajas
 296  87B0
 297  87B0 CD C3 89     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 298  87B3              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 299  87B3 CD A0 8A     	call Restore_entidad
 300  87B6
 301  87B6 21 65 87     	ld hl,Numero_parcial_de_entidades
 302  87B9 46           	ld b,(hl)
 303  87BA 04           	inc b
 304  87BB 05           	dec b
 305  87BC 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 306  87BE
 307  87BE              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 308  87BE              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 309  87BE              ;	Pintamos el resto de entidades:
 310  87BE
 311  87BE              ;	INICIA ENTIDADES !!!!!
 312  87BE
 313  87BE C5           1 push bc  												; Guardo el contador de entidades.
 314  87BF CD 1D 8A      	call Inicia_Puntero_objeto
 315  87C2 CD 5E 95     	call Recompone_posicion_inicio
 316  87C5 CD 9A 8F     	call Draw
 317  87C8 CD A0 7F     	call Guarda_foto_registros
 318  87CB CD 65 8A     6 call Store_Restore_cajas	 					    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 319  87CE
 320  87CE C1           	pop bc
 321  87CF 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 322  87D1
 323  87D1 3A 5D 87     	ld a,(Ctrl_1)
 324  87D4 CB 5F        	bit 3,a
 325  87D6 20 18        	jr nz,5F											; Loop
 326  87D8
 327  87D8              ; 	INICIA AMADEUS !!!!!
 328  87D8
 329  87D8 CD C7 8A     3 call Restore_Amadeus
 330  87DB CD 1D 8A     	call Inicia_Puntero_objeto
 331  87DE
 332  87DE CD 9A 8F     	call Draw
 333  87E1 CD A0 7F     	call Guarda_foto_registros
 334  87E4
 335  87E4 11 76 84     	ld de,Amadeus_db
 336  87E7 CD D9 8A     	call Store_Amadeus
 337  87EA
 338  87EA              ; 	INICIA DISPAROS !!!!!
 339  87EA
 340  87EA CD D9 89     	call Inicia_Puntero_Disparo_Entidades
 341  87ED CD E0 89     	call Inicia_Puntero_Disparo_Amadeus
 342  87F0
 343  87F0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 344  87F0
 345  87F0 CD C3 89     5 call Inicia_punteros_de_cajas
 346  87F3 CD A0 8A     	call Restore_entidad
 347  87F6
 348  87F6 3A 5D 87     	ld a,(Ctrl_1)
 349  87F9 CB 5F        	bit 3,a
 350  87FB 28 0A        	jr z,6F
 351  87FD
 352  87FD              ; Looop:
 353  87FD
 354  87FD 21 5D 87     	ld hl,Ctrl_1
 355  8800 CB 9E        	res 3,(hl)
 356  8802 CD E7 89     	call Calcula_numero_de_malotes
 357  8805 18 07        	jr 7F
 358  8807
 359  8807              ; ----------
 360  8807
 361  8807 3A 65 87     6 ld a,(Numero_parcial_de_entidades)
 362  880A 3C           	inc a
 363  880B 32 67 87     	ld (Numero_de_malotes),a
 364  880E
 365  880E AF           7 xor a
 366  880F
 367  880F FB           2 ei
 368  8810 28 FD        	jr z,2B
 369  8812
 370  8812 3A 85 87     	ld a,(Secundero)
 371  8815 47           	ld b,a
 372  8816 3A 86 87     	ld a,(Activa_loop)
 373  8819 B8           	cp b
 374  881A 28 08        	jr z,8F
 375  881C
 376  881C 21 5D 87     	ld hl,Ctrl_1
 377  881F CB E6        	set 4,(hl)
 378  8821 AF           	xor a
 379  8822 18 EB        	jr 2B
 380  8824
 381  8824 21 5D 87     8 ld hl,Ctrl_1
 382  8827 CB A6        	res 4,(hl)
 383  8829 F3           	di
 384  882A
 385  882A C3 AA 87     	jp 4B
 386  882D
 387  882D              ; -----------------------------------------------------------------------------------
 388  882D
 389  882D              Frame
 390  882D
 391  882D              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 392  882D              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 393  882D
 394  882D              ; PINTAMOS.
 395  882D
 396  882D 3E 02            ld a,2
 397  882F D3 FE            out ($fe),a
 398  8831 CD 9E 92     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 399  8834 CD D7 92     	call Extrae_foto_disparos
 400  8837 3E 01            ld a,1
 401  8839 D3 FE            out ($fe),a
 402  883B
 403  883B              ;	jr $
 404  883B              ; ----------------------------------------------------------------------
 405  883B
 406  883B              ; RELOJES.
 407  883B
 408  883B 21 84 87     	ld hl,Contador_de_frames
 409  883E 34           	inc (hl)
 410  883F 3E 3C        	ld a,60
 411  8841 BE           	cp (hl)
 412  8842 20 0D        	jr nz,13F
 413  8844
 414  8844 36 00        	ld (hl),0
 415  8846
 416  8846 21 85 87     	ld hl,Secundero
 417  8849 34           	inc (hl)
 418  884A 3E 3C        	ld a,60
 419  884C BE           	cp (hl)
 420  884D 20 02        	jr nz,13F
 421  884F
 422  884F 36 00        	ld (hl),0
 423  8851
 424  8851 21 87 87     13 ld hl,Habilita_disparo_Amadeus
 425  8854 11 89 87     	ld de,Temporiza_disparo_Amadeus
 426  8857 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 427  885A
 428  885A 21 8A 87     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 429  885D 11 8C 87     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 430  8860 CD D5 7F     	call Habilita_disparos
 431  8863
 432  8863              ; COLISIONES.
 433  8863
 434  8863 CD 34 8F     	call Selector_de_impactos
 435  8866
 436  8866              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 437  8866              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 438  8866              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 439  8866
 440  8866 AF           	xor a
 441  8867 32 79 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 442  886A
 443  886A CD C3 89     	call Inicia_punteros_de_cajas
 444  886D CD A0 8A     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 445  8870              ; 														; _ en DRAW.
 446  8870 3A 20 87     	ld a,(Filas)
 447  8873 A7           	and a
 448  8874 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 449  8876 CD B2 8A     	call Incrementa_punteros_de_cajas
 450  8879 18 F2        	jr 12B
 451  887B
 452  887B              ; ---------------------------------------------------------------------------------------
 453  887B
 454  887B CD B2 8D     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 455  887E 21 00 70     	ld hl,Album_de_fotos
 456  8881 22 70 87         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 457  8884              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 458  8884 3A 65 87     	ld a,(Numero_parcial_de_entidades)
 459  8887 47               ld b,a
 460  8888 A7           	and a
 461  8889 20 16        	jr nz,2F
 462  888B
 463  888B 21 5D 87     	ld hl,Ctrl_1
 464  888E CB 66        	bit 4,(hl)
 465  8890 20 66        	jr nz,4F
 466  8892
 467  8892 21 5D 87     	ld hl,Ctrl_1
 468  8895 CB DE        	set 3,(hl)											; Señal de Loop activada.
 469  8897
 470  8897 3A 85 87     	ld a,(Secundero)
 471  889A 3C           	inc a
 472  889B 3C           	inc a
 473  889C 32 86 87     	ld (Activa_loop),a									; A los 2 seg. se repite la oleada de entidades.
 474  889F
 475  889F 18 57        	jr 4F
 476  88A1
 477  88A1              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 478  88A1
 479  88A1              ; Código que ejecutamos con cada entidad:
 480  88A1
 481  88A1              ; Impacto ???
 482  88A1
 483  88A1 C5           2 push bc 												; Nº de entidades.
 484  88A2
 485  88A2 3A 39 87     	ld a,(Impacto)
 486  88A5 A7           	and a
 487  88A6 28 0A        	jr z,8F
 488  88A8
 489  88A8              ; Hay Impacto en esta entidad.
 490  88A8
 491  88A8 CD 7A 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 492  88AB CD E2 8A     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 493  88AE 21 65 87     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 494  88B1 35           	dec (hl)
 495  88B2
 496  88B2              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 497  88B2              ; _con las coordenadas de la entidad almacenada en DRAW.
 498  88B2
 499  88B2 3A 5D 87     8 ld a,(Ctrl_1)
 500  88B5 CB 57        	bit 2,a
 501  88B7 28 20        	jr z,7F
 502  88B9
 503  88B9 2A 7C 87     	ld hl,(Coordenadas_disparo_certero)
 504  88BC EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 505  88BD              ;														; E contiene la coordenada_X del disparo.
 506  88BD 2A 26 87     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 507  88C0              ;														; H Coordenado_y de la entidad.
 508  88C0 A7           	and a
 509  88C1 ED 52        	sbc hl,de
 510  88C3
 511  88C3 CD 6B 8F     	call Determina_resultado_comparativa
 512  88C6 04           	inc b
 513  88C7 05           	dec b
 514  88C8
 515  88C8              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 516  88C8              ;	jr z,$
 517  88C8              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 518  88C8
 519  88C8 28 0F        	jr z,7F
 520  88CA
 521  88CA              ; ----- ----- -----
 522  88CA
 523  88CA 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 524  88CC 32 39 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 525  88CF 21 5D 87     	ld hl,Ctrl_1
 526  88D2 CB 96        	res 2,(hl)
 527  88D4 21 7C 87     	ld hl,Coordenadas_disparo_certero
 528  88D7 36 00        	ld (hl),0
 529  88D9
 530  88D9
 531  88D9 CD 2B 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 532  88DC
 533  88DC 3A 4E 87     	ld a,(Ctrl_0)
 534  88DF CB 67        	bit 4,a
 535  88E1 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 536  88E3
 537  88E3              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 538  88E3              ; [[[
 539  88E3 CD 3B 8B     	call Detecta_disparo_entidad
 540  88E6              ; ]]]
 541  88E6 CD 8A 89     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 542  88E9
 543  88E9 21 4E 87     	ld hl,Ctrl_0
 544  88EC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 545  88EE AF           	xor a
 546  88EF 32 4F 87     	ld (Obj_dibujado),a
 547  88F2
 548  88F2 CD 65 8A     6 call Store_Restore_cajas
 549  88F5
 550  88F5 C1           	pop bc
 551  88F6 10 A9        	djnz 2B
 552  88F8
 553  88F8              ; Tras la gestión de las entidades, ... AMADEUS.
 554  88F8
 555  88F8 CD C7 8A     4 call Restore_Amadeus
 556  88FB
 557  88FB 3A 39 87     	ld a,(Impacto)
 558  88FE A7           	and a
 559  88FF 20 FE        	jr nz,$
 560  8901
 561  8901              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 562  8901
 563  8901 CD 5B 89     	call Mov_Amadeus
 564  8904
 565  8904 3A 4E 87     	ld a,(Ctrl_0)
 566  8907 CB 67        	bit 4,a
 567  8909 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 568  890B
 569  890B CD 8A 89     	call Guarda_foto_entidad_a_pintar
 570  890E
 571  890E 21 4E 87     3 ld hl,Ctrl_0
 572  8911 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 573  8913 AF           	xor a
 574  8914 32 4F 87     	ld (Obj_dibujado),a
 575  8917
 576  8917 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 577  891A CD D9 8A     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 578  891D
 579  891D CD D0 8D     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 580  8920
 581  8920              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 582  8920
 583  8920 CD FF 89     	call Calcula_numero_de_disparotes
 584  8923 CD E7 89     9 call Calcula_numero_de_malotes
 585  8926
 586  8926 3E 04        	ld a,4
 587  8928 D3 FE        	out ($fe),a
 588  892A
 589  892A C9           	ret
 590  892B
 591  892B              ; --------------------------------------------------------------------------------------------------------------
 592  892B              ;
 593  892B              ;	27/03/23
 594  892B
 595  892B              Mov_obj
 596  892B
 597  892B              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 598  892B
 599  892B AF           	xor a
 600  892C 32 4F 87     	ld (Obj_dibujado),a
 601  892F 32 4E 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 602  8932              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 603  8932              ; 														; _de la entidad.
 604  8932 CD 94 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 605  8935              ;														; Obj_dibujado="0".
 606  8935              ; Movemos Entidades malignas.
 607  8935
 608  8935 21 51 87     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 609  8938 34           	inc (hl)
 610  8939 35           	dec (hl)                                            ; Salimos de la rutina.
 611  893A C8           	ret z
 612  893B
 613  893B CD 4C 99     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 614  893E
 615  893E 3A 4E 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 616  8941 CB 67        	bit 4,a
 617  8943 C8           	ret z
 618  8944
 619  8944              ; Ha habido desplazamiento de la entidad maligna.
 620  8944              ; Ha llegado a zona de AMADEUS ???
 621  8944
 622  8944 3A 27 87     	ld a,(Coordenada_y)
 623  8947 FE 14        	cp $14
 624  8949 D4 01 8D     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 625  894C              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 626  894C              ; ---------
 627  894C
 628  894C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 629  894E 32 4F 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 630  8951 CD 94 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 631  8954 CD AB 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 632  8957 CD 7A 89     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 633  895A C9           	ret													; _de la misma.
 634  895B
 635  895B              ; --------------------------------------------------------------------------------------------------------------
 636  895B              ;
 637  895B              ;	29/1/23
 638  895B
 639  895B              Mov_Amadeus
 640  895B
 641  895B AF           	xor a
 642  895C 32 4F 87     	ld (Obj_dibujado),a
 643  895F CD 94 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 644  8962              ;														; Obj_dibujado="0".
 645  8962              ; Movemos Amadeus.
 646  8962
 647  8962 CD 04 8B     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 648  8965 3A 4E 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 649  8968 CB 67        	bit 4,a
 650  896A C8           	ret z
 651  896B
 652  896B              ; ---------
 653  896B
 654  896B 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 655  896D 32 4F 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 656  8970 CD 94 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 657  8973 CD AB 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 658  8976 CD 7A 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 659  8979 C9           	ret													; _de la nave.
 660  897A
 661  897A              ; --------------------------------------------------------------------------------------------------------------
 662  897A              ;
 663  897A              ;	31/01/23
 664  897A              ;
 665  897A              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 666  897A
 667  897A              Guarda_foto_entidad_a_borrar
 668  897A
 669  897A CD 74 92     	call Prepara_draw
 670  897D CD AE 91     	call calcula_CColumnass
 671  8980 CD E5 91     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 672  8983 CD 3A 92     	call Define_rutina_de_impresion
 673  8986 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 674  8989 C9           	ret
 675  898A
 676  898A              ; --------------------------------------------------------------------------------------------------------------
 677  898A              ;
 678  898A              ;	31/01/23
 679  898A              ;
 680  898A              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 681  898A              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 682  898A
 683  898A              Guarda_foto_entidad_a_pintar
 684  898A
 685  898A CD B7 89     	call Repone_pintar
 686  898D CD 9A 8F     	call Draw
 687  8990 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 688  8993 C9           	ret
 689  8994
 690  8994              ; --------------------------------------------------------------------------------------------------------------
 691  8994              ;
 692  8994              ;
 693  8994
 694  8994 21 20 87     Prepara_var_pintado_borrado	ld hl,Filas
 695  8997 3A 4F 87     	ld a,(Obj_dibujado)
 696  899A A7           	and a
 697  899B 28 05        	jr z,1F
 698  899D 11 44 87     	ld de,Variables_de_pintado
 699  89A0 18 03        	jr 2F
 700  89A2 11 3A 87     1 ld de,Variables_de_borrado
 701  89A5 01 08 00     2 ld bc,8
 702  89A8 ED B0        	ldir
 703  89AA C9           	ret
 704  89AB
 705  89AB              ; --------------------------------------------------------------------------------------------------------------
 706  89AB
 707  89AB 21 3A 87     Repone_borrar ld hl,Variables_de_borrado
 708  89AE 11 20 87     	ld de,Filas
 709  89B1 01 08 00     	ld bc,8
 710  89B4 ED B0        	ldir
 711  89B6 C9           	ret
 712  89B7
 713  89B7 21 44 87     Repone_pintar ld hl,Variables_de_pintado
 714  89BA 11 20 87     	ld de,Filas
 715  89BD 01 08 00     	ld bc,8
 716  89C0 ED B0        	ldir
 717  89C2 C9           	ret
 718  89C3
 719  89C3              ; *************************************************************************************************************************************************************
 720  89C3              ;
 721  89C3              ; 8/1/23
 722  89C3              ;
 723  89C3              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 724  89C3              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 725  89C3              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 726  89C3
 727  89C3              ; Destruye HL y DE !!!!!
 728  89C3
 729  89C3              Inicia_punteros_de_cajas
 730  89C3
 731  89C3 21 68 84     	ld hl,Indice_de_cajas
 732  89C6 CD 17 8A         call Extrae_address
 733  89C9 22 5E 87         ld (Puntero_store_caja),hl
 734  89CC 21 6A 84     	ld hl,Indice_de_cajas+2
 735  89CF 22 62 87     	ld (Indice_restore_caja),hl
 736  89D2 CD 17 8A     	call Extrae_address
 737  89D5 22 60 87     	ld (Puntero_restore_caja),hl
 738  89D8 C9               ret
 739  89D9
 740  89D9              ; *************************************************************************************************************************************************************
 741  89D9              ;
 742  89D9              ; 8/1/23
 743  89D9              ;
 744  89D9              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 745  89D9
 746  89D9 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 747  89DC 22 75 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 748  89DF C9           	ret
 749  89E0 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 750  89E3 22 77 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 751  89E6 C9           	ret
 752  89E7
 753  89E7              ; -------------------------------------------------------------------------------------------------------------
 754  89E7              ;
 755  89E7              ; 28/2/23
 756  89E7              ;
 757  89E7
 758  89E7              Calcula_numero_de_malotes
 759  89E7
 760  89E7 21 00 70     	ld hl,Album_de_fotos
 761  89EA EB           	ex de,hl
 762  89EB 2A 70 87     	ld hl,(Stack_snapshot)
 763  89EE
 764  89EE 06 00        	ld b,0
 765  89F0 7D           	ld a,l
 766  89F1 93           	sub e
 767  89F2 28 07        	jr z,1F
 768  89F4
 769  89F4              ; Nº de malotes no es "0".
 770  89F4
 771  89F4 D6 06        2 sub 6
 772  89F6 04           	inc b
 773  89F7 A7           	and a
 774  89F8 20 FA        	jr nz,2B
 775  89FA 78           	ld a,b
 776  89FB
 777  89FB 32 67 87     1 ld (Numero_de_malotes),a
 778  89FE C9           	ret
 779  89FF
 780  89FF              ; -------------------------------------------------------------------------------------------------------------
 781  89FF              ;
 782  89FF              ; 28/2/23
 783  89FF              ;
 784  89FF
 785  89FF              Calcula_numero_de_disparotes
 786  89FF
 787  89FF 21 60 70     	ld hl,Album_de_fotos_disparos
 788  8A02 EB           	ex de,hl
 789  8A03 2A 72 87     	ld hl,(Stack_snapshot_disparos)
 790  8A06
 791  8A06 06 00        	ld b,0
 792  8A08 7D           	ld a,l
 793  8A09 93           	sub e
 794  8A0A 28 07        	jr z,1F
 795  8A0C
 796  8A0C              ; Nº de malotes no es "0".
 797  8A0C
 798  8A0C D6 06        2 sub 6
 799  8A0E 04           	inc b
 800  8A0F A7           	and a
 801  8A10 20 FA        	jr nz,2B
 802  8A12 78           	ld a,b
 803  8A13
 804  8A13 32 74 87     1 ld (Numero_de_disparotes),a
 805  8A16 C9           	ret
 806  8A17              ; *************************************************************************************************************************************************************
 807  8A17              ;
 808  8A17              ; 20/10/22
 809  8A17              ;
 810  8A17              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 811  8A17              ;
 812  8A17              ; Destruye el puntero y DE !!!!!
 813  8A17
 814  8A17 5E           Extrae_address ld e,(hl)
 815  8A18 23           	inc hl
 816  8A19 56           	ld d,(hl)
 817  8A1A 2B           	dec hl
 818  8A1B EB           	ex de,hl
 819  8A1C C9           	ret
 820  8A1D
 821  8A1D              ; *************************************************************************************************************************************************************
 822  8A1D              ;
 823  8A1D              ;	7/2/23
 824  8A1D              ;
 825  8A1D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 826  8A1D              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 827  8A1D              ;
 828  8A1D              ;   Destruye HL y BC !!!!!,
 829  8A1D              ;
 830  8A1D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 831  8A1D              ;					"0" ..... Izquierda.
 832  8A1D
 833  8A1D              Inicia_Puntero_objeto
 834  8A1D
 835  8A1D 3A 34 87     	ld a,(Cuad_objeto)
 836  8A20 E6 01        	and 1
 837  8A22 F5           	push af
 838  8A23 CC 41 8A     	call z,Inicia_puntero_objeto_izq
 839  8A26 F1           	pop af
 840  8A27 28 2B        	jr z,1F
 841  8A29 CD 2E 8A     	call Inicia_puntero_objeto_der
 842  8A2C 18 26        	jr 1F
 843  8A2E
 844  8A2E              ; Arrancamos desde la parte izquierda de la pantalla.
 845  8A2E              ; Iniciamos (Indice_Sprite_der).
 846  8A2E
 847  8A2E 2A 2A 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 848  8A31 22 2E 87     	ld (Puntero_DESPLZ_der),hl
 849  8A34 CD 17 8A     	call Extrae_address
 850  8A37 22 24 87     	ld (Puntero_objeto),hl
 851  8A3A
 852  8A3A 2A 2C 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 853  8A3D 22 30 87     	ld (Puntero_DESPLZ_izq),hl
 854  8A40 C9           	ret
 855  8A41
 856  8A41              ; Arrancamos desde la parte derecha de la pantalla.
 857  8A41              ; Iniciamos (Indice_Sprite_izq).
 858  8A41
 859  8A41 2A 2C 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 860  8A44 22 30 87     	ld (Puntero_DESPLZ_izq),hl
 861  8A47 CD 17 8A     	call Extrae_address
 862  8A4A 22 24 87     	ld (Puntero_objeto),hl
 863  8A4D
 864  8A4D 2A 2A 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 865  8A50 22 2E 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 866  8A53 C9           	ret
 867  8A54
 868  8A54              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 869  8A54
 870  8A54 21 38 83     1 ld hl,Amadeus
 871  8A57 ED 4B 24 87  	ld bc,(Puntero_objeto)
 872  8A5B B7 ED 42     	sub hl,bc
 873  8A5E C0           	ret nz
 874  8A5F 21 4E 87     	ld hl,Ctrl_0
 875  8A62 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 876  8A64 C9           	ret 												; _de nuestra nave en los extremos.
 877  8A65
 878  8A65              ; *************************************************************************************************************************************************************
 879  8A65              ;
 880  8A65              ;	14/5/23
 881  8A65              ;
 882  8A65              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 883  8A65              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 884  8A65
 885  8A65              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 886  8A65              ;	_de la 2ª y 3ª entidad respectivamente.
 887  8A65
 888  8A65              Store_Restore_cajas
 889  8A65
 890  8A65 E5           	push hl
 891  8A66 D5           	push de
 892  8A67 C5            	push bc
 893  8A68
 894  8A68              ;	STORE !!!!!
 895  8A68              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 896  8A68
 897  8A68 21 20 87     	ld hl,Filas
 898  8A6B ED 5B 5E 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 899  8A6F 01 3D 00     	ld bc,61
 900  8A72 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 901  8A74
 902  8A74              ; 	Entidad_sospechosa. 20/4/23
 903  8A74
 904  8A74 3A 39 87     	ld a,(Impacto)
 905  8A77 A7           	and a
 906  8A78 28 0C        	jr z,1F
 907  8A7A
 908  8A7A 2A 5E 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 909  8A7D 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 910  8A80 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 911  8A81 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 912  8A83 22 7A 87     	ld (Entidad_sospechosa_de_colision),hl
 913  8A86
 914  8A86              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 915  8A86
 916  8A86 2A 60 87     1 ld hl,(Puntero_restore_caja)
 917  8A89 7E           	ld a,(hl)
 918  8A8A A7           	and a
 919  8A8B F5           	push af
 920  8A8C 28 08        	jr z,2F
 921  8A8E
 922  8A8E 11 20 87     	ld de,Filas
 923  8A91 01 3D 00     	ld bc,61
 924  8A94 ED B0        	ldir
 925  8A96
 926  8A96 CD B2 8A     2 call Incrementa_punteros_de_cajas
 927  8A99 F1           	pop af
 928  8A9A 28 EA        	jr z,1B
 929  8A9C
 930  8A9C C1           	pop bc
 931  8A9D D1           	pop de
 932  8A9E E1           	pop hl
 933  8A9F
 934  8A9F C9           	ret
 935  8AA0
 936  8AA0              ; **************************************************************************************************
 937  8AA0              ;
 938  8AA0              ;	12/05/23
 939  8AA0              ;
 940  8AA0              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 941  8AA0
 942  8AA0 E5           Restore_entidad push hl
 943  8AA1 D5           	push de
 944  8AA2 C5            	push bc
 945  8AA3
 946  8AA3 2A 5E 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 947  8AA6 11 20 87     	ld de,Filas
 948  8AA9 01 3D 00     	ld bc,61
 949  8AAC ED B0        	ldir
 950  8AAE
 951  8AAE C1           	pop bc
 952  8AAF D1           	pop de
 953  8AB0 E1           	pop hl
 954  8AB1 C9           	ret
 955  8AB2
 956  8AB2
 957  8AB2              ; **************************************************************************************************
 958  8AB2              ;
 959  8AB2              ;	08/05/23
 960  8AB2              ;
 961  8AB2              ;	Incrementamos los dos punteros de entidades. (+1).
 962  8AB2
 963  8AB2 2A 60 87     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
 964  8AB5 22 5E 87     	ld (Puntero_store_caja),hl
 965  8AB8 2A 62 87     	ld hl,(Indice_restore_caja)
 966  8ABB 23           	inc hl
 967  8ABC 23           	inc hl
 968  8ABD 22 62 87     	ld (Indice_restore_caja),hl
 969  8AC0 CD 17 8A         call Extrae_address
 970  8AC3 22 60 87         ld (Puntero_restore_caja),hl
 971  8AC6 C9               ret
 972  8AC7
 973  8AC7              ; **************************************************************************************************
 974  8AC7              ;
 975  8AC7              ;	25/01/23
 976  8AC7              ;
 977  8AC7              ;	Restore_Amadeus
 978  8AC7              ;
 979  8AC7              ;	Cargamos en DRAW los parámetros de Amadeus.
 980  8AC7              ;
 981  8AC7
 982  8AC7 E5           Restore_Amadeus	push hl
 983  8AC8 D5           	push de
 984  8AC9 C5            	push bc
 985  8ACA 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 986  8ACD 11 20 87     	ld de,Filas
 987  8AD0 01 3D 00     	ld bc,61
 988  8AD3 ED B0        	ldir
 989  8AD5 C1           	pop bc
 990  8AD6 D1           	pop de
 991  8AD7 E1           	pop hl
 992  8AD8 C9           	ret
 993  8AD9
 994  8AD9              ; *************************************************************************************************************************************************************
 995  8AD9              ;
 996  8AD9              ;	29/04/23
 997  8AD9              ;
 998  8AD9              ;	Store_Amadeus
 999  8AD9              ;
1000  8AD9              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1001  8AD9              ;
1002  8AD9              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1003  8AD9              ;
1004  8AD9              ;	DESTRUYE: HL y BC y DE.
1005  8AD9
1006  8AD9 21 20 87     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1007  8ADC 01 3D 00     	ld bc,61
1008  8ADF ED B0        	ldir
1009  8AE1 C9           	ret
1010  8AE2
1011  8AE2              ; -----------------------------------------------------------
1012  8AE2              ;
1013  8AE2              ;	27/04/23
1014  8AE2              ;
1015  8AE2              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1016  8AE2              ;
1017  8AE2              ;	Destruye: HL,BC,DE,A
1018  8AE2
1019  8AE2 21 20 87     Borra_datos_entidad ld hl,Filas
1020  8AE5 01 3C 00     	ld bc,60
1021  8AE8 AF           	xor a
1022  8AE9 77           	ld (hl),a
1023  8AEA 11 21 87     	ld de,Filas+1
1024  8AED ED B0        	ldir
1025  8AEF C9           	ret
1026  8AF0
1027  8AF0              ; -----------------------------------------------------------
1028  8AF0
1029  8AF0              ; Teclado.
1030  8AF0
1031  8AF0 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1032  8AF2 DB FE        	in a,($fe)
1033  8AF4 E6 01        	and $01
1034  8AF6 28 02        	jr z,1f
1035  8AF8 18 F6        	jr Pulsa_ENTER
1036  8AFA C9           1 ret
1037  8AFB
1038  8AFB              ; **************************************************************************************************
1039  8AFB              ;
1040  8AFB              ; Temporización.
1041  8AFB
1042  8AFB              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1043  8AFB              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1044  8AFB              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1045  8AFB              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1046  8AFB
1047  8AFB              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1048  8AFB              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1049  8AFB              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1050  8AFB
1051  8AFB              ; A partir de $4f61 no hace falta DELAY.
1052  8AFB
1053  8AFB              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1054  8AFB
1055  8AFB 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1056  8AFE 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1057  8AFF 78           	LD A,B
1058  8B00 A7           	AND A
1059  8B01 20 FB        	JR NZ,wait
1060  8B03 C9           	RET
1061  8B04
1062  8B04              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1063  8B04              ;
1064  8B04              ;	5/3/23
1065  8B04              ;
1066  8B04              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1067  8B04
1068  8B04              Movimiento_Amadeus
1069  8B04
1070  8B04              ; Disparo.
1071  8B04
1072  8B04 3A 87 87     	ld a,(Habilita_disparo_Amadeus)
1073  8B07 A7           	and a
1074  8B08 20 02        	jr nz,1F
1075  8B0A 18 15        	jr 2F
1076  8B0C
1077  8B0C 3E F7        1 ld a,$f7													; "5" para disparar.
1078  8B0E DB FE        	in a,($fe)
1079  8B10 E6 10        	and $10
1080  8B12
1081  8B12 F5           	push af
1082  8B13 CC 7D 8B     	call z,Genera_disparo
1083  8B16 F1           	pop af
1084  8B17 20 08        	jr nz,2F
1085  8B19
1086  8B19 3A 87 87     	ld a,(Habilita_disparo_Amadeus)
1087  8B1C EE 01        	xor 1
1088  8B1E 32 87 87     	ld (Habilita_disparo_Amadeus),a
1089  8B21
1090  8B21 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1091  8B23 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1092  8B25 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1093  8B27 CC EC 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1094  8B2A 3E F7        	ld a,$f7
1095  8B2C DB FE        	in a,($fe)
1096  8B2E E6 01        	and $01
1097  8B30 C8           	ret z
1098  8B31
1099  8B31 3E F7        	ld a,$f7
1100  8B33 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1101  8B35 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1102  8B37 CC CE 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1103  8B3A C9           	ret
1104  8B3B
1105  8B3B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1106  8B3B              ;
1107  8B3B              ;	Rutina provisional para que los malotes cagen balas.
1108  8B3B
1109  8B3B              Detecta_disparo_entidad
1110  8B3B
1111  8B3B 3A 8A 87     	ld a,(Habilita_disparo_entidad)
1112  8B3E A7           	and a
1113  8B3F C8           	ret z
1114  8B40 3E 7F        	ld a,$7f
1115  8B42 DB FE        	in a,($fe)
1116  8B44 E6 01        	and 1
1117  8B46 C0           	ret nz
1118  8B47 CD 7D 8B     	call Genera_disparo
1119  8B4A C9           	ret
1120  8B4B
1121  8B4B              ; Pinta indicadores de FILAS. ------------------------------------------------------
1122  8B4B
1123  8B4B 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1124  8B4E
1125  8B4E              ; ----------
1126  8B4E 06 20        	ld b,32
1127  8B50 E5           2 push hl
1128  8B51 C5           	push bc
1129  8B52              ; ----------
1130  8B52
1131  8B52 06 BF        	ld b,$bf
1132  8B54 36 80        1 ld (hl),%10000000
1133  8B56 CD 80 92     	call NextScan
1134  8B59 10 F9        	djnz 1B
1135  8B5B
1136  8B5B              ; ----------
1137  8B5B C1           	pop bc
1138  8B5C E1           	pop hl
1139  8B5D 2C           	inc l
1140  8B5E 10 F0        	djnz 2B
1141  8B60              ; ----------
1142  8B60
1143  8B60 06 03        	ld b,3
1144  8B62 21 00 47         ld hl,$4700
1145  8B65 CD 6B 8B     3 call Bucle_1
1146  8B68 10 FB            djnz 3B
1147  8B6A C9               ret
1148  8B6B
1149  8B6B C5           Bucle_1 push bc
1150  8B6C E5                   push hl
1151  8B6D D1                   pop de
1152  8B6E 13                   inc de
1153  8B6F 01 FF 00             ld bc,255
1154  8B72 36 FF                ld (hl),255
1155  8B74 ED B0                ldir
1156  8B76 23                   inc hl
1157  8B77 3E 07                ld a,7
1158  8B79 84                   add a,h
1159  8B7A 67                   ld h,a
1160  8B7B C1                   pop bc
1161  8B7C C9                   ret
1162  8B7D
1163  8B7D              ; ---------------------------------------------------------------
1164  8B7D
1165  8B7D              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8B7D              ; ******************************************************************************************************************************************************************************************
   2+ 8B7D              ;
   3+ 8B7D              ;   17/04/23
   4+ 8B7D              ;
   5+ 8B7D              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8B7D              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8B7D              ;
   8+ 8B7D              ;
   9+ 8B7D              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8B7D              ;
  11+ 8B7D              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8B7D              ;               _ hacen las entidades hacia abajo.
  13+ 8B7D              ;
  14+ 8B7D              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8B7D              ;
  16+ 8B7D              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8B7D              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8B7D              ;
  19+ 8B7D              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8B7D              ;           _ la bala.
  21+ 8B7D              ;
  22+ 8B7D              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8B7D              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8B7D              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8B7D              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8B7D              ;           _ en el momento de generarse la bala)).
  27+ 8B7D
  28+ 8B7D              Genera_disparo
  29+ 8B7D
  30+ 8B7D              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8B7D              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8B7D              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8B7D              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8B7D              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8B7D              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8B7D              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8B7D
  38+ 8B7D              ; Exclusiones:
  39+ 8B7D
  40+ 8B7D 3A 58 87         ld a,(Columnas)
  41+ 8B80 47               ld b,a
  42+ 8B81 3A 21 87         ld a,(Columns)
  43+ 8B84 B8               cp b
  44+ 8B85 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8B86
  46+ 8B86              ; ----- ----- -----
  47+ 8B86
  48+ 8B86 3A 4E 87         ld a,(Ctrl_0)
  49+ 8B89 CB 77            bit 6,a
  50+ 8B8B 20 06            jr nz,14F
  51+ 8B8D
  52+ 8B8D 3A 27 87         ld a,(Coordenada_y)
  53+ 8B90 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8B92 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8B93
  56+ 8B93 21 00 80     14 ld hl,Indice_disparo
  57+ 8B96 3A 28 87         ld a,(CTRL_DESPLZ)
  58+ 8B99 4F               ld c,a
  59+ 8B9A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8B9C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8B9C              ;                                            ""        ""       "f9", B="1"
  62+ 8B9C              ;                                            ""        ""       "fb", B="2"
  63+ 8B9C              ;                                            ""        ""       "fb", B="3"
  64+ 8B9C A7               and a
  65+ 8B9D 28 10            jr z,1F
  66+ 8B9F E6 01            and 1
  67+ 8BA1 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8BA2
  69+ 8BA2 79               ld a,c
  70+ 8BA3 16 F9            ld d,$f9
  71+ 8BA5 23           2 inc hl
  72+ 8BA6 23               inc hl
  73+ 8BA7 04               inc b
  74+ 8BA8 BA               cp d
  75+ 8BA9 28 04            jr z,1F
  76+ 8BAB 14               inc d
  77+ 8BAC 14               inc d
  78+ 8BAD 18 F6            jr 2B
  79+ 8BAF
  80+ 8BAF CD 17 8A     1 call Extrae_address
  81+ 8BB2 E5               push hl
  82+ 8BB3 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8BB5 DD 21 13 95  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8BB9
  85+ 8BB9              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8BB9              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8BB9
  88+ 8BB9 3A 4E 87         ld a,(Ctrl_0)
  89+ 8BBC CB 77            bit 6,a
  90+ 8BBE 20 04            jr nz,19F
  91+ 8BC0
  92+ 8BC0 AF               xor a
  93+ 8BC1 32 8A 87         ld (Habilita_disparo_entidad),a
  94+ 8BC4
  95+ 8BC4 3A 34 87     19 ld a,(Cuad_objeto)
  96+ 8BC7 FE 02            cp 2
  97+ 8BC9 38 66            jr c,3F
  98+ 8BCB 28 64            jr z,3F
  99+ 8BCD
 100+ 8BCD              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8BCD
 102+ 8BCD E6 01            and 1
 103+ 8BCF 28 30            jr z,4F
 104+ 8BD1
 105+ 8BD1              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8BD1              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8BD1              ;
 108+ 8BD1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8BD1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8BD1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8BD1
 112+ 8BD1 2A 22 87     	ld hl,(Posicion_actual)
 113+ 8BD4
 114+ 8BD4              ;   Amadeus o entidad ???.
 115+ 8BD4
 116+ 8BD4 3A 4E 87         ld a,(Ctrl_0)
 117+ 8BD7 CB 77            bit 6,a
 118+ 8BD9 28 0A            jr z,8F
 119+ 8BDB
 120+ 8BDB              ; 	Dispara Amadeus.
 121+ 8BDB
 122+ 8BDB 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8BDD CD 8F 92         call PreviousScan
 124+ 8BE0 CD 8F 92         call PreviousScan
 125+ 8BE3
 126+ 8BE3              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8BE3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8BE3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8BE3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8BE3
 131+ 8BE3 18 11            jr 10F
 132+ 8BE5
 133+ 8BE5              ; 	Dispara Entidad.
 134+ 8BE5
 135+ 8BE5 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8BE8              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8BE8
 138+ 8BE8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8BE8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8BE8
 141+ 8BE8 C5               push bc
 142+ 8BE9 06 10            ld b,16
 143+ 8BEB CD 80 92     9 call NextScan
 144+ 8BEE 10 FB            djnz 9B
 145+ 8BF0 C1               pop bc
 146+ 8BF1 CD 5B 8C         call Ajusta_disparo_parte_izquierda
 147+ 8BF4 18 06            jr 17F
 148+ 8BF6
 149+ 8BF6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8BF6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8BF6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8BF6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8BF6
 154+ 8BF6 CD 5B 8C     10 call Ajusta_disparo_parte_izquierda
 155+ 8BF9 CD D0 8C         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8BFC              ;                                                      ; _al generar el disparo.
 157+ 8BFC
 158+ 8BFC              ; 	LLegados a este punto tendremos:
 159+ 8BFC              ;
 160+ 8BFC              ;       Puntero_objeto_disparo en IY.
 161+ 8BFC              ;       Rutinas_de_impresion en IX.
 162+ 8BFC              ;       Puntero_de_impresion en HL.
 163+ 8BFC              ;       Impacto/Dirección en BC.
 164+ 8BFC
 165+ 8BFC CD 63 8C     17 call Almacena_disparo
 166+ 8BFF 18 52            jr 6F                                             ; RET.
 167+ 8C01
 168+ 8C01              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8C01              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8C01              ;
 171+ 8C01              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8C01              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8C01              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8C01
 175+ 8C01 2A 22 87     4 ld hl,(Posicion_actual)
 176+ 8C04
 177+ 8C04              ;   Amadeus o entidad ???.
 178+ 8C04
 179+ 8C04 3A 4E 87         ld a,(Ctrl_0)
 180+ 8C07 CB 77            bit 6,a
 181+ 8C09 28 0A            jr z,11F
 182+ 8C0B
 183+ 8C0B              ; 	Dispara Amadeus.
 184+ 8C0B
 185+ 8C0B 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8C0D CD 8F 92         call PreviousScan
 187+ 8C10 CD 8F 92         call PreviousScan
 188+ 8C13
 189+ 8C13              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8C13              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8C13              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8C13              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8C13
 194+ 8C13 18 11            jr 13F
 195+ 8C15
 196+ 8C15              ; 	Dispara Entidad.
 197+ 8C15
 198+ 8C15 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8C18              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8C18
 201+ 8C18              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8C18              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8C18
 204+ 8C18 C5               push bc
 205+ 8C19 06 10            ld b,16
 206+ 8C1B CD 80 92     12 call NextScan
 207+ 8C1E 10 FB            djnz 12B
 208+ 8C20 C1               pop bc
 209+ 8C21
 210+ 8C21 CD 54 8C         call Ajusta_disparo_parte_derecha
 211+ 8C24 18 06            jr 18F
 212+ 8C26
 213+ 8C26              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8C26              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8C26              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8C26              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8C26
 218+ 8C26 CD 54 8C     13 call Ajusta_disparo_parte_derecha
 219+ 8C29 CD D0 8C         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8C2C              ;                                                       ; _al generar el disparo.
 221+ 8C2C
 222+ 8C2C              ; LLegados a este punto tendremos:
 223+ 8C2C              ;
 224+ 8C2C              ;       Puntero_objeto_disparo en IY.
 225+ 8C2C              ;       Rutinas_de_impresion en IX.
 226+ 8C2C              ;       Puntero_de_impresion en HL.
 227+ 8C2C              ;       Impacto/Dirección en BC.
 228+ 8C2C
 229+ 8C2C CD 63 8C     18 call Almacena_disparo
 230+ 8C2F 18 22            jr 6F                                               ; RET.
 231+ 8C31
 232+ 8C31              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8C31
 234+ 8C31 28 11        3 jr z,5F
 235+ 8C33
 236+ 8C33              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8C33              ;
 238+ 8C33              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8C33              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8C33              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8C33              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8C33
 243+ 8C33              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8C33              ;	   ""        ""       "f9", B="1"
 245+ 8C33              ;	   ""        ""       "fb", B="2"
 246+ 8C33              ; 	   ""        ""       "fb", B="3"
 247+ 8C33
 248+ 8C33 2A 22 87     	ld hl,(Posicion_actual)
 249+ 8C36 CD 80 92     	call NextScan
 250+ 8C39
 251+ 8C39              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8C39              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8C39              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8C39              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8C39
 256+ 8C39 CD 5B 8C         call Ajusta_disparo_parte_izquierda
 257+ 8C3C
 258+ 8C3C              ; 	No se produce impacto. B="$80"
 259+ 8C3C              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8C3C
 261+ 8C3C 01 80 80         ld bc,$8080
 262+ 8C3F
 263+ 8C3F              ; 	LLegados a este punto tendremos:
 264+ 8C3F              ;
 265+ 8C3F              ;       Puntero_objeto_disparo en IY.
 266+ 8C3F              ;       Rutinas_de_impresion en IX.
 267+ 8C3F              ;       Puntero_de_impresion en HL.
 268+ 8C3F              ;       Impacto/Dirección en BC.
 269+ 8C3F
 270+ 8C3F CD 63 8C         call Almacena_disparo
 271+ 8C42 18 0F            jr 6F                                           ; RET.
 272+ 8C44
 273+ 8C44              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8C44              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8C44              ;
 276+ 8C44              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8C44              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8C44              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8C44              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8C44
 281+ 8C44 2A 22 87     5 ld hl,(Posicion_actual)
 282+ 8C47 CD 80 92     	call NextScan
 283+ 8C4A
 284+ 8C4A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8C4A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8C4A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8C4A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8C4A
 289+ 8C4A CD 54 8C         call Ajusta_disparo_parte_derecha
 290+ 8C4D
 291+ 8C4D              ; 	No se produce impacto. B="$80"
 292+ 8C4D              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8C4D
 294+ 8C4D 01 80 80     15 ld bc,$8080
 295+ 8C50
 296+ 8C50              ; 	LLegados a este punto tendremos:
 297+ 8C50              ;
 298+ 8C50              ;       Puntero_objeto_disparo en IY.
 299+ 8C50              ;       Rutinas_de_impresion en IX.
 300+ 8C50              ;       Puntero_de_impresion en HL.
 301+ 8C50              ;       Impacto/Dirección en BC.
 302+ 8C50
 303+ 8C50 CD 63 8C         call Almacena_disparo
 304+ 8C53
 305+ 8C53 C9           6 ret
 306+ 8C54
 307+ 8C54              ; ----------------------------------------------------------------
 308+ 8C54              ;
 309+ 8C54              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8C54              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8C54              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8C54
 313+ 8C54 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8C55 FE 02            cp 2
 315+ 8C57 38 01            jr c,1F
 316+ 8C59 23               inc hl
 317+ 8C5A C9           1 ret
 318+ 8C5B
 319+ 8C5B 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8C5C FE 01        	cp 1
 321+ 8C5E 20 01        	jr nz,1F
 322+ 8C60 2B           	dec hl
 323+ 8C61 2B           1 dec hl
 324+ 8C62 C9               ret
 325+ 8C63
 326+ 8C63              ; ----------------------------------------------------------------
 327+ 8C63              ;
 328+ 8C63              ;   25/02/23
 329+ 8C63              ;
 330+ 8C63              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8C63              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8C63              ;
 333+ 8C63              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8C63              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8C63
 336+ 8C63              Almacena_disparo
 337+ 8C63
 338+ 8C63 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8C64 F1               pop af
 340+ 8C65 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8C66
 342+ 8C66 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8C67 E6 01            and 1
 344+ 8C69 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8C6B              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8C6B              ; 	Dispara AMADEUS.
 347+ 8C6B
 348+ 8C6B              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8C6B              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8C6B              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8C6B              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8C6B
 353+ 8C6B C5               push bc
 354+ 8C6C 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8C6F 2A 77 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8C72 A7               and a
 357+ 8C73 ED 42            sbc hl,bc
 358+ 8C75 CC E0 89         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8C78 C1               pop bc
 360+ 8C79 28 54            jr z,4F
 361+ 8C7B
 362+ 8C7B 2A 77 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8C7E 23               inc hl
 364+ 8C7F 23               inc hl
 365+ 8C80 22 77 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8C83              ;                                                   ; _ Disparo_(+1).
 367+ 8C83 18 18            jr 2F
 368+ 8C85
 369+ 8C85              ; Dispara una entidad.
 370+ 8C85
 371+ 8C85 C5           1 push bc
 372+ 8C86 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8C89 2A 75 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8C8C A7               and a
 375+ 8C8D ED 42            sbc hl,bc
 376+ 8C8F CC D9 89         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8C92 C1               pop bc
 378+ 8C93 28 3A            jr z,4F
 379+ 8C95
 380+ 8C95 2A 75 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8C98 23               inc hl
 382+ 8C99 23               inc hl
 383+ 8C9A 22 75 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8C9D              ;                                                   ; _ Disparo_(+1).
 385+ 8C9D CD 17 8A     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8CA0              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8CA0              ;
 388+ 8CA0              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8CA0              ;                                                     Rutinas_de_impresion en IX.
 390+ 8CA0              ;                                                     Puntero_de_impresion en HL.
 391+ 8CA0              ;                                                     Impacto/Dirección en BC.
 392+ 8CA0
 393+ 8CA0 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8CA1 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8CA2 23               inc hl                                          ; _ al siguiente.
 396+ 8CA3 A7               and a
 397+ 8CA4 20 C0            jr nz,3B
 398+ 8CA6
 399+ 8CA6 08               ex af,af
 400+ 8CA7 ED 73 6C 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8CAB F9               ld sp,hl
 402+ 8CAC
 403+ 8CAC DD E5            push ix                                         ; Rutina de impresión.
 404+ 8CAE F5               push af                                         ; Puntero de impresión.
 405+ 8CAF FD E5            push iy                                         ; Puntero objeto.
 406+ 8CB1 C5               push bc                                         ; Control.
 407+ 8CB2
 408+ 8CB2 ED 7B 6C 87      ld sp,(Stack)
 409+ 8CB6
 410+ 8CB6              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8CB6
 412+ 8CB6 21 5D 87     	ld hl,Ctrl_1
 413+ 8CB9 CB C6        	set 0,(hl)
 414+ 8CBB
 415+ 8CBB DD E5        	push ix
 416+ 8CBD E1               pop hl
 417+ 8CBE F5               push af
 418+ 8CBF DD E1            pop ix
 419+ 8CC1
 420+ 8CC1 CD A0 7F     	call Guarda_foto_registros
 421+ 8CC4
 422+ 8CC4 21 5D 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8CC7 CB 86        	res 0,(hl)
 424+ 8CC9
 425+ 8CC9              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8CC9              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8CC9
 428+ 8CC9 CD E0 89         call Inicia_Puntero_Disparo_Amadeus
 429+ 8CCC CD D9 89         call Inicia_Puntero_Disparo_Entidades
 430+ 8CCF
 431+ 8CCF C9           4 ret
 432+ 8CD0
 433+ 8CD0              ; ----------------------------------------------------------------
 434+ 8CD0              ;
 435+ 8CD0              ;   4/3/23
 436+ 8CD0              ;
 437+ 8CD0              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8CD0              ;   _ al generarse el disparo.
 439+ 8CD0              ;
 440+ 8CD0              ;       "$80" ..... No se produce colisión.
 441+ 8CD0              ;       "$81" ..... Se produce colisión.
 442+ 8CD0
 443+ 8CD0              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8CD0              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8CD0
 446+ 8CD0
 447+ 8CD0 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8CD2 E5               push hl                                        ; Puntero de impresión.
 449+ 8CD3
 450+ 8CD3 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8CD5 CD F1 8C         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8CD8
 453+ 8CD8 7B               ld a,e
 454+ 8CD9 E6 01            and 1
 455+ 8CDB 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8CDD
 457+ 8CDD E1               pop hl
 458+ 8CDE E5               push hl
 459+ 8CDF CD 80 92         call NextScan
 460+ 8CE2
 461+ 8CE2 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8CE3 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8CE5 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8CE7              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8CE7 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8CE9 CD F1 8C         call Bucle_2
 467+ 8CEC
 468+ 8CEC 43           2 ld b,e
 469+ 8CED E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8CEE FD E1            pop iy
 471+ 8CF0 C9               ret
 472+ 8CF1
 473+ 8CF1               ; ---------- ----------
 474+ 8CF1
 475+ 8CF1 06 02        Bucle_2 ld b,2
 476+ 8CF3 FD 7E 00     2 ld a,(iy)
 477+ 8CF6 A6               and (hl)
 478+ 8CF7 28 02            jr z,1F
 479+ 8CF9 1E 81            ld e,$81
 480+ 8CFB 23           1 inc hl
 481+ 8CFC FD 23            inc iy
 482+ 8CFE 10 F3            djnz 2B
 483+ 8D00 C9               ret
 484+ 8D01
 485+ 8D01              ; -------------------------------------------------------------------------------------------------------------
 486+ 8D01              ;
 487+ 8D01              ;   11/04/23
 488+ 8D01              ;
 489+ 8D01              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8D01              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8D01              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8D01              ;
 493+ 8D01              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8D01
 495+ 8D01              Compara_coordenadas_X
 496+ 8D01
 497+ 8D01              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8D01              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8D01
 500+ 8D01              ; Preparamos registros:
 501+ 8D01
 502+ 8D01 21 26 87         ld hl,Filas+6
 503+ 8D04 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8D05 23               inc hl
 505+ 8D06 23               inc hl
 506+ 8D07 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8D08 43               ld b,e
 508+ 8D09 21 34 87         ld hl,Filas+20
 509+ 8D0C 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8D0D 21 81 87         ld hl,Coordenadas_X_Entidad
 511+ 8D10 CD 21 8F         call Guarda_coordenadas_X
 512+ 8D13
 513+ 8D13              ; Preparamos registros:
 514+ 8D13
 515+ 8D13 21 7C 84         ld hl,Amadeus_db+6
 516+ 8D16 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8D17 23               inc hl
 518+ 8D18 23               inc hl
 519+ 8D19 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8D1A 7B               ld a,e
 521+ 8D1B 08               ex af,af'
 522+ 8D1C 21 8A 84         ld hl,Amadeus_db+20
 523+ 8D1F 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8D20 21 7E 87         ld hl,Coordenadas_X_Amadeus
 525+ 8D23 CD 21 8F         call Guarda_coordenadas_X
 526+ 8D26
 527+ 8D26              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8D26              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8D26
 530+ 8D26 04               inc b
 531+ 8D27 05               dec b
 532+ 8D28 28 04            jr z,1F
 533+ 8D2A 06 03            ld b,3
 534+ 8D2C 18 02            jr 2F
 535+ 8D2E 06 02        1 ld b,2
 536+ 8D30 08           2 ex af,af'
 537+ 8D31 3C               inc a
 538+ 8D32 3D               dec a
 539+ 8D33 28 04            jr z,5F
 540+ 8D35 0E 03            ld c,3
 541+ 8D37 18 02            jr 6F
 542+ 8D39 0E 02        5 ld c,2
 543+ 8D3B 79           6 ld a,c
 544+ 8D3C 08               ex af,af'
 545+ 8D3D 11 81 87         ld de,Coordenadas_X_Entidad
 546+ 8D40 1A           4 ld a,(de)
 547+ 8D41 21 7E 87         ld hl,Coordenadas_X_Amadeus
 548+ 8D44 BE           3 cp (hl)
 549+ 8D45 28 0E            jr z,7F
 550+ 8D47 23               inc hl
 551+ 8D48 0D               dec c
 552+ 8D49 20 F9            jr nz,3B
 553+ 8D4B 13               inc de
 554+ 8D4C 08               ex af,af'
 555+ 8D4D 4F               ld c,a
 556+ 8D4E 08               ex af,af'
 557+ 8D4F 10 EF            djnz 4B
 558+ 8D51
 559+ 8D51              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8D51
 561+ 8D51 CD 60 8F     8 call Limpia_Coordenadas_X
 562+ 8D54 C9               ret
 563+ 8D55
 564+ 8D55              7
 565+ 8D55 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8D57 32 39 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8D5A 21 79 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8D5D CB D6            set 2,(hl)
 569+ 8D5F 18 F0            jr 8B
 570+ 8D61
 571+ 8D61              ; -----------------------------------------------------------------------
 572+ 8D61              ;
 573+ 8D61              ;   17/04/23
 574+ 8D61              ;
 575+ 8D61
 576+ 8D61              Detecta_colision_nave_entidad
 577+ 8D61
 578+ 8D61              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8D61
 580+ 8D61 2A 22 87         ld hl,(Posicion_actual)
 581+ 8D64 CD E5 91         call Calcula_puntero_de_impresion
 582+ 8D67
 583+ 8D67              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8D67              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8D67
 586+ 8D67 DD E5            push ix
 587+ 8D69 E1               pop hl
 588+ 8D6A E5               push hl
 589+ 8D6B
 590+ 8D6B              ; ----- ----- -----
 591+ 8D6B 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8D6D 06 0A            ld b,10
 593+ 8D6F CD 9F 8D     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8D72 7B               ld a,e
 595+ 8D73 FE 05            cp 5
 596+ 8D75 38 0E            jr c,3F
 597+ 8D77
 598+ 8D77              ; LLegados a este punto:
 599+ 8D77              ;
 600+ 8D77              ;   HAY COLISIÓN !!!!!.
 601+ 8D77              ;
 602+ 8D77              ;   .db (Impacto) de Amadeus a "1".
 603+ 8D77              ;   SET el bit3 de (Impacto2).
 604+ 8D77              ;
 605+ 8D77              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8D77
 607+ 8D77 21 8F 84         ld hl,Amadeus_db+25
 608+ 8D7A 36 01            ld (hl),1
 609+ 8D7C 21 79 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8D7F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8D81 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8D83 18 18            jr 1F
 613+ 8D85
 614+ 8D85              ; -----
 615+ 8D85
 616+ 8D85 E1           3 pop hl
 617+ 8D86 CD 80 92         call NextScan
 618+ 8D89 E5               push hl
 619+ 8D8A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8D8B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8D8D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8D8F 30 0C            jr nc,1F
 623+ 8D91              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8D91 10 DC            djnz 2B
 625+ 8D93
 626+ 8D93              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8D93
 628+ 8D93              ; LLegados a este punto:
 629+ 8D93              ;
 630+ 8D93              ;   NO HAY COLISIÓN !!!!!.
 631+ 8D93              ;
 632+ 8D93              ;   .db (Impacto) de Amadeus a "0".
 633+ 8D93              ;   RES el bit2 de (Impacto2).
 634+ 8D93              ;
 635+ 8D93              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8D93              ;   Lo colocamos a "0".
 637+ 8D93
 638+ 8D93 21 79 87         ld hl,Impacto2
 639+ 8D96 CB 96            res 2,(hl)
 640+ 8D98 2A 7A 87         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8D9B 36 00            ld (hl),0
 642+ 8D9D
 643+ 8D9D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8D9E C9               ret
 645+ 8D9F
 646+ 8D9F               ; ---------- ----------
 647+ 8D9F
 648+ 8D9F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8DA0 3A 21 87         ld a,(Columns)
 650+ 8DA3 47               ld b,a
 651+ 8DA4 FD 7E 00     2 ld a,(iy)
 652+ 8DA7 BE               cp (hl)
 653+ 8DA8 28 01            jr z,1F
 654+ 8DAA
 655+ 8DAA 1C               inc e
 656+ 8DAB
 657+ 8DAB 23           1 inc hl
 658+ 8DAC FD 23            inc iy
 659+ 8DAE 10 F4            djnz 2B
 660+ 8DB0 C1               pop bc
 661+ 8DB1 C9               ret
 662+ 8DB2
 663+ 8DB2              ; -------------------------------------------------------------------------------------------------------------
 664+ 8DB2              ;
 665+ 8DB2              ;   13/03/23
 666+ 8DB2              ;
 667+ 8DB2              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8DB2              ;
 669+ 8DB2              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8DB2
 671+ 8DB2 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8DB5 7E               ld a,(hl)
 673+ 8DB6 A7               and a
 674+ 8DB7 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8DB8
 676+ 8DB8 44               ld b,h
 677+ 8DB9 4D               ld c,l
 678+ 8DBA 2A 72 87         ld hl,(Stack_snapshot_disparos)
 679+ 8DBD E5               push hl
 680+ 8DBE A7               and a
 681+ 8DBF ED 42            sbc hl,bc
 682+ 8DC1 E5               push hl
 683+ 8DC2 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8DC3
 685+ 8DC3 E1               pop hl
 686+ 8DC4 54               ld d,h
 687+ 8DC5 5D               ld e,l
 688+ 8DC6 1B               dec de
 689+ 8DC7 ED B8            lddr                                                ; Limpiamos.
 690+ 8DC9
 691+ 8DC9 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8DCC 22 72 87         ld (Stack_snapshot_disparos),hl
 693+ 8DCF
 694+ 8DCF C9               ret
 695+ 8DD0
 696+ 8DD0              ; -------------------------------------------------------------------------------------------------------------
 697+ 8DD0              ;
 698+ 8DD0              ;   28/03/23
 699+ 8DD0              ;
 700+ 8DD0
 701+ 8DD0 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8DD3 2A 77 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8DD6
 704+ 8DD6 CD 17 8A     2 call Extrae_address
 705+ 8DD9 7E               ld a,(hl)
 706+ 8DDA A7               and a
 707+ 8DDB 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8DDD
 709+ 8DDD              ; ----- ----- ----- ----- ----- -----
 710+ 8DDD
 711+ 8DDD C5               push bc
 712+ 8DDE CD 9A 8E         call foto_disparo_a_borrar
 713+ 8DE1
 714+ 8DE1              ; Existe colisión con este disparo???
 715+ 8DE1
 716+ 8DE1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8DE2 7E               ld a,(hl)
 718+ 8DE3 2B               dec hl
 719+ 8DE4 E6 01            and 1
 720+ 8DE6 28 1D            jr z,9F
 721+ 8DE8
 722+ 8DE8              ;   En este punto:
 723+ 8DE8              ;
 724+ 8DE8              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8DE8              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8DE8              ;   _con la entidad).
 727+ 8DE8              ;
 728+ 8DE8              ;   Disparo_2A defw 0                                ; Control.
 729+ 8DE8              ;    defw 0                                          ; Puntero objeto.
 730+ 8DE8              ;    defw 0                                          ; Puntero de impresión.
 731+ 8DE8              ;    defw 0                                          ; Rutina de impresión.
 732+ 8DE8
 733+ 8DE8 E5               push hl
 734+ 8DE9
 735+ 8DE9 06 04            ld b,4
 736+ 8DEB 23           19 inc hl
 737+ 8DEC 10 FD            djnz 19B
 738+ 8DEE
 739+ 8DEE CD 17 8A         call Extrae_address
 740+ 8DF1 CD AB 98         call Genera_coordenadas_disparo
 741+ 8DF4
 742+ 8DF4              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8DF4
 744+ 8DF4 21 7C 87         ld hl,Coordenadas_disparo_certero
 745+ 8DF7 72               ld (hl),d
 746+ 8DF8 23               inc hl
 747+ 8DF9 73               ld (hl),e
 748+ 8DFA
 749+ 8DFA              ; Elimino el disparo de la base de datos.
 750+ 8DFA
 751+ 8DFA E1               pop hl
 752+ 8DFB CD 16 8F         call Elimina_disparo_de_base_de_datos
 753+ 8DFE 21 79 87         ld hl,Impacto2
 754+ 8E01 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8E03
 756+ 8E03 18 06            jr 11F
 757+ 8E05
 758+ 8E05 CD C3 8E     9 call Mueve_disparo
 759+ 8E08 CD 9A 8E         call foto_disparo_a_borrar
 760+ 8E0B
 761+ 8E0B C1           11 pop bc
 762+ 8E0C 18 04            jr 7F
 763+ 8E0E
 764+ 8E0E              ; ----- ----- ----- ----- ----- -----
 765+ 8E0E
 766+ 8E0E ED 42        1 sbc hl,bc
 767+ 8E10 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8E12 2A 77 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8E15 23               inc hl
 770+ 8E16 23               inc hl
 771+ 8E17 22 77 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8E1A 18 BA            jr 2B
 773+ 8E1C CD E0 89     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8E1F
 775+ 8E1F 01 66 84         ld bc,Disparo_11
 776+ 8E22 2A 75 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8E25
 778+ 8E25 CD 17 8A     5 call Extrae_address
 779+ 8E28 7E               ld a,(hl)
 780+ 8E29 A7               and a
 781+ 8E2A 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8E2C
 783+ 8E2C              ; ----- ----- ----- ----- ----- -----
 784+ 8E2C
 785+ 8E2C C5               push bc
 786+ 8E2D CD 9A 8E         call foto_disparo_a_borrar
 787+ 8E30
 788+ 8E30              ; Existe colisión con este disparo???
 789+ 8E30
 790+ 8E30 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8E31 7E               ld a,(hl)
 792+ 8E32 2B               dec hl
 793+ 8E33 E6 01            and 1
 794+ 8E35 28 48            jr z,10F
 795+ 8E37
 796+ 8E37              ; La colisión se produce con Amadeus???
 797+ 8E37              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8E37
 799+ 8E37 E5               push hl
 800+ 8E38
 801+ 8E38 06 04            ld b,4
 802+ 8E3A 23           16 inc hl
 803+ 8E3B 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8E3D CD 17 8A         call Extrae_address
 805+ 8E40 CD AB 98         call Genera_coordenadas_disparo
 806+ 8E43
 807+ 8E43 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8E44 FE 16            cp $16
 809+ 8E46 38 22            jr c,15F
 810+ 8E48
 811+ 8E48              ; (Colisiones en filas 16 y 17).
 812+ 8E48
 813+ 8E48 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8E49
 815+ 8E49              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8E49
 817+ 8E49 21 7C 84         ld hl,Amadeus_db+6
 818+ 8E4C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8E4D 23               inc hl
 820+ 8E4E 23               inc hl
 821+ 8E4F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8E50 21 8A 84         ld hl,Amadeus_db+20
 823+ 8E53 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8E54 21 7E 87         ld hl,Coordenadas_X_Amadeus
 825+ 8E57 CD 21 8F         call Guarda_coordenadas_X
 826+ 8E5A
 827+ 8E5A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8E5B
 829+ 8E5B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8E5B
 831+ 8E5B 06 03            ld b,3
 832+ 8E5D 21 7E 87         ld hl,Coordenadas_X_Amadeus
 833+ 8E60 7E           18 ld a,(hl)
 834+ 8E61 BA               cp d
 835+ 8E62 20 03            jr nz,17F
 836+ 8E64
 837+ 8E64              ; Colisión Amadeus !!!!!!!!!!
 838+ 8E64
 839+ 8E64 E1               pop hl
 840+ 8E65 18 09            jr 14F
 841+ 8E67
 842+ 8E67 23           17 inc hl
 843+ 8E68 10 F6            djnz 18B
 844+ 8E6A
 845+ 8E6A              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8E6A              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8E6A
 848+ 8E6A E1           15 pop hl
 849+ 8E6B 23               inc hl
 850+ 8E6C 35               dec (hl)
 851+ 8E6D 2B               dec hl
 852+ 8E6E 18 0F            jr 10F
 853+ 8E70
 854+ 8E70              ; -----------------------debug
 855+ 8E70
 856+ 8E70              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8E70              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8E70
 859+ 8E70 E5           14 push hl
 860+ 8E71 CD 16 8F         call Elimina_disparo_de_base_de_datos
 861+ 8E74 21 79 87         ld hl,Impacto2
 862+ 8E77 CB CE            set 1,(hl)
 863+ 8E79 CD 60 8F         call Limpia_Coordenadas_X
 864+ 8E7C
 865+ 8E7C E1               pop hl
 866+ 8E7D 18 06            jr 12F
 867+ 8E7F
 868+ 8E7F CD C3 8E     10 call Mueve_disparo
 869+ 8E82 CD 9A 8E         call foto_disparo_a_borrar
 870+ 8E85 C1           12 pop bc
 871+ 8E86
 872+ 8E86 18 04            jr 8F
 873+ 8E88
 874+ 8E88              ; ----- ----- ----- ----- ----- -----
 875+ 8E88
 876+ 8E88 ED 42        4 sbc hl,bc
 877+ 8E8A 28 0A            jr z,6F
 878+ 8E8C
 879+ 8E8C 2A 75 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8E8F 23               inc hl
 881+ 8E90 23               inc hl
 882+ 8E91 22 75 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8E94 18 8F            jr 5B
 884+ 8E96
 885+ 8E96 CD D9 89     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8E99 C9               ret
 887+ 8E9A
 888+ 8E9A              ; ------------------------------------------------------------------
 889+ 8E9A
 890+ 8E9A              foto_disparo_a_borrar
 891+ 8E9A
 892+ 8E9A 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8E9B A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8E9C C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8E9D
 896+ 8E9D E5               push hl
 897+ 8E9E 23               inc hl
 898+ 8E9F 23               inc hl
 899+ 8EA0 ED 73 6C 87      ld (Stack),sp
 900+ 8EA4 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8EA5 FD E1            pop iy
 902+ 8EA7 DD E1            pop ix
 903+ 8EA9 E1               pop hl
 904+ 8EAA ED 7B 6C 87      ld sp,(Stack)
 905+ 8EAE 3A 5D 87         ld a,(Ctrl_1)
 906+ 8EB1 CB C7            set 0,a
 907+ 8EB3 32 5D 87         ld (Ctrl_1),a
 908+ 8EB6 CD A0 7F         call Guarda_foto_registros
 909+ 8EB9 3A 5D 87         ld a,(Ctrl_1)
 910+ 8EBC CB 87            res 0,a
 911+ 8EBE 32 5D 87         ld (Ctrl_1),a
 912+ 8EC1 E1               pop hl
 913+ 8EC2 C9               ret
 914+ 8EC3
 915+ 8EC3 E5           Mueve_disparo push hl
 916+ 8EC4 7E               ld a,(hl)
 917+ 8EC5 06 04            ld b,4
 918+ 8EC7 23           1 inc hl
 919+ 8EC8 10 FD            djnz 1B
 920+ 8ECA
 921+ 8ECA              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8ECA
 923+ 8ECA CD 17 8A         call Extrae_address
 924+ 8ECD
 925+ 8ECD E6 01            and 1
 926+ 8ECF 28 2B            jr z,2F
 927+ 8ED1
 928+ 8ED1              ; Disparo hacia arriba, (Amadeus).
 929+ 8ED1
 930+ 8ED1              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8ED1              ; _ de la dificultad.
 932+ 8ED1
 933+ 8ED1 CD 8F 92         call PreviousScan
 934+ 8ED4 CD 8F 92         call PreviousScan
 935+ 8ED7 CD 8F 92         call PreviousScan
 936+ 8EDA
 937+ 8EDA              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8EDA
 939+ 8EDA 7C               ld a,h
 940+ 8EDB FE 40            cp $40
 941+ 8EDD 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8EDF
 943+ 8EDF              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8EDF
 945+ 8EDF EB               ex de,hl
 946+ 8EE0 06 04            ld b,4
 947+ 8EE2 2B           6 dec hl
 948+ 8EE3 10 FD            djnz 6B
 949+ 8EE5
 950+ 8EE5 CD 16 8F         call Elimina_disparo_de_base_de_datos
 951+ 8EE8 E1               pop hl
 952+ 8EE9 18 10            jr 7F
 953+ 8EEB
 954+ 8EEB              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8EEB
 956+ 8EEB D5           3 push de
 957+ 8EEC C5               push bc
 958+ 8EED
 959+ 8EED CD D0 8C         call Comprueba_Colision
 960+ 8EF0
 961+ 8EF0              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 8EF0
 963+ 8EF0 78               ld a,b
 964+ 8EF1
 965+ 8EF1 C1               pop bc
 966+ 8EF2 D1               pop de
 967+ 8EF3
 968+ 8EF3 EB               ex de,hl
 969+ 8EF4
 970+ 8EF4 73               ld (hl),e
 971+ 8EF5 23               inc hl
 972+ 8EF6 72               ld (hl),d
 973+ 8EF7
 974+ 8EF7 E1           4 pop hl
 975+ 8EF8 23               inc hl
 976+ 8EF9 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 8EFA 2B               dec hl
 978+ 8EFB C9           7 ret
 979+ 8EFC
 980+ 8EFC              ; Disparo hacia abajo, (Entidad).
 981+ 8EFC
 982+ 8EFC              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 8EFC              ; _ de la dificultad.
 984+ 8EFC
 985+ 8EFC CD 80 92     2 call NextScan
 986+ 8EFF CD 80 92         call NextScan
 987+ 8F02 CD 80 92         call NextScan
 988+ 8F05
 989+ 8F05              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 8F05
 991+ 8F05 7C               ld a,h
 992+ 8F06 FE 58            cp $58
 993+ 8F08 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 8F0A
 995+ 8F0A EB               ex de,hl
 996+ 8F0B 06 04            ld b,4
 997+ 8F0D 2B           5 dec hl
 998+ 8F0E 10 FD            djnz 5B
 999+ 8F10
1000+ 8F10 CD 16 8F         call Elimina_disparo_de_base_de_datos
1001+ 8F13 E1               pop hl
1002+ 8F14 18 E5            jr 7B
1003+ 8F16
1004+ 8F16              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 8F16
1006+ 8F16 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 8F19 AF               xor a
1008+ 8F1A 77               ld (hl),a
1009+ 8F1B 54               ld d,h
1010+ 8F1C 5D               ld e,l
1011+ 8F1D 13               inc de
1012+ 8F1E ED B0            ldir
1013+ 8F20 C9               ret
1014+ 8F21
1015+ 8F21              ; -----------------------------------------------------------------
1016+ 8F21              ;
1017+ 8F21              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 8F21              ;
1019+ 8F21              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 8F21              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 8F21              ;
1022+ 8F21              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 8F21              ;
1024+ 8F21              ;   INPUTS:
1025+ 8F21              ;
1026+ 8F21              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 8F21              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 8F21              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 8F21
1030+ 8F21              ;   MODIFICA: A, HL, DE y C
1031+ 8F21
1032+ 8F21 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 8F22 79               ld a,c
1034+ 8F23 E6 01            and 1
1035+ 8F25 20 03            jr nz,1F
1036+ 8F27 14               inc d
1037+ 8F28 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 8F2A
1039+ 8F2A              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 8F2A              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 8F2A
1042+ 8F2A 15           1 dec d
1043+ 8F2B 23           2 inc hl
1044+ 8F2C 72               ld (hl),d
1045+ 8F2D
1046+ 8F2D 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 8F2E A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 8F2F C8               ret z
1049+ 8F30
1050+ 8F30 AF               xor a
1051+ 8F31 5F               ld e,a
1052+ 8F32 18 ED            jr Guarda_coordenadas_X
1053+ 8F34
1054+ 8F34              ; -----------------------------------------------------------------
1055+ 8F34              ;
1056+ 8F34              ;   12/04/23
1057+ 8F34              ;
1058+ 8F34
1059+ 8F34 3A 79 87     Selector_de_impactos ld a,(Impacto2)
1060+ 8F37 A7               and a
1061+ 8F38 C8               ret z
1062+ 8F39
1063+ 8F39 FE 04            cp 4
1064+ 8F3B 20 09            jr nz,1F
1065+ 8F3D
1066+ 8F3D
1067+ 8F3D              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 8F3D
1069+ 8F3D CD 61 8D         call Detecta_colision_nave_entidad
1070+ 8F40
1071+ 8F40 21 79 87         ld hl,Impacto2
1072+ 8F43 CB 5E            bit 3,(hl)
1073+ 8F45 C0               ret nz                                               ; Existe colisión, RET.
1074+ 8F46
1075+ 8F46              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 8F46              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 8F46
1078+ 8F46 21 79 87     1 ld hl,Impacto2
1079+ 8F49 CB 4E            bit 1,(hl)
1080+ 8F4B 28 07            jr z,2F
1081+ 8F4D
1082+ 8F4D 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 8F50 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 8F52 18 0B            jr 3F
1085+ 8F54
1086+ 8F54 21 79 87     2 ld hl,Impacto2
1087+ 8F57 CB 46            bit 0,(hl)
1088+ 8F59 C8               ret z
1089+ 8F5A
1090+ 8F5A              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 8F5A
1092+ 8F5A 21 5D 87         ld hl,Ctrl_1
1093+ 8F5D CB D6            set 2,(hl)
1094+ 8F5F
1095+ 8F5F C9           3 ret
1096+ 8F60
1097+ 8F60              ; -----------------------------------------------------------------
1098+ 8F60              ;
1099+ 8F60              ;   16/04/23
1100+ 8F60              ;
1101+ 8F60
1102+ 8F60 AF           Limpia_Coordenadas_X xor a
1103+ 8F61 06 06            ld b,6
1104+ 8F63 21 7E 87         ld hl,Coordenadas_X_Amadeus
1105+ 8F66 77           1 ld (hl),a
1106+ 8F67 23               inc hl
1107+ 8F68 10 FC            djnz 1B
1108+ 8F6A C9               ret
1109+ 8F6B
1110+ 8F6B              ; -----------------------------------------------------------------
1111+ 8F6B              ;
1112+ 8F6B              ;   25/04/23
1113+ 8F6B              ;
1114+ 8F6B
1115+ 8F6B              Determina_resultado_comparativa
1116+ 8F6B
1117+ 8F6B              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 8F6B              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 8F6B              ;
1120+ 8F6B              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 8F6B              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 8F6B              ;
1123+ 8F6B              ;   SBC HL,DE
1124+ 8F6B
1125+ 8F6B 7C               ld a,h
1126+ 8F6C 06 00            ld b,0
1127+ 8F6E
1128+ 8F6E CD 7E 8F         call Compara_cositas
1129+ 8F71
1130+ 8F71 04               inc b
1131+ 8F72 05               dec b
1132+ 8F73 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 8F74
1134+ 8F74 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 8F75 06 00            ld b,0
1136+ 8F77
1137+ 8F77 CD 7E 8F         call Compara_cositas
1138+ 8F7A 18 01            jr 2F
1139+ 8F7C
1140+ 8F7C 04           1 inc b
1141+ 8F7D C9           2 ret
1142+ 8F7E
1143+ 8F7E A7           Compara_cositas and a
1144+ 8F7F 28 17            jr z,1F
1145+ 8F81
1146+ 8F81 FE FD            cp $fd
1147+ 8F83 28 13            jr z,1F
1148+ 8F85 FE FE            cp $fe
1149+ 8F87 28 0F            jr z,1F
1150+ 8F89 FE FF            cp $ff
1151+ 8F8B 28 0B            jr z,1F
1152+ 8F8D FE 01            cp $01
1153+ 8F8F 28 07            jr z,1F
1154+ 8F91 FE 02            cp $02
1155+ 8F93 28 03            jr z,1F
1156+ 8F95 FE 03            cp $03
1157+ 8F97 C0               ret nz
1158+ 8F98
1159+ 8F98 04           1 inc b
1160+ 8F99 C9               ret
1161+ 8F9A
# file closed: Disparo.asm
1166  8F9A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F9A              ; ******************************************************************************************************************************************************************************************
   2+ 8F9A              ;
   3+ 8F9A              ; 01/23
   4+ 8F9A              ;
   5+ 8F9A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F9A
   7+ 8F9A CD 74 92     Draw call Prepara_draw
   8+ 8F9D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8F9E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8F9F 28 05        	jr z,2F
  11+ 8FA1
  12+ 8FA1 3A 34 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8FA4 18 0C        	jr 1F
  14+ 8FA6 2A 32 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8FA9 22 22 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8FAC CD 3B 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8FAF              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8FAF CD CE 99     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8FB2 3A 4E 87     1 ld a,(Ctrl_0)
  20+ 8FB5 CB 6F        	bit 5,a
  21+ 8FB7 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8FB9
  23+ 8FB9 CD D1 8F     	call Comprueba_limite_horizontal
  24+ 8FBC CD 61 90     	call Comprueba_limite_vertical
  25+ 8FBF
  26+ 8FBF              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8FBF
  28+ 8FBF CD AE 91     3 call calcula_CColumnass
  29+ 8FC2 CD E5 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8FC5 CD 3A 92     	call Define_rutina_de_impresion
  31+ 8FC8
  32+ 8FC8 3A 4E 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8FCB CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8FCD 32 4E 87     	ld (Ctrl_0),a
  35+ 8FD0
  36+ 8FD0 C9           	ret
  37+ 8FD1
  38+ 8FD1              ; *******************************************************************************************************************************************************************************************
  39+ 8FD1              ;	21/01/23
  40+ 8FD1              ;
  41+ 8FD1              ; 	Comprueba_limite_horizontal.
  42+ 8FD1              ;
  43+ 8FD1              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8FD1              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8FD1              ;
  46+ 8FD1              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8FD1              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8FD1              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8FD1              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8FD1
  51+ 8FD1
  52+ 8FD1
  53+ 8FD1 3A 4E 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8FD4 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8FD6 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8FD8 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8FDA 32 4E 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8FDD 18 09            jr 6F
  59+ 8FDF CB 5F        1 bit 3,a
  60+ 8FE1 28 0A            jr z,2F
  61+ 8FE3 E6 F7            and $f7
  62+ 8FE5 32 4E 87         ld (Ctrl_0),a
  63+ 8FE8 CD 3B 91     6 call Inicializacion
  64+ 8FEB 18 5B            jr 5F
  65+ 8FED E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8FEE
  67+ 8FEE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8FEE              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8FEE
  70+ 8FEE EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8FEF 2A 59 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8FF2 CD 40 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8FF5 67           	ld h,a
  74+ 8FF6 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8FF7 CD 40 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8FFA 67           	ld h,a
  77+ 8FFB A7           	and a
  78+ 8FFC ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8FFE 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8FFF 3A 34 87     	ld a,(Cuad_objeto)
  81+ 9002 FE 02        	cp 2
  82+ 9004 38 1E        	jr c,3F
  83+ 9006 28 1C        	jr z,3F
  84+ 9008 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9009 28 23            jr z,7F
  86+ 900B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 900D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 900F E1           	pop hl
  89+ 9010
  90+ 9010              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 9010              ; _para indicar con E="2" en caso necesario.
  92+ 9010
  93+ 9010 E5               push hl
  94+ 9011 C5               push bc
  95+ 9012 CD 40 95     	call calcula_tercio
  96+ 9015 FE 01        	cp 1
  97+ 9017 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 9019 CD 49 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 901C 28 26            jr z,9F
 100+ 901E 38 24            jr c,9F
 101+ 9020 1E 00        11 ld e,0
 102+ 9022 18 22            jr 8F
 103+ 9024 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 9025 28 07        	jr z, 7F
 105+ 9027 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 9029 1E 00         	ld e,0
 107+ 902B E1           	pop hl
 108+ 902C 18 04        	jr 4F
 109+ 902E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9030 18 15            jr 10F
 111+ 9032
 112+ 9032              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 9032              ; _para indicar con E="2" en caso necesario.
 114+ 9032
 115+ 9032 E5           4 push hl
 116+ 9033 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 9034 CD 40 95     	call calcula_tercio
 118+ 9037 FE 01        	cp 1
 119+ 9039 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 903B CD 49 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 903E 28 04            jr z,9F
 122+ 9040 30 02            jr nc,9F
 123+ 9042 18 02        	jr 8F
 124+ 9044 1E 02        9 ld e,2
 125+ 9046 C1           8 pop bc
 126+ 9047 E1           10 pop hl
 127+ 9048 C9           5 ret
 128+ 9049
 129+ 9049              ; --------------------
 130+ 9049              ;
 131+ 9049              ; 25/08/22
 132+ 9049
 133+ 9049 CD 40 95     Comprueba_centro call calcula_tercio
 134+ 904C 67               ld h,a
 135+ 904D 08           	ex af,af
 136+ 904E FE 02        	cp 2
 137+ 9050 38 07        	jr c,1F
 138+ 9052 28 05        	jr z,1F
 139+ 9054 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 9057 18 03        	jr 2F
 141+ 9059 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 905C 08           2 ex af,af
 143+ 905D A7               and a
 144+ 905E ED 42            sbc hl,bc
 145+ 9060 C9               ret
 146+ 9061
 147+ 9061              ; *********************************************************************************************************************************************************************************************
 148+ 9061              ;
 149+ 9061              ;   16/8/22
 150+ 9061              ;
 151+ 9061              ;	Comprueba_limite_vertical
 152+ 9061              ;
 153+ 9061              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 9061              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 9061              ;
 156+ 9061
 157+ 9061 2A 22 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 9064 7D           	ld a,l
 159+ 9065 E6 1F        	and $1F
 160+ 9067 57           	ld d,a
 161+ 9068 3A 5B 87     	ld a,(Limite_vertical)
 162+ 906B BA           	cp d 											; Límite - Posición.
 163+ 906C 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 906D 3A 34 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9070 CB 47        	bit 0,a
 166+ 9072 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9074
 168+ 9074              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9074
 170+ 9074 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9075 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9077
 173+ 9077              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9077              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9077
 176+ 9077 3A 26 87         ld a,(Coordenada_X)
 177+ 907A 16 0F            ld d,Centro_izquierda
 178+ 907C A7               and a
 179+ 907D 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 907E 28 1E            jr z,3F
 181+ 9080 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 9082              ;                                                    ; _salimos sin modificar nada.
 183+ 9082 18 0E            jr 2F
 184+ 9084 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9085 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9087
 187+ 9087              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9087              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9087
 190+ 9087 3A 26 87         ld a,(Coordenada_X)
 191+ 908A 16 10            ld d,Centro_derecha
 192+ 908C A7               and a
 193+ 908D 92               sub d
 194+ 908E 28 0E            jr z,3F
 195+ 9090 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9092              ;                                                    ; _salimos sin modificar nada.
 197+ 9092 CB 43        2 bit 0,e
 198+ 9094 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9096 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9097 CD 2B 91         call Modificaccionne
 201+ 909A C1           	pop bc
 202+ 909B CD 3B 91         call Inicializacion
 203+ 909E C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 909F
 205+ 909F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 909F
 207+ 909F C5           4 push bc
 208+ 90A0 01 21 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 90A3 0A           	ld a,(bc)
 210+ 90A4 3D           	dec a
 211+ 90A5 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 90A6 7D           	ld a,l
 213+ 90A7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 90A8 CB 47        	bit 0,a
 215+ 90AA 28 03        	jr z,5F
 216+ 90AC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 90AD 18 2E        	jr 7F
 218+ 90AF
 219+ 90AF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 90AF
 221+ 90AF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 90B0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 90B1 3A 4E 87     	ld a,(Ctrl_0)
 224+ 90B4 CB 4F        	bit 1,a
 225+ 90B6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 90B8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 90B9
 228+ 90B9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 90B9
 230+ 90B9 1C               inc e
 231+ 90BA 1D               dec e
 232+ 90BB 20 07            jr nz,12F
 233+ 90BD 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 90BE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 90BF 22 22 87     	ld (Posicion_actual),hl
 236+ 90C2 18 44        13 jr 9F
 237+ 90C4 CB 43        12 bit 0,e
 238+ 90C6 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 90C8              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 90C8 C1           	pop bc
 241+ 90C9 18 D3        	jr 3B
 242+ 90CB 80           14 add b
 243+ 90CC 6F               ld l,a
 244+ 90CD 22 22 87     	ld (Posicion_actual),hl
 245+ 90D0 CD 2B 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 90D3 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 90D5 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 90D7 32 4E 87         ld (Ctrl_0),a
 249+ 90DA F1           	pop af
 250+ 90DB 18 2B        	jr 9F
 251+ 90DD
 252+ 90DD              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 90DD
 254+ 90DD F5           7 push af
 255+ 90DE 3A 4E 87     	ld a,(Ctrl_0)
 256+ 90E1 CB 47        	bit 0,a
 257+ 90E3 20 1D        	jr nz,8F
 258+ 90E5 F1           	pop af
 259+ 90E6
 260+ 90E6              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 90E6
 262+ 90E6 1C           	inc e
 263+ 90E7 1D               dec e
 264+ 90E8 20 07            jr nz,10F
 265+ 90EA 90           	sub b
 266+ 90EB 6F               ld l,a
 267+ 90EC 22 22 87     	ld (Posicion_actual),hl
 268+ 90EF 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 90F1              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 90F1 CB 43        10 bit 0,e
 271+ 90F3 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 90F5              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 90F5 C1           	pop bc
 274+ 90F6 18 A6        	jr 3B
 275+ 90F8 90           16 sub b
 276+ 90F9 6F               ld l,a
 277+ 90FA 22 22 87     	ld (Posicion_actual),hl
 278+ 90FD CD 2B 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9100 18 06            jr 9F
 280+ 9102 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9104 32 4E 87         ld (Ctrl_0),a
 282+ 9107 F1           	pop af
 283+ 9108 C1           9 pop bc
 284+ 9109 1E 00        	ld e,0
 285+ 910B CD 3B 91         call Inicializacion
 286+ 910E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 910F 08           	ex af,af
 288+ 9110 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 9111 18 8B            jr 3B
 290+ 9113
 291+ 9113              ; --------------------
 292+ 9113
 293+ 9113 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9115 CD 8F 92     1 call PreviousScan
 295+ 9118 10 FB            djnz 1B
 296+ 911A 22 22 87     	ld (Posicion_actual),hl
 297+ 911D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 911E C9           	ret
 299+ 911F
 300+ 911F              ; --------------------
 301+ 911F
 302+ 911F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 9121 CD 80 92     1 call NextScan
 304+ 9124 10 FB            djnz 1B
 305+ 9126 22 22 87     	ld (Posicion_actual),hl
 306+ 9129 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 912A C9           	ret
 308+ 912B
 309+ 912B              ; --------------------
 310+ 912B              ;
 311+ 912B              ;	22/01/23
 312+ 912B              ;
 313+ 912B              ;	E="1". Hemos cambiado de cuadrante.
 314+ 912B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 912B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 912B
 317+ 912B
 318+ 912B              Modificaccionne
 319+ 912B
 320+ 912B 3A 34 87     	ld a,(Cuad_objeto)
 321+ 912E FE 02        	cp 2
 322+ 9130 CC 13 91         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 9133 DC 13 91         call c,Modifica_Pos_actual
 324+ 9136 C8           	ret z
 325+ 9137 CD 1F 91         call Modifica_Pos_actual2
 326+ 913A C9               ret
 327+ 913B
 328+ 913B              ; *************************************************************************************************************************************************************************************************
 329+ 913B              ;
 330+ 913B              ;	13/8/22
 331+ 913B              ;
 332+ 913B              ;	Inicializacion
 333+ 913B              ;
 334+ 913B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 913B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 913B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 913B              ;
 338+ 913B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 913B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 913B              ;	_ desaparece/aparece.
 341+ 913B
 342+ 913B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 913B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 913B              ;
 345+ 913B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 913B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 913B              ; 		   [E] ="0"
 348+ 913B
 349+ 913B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 913B
 351+ 913B CD 40 95     Inicializacion call calcula_tercio
 352+ 913E 28 36        	jr z,primit
 353+ 9140 E6 02        	and 2
 354+ 9142 20 07        	jr nz,segmit
 355+ 9144 7D           	ld a,l
 356+ 9145 FE 7F        	cp $7f
 357+ 9147 38 2D        	jr c,primit
 358+ 9149 28 2B        	jr z,primit
 359+ 914B CD A8 91     segmit call column
 360+ 914E 38 13        	jr c,tercuad
 361+ 9150 3E 04        cuarcuad ld a,4
 362+ 9152 32 34 87     	ld (Cuad_objeto),a
 363+ 9155 21 20 48     	ld hl,$4820
 364+ 9158 22 59 87     	ld (Limite_horizontal),hl
 365+ 915B 21 5B 87     	ld hl,Limite_vertical
 366+ 915E 36 0D        	ld (hl),$0d
 367+ 9160 08           	ex af,af
 368+ 9161 18 3C        	jr 1F
 369+ 9163              tercuad
 370+ 9163 3E 03        	ld a,3
 371+ 9165 32 34 87     	ld (Cuad_objeto),a
 372+ 9168 21 20 48     	ld hl,$4820
 373+ 916B 22 59 87     	ld (Limite_horizontal),hl
 374+ 916E 21 5B 87     	ld hl,Limite_vertical
 375+ 9171 36 12        	ld (hl),$12
 376+ 9173 08           	ex af,af
 377+ 9174 18 29        	jr 1F
 378+ 9176 CD A8 91     primit call column
 379+ 9179 38 13        	jr c, primcuad
 380+ 917B              segcuad
 381+ 917B 3E 02        	ld a,2
 382+ 917D 32 34 87     	ld (Cuad_objeto),a
 383+ 9180 21 C0 4F     	ld hl,$4fc0
 384+ 9183 22 59 87     	ld (Limite_horizontal),hl
 385+ 9186 21 5B 87     	ld hl,Limite_vertical
 386+ 9189 36 0D        	ld (hl),$0d
 387+ 918B 08           	ex af,af
 388+ 918C 18 11        	jr 1F
 389+ 918E              primcuad
 390+ 918E 3E 01        	ld a,1
 391+ 9190 32 34 87     	ld (Cuad_objeto),a
 392+ 9193 21 C0 4F     	ld hl,$4fc0
 393+ 9196 22 59 87     	ld (Limite_horizontal),hl
 394+ 9199 21 5B 87     	ld hl,Limite_vertical
 395+ 919C 36 12        	ld (hl),$12
 396+ 919E 08           	ex af,af
 397+ 919F CD 80 98     1 call Genera_coordenadas
 398+ 91A2 21 4E 87     	ld hl,Ctrl_0
 399+ 91A5 CB EE        	set 5,(hl)
 400+ 91A7 C9           	ret
 401+ 91A8
 402+ 91A8              ; ------------------------------------------------------------------------------------------------------------------
 403+ 91A8
 404+ 91A8              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 91A8              ;
 406+ 91A8              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 91A8
 408+ 91A8 7D           column ld a,l
 409+ 91A9 E6 1F        	and $1f
 410+ 91AB FE 10         	cp $10
 411+ 91AD C9            	ret
 412+ 91AE
 413+ 91AE              ; --------------------------------------------------------------------------------------------------------------------
 414+ 91AE              ;
 415+ 91AE              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 91AE              ;
 417+ 91AE              ; 14/12/22
 418+ 91AE              ;
 419+ 91AE              ;	Modifica: A y BC.
 420+ 91AE
 421+ 91AE 3A 34 87     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 91B1 E6 01        	and 1
 423+ 91B3 28 17        	jr z,1F
 424+ 91B5
 425+ 91B5              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 91B5
 427+ 91B5 3A 26 87     	ld a,(Coordenada_X)
 428+ 91B8 47           	ld b,a
 429+ 91B9 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 91BA 79           	ld a,c
 431+ 91BB 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 91BC 38 08        	jr c,2F
 433+ 91BE 47           	ld b,a
 434+ 91BF 79           	ld a,c
 435+ 91C0 90           	sub b
 436+ 91C1 32 58 87     	ld (Columnas),a
 437+ 91C4 18 1B        	jr 4F
 438+ 91C6 79           2 ld a,c
 439+ 91C7 32 58 87     	ld (Columnas),a
 440+ 91CA 18 15        	jr 4F
 441+ 91CC
 442+ 91CC              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 91CC
 444+ 91CC 3A 26 87     1 ld a,(Coordenada_X)
 445+ 91CF 81           	add c
 446+ 91D0 3D           	dec a
 447+ 91D1 D6 1F        	sub $1f
 448+ 91D3 38 08        	jr c,3F
 449+ 91D5 47           	ld b,a
 450+ 91D6 79           	ld a,c
 451+ 91D7 90           	sub b
 452+ 91D8 32 58 87     	ld (Columnas),a
 453+ 91DB 18 04        	jr 4F
 454+ 91DD 79           3 ld a,c
 455+ 91DE 32 58 87     	ld (Columnas),a
 456+ 91E1 D9           4 exx
 457+ 91E2 4F           	ld c,a
 458+ 91E3 D9           	exx
 459+ 91E4 C9            ret
 460+ 91E5
 461+ 91E5              ; --------------------------------------------------------------------------------------------------------------------
 462+ 91E5              ;
 463+ 91E5              ; 7/1/23
 464+ 91E5              ;
 465+ 91E5              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 91E5              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 91E5              ;
 468+ 91E5              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 91E5              ;	DESTRUYE: HL,B Y A.
 470+ 91E5
 471+ 91E5 3A 34 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 91E8 FE 02        	cp 2
 473+ 91EA 38 18        	jr c,1F
 474+ 91EC 28 16        	jr z,1F
 475+ 91EE E6 01        	and 1
 476+ 91F0 28 0D        	jr z,3F
 477+ 91F2
 478+ 91F2              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 91F2
 480+ 91F2 CD 2E 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 91F5
 482+ 91F5 7D           9 ld a,l
 483+ 91F6 E6 1F        	and $1f
 484+ 91F8 28 2A        	jr z,7F
 485+ 91FA 2B           	dec hl
 486+ 91FB 10 F8        	djnz 9B
 487+ 91FD 18 25        	jr 7F
 488+ 91FF
 489+ 91FF              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 91FF
 491+ 91FF 2A 22 87     3 ld hl,(Posicion_actual)
 492+ 9202 18 20        	jr 7F
 493+ 9204
 494+ 9204 28 14        1 jr z,2F
 495+ 9206
 496+ 9206              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9206
 498+ 9206 CD 2E 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9209 7D           4 ld a,l
 500+ 920A E6 1F        	and $1f
 501+ 920C 28 03        	jr z,6F
 502+ 920E 2B           	dec hl
 503+ 920F 10 F8        	djnz 4B
 504+ 9211 06 0F        6 ld b,15
 505+ 9213 CD 8F 92     5 call PreviousScan
 506+ 9216 10 FB        	djnz 5B
 507+ 9218 18 0A        	jr 7F
 508+ 921A
 509+ 921A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 921A
 511+ 921A CD 2E 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 921D 06 0F        	ld b,15
 513+ 921F CD 8F 92     8 call PreviousScan
 514+ 9222 10 FB        	djnz 8B
 515+ 9224
 516+ 9224 E5           7 push hl
 517+ 9225 DD E1        	pop ix
 518+ 9227
 519+ 9227 2A 24 87     	ld hl,(Puntero_objeto)
 520+ 922A E5           	push hl
 521+ 922B FD E1        	pop iy
 522+ 922D
 523+ 922D C9           	ret
 524+ 922E
 525+ 922E              ; --------------------------------------------------------------------------------------------------------------------
 526+ 922E              ;
 527+ 922E              ;	2/1/23
 528+ 922E              ;
 529+ 922E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 922E              ;
 531+ 922E              ;	Tras esta rutina tenemos:
 532+ 922E              ;
 533+ 922E              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 922E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 922E              ;
 536+ 922E              ;	DESTRUYE!!!!! HL,B y A.
 537+ 922E
 538+ 922E 2A 22 87     Operandos ld hl,(Posicion_actual)
 539+ 9231 3A 58 87     	ld a,(Columnas)
 540+ 9234 3D           	dec a
 541+ 9235 20 01        	jr nz,1F
 542+ 9237 3C           	inc a
 543+ 9238 47           1 ld b,a
 544+ 9239 C9           	ret
 545+ 923A
 546+ 923A              ; --------------------------------------------------------------------------------------------------------------------
 547+ 923A              ;
 548+ 923A              ;	3/1/23
 549+ 923A              ;
 550+ 923A              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 923A              ;
 552+ 923A              ;	Destruye: A,B,HL y DE.
 553+ 923A
 554+ 923A              Define_rutina_de_impresion
 555+ 923A
 556+ 923A 3A 21 87     	ld a,(Columns)
 557+ 923D 47           	ld b,a
 558+ 923E 3A 58 87     	ld a,(Columnas)
 559+ 9241 B8           	cp b
 560+ 9242 20 0D        	jr nz,2f
 561+ 9244
 562+ 9244              ;	La entidad se imprime entera.
 563+ 9244
 564+ 9244 21 10 93     	ld hl, Indice_entidades_completas
 565+ 9247 E6 01        	and 1
 566+ 9249 28 02        	jr z,1F
 567+ 924B
 568+ 924B 23           	inc hl
 569+ 924C 23           	inc hl
 570+ 924D
 571+ 924D CD 17 8A     1 call Extrae_address
 572+ 9250 C9           	ret		;	ret
 573+ 9251
 574+ 9251              ;	La entidad no se imprime entera en pantalla.
 575+ 9251
 576+ 9251 3A 34 87     2 ld a,(Cuad_objeto)
 577+ 9254 E6 01        	and 1
 578+ 9256 28 17        	jr z,3F
 579+ 9258
 580+ 9258              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9258
 582+ 9258 21 14 93     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 925B 3A 21 87     4 ld a,(Columns)
 584+ 925E E6 01        	and 1
 585+ 9260 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9262
 587+ 9262 23           	inc hl
 588+ 9263 23           	inc hl
 589+ 9264
 590+ 9264 3A 58 87     	ld a,(Columnas)
 591+ 9267 E6 01        	and 1
 592+ 9269 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 926B
 594+ 926B 23           	inc hl
 595+ 926C 23           	inc hl
 596+ 926D
 597+ 926D 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 926F
 599+ 926F 21 1A 93     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9272 18 E7        	jr 4B
 601+ 9274
 602+ 9274              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9274              ;
 604+ 9274              ;	Prepara_draw
 605+ 9274              ;
 606+ 9274              ;	Es una rutina de carga.
 607+ 9274              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9274              ;
 609+ 9274              ;	FUNCIONAMIENTO:
 610+ 9274              ;
 611+ 9274              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9274              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9274              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9274              ;
 615+ 9274              ;	DESTRUYE:
 616+ 9274              ;
 617+ 9274              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9274
 619+ 9274 21 20 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9277 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 9278 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9279 4E           	ld c,(hl)
 623+ 927A 2A 22 87     	ld hl,(Posicion_actual)
 624+ 927D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 927F C9           	ret
 626+ 9280
 627+ 9280              ;----------------------------------------------------------------------------------------------------------------
 628+ 9280              ;
 629+ 9280              ;	5/08/22
 630+ 9280              ;
 631+ 9280              ;   NextScan.
 632+ 9280              ;
 633+ 9280              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9280              ;
 635+ 9280              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9280              ;
 637+ 9280              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9280              ;
 639+ 9280              ;       DESTRUIDOS: AF y HL !!!
 640+ 9280              ;
 641+ 9280              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9280              ;
 643+ 9280
 644+ 9280 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9281 7C               ld a,h
 646+ 9282 E6 07            and 7
 647+ 9284 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9285
 649+ 9285 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9286 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9288 6F               ld l,a
 652+ 9289 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 928A
 654+ 928A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 928B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 928D 67               ld h,a
 657+ 928E C9               ret
 658+ 928F
 659+ 928F              ;----------------------------------------------------------------------------------------------------------------
 660+ 928F              ;
 661+ 928F              ;	5/08/22
 662+ 928F              ;
 663+ 928F              ;   PreviousScan.
 664+ 928F              ;
 665+ 928F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 928F              ;
 667+ 928F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 928F              ;
 669+ 928F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 928F              ;
 671+ 928F              ;       DESTRUIDOS: AF y HL !!!
 672+ 928F              ;
 673+ 928F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 928F              ;
 675+ 928F
 676+ 928F 7C           PreviousScan ld a,h
 677+ 9290 25               dec h               ; Dec H.
 678+ 9291 E6 07            and 7
 679+ 9293 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9294
 681+ 9294 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9295 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9297 6F               ld l,a
 684+ 9298 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9299
 686+ 9299 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 929A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 929C 67               ld h,a
 689+ 929D C9               ret
 690+ 929E
 691+ 929E              ; -----------------------------------------------------------------------------------
 692+ 929E              ;
 693+ 929E              ;	28/2/23
 694+ 929E              ;
 695+ 929E              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 929E              ;	Extrae fotos de Album_de_fotos.
 697+ 929E
 698+ 929E              Extrae_foto_entidades
 699+ 929E
 700+ 929E 3A 67 87     	ld a,(Numero_de_malotes)
 701+ 92A1 A7           	and a
 702+ 92A2 C8           	ret z
 703+ 92A3 ED 73 6C 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 92A7 31 00 70     	ld sp,Album_de_fotos
 705+ 92AA
 706+ 92AA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 92AC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 92AD D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 92AE
 710+ 92AE ED 73 6E 87  	ld (Stack_2),sp
 711+ 92B2 ED 7B 6C 87  	ld sp,(Stack)
 712+ 92B6
 713+ 92B6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 92B6
 715+ 92B6 3E CD        	ld a,$cd
 716+ 92B8 32 C0 92     	ld (Imprime),a
 717+ 92BB EB           	ex de,hl
 718+ 92BC 22 C1 92     	ld (Imprime+1),hl
 719+ 92BF EB           	ex de,hl
 720+ 92C0
 721+ 92C0              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 92C0
 723+ 92C0 00 00 00     Imprime db 0,0,0
 724+ 92C3
 725+ 92C3 3A 67 87     	ld a,(Numero_de_malotes)
 726+ 92C6 3D           	dec a
 727+ 92C7 28 09        	jr z,1F
 728+ 92C9 32 67 87      	ld (Numero_de_malotes),a
 729+ 92CC
 730+ 92CC ED 7B 6E 87   	ld sp,(Stack_2)
 731+ 92D0 18 D8        	jr 2B
 732+ 92D2
 733+ 92D2 AF           1 xor a
 734+ 92D3 32 6E 87     	ld (Stack_2),a
 735+ 92D6 C9           	ret
 736+ 92D7
 737+ 92D7              ; -----------------------------------------------------------------------------------
 738+ 92D7              ;
 739+ 92D7              ;	28/2/23
 740+ 92D7              ;
 741+ 92D7              ;	Pinta los disparos generados.
 742+ 92D7
 743+ 92D7              Extrae_foto_disparos
 744+ 92D7
 745+ 92D7 3A 74 87     	ld a,(Numero_de_disparotes)
 746+ 92DA A7           	and a
 747+ 92DB C8           	ret z
 748+ 92DC ED 73 6C 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 92E0 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 92E3
 751+ 92E3 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 92E5 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 92E6 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 92E7
 755+ 92E7 ED 73 6E 87  	ld (Stack_2),sp
 756+ 92EB ED 7B 6C 87  	ld sp,(Stack)
 757+ 92EF
 758+ 92EF              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 92EF
 760+ 92EF 3E CD        	ld a,$cd
 761+ 92F1 32 F9 92     	ld (Imprime2),a
 762+ 92F4 EB           	ex de,hl
 763+ 92F5 22 FA 92     	ld (Imprime2+1),hl
 764+ 92F8 EB           	ex de,hl
 765+ 92F9
 766+ 92F9              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 92F9
 768+ 92F9 00 00 00     Imprime2 db 0,0,0
 769+ 92FC
 770+ 92FC 3A 74 87     	ld a,(Numero_de_disparotes)
 771+ 92FF 3D           	dec a
 772+ 9300 28 09        	jr z,1F
 773+ 9302 32 74 87      	ld (Numero_de_disparotes),a
 774+ 9305
 775+ 9305 ED 7B 6E 87  	ld sp,(Stack_2)
 776+ 9309 18 D8        	jr 2B
 777+ 930B
 778+ 930B AF           1 xor a
 779+ 930C 32 6E 87     	ld (Stack_2),a
 780+ 930F C9           	ret
 781+ 9310
# file closed: Draw_XOR.asm
1167  9310              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9310              ;   índices de Rutinas de impresión.
   2+ 9310
   3+ 9310 20 93        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9312 4D 93            defw Pinta_Amadeus_3x2
   5+ 9314
   6+ 9314 A3 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9316 43 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9318 F7 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 931A
  10+ 931A CD 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 931C D1 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 931E 85 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9320
  14+ 9320
  15+ 9320              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9320              ;
  17+ 9320              ;   12/12/22
  18+ 9320              ;
  19+ 9320              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9320              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9320              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9320              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9320              ;
  24+ 9320              ;   Modifica: DE y HL.
  25+ 9320
  26+ 9320 ED 73 6C 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9324 FD F9        	ld sp,iy
  28+ 9326 06 10            ld b,16
  29+ 9328 D1           1 pop de
  30+ 9329 7B               ld a,e
  31+ 932A AE               xor (hl)
  32+ 932B 77           	ld (hl),a
  33+ 932C 23           	inc hl
  34+ 932D 7A               ld a,d
  35+ 932E AE               xor (hl)
  36+ 932F 77           	ld (hl),a
  37+ 9330 2B           	dec hl
  38+ 9331 24           	inc h
  39+ 9332 7C               ld a,h
  40+ 9333 E6 07            and 7
  41+ 9335 20 0A            jr nz,2F
  42+ 9337 7D               ld a,l
  43+ 9338 C6 20            add a,$20
  44+ 933A 6F               ld l,a
  45+ 933B 38 04            jr c,2F
  46+ 933D 7C               ld a,h
  47+ 933E D6 08            sub 8
  48+ 9340 67               ld h,a
  49+ 9341 7C           2 ld a,h
  50+ 9342 FE 58            cp $58
  51+ 9344 28 02            jr z,3F
  52+ 9346 10 E0            djnz 1B
  53+ 9348 ED 7B 6C 87  3 ld sp,(Stack)
  54+ 934C C9           	ret
  55+ 934D
  56+ 934D ED 73 6C 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9351 FD F9        	ld sp,iy
  58+ 9353 06 08            ld b,8
  59+ 9355 D1           1 pop de
  60+ 9356 7B               ld a,e
  61+ 9357 AE               xor (hl)
  62+ 9358 77           	ld (hl),a
  63+ 9359 23           	inc hl
  64+ 935A 7A               ld a,d
  65+ 935B AE               xor (hl)
  66+ 935C 77           	ld (hl),a
  67+ 935D 23           	inc hl
  68+ 935E D1           	pop de
  69+ 935F 7B               ld a,e
  70+ 9360 AE               xor (hl)
  71+ 9361 77           	ld (hl),a
  72+ 9362 2B           	dec hl
  73+ 9363 2B           	dec hl
  74+ 9364 24           	inc h
  75+ 9365 7C               ld a,h
  76+ 9366 E6 07            and 7
  77+ 9368 20 0A            jr nz,2F
  78+ 936A 7D               ld a,l
  79+ 936B C6 20            add a,$20
  80+ 936D 6F               ld l,a
  81+ 936E 38 04            jr c,2F
  82+ 9370 7C               ld a,h
  83+ 9371 D6 08            sub 8
  84+ 9373 67               ld h,a
  85+ 9374 7C           2 ld a,h
  86+ 9375 FE 58            cp $58
  87+ 9377 28 25            jr z,4F
  88+ 9379 7A               ld a,d
  89+ 937A AE               xor (hl)
  90+ 937B 77               ld (hl),a
  91+ 937C D1           	pop de
  92+ 937D 23           	inc hl
  93+ 937E 7B               ld a,e
  94+ 937F AE               xor (hl)
  95+ 9380 77           	ld (hl),a
  96+ 9381 23           	inc hl
  97+ 9382 7A               ld a,d
  98+ 9383 AE               xor (hl)
  99+ 9384 77           	ld (hl),a
 100+ 9385 2B           	dec hl
 101+ 9386 2B           	dec hl
 102+ 9387 24           	inc h
 103+ 9388 7C               ld a,h
 104+ 9389 E6 07            and 7
 105+ 938B 20 0A            jr nz,3F
 106+ 938D 7D               ld a,l
 107+ 938E C6 20            add a,$20
 108+ 9390 6F               ld l,a
 109+ 9391 38 04            jr c,3F
 110+ 9393 7C               ld a,h
 111+ 9394 D6 08            sub 8
 112+ 9396 67               ld h,a
 113+ 9397 7C           3 ld a,h
 114+ 9398 FE 58            cp $58
 115+ 939A 28 02            jr z,4F
 116+ 939C 10 B7            djnz 1B
 117+ 939E ED 7B 6C 87  4 ld sp,(Stack)
 118+ 93A2 C9           	ret
 119+ 93A3
 120+ 93A3              ; ---------------------------------------------------
 121+ 93A3
 122+ 93A3 ED 73 6C 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 93A7 FD F9        	ld sp,iy
 124+ 93A9
 125+ 93A9              ; >>>
 126+ 93A9
 127+ 93A9 06 10            ld b,16
 128+ 93AB D1           1 pop de
 129+ 93AC 7A           	ld a,d
 130+ 93AD AE           	xor (hl)
 131+ 93AE 77           	ld (hl),a
 132+ 93AF 24           	inc h
 133+ 93B0 7C               ld a,h
 134+ 93B1 E6 07            and 7
 135+ 93B3 20 0C            jr nz,2F
 136+ 93B5 7D               ld a,l
 137+ 93B6 C6 20            add a,$20
 138+ 93B8 6F               ld l,a
 139+ 93B9 38 06            jr c,2F
 140+ 93BB 7C               ld a,h
 141+ 93BC D6 08            sub 8
 142+ 93BE 67               ld h,a
 143+ 93BF 18 00            jr 2F
 144+ 93C1 7C           2 ld a,h
 145+ 93C2 FE 58            cp $58
 146+ 93C4 28 02            jr z,3F
 147+ 93C6 10 E3            djnz 1B
 148+ 93C8 ED 7B 6C 87  3 ld sp,(Stack)
 149+ 93CC C9           	ret
 150+ 93CD
 151+ 93CD ED 73 6C 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 93D1 FD F9        	ld sp,iy
 153+ 93D3
 154+ 93D3              ; >>>
 155+ 93D3
 156+ 93D3 06 10            ld b,16
 157+ 93D5 D1           1 pop de
 158+ 93D6 7B           	ld a,e
 159+ 93D7 AE           	xor (hl)
 160+ 93D8 77           	ld (hl),a
 161+ 93D9 24           	inc h
 162+ 93DA 7C               ld a,h
 163+ 93DB E6 07            and 7
 164+ 93DD 20 0C            jr nz,2F
 165+ 93DF 7D               ld a,l
 166+ 93E0 C6 20            add a,$20
 167+ 93E2 6F               ld l,a
 168+ 93E3 38 06            jr c,2F
 169+ 93E5 7C               ld a,h
 170+ 93E6 D6 08            sub 8
 171+ 93E8 67               ld h,a
 172+ 93E9 18 00            jr 2F
 173+ 93EB 7C           2 ld a,h
 174+ 93EC FE 58            cp $58
 175+ 93EE 28 02            jr z,3F
 176+ 93F0 10 E3            djnz 1B
 177+ 93F2 ED 7B 6C 87  3 ld sp,(Stack)
 178+ 93F6 C9           	ret
 179+ 93F7
 180+ 93F7              ; ---------------------------------------------------
 181+ 93F7
 182+ 93F7 ED 73 6C 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 93FB FD F9        	ld sp,iy
 184+ 93FD 06 08            ld b,8
 185+ 93FF D1           1 pop de
 186+ 9400 7A           	ld a,d
 187+ 9401 AE           	xor (hl)
 188+ 9402 77           	ld (hl),a
 189+ 9403 23           	inc hl
 190+ 9404 D1           	pop de
 191+ 9405 7B           	ld a,e
 192+ 9406 AE           	xor (hl)
 193+ 9407 77           	ld (hl),a
 194+ 9408 2B           	dec hl
 195+ 9409 24            	inc h
 196+ 940A 7C               ld a,h
 197+ 940B E6 07            and 7
 198+ 940D 20 0A            jr nz,2F
 199+ 940F 7D               ld a,l
 200+ 9410 C6 20            add a,$20
 201+ 9412 6F               ld l,a
 202+ 9413 38 04            jr c,2F
 203+ 9415 7C               ld a,h
 204+ 9416 D6 08            sub 8
 205+ 9418 67               ld h,a
 206+ 9419 7C           2 ld a,h
 207+ 941A FE 58            cp $58
 208+ 941C 28 20            jr z,4F
 209+ 941E D1               pop de
 210+ 941F 7B           	ld a,e
 211+ 9420 AE           	xor (hl)
 212+ 9421 77           	ld (hl),a
 213+ 9422 23           	inc hl
 214+ 9423 7A           	ld a,d
 215+ 9424 AE           	xor (hl)
 216+ 9425 77           	ld (hl),a
 217+ 9426 2B           	dec hl
 218+ 9427 24           	inc h
 219+ 9428 7C               ld a,h
 220+ 9429 E6 07            and 7
 221+ 942B 20 0A            jr nz,3F
 222+ 942D 7D               ld a,l
 223+ 942E C6 20            add a,$20
 224+ 9430 6F               ld l,a
 225+ 9431 38 04            jr c,3F
 226+ 9433 7C               ld a,h
 227+ 9434 D6 08            sub 8
 228+ 9436 67               ld h,a
 229+ 9437 7C           3 ld a,h
 230+ 9438 FE 58            cp $58
 231+ 943A 28 02            jr z,4F
 232+ 943C 10 C1            djnz 1B
 233+ 943E ED 7B 6C 87  4 ld sp,(Stack)
 234+ 9442 C9           	ret
 235+ 9443
 236+ 9443 ED 73 6C 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9447 FD F9        	ld sp,iy
 238+ 9449 06 08            ld b,8
 239+ 944B D1           1 pop de
 240+ 944C D1           	pop de
 241+ 944D 7B           	ld a,e
 242+ 944E AE           	xor (hl)
 243+ 944F 77           	ld (hl),a
 244+ 9450 24            	inc h
 245+ 9451 7C               ld a,h
 246+ 9452 E6 07            and 7
 247+ 9454 20 0A            jr nz,2F
 248+ 9456 7D               ld a,l
 249+ 9457 C6 20            add a,$20
 250+ 9459 6F               ld l,a
 251+ 945A 38 04            jr c,2F
 252+ 945C 7C               ld a,h
 253+ 945D D6 08            sub 8
 254+ 945F 67               ld h,a
 255+ 9460 7C           2 ld a,h
 256+ 9461 FE 58            cp $58
 257+ 9463 28 1B            jr z,4F
 258+ 9465 D1               pop de
 259+ 9466 7A           	ld a,d
 260+ 9467 AE           	xor (hl)
 261+ 9468 77           	ld (hl),a
 262+ 9469 24           	inc h
 263+ 946A 7C               ld a,h
 264+ 946B E6 07            and 7
 265+ 946D 20 0A            jr nz,3F
 266+ 946F 7D               ld a,l
 267+ 9470 C6 20            add a,$20
 268+ 9472 6F               ld l,a
 269+ 9473 38 04            jr c,3F
 270+ 9475 7C               ld a,h
 271+ 9476 D6 08            sub 8
 272+ 9478 67               ld h,a
 273+ 9479 7C           3 ld a,h
 274+ 947A FE 58            cp $58
 275+ 947C 28 02            jr z,4F
 276+ 947E 10 CB            djnz 1B
 277+ 9480 ED 7B 6C 87  4 ld sp,(Stack)
 278+ 9484 C9           	ret
 279+ 9485
 280+ 9485 ED 73 6C 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9489 FD F9        	ld sp,iy
 282+ 948B 06 08            ld b,8
 283+ 948D D1           1 pop de
 284+ 948E 7B           	ld a,e
 285+ 948F AE           	xor (hl)
 286+ 9490 77           	ld (hl),a
 287+ 9491 23           	inc hl
 288+ 9492 7A           	ld a,d
 289+ 9493 AE           	xor (hl)
 290+ 9494 77           	ld (hl),a
 291+ 9495 2B           	dec hl
 292+ 9496 24             	inc h
 293+ 9497 7C               ld a,h
 294+ 9498 E6 07            and 7
 295+ 949A 20 0A            jr nz,2F
 296+ 949C 7D               ld a,l
 297+ 949D C6 20            add a,$20
 298+ 949F 6F               ld l,a
 299+ 94A0 38 04            jr c,2F
 300+ 94A2 7C               ld a,h
 301+ 94A3 D6 08            sub 8
 302+ 94A5 67               ld h,a
 303+ 94A6 7C           2 ld a,h
 304+ 94A7 FE 58            cp $58
 305+ 94A9 28 21            jr z,4F
 306+ 94AB D1               pop de
 307+ 94AC 7A           	ld a,d
 308+ 94AD AE           	xor (hl)
 309+ 94AE 77           	ld (hl),a
 310+ 94AF 23           	inc hl
 311+ 94B0 D1               pop de
 312+ 94B1 7B           	ld a,e
 313+ 94B2 AE           	xor (hl)
 314+ 94B3 77           	ld (hl),a
 315+ 94B4 2B           	dec hl
 316+ 94B5 24           	inc h
 317+ 94B6 7C               ld a,h
 318+ 94B7 E6 07            and 7
 319+ 94B9 20 0A            jr nz,3F
 320+ 94BB 7D               ld a,l
 321+ 94BC C6 20            add a,$20
 322+ 94BE 6F               ld l,a
 323+ 94BF 38 04            jr c,3F
 324+ 94C1 7C               ld a,h
 325+ 94C2 D6 08            sub 8
 326+ 94C4 67               ld h,a
 327+ 94C5 7C           3 ld a,h
 328+ 94C6 FE 58            cp $58
 329+ 94C8 28 02            jr z,4F
 330+ 94CA 10 C1            djnz 1B
 331+ 94CC ED 7B 6C 87  4 ld sp,(Stack)
 332+ 94D0 C9           	ret
 333+ 94D1
 334+ 94D1 ED 73 6C 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 94D5 FD F9        	ld sp,iy
 336+ 94D7 06 08            ld b,8
 337+ 94D9 D1           1 pop de
 338+ 94DA 7B           	ld a,e
 339+ 94DB AE           	xor (hl)
 340+ 94DC 77           	ld (hl),a
 341+ 94DD 24            	inc h
 342+ 94DE 7C               ld a,h
 343+ 94DF E6 07            and 7
 344+ 94E1 20 0A            jr nz,2F
 345+ 94E3 7D               ld a,l
 346+ 94E4 C6 20            add a,$20
 347+ 94E6 6F               ld l,a
 348+ 94E7 38 04            jr c,2F
 349+ 94E9 7C               ld a,h
 350+ 94EA D6 08            sub 8
 351+ 94EC 67               ld h,a
 352+ 94ED 7C           2 ld a,h
 353+ 94EE FE 58            cp $58
 354+ 94F0 28 1C            jr z,4F
 355+ 94F2 D1               pop de
 356+ 94F3 7A           	ld a,d
 357+ 94F4 AE           	xor (hl)
 358+ 94F5 77           	ld (hl),a
 359+ 94F6 24           	inc h
 360+ 94F7 7C               ld a,h
 361+ 94F8 E6 07            and 7
 362+ 94FA 20 0A            jr nz,3F
 363+ 94FC 7D               ld a,l
 364+ 94FD C6 20            add a,$20
 365+ 94FF 6F               ld l,a
 366+ 9500 38 04            jr c,3F
 367+ 9502 7C               ld a,h
 368+ 9503 D6 08            sub 8
 369+ 9505 67               ld h,a
 370+ 9506 7C           3 ld a,h
 371+ 9507 FE 58            cp $58
 372+ 9509 28 03            jr z,4F
 373+ 950B D1               pop de
 374+ 950C 10 CB            djnz 1B
 375+ 950E ED 7B 6C 87  4 ld sp,(Stack)
 376+ 9512 C9           	ret
 377+ 9513
 378+ 9513              ; ---------------------------------------------------
 379+ 9513              ;
 380+ 9513              ;   27/02/23
 381+ 9513              ;
 382+ 9513              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9513              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9513              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9513
 386+ 9513 ED 73 6C 87  Pinta_Disparo ld (Stack),sp
 387+ 9517 FD F9            ld sp,iy
 388+ 9519 06 02            ld b,2
 389+ 951B D1           1 pop de
 390+ 951C 7B               ld a,e
 391+ 951D AE               xor (hl)
 392+ 951E 77               ld (hl),a
 393+ 951F 23               inc hl
 394+ 9520 7A               ld a,d
 395+ 9521 AE               xor (hl)
 396+ 9522 77               ld (hl),a
 397+ 9523 2B               dec hl
 398+ 9524
 399+ 9524 24               inc h
 400+ 9525 7C               ld a,h
 401+ 9526 E6 07            and 7
 402+ 9528 20 0A            jr nz,2F
 403+ 952A 7D               ld a,l
 404+ 952B C6 20            add a,$20
 405+ 952D 6F               ld l,a
 406+ 952E 38 04            jr c,2F
 407+ 9530 7C               ld a,h
 408+ 9531 D6 08            sub 8
 409+ 9533 67               ld h,a
 410+ 9534 7C           2 ld a,h
 411+ 9535 FE 58            cp $58
 412+ 9537 28 02            jr z,3F
 413+ 9539
 414+ 9539 10 E0            djnz 1B
 415+ 953B ED 7B 6C 87  3 ld sp,(Stack)
 416+ 953F C9               ret
 417+ 9540
# file closed: Rutinas_de_impresion_sprites.asm
1168  9540              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9540              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9540              ;
   3+ 9540              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9540              ;
   5+ 9540              ; *****************************************************************************************************************************************************************************************
   6+ 9540              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9540
   8+ 9540 7C           calcula_tercio ld a,h
   9+ 9541 E6 18        	and $18
  10+ 9543 CB 2F        	sra a
  11+ 9545 CB 2F        	sra a
  12+ 9547 CB 2F        	sra a
  13+ 9549 C9           	ret
  14+ 954A
# file closed: calcula_tercio.asm
1169  954A              	include "Cls.asm"
# file opened: Cls.asm
   1+ 954A              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 954A              ;
   3+ 954A              ;
   4+ 954A              ;	CLS.
   5+ 954A              ;
   6+ 954A              ;	Limpia la pantalla y define sus atributos.
   7+ 954A              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 954A              ;
   9+ 954A              ;	COLORES: 0 ..... NEGRO
  10+ 954A              ;    		 1 ..... AZUL
  11+ 954A              ; 			 2 ..... ROJO
  12+ 954A              ;			 3 ..... MAGENTA
  13+ 954A              ; 			 4 ..... VERDE
  14+ 954A              ; 			 5 ..... CIAN
  15+ 954A              ;			 6 ..... AMARILLO
  16+ 954A              ; 			 7 ..... BLANCO
  17+ 954A              ;
  18+ 954A              ;	INPUT: A contiene los atributos de pantalla.
  19+ 954A              ;
  20+ 954A              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 954A
  22+ 954A
  23+ 954A 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 954D 11 01 40     	LD DE,$4001
  25+ 9550 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9553 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9555 ED B0        	LDIR
  28+ 9557 01 FF 02     	LD BC,767
  29+ 955A 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 955B ED B0        	LDIR
  31+ 955D C9           	ret
  32+ 955E
# file closed: Cls.asm
1170  955E              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 955E              ; ******************************************************************************************************************************************************************************************
   2+ 955E              ;
   3+ 955E              ;   20/05/23
   4+ 955E              ;
   5+ 955E              ;	Recompone_posicion_inicio
   6+ 955E              ;
   7+ 955E              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 955E              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 955E              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 955E              ;	_ a una u otra rutina.
  11+ 955E
  12+ 955E              Recompone_posicion_inicio
  13+ 955E
  14+ 955E 2A 32 87     	ld hl,(Posicion_inicio)
  15+ 9561 7D           	ld a,l
  16+ 9562 E6 1F        	and $1f
  17+ 9564 28 08        	jr z,1F
  18+ 9566
  19+ 9566 FE 1F        	cp $1f
  20+ 9568 C0           	ret nz
  21+ 9569
  22+ 9569 CD EC 96     	call Mov_left
  23+ 956C 18 03        	jr 2F
  24+ 956E
  25+ 956E CD CE 95     1 call Mov_right
  26+ 9571
  27+ 9571 C9           2 ret
  28+ 9572
  29+ 9572
  30+ 9572              ; ******************************************************************************************************************************************************************************************
  31+ 9572              ;
  32+ 9572              ;   22/01/23
  33+ 9572              ;
  34+ 9572              ;	Mov_down
  35+ 9572              ;
  36+ 9572              ; 	Mueve el Sprite X px hacia abajo.
  37+ 9572              ;
  38+ 9572              ;
  39+ 9572 21 4E 87     Mov_down ld hl,Ctrl_0
  40+ 9575 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  41+ 9577              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  42+ 9577              ; 																	; _ en el caso de que no lo haya.
  43+ 9577 3A 38 87     	ld a,(Vel_down)
  44+ 957A 47           	ld b,a
  45+ 957B 2A 22 87         ld hl,(Posicion_actual)
  46+ 957E CD 40 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  47+ 9581 E6 02        	and 2
  48+ 9583 28 0F        	jr z,1F
  49+ 9585
  50+ 9585              ; Nos encontramos en el último tercio de pantalla.
  51+ 9585              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  52+ 9585
  53+ 9585 7C           	ld a,h
  54+ 9586 FE 57        	cp $57
  55+ 9588 20 0A        	jr nz,1F
  56+ 958A 7D           	ld a,l
  57+ 958B C6 20        	add $20
  58+ 958D 30 05        	jr nc,1F
  59+ 958F
  60+ 958F              ; ------------------------------
  61+ 958F CD 6A 98     	call Reaparece_arriba
  62+ 9592              ;	call Reinicio
  63+ 9592              ; ------------------------------
  64+ 9592
  65+ 9592 18 08        	jr 3F
  66+ 9594 CD 80 92     1 call NextScan
  67+ 9597 22 22 87     	ld (Posicion_actual),hl
  68+ 959A 10 E2            djnz 2B
  69+ 959C CD 80 98     3 call Genera_coordenadas
  70+ 959F C9           	ret
  71+ 95A0
  72+ 95A0              ; ******************************************************************************************************************************************************************************************
  73+ 95A0              ;
  74+ 95A0              ;   22/01/23
  75+ 95A0              ;
  76+ 95A0              ;	Mov_up
  77+ 95A0              ;
  78+ 95A0              ; 	Mueve el Sprite hacia arriba.
  79+ 95A0              ;
  80+ 95A0              ;
  81+ 95A0 21 4E 87     Mov_up ld hl,Ctrl_0
  82+ 95A3 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  83+ 95A5              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  84+ 95A5              ; 																		; _ en el caso de que no lo haya.
  85+ 95A5 3A 37 87     	ld a,(Vel_up)
  86+ 95A8 47           	ld b,a
  87+ 95A9 2A 22 87     	ld hl,(Posicion_actual)
  88+ 95AC CD 40 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  89+ 95AF A7           	and a
  90+ 95B0 20 10        	jr nz,1F
  91+ 95B2
  92+ 95B2              ; Nos encontramos en el 1er tercio de pantalla.
  93+ 95B2              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  94+ 95B2
  95+ 95B2 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  96+ 95B3 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  97+ 95B5 20 0B            jr nz,1F
  98+ 95B7 7D               ld a,l
  99+ 95B8 D6 20            sub $20
 100+ 95BA 30 06            jr nc,1F
 101+ 95BC 25               dec h
 102+ 95BD
 103+ 95BD              ; -----------------------------
 104+ 95BD CD 5A 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 105+ 95C0              ;	call Reinicio
 106+ 95C0              ; -----------------------------
 107+ 95C0
 108+ 95C0 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 109+ 95C2 CD 8F 92     1 call PreviousScan
 110+ 95C5 22 22 87     	ld (Posicion_actual),hl
 111+ 95C8 10 E2            djnz 3B
 112+ 95CA CD 80 98     2 call Genera_coordenadas
 113+ 95CD C9           	ret
 114+ 95CE
 115+ 95CE              ; ******************************************************************************************************************************************************************************************
 116+ 95CE              ;
 117+ 95CE              ;	19/10/22
 118+ 95CE              ;
 119+ 95CE              ;	Mov_right.
 120+ 95CE              ;
 121+ 95CE              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 122+ 95CE              ;
 123+ 95CE
 124+ 95CE 21 4E 87     Mov_right ld hl,Ctrl_0
 125+ 95D1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 126+ 95D3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 127+ 95D3              ; 																	; _ en el caso de que no lo haya.
 128+ 95D3 3A 4E 87     	ld a,(Ctrl_0)
 129+ 95D6 CB 77        	bit 6,a
 130+ 95D8 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 131+ 95DA
 132+ 95DA CD 08 98     	call Stop_Amadeus_right
 133+ 95DD C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 134+ 95DE 18 4D        	jr 8F
 135+ 95E0
 136+ 95E0 3A 26 87     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 137+ 95E3 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 138+ 95E5 20 46        	jr nz,8F
 139+ 95E7
 140+ 95E7 3A 28 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 141+ 95EA A7           	and a 															; _[3] para continuar con el DESPLZ.
 142+ 95EB 28 40        	jr z,8F
 143+ 95ED
 144+ 95ED              ; ---------- ---------- ----------
 145+ 95ED              ;
 146+ 95ED              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 147+ 95ED
 148+ 95ED 3A 36 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 149+ 95F0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 150+ 95F2 28 11        	jr z,1F
 151+ 95F4 38 06        	jr c,6F
 152+ 95F6 FE 04        	cp 4
 153+ 95F8 28 14        	jr z,7F
 154+ 95FA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 155+ 95FC
 156+ 95FC              ; ---------- ---------- ----------
 157+ 95FC              ;
 158+ 95FC              ; Perfiles de velocidad
 159+ 95FC              ;
 160+ 95FC
 161+ 95FC 3A 28 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 162+ 95FF FE FE        	cp $fe
 163+ 9601 20 2A        	jr nz,8F
 164+ 9603 18 10        	jr 3F
 165+ 9605 3A 28 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 166+ 9608 FE FD        	cp $fd
 167+ 960A 20 21        	jr nz,8F
 168+ 960C 18 07        	jr 3F
 169+ 960E 3A 28 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 170+ 9611 FE FB        	cp $fb
 171+ 9613 20 18        	jr nz,8F
 172+ 9615
 173+ 9615              ; ---------- ---------- ----------
 174+ 9615
 175+ 9615              3
 176+ 9615 CD 48 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 177+ 9618              ;	call Reinicio
 178+ 9618
 179+ 9618              ; ---------- ---------- ----------
 180+ 9618              ;
 181+ 9618              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 182+ 9618
 183+ 9618 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 184+ 961A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 185+ 961B CD 34 96     	call DESPLZ_DER
 186+ 961E C1           	pop bc
 187+ 961F 10 F9        	djnz 5B
 188+ 9621 2A 22 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 189+ 9624 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 190+ 9625 22 22 87     	ld (Posicion_actual),hl
 191+ 9628 CD 80 98     	call Genera_coordenadas
 192+ 962B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 193+ 962D
 194+ 962D              ; ---------- ---------- ----------
 195+ 962D
 196+ 962D 2A 22 87     8 ld hl,(Posicion_actual)
 197+ 9630 CD 34 96     	call DESPLZ_DER
 198+ 9633 C9           2 ret
 199+ 9634
 200+ 9634              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 201+ 9634              ;
 202+ 9634              ;	22/9/22
 203+ 9634              ;
 204+ 9634
 205+ 9634 CD 43 96     DESPLZ_DER call Desplaza_derecha
 206+ 9637 CD 8F 96         call modifica_parametros_1er_DESPLZ_2
 207+ 963A CD B8 96         call Ciclo_completo
 208+ 963D 21 4E 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 209+ 9640 CB FE        	set 7,(hl)
 210+ 9642 C9           	ret
 211+ 9643
 212+ 9643              ; ******************************************************************************************************************************************************************************************
 213+ 9643              ;	15/02/23
 214+ 9643              ;
 215+ 9643
 216+ 9643 3A 36 87     Desplaza_derecha ld a,(Vel_right)
 217+ 9646 47           	ld b,a
 218+ 9647 2A 2E 87     	ld hl,(Puntero_DESPLZ_der)
 219+ 964A 23           1 inc hl
 220+ 964B 23           	inc hl
 221+ 964C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 222+ 964E 22 2E 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 223+ 9651 CD 17 8A     	call Extrae_address
 224+ 9654 22 24 87     	ld (Puntero_objeto),hl
 225+ 9657
 226+ 9657              ; Modifica (Puntero_DESPLZ_izq).
 227+ 9657
 228+ 9657              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 229+ 9657              ; Cuántos movimientos hemos hecho ??
 230+ 9657              ; DE contiene (Puntero_DESPLZ_der).
 231+ 9657
 232+ 9657 2A 2A 87     7 ld hl,(Indice_Sprite_der)
 233+ 965A EB           	ex de,hl
 234+ 965B A7           	and a
 235+ 965C ED 52        	sbc hl,de
 236+ 965E CB 3D        	srl l
 237+ 9660 3E 08        6 ld a,8
 238+ 9662 95           	sub l
 239+ 9663 30 1E        	jr nc,3F
 240+ 9665
 241+ 9665              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 242+ 9665              ; B="0".
 243+ 9665
 244+ 9665 04           4 inc b
 245+ 9666 3C           	inc a
 246+ 9667 20 FC        	jr nz,4B
 247+ 9669 78           	ld a,b
 248+ 966A 08           	ex af,af
 249+ 966B 2A 2A 87     	ld hl,(Indice_Sprite_der)
 250+ 966E 23           5 inc hl
 251+ 966F 23           	inc hl
 252+ 9670 10 FC        	djnz 5B
 253+ 9672 22 2E 87     	ld (Puntero_DESPLZ_der),hl
 254+ 9675 CD 17 8A     	call Extrae_address
 255+ 9678 22 24 87     	ld (Puntero_objeto),hl
 256+ 967B
 257+ 967B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 258+ 967B              ; _(Posicion_actual).
 259+ 967B
 260+ 967B 21 22 87     	ld hl,Posicion_actual
 261+ 967E 34           	inc (hl)
 262+ 967F 08               ex af,af
 263+ 9680 6F           	ld l,a
 264+ 9681 18 DD        	jr 6B
 265+ 9683
 266+ 9683              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 267+ 9683
 268+ 9683 47           3 ld b,a
 269+ 9684 2A 2C 87     	ld hl,(Indice_Sprite_izq)
 270+ 9687 23           2 inc hl
 271+ 9688 23           	inc hl
 272+ 9689 10 FC        	djnz 2B
 273+ 968B 22 30 87     	ld (Puntero_DESPLZ_izq),hl
 274+ 968E C9           8 ret
 275+ 968F
 276+ 968F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 277+ 968F              ;
 278+ 968F              ;	24/7/22
 279+ 968F              ;
 280+ 968F              ;	modifica_parametros_1er_DESPLZ_2
 281+ 968F              ;
 282+ 968F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 283+ 968F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 284+ 968F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 285+ 968F
 286+ 968F 3A 28 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 287+ 9692 A7           	and a
 288+ 9693 20 1F        	jr nz,1F
 289+ 9695 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 290+ 9697 32 28 87         ld (CTRL_DESPLZ),a
 291+ 969A
 292+ 969A 21 21 87     	ld hl,Columns
 293+ 969D 34           	inc (hl)
 294+ 969E 3A 34 87     	ld a,(Cuad_objeto)
 295+ 96A1 E6 01        	and 1
 296+ 96A3 28 0F        	jr z,1F
 297+ 96A5 2A 22 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 298+ 96A8 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 299+ 96A9 22 22 87     	ld (Posicion_actual),hl
 300+ 96AC CD 80 98     	call Genera_coordenadas
 301+ 96AF CD 14 98     	call Inc_CTRL_DESPLZ
 302+ 96B2 18 03        	jr 2F
 303+ 96B4 CD 14 98     1 call Inc_CTRL_DESPLZ
 304+ 96B7 C9           2 ret
 305+ 96B8
 306+ 96B8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 307+ 96B8              ;
 308+ 96B8              ;	24/7/22
 309+ 96B8              ;
 310+ 96B8              ;	Ciclo_completo.
 311+ 96B8              ;
 312+ 96B8              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 313+ 96B8              ;
 314+ 96B8              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 315+ 96B8              ; 	Decrementamos (Columns).
 316+ 96B8              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 317+ 96B8              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 318+ 96B8
 319+ 96B8
 320+ 96B8 3A 28 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 321+ 96BB FE FF        	cp $ff
 322+ 96BD 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 323+ 96BF E6 F0        	and $f0
 324+ 96C1 20 28        	jr nz,3F
 325+ 96C3
 326+ 96C3              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 327+ 96C3
 328+ 96C3 3A 28 87     	ld a,(CTRL_DESPLZ)
 329+ 96C6 47           	ld b,a
 330+ 96C7 3E F8        	ld a,$f8
 331+ 96C9 80           	add b
 332+ 96CA 32 28 87     	ld (CTRL_DESPLZ),a
 333+ 96CD 18 1C        	jr 3F
 334+ 96CF 21 21 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 335+ 96D2 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 336+ 96D3 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 337+ 96D4 32 28 87     	ld (CTRL_DESPLZ),a
 338+ 96D7 3A 34 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 339+ 96DA E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 340+ 96DC 20 0A        	jr nz,2F
 341+ 96DE 2A 22 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 342+ 96E1 23           	inc hl
 343+ 96E2 22 22 87     	ld (Posicion_actual),hl
 344+ 96E5 CD 80 98     	call Genera_coordenadas
 345+ 96E8
 346+ 96E8              ; Inicia el puntero de Sprite.
 347+ 96E8
 348+ 96E8 CD 2E 8A     2 call Inicia_puntero_objeto_der
 349+ 96EB C9           3 ret
 350+ 96EC
 351+ 96EC              ; ******************************************************************************************************************************************************************************************
 352+ 96EC              ;
 353+ 96EC              ;	15/02/23
 354+ 96EC              ;
 355+ 96EC              ;	Mov_left.
 356+ 96EC              ;
 357+ 96EC              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 358+ 96EC              ;
 359+ 96EC 21 4E 87     Mov_left ld hl,Ctrl_0
 360+ 96EF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 361+ 96F1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 362+ 96F1              ; 																	; _ en el caso de que no lo haya.
 363+ 96F1 3A 4E 87     	ld a,(Ctrl_0)
 364+ 96F4 CB 77        	bit 6,a
 365+ 96F6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 366+ 96F8
 367+ 96F8 CD 0E 98     	call Stop_Amadeus_left
 368+ 96FB C8           	ret z
 369+ 96FC 20 4A        	jr nz,8F
 370+ 96FE
 371+ 96FE 3A 26 87     11 ld a,(Coordenada_X)
 372+ 9701 A7           	and a
 373+ 9702 20 44        	jr nz,8F
 374+ 9704
 375+ 9704 3A 28 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 376+ 9707 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 377+ 9708 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 378+ 970A
 379+ 970A              ; ---------- ---------- ----------
 380+ 970A
 381+ 970A 3A 35 87     	ld a,(Vel_left)
 382+ 970D FE 02        	cp 2
 383+ 970F 28 0F        	jr z,1F
 384+ 9711 38 04        	jr c,6F
 385+ 9713 FE 04        	cp 4
 386+ 9715 28 12        	jr z,7F
 387+ 9717
 388+ 9717              ; ---------- ---------- ----------
 389+ 9717
 390+ 9717 3A 28 87     6 ld a,(CTRL_DESPLZ)
 391+ 971A FE F8        	cp $f8
 392+ 971C 20 2A        	jr nz,8F
 393+ 971E 18 10        	jr 4F
 394+ 9720 3A 28 87     1 ld a,(CTRL_DESPLZ)
 395+ 9723 FE F9        	cp $f9
 396+ 9725 20 21        	jr nz,8F
 397+ 9727 18 07        	jr 4F
 398+ 9729 3A 28 87     7 ld a,(CTRL_DESPLZ)
 399+ 972C FE FB        	cp $fb
 400+ 972E 20 18        	jr nz,8F
 401+ 9730
 402+ 9730              ; ---------- ---------- ----------
 403+ 9730
 404+ 9730              4
 405+ 9730 CD 36 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 406+ 9733              ;	call Reinicio
 407+ 9733
 408+ 9733              ; ---------- ---------- ----------
 409+ 9733
 410+ 9733 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 411+ 9735 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 412+ 9736
 413+ 9736              ;	ld hl,(Indice_Sprite_izq)
 414+ 9736              ;	ld (Puntero_DESPLZ_izq),hl
 415+ 9736
 416+ 9736 CD 4F 97     	call DESPLZ_IZQ
 417+ 9739 C1           	pop bc
 418+ 973A 10 F9        	djnz 5B
 419+ 973C 2A 22 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 420+ 973F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 421+ 9740 22 22 87     	ld (Posicion_actual),hl
 422+ 9743 CD 80 98     	call Genera_coordenadas
 423+ 9746 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 424+ 9748
 425+ 9748              ; ---------- ---------- ----------
 426+ 9748
 427+ 9748              ; Movemos, no hay recolocación.
 428+ 9748
 429+ 9748 2A 22 87     8 ld hl,(Posicion_actual)
 430+ 974B CD 4F 97     	call DESPLZ_IZQ
 431+ 974E C9           2 ret
 432+ 974F
 433+ 974F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 434+ 974F              ;
 435+ 974F              ;	22/9/22
 436+ 974F
 437+ 974F              DESPLZ_IZQ
 438+ 974F
 439+ 974F CD 5E 97     	call Desplaza_izquierda
 440+ 9752 CD AA 97         call modifica_parametros_1er_DESPLZ
 441+ 9755 CD D2 97     	call Ciclo_completo_2
 442+ 9758 21 4E 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 443+ 975B CB BE        	res 7,(hl)
 444+ 975D C9           	ret
 445+ 975E
 446+ 975E              Desplaza_izquierda
 447+ 975E
 448+ 975E 3A 35 87     	ld a,(Vel_left)
 449+ 9761 47           	ld b,a
 450+ 9762 2A 30 87     	ld hl,(Puntero_DESPLZ_izq)
 451+ 9765 23           1 inc hl
 452+ 9766 23           	inc hl
 453+ 9767 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 454+ 9769 22 30 87     	ld (Puntero_DESPLZ_izq),hl
 455+ 976C CD 17 8A     	call Extrae_address
 456+ 976F 22 24 87     	ld (Puntero_objeto),hl
 457+ 9772
 458+ 9772              ; Modifica (Puntero_DESPLZ_der).
 459+ 9772
 460+ 9772              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 461+ 9772              ; Cuántos movimientos hemos hecho ??
 462+ 9772              ; DE contiene (Puntero_DESPLZ_izq).
 463+ 9772
 464+ 9772 2A 2C 87     7 ld hl,(Indice_Sprite_izq)
 465+ 9775 EB           	ex de,hl
 466+ 9776 A7           	and a
 467+ 9777 ED 52        	sbc hl,de
 468+ 9779 CB 3D        	srl l
 469+ 977B 3E 08        6 ld a,8
 470+ 977D 95           	sub l
 471+ 977E 30 1E        	jr nc,3F
 472+ 9780
 473+ 9780              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 474+ 9780              ; B="0".
 475+ 9780
 476+ 9780 04           4 inc b
 477+ 9781 3C           	inc a
 478+ 9782 20 FC        	jr nz,4B
 479+ 9784 78           	ld a,b
 480+ 9785 08           	ex af,af
 481+ 9786 2A 2C 87     	ld hl,(Indice_Sprite_izq)
 482+ 9789 23           5 inc hl
 483+ 978A 23           	inc hl
 484+ 978B 10 FC        	djnz 5B
 485+ 978D 22 30 87     	ld (Puntero_DESPLZ_izq),hl
 486+ 9790 CD 17 8A     	call Extrae_address
 487+ 9793 22 24 87     	ld (Puntero_objeto),hl
 488+ 9796
 489+ 9796              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 490+ 9796              ; _(Posicion_actual).
 491+ 9796
 492+ 9796 21 22 87     	ld hl,Posicion_actual
 493+ 9799 35           	dec (hl)
 494+ 979A 08           	ex af,af
 495+ 979B 6F           	ld l,a
 496+ 979C 18 DD        	jr 6B
 497+ 979E
 498+ 979E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 499+ 979E
 500+ 979E 47           3 ld b,a
 501+ 979F 2A 2A 87     	ld hl,(Indice_Sprite_der)
 502+ 97A2 23           2 inc hl
 503+ 97A3 23           	inc hl
 504+ 97A4 10 FC        	djnz 2B
 505+ 97A6 22 2E 87     	ld (Puntero_DESPLZ_der),hl
 506+ 97A9 C9           8 ret
 507+ 97AA
 508+ 97AA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 97AA              ;
 510+ 97AA              ;	modifica_parametros_1er_DESPLZ
 511+ 97AA              ;
 512+ 97AA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 513+ 97AA              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 514+ 97AA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 515+ 97AA
 516+ 97AA 3A 28 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 517+ 97AD A7           	and a
 518+ 97AE 20 1E        	jr nz,1F
 519+ 97B0 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 520+ 97B1 32 28 87         ld (CTRL_DESPLZ),a
 521+ 97B4 21 21 87     	ld hl,Columns
 522+ 97B7 34           	inc (hl)
 523+ 97B8 3A 34 87     	ld a,(Cuad_objeto)
 524+ 97BB E6 01        	and 1
 525+ 97BD 20 0F        	jr nz,1F
 526+ 97BF 2A 22 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 527+ 97C2 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 528+ 97C3 22 22 87     	ld (Posicion_actual),hl
 529+ 97C6 CD 80 98     	call Genera_coordenadas
 530+ 97C9 CD 25 98     	call Dec_CTRL_DESPLZ
 531+ 97CC 18 03        	jr 2F
 532+ 97CE CD 25 98     1 call Dec_CTRL_DESPLZ
 533+ 97D1 C9           2 ret
 534+ 97D2
 535+ 97D2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 536+ 97D2
 537+ 97D2 3A 28 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 538+ 97D5 FE F7        	cp $f7
 539+ 97D7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 540+ 97D9 30 2C        	jr nc,3F
 541+ 97DB
 542+ 97DB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 543+ 97DB
 544+ 97DB 06 00        	ld b,0
 545+ 97DD 04           4 inc b
 546+ 97DE 3C           	inc a
 547+ 97DF FE F7        	cp $f7
 548+ 97E1 20 FA        	jr nz,4B
 549+ 97E3 3E FF        	ld a,$ff
 550+ 97E5 90           	sub b
 551+ 97E6 32 28 87     	ld (CTRL_DESPLZ),a
 552+ 97E9 18 1C        	jr 3F
 553+ 97EB
 554+ 97EB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 555+ 97EB
 556+ 97EB 21 21 87     1 ld hl,Columns
 557+ 97EE 35           	dec (hl)
 558+ 97EF AF           	xor a
 559+ 97F0 32 28 87     	ld (CTRL_DESPLZ),a
 560+ 97F3 3A 34 87     	ld a,(Cuad_objeto)
 561+ 97F6 E6 01        	and 1
 562+ 97F8 28 0A        	jr z,2F
 563+ 97FA 2A 22 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 564+ 97FD 2B           	dec hl
 565+ 97FE 22 22 87     	ld (Posicion_actual),hl
 566+ 9801 CD 80 98     	call Genera_coordenadas
 567+ 9804
 568+ 9804              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 569+ 9804
 570+ 9804 CD 41 8A     2 call Inicia_puntero_objeto_izq
 571+ 9807 C9           3 ret
 572+ 9808
 573+ 9808              ; ---------- ---------- ---------- ---------- ---------- ----------
 574+ 9808              ;
 575+ 9808              ;	19/10/22
 576+ 9808              ;
 577+ 9808              ;	(cp 29) para un Amadeus de 3 Columns.
 578+ 9808              ;	(cp 30)   ""  ""    ""     2 Columns.
 579+ 9808
 580+ 9808 3A 26 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 581+ 980B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 582+ 980D C9           	ret
 583+ 980E
 584+ 980E              ; ---------- ---------- ---------- ---------- ---------- ----------
 585+ 980E              ;
 586+ 980E              ;	19/10/22
 587+ 980E              ;
 588+ 980E              ;	(cp 2) para un Amadeus de 3 Columns.
 589+ 980E              ;	(cp 1)   ""  ""    ""     2 Columns.
 590+ 980E
 591+ 980E 3A 26 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 592+ 9811 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 593+ 9813 C9           	ret
 594+ 9814
 595+ 9814              ; ---------- ---------- ---------- ---------- ---------- ----------
 596+ 9814              ;
 597+ 9814              ;	24/7/22
 598+ 9814              ;
 599+ 9814              ;	Inc_CTRL_DESPLZ
 600+ 9814              ;
 601+ 9814              ;
 602+ 9814              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 603+ 9814
 604+ 9814 21 28 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 605+ 9817 3A 36 87     	ld a,(Vel_right)
 606+ 981A A7           	and a
 607+ 981B 28 06        	jr z,1F
 608+ 981D 47           	ld b,a
 609+ 981E 34           3 inc (hl)
 610+ 981F 10 FD        	djnz 3B
 611+ 9821 18 01        	jr 2F
 612+ 9823 34           1 inc (hl)
 613+ 9824 C9           2 ret
 614+ 9825
 615+ 9825              ; ---------- ---------- ---------- ---------- ---------- ----------
 616+ 9825              ;
 617+ 9825              ;	5/2/23
 618+ 9825              ;
 619+ 9825              ;	Dec_CTRL_DESPLZ
 620+ 9825              ;
 621+ 9825              ;
 622+ 9825              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 623+ 9825
 624+ 9825 21 28 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 625+ 9828 3A 35 87     	ld a,(Vel_left)
 626+ 982B A7           	and a
 627+ 982C 28 06        	jr z,1F
 628+ 982E 47           	ld b,a
 629+ 982F 35           3 dec (hl)
 630+ 9830 10 FD        	djnz 3B
 631+ 9832 18 01        	jr 2F
 632+ 9834 35           1 dec (hl)
 633+ 9835 C9           2 ret
 634+ 9836
 635+ 9836              ; ---------- ---------- ---------- ---------- ---------- ----------
 636+ 9836
 637+ 9836 2A 22 87     Reaparece_derecha ld hl,(Posicion_actual)
 638+ 9839 01 1F 00     	ld bc,31
 639+ 983C A7           	and a
 640+ 983D ED 4A        	adc hl,bc
 641+ 983F 22 22 87     	ld (Posicion_actual),hl
 642+ 9842 21 4E 87     	ld hl,Ctrl_0														; $xxx1
 643+ 9845 CB C6        	set 0,(hl)
 644+ 9847 C9           	ret
 645+ 9848
 646+ 9848              ; ---------- ---------- ---------- ---------- ---------- ----------
 647+ 9848
 648+ 9848 2A 22 87     Reaparece_izquierda ld hl,(Posicion_actual)
 649+ 984B 01 1F 00     	ld bc,31
 650+ 984E A7           	and a
 651+ 984F ED 42        	sbc hl,bc
 652+ 9851 22 22 87     	ld (Posicion_actual),hl 											; $xx1x
 653+ 9854 21 4E 87     	ld hl,Ctrl_0
 654+ 9857 CB CE        	set 1,(hl)
 655+ 9859 C9           	ret
 656+ 985A
 657+ 985A              ; ---------- ---------- ---------- ---------- ---------- ----------
 658+ 985A
 659+ 985A 24           Reaparece_abajo inc h
 660+ 985B 01 E0 17     	ld bc,$17e0
 661+ 985E A7           	and a
 662+ 985F ED 4A        	adc hl,bc
 663+ 9861 22 22 87     	ld (Posicion_actual),hl
 664+ 9864 21 4E 87     	ld hl,Ctrl_0
 665+ 9867 CB D6        	set 2,(hl)
 666+ 9869 C9           	ret
 667+ 986A
 668+ 986A              ; ---------- ---------- ---------- ---------- ---------- ----------
 669+ 986A
 670+ 986A 01 E0 17     Reaparece_arriba ld bc,$17e0
 671+ 986D A7           	and a
 672+ 986E ED 42        	sbc hl,bc
 673+ 9870 22 22 87     	ld (Posicion_actual),hl
 674+ 9873 21 4E 87     	ld hl,Ctrl_0
 675+ 9876 CB DE        	set 3,(hl)
 676+ 9878 C9           	ret
 677+ 9879
 678+ 9879              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 679+ 9879
 680+ 9879 2A 32 87     Reinicio ld hl,(Posicion_inicio)
 681+ 987C 22 22 87     	ld (Posicion_actual),hl
 682+ 987F C9           	ret
# file closed: Direcciones.asm
1171  9880              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9880              ; ------------------------------------------------------------------------
   2+ 9880              ;
   3+ 9880              ;	02/04/23
   4+ 9880              ;
   5+ 9880              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9880              ;	Fila superior "0", Columna izquierda "0".
   7+ 9880              ;
   8+ 9880              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9880              ;
  10+ 9880              ;	Modifica: A,BC y DE.
  11+ 9880
  12+ 9880 C5           Genera_coordenadas push bc
  13+ 9881 E5           	push hl
  14+ 9882 D5           	push de
  15+ 9883
  16+ 9883 2A 22 87     	ld hl,(Posicion_actual)
  17+ 9886
  18+ 9886 7D           	ld a,l
  19+ 9887 E6 1F        	and $1f
  20+ 9889 32 26 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 988C
  22+ 988C CD 40 95     	call calcula_tercio
  23+ 988F 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9890
  25+ 9890 1E 00        	ld e,0
  26+ 9892 7D           	ld a,l
  27+ 9893 E6 E0        	and $e0
  28+ 9895 28 01        	jr z,1F
  29+ 9897 04           	inc b
  30+ 9898
  31+ 9898 04           1 inc b
  32+ 9899 05           	dec b
  33+ 989A 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 989C              ;														; _ , salimos.
  35+ 989C 1C           3 inc e
  36+ 989D D6 20        	sub 32
  37+ 989F 20 FB        	jr nz,3B
  38+ 98A1 10 F5        	djnz 1B
  39+ 98A3
  40+ 98A3 7B           2 ld a,e
  41+ 98A4 32 27 87     	ld (Coordenada_y),a
  42+ 98A7
  43+ 98A7 D1           	pop de
  44+ 98A8 E1           	pop hl
  45+ 98A9 C1           	pop bc
  46+ 98AA
  47+ 98AA C9           	ret
  48+ 98AB
  49+ 98AB              ; ------------------------------------------------------------------------
  50+ 98AB              ;	28/03/23
  51+ 98AB              ;
  52+ 98AB              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 98AB              ;	Fila superior "0", Columna izquierda "0".
  54+ 98AB              ;
  55+ 98AB              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 98AB              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 98AB              ;
  58+ 98AB              ;		DE="$120d"
  59+ 98AB              ;
  60+ 98AB              ;		D, (Coordenada_X), Columnas, $12
  61+ 98AB              ;		E, (Coordenada_y), Filas, $0d
  62+ 98AB              ;
  63+ 98AB              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 98AB
  65+ 98AB              ;	Modifica: A,BC y DE.
  66+ 98AB
  67+ 98AB
  68+ 98AB              Genera_coordenadas_disparo
  69+ 98AB
  70+ 98AB              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 98AB
  72+ 98AB 7D           	ld a,l
  73+ 98AC E6 1F        	and $1f
  74+ 98AE 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 98AF CD 40 95     	call calcula_tercio
  76+ 98B2 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 98B3 1E 00        	ld e,0
  78+ 98B5 7D           	ld a,l
  79+ 98B6 E6 E0        	and $e0
  80+ 98B8 28 01        	jr z,1F
  81+ 98BA 04           	inc b
  82+ 98BB 1C           1 inc e
  83+ 98BC D6 20        	sub 32
  84+ 98BE 20 FB        	jr nz,1B
  85+ 98C0 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 98C2 C9           	ret
  87+ 98C3
# file closed: Genera_coordenadas.asm
1172  98C3              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 98C3
   2+ 98C3
   3+ 98C3              ;   11/8/22
   4+ 98C3              ;
   5+ 98C3              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 98C3              ;
   7+ 98C3              ;   Mov_obj.asm
   8+ 98C3              ;
   9+ 98C3              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 98C3              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 98C3              ;
  12+ 98C3              ;   Codificación:
  13+ 98C3              ;
  14+ 98C3              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 98C3
  16+ 98C3              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 98C3
  18+ 98C3 02 40 00     Arriba db 2,%01000000,0
  19+ 98C6 02 80 00     Abajo db 2,%10000000,0
  20+ 98C9 02 20 00     Derecha db 2,%00100000,0
  21+ 98CC 02 10 00     Izquierda db 2,%00010000,0
  22+ 98CF 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 98D3 60 42 60 40
  22+ 98D7 63
  23+ 98D8 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 98DC 22 A3 80 A0
  24+ 98E0 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 98E4 84 A0 83 A0
  25+ 98E8 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 98EC 80 A3 22 A0
  26+ 98F0 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 98F4 40 60 42 60
  27+ 98F8 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 98FC
  29+ 98FC 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9900 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9904 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9908 84 00
  32+ 990A 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 990E 84 00
  33+ 9910 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9914 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9918 1F 1F 1F 1F
  35+ 991C 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9920 1F 1F 1F 1F
  35+ 9924 1F
  36+ 9925 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9929 2F 2F 2F 2F
  36+ 992D 2F 2F
  37+ 992F 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9933 2F 2F 00
  38+ 9936
  39+ 9936              ; ----- ----- ----- ----- -----
  40+ 9936
  41+ 9936 14 99        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9938 10 99        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 993A CC 98        Indice_mov_Izquierda defw Izquierda
  44+ 993C C9 98        Indice_mov_Derecha defw Derecha
  45+ 993E C6 98        Indice_mov_Abajo defw Abajo
  46+ 9940 C3 98        Indice_mov_Arriba defw Arriba
  47+ 9942 00 99        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9944 04 99        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9946 FC 98        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9948 0A 99        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 994A CF 98        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 994C              ; ----- ----- ----- ----- -----
  53+ 994C
  54+ 994C 3A 55 87     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 994F A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9950 28 02            jr z,1F
  57+ 9952 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9954 3A 56 87     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9957 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9959 32 56 87         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 995C              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 995C 2A 53 87         ld hl,(Puntero_mov)
  63+ 995F 7E               ld a,(hl)
  64+ 9960 32 55 87         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9963 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9964 22 53 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9967
  68+ 9967 3A 57 87     Decoder ld a,(Repetimos_db)
  69+ 996A A7               and a
  70+ 996B 20 0C            jr nz,12F
  71+ 996D 2A 53 87         ld hl,(Puntero_mov)
  72+ 9970 7E               ld a,(hl)
  73+ 9971 A7               and a
  74+ 9972 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9974 E6 0F            and $0f
  76+ 9976 32 57 87         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9979              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9979 2A 53 87     12 ld hl,(Puntero_mov)
  79+ 997C CB 7E            bit 7,(hl)
  80+ 997E 28 03            jr z,2F
  81+ 9980 CD 72 95         call Mov_down
  82+ 9983 2A 53 87     2 ld hl, (Puntero_mov)
  83+ 9986 CB 76            bit 6,(hl)
  84+ 9988 28 03            jr z,3F
  85+ 998A CD A0 95         call Mov_up
  86+ 998D 2A 53 87     3 ld hl, (Puntero_mov)
  87+ 9990 CB 6E            bit 5,(hl)
  88+ 9992 28 03            jr z,4F
  89+ 9994 CD CE 95         call Mov_right
  90+ 9997 2A 53 87     4 ld hl, (Puntero_mov)
  91+ 999A CB 66            bit 4,(hl)
  92+ 999C 28 03            jr z,5F
  93+ 999E CD EC 96         call Mov_left
  94+ 99A1
  95+ 99A1              ; ---------- --------- --------- ---------- ----------
  96+ 99A1
  97+ 99A1 3A 57 87     5 ld a,(Repetimos_db)
  98+ 99A4 A7               and a
  99+ 99A5 28 07            jr z,6F
 100+ 99A7 3D               dec a
 101+ 99A8 32 57 87         ld (Repetimos_db),a
 102+ 99AB 28 01            jr z,6f
 103+ 99AD C9           11 ret
 104+ 99AE 21 55 87     6 ld hl,Contador_db_mov
 105+ 99B1 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 99B2 2A 53 87         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 99B5 23               inc hl
 108+ 99B6 22 53 87         ld (Puntero_mov),hl
 109+ 99B9 18 F2            jr 11B
 110+ 99BB 2A 51 87     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 99BE 3A 56 87         ld a,(Incrementa_puntero)
 112+ 99C1 47               ld b,a
 113+ 99C2 23           8 inc hl
 114+ 99C3 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 99C5 5E               ld e,(hl)
 116+ 99C6 23               inc hl
 117+ 99C7 56               ld d,(hl)
 118+ 99C8 EB               ex de,hl
 119+ 99C9 22 53 87         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 99CC 18 DF            jr 11B
 121+ 99CE
 122+ 99CE              ; ---------- --------- --------- ---------- ----------
 123+ 99CE              ;
 124+ 99CE              ;   11/8/22
 125+ 99CE              ;
 126+ 99CE              ;   Prepara_Puntero_mov
 127+ 99CE
 128+ 99CE E5           Prepara_Puntero_mov push hl
 129+ 99CF D5               push de
 130+ 99D0 2A 51 87         ld hl,(Puntero_indice_mov)
 131+ 99D3 5E               ld e,(hl)
 132+ 99D4 23               inc hl
 133+ 99D5 56               ld d,(hl)
 134+ 99D6 EB               ex de,hl
 135+ 99D7 22 53 87         ld (Puntero_mov),hl
 136+ 99DA D1               pop de
 137+ 99DB E1               pop hl
 138+ 99DC C9               ret
 139+ 99DD
 140+ 99DD              ; ---------- --------- --------- ---------- ----------
 141+ 99DD              ;
 142+ 99DD              ;   11/8/22
 143+ 99DD              ;
 144+ 99DD              ;   Reinicia_el_movimiento
 145+ 99DD
 146+ 99DD CD CE 99     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 99E0 AF               xor a
 148+ 99E1 32 55 87         ld (Contador_db_mov),a
 149+ 99E4 32 56 87         ld (Incrementa_puntero),a
 150+ 99E7 C3 4C 99         jp Movimiento
 151+ 99EA C9               ret
 152+ 99EB              ; ---------- --------- --------- ---------- ----------
 153+ 99EB
 154+ 99EB
 155+ 99EB
 156+ 99EB
 157+ 99EB
 158+ 99EB
 159+ 99EB
 160+ 99EB
 161+ 99EB
 162+ 99EB
 163+ 99EB
 164+ 99EB
 165+ 99EB
 166+ 99EB
 167+ 99EB
 168+ 99EB
 169+ 99EB
 170+ 99EB
# file closed: Patrones_de_mov.asm
1173  99EB              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 99EB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 99EB              ;
   3+ 99EB              ;	3/1/23
   4+ 99EB              ;
   5+ 99EB              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 99EB
   7+ 99EB              ;	ADC HL,SP	LD (addr),SP
   8+ 99EB              ;	ADD HL,SP	LD SP,(addr)
   9+ 99EB              ;	ADD IX,SP	LD SP,nn
  10+ 99EB              ; 	ADD IY,SP	LD SP,HL
  11+ 99EB              ;				LD SP,IX
  12+ 99EB              ;	DEC SP		LD SP,IY
  13+ 99EB
  14+ 99EB              ;	EX (SP),HL
  15+ 99EB              ;	EX (SP),IX
  16+ 99EB              ;	EX (SP),IY
  17+ 99EB
  18+ 99EB              ;	INC SP
  19+ 99EB
  20+ 99EB
  21+ 99EB                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 6C 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 5D 87         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 72 87         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 70 87     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 72 87         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 70 87     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 6C 87  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1174  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1175  7FE6
1176  7FE6              	SAVESNA "Pruebas.sna", START
1177  7FE6
1178  7FE6
1179  7FE6
# file closed: Banco_de_pruebas.asm
