# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $8120
   6  8120
   7  8120              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ 8120              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8120              ;
   3+ 8120              ;	17/02/23
   4+ 8120              ;
   5+ 8120              ;	Sprites e índices.
   6+ 8120
   7+ 8120              ; Disparo.
   8+ 8120
   9+ 8120 28 81        Indice_disparo defw Disparo_0
  10+ 8122 2E 81        	defw Disparo_f9
  11+ 8124 34 81        	defw Disparo_fb
  12+ 8126 3A 81        	defw Disparo_fd
  13+ 8128
  14+ 8128              ; Disparo (CTRL_DESPLZ)="0".
  15+ 8128 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  15+ 812C 01 80
  16+ 812E              ; Disparo (CTRL_DESPLZ)="f9"
  17+ 812E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  17+ 8132 00 60
  18+ 8134              ; Disparo (CTRL_DESPLZ)="fb"
  19+ 8134 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  19+ 8138 18 00
  20+ 813A              ; Disparo (CTRL_DESPLZ)="fd"
  21+ 813A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  21+ 813E 06 00
  22+ 8140
  23+ 8140              ; ----------------------------------------------------------------------------------------
  24+ 8140
  25+ 8140              ; Badsat_izq. 2x2.
  26+ 8140
  27+ 8140 50 81        Indice_Badsat_izq defw Badsat_izquierda
  28+ 8142 C0 82        	defw Badsat_izq_fe
  29+ 8144 90 82        	defw Badsat_izq_fd
  30+ 8146 60 82        	defw Badsat_izq_fc
  31+ 8148 30 82        	defw Badsat_izq_fb
  32+ 814A 00 82        	defw Badsat_izq_fa
  33+ 814C B0 81        	defw Badsat_izq_f9
  34+ 814E 80 81        	defw Badsat_izq_f8
  35+ 8150
  36+ 8150 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  37+ 8153 02 14 00     	DEFB 	$02,$14,$00
  38+ 8156 02 2A 00     	DEFB 	$02,$2A,$00
  39+ 8159 02 55 00     	DEFB 	$02,$55,$00
  40+ 815C 02 AA 00     	DEFB	$02,$AA,$00
  41+ 815F 02 54 00     	DEFB 	$02,$54,$00
  42+ 8162 7F E8 00     	DEFB 	$7F,$E8,$00
  43+ 8165 03 60 00     	DEFB 	$03,$60,$00
  44+ 8168 0A E0 00     	DEFB	$0A,$E0,$00
  45+ 816B 17 F8 00     	DEFB 	$17,$F8,$00
  46+ 816E 2B E8 00     	DEFB 	$2B,$E8,$00
  47+ 8171 54 40 00     	DEFB 	$54,$40,$00
  48+ 8174 AA 60 00     	DEFB	$AA,$60,$00
  49+ 8177 54 00 00     	DEFB 	$54,$00,$00
  50+ 817A 28 00 00     	DEFB 	$28,$00,$00
  51+ 817D 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  52+ 8180
  53+ 8180 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  53+ 8184 0A 00 01 15
  54+ 8188 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  54+ 818C 01 55 00 01
  55+ 8190 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  55+ 8194 00 01 B0 00
  56+ 8198 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  56+ 819C FC 00 15 F4
  57+ 81A0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  57+ 81A4 55 30 00 2A
  58+ 81A8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  58+ 81AC 00 08 00 00
  59+ 81B0
  60+ 81B0 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  60+ 81B4 85 00 00 8A
  61+ 81B8 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  61+ 81BC 00 AA 80 00
  62+ 81C0 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  62+ 81C4 00 00 D8 00
  63+ 81C8 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  63+ 81CC FE 00 0A FA
  64+ 81D0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  64+ 81D4 2A 98 00 15
  65+ 81D8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  65+ 81DC 00 04 00 00
  66+ 81E0
  67+ 81E0
  68+ 81E0              ;! 39 bytes libres aquí !!!!!
  69+ 81E0
  70+ 81E0              	org $8200
  71+ 8200
  72+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  72+ 8204 42 80 00 45
  73+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  73+ 820C 00 55 40 00
  74+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  74+ 8214 00 00 6C 00
  75+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  75+ 821C FF 00 05 7D
  76+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  76+ 8224 15 4C 00 0A
  77+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  77+ 822C 00 02 00 00
  78+ 8230
  79+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  79+ 8234 21 40 00 22
  80+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  80+ 823C 00 2A A0 00
  81+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  81+ 8244 80 00 36 00
  82+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  82+ 824C 7F 80 02 BE
  83+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  83+ 8254 0A A6 00 05
  84+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  84+ 825C 00 01 00 00
  85+ 8260
  86+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  86+ 8264 10 A0 00 11
  87+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  87+ 826C 00 15 50 00
  88+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  88+ 8274 40 00 1B 00
  89+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  89+ 827C BF C0 01 5F
  90+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  90+ 8284 05 53 00 02
  91+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  91+ 828C 00 00 80 00
  92+ 8290
  93+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  93+ 8294 08 50 00 08
  94+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  94+ 829C 00 0A A8 00
  95+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  95+ 82A4 A0 00 0D 80
  96+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  96+ 82AC 5F F8 00 AF
  97+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  97+ 82B4 02 A9 00 01
  98+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  98+ 82BC 00 00 40 00
  99+ 82C0
 100+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 100+ 82C4 04 28 00 04
 101+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 101+ 82CC 00 05 54 00
 102+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 102+ 82D4 D0 00 06 C0
 103+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 103+ 82DC 2F FC 00 57
 104+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 104+ 82E4 01 54 80 00
 105+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 105+ 82EC 00 00 20 00
 106+ 82F0
 107+ 82F0
 108+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
 109+ 82F2 30 83        	defw Badsat_der_f8
 110+ 82F4 60 83        	defw Badsat_der_f9
 111+ 82F6 90 83        	defw Badsat_der_fa
 112+ 82F8 C0 83        	defw Badsat_der_fb
 113+ 82FA 00 84        	defw Badsat_der_fc
 114+ 82FC 30 84        	defw Badsat_der_fd
 115+ 82FE 60 84        	defw Badsat_der_fe
 116+ 8300
 117+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 118+ 8303 28 40 00     	DEFB    $28,$40,$00
 119+ 8306 54 40 00     	DEFB	$54,$40,$00
 120+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 121+ 830C 55 40 00     	DEFB	$55,$40,$00
 122+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 123+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 124+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 125+ 8318 07 50 00     	DEFB	$07,$50,$00
 126+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 127+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 128+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 129+ 8324 06 55 00     	DEFB	$06,$55,$00
 130+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 131+ 832A 00 14 00     	DEFB	$00,$14,$00
 132+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 133+ 8330
 134+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 134+ 8334 20 00 2A 20
 135+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 135+ 833C 2A A0 00 15
 136+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 136+ 8344 00 03 60 00
 137+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 137+ 834C F4 00 0B EA
 138+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 138+ 8354 03 2A 80 00
 139+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 139+ 835C 00 00 04 00
 140+ 8360
 141+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 141+ 8364 10 00 15 10
 142+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 142+ 836C 15 50 00 0A
 143+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 143+ 8374 80 01 B0 00
 144+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 144+ 837C FA 00 05 F5
 145+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 145+ 8384 01 95 40 00
 146+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 146+ 838C 00 00 02 00
 147+ 8390
 148+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 148+ 8394 08 00 0A 88
 149+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 149+ 839C 0A A8 00 05
 150+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 150+ 83A4 C0 00 D8 00
 151+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 151+ 83AC FD 00 02 FA
 152+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 152+ 83B4 00 CA A0 00
 153+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 153+ 83BC 80 00 01 00
 154+ 83C0
 155+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 155+ 83C4 84 00 05 44
 156+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 156+ 83CC 05 54 00 02
 157+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 157+ 83D4 E0 00 6C 00
 158+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 158+ 83DC FE 80 01 7D
 159+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 159+ 83E4 00 65 50 00
 160+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 160+ 83EC 40 00 00 80
 161+ 83F0
 162+ 83F0              ;! 16 bytes libres aquí !!!!!
 163+ 83F0
 164+ 83F0              	org $8400
 165+ 8400
 166+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 166+ 8404 42 00 02 A2
 167+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 167+ 840C 02 AA 00 01
 168+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 168+ 8414 F0 00 36 00
 169+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 169+ 841C FF 40 00 BE
 170+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 170+ 8424 00 32 A8 00
 171+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 171+ 842C A0 00 00 40
 172+ 8430
 173+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 173+ 8434 A1 00 01 51
 174+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 174+ 843C 01 55 00 00
 175+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 175+ 8444 F8 00 1B 00
 176+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 176+ 844C FF A0 00 1F
 177+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 177+ 8454 00 09 54 00
 178+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 178+ 845C 50 00 00 20
 179+ 8460
 180+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 180+ 8464 50 80 00 A8
 181+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 181+ 846C 00 AA 80 00
 182+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 182+ 8474 FC 00 0D 80
 183+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 183+ 847C FF D0 00 0F
 184+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 184+ 8484 00 04 AA 00
 185+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 185+ 848C 28 00 00 10
 186+ 8490
 187+ 8490              ; ----------------------------------------------------------------------------------------
 188+ 8490
 189+ 8490              ; Amadeus. 2x2.
 190+ 8490
 191+ 8490              ;	org $8119
 192+ 8490
 193+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 194+ 8492 00 00        	defw 0
 195+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 196+ 8496 00 00        	defw 0
 197+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 198+ 849A 00 00        	defw 0
 199+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 200+ 849E 00 00        	defw 0	 								; (Fín de índice).
 201+ 84A0
 202+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 203+ 84A2 00 00        	defw 0
 204+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 205+ 84A6 00 00        	defw 0
 206+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 207+ 84AA 00 00        	defw 0
 208+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 209+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 210+ 84B0
 211+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 211+ 84B4 26 64 24 24
 212+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 212+ 84BC 6F F6 67 E6
 213+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 213+ 84C4 F7 EF FF FF
 214+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 214+ 84CC 8B D1 71 8E
 215+ 84D0
 216+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 216+ 84D4 F1 00 09 99
 217+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 217+ 84DC 0B 0D 00 1B
 218+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 218+ 84E4 80 19 F9 80
 219+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 219+ 84EC F3 C0 3D FB
 220+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 220+ 84F4 3E F7 C0 3E
 221+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 221+ 84FC 40 1C 63 80
 222+ 8500
 223+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 223+ 8504 3C 40 02 66
 224+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 224+ 850C 02 C3 40 06
 225+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 225+ 8514 60 06 7E 60
 226+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 226+ 851C 3C F0 0F 7E
 227+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 227+ 8524 0F BD F0 0F
 228+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 228+ 852C 10 07 18 E0
 229+ 8530
 230+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 230+ 8534 8F 10 00 99
 231+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 231+ 853C 00 B0 D0 01
 232+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 232+ 8544 D8 01 9F 98
 233+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 233+ 854C CF 3C 03 DF
 234+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 234+ 8554 03 EF 7C 03
 235+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 235+ 855C 44 01 C6 38
 236+ 8560
 237+ 8560              ; ----------------------------------------------------------------------------------------
 238+ 8560
 239+ 8560              ;	org $8690
 240+ 8560
 241+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 242+ 8562 96 85        	defw Explosion_2x3_2
 243+ 8564 C6 85        	defw Explosion_2x3_3
 244+ 8566
 245+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 245+ 856A 10 00 04 38
 246+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 246+ 8572 02 E6 80 01
 247+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 247+ 857A 00 03 DD 80
 248+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 248+ 8582 3B 80 01 9D
 249+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 249+ 858A 02 FD 80 03
 250+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 250+ 8592 00 08 00 00
 251+ 8596
 252+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 252+ 859A 38 10 03 BC
 253+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 253+ 85A2 04 06 C0 00
 254+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 254+ 85AA 00 03 DD 80
 255+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 255+ 85B2 3A 70 01 9C
 256+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 256+ 85BA 04 F8 80 06
 257+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 257+ 85C2 00 00 00 00
 258+ 85C6
 259+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 259+ 85CA 00 20 08 00
 260+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 260+ 85D2 00 06 00 00
 261+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 261+ 85DA 00 00 14 30
 262+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 262+ 85E2 38 00 01 08
 263+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 263+ 85EA 00 80 00 04
 264+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 264+ 85F2 10 08 00 20
 265+ 85F6
 266+ 85F6              ; ------------------------------------------
 267+ 85F6
 268+ 85F6 FC 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 269+ 85F8 1C 86        	defw Explosion_2x2_2
 270+ 85FA 3C 86        	defw Explosion_2x2_3
 271+ 85FC
 272+ 85FC 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 272+ 8600 43 84 37 D8
 273+ 8604 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 273+ 8608 17 F0 3D D8
 274+ 860C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 274+ 8610 19 D0 1F 60
 275+ 8614 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 275+ 8618 40 00 80 00
 276+ 861C
 277+ 861C
 278+ 861C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 278+ 8620 3B C2 60 0C
 279+ 8624 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 279+ 8628 07 F0 3D D8
 280+ 862C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 280+ 8630 19 C6 1F 64
 281+ 8634 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 281+ 8638 80 00 00 00
 282+ 863C
 283+ 863C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 283+ 8640 88 04 10 0C
 284+ 8644 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 284+ 8648 81 E0 01 43
 285+ 864C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 285+ 8650 10 80 18 00
 286+ 8654 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 286+ 8658 60 01 80 02
 287+ 865C
 288+ 865C
 289+ 865C
 290+ 865C
 291+ 865C
# file closed: Sprites_e_indices.asm
   8  865C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 865C              ; ---------------------------------------------------------------------
   2+ 865C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 865C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 865C              ; ---------------------------------------------------------------------
   5+ 865C
   6+ 865C              ; 27/03/24
   7+ 865C              ;
   8+ 865C              ;	En esta tabla iremos almacenando:
   9+ 865C              ;
  10+ 865C              ;	(Columna_Y),(mem.address de los scanlines masticados en el Scanlines_album) de cada entidad en curso.
  11+ 865C
  12+ 865C 00 00 00...  Tabla_de_pintado ds 24
  13+ 8674
  14+ 8674              ;	db 0, defw 0
  15+ 8674              ;	db 0, defw 0
  16+ 8674              ;	db 0, defw 0
  17+ 8674              ;	db 0, defw 0
  18+ 8674              ;	db 0, defw 0
  19+ 8674              ;	db 0, defw 0
  20+ 8674              ;	db 0, defw 0
  21+ 8674
  22+ 8674 B9 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  23+ 8676              ;	defw ...
  24+ 8676              ; 	defw ...
  25+ 8676 00 00        	defw 0
  26+ 8678
  27+ 8678              ; Control. %00000001 00000001
  28+ 8678              ;
  29+ 8678              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  30+ 8678              ;                    _ hacen las entidades hacia abajo.
  31+ 8678              ;
  32+ 8678              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  33+ 8678
  34+ 8678 7E 86        Indice_de_disparos_Amadeus defw Disparo_1A
  35+ 867A 86 86        	defw Disparo_2A
  36+ 867C 8E 86        	defw Disparo_3A
  37+ 867E
  38+ 867E 00 00        Disparo_1A defw 0									; Control.
  39+ 8680 00 00        	defw 0											; Puntero objeto.
  40+ 8682 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  41+ 8684 00 00        	defw 0											; Rutina de impresión.
  42+ 8686
  43+ 8686 00 00        Disparo_2A defw 0									; Control.
  44+ 8688 00 00        	defw 0											; Puntero objeto.
  45+ 868A 00 00        	defw 0											; Puntero de impresión.
  46+ 868C 00 00        	defw 0											; Rutina de impresión.
  47+ 868E
  48+ 868E 00 00        Disparo_3A defw 0
  49+ 8690
  50+ 8690 A6 86        Indice_de_disparos_entidades defw Disparo_1
  51+ 8692 AE 86        	defw Disparo_2
  52+ 8694 B6 86        	defw Disparo_3
  53+ 8696 BE 86        	defw Disparo_4
  54+ 8698 C6 86        	defw Disparo_5
  55+ 869A CE 86        	defw Disparo_6
  56+ 869C D6 86        	defw Disparo_7
  57+ 869E DE 86        	defw Disparo_8
  58+ 86A0 E6 86        	defw Disparo_9
  59+ 86A2 EE 86        	defw Disparo_10
  60+ 86A4 F6 86        	defw Disparo_11
  61+ 86A6
  62+ 86A6 00 00        Disparo_1 defw 0									; Control.
  63+ 86A8 00 00        	defw 0											; Puntero objeto.
  64+ 86AA 00 00        	defw 0											; Puntero de impresión.
  65+ 86AC 00 00        	defw 0											; Rutina de impresión.
  66+ 86AE
  67+ 86AE 00 00        Disparo_2 defw 0									; Control.
  68+ 86B0 00 00        	defw 0											; Puntero objeto.
  69+ 86B2 00 00        	defw 0											; Puntero de impresión.
  70+ 86B4 00 00        	defw 0											; Rutina de impresión.
  71+ 86B6
  72+ 86B6 00 00        Disparo_3 defw 0									; Control.
  73+ 86B8 00 00        	defw 0											; Puntero objeto.
  74+ 86BA 00 00        	defw 0											; Puntero de impresión.
  75+ 86BC 00 00        	defw 0											; Rutina de impresión.
  76+ 86BE
  77+ 86BE 00 00        Disparo_4 defw 0									; Control.
  78+ 86C0 00 00        	defw 0											; Puntero objeto.
  79+ 86C2 00 00        	defw 0											; Puntero de impresión.
  80+ 86C4 00 00        	defw 0											; Rutina de impresión.
  81+ 86C6
  82+ 86C6 00 00        Disparo_5 defw 0									; Control.
  83+ 86C8 00 00        	defw 0											; Puntero objeto.
  84+ 86CA 00 00        	defw 0											; Puntero de impresión.
  85+ 86CC 00 00        	defw 0											; Rutina de impresión.
  86+ 86CE
  87+ 86CE 00 00        Disparo_6 defw 0									; Control.
  88+ 86D0 00 00        	defw 0											; Puntero objeto.
  89+ 86D2 00 00        	defw 0											; Puntero de impresión.
  90+ 86D4 00 00        	defw 0											; Rutina de impresión.
  91+ 86D6
  92+ 86D6 00 00        Disparo_7 defw 0									; Control.
  93+ 86D8 00 00        	defw 0											; Puntero objeto.
  94+ 86DA 00 00        	defw 0											; Puntero de impresión.
  95+ 86DC 00 00        	defw 0											; Rutina de impresión.
  96+ 86DE
  97+ 86DE 00 00        Disparo_8 defw 0									; Control.
  98+ 86E0 00 00        	defw 0											; Puntero objeto.
  99+ 86E2 00 00        	defw 0											; Puntero de impresión.
 100+ 86E4 00 00        	defw 0											; Rutina de impresión.
 101+ 86E6
 102+ 86E6 00 00        Disparo_9 defw 0									; Control.
 103+ 86E8 00 00        	defw 0											; Puntero objeto.
 104+ 86EA 00 00        	defw 0											; Puntero de impresión.
 105+ 86EC 00 00        	defw 0											; Rutina de impresión.
 106+ 86EE
 107+ 86EE 00 00        Disparo_10 defw 0									; Control.
 108+ 86F0 00 00        	defw 0											; Puntero objeto.
 109+ 86F2 00 00        	defw 0											; Puntero de impresión.
 110+ 86F4 00 00        	defw 0											; Rutina de impresión.
 111+ 86F6
 112+ 86F6 00 00        Disparo_11 defw 0
 113+ 86F8
 114+ 86F8              ; -------------------------------------------------------------------------------------
 115+ 86F8              ;
 116+ 86F8              ;	Índice de cajas de entidades.
 117+ 86F8              ;
 118+ 86F8              ;	18/1/24
 119+ 86F8              ;
 120+ 86F8
 121+ 86F8              Indice_de_cajas_de_entidades
 122+ 86F8
 123+ 86F8 40 87        	defw Caja_1
 124+ 86FA 4D 87        	defw Caja_2
 125+ 86FC 5A 87        	defw Caja_3
 126+ 86FE 67 87        	defw Caja_4
 127+ 8700 74 87        	defw Caja_5
 128+ 8702 81 87        	defw Caja_6
 129+ 8704 8E 87        	defw Caja_7
 130+ 8706
 131+ 8706 00 00        	defw 0
 132+ 8708 00 00        	defw 0
 133+ 870A
 134+ 870A              ; ---------- ---------- ---------- ---------- ----------
 135+ 870A
 136+ 870A 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 137+ 870D 00 00        	defw 0		 										; (Posicion_actual).
 138+ 870F 00 00        	defw 0	 											; (Puntero_objeto).
 139+ 8711 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 140+ 8713
 141+ 8713 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 142+ 8714 05           	db %00000101										; (Attr).
 143+ 8715 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 144+ 8717 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 145+ 8719 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 146+ 871B 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 147+ 871D C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 148+ 871F 04           	db 4 												; (Cuad_objeto).
 149+ 8720 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 150+ 8721 00 00 00...  	ds 6												; Variables_de_borrado
 151+ 8727
 152+ 8727 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 153+ 8729
 154+ 8729              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 155+ 8729 00 00        	defw 0
 156+ 872B 00 00        	defw 0 												; Contador_de_mov_masticados
 157+ 872D 40           	db $40												; (Ctrl_0).
 158+ 872E 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 158+ 8732 00 00
 159+ 8734 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 160+ 8737 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 161+ 8739 00           	db 0												; (Cola_de_desplazamiento).
 162+ 873A 00           	db 0 												; (Columnas).
 163+ 873B 00 00        	defw 0												; (Limite_horizontal).
 164+ 873D 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 165+ 8740
 166+ 8740              ; ---------- ---------- ---------- ---------- ----------
 167+ 8740              ;
 168+ 8740              ;	22/01/24
 169+ 8740              ;
 170+ 8740              ; 	Cada caja tiene 13 bytes !!!
 171+ 8740
 172+ 8740 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 173+ 8743 00           	db %00000000										; (Attr).
 174+ 8744 00           	db 0												; (Impacto).
 175+ 8745 00 00        	defw 0												; (Puntero_de_impresion).
 176+ 8747 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 177+ 8749 00 00        	defw 0 												; (Contador_de_mov_masticados).
 178+ 874B 00           	db 0												; (Ctrl_0).
 179+ 874C 00           	db 0												; (Ctrl_2).
 180+ 874D
 181+ 874D              ; ---------- ---------- ---------- ---------- ----------
 182+ 874D
 183+ 874D 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 184+ 8750 00           	db %00000000										; (Attr).
 185+ 8751 00           	db 0												; (Impacto).
 186+ 8752 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 8754 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 8756 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 8758 00           	db 0												; (Ctrl_0).
 190+ 8759 00           	db 0												; (Ctrl_2).
 191+ 875A
 192+ 875A              ; ---------- ---------- ---------- ---------- ----------
 193+ 875A
 194+ 875A 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 195+ 875D 00           	db %00000000										; (Attr).
 196+ 875E 00           	db 0												; (Impacto).
 197+ 875F 00 00        	defw 0												; (Puntero_de_impresion).
 198+ 8761 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 199+ 8763 00 00        	defw 0 												; (Contador_de_mov_masticados).
 200+ 8765 00           	db 0												; (Ctrl_0).
 201+ 8766 00           	db 0												; (Ctrl_2).
 202+ 8767
 203+ 8767              ; ---------- ---------- ---------- ---------- ----------
 204+ 8767
 205+ 8767 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 206+ 876A 00           	db %00000000										; (Attr).
 207+ 876B 00           	db 0												; (Impacto).
 208+ 876C 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 876E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 8770 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 8772 00           	db 0												; (Ctrl_0).
 212+ 8773 00           	db 0												; (Ctrl_2).
 213+ 8774
 214+ 8774              ; ---------- ---------- ---------- ---------- ----------
 215+ 8774
 216+ 8774 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 8777 00           	db %00000000										; (Attr).
 218+ 8778 00           	db 0												; (Impacto).
 219+ 8779 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 877B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 877D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 877F 00           	db 0												; (Ctrl_0).
 223+ 8780 00           	db 0												; (Ctrl_2).
 224+ 8781
 225+ 8781              ; ---------- ---------- ---------- ---------- ----------
 226+ 8781
 227+ 8781 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 228+ 8784 00           	db %00000000										; (Attr).
 229+ 8785 00           	db 0												; (Impacto).
 230+ 8786 00 00        	defw 0												; (Puntero_de_impresion).
 231+ 8788 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 232+ 878A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 233+ 878C 00           	db 0												; (Ctrl_0).
 234+ 878D 00           	db 0												; (Ctrl_2).
 235+ 878E
 236+ 878E              ; ---------- ---------- ---------- ---------- ----------
 237+ 878E
 238+ 878E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 239+ 8791 00           	db %00000000										; (Attr).
 240+ 8792 00           	db 0												; (Impacto).
 241+ 8793 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 8795 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 8797 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 8799 00           	db 0												; (Ctrl_0).
 245+ 879A 00           	db 0												; (Ctrl_2).
 246+ 879B
 247+ 879B              ; -------------------------------------------------------------------------------------
 248+ 879B              ;
 249+ 879B              ;	11/1/24
 250+ 879B              ;
 251+ 879B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 879B              ;
 253+ 879B              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 879B              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 879B              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 879B              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 879B
 258+ 879B              Indice_de_definiciones_de_entidades
 259+ 879B
 260+ 879B 9F 87        	defw Entidad_1
 261+ 879D AC 87        	defw Entidad_2
 262+ 879F
 263+ 879F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 879F
 265+ 879F              ;	BADSAT, (Satélite malvado).
 266+ 879F
 267+ 879F 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87A2 04           	db %00000100										; (Attr).
 269+ 87A3 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87A5 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87A7 03 40        	defw $4003	                                     	; (Posicion_inicio).
 272+ 87A9 01           	db 1												; (Cuad_objeto).
 273+ 87AA 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87AC
 275+ 87AC 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87AF 02           	db %00000010										; (Attr).
 277+ 87B0 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87B2 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87B4 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87B6 01           	db 1												; (Cuad_objeto).
 281+ 87B7 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87B9
# file closed: Cajas_y_disparos.asm
   9  87B9              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87B9
   2+ 87B9
   3+ 87B9              ;   07/07/23
   4+ 87B9              ;
   5+ 87B9              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87B9              ;
   7+ 87B9              ;   Codificación:
   8+ 87B9              ;
   9+ 87B9              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87B9              ;
  11+ 87B9              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87B9              ;
  13+ 87B9              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87B9              ;
  15+ 87B9              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87B9              ;
  17+ 87B9              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87B9              ;                               ..... %01000010 Vel_up 4
  19+ 87B9              ;                                               Vel_down 2
  20+ 87B9              ;                               ..... $42
  21+ 87B9              ;
  22+ 87B9              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87B9              ;
  24+ 87B9              ;                               ..... %01000010 Vel_left 4
  25+ 87B9              ;                                               Vel_right 2
  26+ 87B9              ;                               ..... $42
  27+ 87B9              ;
  28+ 87B9              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87B9              ;
  30+ 87B9              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87B9              ;
  32+ 87B9              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87B9              ;
  34+ 87B9              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87B9              ;                                     $53
  36+ 87B9              ;
  37+ 87B9              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87B9              ;
  39+ 87B9              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87B9              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87B9              ;
  42+ 87B9              ;                       Arriba ..... $81
  43+ 87B9              ;                       Arriba - izquierda ..... $a1
  44+ 87B9              ;                       Arriba - derecha ..... $91
  45+ 87B9              ;
  46+ 87B9              ;                       Abajo ..... $41
  47+ 87B9              ;                       Abajo - izquierda ..... $61
  48+ 87B9              ;                       Abajo - derecha ..... $51
  49+ 87B9              ;
  50+ 87B9              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87B9              ;
  52+ 87B9              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87B9              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87B9              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87B9              ;
  56+ 87B9              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87B9              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87B9              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87B9              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87B9              ;
  61+ 87B9              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87B9              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87B9              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87B9              ;
  65+ 87B9              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87B9              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87B9              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87B9              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87B9
  70+ 87B9              ; ----- ----- ----- ----- -----
  71+ 87B9
  72+ 87B9 E5 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87BB ED 87            defw F_1
  74+ 87BD F7 87            defw F_2
  75+ 87BF 01 88            defw Codo_abajo_derecha
  76+ 87C1 35 88            defw Derecha_y_subiendo
  77+ 87C3 3F 88            defw Derecha_y_subiendo_1
  78+ 87C5 49 88            defw F_3
  79+ 87C7 53 88            defw F_4
  80+ 87C9 5D 88            defw Derecha_y_bajando
  81+ 87CB 67 88            defw Derecha_y_bajando_1
  82+ 87CD 71 88            defw Derecha_y_bajando_2
  83+ 87CF 7B 88            defw Codo_derecha_abajo
  84+ 87D1 AB 88            defw Codo_abajo_izq.
  85+ 87D3 DF 88            defw Izquierda_y_subiendo
  86+ 87D5 E9 88            defw Izquierda_y_subiendo_1
  87+ 87D7 F3 88            defw F_5
  88+ 87D9 FD 88            defw F_6
  89+ 87DB 07 89            defw Izquierda_y_bajando
  90+ 87DD 11 89            defw Izquierda_y_bajando_1
  91+ 87DF 1B 89            defw Izquierda_y_bajando_2
  92+ 87E1 25 89            defw Codo_izquierda_abajo
  93+ 87E3 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87E5
  95+ 87E5 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87E9 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87ED
  98+ 87ED 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87F1 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87F5 08 00
 100+ 87F7
 101+ 87F7 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87FB 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87FF 0F FE
 103+ 8801
 104+ 8801 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8805 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8809 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 880D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8811 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8815 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8819 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 881D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8821 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8825 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8829 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 882D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8831 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8835
 118+ 8835 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8839 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 883D 06 00
 120+ 883F
 121+ 883F 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8843 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8847 02 00
 123+ 8849
 124+ 8849 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 884D 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8851 04 00
 126+ 8853
 127+ 8853 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8857 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 885B 08 00
 129+ 885D
 130+ 885D 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8861 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8865 02 00
 132+ 8867
 133+ 8867 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 886B 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 886F 06 00
 135+ 8871
 136+ 8871 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8875 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8879 06 00
 138+ 887B
 139+ 887B              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 887B
 141+ 887B 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 887F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8883 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8887 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 888B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 888F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8893 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8897 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 889B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 889F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88A3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88A7 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88AB
 154+ 88AB 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88AF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88B3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88B7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88BB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88BF 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88C3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88C7 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88CB 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88CF 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88D3 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88D7 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88DB 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88DF
 168+ 88DF 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88E3 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88E7 06 00
 170+ 88E9
 171+ 88E9 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88ED 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88F1 02 00
 173+ 88F3
 174+ 88F3 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88F7 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88FB 04 00
 176+ 88FD
 177+ 88FD 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8901 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8905 08 00
 179+ 8907
 180+ 8907 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 890B 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 890F 02 00
 182+ 8911
 183+ 8911 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8915 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8919 06 00
 185+ 891B
 186+ 891B 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 891F 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8923 06 00
 188+ 8925
 189+ 8925 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8929 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 892D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8931 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8935 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8939 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 893D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8941 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8945 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8949 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 894D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8951 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8955
 202+ 8955
 203+ 8955
 204+ 8955
 205+ 8955
 206+ 8955
 207+ 8955
 208+ 8955
 209+ 8955
 210+ 8955
# file closed: Patrones_de_mov.asm
  10  8955              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8955              ; 19/1/24
   2+ 8955
   3+ 8955              Indice_de_niveles
   4+ 8955
   5+ 8955 5D 89        	defw Nivel_1
   6+ 8957 68 89        	defw Nivel_2
   7+ 8959
   8+ 8959              ;	...
   9+ 8959              ;	...
  10+ 8959              ;	+ Niveles ...
  11+ 8959
  12+ 8959 00 00        	defw 0
  13+ 895B 00 00        	defw 0
  14+ 895D
  15+ 895D 06           Nivel_1 db 6									; Nº de entidades.
  16+ 895E 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8962 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8966 01 01
  18+ 8968
  19+ 8968 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8969 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 896D 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8971 01 02
  22+ 8973 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8977 01 02
  23+ 8979
# file closed: Niveles.asm
  11  8979
  12  8979              ; ******************************************************************************************************************************************************************************************
  13  8979              ; Constantes.
  14  8979              ; ******************************************************************************************************************************************************************************************
  15  8979              ;
  16  8979              ; 09/03/24
  17  8979
  18  8979              ; Constantes.
  19  8979
  20  8979              Frames equ $5c78
  21  8979              Frames_3 equ $5c7a										; Reloj en tiempo real del sistema. VARIABLES DEL SISTEMA, (ROM).
  22  8979
  23  8979              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
  24  8979
  25  8979              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  26  8979              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  27  8979              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  28  8979              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  29  8979
  30  8979              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb00 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
  31  8979
  32  8979              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
  33  8979
  34  8979              ;                                                       ; 35 bytes por entidad.
  35  8979              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  36  8979              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  37  8979              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  38  8979              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  39  8979
  40  8979              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
  41  8979
  42  8979
  43  8979              ; ******************************************************************************************************************************************************************************************
  44  8979              ; Variables.
  45  8979              ; ******************************************************************************************************************************************************************************************
  46  8979              ;
  47  8979              ; 18/01/24
  48  8979              ;
  49  8979              ; Variables de DRAW. (Motor principal).	42 Bytes.
  50  8979              ;
  51  8979
  52  8979              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
  53  8979
  54  8979 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
  55  897A              ;															- Patrón de movimiento.
  56  897A              ;															- Aspecto
  57  897A 00           Filas db 0												; Filas. [DRAW]
  58  897B 00           Columns db 0 	  										; Nº de columnas. [DRAW]
  59  897C 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  60  897E 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  61  8980 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  62  8981 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  63  8982
  64  8982              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  65  8982
  66  8982 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  67  8983              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  68  8983              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  69  8983 00           Attr db 0												; Atributos de la entidad:
  70  8984
  71  8984              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  72  8984              ;
  73  8984              ;	COLORES: 0 ..... NEGRO
  74  8984              ;    		 1 ..... AZUL
  75  8984              ; 			 2 ..... ROJO
  76  8984              ;			 3 ..... MAGENTA
  77  8984              ; 			 4 ..... VERDE
  78  8984              ; 			 5 ..... CIAN
  79  8984              ;			 6 ..... AMARILLO
  80  8984              ; 			 7 ..... BLANCO
  81  8984
  82  8984 00 00        Indice_Sprite_der defw 0
  83  8986 00 00        Indice_Sprite_izq defw 0
  84  8988 00 00        Puntero_DESPLZ_der defw 0
  85  898A 00 00        Puntero_DESPLZ_izq defw 0
  86  898C
  87  898C 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  88  898E 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  89  898F
  90  898F              ; Variables de objeto. (Características).
  91  898F
  92  898F 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  93  8990              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  94  8990              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  95  8990              ; Variables_de_borrado ds 6
  96  8990
  97  8990 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
  98  8992              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
  99  8992
 100  8992 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 101  8994
 102  8994              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 103  8994              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 104  8994
 105  8994 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 106  8996              ;														; _palabras que componen el "movimiento_masticado".
 107  8996
 108  8996              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 109  8996
 110  8996 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 111  8997              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 112  8997              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 113  8997              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 114  8997              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 115  8997              ;
 116  8997              ; 														DESCRIPCIÖN:
 117  8997              ;
 118  8997              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 119  8997              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 120  8997              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 121  8997              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 122  8997              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 123  8997              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 124  8997              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 125  8997              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 126  8997              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 127  8997              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 128  8997              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 129  8997              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 130  8997              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 131  8997              ;
 132  8997              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 133  8997              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 134  8997              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 135  8997
 136  8997              ; Variables de funcionamiento. [DRAW].
 137  8997
 138  8997 00           Columnas db 0
 139  8998 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 140  899A              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 141  899A 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 142  899B
 143  899B              ; variables de control general.
 144  899B
 145  899B 00           Ctrl_2 db 0
 146  899C              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 147  899C              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 148  899C              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 149  899C              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 150  899C              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 151  899C              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 152  899C              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 153  899C              ;
 154  899C              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 155  899C              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 156  899C              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 157  899C              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 158  899C              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 159  899C              ;														BIT 4, ???
 160  899C              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 161  899C
 162  899C 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 163  899D
 164  899D              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 165  899D
 166  899D              ;					         		---------;      ;---------
 167  899D
 168  899D              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 169  899D
 170  899D              Perfiles_de_velocidad
 171  899D
 172  899D 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 173  899E 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 174  899F 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 175  89A0 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 176  89A1
 177  89A1              ; Contadores de 16 bits.
 178  89A1
 179  89A1 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 180  89A3 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 181  89A5 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 182  89A7 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 183  89A9
 184  89A9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 185  89A9
 186  89A9 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 187  89AB 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 188  89AD 00 00        Puntero_indice_mov_bucle defw 0							;
 189  89AF              ;
 190  89AF              ;
 191  89AF 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 192  89B0              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 193  89B0              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 194  89B0 00           Incrementa_puntero_backup db 0
 195  89B1 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 196  89B2              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 197  89B2 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 198  89B3 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 199  89B4 00           Cola_de_desplazamiento db 0								; Este byte indica:
 200  89B5              ;
 201  89B5              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 202  89B5              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 203  89B5              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 204  89B5              ;
 205  89B5              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 206  89B5              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 207  89B5              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 208  89B5              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 209  89B5              ;
 210  89B5              ;														;	"$ff" ..... Bucle infinito de repetición.
 211  89B5              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 212  89B5              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 213  89B5              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 214  89B5
 215  89B5 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 216  89B6
 217  89B6              ;														DESCRIPCIÓN:
 218  89B6              ;
 219  89B6              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 220  89B6              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 221  89B6              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 222  89B6              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 223  89B6              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 224  89B6              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 225  89B6
 226  89B6              ;														BIT 3, Recarga de nueva oleada.
 227  89B6              ;														BIT 4, Recarga de nueva oleada.
 228  89B6              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 229  89B6              ;														BIT 6, **** Frame completo.
 230  89B6              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 231  89B6
 232  89B6 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 233  89B8              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 234  89B8              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 235  89B8              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 236  89B8
 237  89B8              ; Gestión de ENTIDADES y CAJAS.
 238  89B8
 239  89B8 00 00        Puntero_store_caja defw 0
 240  89BA 00 00        Puntero_restore_caja defw 0
 241  89BC 00 00        Indice_restore_caja defw 0
 242  89BE 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 243  89BF 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 244  89C0 00           Entidades_en_curso db 0									; ..... ..... .....
 245  89C1 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 246  89C2              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 247  89C2              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 248  89C2              ;														; _ (Numero_de_malotes)="0".
 249  89C2 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 250  89C4 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 251  89C6              ;														; _ puntero (Indice_entidades).
 252  89C6
 253  89C6              ;---------------------------------------------------------------------------------------------------------------
 254  89C6              ;
 255  89C6              ;	11/01/24
 256  89C6              ;
 257  89C6              ;	Álbumes.
 258  89C6
 259  89C6 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 260  89C8              ;														; _variable para almacenar lo posición del puntero_
 261  89C8              ; 														; _de pila, SP.
 262  89C8 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 263  89CA              ;														; La utiliza la rutina [Extrae_foto_registros].
 264  89CA              ; Impresión. ----------------------------------------------------------------------------------------------------
 265  89CA
 266  89CA 00 00        Album_de_pintado defw 0
 267  89CC 00 00        Album_de_borrado defw 0
 268  89CE 00 00        Techo_Scanlines_album defw 0
 269  89D0 00 00        Techo_Scanlines_album_2 defw 0
 270  89D2 00           Switch db 0
 271  89D3 00 00        Techo defw 0
 272  89D5 00 00        Scanlines_album_SP defw 0
 273  89D7 5C 86        India_SP defw Tabla_de_pintado
 274  89D9 5F 86        India_2_SP defw Tabla_de_pintado+3
 275  89DB
 276  89DB 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 277  89DC              ;
 278  89DC              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 279  89DC              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 280  89DC              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 281  89DC              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 282  89DC              ;																Habilita el borrado/pintado de sprites.
 283  89DC              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 284  89DC              ;																_ a la baja.
 285  89DC              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 286  89DC
 287  89DC
 288  89DC
 289  89DC 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 290  89DD              ;
 291  89DD              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 292  89DD              ;
 293  89DD              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 294  89DD              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 295  89DD              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 296  89DD              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 297  89DD              ;
 298  89DD              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 299  89DD              ;															_ masticados ya generados.
 300  89DD              ;
 301  89DD              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 302  89DD              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 303  89DD              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 304  89DD              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 305  89DD
 306  89DD
 307  89DD              ; Gestión de Disparos.
 308  89DD
 309  89DD              ;;Numero_de_disparotes db 0
 310  89DD              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 311  89DD              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 312  89DD              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 313  89DD              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 314  89DD              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 315  89DD              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 316  89DD              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 317  89DD              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 318  89DD              ;														; _produzca colisión.
 319  89DD              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 320  89DD              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 321  89DD              ;;Coordenadas_X_Amadeus ds 3							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 322  89DD              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 323  89DD 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 324  89E0              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 325  89E0              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 326  89E0
 327  89E0              ;---------------------------------------------------------------------------------------------------------------
 328  89E0
 329  89E0              ; Relojes y temporizaciones.
 330  89E0
 331  89E0              ;Clock_explosion db 4
 332  89E0 14           Clock_Entidades_en_curso db 20
 333  89E1 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 334  89E2              ;														; Repite la oleada de entidades.
 335  89E2              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 336  89E2              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 337  89E2              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 338  89E2
 339  89E2              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 340  89E2              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 341  89E2              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 342  89E2
 343  89E2              ;---------------------------------------------------------------------------------------------------------------
 344  89E2
 345  89E2              ; Gestión de NIVELES.
 346  89E2
 347  89E2 00           Nivel db 0												; Nivel actual del juego.
 348  89E3 00 00        Puntero_indice_NIVELES defw 0
 349  89E5 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 350  89E7              ; 														; _ que definen el NIVEL.
 351  89E7              ; Y todo comienza aquí .....
 352  89E7              ;
 353  89E7              ; 	INICIO  *************************************************************************************************************************************************************************
 354  89E7              ;
 355  89E7              ;	5/1/24
 356  89E7
 357  89E7              START
 358  89E7
 359  89E7 F3           	DI
 360  89E8
 361  89E8              ;	ld a,%00000111
 362  89E8              ;	call Cls
 363  89E8 CD D6 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 364  89EB
 365  89EB              ; INICIALIZACIÓN.
 366  89EB
 367  89EB              ;	Inicializa 1er Nivel.
 368  89EB
 369  89EB 21 55 89     	ld hl,Indice_de_niveles
 370  89EE 22 E3 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 371  89F1 CD 0A 9A     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 372  89F4              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 373  89F4              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 374  89F4              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 375  89F4
 376  89F4              ;	Provisional, (para desarrollo).
 377  89F4              	;-
 378  89F4              ;	ld hl,Numero_parcial_de_entidades
 379  89F4              ;	ld b,(hl)
 380  89F4              ;	inc b
 381  89F4              ;	dec b
 382  89F4              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 383  89F4
 384  89F4 CD 39 8C     	call Inicia_albumes_de_lineas
 385  89F7
 386  89F7 CD 4F 9A     4 call Inicia_Entidades
 387  89FA
 388  89FA CD 49 8C     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 389  89FD              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 390  89FD              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 391  89FD              ; (Esto se dá cuando se inicia una nueva oleada).
 392  89FD
 393  89FD              ;	ld a,(Ctrl_1)
 394  89FD              ;	bit 3,a
 395  89FD              ;	jr nz,5F											 ; Loop
 396  89FD
 397  89FD              ; 	INICIA AMADEUS !!!!!
 398  89FD
 399  89FD              ;3 call Restore_Amadeus
 400  89FD              ;	call Inicia_Puntero_objeto
 401  89FD              ;	call Draw
 402  89FD
 403  89FD              ;	call Guarda_movimiento_masticado	;! Provisional
 404  89FD
 405  89FD              ;	call Genera_datos_de_impresion
 406  89FD              ;	call Guarda_datos_de_borrado_Amadeus
 407  89FD
 408  89FD              ;	ld de,Amadeus_db
 409  89FD              ;	call Store_Amadeus
 410  89FD
 411  89FD              ; 	INICIA DISPAROS !!!!!
 412  89FD
 413  89FD              ;	call Inicia_Puntero_Disparo_Entidades
 414  89FD              ;	call Inicia_Puntero_Disparo_Amadeus
 415  89FD
 416  89FD              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 417  89FD
 418  89FD              ;5 call Inicia_punteros_de_cajas
 419  89FD              ;	call Restore_entidad
 420  89FD
 421  89FD              ;	ld a,(Ctrl_1)
 422  89FD              ;	bit 3,a
 423  89FD              ;	jr z,6F
 424  89FD
 425  89FD              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 426  89FD
 427  89FD              ;	ld hl,Ctrl_1
 428  89FD              ;	res 3,(hl)
 429  89FD              ;	jr Main
 430  89FD
 431  89FD              ; Damos por concluida la construcción del FRAME.
 432  89FD              ;
 433  89FD
 434  89FD 2A D5 89     6 ld hl,(Scanlines_album_SP)
 435  8A00 22 CE 89     	ld (Techo_Scanlines_album),hl
 436  8A03
 437  8A03 2A CC 89     	ld hl,(Album_de_borrado)
 438  8A06 22 D5 89     	ld (Scanlines_album_SP),hl
 439  8A09
 440  8A09 21 5C 86     	ld hl,Tabla_de_pintado
 441  8A0C 22 D7 89     	ld (India_SP),hl
 442  8A0F
 443  8A0F 21 DB 89     	ld hl,Ctrl_3
 444  8A12 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 445  8A14 CB D6        	set 2,(hl)
 446  8A16
 447  8A16 FB           	ei
 448  8A17 76           	halt
 449  8A18
 450  8A18              ; ------------------------------------
 451  8A18
 452  8A18              Main
 453  8A18              ;
 454  8A18              ;	16/04/24
 455  8A18
 456  8A18              ; Regresamos de (RST38).
 457  8A18              ; Lo primero que hacemos es BORRAR/PINTAR la pantalla.
 458  8A18
 459  8A18 3E 02        	ld a,2
 460  8A1A D3 FE        	out ($fe),a
 461  8A1C
 462  8A1C CD 51 9C     	call Imprime_pantalla
 463  8A1F
 464  8A1F 3E 01        	ld a,1												; Borde azul.
 465  8A21 D3 FE        	out ($fe),a
 466  8A23
 467  8A23
 468  8A23              ; Aparece nueva entidad ???
 469  8A23
 470  8A23              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 471  8A23              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 472  8A23              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 473  8A23              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 474  8A23              ;														; _un 2º bloque.
 475  8A23
 476  8A23              ;	call Genera_scanlines_masticados_a_borrar
 477  8A23              ;	call Limpia_Almacen_de_scanlines_masticados
 478  8A23
 479  8A23              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 480  8A23              ; 													 	; _(Scanlines_album_SP).
 481  8A23
 482  8A23 3A E0 89     	ld a,(Clock_Entidades_en_curso)
 483  8A26 47           	ld b,a
 484  8A27 3A 78 5C     	ld a,(Frames)
 485  8A2A B8           	cp b
 486  8A2B 20 18        	jr nz,13F
 487  8A2D
 488  8A2D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 489  8A2D              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 490  8A2D
 491  8A2D 3A BF 89     21 ld a,(Numero_parcial_de_entidades)
 492  8A30 47           	ld b,a
 493  8A31 3A C0 89     	ld a,(Entidades_en_curso)
 494  8A34 B8           	cp b
 495  8A35 28 0E        	jr z,13F
 496  8A37 30 0C        	jr nc,13F
 497  8A39
 498  8A39 3C           	inc a
 499  8A3A 32 C0 89     	ld (Entidades_en_curso),a
 500  8A3D
 501  8A3D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 502  8A3D
 503  8A3D 3A E0 89     	ld a,(Clock_Entidades_en_curso)
 504  8A40              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 505  8A40              ;! _ IMPREDECIBLE !!!!
 506  8A40 C6 64        	add 100
 507  8A42 32 E0 89     	ld (Clock_Entidades_en_curso),a
 508  8A45
 509  8A45              ; -------------------------------------------------------------------------------------------------------------
 510  8A45
 511  8A45              ; Habilita disparos.
 512  8A45
 513  8A45              13
 514  8A45
 515  8A45              ;	ld hl,Disparo_Amadeus
 516  8A45              ;	ld de,CLOCK_repone_disparo_Amadeus
 517  8A45              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 518  8A45
 519  8A45              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 520  8A45              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 521  8A45              ;	call Habilita_disparos
 522  8A45
 523  8A45              ; COLISIONES.
 524  8A45
 525  8A45              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 526  8A45
 527  8A45              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 528  8A45              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 529  8A45              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 530  8A45
 531  8A45              ;	xor a
 532  8A45              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 533  8A45
 534  8A45              ;	call Inicia_punteros_de_cajas
 535  8A45              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 536  8A45              ; 														; _ en DRAW.
 537  8A45
 538  8A45              ;	ld a,(Filas)
 539  8A45              ;	and a
 540  8A45              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 541  8A45              ;	call Incrementa_punteros_de_cajas
 542  8A45              ;	jr 12B
 543  8A45
 544  8A45              ; ---------------------------------------------------------------------------------------
 545  8A45
 546  8A45 3A BF 89     10 ld a,(Numero_parcial_de_entidades)
 547  8A48 47               ld b,a
 548  8A49 A7           	and a
 549  8A4A 20 00        	jr nz,11F
 550  8A4C
 551  8A4C              ;	ld hl,Ctrl_1;
 552  8A4C              ;	bit 4,(hl)
 553  8A4C              ;	jp nz,16F
 554  8A4C
 555  8A4C              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 556  8A4C
 557  8A4C              ;	ld hl,Ctrl_1
 558  8A4C              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 559  8A4C
 560  8A4C              ;	ld a,(Contador_de_frames)
 561  8A4C              ;	inc a
 562  8A4C              ;	ld (Activa_recarga_cajas),a
 563  8A4C
 564  8A4C              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 565  8A4C
 566  8A4C 3A C0 89     11 ld a,(Entidades_en_curso)
 567  8A4F A7           	and a
 568  8A50 28 42        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 569  8A52 47           	ld b,a												; No hay entidades que gestionar.
 570  8A53
 571  8A53              ; ( Código que ejecutamos con cada entidad: ).
 572  8A53
 573  8A53              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 574  8A53              ;
 575  8A53              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 576  8A53
 577  8A53 21 5C 86     	ld hl,Tabla_de_pintado
 578  8A56 22 D7 89     	ld (India_SP),hl
 579  8A59
 580  8A59 21 DB 89     	ld hl,Ctrl_3
 581  8A5C CB D6        	set 2,(hl)
 582  8A5E CD AB 8A     	call Change
 583  8A61
 584  8A61 C5           15 push bc 												; Nº de entidades en curso.
 585  8A62
 586  8A62 CD 9A 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 587  8A65
 588  8A65 CD F5 8A     	call Recauda_informacion_de_entidad_en_curso		; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 589  8A68
 590  8A68
 591  8A68              ; Existe "Entidad_guía" ???.
 592  8A68              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 593  8A68
 594  8A68              ;	ld a,(Ctrl_3)
 595  8A68              ;	bit 1,a
 596  8A68              ;	jr nz,22F
 597  8A68
 598  8A68              ; Almacén de "Movimientos_masticados" lleno ???
 599  8A68              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 600  8A68              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 601  8A68
 602  8A68              ;;	ld a,(Ctrl_3)
 603  8A68              ;;	bit 3,a
 604  8A68              ;;	jr nz,22F
 605  8A68
 606  8A68              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 607  8A68
 608  8A68              ;	ld hl,Ctrl_2
 609  8A68              ;	set 5,(hl)
 610  8A68              ;	ld hl,Ctrl_3
 611  8A68              ;	set 1,(hl)
 612  8A68
 613  8A68              ; Impacto ???
 614  8A68
 615  8A68              ;22 ld a,(Impacto)
 616  8A68              ;	and a
 617  8A68              ;	jr z,8F
 618  8A68
 619  8A68              ; Hay Impacto en esta entidad.
 620  8A68
 621  8A68              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 622  8A68              ;	dec (hl)
 623  8A68              ;	jp nz,17F
 624  8A68
 625  8A68              ;! Velocidad de la animación de la explosión.
 626  8A68
 627  8A68              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 628  8A68              ;														; _,(velocidad de la explosión).
 629  8A68              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 630  8A68
 631  8A68              ;	call Repone_datos_de_borrado
 632  8A68              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 633  8A68
 634  8A68              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 635  8A68
 636  8A68              ;	ld a,(Ctrl_2)
 637  8A68              ;	bit 1,a
 638  8A68              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 639  8A68
 640  8A68              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 641  8A68
 642  8A68              ;	ld a,(CTRL_DESPLZ)
 643  8A68              ;	and a
 644  8A68              ;	jr nz,18F
 645  8A68
 646  8A68              ;	ld hl,Indice_Explosion_2x2-2
 647  8A68              ;	ld (Puntero_DESPLZ_der),hl
 648  8A68              ;	jr 19F
 649  8A68
 650  8A68              ;18 ld hl,Indice_Explosion_2x3-2
 651  8A68              ;	ld (Puntero_DESPLZ_der),hl
 652  8A68
 653  8A68              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 654  8A68              ;	set 1,(hl)
 655  8A68              ;	jr 7F
 656  8A68
 657  8A68              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 658  8A68              ; _con las coordenadas de la entidad almacenada en DRAW.
 659  8A68
 660  8A68              ;8 ld a,(Ctrl_1)
 661  8A68              ;	bit 2,a
 662  8A68              ;	jr z,7F
 663  8A68
 664  8A68              ;	ld hl,(Coordenadas_disparo_certero)
 665  8A68              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 666  8A68              ;														; E contiene la coordenada_X del disparo.
 667  8A68              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 668  8A68              ;														; H FILA, (Coordenada_y de la entidad).
 669  8A68              ;	and a
 670  8A68              ;	sbc hl,de
 671  8A68
 672  8A68              ;	call Determina_resultado_comparativa
 673  8A68
 674  8A68              ;	ld a,b
 675  8A68              ;	and a
 676  8A68              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 677  8A68
 678  8A68              ; ----- ----- -----
 679  8A68
 680  8A68              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 681  8A68              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 682  8A68
 683  8A68              ;	ld hl,Ctrl_1
 684  8A68              ;	res 2,(hl)
 685  8A68
 686  8A68              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 687  8A68
 688  8A68              ;	ld a,(Ctrl_0)
 689  8A68              ;	bit 4,a
 690  8A68              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 691  8A68
 692  8A68              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 693  8A68              ; [[[
 694  8A68              ;	call Detecta_disparo_entidad
 695  8A68              ; ]]]
 696  8A68
 697  8A68              ; -------------------------------------------
 698  8A68
 699  8A68 CD E5 8B      	call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 700  8A6B CD 8C 9C     	call Genera_datos_de_impresion
 701  8A6E              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 702  8A6E              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 703  8A6E              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 704  8A6E              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 705  8A6E
 706  8A6E CD C9 9A     	call Decrementa_Contador_de_mov_masticados
 707  8A71
 708  8A71              ; -------------------------------------------
 709  8A71
 710  8A71              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 711  8A71
 712  8A71 2A 90 89     	ld hl,(Puntero_de_impresion)
 713  8A74 CD FE 9B     	call Genera_coordenadas
 714  8A77
 715  8A77              ;	ld hl,Ctrl_0
 716  8A77              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 717  8A77
 718  8A77 CD B4 9A     17 call Store_Restore_cajas
 719  8A7A
 720  8A7A C1           	pop bc
 721  8A7B
 722  8A7B 10 E4        	djnz 15B
 723  8A7D
 724  8A7D              ; Hemos terminado de gestionar TODAS las ENTIDADES.
 725  8A7D
 726  8A7D CD 09 8B     	call Inicializa_India_y_limpia_Tabla_de_impresion 	; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 727  8A80 CD 20 8B     	call Ordena_tabla_de_impresion
 728  8A83 CD 49 8C     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 729  8A86
 730  8A86              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 731  8A86              ; Hemos gestionado todas las unidades.
 732  8A86              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 733  8A86
 734  8A86              ;	ld hl,Ctrl_1
 735  8A86              ;	res 2,(hl)
 736  8A86
 737  8A86
 738  8A86 CD C6 8A     	call Borra_diferencia
 739  8A89
 740  8A89 3A DB 89     	ld a,(Ctrl_3)
 741  8A8C CB 5F        	bit 3,a
 742  8A8E 20 04        	jr nz,16F
 743  8A90
 744  8A90 EB           	ex de,hl
 745  8A91 71           	ld (hl),c
 746  8A92 2C           	inc l
 747  8A93 70           	ld (hl),b											; Nuevo techo, mayor que el anterior.
 748  8A94
 749  8A94              ; Aquí situaremos la rutina que ordena el índice Masa.
 750  8A94
 751  8A94 2A CC 89     16 ld hl,(Album_de_borrado)
 752  8A97 22 D5 89     	ld (Scanlines_album_SP),hl
 753  8A9A
 754  8A9A 21 DB 89     	ld hl,Ctrl_3
 755  8A9D CB C6        	set 0,(hl) 											; Indica Frame completo.
 756  8A9F
 757  8A9F CB 9E        	res 3,(hl)
 758  8AA1 CB A6        	res 4,(hl)
 759  8AA3
 760  8AA3 AF           	xor a
 761  8AA4 D3 FE        	out ($fe),a
 762  8AA6 76           	halt
 763  8AA7
 764  8AA7              ; ----------------------------------------
 765  8AA7
 766  8AA7              ;	ld a,(Ctrl_1) 										; Existe Loop?
 767  8AA7              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 768  8AA7 CA 18 8A     	jp z,Main
 769  8AAA
 770  8AAA              ; RECARGA DE NUEVA OLEADA.
 771  8AAA
 772  8AAA              ;	ld a,(Contador_de_frames)
 773  8AAA              ;	ld b,a
 774  8AAA              ;	ld a,(Activa_recarga_cajas)
 775  8AAA              ;	cp b
 776  8AAA              ;	jr z,20F
 777  8AAA
 778  8AAA              ;	ld hl,Ctrl_1
 779  8AAA              ;	set 4,(hl)
 780  8AAA              ;	jp Main
 781  8AAA
 782  8AAA              ;20 ld hl,Ctrl_1
 783  8AAA              ;	res 4,(hl)
 784  8AAA
 785  8AAA              ;	ld a,(Contador_de_frames)
 786  8AAA
 787  8AAA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 788  8AAA              ;! _ IMPREDECIBLE !!!!
 789  8AAA
 790  8AAA              ;	add 10
 791  8AAA              ;	ld (Clock_Entidades_en_curso),a
 792  8AAA
 793  8AAA              ;	jp 4B
 794  8AAA
 795  8AAA C9           	ret
 796  8AAB
 797  8AAB              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 798  8AAB              ;
 799  8AAB              ;	16/11/23
 800  8AAB
 801  8AAB              ;;Gestiona_Amadeus
 802  8AAB
 803  8AAB              ;! Activa/desactiva impacto con Amadeus.
 804  8AAB
 805  8AAB              ;	ld a,(Impacto)
 806  8AAB              ;	and a
 807  8AAB              ;	jr nz,2F
 808  8AAB
 809  8AAB              ;;	call Mov_Amadeus
 810  8AAB
 811  8AAB              ;;2 ld a,(Ctrl_0)
 812  8AAB              ;;	bit 4,a
 813  8AAB              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 814  8AAB
 815  8AAB              ;;	call Guarda_foto_entidad_a_pintar
 816  8AAB              ;;	call Guarda_datos_de_borrado_Amadeus
 817  8AAB
 818  8AAB              ;;1 ld hl,Ctrl_0
 819  8AAB              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 820  8AAB
 821  8AAB              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 822  8AAB
 823  8AAB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 824  8AAB
 825  8AAB              ;	call Calcula_numero_de_disparotes
 826  8AAB
 827  8AAB              ;;	ret
 828  8AAB
 829  8AAB              ; -----------------------------
 830  8AAB              ;
 831  8AAB              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 832  8AAB              ;
 833  8AAB              ;	INPUTS: B a de estar a "0".
 834  8AAB
 835  8AAB              ;Prepara_Borra_sprites
 836  8AAB
 837  8AAB              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 838  8AAB              ;	ld a,l
 839  8AAB              ;	ret z
 840  8AAB
 841  8AAB              ;	srl a
 842  8AAB
 843  8AAB              ;2 sub 16
 844  8AAB              ;	jr z,1F
 845  8AAB              ;	inc b
 846  8AAB              ;	jr 2B
 847  8AAB
 848  8AAB              ;1 inc b
 849  8AAB
 850  8AAB              ;	exx
 851  8AAB              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 852  8AAB              ;	exx
 853  8AAB
 854  8AAB              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 855  8AAB              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 856  8AAB
 857  8AAB              ;	ret
 858  8AAB
 859  8AAB              ; --------------------------------------------------------------------------------------------------------------
 860  8AAB              ;
 861  8AAB              ;	15/12/23
 862  8AAB
 863  8AAB              ;Mov_obj
 864  8AAB
 865  8AAB              ;	ld a,(Ctrl_2)
 866  8AAB              ;	bit 1,a
 867  8AAB              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 868  8AAB
 869  8AAB              ; Explosión:
 870  8AAB
 871  8AAB              ;	ld a,(Frames_explosion)
 872  8AAB              ;	and a
 873  8AAB              ;	jr nz,4F
 874  8AAB
 875  8AAB              ;!  Una alimaña menos!!!!!!!!!1
 876  8AAB
 877  8AAB              ; Se trataba de una Entidad_guía ???
 878  8AAB
 879  8AAB              ;	ld a,(Ctrl_2)
 880  8AAB              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 881  8AAB              ;	jr z,5F
 882  8AAB
 883  8AAB              ;	ld hl,Ctrl_3
 884  8AAB              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 885  8AAB
 886  8AAB              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 887  8AAB              ;!! _generado puede ser distinto, (aletoriedad).
 888  8AAB
 889  8AAB              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 890  8AAB              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 891  8AAB              ;	dec (hl)
 892  8AAB              ;	ld hl,Entidades_en_curso
 893  8AAB              ;	dec (hl)
 894  8AAB              ;	ld hl,Numero_de_entidades
 895  8AAB              ;	dec (hl)
 896  8AAB              ;	jr 3F
 897  8AAB
 898  8AAB              ; -----
 899  8AAB
 900  8AAB              ;	`Movemos´ la explosión.
 901  8AAB
 902  8AAB              ;4 ld hl,(Puntero_DESPLZ_der)
 903  8AAB              ;	inc hl
 904  8AAB              ;	inc hl
 905  8AAB              ;	call Extrae_address
 906  8AAB              ;;	ld (Puntero_objeto),hl
 907  8AAB
 908  8AAB              ;;	ld hl,Frames_explosion
 909  8AAB              ;;	dec (hl)
 910  8AAB
 911  8AAB              ;;	ld hl,Ctrl_0
 912  8AAB              ;;	set 4,(hl);;
 913  8AAB
 914  8AAB              ;;	jr 3F
 915  8AAB
 916  8AAB              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 917  8AAB
 918  8AAB              ;2 xor a
 919  8AAB              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 920  8AAB
 921  8AAB              ; Movemos Entidades malignas.
 922  8AAB              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 923  8AAB
 924  8AAB              ;	ld a,(Ctrl_2)
 925  8AAB              ;	bit 5,a
 926  8AAB              ;	jr nz,8F
 927  8AAB
 928  8AAB              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 929  8AAB              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 930  8AAB              ;	jr 7F
 931  8AAB
 932  8AAB              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 933  8AAB
 934  8AAB              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 935  8AAB              ;	bit 4,a
 936  8AAB              ;	ret z
 937  8AAB
 938  8AAB              ; Ha habido desplazamiento de la entidad maligna.
 939  8AAB              ; Ha llegado a zona de AMADEUS ???
 940  8AAB
 941  8AAB              ;7 ld a,(Coordenada_y)
 942  8AAB              ;	cp $14
 943  8AAB              ;	jr c,1F
 944  8AAB
 945  8AAB              ; ---------
 946  8AAB
 947  8AAB              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 948  8AAB              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 949  8AAB
 950  8AAB              ;	di
 951  8AAB              ;	call Genera_coordenadas_X
 952  8AAB              ;	call Compara_coordenadas_X
 953  8AAB              ;	ei
 954  8AAB
 955  8AAB              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 956  8AAB
 957  8AAB              ; ---------
 958  8AAB
 959  8AAB              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 960  8AAB              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
 961  8AAB              ;	call Limpia_Variables_de_borrado
 962  8AAB
 963  8AAB              ;3 ret
 964  8AAB
 965  8AAB              ; --------------------------------------------------------------------------------------------------------------
 966  8AAB              ;
 967  8AAB              ;	29/1/23
 968  8AAB
 969  8AAB              ;Mov_Amadeus
 970  8AAB
 971  8AAB              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 972  8AAB
 973  8AAB              ;	call Mov_right
 974  8AAB
 975  8AAB              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 976  8AAB              ;	bit 4,a
 977  8AAB              ;	ret z
 978  8AAB
 979  8AAB              ; ---------
 980  8AAB
 981  8AAB              ;   call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 982  8AAB              ;	call Repone_datos_de_borrado_Amadeus
 983  8AAB              ;	call Limpia_Variables_de_borrado
 984  8AAB
 985  8AAB              ;	ret
 986  8AAB
 987  8AAB              ; --------------------------------------------------------------------------------------------------------------
 988  8AAB              ;
 989  8AAB              ;	17/3/24
 990  8AAB
 991  8AAB              Change
 992  8AAB
 993  8AAB 3A D2 89     	ld a,(Switch)
 994  8AAE EE 01        	xor 1
 995  8AB0 32 D2 89     	ld (Switch),a
 996  8AB3
 997  8AB3 2A CA 89     	ld hl,(Album_de_pintado)
 998  8AB6 ED 5B CC 89  	ld de,(Album_de_borrado)
 999  8ABA EB           	ex de,hl
1000  8ABB 22 CA 89     	ld (Album_de_pintado),hl
1001  8ABE 22 D5 89     	ld (Scanlines_album_SP),hl
1002  8AC1
1003  8AC1 ED 53 CC 89  	ld (Album_de_borrado),de
1004  8AC5
1005  8AC5 C9           	ret
1006  8AC6
1007  8AC6              ; ------------------------------------
1008  8AC6              ;
1009  8AC6              ; 18/03/24
1010  8AC6
1011  8AC6              Borra_diferencia
1012  8AC6
1013  8AC6 ED 4B D5 89  	ld bc,(Scanlines_album_SP)
1014  8ACA
1015  8ACA 3A D2 89     	ld a,(Switch)
1016  8ACD A7           	and a
1017  8ACE 28 08        	jr z,2F
1018  8AD0
1019  8AD0 2A D0 89     	ld hl,(Techo_Scanlines_album_2)
1020  8AD3 11 D0 89     	ld de,Techo_Scanlines_album_2
1021  8AD6 18 06        	jr 3F
1022  8AD8
1023  8AD8 2A CE 89     2 ld hl,(Techo_Scanlines_album)
1024  8ADB 11 CE 89     	ld de,Techo_Scanlines_album
1025  8ADE
1026  8ADE              ; Diferencia.
1027  8ADE
1028  8ADE ED 42        3 sbc hl,bc
1029  8AE0
1030  8AE0 C8           	ret z
1031  8AE1 D8           	ret c
1032  8AE2
1033  8AE2              ; Nuevo techo, (más bajo que el anterior).
1034  8AE2              ; Fijamos nuevo techo y borramos bytes sobrantes.
1035  8AE2
1036  8AE2 EB           	ex de,hl
1037  8AE3
1038  8AE3 71           	ld (hl),c
1039  8AE4 2C           	inc l
1040  8AE5 70           	ld (hl),b
1041  8AE6
1042  8AE6 AF           	xor a
1043  8AE7 43           	ld b,e
1044  8AE8
1045  8AE8 2A D5 89     	ld hl,(Scanlines_album_SP)
1046  8AEB
1047  8AEB 77           1 ld (hl),a
1048  8AEC 2C           	inc l
1049  8AED 10 FC        	djnz 1B
1050  8AEF
1051  8AEF              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1052  8AEF
1053  8AEF 21 DB 89     	ld hl,Ctrl_3
1054  8AF2 CB DE        	set 3,(hl)
1055  8AF4
1056  8AF4 C9           	ret
1057  8AF5
1058  8AF5              ; --------------------------------------------------------------------------------------------------------------
1059  8AF5              ;
1060  8AF5              ;	26/3/24
1061  8AF5
1062  8AF5              Recauda_informacion_de_entidad_en_curso
1063  8AF5
1064  8AF5              ; Almacena la Coordenada Y de la entidad en curso.
1065  8AF5
1066  8AF5              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1067  8AF5
1068  8AF5 3A 81 89     	ld a,(Coordenada_y)
1069  8AF8 2A D7 89     	ld hl,(India_SP)
1070  8AFB 77           	ld (hl),a
1071  8AFC 2C           	inc l
1072  8AFD
1073  8AFD              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1074  8AFD
1075  8AFD ED 5B D5 89  	ld de,(Scanlines_album_SP)
1076  8B01
1077  8B01 73           	ld (hl),e
1078  8B02 2C           	inc l
1079  8B03 72           	ld (hl),d
1080  8B04 2C           	inc l
1081  8B05
1082  8B05 22 D7 89     	ld (India_SP),hl
1083  8B08
1084  8B08 C9           	ret
1085  8B09
1086  8B09              ; --------------------------------------------------------------------------------------------------------------
1087  8B09              ;
1088  8B09              ;	27/03/24
1089  8B09              ;
1090  8B09
1091  8B09              Inicializa_India_y_limpia_Tabla_de_impresion
1092  8B09
1093  8B09 2A D7 89     	ld hl,(India_SP)
1094  8B0C 01 74 86     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1095  8B0F
1096  8B0F 79           	ld a,c
1097  8B10 95           	sub l
1098  8B11 28 06        	jr z,2F
1099  8B13 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1100  8B14              ;														; _ y pasamos a inicializar (India_SP).
1101  8B14 AF           	xor a
1102  8B15
1103  8B15 77           1 ld (hl),a
1104  8B16 2C           	inc l
1105  8B17 10 FC        	djnz 1B												; Limpia Tabla.
1106  8B19
1107  8B19 21 5C 86     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1108  8B1C 22 D7 89     	ld (India_SP),hl
1109  8B1F
1110  8B1F C9           	ret
1111  8B20
1112  8B20              ; --------------------------------------------------------------------------------------------------------------
1113  8B20              ;
1114  8B20              ;	31/3/24
1115  8B20
1116  8B20              Ordena_tabla_de_impresion
1117  8B20
1118  8B20              ; 5794 T/states.
1119  8B20              ; 6278 T/states.
1120  8B20              ; 5310 T/states.
1121  8B20
1122  8B20              ; Inicializamos punteros (India_SP) e (India_2_SP).
1123  8B20              ; Inicializamos contador de comparaciones, [C].
1124  8B20              ; Cargamos los registros A y B para efectuar comparación.
1125  8B20
1126  8B20 FD 2E 00     	ld iyl,0
1127  8B23
1128  8B23 3A C0 89     	ld a,(Entidades_en_curso)
1129  8B26 FE 04        	cp 4 	;	4
1130  8B28 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1131  8B29
1132  8B29 3D           	dec a
1133  8B2A 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1134  8B2B 51           	ld d,c 										; Copia de respaldo.
1135  8B2C
1136  8B2C 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1137  8B2D
1138  8B2D 21 5F 86     	ld hl,Tabla_de_pintado+3
1139  8B30 46           	ld b,(hl)
1140  8B31 22 D9 89     	ld (India_2_SP),hl
1141  8B34
1142  8B34 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1143  8B35 DC 5D 8B     	call c, Avanza_India_2_SP
1144  8B38 CC 5D 8B     	call z, Avanza_India_2_SP
1145  8B3B
1146  8B3B FD 2D        	dec iyl
1147  8B3D 28 18        	jr z,2F
1148  8B3F
1149  8B3F
1150  8B3F              ; --------------------------------------------------------------------------------------------------------------
1151  8B3F              ;
1152  8B3F              ;	7/4/24
1153  8B3F
1154  8B3F              Trueque
1155  8B3F
1156  8B3F              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1157  8B3F              ;  			A contiene en nº de fila de (India_SP).
1158  8B3F              ;			HL contiene (India_2_SP).
1159  8B3F
1160  8B3F D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1161  8B40 E5           	push hl										; Preservo (India_2_SP).
1162  8B41
1163  8B41 ED 5B D7 89  	ld de,(India_SP)
1164  8B45 EB           	ex de,hl
1165  8B46 70           	ld (hl),b
1166  8B47 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1167  8B48
1168  8B48 CD 89 8B     	call Intercambia_1_byte
1169  8B4B CD 89 8B     	call Intercambia_1_byte
1170  8B4E
1171  8B4E
1172  8B4E              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1173  8B4E              ; Recuperamos (India_2_SP) en HL.
1174  8B4E
1175  8B4E 2A D7 89     	ld hl,(India_SP)
1176  8B51 7E           	ld a,(hl)
1177  8B52
1178  8B52 E1           	pop hl
1179  8B53 D1           	pop de
1180  8B54
1181  8B54              ; --------------------------------------------------------------------------------------------------------------
1182  8B54
1183  8B54 CD 5D 8B     	call Avanza_India_2_SP
1184  8B57
1185  8B57 14           2 inc d
1186  8B58 15           	dec d
1187  8B59 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1188  8B5A 18 D8        	jr 1B
1189  8B5C
1190  8B5C C9           	ret
1191  8B5D
1192  8B5D              ; ----- ----- ----- ----- -----
1193  8B5D
1194  8B5D              Avanza_India_2_SP
1195  8B5D
1196  8B5D 0D           	dec c
1197  8B5E 28 0A        	jr z,Avanza_punteros_indios
1198  8B60
1199  8B60 FD 2C        	inc iyl
1200  8B62
1201  8B62 2C           	inc l
1202  8B63 2C           	inc l
1203  8B64 2C           	inc l
1204  8B65
1205  8B65 46           	ld b,(hl)
1206  8B66 22 D9 89     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1207  8B69
1208  8B69 C9           	ret
1209  8B6A
1210  8B6A              ; ----- ----- ----- ----- -----
1211  8B6A
1212  8B6A              Avanza_punteros_indios
1213  8B6A
1214  8B6A 15           	dec d
1215  8B6B 28 15        	jr z,Prepara_salida
1216  8B6D
1217  8B6D 4A           	ld c,d
1218  8B6E
1219  8B6E 2A D7 89     	ld hl,(India_SP)
1220  8B71 2C           	inc l
1221  8B72 2C           	inc l
1222  8B73 2C           	inc l
1223  8B74 7E           	ld a,(hl)
1224  8B75 22 D7 89     	ld (India_SP),hl
1225  8B78
1226  8B78 2C           	inc l
1227  8B79 2C           	inc l
1228  8B7A 2C           	inc l
1229  8B7B 46           	ld b,(hl)
1230  8B7C 22 D9 89     	ld (India_2_SP),hl
1231  8B7F
1232  8B7F FD 2C        	inc iyl
1233  8B81
1234  8B81 C9           	ret
1235  8B82
1236  8B82              Prepara_salida
1237  8B82
1238  8B82 21 5C 86     	ld hl,Tabla_de_pintado
1239  8B85 22 D7 89     	ld (India_SP),hl
1240  8B88 C9           	ret
1241  8B89
1242  8B89
1243  8B89 2C           Intercambia_1_byte inc l
1244  8B8A 1C           	inc e
1245  8B8B 46           	ld b,(hl)
1246  8B8C 1A           	ld a,(de)
1247  8B8D EB           	ex de,hl
1248  8B8E 70           	ld (hl),b
1249  8B8F 12           	ld (de),a									; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1250  8B90 C9           	ret
1251  8B91
1252  8B91              ; -----------------------------------------------------------------------------------
1253  8B91              ;
1254  8B91              ;	20/01/24
1255  8B91              ;
1256  8B91              ;
1257  8B91
1258  8B91              Construye_movimientos_masticados_entidad
1259  8B91
1260  8B91 2A 92 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1261  8B94 E5           	push hl
1262  8B95 CD D8 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1263  8B98              ;															; _ el (Contador_de_mov_masticados).
1264  8B98 CD 65 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1265  8B9B              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1266  8B9B CD 16 95     	call Recompone_posicion_inicio
1267  8B9E
1268  8B9E CD 3C 92     1 call Draw
1269  8BA1 CD BD 8B     	call Guarda_movimiento_masticado
1270  8BA4
1271  8BA4 CD 90 98     	call Movimiento
1272  8BA7
1273  8BA7 3A DB 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1274  8BAA CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1275  8BAC 28 F0        	jr z,1B
1276  8BAE
1277  8BAE              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1278  8BAE              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1279  8BAE
1280  8BAE E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1281  8BAF 22 92 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1282  8BB2
1283  8BB2              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1284  8BB2
1285  8BB2 CD F4 99     	call Situa_en_contador_general_de_mov_masticados
1286  8BB5
1287  8BB5              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1288  8BB5              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1289  8BB5
1290  8BB5 ED 4B 94 89  	ld bc,(Contador_de_mov_masticados)
1291  8BB9
1292  8BB9 71           	ld (hl),c
1293  8BBA 23           	inc hl
1294  8BBB 70           	ld (hl),b
1295  8BBC
1296  8BBC C9           	ret
1297  8BBD
1298  8BBD              ; -----------------------------------------------------------------------------------
1299  8BBD              ;
1300  8BBD              ;	28/12/23
1301  8BBD              ;
1302  8BBD              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1303  8BBD              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1304  8BBD
1305  8BBD              Guarda_movimiento_masticado
1306  8BBD
1307  8BBD ED 73 C6 89  	ld (Stack),sp
1308  8BC1 ED 7B 92 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1309  8BC5
1310  8BC5              ;	push hl
1311  8BC5 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1312  8BC7 FD E5            push iy 												; Pushea Puntero_objeto.
1313  8BC9
1314  8BC9 ED 7B C6 89      ld sp,(Stack)
1315  8BCD
1316  8BCD 2A 94 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1317  8BD0 23           	inc hl
1318  8BD1 22 94 89     	ld (Contador_de_mov_masticados),hl
1319  8BD4
1320  8BD4 CD D8 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1321  8BD7              ;															; _ el (Contador_de_mov_masticados).
1322  8BD7 C9               ret
1323  8BD8
1324  8BD8              ; --------------------------------------------------------------------------------------------------------------
1325  8BD8              ;
1326  8BD8              ;	12/1/24
1327  8BD8              ;
1328  8BD8              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1329  8BD8
1330  8BD8              Actualiza_Puntero_de_almacen_de_mov_masticados
1331  8BD8
1332  8BD8 2A 92 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1333  8BDB 01 04 00     	ld bc,4
1334  8BDE A7           	and a
1335  8BDF ED 4A        	adc hl,bc
1336  8BE1 22 92 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1337  8BE4 C9           	ret
1338  8BE5
1339  8BE5              ; --------------------------------------------------------------------------------------------------------------
1340  8BE5              ;
1341  8BE5              ;	24/03/24
1342  8BE5              ;
1343  8BE5              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1344  8BE5              ;
1345  8BE5              ;	IX contiene el puntero de impresión.
1346  8BE5              ;	DE contiene (Puntero_objeto).
1347  8BE5
1348  8BE5
1349  8BE5 ED 73 C6 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1350  8BE9 ED 7B 92 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1351  8BED
1352  8BED D1           	pop de 															; DE contiene Puntero_objeto
1353  8BEE DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1354  8BF0
1355  8BF0 ED 73 92 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1356  8BF4 ED 7B C6 89  	ld sp,(Stack)
1357  8BF8
1358  8BF8 7B           	ld a,e
1359  8BF9 82           	add d															; Comprueba si ya no hay datos en el almacén.
1360  8BFA
1361  8BFA CC D1 9A     	call z,Reinicia_entidad_maliciosa
1362  8BFD
1363  8BFD C9           	ret
1364  8BFE
1365  8BFE              ; --------------------------------------------------------------------------------------------------------------
1366  8BFE              ;
1367  8BFE              ;	28/12/23
1368  8BFE              ;
1369  8BFE              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1370  8BFE              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1371  8BFE
1372  8BFE              Guarda_foto_entidad_a_pintar
1373  8BFE
1374  8BFE 3A 96 89     	ld a,(Ctrl_0)
1375  8C01 CB 77        	bit 6,a
1376  8C03 28 04        	jr z,5F
1377  8C05
1378  8C05              ;	Guarda la foto de Amadeus.
1379  8C05
1380  8C05              ;	call Draw
1381  8C05              ;	call Guarda_movimiento_masticado	;! Provisional
1382  8C05 CD 8C 9C     	call Genera_datos_de_impresion
1383  8C08 C9           	ret
1384  8C09
1385  8C09              ; ENTIDADES!
1386  8C09              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1387  8C09
1388  8C09 3A DB 89     5 ld a,(Ctrl_3)
1389  8C0C CB 5F        	bit 3,a
1390  8C0E 28 01        	jr z,1F
1391  8C10
1392  8C10              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1393  8C10
1394  8C10              4
1395  8C10              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1396  8C10 C9           	ret
1397  8C11
1398  8C11              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1399  8C11
1400  8C11 3A DB 89     1 ld a,(Ctrl_3)
1401  8C14 CB 57        	bit 2,a
1402  8C16 20 10        	jr nz,6F
1403  8C18
1404  8C18              ; Entidad guía o fantasma ???
1405  8C18
1406  8C18 3A 9B 89     	ld a,(Ctrl_2)
1407  8C1B CB 6F        	bit 5,a
1408  8C1D 20 10        	jr nz,3F
1409  8C1F
1410  8C1F              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1411  8C1F
1412  8C1F 18 EF        	jr 4B
1413  8C21
1414  8C21              ; ENTIDAD_GUÍA:
1415  8C21              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1416  8C21              ; _guardando "movimientos_masticados".
1417  8C21
1418  8C21 3A DB 89     2 ld a,(Ctrl_3)
1419  8C24 CB 57        	bit 2,a
1420  8C26 28 07        	jr z,3F
1421  8C28
1422  8C28              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1423  8C28              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1424  8C28
1425  8C28 CB 97        6 res 2,a
1426  8C2A CB DF        	set 3,a
1427  8C2C 32 DB 89     	ld (Ctrl_3),a
1428  8C2F
1429  8C2F
1430  8C2F              ;	Esto sólo lo ejecuta una entidad guía.
1431  8C2F
1432  8C2F CD 3C 92     3 	call Draw
1433  8C32 CD BD 8B     	call Guarda_movimiento_masticado
1434  8C35 CD 8C 9C     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1435  8C38
1436  8C38              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1437  8C38              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1438  8C38
1439  8C38              ;	call Convierte_guia_en_fantasma
1440  8C38 C9           	ret
1441  8C39
1442  8C39              ; ---------------------------------------------------------------------------------------------------------------------
1443  8C39              ;
1444  8C39              ;	13/03/24
1445  8C39              ;
1446  8C39
1447  8C39              Inicia_albumes_de_lineas
1448  8C39
1449  8C39 21 00 80     	ld hl,Scanlines_album
1450  8C3C 22 CA 89     	ld (Album_de_pintado),hl
1451  8C3F 22 D5 89     	ld (Scanlines_album_SP),hl
1452  8C42
1453  8C42 21 00 90     	ld hl,Scanlines_album_2
1454  8C45 22 CC 89     	ld (Album_de_borrado),hl
1455  8C48
1456  8C48 C9           	ret
1457  8C49
1458  8C49
1459  8C49
1460  8C49              ; ---------------------------------------------------------------------------------------------------------------------
1461  8C49              ;
1462  8C49              ; 8/1/23
1463  8C49              ;
1464  8C49              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1465  8C49              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1466  8C49              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1467  8C49
1468  8C49              ; Destruye HL y DE !!!!!
1469  8C49
1470  8C49              Inicia_punteros_de_cajas
1471  8C49
1472  8C49 21 F8 86     	ld hl,Indice_de_cajas_de_entidades
1473  8C4C CD 5F 8C         call Extrae_address
1474  8C4F 22 B8 89         ld (Puntero_store_caja),hl
1475  8C52 21 FA 86     	ld hl,Indice_de_cajas_de_entidades+2
1476  8C55 22 BC 89     	ld (Indice_restore_caja),hl
1477  8C58 CD 5F 8C     	call Extrae_address
1478  8C5B 22 BA 89     	ld (Puntero_restore_caja),hl
1479  8C5E C9               ret
1480  8C5F
1481  8C5F              ; *************************************************************************************************************************************************************
1482  8C5F              ;
1483  8C5F              ; 8/1/23
1484  8C5F              ;
1485  8C5F              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1486  8C5F
1487  8C5F              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1488  8C5F              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1489  8C5F              ;	ret
1490  8C5F              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1491  8C5F              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1492  8C5F              ;	ret
1493  8C5F
1494  8C5F              ; -------------------------------------------------------------------------------------------------------------
1495  8C5F              ;
1496  8C5F              ; 21/9/23
1497  8C5F              ;
1498  8C5F
1499  8C5F              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1500  8C5F
1501  8C5F              ;;Limpia_album_Amadeus
1502  8C5F              ;
1503  8C5F              ;;	ld hl,Scanlines_album_Amadeus
1504  8C5F              ;;	ld a,(hl)
1505  8C5F              ;;	and a
1506  8C5F              ;;	ret z
1507  8C5F
1508  8C5F              ;;	ld hl,Scanlines_album_Amadeus;
1509  8C5F              ;;	ld de,Scanlines_album_Amadeus+1
1510  8C5F              ;;	ld bc,11
1511  8C5F              ;;	xor a
1512  8C5F              ;;	ld (hl),a
1513  8C5F              ;;	ldir
1514  8C5F
1515  8C5F              ;;	ld hl,Scanlines_album_Amadeus
1516  8C5F              ;;	ld (End_Snapshot_Amadeus),hl
1517  8C5F
1518  8C5F              ;;	ret
1519  8C5F
1520  8C5F              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1521  8C5F              ;	ld de,Variables_de_borrado+1
1522  8C5F              ;	ld bc,5
1523  8C5F              ;	xor a
1524  8C5F              ;	ld (hl),a
1525  8C5F              ;	ldir
1526  8C5F              ;	ret
1527  8C5F
1528  8C5F              ; *************************************************************************************************************************************************************
1529  8C5F              ;
1530  8C5F              ; 20/10/22
1531  8C5F              ;
1532  8C5F              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1533  8C5F              ;
1534  8C5F              ; Destruye el puntero y DE !!!!!
1535  8C5F
1536  8C5F 5E           Extrae_address ld e,(hl)
1537  8C60 23           	inc hl
1538  8C61 56           	ld d,(hl)
1539  8C62 2B           	dec hl
1540  8C63 EB           	ex de,hl
1541  8C64 C9           	ret
1542  8C65
1543  8C65              ; *************************************************************************************************************************************************************
1544  8C65              ;
1545  8C65              ;	20/1/24
1546  8C65              ;
1547  8C65              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1548  8C65              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1549  8C65              ;
1550  8C65              ;   Destruye HL y BC !!!!!,
1551  8C65              ;
1552  8C65              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1553  8C65              ;					"0" ..... Izquierda.
1554  8C65
1555  8C65              Inicia_Puntero_objeto
1556  8C65
1557  8C65 3A 8E 89     	ld a,(Cuad_objeto)
1558  8C68 E6 01        	and 1
1559  8C6A F5           	push af
1560  8C6B CC 87 8C     	call z,Inicia_puntero_objeto_izq
1561  8C6E F1           	pop af
1562  8C6F C8           	ret z
1563  8C70 CD 74 8C     	call Inicia_puntero_objeto_der
1564  8C73 C9           	ret
1565  8C74
1566  8C74              ; Arrancamos desde la parte izquierda de la pantalla.
1567  8C74              ; Iniciamos (Indice_Sprite_der).
1568  8C74
1569  8C74 2A 84 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1570  8C77 22 88 89     	ld (Puntero_DESPLZ_der),hl
1571  8C7A CD 5F 8C     	call Extrae_address
1572  8C7D 22 7E 89     	ld (Puntero_objeto),hl
1573  8C80
1574  8C80 2A 86 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1575  8C83 22 8A 89     	ld (Puntero_DESPLZ_izq),hl
1576  8C86 C9           	ret
1577  8C87
1578  8C87              ; Arrancamos desde la parte derecha de la pantalla.
1579  8C87              ; Iniciamos (Indice_Sprite_izq).
1580  8C87
1581  8C87 2A 86 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1582  8C8A 22 8A 89     	ld (Puntero_DESPLZ_izq),hl
1583  8C8D CD 5F 8C     	call Extrae_address
1584  8C90 22 7E 89     	ld (Puntero_objeto),hl
1585  8C93
1586  8C93 2A 84 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1587  8C96 22 88 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1588  8C99 C9           	ret
1589  8C9A
1590  8C9A              ; **************************************************************************************************
1591  8C9A              ;
1592  8C9A              ;	31/01/24
1593  8C9A              ;
1594  8C9A              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1595  8C9A
1596  8C9A              Restore_entidad
1597  8C9A
1598  8C9A 2A B8 89     	ld hl,(Puntero_store_caja)
1599  8C9D 11 79 89     	ld de,Bandeja_DRAW
1600  8CA0 7E           	ld a,(hl)
1601  8CA1 12           	ld (de),a
1602  8CA2 23           	inc hl 											; (Tipo).
1603  8CA3
1604  8CA3 11 80 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1605  8CA6 01 02 00     	ld bc,2
1606  8CA9 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1607  8CAB
1608  8CAB 13           	inc de
1609  8CAC 7E           	ld a,(hl)
1610  8CAD 12           	ld (de),a 										; Transferimos (Attr).
1611  8CAE 23           	inc hl
1612  8CAF
1613  8CAF 11 8F 89     	ld de,Impacto
1614  8CB2
1615  8CB2 7E           	ld a,(hl)
1616  8CB3 12           	ld (de),a 										; Transferimos (Impacto).
1617  8CB4 23           	inc hl
1618  8CB5
1619  8CB5 13           	inc de
1620  8CB6 01 07 00     	ld bc,7
1621  8CB9 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1622  8CBB              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1623  8CBB 11 9B 89     	ld de,Ctrl_2
1624  8CBE
1625  8CBE 7E           	ld a,(hl)
1626  8CBF 12           	ld (de),a 										; Transferimos (Ctrl_2).
1627  8CC0
1628  8CC0 C9           	ret
1629  8CC1
1630  8CC1              ; **************************************************************************************************
1631  8CC1              ;
1632  8CC1              ;	08/05/23
1633  8CC1              ;
1634  8CC1              ;	Incrementamos los dos punteros de entidades. (+1).
1635  8CC1
1636  8CC1              Incrementa_punteros_de_cajas
1637  8CC1
1638  8CC1 2A BA 89     	ld hl,(Puntero_restore_caja)
1639  8CC4 22 B8 89     	ld (Puntero_store_caja),hl
1640  8CC7 2A BC 89     	ld hl,(Indice_restore_caja)
1641  8CCA 23           	inc hl
1642  8CCB 23           	inc hl
1643  8CCC 22 BC 89     	ld (Indice_restore_caja),hl
1644  8CCF CD 5F 8C         call Extrae_address
1645  8CD2 22 BA 89         ld (Puntero_restore_caja),hl
1646  8CD5 C9               ret
1647  8CD6
1648  8CD6              ; **************************************************************************************************
1649  8CD6              ;
1650  8CD6              ;	21/12/23
1651  8CD6              ;
1652  8CD6              ;	Restore_Amadeus
1653  8CD6              ;
1654  8CD6              ;	Cargamos en DRAW los parámetros de Amadeus.
1655  8CD6              ;
1656  8CD6
1657  8CD6              ;Restore_Amadeus	push hl
1658  8CD6              ;	push de
1659  8CD6              ; 	push bc
1660  8CD6              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1661  8CD6              ;	ld de,Bandeja_DRAW
1662  8CD6              ;	ld bc,42
1663  8CD6              ;	ldir
1664  8CD6              ;	pop bc
1665  8CD6              ;	pop de
1666  8CD6              ;	pop hl
1667  8CD6              ;	ret
1668  8CD6
1669  8CD6              ; *************************************************************************************************************************************************************
1670  8CD6              ;
1671  8CD6              ;	21/12/23
1672  8CD6              ;
1673  8CD6              ;	Store_Amadeus
1674  8CD6              ;
1675  8CD6              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1676  8CD6              ;
1677  8CD6              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1678  8CD6              ;
1679  8CD6              ;	DESTRUYE: HL y BC y DE.
1680  8CD6
1681  8CD6              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1682  8CD6              ;	ld bc,42
1683  8CD6              ;	ldir
1684  8CD6              ;	ret
1685  8CD6
1686  8CD6              ; -----------------------------------------------------------
1687  8CD6              ;
1688  8CD6              ;	21/12/23
1689  8CD6              ;
1690  8CD6              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1691  8CD6              ;
1692  8CD6              ;	Destruye: HL,BC,DE,A
1693  8CD6
1694  8CD6              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1695  8CD6              ;	ld bc,41
1696  8CD6              ;	xor a
1697  8CD6              ;	ld (hl),a;
1698  8CD6              ;	ld de,Bandeja_DRAW+1
1699  8CD6              ;	ldir
1700  8CD6              ;	ret
1701  8CD6
1702  8CD6              ; -----------------------------------------------------------
1703  8CD6
1704  8CD6              ; Teclado.
1705  8CD6
1706  8CD6 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1707  8CD8 DB FE        	in a,($fe)
1708  8CDA E6 01        	and $01
1709  8CDC 28 02        	jr z,1f
1710  8CDE 18 F6        	jr Pulsa_ENTER
1711  8CE0 C9           1 ret
1712  8CE1
1713  8CE1              ; **************************************************************************************************
1714  8CE1              ;
1715  8CE1              ; Temporización.
1716  8CE1
1717  8CE1              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1718  8CE1              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1719  8CE1              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1720  8CE1              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1721  8CE1
1722  8CE1              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1723  8CE1              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1724  8CE1              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1725  8CE1
1726  8CE1              ; A partir de $4f61 no hace falta DELAY.
1727  8CE1
1728  8CE1              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1729  8CE1
1730  8CE1              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1731  8CE1              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1732  8CE1              ;	LD A,B
1733  8CE1              ;	AND A
1734  8CE1              ;	JR NZ,wait
1735  8CE1              ;	RET
1736  8CE1
1737  8CE1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1738  8CE1              ;
1739  8CE1              ;	5/3/23
1740  8CE1              ;
1741  8CE1              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1742  8CE1
1743  8CE1              ;Movimiento_Amadeus
1744  8CE1
1745  8CE1              ; Disparo.
1746  8CE1
1747  8CE1              ;	ld a,(Disparo_Amadeus)
1748  8CE1              ;	and a
1749  8CE1              ;	jr nz,1F
1750  8CE1              ;	jr 2F
1751  8CE1
1752  8CE1              ;1 ld a,$f7													; "5" para disparar.
1753  8CE1              ;	in a,($fe)
1754  8CE1              ;	and $10
1755  8CE1
1756  8CE1              ;	push af
1757  8CE1              ;	call z,Genera_disparo
1758  8CE1              ;	pop af
1759  8CE1              ;	jr nz,2F
1760  8CE1
1761  8CE1              ;	ld a,(Disparo_Amadeus)
1762  8CE1              ;	xor 1
1763  8CE1              ;	ld (Disparo_Amadeus),a
1764  8CE1              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1765  8CE1              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1766  8CE1              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1767  8CE1              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1768  8CE1
1769  8CE1              ;	ld a,$f7
1770  8CE1              ;	in a,($fe)
1771  8CE1              ;	and $01
1772  8CE1              ;	ret z
1773  8CE1
1774  8CE1              ;	ld a,$f7
1775  8CE1              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1776  8CE1              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1777  8CE1              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1778  8CE1              ;	ret
1779  8CE1
1780  8CE1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1781  8CE1              ;
1782  8CE1              ;	Rutina provisional para que los malotes cagen balas.
1783  8CE1
1784  8CE1              ;Detecta_disparo_entidad
1785  8CE1
1786  8CE1              ;	ld a,(Disparo_entidad)
1787  8CE1              ;	and a
1788  8CE1              ;	ret z
1789  8CE1
1790  8CE1              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1791  8CE1
1792  8CE1              ;	ld a,$7f				; Detecta SPACE.
1793  8CE1              ;	in a,($fe)
1794  8CE1              ;	and 1
1795  8CE1              ;	ret nz
1796  8CE1
1797  8CE1              ;	call Genera_disparo
1798  8CE1              ;	ret
1799  8CE1
1800  8CE1              ; ----------------------------------------------------------------------
1801  8CE1              ;
1802  8CE1              ;	8/9/23
1803  8CE1
1804  8CE1              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1805  8CE1              ; 	dec hl
1806  8CE1              ;	ld a,(hl)
1807  8CE1              ;	and a
1808  8CE1              ;	ret z										; Salimos si es álbum está vacío.
1809  8CE1
1810  8CE1              ;	ld de,Variables_de_borrado+5
1811  8CE1              ;	ld bc,6
1812  8CE1              ;	lddr
1813  8CE1              ;	ret
1814  8CE1
1815  8CE1              ; ----------------------------------------------------------------------
1816  8CE1              ;
1817  8CE1              ;	9/9/23
1818  8CE1
1819  8CE1              ;Repone_datos_de_borrado_Amadeus
1820  8CE1
1821  8CE1              ;	ld hl,Variables_de_borrado
1822  8CE1              ;	ld de,Scanlines_album_Amadeus
1823  8CE1              ;	ld bc,6
1824  8CE1              ;	ldir
1825  8CE1
1826  8CE1              ;	ex de,hl
1827  8CE1              ;	ld (End_Snapshot_Amadeus),hl
1828  8CE1
1829  8CE1              ;	ret
1830  8CE1
1831  8CE1              ; ----------------------------------------------------------------------
1832  8CE1              ;
1833  8CE1              ;	27/10/23
1834  8CE1              ;
1835  8CE1
1836  8CE1              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1837  8CE1              ;	_ Scanlines_album correspondiente.
1838  8CE1
1839  8CE1              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1840  8CE1              ;	_ durante el proceso de escritura.
1841  8CE1
1842  8CE1              ;Repone_datos_de_borrado
1843  8CE1
1844  8CE1              ;	ld de,(Scanlines_album_SP)
1845  8CE1              ;	ld hl,Variables_de_borrado
1846  8CE1              ;	ld bc,6
1847  8CE1              ;	ldir
1848  8CE1
1849  8CE1              ;	ex de,hl
1850  8CE1              ;	ld (Scanlines_album_SP),hl
1851  8CE1
1852  8CE1              ;	ret
1853  8CE1
1854  8CE1              ; --------------------------------------------------------------------------------------
1855  8CE1
1856  8CE1              ;Pinta_Amadeus
1857  8CE1
1858  8CE1              ;   	call Calcula_malotes_Amadeus
1859  8CE1              ;	call Extrae_foto_Amadeus
1860  8CE1              ;	call Limpia_album_Amadeus
1861  8CE1
1862  8CE1              ;	ret
1863  8CE1
1864  8CE1              ; -----------------------------------------------------------------------------------
1865  8CE1              ;
1866  8CE1              ;	10/12/23
1867  8CE1              ;
1868  8CE1              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1869  8CE1
1870  8CE1              ;Actualiza_relojes
1871  8CE1
1872  8CE1              ;	ld a,(Ctrl_3)
1873  8CE1              ;	bit 0,a
1874  8CE1              ;	ret z 						;	Salimos si no hemos pintado unidades.
1875  8CE1
1876  8CE1              ;	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1877  8CE1              ;	inc (hl)
1878  8CE1
1879  8CE1              ;	inc (hl)
1880  8CE1              ;	dec (hl)
1881  8CE1              ;	ret nz
1882  8CE1
1883  8CE1              ;	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1884  8CE1              ;	inc (hl)
1885  8CE1              ;	ret
1886  8CE1
1887  8CE1              ; ---------------------------------------------------------------
1888  8CE1
1889  8CE1              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 8CE1              ; -----------------------------------------------------------------------------
   2+ 8CE1              ;
   3+ 8CE1              ;   11/03/24
   4+ 8CE1              ;
   5+ 8CE1
   6+ 8CE1                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119              ;    ld hl,(Scanlines_album_SP)
  11+ 9119              ;    call Extrae_address
  12+ 9119
  13+ 9119              ;    inc h
  14+ 9119              ;    dec h
  15+ 9119              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9119
  17+ 9119 ED 73 C6 89      ld (Stack),sp
  18+ 911D
  19+ 911D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 911E              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 911E 2C               inc l
  22+ 911F 2C               inc l
  23+ 9120
  24+ 9120 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 9121
  26+ 9121 2C               inc l
  27+ 9122 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 9123
  29+ 9123              ;   Seleccionamos rutina de impresión:
  30+ 9123
  31+ 9123 3E 10            ld a,16
  32+ 9125 B8               cp b
  33+ 9126 C2 22 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9129
  35+ 9129              ;   Rutinas:
  36+ 9129
  37+ 9129              Pinta_rapido    ;   1520 t/states.
  38+ 9129
  39+ 9129 E1               pop hl
  40+ 912A
  41+ 912A 1A               ld a,(de)
  42+ 912B AE               xor (hl)
  43+ 912C 77               ld (hl),a
  44+ 912D 2C               inc l
  45+ 912E 1C               inc e
  46+ 912F 1A               ld a,(de)
  47+ 9130 AE               xor (hl)
  48+ 9131 77               ld (hl),a
  49+ 9132 2C               inc l
  50+ 9133 1C               inc e
  51+ 9134 1A               ld a,(de)
  52+ 9135 AE               xor (hl)
  53+ 9136 77               ld (hl),a
  54+ 9137 13               inc de
  55+ 9138
  56+ 9138 E1               pop hl
  57+ 9139
  58+ 9139 1A               ld a,(de)
  59+ 913A AE               xor (hl)
  60+ 913B 77               ld (hl),a
  61+ 913C 2C               inc l
  62+ 913D 1C               inc e
  63+ 913E 1A               ld a,(de)
  64+ 913F AE               xor (hl)
  65+ 9140 77               ld (hl),a
  66+ 9141 2C               inc l
  67+ 9142 1C               inc e
  68+ 9143 1A               ld a,(de)
  69+ 9144 AE               xor (hl)
  70+ 9145 77               ld (hl),a
  71+ 9146 13               inc de
  72+ 9147
  73+ 9147 E1               pop hl
  74+ 9148
  75+ 9148 1A               ld a,(de)
  76+ 9149 AE               xor (hl)
  77+ 914A 77               ld (hl),a
  78+ 914B 2C               inc l
  79+ 914C 1C               inc e
  80+ 914D 1A               ld a,(de)
  81+ 914E AE               xor (hl)
  82+ 914F 77               ld (hl),a
  83+ 9150 2C               inc l
  84+ 9151 1C               inc e
  85+ 9152 1A               ld a,(de)
  86+ 9153 AE               xor (hl)
  87+ 9154 77               ld (hl),a
  88+ 9155 13               inc de
  89+ 9156
  90+ 9156 E1               pop hl
  91+ 9157
  92+ 9157 1A               ld a,(de)
  93+ 9158 AE               xor (hl)
  94+ 9159 77               ld (hl),a
  95+ 915A 2C               inc l
  96+ 915B 1C               inc e
  97+ 915C 1A               ld a,(de)
  98+ 915D AE               xor (hl)
  99+ 915E 77               ld (hl),a
 100+ 915F 2C               inc l
 101+ 9160 1C               inc e
 102+ 9161 1A               ld a,(de)
 103+ 9162 AE               xor (hl)
 104+ 9163 77               ld (hl),a
 105+ 9164 13               inc de
 106+ 9165
 107+ 9165 E1               pop hl
 108+ 9166
 109+ 9166 1A               ld a,(de)
 110+ 9167 AE               xor (hl)
 111+ 9168 77               ld (hl),a
 112+ 9169 2C               inc l
 113+ 916A 1C               inc e
 114+ 916B 1A               ld a,(de)
 115+ 916C AE               xor (hl)
 116+ 916D 77               ld (hl),a
 117+ 916E 2C               inc l
 118+ 916F 1C               inc e
 119+ 9170 1A               ld a,(de)
 120+ 9171 AE               xor (hl)
 121+ 9172 77               ld (hl),a
 122+ 9173 13               inc de
 123+ 9174
 124+ 9174 E1               pop hl
 125+ 9175
 126+ 9175 1A               ld a,(de)
 127+ 9176 AE               xor (hl)
 128+ 9177 77               ld (hl),a
 129+ 9178 2C               inc l
 130+ 9179 1C               inc e
 131+ 917A 1A               ld a,(de)
 132+ 917B AE               xor (hl)
 133+ 917C 77               ld (hl),a
 134+ 917D 2C               inc l
 135+ 917E 1C               inc e
 136+ 917F 1A               ld a,(de)
 137+ 9180 AE               xor (hl)
 138+ 9181 77               ld (hl),a
 139+ 9182 13               inc de
 140+ 9183
 141+ 9183 E1               pop hl
 142+ 9184
 143+ 9184 1A               ld a,(de)
 144+ 9185 AE               xor (hl)
 145+ 9186 77               ld (hl),a
 146+ 9187 2C               inc l
 147+ 9188 1C               inc e
 148+ 9189 1A               ld a,(de)
 149+ 918A AE               xor (hl)
 150+ 918B 77               ld (hl),a
 151+ 918C 2C               inc l
 152+ 918D 1C               inc e
 153+ 918E 1A               ld a,(de)
 154+ 918F AE               xor (hl)
 155+ 9190 77               ld (hl),a
 156+ 9191 13               inc de
 157+ 9192
 158+ 9192 E1               pop hl
 159+ 9193
 160+ 9193 1A               ld a,(de)
 161+ 9194 AE               xor (hl)
 162+ 9195 77               ld (hl),a
 163+ 9196 2C               inc l
 164+ 9197 1C               inc e
 165+ 9198 1A               ld a,(de)
 166+ 9199 AE               xor (hl)
 167+ 919A 77               ld (hl),a
 168+ 919B 2C               inc l
 169+ 919C 1C               inc e
 170+ 919D 1A               ld a,(de)
 171+ 919E AE               xor (hl)
 172+ 919F 77               ld (hl),a
 173+ 91A0 13               inc de
 174+ 91A1
 175+ 91A1 E1               pop hl
 176+ 91A2
 177+ 91A2 1A               ld a,(de)
 178+ 91A3 AE               xor (hl)
 179+ 91A4 77               ld (hl),a
 180+ 91A5 2C               inc l
 181+ 91A6 1C               inc e
 182+ 91A7 1A               ld a,(de)
 183+ 91A8 AE               xor (hl)
 184+ 91A9 77               ld (hl),a
 185+ 91AA 2C               inc l
 186+ 91AB 1C               inc e
 187+ 91AC 1A               ld a,(de)
 188+ 91AD AE               xor (hl)
 189+ 91AE 77               ld (hl),a
 190+ 91AF 13               inc de
 191+ 91B0
 192+ 91B0 E1               pop hl
 193+ 91B1
 194+ 91B1 1A               ld a,(de)
 195+ 91B2 AE               xor (hl)
 196+ 91B3 77               ld (hl),a
 197+ 91B4 2C               inc l
 198+ 91B5 1C               inc e
 199+ 91B6 1A               ld a,(de)
 200+ 91B7 AE               xor (hl)
 201+ 91B8 77               ld (hl),a
 202+ 91B9 2C               inc l
 203+ 91BA 1C               inc e
 204+ 91BB 1A               ld a,(de)
 205+ 91BC AE               xor (hl)
 206+ 91BD 77               ld (hl),a
 207+ 91BE 13               inc de
 208+ 91BF
 209+ 91BF E1               pop hl
 210+ 91C0
 211+ 91C0 1A               ld a,(de)
 212+ 91C1 AE               xor (hl)
 213+ 91C2 77               ld (hl),a
 214+ 91C3 2C               inc l
 215+ 91C4 1C               inc e
 216+ 91C5 1A               ld a,(de)
 217+ 91C6 AE               xor (hl)
 218+ 91C7 77               ld (hl),a
 219+ 91C8 2C               inc l
 220+ 91C9 1C               inc e
 221+ 91CA 1A               ld a,(de)
 222+ 91CB AE               xor (hl)
 223+ 91CC 77               ld (hl),a
 224+ 91CD 13               inc de
 225+ 91CE
 226+ 91CE E1               pop hl
 227+ 91CF
 228+ 91CF 1A               ld a,(de)
 229+ 91D0 AE               xor (hl)
 230+ 91D1 77               ld (hl),a
 231+ 91D2 2C               inc l
 232+ 91D3 1C               inc e
 233+ 91D4 1A               ld a,(de)
 234+ 91D5 AE               xor (hl)
 235+ 91D6 77               ld (hl),a
 236+ 91D7 2C               inc l
 237+ 91D8 1C               inc e
 238+ 91D9 1A               ld a,(de)
 239+ 91DA AE               xor (hl)
 240+ 91DB 77               ld (hl),a
 241+ 91DC 13               inc de
 242+ 91DD
 243+ 91DD E1               pop hl
 244+ 91DE
 245+ 91DE 1A               ld a,(de)
 246+ 91DF AE               xor (hl)
 247+ 91E0 77               ld (hl),a
 248+ 91E1 2C               inc l
 249+ 91E2 1C               inc e
 250+ 91E3 1A               ld a,(de)
 251+ 91E4 AE               xor (hl)
 252+ 91E5 77               ld (hl),a
 253+ 91E6 2C               inc l
 254+ 91E7 1C               inc e
 255+ 91E8 1A               ld a,(de)
 256+ 91E9 AE               xor (hl)
 257+ 91EA 77               ld (hl),a
 258+ 91EB 13               inc de
 259+ 91EC
 260+ 91EC E1               pop hl
 261+ 91ED
 262+ 91ED 1A               ld a,(de)
 263+ 91EE AE               xor (hl)
 264+ 91EF 77               ld (hl),a
 265+ 91F0 2C               inc l
 266+ 91F1 1C               inc e
 267+ 91F2 1A               ld a,(de)
 268+ 91F3 AE               xor (hl)
 269+ 91F4 77               ld (hl),a
 270+ 91F5 2C               inc l
 271+ 91F6 1C               inc e
 272+ 91F7 1A               ld a,(de)
 273+ 91F8 AE               xor (hl)
 274+ 91F9 77               ld (hl),a
 275+ 91FA 13               inc de
 276+ 91FB
 277+ 91FB E1               pop hl
 278+ 91FC
 279+ 91FC 1A               ld a,(de)
 280+ 91FD AE               xor (hl)
 281+ 91FE 77               ld (hl),a
 282+ 91FF 2C               inc l
 283+ 9200 1C               inc e
 284+ 9201 1A               ld a,(de)
 285+ 9202 AE               xor (hl)
 286+ 9203 77               ld (hl),a
 287+ 9204 2C               inc l
 288+ 9205 1C               inc e
 289+ 9206 1A               ld a,(de)
 290+ 9207 AE               xor (hl)
 291+ 9208 77               ld (hl),a
 292+ 9209 13               inc de
 293+ 920A
 294+ 920A E1               pop hl
 295+ 920B
 296+ 920B 1A               ld a,(de)
 297+ 920C AE               xor (hl)
 298+ 920D 77               ld (hl),a
 299+ 920E 2C               inc l
 300+ 920F 1C               inc e
 301+ 9210 1A               ld a,(de)
 302+ 9211 AE               xor (hl)
 303+ 9212 77               ld (hl),a
 304+ 9213 2C               inc l
 305+ 9214 1C               inc e
 306+ 9215 1A               ld a,(de)
 307+ 9216 AE               xor (hl)
 308+ 9217 77               ld (hl),a
 309+ 9218 13               inc de
 310+ 9219
 311+ 9219 ED 73 D5 89      ld (Scanlines_album_SP),sp
 312+ 921D ED 7B C6 89      ld sp,(Stack)
 313+ 9221 C9               ret
 314+ 9222
 315+ 9222              Pinta_lento
 316+ 9222
 317+ 9222 E1           1 pop hl
 318+ 9223
 319+ 9223 1A               ld a,(de)
 320+ 9224 AE               xor (hl)
 321+ 9225 77               ld (hl),a
 322+ 9226 2C               inc l
 323+ 9227 1C               inc e
 324+ 9228 1A               ld a,(de)
 325+ 9229 AE               xor (hl)
 326+ 922A 77               ld (hl),a
 327+ 922B 2C               inc l
 328+ 922C 1C               inc e
 329+ 922D 1A               ld a,(de)
 330+ 922E AE               xor (hl)
 331+ 922F 77               ld (hl),a
 332+ 9230 13               inc de
 333+ 9231
 334+ 9231 10 EF            djnz 1B
 335+ 9233
 336+ 9233 ED 73 D5 89      ld (Scanlines_album_SP),sp
 337+ 9237 ED 7B C6 89      ld sp,(Stack)
 338+ 923B C9               ret
# file closed: Pinta_Sprites.asm
1890  923C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 923C              ; ******************************************************************************************************************************************************************************************
   2+ 923C              ;
   3+ 923C              ; 26/06/23
   4+ 923C              ;
   5+ 923C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 923C
   7+ 923C              Draw
   8+ 923C
   9+ 923C CD EC 94     	call Prepara_draw
  10+ 923F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9240 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9241 28 05        	jr z,2F
  13+ 9243
  14+ 9243 3A 8E 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9246 18 0C        	jr 1F
  16+ 9248
  17+ 9248 2A 8C 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 924B 22 7C 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 924E CD DA 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9251              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9251
  22+ 9251 CD 58 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9254
  24+ 9254 3A 96 89     1 ld a,(Ctrl_0)
  25+ 9257 CB 6F        	bit 5,a
  26+ 9259 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 925B
  28+ 925B CD 70 92     	call Comprueba_limite_horizontal
  29+ 925E CD 00 93     	call Comprueba_limite_vertical
  30+ 9261
  31+ 9261              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9261              ; -----------------------
  33+ 9261              ; -----------------------
  34+ 9261              ; -----------------------
  35+ 9261
  36+ 9261 CD 56 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9264 CD 8D 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9267
  39+ 9267 3A 96 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 926A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 926C 32 96 89     	ld (Ctrl_0),a
  42+ 926F
  43+ 926F C9           	ret
  44+ 9270
  45+ 9270              ; *******************************************************************************************************************************************************************************************
  46+ 9270              ;	21/01/23
  47+ 9270              ;
  48+ 9270              ; 	Comprueba_limite_horizontal.
  49+ 9270              ;
  50+ 9270              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9270              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9270              ;
  53+ 9270              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9270              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9270              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9270              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9270
  58+ 9270
  59+ 9270
  60+ 9270 3A 96 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9273 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9275 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9277 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9279 32 96 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 927C 18 09            jr 6F
  66+ 927E CB 5F        1 bit 3,a
  67+ 9280 28 0A            jr z,2F
  68+ 9282 E6 F7            and $f7
  69+ 9284 32 96 89         ld (Ctrl_0),a
  70+ 9287 CD DA 93     6 call Inicializacion
  71+ 928A 18 5B            jr 5F
  72+ 928C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 928D
  74+ 928D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 928D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 928D
  77+ 928D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 928E 2A 98 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9291 CD E0 9B     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9294 67           	ld h,a
  81+ 9295 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9296 CD E0 9B     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9299 67           	ld h,a
  84+ 929A A7           	and a
  85+ 929B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 929D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 929E 3A 8E 89     	ld a,(Cuad_objeto)
  88+ 92A1 FE 02        	cp 2
  89+ 92A3 38 1E        	jr c,3F
  90+ 92A5 28 1C        	jr z,3F
  91+ 92A7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92A8 28 23            jr z,7F
  93+ 92AA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92AC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92AE E1           	pop hl
  96+ 92AF
  97+ 92AF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92AF              ; _para indicar con E="2" en caso necesario.
  99+ 92AF
 100+ 92AF E5               push hl
 101+ 92B0 C5               push bc
 102+ 92B1 CD E0 9B     	call calcula_tercio
 103+ 92B4 FE 01        	cp 1
 104+ 92B6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92B8 CD E8 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92BB 28 26            jr z,9F
 107+ 92BD 38 24            jr c,9F
 108+ 92BF 1E 00        11 ld e,0
 109+ 92C1 18 22            jr 8F
 110+ 92C3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92C4 28 07        	jr z, 7F
 112+ 92C6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92C8 1E 00         	ld e,0
 114+ 92CA E1           	pop hl
 115+ 92CB 18 04        	jr 4F
 116+ 92CD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92CF 18 15            jr 10F
 118+ 92D1
 119+ 92D1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92D1              ; _para indicar con E="2" en caso necesario.
 121+ 92D1
 122+ 92D1 E5           4 push hl
 123+ 92D2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92D3 CD E0 9B     	call calcula_tercio
 125+ 92D6 FE 01        	cp 1
 126+ 92D8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92DA CD E8 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92DD 28 04            jr z,9F
 129+ 92DF 30 02            jr nc,9F
 130+ 92E1 18 02        	jr 8F
 131+ 92E3 1E 02        9 ld e,2
 132+ 92E5 C1           8 pop bc
 133+ 92E6 E1           10 pop hl
 134+ 92E7 C9           5 ret
 135+ 92E8
 136+ 92E8              ; --------------------
 137+ 92E8              ;
 138+ 92E8              ; 25/08/22
 139+ 92E8
 140+ 92E8 CD E0 9B     Comprueba_centro call calcula_tercio
 141+ 92EB 67               ld h,a
 142+ 92EC 08           	ex af,af
 143+ 92ED FE 02        	cp 2
 144+ 92EF 38 07        	jr c,1F
 145+ 92F1 28 05        	jr z,1F
 146+ 92F3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92F6 18 03        	jr 2F
 148+ 92F8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92FB 08           2 ex af,af
 150+ 92FC A7               and a
 151+ 92FD ED 42            sbc hl,bc
 152+ 92FF C9               ret
 153+ 9300
 154+ 9300              ; *********************************************************************************************************************************************************************************************
 155+ 9300              ;
 156+ 9300              ;   16/8/22
 157+ 9300              ;
 158+ 9300              ;	Comprueba_limite_vertical
 159+ 9300              ;
 160+ 9300              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9300              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9300              ;
 163+ 9300
 164+ 9300 2A 7C 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9303 7D           	ld a,l
 166+ 9304 E6 1F        	and $1F
 167+ 9306 57           	ld d,a
 168+ 9307 3A 9A 89     	ld a,(Limite_vertical)
 169+ 930A BA           	cp d 											; Límite - Posición.
 170+ 930B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 930C 3A 8E 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 930F CB 47        	bit 0,a
 173+ 9311 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9313
 175+ 9313              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9313
 177+ 9313 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9314 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9316
 180+ 9316              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9316              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9316
 183+ 9316 3A 80 89         ld a,(Coordenada_X)
 184+ 9319 16 0F            ld d,Centro_izquierda
 185+ 931B A7               and a
 186+ 931C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 931D 28 1E            jr z,3F
 188+ 931F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9321              ;                                                    ; _salimos sin modificar nada.
 190+ 9321 18 0E            jr 2F
 191+ 9323 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9324 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9326
 194+ 9326              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9326              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9326
 197+ 9326 3A 80 89         ld a,(Coordenada_X)
 198+ 9329 16 10            ld d,Centro_derecha
 199+ 932B A7               and a
 200+ 932C 92               sub d
 201+ 932D 28 0E            jr z,3F
 202+ 932F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9331              ;                                                    ; _salimos sin modificar nada.
 204+ 9331 CB 43        2 bit 0,e
 205+ 9333 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9335 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9336 CD CA 93         call Modificaccionne
 208+ 9339 C1           	pop bc
 209+ 933A CD DA 93         call Inicializacion
 210+ 933D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 933E
 212+ 933E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 933E
 214+ 933E C5           4 push bc
 215+ 933F 01 7B 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9342 0A           	ld a,(bc)
 217+ 9343 3D           	dec a
 218+ 9344 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9345 7D           	ld a,l
 220+ 9346 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9347 CB 47        	bit 0,a
 222+ 9349 28 03        	jr z,5F
 223+ 934B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 934C 18 2E        	jr 7F
 225+ 934E
 226+ 934E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 934E
 228+ 934E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 934F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9350 3A 96 89     	ld a,(Ctrl_0)
 231+ 9353 CB 4F        	bit 1,a
 232+ 9355 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9357 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9358
 235+ 9358              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9358
 237+ 9358 1C               inc e
 238+ 9359 1D               dec e
 239+ 935A 20 07            jr nz,12F
 240+ 935C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 935D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 935E 22 7C 89     	ld (Posicion_actual),hl
 243+ 9361 18 44        13 jr 9F
 244+ 9363 CB 43        12 bit 0,e
 245+ 9365 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9367              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9367 C1           	pop bc
 248+ 9368 18 D3        	jr 3B
 249+ 936A 80           14 add b
 250+ 936B 6F               ld l,a
 251+ 936C 22 7C 89     	ld (Posicion_actual),hl
 252+ 936F CD CA 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9372 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9374 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9376 32 96 89         ld (Ctrl_0),a
 256+ 9379 F1           	pop af
 257+ 937A 18 2B        	jr 9F
 258+ 937C
 259+ 937C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 937C
 261+ 937C F5           7 push af
 262+ 937D 3A 96 89     	ld a,(Ctrl_0)
 263+ 9380 CB 47        	bit 0,a
 264+ 9382 20 1D        	jr nz,8F
 265+ 9384 F1           	pop af
 266+ 9385
 267+ 9385              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9385
 269+ 9385 1C           	inc e
 270+ 9386 1D               dec e
 271+ 9387 20 07            jr nz,10F
 272+ 9389 90           	sub b
 273+ 938A 6F               ld l,a
 274+ 938B 22 7C 89     	ld (Posicion_actual),hl
 275+ 938E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9390              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9390 CB 43        10 bit 0,e
 278+ 9392 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9394              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9394 C1           	pop bc
 281+ 9395 18 A6        	jr 3B
 282+ 9397 90           16 sub b
 283+ 9398 6F               ld l,a
 284+ 9399 22 7C 89     	ld (Posicion_actual),hl
 285+ 939C CD CA 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 939F 18 06            jr 9F
 287+ 93A1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 93A3 32 96 89         ld (Ctrl_0),a
 289+ 93A6 F1           	pop af
 290+ 93A7 C1           9 pop bc
 291+ 93A8 1E 00        	ld e,0
 292+ 93AA CD DA 93         call Inicializacion
 293+ 93AD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93AE 08           	ex af,af
 295+ 93AF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93B0 18 8B            jr 3B
 297+ 93B2
 298+ 93B2              ; --------------------
 299+ 93B2
 300+ 93B2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93B4 CD 07 95     1 call PreviousScan
 302+ 93B7 10 FB            djnz 1B
 303+ 93B9 22 7C 89     	ld (Posicion_actual),hl
 304+ 93BC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93BD C9           	ret
 306+ 93BE
 307+ 93BE              ; --------------------
 308+ 93BE
 309+ 93BE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93C0 CD F8 94     1 call NextScan
 311+ 93C3 10 FB            djnz 1B
 312+ 93C5 22 7C 89     	ld (Posicion_actual),hl
 313+ 93C8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93C9 C9           	ret
 315+ 93CA
 316+ 93CA              ; --------------------
 317+ 93CA              ;
 318+ 93CA              ;	22/01/23
 319+ 93CA              ;
 320+ 93CA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93CA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93CA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93CA
 324+ 93CA
 325+ 93CA              Modificaccionne
 326+ 93CA
 327+ 93CA 3A 8E 89     	ld a,(Cuad_objeto)
 328+ 93CD FE 02        	cp 2
 329+ 93CF CC B2 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93D2 DC B2 93         call c,Modifica_Pos_actual
 331+ 93D5 C8           	ret z
 332+ 93D6 CD BE 93         call Modifica_Pos_actual2
 333+ 93D9 C9               ret
 334+ 93DA
 335+ 93DA              ; *************************************************************************************************************************************************************************************************
 336+ 93DA              ;
 337+ 93DA              ;	13/8/22
 338+ 93DA              ;
 339+ 93DA              ;	Inicializacion
 340+ 93DA              ;
 341+ 93DA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93DA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93DA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93DA              ;
 345+ 93DA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93DA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93DA              ;	_ desaparece/aparece.
 348+ 93DA
 349+ 93DA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93DA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93DA              ;
 352+ 93DA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93DA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93DA              ; 		   [E] ="0"
 355+ 93DA
 356+ 93DA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93DA
 358+ 93DA CD E0 9B     Inicializacion call calcula_tercio
 359+ 93DD 28 36        	jr z,primit
 360+ 93DF E6 02        	and 2
 361+ 93E1 20 07        	jr nz,segmit
 362+ 93E3 7D           	ld a,l
 363+ 93E4 FE 7F        	cp $7f
 364+ 93E6 38 2D        	jr c,primit
 365+ 93E8 28 2B        	jr z,primit
 366+ 93EA CD 50 94     segmit call column
 367+ 93ED 38 13        	jr c,tercuad
 368+ 93EF 3E 04        cuarcuad ld a,4
 369+ 93F1 32 8E 89     	ld (Cuad_objeto),a
 370+ 93F4 21 20 48     	ld hl,$4820
 371+ 93F7 22 98 89     	ld (Limite_horizontal),hl
 372+ 93FA 21 9A 89     	ld hl,Limite_vertical
 373+ 93FD 36 0D        	ld (hl),$0d
 374+ 93FF 08           	ex af,af
 375+ 9400 18 3C        	jr 1F
 376+ 9402              tercuad
 377+ 9402 3E 03        	ld a,3
 378+ 9404 32 8E 89     	ld (Cuad_objeto),a
 379+ 9407 21 20 48     	ld hl,$4820
 380+ 940A 22 98 89     	ld (Limite_horizontal),hl
 381+ 940D 21 9A 89     	ld hl,Limite_vertical
 382+ 9410 36 12        	ld (hl),$12
 383+ 9412 08           	ex af,af
 384+ 9413 18 29        	jr 1F
 385+ 9415 CD 50 94     primit call column
 386+ 9418 38 13        	jr c, primcuad
 387+ 941A              segcuad
 388+ 941A 3E 02        	ld a,2
 389+ 941C 32 8E 89     	ld (Cuad_objeto),a
 390+ 941F 21 C0 4F     	ld hl,$4fc0
 391+ 9422 22 98 89     	ld (Limite_horizontal),hl
 392+ 9425 21 9A 89     	ld hl,Limite_vertical
 393+ 9428 36 0D        	ld (hl),$0d
 394+ 942A 08           	ex af,af
 395+ 942B 18 11        	jr 1F
 396+ 942D              primcuad
 397+ 942D 3E 01        	ld a,1
 398+ 942F 32 8E 89     	ld (Cuad_objeto),a
 399+ 9432 21 C0 4F     	ld hl,$4fc0
 400+ 9435 22 98 89     	ld (Limite_horizontal),hl
 401+ 9438 21 9A 89     	ld hl,Limite_vertical
 402+ 943B 36 12        	ld (hl),$12
 403+ 943D 08           	ex af,af
 404+ 943E
 405+ 943E C5           1 push bc
 406+ 943F E5           	push hl
 407+ 9440 D5           	push de
 408+ 9441
 409+ 9441 2A 7C 89     	ld hl,(Posicion_actual)
 410+ 9444 CD FE 9B     	call Genera_coordenadas
 411+ 9447
 412+ 9447 D1           	pop de
 413+ 9448 E1           	pop hl
 414+ 9449 C1           	pop bc
 415+ 944A
 416+ 944A 21 96 89     	ld hl,Ctrl_0
 417+ 944D CB EE        	set 5,(hl)
 418+ 944F C9           	ret
 419+ 9450
 420+ 9450              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9450
 422+ 9450              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9450              ;
 424+ 9450              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9450
 426+ 9450 7D           column ld a,l
 427+ 9451 E6 1F        	and $1f
 428+ 9453 FE 10         	cp $10
 429+ 9455 C9            	ret
 430+ 9456
 431+ 9456              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9456              ;
 433+ 9456              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9456              ;
 435+ 9456              ; 14/12/22
 436+ 9456              ;
 437+ 9456              ;	Modifica: A y BC.
 438+ 9456
 439+ 9456 3A 8E 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9459 E6 01        	and 1
 441+ 945B 28 17        	jr z,1F
 442+ 945D
 443+ 945D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 945D
 445+ 945D 3A 80 89     	ld a,(Coordenada_X)
 446+ 9460 47           	ld b,a
 447+ 9461 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9462 79           	ld a,c
 449+ 9463 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9464 38 08        	jr c,2F
 451+ 9466 47           	ld b,a
 452+ 9467 79           	ld a,c
 453+ 9468 90           	sub b
 454+ 9469 32 97 89     	ld (Columnas),a
 455+ 946C 18 1B        	jr 4F
 456+ 946E 79           2 ld a,c
 457+ 946F 32 97 89     	ld (Columnas),a
 458+ 9472 18 15        	jr 4F
 459+ 9474
 460+ 9474              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9474
 462+ 9474 3A 80 89     1 ld a,(Coordenada_X)
 463+ 9477 81           	add c
 464+ 9478 3D           	dec a
 465+ 9479 D6 1F        	sub $1f
 466+ 947B 38 08        	jr c,3F
 467+ 947D 47           	ld b,a
 468+ 947E 79           	ld a,c
 469+ 947F 90           	sub b
 470+ 9480 32 97 89     	ld (Columnas),a
 471+ 9483 18 04        	jr 4F
 472+ 9485 79           3 ld a,c
 473+ 9486 32 97 89     	ld (Columnas),a
 474+ 9489 D9           4 exx
 475+ 948A 4F           	ld c,a
 476+ 948B D9           	exx
 477+ 948C C9            ret
 478+ 948D
 479+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 948D              ;
 481+ 948D              ;   19/7/23
 482+ 948D              ;
 483+ 948D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 948D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 948D              ;
 486+ 948D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 948D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 948D              ;
 489+ 948D              ;	DESTRUYE: HL,B Y A.
 490+ 948D
 491+ 948D 3A 8E 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9490 FE 02        	cp 2
 493+ 9492 38 18        	jr c,1F
 494+ 9494 28 16        	jr z,1F
 495+ 9496 E6 01        	and 1
 496+ 9498 28 0D        	jr z,3F
 497+ 949A
 498+ 949A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 949A
 500+ 949A CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 949D
 502+ 949D 7D           9 ld a,l
 503+ 949E E6 1F        	and $1f
 504+ 94A0 28 2A        	jr z,7F
 505+ 94A2 2B           	dec hl
 506+ 94A3 10 F8        	djnz 9B
 507+ 94A5 18 25        	jr 7F
 508+ 94A7
 509+ 94A7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 94A7
 511+ 94A7 2A 7C 89     3 ld hl,(Posicion_actual)
 512+ 94AA 18 20        	jr 7F
 513+ 94AC
 514+ 94AC 28 14        1 jr z,2F
 515+ 94AE
 516+ 94AE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94AE
 518+ 94AE CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94B1
 520+ 94B1 7D           4 ld a,l
 521+ 94B2 E6 1F        	and $1f
 522+ 94B4 28 03        	jr z,6F
 523+ 94B6 2B           	dec hl
 524+ 94B7 10 F8        	djnz 4B
 525+ 94B9 06 0F        6 ld b,15
 526+ 94BB CD 07 95     5 call PreviousScan
 527+ 94BE 10 FB        	djnz 5B
 528+ 94C0 18 0A        	jr 7F
 529+ 94C2
 530+ 94C2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94C2
 532+ 94C2 CD E0 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94C5 06 0F        	ld b,15
 534+ 94C7 CD 07 95     8 call PreviousScan
 535+ 94CA 10 FB        	djnz 8B
 536+ 94CC
 537+ 94CC E5           7 push hl
 538+ 94CD DD E1        	pop ix
 539+ 94CF
 540+ 94CF 2A 7E 89     	ld hl,(Puntero_objeto)
 541+ 94D2 E5           	push hl
 542+ 94D3 FD E1        	pop iy
 543+ 94D5
 544+ 94D5              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 545+ 94D5
 546+ 94D5 3A 96 89     	ld a,(Ctrl_0)
 547+ 94D8 CB 77        	bit 6,a
 548+ 94DA C8           	ret z
 549+ 94DB
 550+ 94DB              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 551+ 94DB              ; _ entidad / Amadeus´.
 552+ 94DB
 553+ 94DB DD 22 27 87  	ld (p.imp.amadeus),ix
 554+ 94DF
 555+ 94DF C9           	ret
 556+ 94E0
 557+ 94E0              ; --------------------------------------------------------------------------------------------------------------------
 558+ 94E0              ;
 559+ 94E0              ;	2/1/23
 560+ 94E0              ;
 561+ 94E0              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 562+ 94E0              ;
 563+ 94E0              ;	Tras esta rutina tenemos:
 564+ 94E0              ;
 565+ 94E0              ;	OUTPUT: HL contiene (Posicion_actual).
 566+ 94E0              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 567+ 94E0              ;
 568+ 94E0              ;	DESTRUYE!!!!! HL,B y A.
 569+ 94E0
 570+ 94E0 2A 7C 89     Operandos ld hl,(Posicion_actual)
 571+ 94E3 3A 97 89     	ld a,(Columnas)
 572+ 94E6 3D           	dec a
 573+ 94E7 20 01        	jr nz,1F
 574+ 94E9 3C           	inc a
 575+ 94EA 47           1 ld b,a
 576+ 94EB C9           	ret
 577+ 94EC
 578+ 94EC              ; --------------------------------------------------------------------------------------------------------------------
 579+ 94EC              ;
 580+ 94EC              ;	Prepara_draw
 581+ 94EC              ;
 582+ 94EC              ;	Es una rutina de carga.
 583+ 94EC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 584+ 94EC              ;
 585+ 94EC              ;	FUNCIONAMIENTO:
 586+ 94EC              ;
 587+ 94EC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 588+ 94EC              ;	- LD (Posicion_actual) del objeto en [HL].
 589+ 94EC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 590+ 94EC              ;
 591+ 94EC              ;	DESTRUYE:
 592+ 94EC              ;
 593+ 94EC              ;	Logicamente, BC,HL y E quedan destruidos.
 594+ 94EC
 595+ 94EC 21 7A 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 596+ 94EF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 597+ 94F0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 598+ 94F1 4E           	ld c,(hl)
 599+ 94F2 2A 7C 89     	ld hl,(Posicion_actual)
 600+ 94F5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 601+ 94F7 C9           	ret
 602+ 94F8
 603+ 94F8              ;----------------------------------------------------------------------------------------------------------------
 604+ 94F8              ;
 605+ 94F8              ;	5/08/22
 606+ 94F8              ;
 607+ 94F8              ;   NextScan.
 608+ 94F8              ;
 609+ 94F8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 610+ 94F8              ;
 611+ 94F8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 612+ 94F8              ;
 613+ 94F8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 614+ 94F8              ;
 615+ 94F8              ;       DESTRUIDOS: AF y HL !!!
 616+ 94F8              ;
 617+ 94F8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 618+ 94F8              ;
 619+ 94F8
 620+ 94F8 24           NextScan inc h          ; Incrementamos el scanline.
 621+ 94F9 7C               ld a,h
 622+ 94FA E6 07            and 7
 623+ 94FC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 624+ 94FD
 625+ 94FD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 626+ 94FE C6 20            add a,$20           ; Vamos a comprobarlo...
 627+ 9500 6F               ld l,a
 628+ 9501 D8               ret c               ; Salimos si se produce el cambio de tercio.
 629+ 9502
 630+ 9502 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 631+ 9503 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 632+ 9505 67               ld h,a
 633+ 9506 C9               ret
 634+ 9507
 635+ 9507              ;----------------------------------------------------------------------------------------------------------------
 636+ 9507              ;
 637+ 9507              ;	5/08/22
 638+ 9507              ;
 639+ 9507              ;   PreviousScan.
 640+ 9507              ;
 641+ 9507              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 642+ 9507              ;
 643+ 9507              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 644+ 9507              ;
 645+ 9507              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 646+ 9507              ;
 647+ 9507              ;       DESTRUIDOS: AF y HL !!!
 648+ 9507              ;
 649+ 9507              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 650+ 9507              ;
 651+ 9507
 652+ 9507 7C           PreviousScan ld a,h
 653+ 9508 25               dec h               ; Dec H.
 654+ 9509 E6 07            and 7
 655+ 950B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 656+ 950C
 657+ 950C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 658+ 950D D6 20            sub $20             ; Vamos a comprobarlo...
 659+ 950F 6F               ld l,a
 660+ 9510 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 661+ 9511
 662+ 9511 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 663+ 9512 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 664+ 9514 67               ld h,a
 665+ 9515 C9               ret
 666+ 9516
 667+ 9516
 668+ 9516
 669+ 9516
 670+ 9516
 671+ 9516
 672+ 9516
 673+ 9516
 674+ 9516
 675+ 9516
 676+ 9516
 677+ 9516
# file closed: Draw_XOR.asm
1891  9516              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9516
   2+ 9516              ; ******************************************************************************************************************************************************************************************
   3+ 9516              ;
   4+ 9516              ;   20/05/23
   5+ 9516              ;
   6+ 9516              ;	Recompone_posicion_inicio
   7+ 9516              ;
   8+ 9516              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9516              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9516              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9516              ;	_ a una u otra rutina.
  12+ 9516
  13+ 9516              Recompone_posicion_inicio
  14+ 9516
  15+ 9516 2A 8C 89     	ld hl,(Posicion_inicio)
  16+ 9519 7D           	ld a,l
  17+ 951A E6 1F        	and $1f
  18+ 951C 28 16        	jr z,1F
  19+ 951E
  20+ 951E FE 1F        	cp $1f
  21+ 9520 28 0D        	jr z,3F
  22+ 9522
  23+ 9522 21 9B 89     	ld hl,Ctrl_2
  24+ 9525 CB C6        	set 0,(hl)
  25+ 9527 2A 7E 89     	ld hl,(Puntero_objeto)
  26+ 952A 22 B6 89     	ld (Repone_puntero_objeto),hl
  27+ 952D 18 08        	jr 2F
  28+ 952F
  29+ 952F CD DD 96     3 call Mov_left
  30+ 9532 18 03        	jr 2F
  31+ 9534
  32+ 9534 CD BA 95     1 call Mov_right
  33+ 9537 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 953A 22 7E 89     	ld (Puntero_objeto),hl
  35+ 953D C9           	ret
  36+ 953E
  37+ 953E              ; ******************************************************************************************************************************************************************************************
  38+ 953E              ;
  39+ 953E              ;   27/05/23
  40+ 953E              ;
  41+ 953E              ;	Mov_down
  42+ 953E              ;
  43+ 953E              ; 	Mueve el Sprite X px hacia abajo.
  44+ 953E              ;
  45+ 953E              ;
  46+ 953E              Mov_down
  47+ 953E
  48+ 953E CD A8 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9541              ;																	; _ repone (Puntero_objeto).
  50+ 9541 21 96 89     	ld hl,Ctrl_0
  51+ 9544 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9546              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9546              ; 																	; _ en el caso de que no lo haya.
  54+ 9546 3A A0 89     	ld a,(Vel_down)
  55+ 9549 47           	ld b,a
  56+ 954A 2A 7C 89         ld hl,(Posicion_actual)
  57+ 954D CD E0 9B     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9550 E6 02        	and 2
  59+ 9552 28 17        	jr z,1F
  60+ 9554
  61+ 9554              ; Nos encontramos en el último tercio de pantalla.
  62+ 9554              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9554
  64+ 9554 7C           	ld a,h
  65+ 9555 FE 57        	cp $57
  66+ 9557 20 12        	jr nz,1F
  67+ 9559
  68+ 9559 7D           	ld a,l
  69+ 955A C6 20        	add $20
  70+ 955C 30 0D        	jr nc,1F
  71+ 955E
  72+ 955E              ; ------------------------------
  73+ 955E              ;
  74+ 955E              ;	12/01/24
  75+ 955E
  76+ 955E              ;	call Reaparece_arriba
  77+ 955E CD 6A 98     	call Reinicio
  78+ 9561
  79+ 9561              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9561
  81+ 9561 3A DB 89     	ld a,(Ctrl_3)
  82+ 9564 CB CF        	set 1,a
  83+ 9566 32 DB 89     	ld (Ctrl_3),a
  84+ 9569
  85+ 9569 18 08        	jr 3F
  86+ 956B              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 956B              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 956B              ; ------------------------------
  89+ 956B
  90+ 956B CD F8 94     1 call NextScan
  91+ 956E 22 7C 89     	ld (Posicion_actual),hl
  92+ 9571 10 DA            djnz 2B
  93+ 9573 CD FE 9B     3 call Genera_coordenadas
  94+ 9576 C9           	ret
  95+ 9577
  96+ 9577              ; ******************************************************************************************************************************************************************************************
  97+ 9577              ;
  98+ 9577              ;   27/05/23
  99+ 9577              ;
 100+ 9577              ;	Mov_up
 101+ 9577              ;
 102+ 9577              ; 	Mueve el Sprite hacia arriba.
 103+ 9577              ;
 104+ 9577              ;
 105+ 9577              Mov_up
 106+ 9577
 107+ 9577 CD A8 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 957A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 957A 21 96 89     	ld hl,Ctrl_0
 110+ 957D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 957F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 957F              ; 																		; _ en el caso de que no lo haya.
 113+ 957F 3A 9F 89     	ld a,(Vel_up)
 114+ 9582 47           	ld b,a
 115+ 9583 2A 7C 89     	ld hl,(Posicion_actual)
 116+ 9586 CD E0 9B     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9589 A7           	and a
 118+ 958A 20 10        	jr nz,1F
 119+ 958C
 120+ 958C              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 958C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 958C
 123+ 958C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 958D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 958F 20 0B            jr nz,1F
 126+ 9591 7D               ld a,l
 127+ 9592 D6 20            sub $20
 128+ 9594 30 06            jr nc,1F
 129+ 9596 25               dec h
 130+ 9597
 131+ 9597              ; -----------------------------
 132+ 9597 CD 4B 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 959A              ;	call Reinicio
 134+ 959A              ; -----------------------------
 135+ 959A
 136+ 959A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 959C CD 07 95     1 call PreviousScan
 138+ 959F 22 7C 89     	ld (Posicion_actual),hl
 139+ 95A2 10 E2            djnz 3B
 140+ 95A4 CD FE 9B     2 call Genera_coordenadas
 141+ 95A7 C9           	ret
 142+ 95A8
 143+ 95A8              ; -----------------------------
 144+ 95A8              ;
 145+ 95A8              ;	27/5/23
 146+ 95A8              ;
 147+ 95A8              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95A8              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95A8              ;
 150+ 95A8              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95A8              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95A8              ;
 153+ 95A8              ;	Modifica: A y (Puntero_objeto).
 154+ 95A8
 155+ 95A8 3A 9B 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95AB CB 47        	bit 0,a
 157+ 95AD C8           	ret z
 158+ 95AE CB 87        	res 0,a
 159+ 95B0 32 9B 89     	ld (Ctrl_2),a
 160+ 95B3 2A B6 89     	ld hl,(Repone_puntero_objeto)
 161+ 95B6 22 7E 89     	ld (Puntero_objeto),hl
 162+ 95B9 C9           	ret
 163+ 95BA
 164+ 95BA              ; ******************************************************************************************************************************************************************************************
 165+ 95BA              ;
 166+ 95BA              ;	19/10/22
 167+ 95BA              ;
 168+ 95BA              ;	Mov_right.
 169+ 95BA              ;
 170+ 95BA              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95BA              ;
 172+ 95BA
 173+ 95BA 3A 96 89     Mov_right ld a,(Ctrl_0)
 174+ 95BD CB 77        	bit 6,a
 175+ 95BF 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95C1
 177+ 95C1 CD F9 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95C4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95C5
 180+ 95C5 21 96 89     	ld hl,Ctrl_0
 181+ 95C8 CB E6        	set 4,(hl)
 182+ 95CA 18 52        	jr 8F
 183+ 95CC
 184+ 95CC 21 96 89     10 ld hl,Ctrl_0
 185+ 95CF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95D1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95D1              ; 																	; _ en el caso de que no lo haya.
 188+ 95D1 3A 80 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95D4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95D6 20 46        	jr nz,8F
 191+ 95D8
 192+ 95D8 3A 82 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95DB A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95DC 28 40        	jr z,8F
 195+ 95DE
 196+ 95DE              ; ---------- ---------- ----------
 197+ 95DE              ;
 198+ 95DE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95DE
 200+ 95DE 3A 9E 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95E1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95E3 28 11        	jr z,1F
 203+ 95E5 38 06        	jr c,6F
 204+ 95E7 FE 04        	cp 4
 205+ 95E9 28 14        	jr z,7F
 206+ 95EB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95ED
 208+ 95ED              ; ---------- ---------- ----------
 209+ 95ED              ;
 210+ 95ED              ; Perfiles de velocidad
 211+ 95ED              ;
 212+ 95ED
 213+ 95ED 3A 82 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95F0 FE FE        	cp $fe
 215+ 95F2 20 2A        	jr nz,8F
 216+ 95F4 18 10        	jr 3F
 217+ 95F6 3A 82 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95F9 FE FD        	cp $fd
 219+ 95FB 20 21        	jr nz,8F
 220+ 95FD 18 07        	jr 3F
 221+ 95FF 3A 82 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9602 FE FB        	cp $fb
 223+ 9604 20 18        	jr nz,8F
 224+ 9606
 225+ 9606              ; ---------- ---------- ----------
 226+ 9606
 227+ 9606              3
 228+ 9606 CD 39 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9609              ;	call Reinicio
 230+ 9609
 231+ 9609              ; ---------- ---------- ----------
 232+ 9609              ;
 233+ 9609              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9609
 235+ 9609 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 960B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 960C CD 25 96     	call DESPLZ_DER
 238+ 960F C1           	pop bc
 239+ 9610 10 F9        	djnz 5B
 240+ 9612 2A 7C 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9615 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9616 22 7C 89     	ld (Posicion_actual),hl
 243+ 9619 CD FE 9B     	call Genera_coordenadas
 244+ 961C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 961E
 246+ 961E              ; ---------- ---------- ----------
 247+ 961E
 248+ 961E 2A 7C 89     8 ld hl,(Posicion_actual)
 249+ 9621 CD 25 96     	call DESPLZ_DER
 250+ 9624 C9           2 ret
 251+ 9625
 252+ 9625              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9625              ;
 254+ 9625              ;	22/9/22
 255+ 9625              ;
 256+ 9625
 257+ 9625 CD 34 96     DESPLZ_DER call Desplaza_derecha
 258+ 9628 CD 80 96         call modifica_parametros_1er_DESPLZ_2
 259+ 962B CD A9 96         call Ciclo_completo
 260+ 962E 21 96 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9631 CB FE        	set 7,(hl)
 262+ 9633 C9           	ret
 263+ 9634
 264+ 9634              ; ******************************************************************************************************************************************************************************************
 265+ 9634              ;	15/02/23
 266+ 9634              ;
 267+ 9634
 268+ 9634 3A 9E 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9637 47           	ld b,a
 270+ 9638 2A 88 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 963B 23           1 inc hl
 272+ 963C 23           	inc hl
 273+ 963D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 963F 22 88 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9642 CD 5F 8C     	call Extrae_address
 276+ 9645 22 7E 89     	ld (Puntero_objeto),hl
 277+ 9648
 278+ 9648              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9648
 280+ 9648              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9648              ; Cuántos movimientos hemos hecho ??
 282+ 9648              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9648
 284+ 9648 2A 84 89     7 ld hl,(Indice_Sprite_der)
 285+ 964B EB           	ex de,hl
 286+ 964C A7           	and a
 287+ 964D ED 52        	sbc hl,de
 288+ 964F CB 3D        	srl l
 289+ 9651 3E 08        6 ld a,8
 290+ 9653 95           	sub l
 291+ 9654 30 1E        	jr nc,3F
 292+ 9656
 293+ 9656              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9656              ; B="0".
 295+ 9656
 296+ 9656 04           4 inc b
 297+ 9657 3C           	inc a
 298+ 9658 20 FC        	jr nz,4B
 299+ 965A 78           	ld a,b
 300+ 965B 08           	ex af,af
 301+ 965C 2A 84 89     	ld hl,(Indice_Sprite_der)
 302+ 965F 23           5 inc hl
 303+ 9660 23           	inc hl
 304+ 9661 10 FC        	djnz 5B
 305+ 9663 22 88 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9666 CD 5F 8C     	call Extrae_address
 307+ 9669 22 7E 89     	ld (Puntero_objeto),hl
 308+ 966C
 309+ 966C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 966C              ; _(Posicion_actual).
 311+ 966C
 312+ 966C 21 7C 89     	ld hl,Posicion_actual
 313+ 966F 34           	inc (hl)
 314+ 9670 08               ex af,af
 315+ 9671 6F           	ld l,a
 316+ 9672 18 DD        	jr 6B
 317+ 9674
 318+ 9674              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9674
 320+ 9674 47           3 ld b,a
 321+ 9675 2A 86 89     	ld hl,(Indice_Sprite_izq)
 322+ 9678 23           2 inc hl
 323+ 9679 23           	inc hl
 324+ 967A 10 FC        	djnz 2B
 325+ 967C 22 8A 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 967F C9           8 ret
 327+ 9680
 328+ 9680              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9680              ;
 330+ 9680              ;	24/7/22
 331+ 9680              ;
 332+ 9680              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9680              ;
 334+ 9680              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9680              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9680              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9680
 338+ 9680 3A 82 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9683 A7           	and a
 340+ 9684 20 1F        	jr nz,1F
 341+ 9686 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9688 32 82 89         ld (CTRL_DESPLZ),a
 343+ 968B
 344+ 968B 21 7B 89     	ld hl,Columns
 345+ 968E 34           	inc (hl)
 346+ 968F 3A 8E 89     	ld a,(Cuad_objeto)
 347+ 9692 E6 01        	and 1
 348+ 9694 28 0F        	jr z,1F
 349+ 9696 2A 7C 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9699 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 969A 22 7C 89     	ld (Posicion_actual),hl
 352+ 969D CD FE 9B     	call Genera_coordenadas
 353+ 96A0 CD 05 98     	call Inc_CTRL_DESPLZ
 354+ 96A3 18 03        	jr 2F
 355+ 96A5 CD 05 98     1 call Inc_CTRL_DESPLZ
 356+ 96A8 C9           2 ret
 357+ 96A9
 358+ 96A9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96A9              ;
 360+ 96A9              ;	24/7/22
 361+ 96A9              ;
 362+ 96A9              ;	Ciclo_completo.
 363+ 96A9              ;
 364+ 96A9              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96A9              ;
 366+ 96A9              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96A9              ; 	Decrementamos (Columns).
 368+ 96A9              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96A9              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96A9
 371+ 96A9
 372+ 96A9 3A 82 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96AC FE FF        	cp $ff
 374+ 96AE 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96B0 E6 F0        	and $f0
 376+ 96B2 20 28        	jr nz,3F
 377+ 96B4
 378+ 96B4              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96B4
 380+ 96B4 3A 82 89     	ld a,(CTRL_DESPLZ)
 381+ 96B7 47           	ld b,a
 382+ 96B8 3E F8        	ld a,$f8
 383+ 96BA 80           	add b
 384+ 96BB 32 82 89     	ld (CTRL_DESPLZ),a
 385+ 96BE 18 1C        	jr 3F
 386+ 96C0 21 7B 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96C3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96C4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96C5 32 82 89     	ld (CTRL_DESPLZ),a
 390+ 96C8 3A 8E 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96CB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96CD 20 0A        	jr nz,2F
 393+ 96CF 2A 7C 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96D2 23           	inc hl
 395+ 96D3 22 7C 89     	ld (Posicion_actual),hl
 396+ 96D6 CD FE 9B     	call Genera_coordenadas
 397+ 96D9
 398+ 96D9              ; Inicia el puntero de Sprite.
 399+ 96D9
 400+ 96D9 CD 74 8C     2 call Inicia_puntero_objeto_der
 401+ 96DC C9           3 ret
 402+ 96DD
 403+ 96DD              ; ******************************************************************************************************************************************************************************************
 404+ 96DD              ;
 405+ 96DD              ;	15/02/23
 406+ 96DD              ;
 407+ 96DD              ;	Mov_left.
 408+ 96DD              ;
 409+ 96DD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96DD              ;
 411+ 96DD              Mov_left
 412+ 96DD
 413+ 96DD 21 96 89     	ld hl,Ctrl_0
 414+ 96E0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96E2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96E2              ; 																	; _ en el caso de que no lo haya.
 417+ 96E2 3A 96 89     	ld a,(Ctrl_0)
 418+ 96E5 CB 77        	bit 6,a
 419+ 96E7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96E9
 421+ 96E9 CD FF 97     	call Stop_Amadeus_left
 422+ 96EC C8           	ret z
 423+ 96ED 20 4A        	jr nz,8F
 424+ 96EF
 425+ 96EF 3A 80 89     11 ld a,(Coordenada_X)
 426+ 96F2 A7           	and a
 427+ 96F3 20 44        	jr nz,8F
 428+ 96F5
 429+ 96F5 3A 82 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96F8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96F9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96FB
 433+ 96FB              ; ---------- ---------- ----------
 434+ 96FB
 435+ 96FB 3A 9D 89     	ld a,(Vel_left)
 436+ 96FE FE 02        	cp 2
 437+ 9700 28 0F        	jr z,1F
 438+ 9702 38 04        	jr c,6F
 439+ 9704 FE 04        	cp 4
 440+ 9706 28 12        	jr z,7F
 441+ 9708
 442+ 9708              ; ---------- ---------- ----------
 443+ 9708
 444+ 9708 3A 82 89     6 ld a,(CTRL_DESPLZ)
 445+ 970B FE F8        	cp $f8
 446+ 970D 20 2A        	jr nz,8F
 447+ 970F 18 10        	jr 4F
 448+ 9711 3A 82 89     1 ld a,(CTRL_DESPLZ)
 449+ 9714 FE F9        	cp $f9
 450+ 9716 20 21        	jr nz,8F
 451+ 9718 18 07        	jr 4F
 452+ 971A 3A 82 89     7 ld a,(CTRL_DESPLZ)
 453+ 971D FE FB        	cp $fb
 454+ 971F 20 18        	jr nz,8F
 455+ 9721
 456+ 9721              ; ---------- ---------- ----------
 457+ 9721
 458+ 9721              4
 459+ 9721 CD 27 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9724              ;	call Reinicio
 461+ 9724
 462+ 9724              ; ---------- ---------- ----------
 463+ 9724
 464+ 9724 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9726 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9727
 467+ 9727              ;	ld hl,(Indice_Sprite_izq)
 468+ 9727              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9727
 470+ 9727 CD 40 97     	call DESPLZ_IZQ
 471+ 972A C1           	pop bc
 472+ 972B 10 F9        	djnz 5B
 473+ 972D 2A 7C 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9730 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9731 22 7C 89     	ld (Posicion_actual),hl
 476+ 9734 CD FE 9B     	call Genera_coordenadas
 477+ 9737 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9739
 479+ 9739              ; ---------- ---------- ----------
 480+ 9739
 481+ 9739              ; Movemos, no hay recolocación.
 482+ 9739
 483+ 9739 2A 7C 89     8 ld hl,(Posicion_actual)
 484+ 973C CD 40 97     	call DESPLZ_IZQ
 485+ 973F C9           2 ret
 486+ 9740
 487+ 9740              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9740              ;
 489+ 9740              ;	22/9/22
 490+ 9740
 491+ 9740              DESPLZ_IZQ
 492+ 9740
 493+ 9740 CD 4F 97     	call Desplaza_izquierda
 494+ 9743 CD 9B 97         call modifica_parametros_1er_DESPLZ
 495+ 9746 CD C3 97     	call Ciclo_completo_2
 496+ 9749 21 96 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 974C CB BE        	res 7,(hl)
 498+ 974E C9           	ret
 499+ 974F
 500+ 974F              Desplaza_izquierda
 501+ 974F
 502+ 974F 3A 9D 89     	ld a,(Vel_left)
 503+ 9752 47           	ld b,a
 504+ 9753 2A 8A 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9756 23           1 inc hl
 506+ 9757 23           	inc hl
 507+ 9758 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 975A 22 8A 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 975D CD 5F 8C     	call Extrae_address
 510+ 9760 22 7E 89     	ld (Puntero_objeto),hl
 511+ 9763
 512+ 9763              ; Modifica (Puntero_DESPLZ_der).
 513+ 9763
 514+ 9763              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9763              ; Cuántos movimientos hemos hecho ??
 516+ 9763              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9763
 518+ 9763 2A 86 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9766 EB           	ex de,hl
 520+ 9767 A7           	and a
 521+ 9768 ED 52        	sbc hl,de
 522+ 976A CB 3D        	srl l
 523+ 976C 3E 08        6 ld a,8
 524+ 976E 95           	sub l
 525+ 976F 30 1E        	jr nc,3F
 526+ 9771
 527+ 9771              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9771              ; B="0".
 529+ 9771
 530+ 9771 04           4 inc b
 531+ 9772 3C           	inc a
 532+ 9773 20 FC        	jr nz,4B
 533+ 9775 78           	ld a,b
 534+ 9776 08           	ex af,af
 535+ 9777 2A 86 89     	ld hl,(Indice_Sprite_izq)
 536+ 977A 23           5 inc hl
 537+ 977B 23           	inc hl
 538+ 977C 10 FC        	djnz 5B
 539+ 977E 22 8A 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9781 CD 5F 8C     	call Extrae_address
 541+ 9784 22 7E 89     	ld (Puntero_objeto),hl
 542+ 9787
 543+ 9787              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9787              ; _(Posicion_actual).
 545+ 9787
 546+ 9787 21 7C 89     	ld hl,Posicion_actual
 547+ 978A 35           	dec (hl)
 548+ 978B 08           	ex af,af
 549+ 978C 6F           	ld l,a
 550+ 978D 18 DD        	jr 6B
 551+ 978F
 552+ 978F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 978F
 554+ 978F 47           3 ld b,a
 555+ 9790 2A 84 89     	ld hl,(Indice_Sprite_der)
 556+ 9793 23           2 inc hl
 557+ 9794 23           	inc hl
 558+ 9795 10 FC        	djnz 2B
 559+ 9797 22 88 89     	ld (Puntero_DESPLZ_der),hl
 560+ 979A C9           8 ret
 561+ 979B
 562+ 979B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 979B              ;
 564+ 979B              ;	modifica_parametros_1er_DESPLZ
 565+ 979B              ;
 566+ 979B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 979B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 979B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 979B
 570+ 979B 3A 82 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 979E A7           	and a
 572+ 979F 20 1E        	jr nz,1F
 573+ 97A1 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 97A2 32 82 89         ld (CTRL_DESPLZ),a
 575+ 97A5 21 7B 89     	ld hl,Columns
 576+ 97A8 34           	inc (hl)
 577+ 97A9 3A 8E 89     	ld a,(Cuad_objeto)
 578+ 97AC E6 01        	and 1
 579+ 97AE 20 0F        	jr nz,1F
 580+ 97B0 2A 7C 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97B3 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97B4 22 7C 89     	ld (Posicion_actual),hl
 583+ 97B7 CD FE 9B     	call Genera_coordenadas
 584+ 97BA CD 16 98     	call Dec_CTRL_DESPLZ
 585+ 97BD 18 03        	jr 2F
 586+ 97BF CD 16 98     1 call Dec_CTRL_DESPLZ
 587+ 97C2 C9           2 ret
 588+ 97C3
 589+ 97C3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97C3
 591+ 97C3 3A 82 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97C6 FE F7        	cp $f7
 593+ 97C8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97CA 30 2C        	jr nc,3F
 595+ 97CC
 596+ 97CC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97CC
 598+ 97CC 06 00        	ld b,0
 599+ 97CE 04           4 inc b
 600+ 97CF 3C           	inc a
 601+ 97D0 FE F7        	cp $f7
 602+ 97D2 20 FA        	jr nz,4B
 603+ 97D4 3E FF        	ld a,$ff
 604+ 97D6 90           	sub b
 605+ 97D7 32 82 89     	ld (CTRL_DESPLZ),a
 606+ 97DA 18 1C        	jr 3F
 607+ 97DC
 608+ 97DC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97DC
 610+ 97DC 21 7B 89     1 ld hl,Columns
 611+ 97DF 35           	dec (hl)
 612+ 97E0 AF           	xor a
 613+ 97E1 32 82 89     	ld (CTRL_DESPLZ),a
 614+ 97E4 3A 8E 89     	ld a,(Cuad_objeto)
 615+ 97E7 E6 01        	and 1
 616+ 97E9 28 0A        	jr z,2F
 617+ 97EB 2A 7C 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97EE 2B           	dec hl
 619+ 97EF 22 7C 89     	ld (Posicion_actual),hl
 620+ 97F2 CD FE 9B     	call Genera_coordenadas
 621+ 97F5
 622+ 97F5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97F5
 624+ 97F5 CD 87 8C     2 call Inicia_puntero_objeto_izq
 625+ 97F8 C9           3 ret
 626+ 97F9
 627+ 97F9              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97F9              ;
 629+ 97F9              ;	19/10/22
 630+ 97F9              ;
 631+ 97F9              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97F9              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97F9
 634+ 97F9 3A 80 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97FC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97FE C9           	ret
 637+ 97FF
 638+ 97FF              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97FF              ;
 640+ 97FF              ;	19/10/22
 641+ 97FF              ;
 642+ 97FF              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97FF              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97FF
 645+ 97FF 3A 80 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9802 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9804 C9           	ret
 648+ 9805
 649+ 9805              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9805              ;
 651+ 9805              ;	24/7/22
 652+ 9805              ;
 653+ 9805              ;	Inc_CTRL_DESPLZ
 654+ 9805              ;
 655+ 9805              ;
 656+ 9805              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9805
 658+ 9805 21 82 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9808 3A 9E 89     	ld a,(Vel_right)
 660+ 980B A7           	and a
 661+ 980C 28 06        	jr z,1F
 662+ 980E 47           	ld b,a
 663+ 980F 34           3 inc (hl)
 664+ 9810 10 FD        	djnz 3B
 665+ 9812 18 01        	jr 2F
 666+ 9814 34           1 inc (hl)
 667+ 9815 C9           2 ret
 668+ 9816
 669+ 9816              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9816              ;
 671+ 9816              ;	5/2/23
 672+ 9816              ;
 673+ 9816              ;	Dec_CTRL_DESPLZ
 674+ 9816              ;
 675+ 9816              ;
 676+ 9816              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9816
 678+ 9816 21 82 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9819 3A 9D 89     	ld a,(Vel_left)
 680+ 981C A7           	and a
 681+ 981D 28 06        	jr z,1F
 682+ 981F 47           	ld b,a
 683+ 9820 35           3 dec (hl)
 684+ 9821 10 FD        	djnz 3B
 685+ 9823 18 01        	jr 2F
 686+ 9825 35           1 dec (hl)
 687+ 9826 C9           2 ret
 688+ 9827
 689+ 9827              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9827
 691+ 9827 2A 7C 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 982A 01 1F 00     	ld bc,31
 693+ 982D A7           	and a
 694+ 982E ED 4A        	adc hl,bc
 695+ 9830 22 7C 89     	ld (Posicion_actual),hl
 696+ 9833 21 96 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9836 CB C6        	set 0,(hl)
 698+ 9838 C9           	ret
 699+ 9839
 700+ 9839              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9839
 702+ 9839 2A 7C 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 983C 01 1F 00     	ld bc,31
 704+ 983F A7           	and a
 705+ 9840 ED 42        	sbc hl,bc
 706+ 9842 22 7C 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9845 21 96 89     	ld hl,Ctrl_0
 708+ 9848 CB CE        	set 1,(hl)
 709+ 984A C9           	ret
 710+ 984B
 711+ 984B              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 984B
 713+ 984B 24           Reaparece_abajo inc h
 714+ 984C 01 E0 17     	ld bc,$17e0
 715+ 984F A7           	and a
 716+ 9850 ED 4A        	adc hl,bc
 717+ 9852 22 7C 89     	ld (Posicion_actual),hl
 718+ 9855 21 96 89     	ld hl,Ctrl_0
 719+ 9858 CB D6        	set 2,(hl)
 720+ 985A C9           	ret
 721+ 985B
 722+ 985B              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 985B
 724+ 985B 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 985E A7           	and a
 726+ 985F ED 42        	sbc hl,bc
 727+ 9861 22 7C 89     	ld (Posicion_actual),hl
 728+ 9864 21 96 89     	ld hl,Ctrl_0
 729+ 9867 CB DE        	set 3,(hl)
 730+ 9869 C9           	ret
 731+ 986A
 732+ 986A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 986A              ;
 734+ 986A              ;	15/07/23
 735+ 986A
 736+ 986A              Reinicio
 737+ 986A
 738+ 986A              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 986A
 740+ 986A AF           	xor a
 741+ 986B 21 AD 89     	ld hl,Puntero_indice_mov_bucle
 742+ 986E CD 8C 98     	call Limpia_contenido_hl
 743+ 9871
 744+ 9871 21 7C 89     	ld hl,Posicion_actual
 745+ 9874 CD 8C 98     	call Limpia_contenido_hl
 746+ 9877
 747+ 9877 CD 2B 9A     	call Inicializa_Puntero_indice_mov
 748+ 987A CD 58 99     	call Inicia_Puntero_mov
 749+ 987D
 750+ 987D 21 AF 89     	ld hl,Incrementa_puntero
 751+ 9880 06 05        	ld b,5
 752+ 9882 77           1 ld (hl),a
 753+ 9883 23           	inc hl
 754+ 9884 10 FC        	djnz 1B
 755+ 9886
 756+ 9886 21 9B 89     	ld hl,Ctrl_2
 757+ 9889 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 988B
 759+ 988B C9           	ret
 760+ 988C
 761+ 988C 77           Limpia_contenido_hl	ld (hl),a
 762+ 988D 23           	inc hl
 763+ 988E 77           	ld (hl),a
 764+ 988F C9           	ret
 765+ 9890
 766+ 9890
# file closed: Direcciones.asm
1892  9890              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9890              ; ----- ----- ----- ----- -----
   2+ 9890              ;
   3+ 9890              ;   28/12/23
   4+ 9890
   5+ 9890              Movimiento
   6+ 9890
   7+ 9890              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9890
   9+ 9890 3A 9B 89         ld a,(Ctrl_2)
  10+ 9893 CB 57            bit 2,a
  11+ 9895 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9897
  13+ 9897 2A AB 89         ld hl,(Puntero_mov)
  14+ 989A 7E               ld a,(hl)
  15+ 989B
  16+ 989B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 989B
  18+ 989B              Inicia_desplazamiento.
  19+ 989B
  20+ 989B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 989B
  22+ 989B CD 8E 99         call Ajusta_velocidad_desplazamiento
  23+ 989E
  24+ 989E              ; Iniciamos (Repetimos_mov).
  25+ 989E
  26+ 989E 7E               ld a,(hl)
  27+ 989F E6 0F            and $0f
  28+ 98A1 32 B1 89         ld (Repetimos_desplazamiento),a
  29+ 98A4 32 B2 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98A7
  31+ 98A7              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98A7
  33+ 98A7 23               inc hl
  34+ 98A8 7E               ld a,(hl)
  35+ 98A9 32 B4 89         ld (Cola_de_desplazamiento),a
  36+ 98AC 2B               dec hl
  37+ 98AD
  38+ 98AD 21 9B 89         ld hl,Ctrl_2
  39+ 98B0 CB D6            set 2,(hl)
  40+ 98B2
  41+ 98B2              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98B2              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98B2
  44+ 98B2              Desplazamiento_iniciado
  45+ 98B2
  46+ 98B2 CD 62 99         call Aplica_desplazamiento
  47+ 98B5
  48+ 98B5              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98B5
  50+ 98B5 3A DB 89         ld a,(Ctrl_3)
  51+ 98B8 CB 4F            bit 1,a
  52+ 98BA C0               ret nz
  53+ 98BB
  54+ 98BB 21 B1 89     3 ld hl,Repetimos_desplazamiento
  55+ 98BE 35               dec (hl)
  56+ 98BF C0               ret nz
  57+ 98C0
  58+ 98C0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98C0              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98C0              ; Analiza (Cola_de_desplazamiento).
  61+ 98C0
  62+ 98C0 3A B4 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98C3 A7               and a
  64+ 98C4 CC B7 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98C7 28 30            jr z,Reinicia_el_movimiento
  66+ 98C9
  67+ 98C9 FE FF            cp $ff
  68+ 98CB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98CD
  70+ 98CD FE FE            cp $fe
  71+ 98CF CC 3C 99         call z,Fijamos_bucle
  72+ 98D2 28 25            jr z,Reinicia_el_movimiento
  73+ 98D4
  74+ 98D4 FE FD            cp $fd
  75+ 98D6 20 11            jr nz,1F
  76+ 98D8
  77+ 98D8              ; ---
  78+ 98D8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98D8
  80+ 98D8 3A 9B 89         ld a,(Ctrl_2)
  81+ 98DB CB 5F            bit 3,a
  82+ 98DD 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98DF
  84+ 98DF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98DF
  86+ 98DF 21 9B 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98E2 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98E4
  89+ 98E4 CD 4D 99         call Inicia_Repetimos_movimiento
  90+ 98E7 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98E9              ; ---
  92+ 98E9
  93+ 98E9 FE 01        1 cp 1
  94+ 98EB CA 26 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98EE
  96+ 98EE 3D               dec a
  97+ 98EF 32 B4 89         ld (Cola_de_desplazamiento),a
  98+ 98F2
  99+ 98F2 3A B2 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98F5 32 B1 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98F8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98F8 C9               ret
 103+ 98F9
 104+ 98F9              Reinicia_el_movimiento
 105+ 98F9
 106+ 98F9 3A 9B 89         ld a,(Ctrl_2)
 107+ 98FC CB 5F            bit 3,a
 108+ 98FE 28 1B            jr z,2F
 109+ 9900
 110+ 9900              ; (Cola_de_desplazamiento)="254".
 111+ 9900
 112+ 9900 21 B3 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9903 35               dec (hl)
 114+ 9904 20 15            jr nz,2F
 115+ 9906
 116+ 9906              ; Fin de las repeticiones del último movimiento.
 117+ 9906
 118+ 9906 21 9B 89         ld hl,Ctrl_2
 119+ 9909 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 990B
 121+ 990B 2A AB 89         ld hl,(Puntero_mov)
 122+ 990E 23               inc hl
 123+ 990F 23               inc hl
 124+ 9910 23               inc hl
 125+ 9911 22 AB 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9914              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9914 7E               ld a,(hl)
 128+ 9915 32 B4 89         ld (Cola_de_desplazamiento),a
 129+ 9918
 130+ 9918 C3 C0 98         jp Cola
 131+ 991B
 132+ 991B CD 58 99     2 call Inicia_Puntero_mov
 133+ 991E
 134+ 991E 21 9B 89         ld hl,Ctrl_2
 135+ 9921 CB 96            res 2,(hl)
 136+ 9923
 137+ 9923 C3 90 98         jp Movimiento
 138+ 9926
 139+ 9926              Siguiente_desplazamiento
 140+ 9926
 141+ 9926              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9926              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9926
 144+ 9926 21 9B 89         ld hl,Ctrl_2
 145+ 9929 CB 96            res 2,(hl)
 146+ 992B
 147+ 992B 2A AB 89         ld hl,(Puntero_mov)
 148+ 992E 23               inc hl
 149+ 992F 23               inc hl
 150+ 9930 22 AB 89         ld (Puntero_mov),hl
 151+ 9933
 152+ 9933 7E               ld a,(hl)
 153+ 9934 A7               and a
 154+ 9935 CC B7 99         call z,Incrementa_Puntero_indice_mov
 155+ 9938 CA F9 98         jp z,Reinicia_el_movimiento
 156+ 993B
 157+ 993B C9               ret
 158+ 993C
 159+ 993C              ; Subrutinas -----------------------------------------
 160+ 993C              ; ---------- --------- --------- ---------- ----------
 161+ 993C              ;
 162+ 993C              ;   24/07/23
 163+ 993C              ;
 164+ 993C              ;   Fijamos_bucle
 165+ 993C              ;
 166+ 993C              ;
 167+ 993C
 168+ 993C              Fijamos_bucle
 169+ 993C
 170+ 993C 3A AF 89         ld a,(Incrementa_puntero)
 171+ 993F 3C               inc a
 172+ 9940 32 B0 89         ld (Incrementa_puntero_backup),a
 173+ 9943
 174+ 9943 CD B7 99         call Incrementa_Puntero_indice_mov
 175+ 9946 2A A9 89         ld hl,(Puntero_indice_mov)
 176+ 9949 22 AD 89         ld (Puntero_indice_mov_bucle),hl
 177+ 994C C9               ret
 178+ 994D
 179+ 994D              ; ---------- --------- --------- ---------- ----------
 180+ 994D              ;
 181+ 994D              ;   07/7/23
 182+ 994D              ;
 183+ 994D              ;   Inicia_Repetimos_movimiento
 184+ 994D              ;
 185+ 994D              ;
 186+ 994D
 187+ 994D              Inicia_Repetimos_movimiento
 188+ 994D
 189+ 994D              ; Iniciamos (Repetimos_movimiento).
 190+ 994D
 191+ 994D DD 2A AB 89      ld ix,(Puntero_mov)
 192+ 9951 DD 7E 02         ld a,(ix+2)
 193+ 9954 32 B3 89         ld (Repetimos_movimiento),a
 194+ 9957
 195+ 9957 C9               ret
 196+ 9958
 197+ 9958              ; ---------- --------- --------- ---------- ----------
 198+ 9958              ;
 199+ 9958              ;   26/6/23
 200+ 9958              ;
 201+ 9958              ;   Inicia_Puntero_mov
 202+ 9958              ;
 203+ 9958              ;
 204+ 9958
 205+ 9958 2A A9 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 995B CD 5F 8C         call Extrae_address
 207+ 995E 22 AB 89         ld (Puntero_mov),hl
 208+ 9961 C9               ret
 209+ 9962
 210+ 9962              ; ---------- --------- --------- ---------- ----------
 211+ 9962              ;
 212+ 9962              ;   27/06/23
 213+ 9962              ;
 214+ 9962              ;   Aplica_movimiento.
 215+ 9962
 216+ 9962              Aplica_desplazamiento
 217+ 9962
 218+ 9962              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9962
 220+ 9962 2A AB 89         ld hl, (Puntero_mov)
 221+ 9965
 222+ 9965 7E               ld a,(hl)
 223+ 9966 E6 F0            and $f0
 224+ 9968 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9969
 226+ 9969 CB 7E            bit 7,(hl)
 227+ 996B 28 03            jr z,1F
 228+ 996D CD 77 95         call Mov_up
 229+ 9970 2A AB 89     1 ld hl, (Puntero_mov)
 230+ 9973 CB 76            bit 6,(hl)
 231+ 9975 28 03            jr z,2F
 232+ 9977 CD 3E 95         call Mov_down
 233+ 997A
 234+ 997A              ; Se ha aplicado reinicio ???
 235+ 997A              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 997A
 237+ 997A              ;    ld a,(Ctrl_3)
 238+ 997A              ;    bit 1,a
 239+ 997A              ;    ret nz
 240+ 997A
 241+ 997A 2A AB 89     2 ld hl, (Puntero_mov)
 242+ 997D CB 6E            bit 5,(hl)
 243+ 997F 28 03            jr z,3F
 244+ 9981 CD DD 96         call Mov_left
 245+ 9984 2A AB 89     3 ld hl, (Puntero_mov)
 246+ 9987 CB 66            bit 4,(hl)
 247+ 9989 C8               ret z
 248+ 998A CD BA 95         call Mov_right
 249+ 998D C9               ret
 250+ 998E
 251+ 998E              ; ---------- --------- --------- ---------- ----------
 252+ 998E              ;
 253+ 998E              ;   26/06/23
 254+ 998E              ;
 255+ 998E              ;   Ajusta_velocidad_desplazamiento.
 256+ 998E
 257+ 998E              Ajusta_velocidad_desplazamiento
 258+ 998E
 259+ 998E              ; 1er byte de la cadena de movimiento.
 260+ 998E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 998E
 262+ 998E CD AC 99         call Extrae_nibble_alto
 263+ 9991
 264+ 9991 32 9F 89         ld (Vel_up),a
 265+ 9994 79               ld a,c
 266+ 9995 E6 0F            and $0f
 267+ 9997 32 A0 89         ld (Vel_down),a
 268+ 999A
 269+ 999A              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 999A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 999A
 272+ 999A 23               inc hl
 273+ 999B CD AC 99         call Extrae_nibble_alto
 274+ 999E
 275+ 999E 32 9D 89         ld (Vel_left),a
 276+ 99A1 79               ld a,c
 277+ 99A2 E6 0F            and $0f
 278+ 99A4 32 9E 89         ld (Vel_right),a
 279+ 99A7
 280+ 99A7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99A7
 282+ 99A7 23               inc hl
 283+ 99A8 22 AB 89         ld (Puntero_mov),hl
 284+ 99AB C9               ret
 285+ 99AC
 286+ 99AC 06 04        Extrae_nibble_alto ld b,4
 287+ 99AE 7E               ld a,(hl)
 288+ 99AF 4F               ld c,a
 289+ 99B0 E6 F0            and $f0
 290+ 99B2 CB 3F        1 srl a
 291+ 99B4 10 FC            djnz 1B
 292+ 99B6 C9               ret
 293+ 99B7
 294+ 99B7              ; ---------- --------- --------- ---------- ----------
 295+ 99B7              ;
 296+ 99B7              ;   5/7/23
 297+ 99B7              ;
 298+ 99B7              ;   Incrementa_Puntero_indice_mov
 299+ 99B7
 300+ 99B7              Incrementa_Puntero_indice_mov
 301+ 99B7
 302+ 99B7 21 AF 89         ld hl,Incrementa_puntero
 303+ 99BA 34               inc (hl)
 304+ 99BB
 305+ 99BB 2A A9 89         ld hl,(Puntero_indice_mov)
 306+ 99BE 01 02 00         ld bc,2
 307+ 99C1 A7               and a
 308+ 99C2 09               add hl,bc
 309+ 99C3 22 A9 89         ld (Puntero_indice_mov),hl
 310+ 99C6
 311+ 99C6 7E               ld a,(hl)
 312+ 99C7 A7               and a
 313+ 99C8
 314+ 99C8              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99C8
 316+ 99C8              ;    jr z,$
 317+ 99C8
 318+ 99C8              ;! Reinicia el Patrón de movimiento.
 319+ 99C8
 320+ 99C8 CC CD 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99CB
 322+ 99CB AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99CC
 324+ 99CC C9               ret
 325+ 99CD
 326+ 99CD              ; ---------- --------- --------- ---------- ----------
 327+ 99CD              ;
 328+ 99CD              ;   15/01/24
 329+ 99CD              ;
 330+ 99CD              ;   Inicializa_Puntero_indice_mov
 331+ 99CD
 332+ 99CD              Inicializa_Puntero_indice_mov_2
 333+ 99CD
 334+ 99CD              ; Existe etiqueta de bucle principal???
 335+ 99CD
 336+ 99CD 2A AD 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99D0 24               inc h
 338+ 99D1 25               dec h
 339+ 99D2 28 05            jr z,2F
 340+ 99D4
 341+ 99D4 22 A9 89         ld (Puntero_indice_mov),hl
 342+ 99D7 18 14            jr 3F
 343+ 99D9
 344+ 99D9              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99D9
 346+ 99D9 3A AF 89     2 ld a,(Incrementa_puntero)
 347+ 99DC 47               ld b,a
 348+ 99DD
 349+ 99DD 2A A9 89         ld hl,(Puntero_indice_mov)
 350+ 99E0 2B           1 dec hl
 351+ 99E1 2B               dec hl
 352+ 99E2 10 FC            djnz 1B
 353+ 99E4 22 A9 89         ld (Puntero_indice_mov),hl
 354+ 99E7
 355+ 99E7 AF               xor a
 356+ 99E8 32 AF 89         ld (Incrementa_puntero),a
 357+ 99EB 18 06            jr 4F
 358+ 99ED
 359+ 99ED 3A B0 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99F0 32 AF 89         ld (Incrementa_puntero),a
 361+ 99F3 C9           4 ret
 362+ 99F4
 363+ 99F4              ; ----------------------------------------------------------------------
 364+ 99F4              ;
 365+ 99F4              ;   30/01/24
 366+ 99F4              ;
 367+ 99F4              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99F4
 369+ 99F4 3A 79 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99F7 CD 5F 9B         call Calcula_salto_en_BC
 371+ 99FA 21 A1 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99FD A7               and a
 373+ 99FE ED 4A            adc hl,bc
 374+ 9A00 C9               ret
 375+ 9A01
 376+ 9A01              ; ----------------------------------------------------------------------
 377+ 9A01              ;
 378+ 9A01              ;   30/01/24
 379+ 9A01              ;
 380+ 9A01              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A01              ;
 382+ 9A01              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A01
 384+ 9A01 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A02 23               inc hl
 386+ 9A03 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A04 69               ld l,c
 388+ 9A05 60               ld h,b
 389+ 9A06 22 94 89         ld (Contador_de_mov_masticados),hl
 390+ 9A09 C9               ret
 391+ 9A0A
# file closed: Movimiento.asm
1893  9A0A              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9A0A              ;---------------------------------------------------------------------------------------------------------------
   2+ 9A0A              ;
   3+ 9A0A              ;   8/3/24
   4+ 9A0A              ;
   5+ 9A0A              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9A0A              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9A0A              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9A0A              ;	_ de la 1ª entidad del Nivel.
   9+ 9A0A              ;
  10+ 9A0A              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9A0A
  12+ 9A0A              ;	MODIFICA: HL,DE y A.
  13+ 9A0A              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9A0A
  15+ 9A0A              Inicializa_Nivel
  16+ 9A0A
  17+ 9A0A 2A E3 89     	ld hl,(Puntero_indice_NIVELES)
  18+ 9A0D CD 5F 8C     	call Extrae_address
  19+ 9A10 7E           	ld a,(hl)
  20+ 9A11 32 BE 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9A14 23           	inc hl
  22+ 9A15 CD 22 9A     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9A18 22 E5 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9A1B CD 2B 9A     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9A1E
  26+ 9A1E CD 3C 9A     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9A21 C9           	ret
  28+ 9A22
  29+ 9A22              ; ----------------------
  30+ 9A22
  31+ 9A22 11 9D 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9A25 01 04 00     	ld bc,4
  33+ 9A28 ED B0        	ldir
  34+ 9A2A C9           	ret
  35+ 9A2B
  36+ 9A2B 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9A2C CD 5F 9B         call Calcula_salto_en_BC
  38+ 9A2F 21 74 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9A32 A7               and a
  40+ 9A33 ED 4A            adc hl,bc
  41+ 9A35 CD 5F 8C         call Extrae_address
  42+ 9A38 22 A9 89         ld (Puntero_indice_mov),hl
  43+ 9A3B C9               ret
  44+ 9A3C
  45+ 9A3C 3A 79 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 9A3F CD 5F 9B     	call Calcula_salto_en_BC
  47+ 9A42 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9A45 A7               and a
  49+ 9A46 ED 4A            adc hl,bc
  50+ 9A48 CD 5F 8C         call Extrae_address
  51+ 9A4B 22 92 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 9A4E C9           	ret
  53+ 9A4F
  54+ 9A4F              ;---------------------------------------------------------------------------------------------------------------
  55+ 9A4F              ;
  56+ 9A4F              ;   5/1/24
  57+ 9A4F              ;
  58+ 9A4F              ;	Destruye A,BC,HL,DE
  59+ 9A4F
  60+ 9A4F              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 9A4F              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 9A4F
  63+ 9A4F              Inicia_Entidades
  64+ 9A4F
  65+ 9A4F              ; Preparamos los punteros de las cajas de entidades:
  66+ 9A4F
  67+ 9A4F CD 49 8C     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 9A52              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 9A52 CD C3 9B     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 9A55
  71+ 9A55 2A E5 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 9A58
  73+ 9A58 22 E5 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 9A5B
  75+ 9A5B CD 0D 9B     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 9A5E
  77+ 9A5E 2A E5 89     	ld hl,(Datos_de_nivel)
  78+ 9A61
  79+ 9A61              ; En este punto:
  80+ 9A61              ;
  81+ 9A61              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 9A61              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 9A61
  84+ 9A61 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 9A62
  86+ 9A62 7E           	ld a,(hl)
  87+ 9A63 CD AA 9A     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 9A66
  89+ 9A66 CD 71 9B     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9A69
  91+ 9A69              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9A69
  93+ 9A69 CD 2F 9B     	call Busca_mov_masticados_segun_tipo
  94+ 9A6C
  95+ 9A6C A7           	and a
  96+ 9A6D 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 9A6F
  98+ 9A6F              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 9A6F
 100+ 9A6F              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 9A6F              ;	_ de este tipo de entidad.
 102+ 9A6F
 103+ 9A6F CD F4 99     	call Situa_en_contador_general_de_mov_masticados
 104+ 9A72 CD 01 9A     	call Transfiere_datos_de_contadores
 105+ 9A75
 106+ 9A75 18 06        	jr 4F
 107+ 9A77
 108+ 9A77 CD 91 8B     3 call Construye_movimientos_masticados_entidad
 109+ 9A7A
 110+ 9A7A              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9A7A              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9A7A              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9A7A              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9A7A              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9A7A
 116+ 9A7A CD ED 9A     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9A7D              ;																; _ Mov_masticados ya generados.
 118+ 9A7D
 119+ 9A7D CD E5 8B     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9A80
 121+ 9A80 DD E5        	push ix
 122+ 9A82 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9A83
 124+ 9A83 D5           	push de
 125+ 9A84 CD FE 9B     	call Genera_coordenadas
 126+ 9A87 CD F5 8A     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 127+ 9A8A D1           	pop de
 128+ 9A8B
 129+ 9A8B CD 8C 9C     	call Genera_datos_de_impresion
 130+ 9A8E              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 131+ 9A8E              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 132+ 9A8E              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 133+ 9A8E              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 134+ 9A8E
 135+ 9A8E CD C9 9A     	call Decrementa_Contador_de_mov_masticados
 136+ 9A91
 137+ 9A91              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 138+ 9A91
 139+ 9A91 CD 98 9B     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 140+ 9A94 CD BE 9A     	call Limpiamos_bandeja_DRAW
 141+ 9A97 CD C1 8C     	call Incrementa_punteros_de_cajas
 142+ 9A9A
 143+ 9A9A              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 144+ 9A9A              ; _ entidad del Nivel.
 145+ 9A9A
 146+ 9A9A 3A DC 89     	ld a,(Ctrl_4)
 147+ 9A9D E6 F0        	and $f0
 148+ 9A9F 32 DC 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 149+ 9AA2
 150+ 9AA2              ; Siguiente entidad del Nivel.
 151+ 9AA2
 152+ 9AA2 2A E5 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 153+ 9AA5 23           	inc hl 														; _ entidad del Nivel.
 154+ 9AA6
 155+ 9AA6 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 156+ 9AA7
 157+ 9AA7 10 AF        	djnz 2B
 158+ 9AA9
 159+ 9AA9 C9           	ret
 160+ 9AAA
 161+ 9AAA              ; ---------------------------------------------------------------------
 162+ 9AAA              ;
 163+ 9AAA              ;	10/02/24
 164+ 9AAA              ;
 165+ 9AAA              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 166+ 9AAA              ;
 167+ 9AAA              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 168+ 9AAA
 169+ 9AAA              Definicion_segun_tipo
 170+ 9AAA
 171+ 9AAA CD 5F 9B     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 172+ 9AAD 21 9B 87     	ld hl,Indice_de_definiciones_de_entidades
 173+ 9AB0 CD 67 9B     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 174+ 9AB3 C9           	ret
 175+ 9AB4
 176+ 9AB4              ; ---------------------------------------------------------------------
 177+ 9AB4              ;
 178+ 9AB4              ;	27/03/24
 179+ 9AB4
 180+ 9AB4
 181+ 9AB4              Store_Restore_cajas
 182+ 9AB4
 183+ 9AB4 CD 98 9B     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 184+ 9AB7 CD BE 9A     	call Limpiamos_bandeja_DRAW
 185+ 9ABA
 186+ 9ABA              ; 	Entidad_sospechosa. 20/4/23
 187+ 9ABA
 188+ 9ABA              ;	ld a,(Impacto)
 189+ 9ABA              ;	and a
 190+ 9ABA              ;	jr z,1F
 191+ 9ABA
 192+ 9ABA              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 193+ 9ABA              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 194+ 9ABA              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 195+ 9ABA              ;	adc hl,bc 											; _ "0" más adelante.
 196+ 9ABA              ;	ld (Entidad_sospechosa_de_colision),hl
 197+ 9ABA
 198+ 9ABA
 199+ 9ABA              ;1 ld hl,(Puntero_restore_caja)
 200+ 9ABA              ;	ld a,(hl)
 201+ 9ABA              ;	and a
 202+ 9ABA              ;	push af
 203+ 9ABA              ;	jr z,2F
 204+ 9ABA
 205+ 9ABA              ;	di
 206+ 9ABA              ;	ld de,Bandeja_DRAW
 207+ 9ABA              ;	ld bc,42
 208+ 9ABA              ;	ldir
 209+ 9ABA              ;	ei
 210+ 9ABA
 211+ 9ABA CD C1 8C     2 call Incrementa_punteros_de_cajas
 212+ 9ABD C9           	ret
 213+ 9ABE
 214+ 9ABE              ; ---------------------------------------------------------------------
 215+ 9ABE              ;
 216+ 9ABE              ;	26/03/24
 217+ 9ABE
 218+ 9ABE 21 79 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 219+ 9AC1 06 24        	ld b,36
 220+ 9AC3 AF           	xor a
 221+ 9AC4 77           1 ld (hl),a
 222+ 9AC5 23           	inc hl
 223+ 9AC6 10 FC        	djnz 1B
 224+ 9AC8 C9           	ret
 225+ 9AC9
 226+ 9AC9              ; ---------------------------------------------------------------------
 227+ 9AC9              ;
 228+ 9AC9              ;	24/03/24
 229+ 9AC9
 230+ 9AC9 2A 94 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 231+ 9ACC 2B           	dec hl
 232+ 9ACD 22 94 89     	ld (Contador_de_mov_masticados),hl
 233+ 9AD0 C9           	ret
 234+ 9AD1
 235+ 9AD1              ; ---------------------------------------------------------------------
 236+ 9AD1              ;
 237+ 9AD1              ;	10/2/24
 238+ 9AD1
 239+ 9AD1              Reinicia_entidad_maliciosa
 240+ 9AD1
 241+ 9AD1              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 242+ 9AD1
 243+ 9AD1 CD F4 99     	call Situa_en_contador_general_de_mov_masticados
 244+ 9AD4 CD 01 9A     	call Transfiere_datos_de_contadores
 245+ 9AD7
 246+ 9AD7              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 247+ 9AD7
 248+ 9AD7 3A 79 89     	ld a,(Tipo)
 249+ 9ADA CD AA 9A     	call Definicion_segun_tipo
 250+ 9ADD
 251+ 9ADD E5           	push hl
 252+ 9ADE DD E1        	pop ix
 253+ 9AE0
 254+ 9AE0 DD 6E 0B     	ld l,(ix+11)
 255+ 9AE3 DD 66 0C     	ld h,(ix+12)
 256+ 9AE6
 257+ 9AE6 22 92 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 258+ 9AE9
 259+ 9AE9 CD E5 8B     	call Cargamos_registros_con_mov_masticado
 260+ 9AEC
 261+ 9AEC C9           	ret
 262+ 9AED
 263+ 9AED              ; ---------------------------------------------------------------------
 264+ 9AED              ;
 265+ 9AED              ;	22/01/24
 266+ 9AED
 267+ 9AED 21 DC 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 268+ 9AF0 CB 46        	bit 0,(hl)
 269+ 9AF2 20 0D        	jr nz,1F
 270+ 9AF4 CB 4E        	bit 1,(hl)
 271+ 9AF6 20 0C        	jr nz,2F
 272+ 9AF8 CB 56        	bit 2,(hl)
 273+ 9AFA 20 0B        	jr nz,3F
 274+ 9AFC CB 5E        	bit 3,(hl)
 275+ 9AFE 20 0A        	jr nz,4F
 276+ 9B00 C9           	ret
 277+ 9B01
 278+ 9B01 CB E6        1 set 4,(hl)
 279+ 9B03 C9           	ret
 280+ 9B04 CB EE        2 set 5,(hl)
 281+ 9B06 C9           	ret
 282+ 9B07 CB F6        3 set 6,(hl)
 283+ 9B09 C9           	ret
 284+ 9B0A CB FE        4 set 7,(hl)
 285+ 9B0C C9           	ret
 286+ 9B0D
 287+ 9B0D              ; ---------------------------------------------------------------------
 288+ 9B0D              ;
 289+ 9B0D              ;	23/01/24
 290+ 9B0D              ;
 291+ 9B0D              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 292+ 9B0D              ;
 293+ 9B0D              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 294+ 9B0D              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 295+ 9B0D              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 296+ 9B0D              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 297+ 9B0D
 298+ 9B0D              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 299+ 9B0D
 300+ 9B0D 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 301+ 9B0E 3D           	dec a
 302+ 9B0F 20 06        	jr nz,1F
 303+ 9B11
 304+ 9B11              ; --- Tipo_1
 305+ 9B11
 306+ 9B11 21 DC 89     	ld hl,Ctrl_4
 307+ 9B14 CB C6        	set 0,(hl)
 308+ 9B16 C9           	ret
 309+ 9B17
 310+ 9B17 3D           1 dec a
 311+ 9B18 20 06        	jr nz,2F
 312+ 9B1A
 313+ 9B1A              ; --- Tipo_2
 314+ 9B1A
 315+ 9B1A 21 DC 89     	ld hl,Ctrl_4
 316+ 9B1D CB CE        	set 1,(hl)
 317+ 9B1F C9           	ret
 318+ 9B20
 319+ 9B20 3D           2 dec a
 320+ 9B21 20 06        	jr nz,3F
 321+ 9B23
 322+ 9B23              ; --- Tipo_3
 323+ 9B23
 324+ 9B23 21 DC 89     	ld hl,Ctrl_4
 325+ 9B26 CB D6        	set 2,(hl)
 326+ 9B28 C9           	ret
 327+ 9B29
 328+ 9B29              ; --- Tipo_3
 329+ 9B29
 330+ 9B29 21 DC 89     3 ld hl,Ctrl_4
 331+ 9B2C CB D6        	set 2,(hl)
 332+ 9B2E C9           	ret
 333+ 9B2F
 334+ 9B2F              ; ---------------------------------------------------------------------
 335+ 9B2F              ;
 336+ 9B2F              ;	22/01/24
 337+ 9B2F
 338+ 9B2F 21 DC 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 339+ 9B32 CB 46        	bit 0,(hl)
 340+ 9B34 20 0E        	jr nz,1F
 341+ 9B36
 342+ 9B36 CB 4E        	bit 1,(hl)
 343+ 9B38 20 10        	jr nz,2F
 344+ 9B3A
 345+ 9B3A CB 56        	bit 2,(hl)
 346+ 9B3C 20 12        	jr nz,3F
 347+ 9B3E
 348+ 9B3E CB 5E        	bit 3,(hl)
 349+ 9B40 20 14        	jr nz,4F
 350+ 9B42 18 19        	jr 6F
 351+ 9B44
 352+ 9B44              ; Entidad_de_Tipo_1.
 353+ 9B44
 354+ 9B44 CB 66        1 bit 4,(hl)
 355+ 9B46 28 15        	jr z,6F
 356+ 9B48 18 10        	jr 5F
 357+ 9B4A
 358+ 9B4A              ; Entidad_de_Tipo_2.
 359+ 9B4A
 360+ 9B4A CB 6E        2 bit 5,(hl)
 361+ 9B4C 28 0F        	jr z,6F
 362+ 9B4E 18 0A        	jr 5F
 363+ 9B50
 364+ 9B50              ; Entidad_de_Tipo_3.
 365+ 9B50
 366+ 9B50 CB 76        3 bit 6,(hl)
 367+ 9B52 28 09        	jr z,6F
 368+ 9B54 18 04        	jr 5F
 369+ 9B56
 370+ 9B56              ; Entidad_de_Tipo_4.
 371+ 9B56
 372+ 9B56 CB 7E        4 bit 7,(hl)
 373+ 9B58 28 03        	jr z,6F
 374+ 9B5A
 375+ 9B5A              ; Esta entidad TIENE MOV_MASTICADOS.
 376+ 9B5A
 377+ 9B5A AF           5 xor a
 378+ 9B5B 3C           	inc a
 379+ 9B5C C9           	ret
 380+ 9B5D
 381+ 9B5D              ; Esta entidad NO TIENE MOV_MASTICADOS.
 382+ 9B5D
 383+ 9B5D AF           6 xor a
 384+ 9B5E C9           	ret
 385+ 9B5F
 386+ 9B5F              ;	------------------------------------------------------------------------------------
 387+ 9B5F              ;
 388+ 9B5F              ;	12/01/24
 389+ 9B5F              ;
 390+ 9B5F              ;	INPUTS:	A contiene el (Tipo) de entidad.
 391+ 9B5F              ;
 392+ 9B5F              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 393+ 9B5F              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 394+ 9B5F
 395+ 9B5F CB 27        Calcula_salto_en_BC sla a
 396+ 9B61 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 397+ 9B63 4F           	ld c,a
 398+ 9B64 06 00        	ld b,0
 399+ 9B66 C9           	ret
 400+ 9B67
 401+ 9B67              ; ------------------------------------------------------------------
 402+ 9B67              ;
 403+ 9B67              ;	19/1/24
 404+ 9B67              ;
 405+ 9B67              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 406+ 9B67              ;	Actualiza (Datos_de_entidad) con esa dirección.
 407+ 9B67
 408+ 9B67 A7           Situa_en_datos_de_definicion and a
 409+ 9B68 ED 4A        	adc hl,bc
 410+ 9B6A CD 5F 8C     	call Extrae_address
 411+ 9B6D 22 C4 89         ld (Datos_de_entidad),hl
 412+ 9B70 C9           	ret
 413+ 9B71
 414+ 9B71              ; ------------------------------------------------------------------
 415+ 9B71
 416+ 9B71              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 417+ 9B71              ; 	inc de
 418+ 9B71              ; 	inc de
 419+ 9B71              ; 	ex de,hl
 420+ 9B71              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 421+ 9B71              ; 	ret
 422+ 9B71
 423+ 9B71              ; ----------------------------------------------------------------------------------------------------------
 424+ 9B71              ;
 425+ 9B71              ;	31/1/24
 426+ 9B71              ;
 427+ 9B71              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 428+ 9B71              ;	_ de entidad.
 429+ 9B71              ;
 430+ 9B71              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 431+ 9B71              ;
 432+ 9B71              ;
 433+ 9B71              ;	MODIFICA: HL,DE y BC
 434+ 9B71
 435+ 9B71
 436+ 9B71              Definicion_de_entidad_a_bandeja_DRAW
 437+ 9B71
 438+ 9B71 11 79 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 439+ 9B74 01 03 00     	ld bc,3
 440+ 9B77 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 441+ 9B79              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 442+ 9B79 11 83 89     	ld de,Attr									; DE en (Attr).
 443+ 9B7C 01 05 00     	ld bc,5
 444+ 9B7F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 445+ 9B81              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 446+ 9B81 11 8C 89     	ld de,Posicion_inicio
 447+ 9B84 01 03 00     	ld bc,3
 448+ 9B87 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 449+ 9B89              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 450+ 9B89 11 92 89     	ld de,Puntero_de_almacen_de_mov_masticados
 451+ 9B8C 01 02 00     	ld bc,2
 452+ 9B8F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 453+ 9B91
 454+ 9B91 11 9C 89     	ld de,Frames_explosion
 455+ 9B94 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 456+ 9B96 12           	ld (de),a 									; Vuelco (Frames_explosion).
 457+ 9B97
 458+ 9B97 C9           	ret
 459+ 9B98
 460+ 9B98              ; ----------------------------------------------------------------------------------------------------------
 461+ 9B98              ;
 462+ 9B98              ;	22/01/24
 463+ 9B98              ;
 464+ 9B98              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 465+ 9B98              ;
 466+ 9B98              ;	Las cajas contienen entidades iniciadas:
 467+ 9B98              ;
 468+ 9B98              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 469+ 9B98              ;
 470+ 9B98              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 471+ 9B98              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 472+ 9B98              ;
 473+ 9B98              ;	MODIFICA: HL,DE y BC
 474+ 9B98
 475+ 9B98              Parametros_de_bandeja_DRAW_a_caja
 476+ 9B98
 477+ 9B98 21 79 89     	ld hl,Bandeja_DRAW
 478+ 9B9B ED 5B B8 89  	ld de,(Puntero_store_caja)
 479+ 9B9F 7E           	ld a,(hl)
 480+ 9BA0 12           	ld (de),a
 481+ 9BA1 13           	inc de 													; (Tipo).
 482+ 9BA2
 483+ 9BA2 21 80 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 484+ 9BA5 01 02 00     	ld bc,2
 485+ 9BA8 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 486+ 9BAA              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 487+ 9BAA 23           	inc hl
 488+ 9BAB 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 489+ 9BAC 12           	ld (de),a
 490+ 9BAD 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 491+ 9BAE
 492+ 9BAE 21 8F 89     	ld hl,Impacto
 493+ 9BB1 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 494+ 9BB2 12           	ld (de),a
 495+ 9BB3 13           	inc de 													; (Impacto), volcado a la caja.
 496+ 9BB4
 497+ 9BB4 21 90 89     	ld hl,Puntero_de_impresion								; DE situado ahora en (Puntero_de_impresión).
 498+ 9BB7 01 07 00     	ld bc,7
 499+ 9BBA ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 500+ 9BBC              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 501+ 9BBC              ;															; HL apunta ahora a (Columnas).
 502+ 9BBC 21 9B 89     	ld hl,Ctrl_2
 503+ 9BBF 7E           	ld a,(hl)
 504+ 9BC0 12           	ld (de),a 												; Volcamos (Ctrl_2).
 505+ 9BC1 13           	inc de
 506+ 9BC2
 507+ 9BC2 C9           	ret
 508+ 9BC3
 509+ 9BC3              ;---------------------------------------------------------------------------------------------------------------
 510+ 9BC3              ;
 511+ 9BC3              ;	5/1/24
 512+ 9BC3              ;
 513+ 9BC3              ;	INICIALIZA (Numero_parcial_de_entidades).
 514+ 9BC3              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 515+ 9BC3              ;
 516+ 9BC3              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 517+ 9BC3              ;
 518+ 9BC3              ;	(Numero_parcial_de_entidades)="7".
 519+ 9BC3              ;
 520+ 9BC3              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 521+ 9BC3              ;
 522+ 9BC3              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 523+ 9BC3              ;
 524+ 9BC3              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 525+ 9BC3              ;	MODIFICA: A y B.
 526+ 9BC3              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 527+ 9BC3
 528+ 9BC3              Inicializa_Numero_parcial_de_entidades
 529+ 9BC3
 530+ 9BC3              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 531+ 9BC3
 532+ 9BC3 3A BE 89     	ld a,(Numero_de_entidades)
 533+ 9BC6 A7           	and a
 534+ 9BC7
 535+ 9BC7              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 536+ 9BC7              ;	jr z,$
 537+ 9BC7              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 538+ 9BC7
 539+ 9BC7 20 03        	jr nz,3F
 540+ 9BC9
 541+ 9BC9              ; ---------- ---------- ----------
 542+ 9BC9
 543+ 9BC9              ;! RESET para pruebas. Omitir esta línea en modo normal.
 544+ 9BC9              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 545+ 9BC9
 546+ 9BC9 CD 0A 9A     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 547+ 9BCC
 548+ 9BCC              ; ---------- ---------- ----------
 549+ 9BCC
 550+ 9BCC 3A BE 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 551+ 9BCF FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 552+ 9BD1 38 08        	jr c,1F
 553+ 9BD3
 554+ 9BD3              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 555+ 9BD3              ; Actualizamos variables.
 556+ 9BD3
 557+ 9BD3 3E 07        	ld a,7
 558+ 9BD5 32 BF 89     	ld (Numero_parcial_de_entidades),a
 559+ 9BD8 47           	ld b,a
 560+ 9BD9 18 04        	jr 2F
 561+ 9BDB
 562+ 9BDB              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 563+ 9BDB              ; (Numero_de_entidades)="0".
 564+ 9BDB
 565+ 9BDB 32 BF 89     1 ld (Numero_parcial_de_entidades),a
 566+ 9BDE 47           	ld b,a
 567+ 9BDF C9           2 ret
 568+ 9BE0
# file closed: Rutinas_de_inicio_y_niveles.asm
1894  9BE0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9BE0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9BE0              ;
   3+ 9BE0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9BE0              ;
   5+ 9BE0              ; *****************************************************************************************************************************************************************************************
   6+ 9BE0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9BE0
   8+ 9BE0 7C           calcula_tercio ld a,h
   9+ 9BE1 E6 18        	and $18
  10+ 9BE3 CB 2F        	sra a
  11+ 9BE5 CB 2F        	sra a
  12+ 9BE7 CB 2F        	sra a
  13+ 9BE9 C9           	ret
  14+ 9BEA
# file closed: calcula_tercio.asm
1895  9BEA              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9BEA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9BEA              ;
   3+ 9BEA              ;
   4+ 9BEA              ;	CLS.
   5+ 9BEA              ;
   6+ 9BEA              ;	Limpia la pantalla y define sus atributos.
   7+ 9BEA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9BEA              ;
   9+ 9BEA              ;	COLORES: 0 ..... NEGRO
  10+ 9BEA              ;    		 1 ..... AZUL
  11+ 9BEA              ; 			 2 ..... ROJO
  12+ 9BEA              ;			 3 ..... MAGENTA
  13+ 9BEA              ; 			 4 ..... VERDE
  14+ 9BEA              ; 			 5 ..... CIAN
  15+ 9BEA              ;			 6 ..... AMARILLO
  16+ 9BEA              ; 			 7 ..... BLANCO
  17+ 9BEA              ;
  18+ 9BEA              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9BEA              ;
  20+ 9BEA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9BEA
  22+ 9BEA
  23+ 9BEA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9BED 11 01 40     	LD DE,$4001
  25+ 9BF0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9BF3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9BF5 ED B0        	LDIR
  28+ 9BF7 01 FF 02     	LD BC,767
  29+ 9BFA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9BFB ED B0        	LDIR
  31+ 9BFD C9           	ret
  32+ 9BFE
# file closed: Cls.asm
1896  9BFE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9BFE              ; ------------------------------------------------------------------------
   2+ 9BFE              ;
   3+ 9BFE              ;	30/1/24
   4+ 9BFE              ;
   5+ 9BFE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9BFE              ;	Fila superior "0", Columna izquierda "0".
   7+ 9BFE              ;
   8+ 9BFE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9BFE              ;
  10+ 9BFE              ;	Modifica: A,BC y DE.
  11+ 9BFE
  12+ 9BFE 7D           Genera_coordenadas ld a,l
  13+ 9BFF E6 1F        	and $1f
  14+ 9C01 32 80 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9C04
  16+ 9C04 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9C05 FE 40        	cp $40
  18+ 9C07 38 1C        	jr c,4F
  19+ 9C09
  20+ 9C09 CD E0 9B     	call calcula_tercio
  21+ 9C0C 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9C0D
  23+ 9C0D 1E 00        	ld e,0
  24+ 9C0F 7D           	ld a,l
  25+ 9C10 E6 E0        	and $e0
  26+ 9C12 28 01        	jr z,1F
  27+ 9C14 04           	inc b
  28+ 9C15
  29+ 9C15 04           1 inc b
  30+ 9C16 05           	dec b
  31+ 9C17 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9C19              ;														; _ , salimos.
  33+ 9C19 1C           3 inc e
  34+ 9C1A D6 20        	sub 32
  35+ 9C1C 20 FB        	jr nz,3B
  36+ 9C1E 10 F5        	djnz 1B
  37+ 9C20
  38+ 9C20 7B           2 ld a,e
  39+ 9C21 32 81 89     	ld (Coordenada_y),a
  40+ 9C24 C9           	ret
  41+ 9C25
  42+ 9C25 AF           4 xor a
  43+ 9C26 32 81 89     	ld (Coordenada_y),a
  44+ 9C29 C9           	ret
  45+ 9C2A
  46+ 9C2A              ; ------------------------------------------------------------------------
  47+ 9C2A              ;	28/05/23
  48+ 9C2A              ;
  49+ 9C2A              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9C2A              ;	Fila superior "0", Columna izquierda "0".
  51+ 9C2A              ;
  52+ 9C2A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9C2A              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9C2A              ;
  55+ 9C2A              ;		DE="$120d"
  56+ 9C2A              ;
  57+ 9C2A              ;		D, (Coordenada_X), Columnas, $12
  58+ 9C2A              ;		E, (Coordenada_y), Filas, $0d
  59+ 9C2A              ;
  60+ 9C2A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9C2A
  62+ 9C2A              ;	Modifica: A,BC y DE.
  63+ 9C2A
  64+ 9C2A
  65+ 9C2A              Genera_coordenadas_disparo
  66+ 9C2A
  67+ 9C2A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9C2A
  69+ 9C2A 7D           	ld a,l
  70+ 9C2B E6 1F        	and $1f
  71+ 9C2D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9C2E CD E0 9B     	call calcula_tercio
  73+ 9C31 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9C32 1E 00        	ld e,0
  75+ 9C34 7D           	ld a,l
  76+ 9C35 E6 E0        	and $e0
  77+ 9C37 28 01        	jr z,1F
  78+ 9C39 04           	inc b
  79+ 9C3A 1C           1 inc e
  80+ 9C3B D6 20        	sub 32
  81+ 9C3D 20 FB        	jr nz,1B
  82+ 9C3F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9C41 C9           	ret
  84+ 9C42
# file closed: Genera_coordenadas.asm
1897  9C42              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C42              ; Relojes y temporizaciones.
   2+ 9C42
   3+ 9C42              ; ------------------------------------------------------
   4+ 9C42              ;
   5+ 9C42              ;	16/7/23
   6+ 9C42              ;
   7+ 9C42              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C42              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C42              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C42              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C42              ;
  12+ 9C42              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C42              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C42
  15+ 9C42              ; Disparo_entidad db 1
  16+ 9C42              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C42              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C42
  19+ 9C42              Habilita_disparos
  20+ 9C42
  21+ 9C42 7E           	ld a,(hl)
  22+ 9C43 A7           	and a
  23+ 9C44 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C45
  25+ 9C45 EB           	ex de,hl
  26+ 9C46
  27+ 9C46 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C47 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C48
  30+ 9C48              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C48
  32+ 9C48 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C49 7E           	ld a,(hl)
  34+ 9C4A 23           	inc hl
  35+ 9C4B 77           	ld (hl),a
  36+ 9C4C
  37+ 9C4C EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C4D 3E 01        	ld a,1
  39+ 9C4F 77           	ld (hl),a
  40+ 9C50 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1898  9C51              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9C51              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9C51              ;
   3+ 9C51              ;   16/0424
   4+ 9C51              ;
   5+ 9C51
   6+ 9C51 3A DB 89     Imprime_pantalla ld a,(Ctrl_3)
   7+ 9C54 CB 47            bit 0,a
   8+ 9C56 28 2C            jr z,1F                                                 ; No pintamos si el FRAME no se ha completado.
   9+ 9C58 CB 57            bit 2,a
  10+ 9C5A 28 28            jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  11+ 9C5C
  12+ 9C5C 2A D5 89     Borrando ld hl,(Scanlines_album_SP)
  13+ 9C5F CD 5F 8C         call Extrae_address
  14+ 9C62 24               inc h
  15+ 9C63 25               dec h
  16+ 9C64 28 05            jr z,Pintando
  17+ 9C66 CD 19 91         call Pinta_Sprites
  18+ 9C69 18 F1            jr Borrando
  19+ 9C6B
  20+ 9C6B 2A D7 89     Pintando ld hl,(India_SP)
  21+ 9C6E 2C               inc l
  22+ 9C6F CD 5F 8C         call Extrae_address
  23+ 9C72 24               inc h
  24+ 9C73 25               dec h
  25+ 9C74 28 0E            jr z,1F
  26+ 9C76 1C               inc e
  27+ 9C77 1C               inc e
  28+ 9C78 ED 53 D7 89      ld (India_SP),de
  29+ 9C7C CD 5F 8C         call Extrae_address
  30+ 9C7F CD 19 91         call Pinta_Sprites
  31+ 9C82 18 E7            jr Pintando
  32+ 9C84
  33+ 9C84 21 DB 89     1 ld hl,Ctrl_3
  34+ 9C87 CB 86            res 0,(hl)                                          ; Reinicia el flag de FRAME completo.
  35+ 9C89 CB 96            res 2,(hl)
  36+ 9C8B
  37+ 9C8B C9               ret
  38+ 9C8C
  39+ 9C8C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  40+ 9C8C              ;
  41+ 9C8C              ;	11/03/24
  42+ 9C8C              ;
  43+ 9C8C              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
  44+ 9C8C              ;   DE contiene Puntero_objeto.
  45+ 9C8C              ;   IX contiene el Puntero de impresión.
  46+ 9C8C
  47+ 9C8C              Genera_datos_de_impresion
  48+ 9C8C
  49+ 9C8C ED 73 C6 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  50+ 9C90 31 92 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  51+ 9C93 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  52+ 9C95
  53+ 9C95 2A D5 89         ld hl,(Scanlines_album_SP)
  54+ 9C98
  55+ 9C98 3E 05            ld a,5
  56+ 9C9A 85               add l
  57+ 9C9B 6F               ld l,a
  58+ 9C9C
  59+ 9C9C F9               ld sp,hl
  60+ 9C9D 22 D5 89         ld (Scanlines_album_SP),hl
  61+ 9CA0
  62+ 9CA0 21 00 00         ld hl,0
  63+ 9CA3
  64+ 9CA3 DD E5            push ix
  65+ 9CA5 3B               dec sp
  66+ 9CA6 ED 7A            adc hl,sp
  67+ 9CA8 D5               push de
  68+ 9CA9
  69+ 9CA9              ; Recuperamos SP.
  70+ 9CA9
  71+ 9CA9 ED 7B C6 89      ld sp,(Stack)
  72+ 9CAD
  73+ 9CAD E5               push hl
  74+ 9CAE F1               pop af
  75+ 9CAF 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  76+ 9CB0
  77+ 9CB0              ; Tenemos el encabezado listo.
  78+ 9CB0              ; Preparamos registros para generar los scanlines.
  79+ 9CB0
  80+ 9CB0 DD E5            push ix
  81+ 9CB2 E1               pop hl                                          ; 1er scanline en HL.
  82+ 9CB3
  83+ 9CB3 ED 5B D5 89      ld de,(Scanlines_album_SP)
  84+ 9CB7
  85+ 9CB7              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  86+ 9CB7              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  87+ 9CB7
  88+ 9CB7 7C               ld a,h
  89+ 9CB8 FE 50            cp $50
  90+ 9CBA 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  91+ 9CBC
  92+ 9CBC 20 05            jr nz,2F
  93+ 9CBE
  94+ 9CBE 7D               ld a,l
  95+ 9CBF FE E0            cp $e0
  96+ 9CC1 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  97+ 9CC3
  98+ 9CC3 7D           2 ld a,l
  99+ 9CC4 FE C0            cp $c0
 100+ 9CC6 D2 58 9D         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
 101+ 9CC9
 102+ 9CC9              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
 103+ 9CC9
 104+ 9CC9 CD F8 94         call NextScan
 105+ 9CCC EB               ex de,hl
 106+ 9CCD
 107+ 9CCD 73               ld (hl),e
 108+ 9CCE 23               inc hl
 109+ 9CCF 72               ld (hl),d
 110+ 9CD0 23               inc hl
 111+ 9CD1
 112+ 9CD1 EB               ex de,hl
 113+ 9CD2
 114+ 9CD2 CD F8 94         call NextScan
 115+ 9CD5 EB               ex de,hl
 116+ 9CD6
 117+ 9CD6 73               ld (hl),e
 118+ 9CD7 23               inc hl
 119+ 9CD8 72               ld (hl),d
 120+ 9CD9 23               inc hl
 121+ 9CDA
 122+ 9CDA EB               ex de,hl
 123+ 9CDB
 124+ 9CDB CD F8 94         call NextScan
 125+ 9CDE EB               ex de,hl
 126+ 9CDF
 127+ 9CDF 73               ld (hl),e
 128+ 9CE0 23               inc hl
 129+ 9CE1 72               ld (hl),d
 130+ 9CE2 23               inc hl
 131+ 9CE3
 132+ 9CE3 EB               ex de,hl
 133+ 9CE4
 134+ 9CE4 CD F8 94         call NextScan
 135+ 9CE7 EB               ex de,hl
 136+ 9CE8
 137+ 9CE8 73               ld (hl),e
 138+ 9CE9 23               inc hl
 139+ 9CEA 72               ld (hl),d
 140+ 9CEB 23               inc hl
 141+ 9CEC
 142+ 9CEC EB               ex de,hl
 143+ 9CED
 144+ 9CED CD F8 94         call NextScan
 145+ 9CF0 EB               ex de,hl
 146+ 9CF1
 147+ 9CF1 73               ld (hl),e
 148+ 9CF2 23               inc hl
 149+ 9CF3 72               ld (hl),d
 150+ 9CF4 23               inc hl
 151+ 9CF5
 152+ 9CF5 EB               ex de,hl
 153+ 9CF6
 154+ 9CF6 CD F8 94         call NextScan
 155+ 9CF9 EB               ex de,hl
 156+ 9CFA
 157+ 9CFA 73               ld (hl),e
 158+ 9CFB 23               inc hl
 159+ 9CFC 72               ld (hl),d
 160+ 9CFD 23               inc hl
 161+ 9CFE
 162+ 9CFE EB               ex de,hl
 163+ 9CFF
 164+ 9CFF CD F8 94         call NextScan
 165+ 9D02 EB               ex de,hl
 166+ 9D03
 167+ 9D03 73               ld (hl),e
 168+ 9D04 23               inc hl
 169+ 9D05 72               ld (hl),d
 170+ 9D06 23               inc hl
 171+ 9D07
 172+ 9D07 EB               ex de,hl
 173+ 9D08
 174+ 9D08 CD F8 94         call NextScan
 175+ 9D0B EB               ex de,hl
 176+ 9D0C
 177+ 9D0C 73               ld (hl),e
 178+ 9D0D 23               inc hl
 179+ 9D0E 72               ld (hl),d
 180+ 9D0F 23               inc hl
 181+ 9D10
 182+ 9D10 EB               ex de,hl
 183+ 9D11
 184+ 9D11 CD F8 94         call NextScan
 185+ 9D14 EB               ex de,hl
 186+ 9D15
 187+ 9D15 73               ld (hl),e
 188+ 9D16 23               inc hl
 189+ 9D17 72               ld (hl),d
 190+ 9D18 23               inc hl
 191+ 9D19
 192+ 9D19 EB               ex de,hl
 193+ 9D1A
 194+ 9D1A CD F8 94         call NextScan
 195+ 9D1D EB               ex de,hl
 196+ 9D1E
 197+ 9D1E 73               ld (hl),e
 198+ 9D1F 23               inc hl
 199+ 9D20 72               ld (hl),d
 200+ 9D21 23               inc hl
 201+ 9D22
 202+ 9D22 EB               ex de,hl
 203+ 9D23
 204+ 9D23 CD F8 94         call NextScan
 205+ 9D26 EB               ex de,hl
 206+ 9D27
 207+ 9D27 73               ld (hl),e
 208+ 9D28 23               inc hl
 209+ 9D29 72               ld (hl),d
 210+ 9D2A 23               inc hl
 211+ 9D2B
 212+ 9D2B EB               ex de,hl
 213+ 9D2C
 214+ 9D2C CD F8 94         call NextScan
 215+ 9D2F EB               ex de,hl
 216+ 9D30
 217+ 9D30 73               ld (hl),e
 218+ 9D31 23               inc hl
 219+ 9D32 72               ld (hl),d
 220+ 9D33 23               inc hl
 221+ 9D34
 222+ 9D34 EB               ex de,hl
 223+ 9D35
 224+ 9D35 CD F8 94         call NextScan
 225+ 9D38 EB               ex de,hl
 226+ 9D39
 227+ 9D39 73               ld (hl),e
 228+ 9D3A 23               inc hl
 229+ 9D3B 72               ld (hl),d
 230+ 9D3C 23               inc hl
 231+ 9D3D
 232+ 9D3D EB               ex de,hl
 233+ 9D3E
 234+ 9D3E CD F8 94         call NextScan
 235+ 9D41 EB               ex de,hl
 236+ 9D42
 237+ 9D42 73               ld (hl),e
 238+ 9D43 23               inc hl
 239+ 9D44 72               ld (hl),d
 240+ 9D45 23               inc hl
 241+ 9D46
 242+ 9D46 EB               ex de,hl
 243+ 9D47
 244+ 9D47 CD F8 94         call NextScan
 245+ 9D4A EB               ex de,hl
 246+ 9D4B
 247+ 9D4B 73               ld (hl),e
 248+ 9D4C 23               inc hl
 249+ 9D4D 72               ld (hl),d
 250+ 9D4E 23               inc hl
 251+ 9D4F
 252+ 9D4F              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 253+ 9D4F
 254+ 9D4F 22 D5 89         ld (Scanlines_album_SP),hl
 255+ 9D52
 256+ 9D52              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 257+ 9D52
 258+ 9D52 08               ex af,af
 259+ 9D53
 260+ 9D53 F5               push af
 261+ 9D54 E1               pop hl
 262+ 9D55
 263+ 9D55 36 10            ld (hl),16
 264+ 9D57
 265+ 9D57 C9               ret
 266+ 9D58
 267+ 9D58              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 268+ 9D58
 269+ 9D58              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 270+ 9D58
 271+ 9D58 3E 57            ld a,$57
 272+ 9D5A 94               sub h
 273+ 9D5B 47               ld b,a
 274+ 9D5C
 275+ 9D5C 3E DF            ld a,$df
 276+ 9D5E BD               cp l
 277+ 9D5F 38 04            jr c,1F
 278+ 9D61
 279+ 9D61 3E 08            ld a,8
 280+ 9D63 80               add b
 281+ 9D64 47               ld b,a
 282+ 9D65
 283+ 9D65              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 284+ 9D65              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 285+ 9D65
 286+ 9D65 48           1 ld c,b
 287+ 9D66 0C               inc c
 288+ 9D67
 289+ 9D67 04               inc b
 290+ 9D68 05               dec b
 291+ 9D69 20 02            jr nz,3F
 292+ 9D6B
 293+ 9D6B 18 0B            jr 6F
 294+ 9D6D
 295+ 9D6D CD F8 94     3 call NextScan
 296+ 9D70 EB               ex de,hl
 297+ 9D71
 298+ 9D71 73               ld (hl),e
 299+ 9D72 23               inc hl
 300+ 9D73 72               ld (hl),d
 301+ 9D74 23               inc hl
 302+ 9D75
 303+ 9D75 EB               ex de,hl
 304+ 9D76 10 F5            djnz 3B
 305+ 9D78
 306+ 9D78 ED 53 D5 89  6 ld (Scanlines_album_SP),de
 307+ 9D7C
 308+ 9D7C 08           5 ex af,af
 309+ 9D7D F5               push af
 310+ 9D7E E1               pop hl
 311+ 9D7F
 312+ 9D7F 71               ld (hl),c
 313+ 9D80
 314+ 9D80 C9               ret
 315+ 9D81
# file closed: Genera_datos_de_impresion.asm
1899  9D81
1900  9D81              ;	include "Disparo.asm"
1901  9D81
1902  9D81
1903  9D81              	SAVESNA "Pruebas.sna", START
1904  9D81
1905  9D81
1906  9D81
1907  9D81
# file closed: Banco_de_pruebas.asm
