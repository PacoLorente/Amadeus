# file opened: Banco_de_pruebas.asm
   1  0000              ;	29/12/23
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 2F 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 3E 07        	ld a,7
  21  AA07 D3 FE        	out ($fe),a												; Borde blanco.
  22  AA09
  23  AA09 08           	ex af,af'
  24  AA0A F5           	push af	;af'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl'
  27  AA0D D5           	push de	;de'
  28  AA0E C5           	push bc	;bc'
  29  AA0F D9           	exx
  30  AA10 E5           	push hl	;hl
  31  AA11 D5           	push de	;de
  32  AA12 C5           	push bc	;bc
  33  AA13 08           	ex af,af'
  34  AA14 F5           	push af	;af
  35  AA15 DD E5        	push ix
  36  AA17 FD E5        	push iy
  37  AA19
  38  AA19              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  39  AA19              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  40  AA19
  41  AA19
  42  AA19              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  43  AA19
  44  AA19 3E 02        	ld a,2
  45  AA1B D3 FE        	out ($fe),a
  46  AA1D CD 9A 8E     	call Pinta_entidades									; Borde rojo.
  47  AA20
  48  AA20 3E 06        	ld a,6
  49  AA22 D3 FE        	out ($fe),a
  50  AA24 CD 90 8E     	call Pinta_Amadeus										; Borde amarillo.
  51  AA27
  52  AA27
  53  AA27 3E 07        	ld a,7
  54  AA29 D3 FE        	out ($fe),a												; Borde blanco.
  55  AA2B CD BC 8E     	call Guarda_parametros_DRAW
  56  AA2E CD E0 8D     	call Restore_Amadeus
  57  AA31
  58  AA31              ; Posible colisión Entidad-Amadeus ???
  59  AA31
  60  AA31 3A 3F 89     	ld a,(Impacto2)
  61  AA34 CB 57        	bit 2,a
  62  AA36 28 03        	jr z,1F
  63  AA38
  64  AA38 CD DF 90     	call Detecta_colision_nave_entidad
  65  AA3B
  66  AA3B 3E 04        1 ld a,4
  67  AA3D D3 FE        	out ($fe),a
  68  AA3F CD E6 8A     	call Gestiona_Amadeus
  69  AA42
  70  AA42 3E 07        	ld a,7
  71  AA44 D3 FE        	out ($fe),a												; Borde blanco.
  72  AA46 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  73  AA49 CD F2 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  74  AA4C
  75  AA4C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  76  AA4C
  77  AA4C CD C8 8E     	call Recupera_parametros_DRAW
  78  AA4F CD AA 8E     	call Actualiza_relojes
  79  AA52
  80  AA52 21 39 89     	ld hl,Ctrl_3
  81  AA55 CB 86        	res 0,(hl)
  82  AA57
  83  AA57 FD E1        	pop iy
  84  AA59 DD E1        	pop ix
  85  AA5B F1           	pop af
  86  AA5C C1           	pop bc
  87  AA5D D1           	pop de
  88  AA5E E1           	pop hl
  89  AA5F D9           	exx
  90  AA60 C1           	pop bc
  91  AA61 D1           	pop de
  92  AA62 E1           	pop hl
  93  AA63 08           	ex af,af'
  94  AA64 F1           	pop af
  95  AA65 08           	ex af,af'
  96  AA66 D9           	exx
  97  AA67
  98  AA67 ED 7B 2F 89  	ld sp,(Stack_3)
  99  AA6B
 100  AA6B FB           	ei
 101  AA6C
 102  AA6C 3E 01        	ld a,1												; Borde azul.
 103  AA6E D3 FE        	out ($fe),a
 104  AA70
 105  AA70 C9           	ret
 106  AA71
 107  AA71              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 108  AA71
 109  AA71              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA71              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA71              ;
   3+ AA71              ;	17/02/23
   4+ AA71              ;
   5+ AA71              ;	Sprites e índices.
   6+ AA71
   7+ AA71              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 110  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	21/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 67 Bytes por entidad.
 101+ 856C
 102+ 856C C3 85        	defw Caja_1
 103+ 856E 08 86        	defw Caja_2
 104+ 8570 4D 86        	defw Caja_3
 105+ 8572 92 86        	defw Caja_4
 106+ 8574 D7 86        	defw Caja_5
 107+ 8576 1C 87        	defw Caja_6
 108+ 8578 61 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 145+ 85AC 00 00        	defw 0 											; Contador_de_mov_masticados
 146+ 85AE
 147+ 85AE 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 148+ 85B0
 149+ 85B0 00           	db 0											; (Autoriza_movimiento).
 150+ 85B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 150+ 85B5 00 00
 151+ 85B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 152+ 85BA
 153+ 85BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 154+ 85BC 00           	db 0											; (Cola_de_desplazamiento).
 155+ 85BD
 156+ 85BD 00           	db 0 											; (Columnas).
 157+ 85BE 00 00        	defw 0											; (Limite_horizontal).
 158+ 85C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 159+ 85C3
 160+ 85C3              ; ---------- ---------- ---------- ---------- ----------
 161+ 85C3
 162+ 85C3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 163+ 85C5 00 00        	defw 0											; (Posicion_actual).
 164+ 85C7 00 00        	defw 0 											; (Puntero_objeto).
 165+ 85C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 166+ 85CC
 167+ 85CC 00           	db %00000000 									; (Attr).
 168+ 85CD
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_der).
 170+ 85CF 00 00        	defw 0											; (Indice_Sprite_izq).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 172+ 85D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 173+ 85D5
 174+ 85D5 00 00        	defw 0											; (Posicion_inicio).
 175+ 85D7 00           	db 0											; (Cuad_objeto).
 176+ 85D8
 177+ 85D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 178+ 85DC
 179+ 85DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 180+ 85DD
 181+ 85DD 00 00 00...  	ds 6											; Variables_de_borrado
 182+ 85E3
 183+ 85E3 00 00        	db 0,0											; Variables_de_pintado
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00        	defw 0											;	" " " " " " "
 186+ 85E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 187+ 85ED
 188+ 85ED 00 00        	defw 0 											; Puntero_de_impresion.
 189+ 85EF
 190+ 85EF D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 191+ 85F1 00 00        	defw 0 											; Contador_de_mov_masticados
 192+ 85F3
 193+ 85F3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 194+ 85F5
 195+ 85F5 00           	db 0											; (Autoriza_movimiento).
 196+ 85F6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 196+ 85FA 00 00
 197+ 85FC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 198+ 85FF
 199+ 85FF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 200+ 8601 00           	db 0											; (Cola_de_desplazamiento).
 201+ 8602
 202+ 8602 00           	db 0 											; (Columnas).
 203+ 8603 00 00        	defw 0											; (Limite_horizontal).
 204+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 205+ 8608
 206+ 8608              ; ---------- ---------- ---------- ---------- ----------
 207+ 8608
 208+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 209+ 860A 00 00        	defw 0											; (Posicion_actual).
 210+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 211+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 212+ 8611
 213+ 8611 00           	db %00000000 									; (Attr).
 214+ 8612
 215+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 216+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 217+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 218+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 219+ 861A
 220+ 861A 00 00        	defw 0											; (Posicion_inicio).
 221+ 861C 00           	db 0											; (Cuad_objeto).
 222+ 861D
 223+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 224+ 8621
 225+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 226+ 8622
 227+ 8622 00 00 00...  	ds 6											; Variables_de_borrado
 228+ 8628
 229+ 8628 00 00        	db 0,0											; Variables_de_pintado
 230+ 862A 00 00        	defw 0											;	" " " " " " "
 231+ 862C 00 00        	defw 0											;	" " " " " " "
 232+ 862E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 233+ 8632
 234+ 8632 00 00        	defw 0 											; Puntero_de_impresion.
 235+ 8634
 236+ 8634 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 237+ 8636 00 00        	defw 0 											; Contador_de_mov_masticados
 238+ 8638
 239+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 240+ 863A
 241+ 863A 00           	db 0											; (Autoriza_movimiento).
 242+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 242+ 863F 00 00
 243+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 244+ 8644
 245+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 246+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 247+ 8647
 248+ 8647 00           	db 0 											; (Columnas).
 249+ 8648 00 00        	defw 0											; (Limite_horizontal).
 250+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 251+ 864D
 252+ 864D              ; ---------- ---------- ---------- ---------- ----------
 253+ 864D
 254+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 255+ 864F 00 00        	defw 0											; (Posicion_actual).
 256+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 257+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 258+ 8656
 259+ 8656 00           	db %00000000 									; (Attr).
 260+ 8657
 261+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 262+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 263+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 264+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 265+ 865F
 266+ 865F 00 00        	defw 0											; (Posicion_inicio).
 267+ 8661 00           	db 0											; (Cuad_objeto).
 268+ 8662
 269+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 270+ 8666
 271+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 272+ 8667
 273+ 8667 00 00 00...  	ds 6											; Variables_de_borrado
 274+ 866D
 275+ 866D 00 00        	db 0,0											; Variables_de_pintado
 276+ 866F 00 00        	defw 0											;	" " " " " " "
 277+ 8671 00 00        	defw 0											;	" " " " " " "
 278+ 8673 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 279+ 8677
 280+ 8677 00 00        	defw 0 											; Puntero_de_impresion.
 281+ 8679
 282+ 8679 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 283+ 867B 00 00        	defw 0 											; Contador_de_mov_masticados
 284+ 867D
 285+ 867D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 286+ 867F
 287+ 867F 00           	db 0											; (Autoriza_movimiento).
 288+ 8680 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 288+ 8684 00 00
 289+ 8686 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 290+ 8689
 291+ 8689 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 292+ 868B 00           	db 0											; (Cola_de_desplazamiento).
 293+ 868C
 294+ 868C 00           	db 0 											; (Columnas).
 295+ 868D 00 00        	defw 0											; (Limite_horizontal).
 296+ 868F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 297+ 8692
 298+ 8692              ; ---------- ---------- ---------- ---------- ----------
 299+ 8692
 300+ 8692 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 301+ 8694 00 00        	defw 0											; (Posicion_actual).
 302+ 8696 00 00        	defw 0 											; (Puntero_objeto).
 303+ 8698 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 304+ 869B
 305+ 869B 00           	db %00000000 									; (Attr).
 306+ 869C
 307+ 869C 00 00        	defw 0											; (Indice_Sprite_der).
 308+ 869E 00 00        	defw 0											; (Indice_Sprite_izq).
 309+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 310+ 86A2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 311+ 86A4
 312+ 86A4 00 00        	defw 0											; (Posicion_inicio).
 313+ 86A6 00           	db 0											; (Cuad_objeto).
 314+ 86A7
 315+ 86A7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 316+ 86AB
 317+ 86AB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 318+ 86AC
 319+ 86AC 00 00 00...  	ds 6											; Variables_de_borrado
 320+ 86B2
 321+ 86B2 00 00        	db 0,0											; Variables_de_pintado
 322+ 86B4 00 00        	defw 0											;	" " " " " " "
 323+ 86B6 00 00        	defw 0											;	" " " " " " "
 324+ 86B8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 325+ 86BC
 326+ 86BC 00 00        	defw 0 											; Puntero_de_impresion.
 327+ 86BE
 328+ 86BE D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 329+ 86C0 00 00        	defw 0 											; Contador_de_mov_masticados
 330+ 86C2
 331+ 86C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 332+ 86C4
 333+ 86C4 00           	db 0											; (Autoriza_movimiento).
 334+ 86C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 334+ 86C9 00 00
 335+ 86CB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 336+ 86CE
 337+ 86CE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 338+ 86D0 00           	db 0											; (Cola_de_desplazamiento).
 339+ 86D1
 340+ 86D1 00           	db 0 											; (Columnas).
 341+ 86D2 00 00        	defw 0											; (Limite_horizontal).
 342+ 86D4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 343+ 86D7
 344+ 86D7              ; ---------- ---------- ---------- ---------- ----------
 345+ 86D7
 346+ 86D7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 347+ 86D9 00 00        	defw 0											; (Posicion_actual).
 348+ 86DB 00 00        	defw 0 											; (Puntero_objeto).
 349+ 86DD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 350+ 86E0
 351+ 86E0 00           	db %00000000 									; (Attr).
 352+ 86E1
 353+ 86E1 00 00        	defw 0											; (Indice_Sprite_der).
 354+ 86E3 00 00        	defw 0											; (Indice_Sprite_izq).
 355+ 86E5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 356+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 357+ 86E9
 358+ 86E9 00 00        	defw 0											; (Posicion_inicio).
 359+ 86EB 00           	db 0											; (Cuad_objeto).
 360+ 86EC
 361+ 86EC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 362+ 86F0
 363+ 86F0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 364+ 86F1
 365+ 86F1 00 00 00...  	ds 6											; Variables_de_borrado
 366+ 86F7
 367+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 368+ 86F9 00 00        	defw 0											;	" " " " " " "
 369+ 86FB 00 00        	defw 0											;	" " " " " " "
 370+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 371+ 8701
 372+ 8701 00 00        	defw 0 											; Puntero_de_impresion.
 373+ 8703
 374+ 8703 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 375+ 8705 00 00        	defw 0 											; Contador_de_mov_masticados
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 378+ 8709
 379+ 8709 00           	db 0											; (Autoriza_movimiento).
 380+ 870A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 380+ 870E 00 00
 381+ 8710 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 382+ 8713
 383+ 8713 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 384+ 8715 00           	db 0											; (Cola_de_desplazamiento).
 385+ 8716
 386+ 8716 00           	db 0 											; (Columnas).
 387+ 8717 00 00        	defw 0											; (Limite_horizontal).
 388+ 8719 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 389+ 871C
 390+ 871C              ; ---------- ---------- ---------- ---------- ----------
 391+ 871C
 392+ 871C 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 393+ 871E 00 00        	defw 0											; (Posicion_actual).
 394+ 8720 00 00        	defw 0 											; (Puntero_objeto).
 395+ 8722 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 396+ 8725
 397+ 8725 00           	db %00000000 									; (Attr).
 398+ 8726
 399+ 8726 00 00        	defw 0											; (Indice_Sprite_der).
 400+ 8728 00 00        	defw 0											; (Indice_Sprite_izq).
 401+ 872A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 402+ 872C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 403+ 872E
 404+ 872E 00 00        	defw 0											; (Posicion_inicio).
 405+ 8730 00           	db 0											; (Cuad_objeto).
 406+ 8731
 407+ 8731 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 408+ 8735
 409+ 8735 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 410+ 8736
 411+ 8736 00 00 00...  	ds 6											; Variables_de_borrado
 412+ 873C
 413+ 873C 00 00        	db 0,0											; Variables_de_pintado
 414+ 873E 00 00        	defw 0											;	" " " " " " "
 415+ 8740 00 00        	defw 0											;	" " " " " " "
 416+ 8742 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8746
 418+ 8746 00 00        	defw 0 											; Puntero_de_impresion.
 419+ 8748
 420+ 8748 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 421+ 874A 00 00        	defw 0 											; Contador_de_mov_masticados
 422+ 874C
 423+ 874C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 424+ 874E
 425+ 874E 00           	db 0											; (Autoriza_movimiento).
 426+ 874F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 426+ 8753 00 00
 427+ 8755 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 428+ 8758
 429+ 8758 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 430+ 875A 00           	db 0											; (Cola_de_desplazamiento).
 431+ 875B
 432+ 875B 00           	db 0 											; (Columnas).
 433+ 875C 00 00        	defw 0											; (Limite_horizontal).
 434+ 875E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 435+ 8761
 436+ 8761              ; ---------- ---------- ---------- ---------- ----------
 437+ 8761
 438+ 8761 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 439+ 8763 00 00        	defw 0											; (Posicion_actual).
 440+ 8765 00 00        	defw 0 											; (Puntero_objeto).
 441+ 8767 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 442+ 876A
 443+ 876A 00           	db %00000000 									; (Attr).
 444+ 876B
 445+ 876B 00 00        	defw 0											; (Indice_Sprite_der).
 446+ 876D 00 00        	defw 0											; (Indice_Sprite_izq).
 447+ 876F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 448+ 8771 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 449+ 8773
 450+ 8773 00 00        	defw 0											; (Posicion_inicio).
 451+ 8775 00           	db 0											; (Cuad_objeto).
 452+ 8776
 453+ 8776 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 454+ 877A
 455+ 877A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 456+ 877B
 457+ 877B 00 00 00...  	ds 6											; Variables_de_borrado
 458+ 8781
 459+ 8781 00 00        	db 0,0											; Variables_de_pintado
 460+ 8783 00 00        	defw 0											;	" " " " " " "
 461+ 8785 00 00        	defw 0											;	" " " " " " "
 462+ 8787 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 463+ 878B
 464+ 878B 00 00        	defw 0 											; Puntero_de_impresion.
 465+ 878D
 466+ 878D D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 467+ 878F 00 00        	defw 0 											; Contador_de_mov_masticados
 468+ 8791
 469+ 8791 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 470+ 8793
 471+ 8793 00           	db 0											; (Autoriza_movimiento).
 472+ 8794 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 472+ 8798 00 00
 473+ 879A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 474+ 879D
 475+ 879D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 476+ 879F 00           	db 0											; (Cola_de_desplazamiento).
 477+ 87A0
 478+ 87A0 00           	db 0 											; (Columnas).
 479+ 87A1 00 00        	defw 0											; (Limite_horizontal).
 480+ 87A3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 481+ 87A6
 482+ 87A6              ; -------------------------------------------------------------------------------------
 483+ 87A6              ;
 484+ 87A6              ;	20/05/23
 485+ 87A6              ;
 486+ 87A6              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 487+ 87A6              ;
 488+ 87A6              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 489+ 87A6              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 490+ 87A6              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 491+ 87A6              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 492+ 87A6
 493+ 87A6              Indice_de_entidades
 494+ 87A6
 495+ 87A6 AA 87        	defw Entidad_1
 496+ 87A8 BA 87        	defw Entidad_2
 497+ 87AA
 498+ 87AA              ;	BADSAT, (Satélite malvado).
 499+ 87AA
 500+ 87AA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 501+ 87AC 04           	db %00000100									; (Attr).
 502+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 503+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 504+ 87B1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 505+ 87B3 01           	db 1											; (Cuad_objeto).
 506+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 507+ 87B8 96 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 508+ 87BA
 509+ 87BA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 510+ 87BC 02           	db %00000010									; (Attr).
 511+ 87BD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 512+ 87BF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 513+ 87C1 40 50        	defw $5040                                      ; (Posicion_inicio).
 514+ 87C3 01           	db 1											; (Cuad_objeto).
 515+ 87C4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 516+ 87C8 96 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 517+ 87CA
# file closed: Cajas_y_disparos.asm
 111  87CA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87CA              ; 13/05/23
   2+ 87CA
   3+ 87CA              Indice_de_niveles
   4+ 87CA
   5+ 87CA D8 87        	defw Nivel_1
   6+ 87CC DB 87        	defw Nivel_2
   7+ 87CE E8 87        	defw Nivel_3
   8+ 87D0 F8 87        	defw Nivel_4
   9+ 87D2 0A 88        	defw Nivel_5
  10+ 87D4              ;	...
  11+ 87D4              ;	...
  12+ 87D4              ;	+ Niveles ...
  13+ 87D4
  14+ 87D4 00 00        	defw 0
  15+ 87D6 00 00        	defw 0
  16+ 87D8
  17+ 87D8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87D9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87DB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87DC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87E0 01 02
  21+ 87E2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87E6 01 02
  22+ 87E8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87E9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87ED 01
  24+ 87EE 03 01 01 01  	db 3,1,1,1,1
  24+ 87F2 01
  25+ 87F3 03 01 01 01  	db 3,1,1,1,1
  25+ 87F7 01
  26+ 87F8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87F9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87FD 01
  28+ 87FE 04 01 01 01  	db 4,1,1,1,1
  28+ 8802 01
  29+ 8803 04 01 01 01  	db 4,1,1,1,1
  29+ 8807 01
  30+ 8808 02 03        	db 2,3
  31+ 880A 14           Nivel_5 db 20									; Nº de entidades.
  32+ 880B 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 880F 01
  33+ 8810 05 01 01 01  	db 5,1,1,1,1
  33+ 8814 01
  34+ 8815 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8819 01
  35+ 881A 05 01 01 01  	db 5,1,1,1,1
  35+ 881E 01
  36+ 881F
  37+ 881F              ;---------------------------------------------------------------------------------------------------------------
  38+ 881F              ;
  39+ 881F              ;   3/9/23
  40+ 881F              ;
  41+ 881F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 881F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 881F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 881F              ;	_en la caja DRAW correspondiente.
  45+ 881F              ;
  46+ 881F              ;	MODIFICA: HL,DE y A.
  47+ 881F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 881F
  49+ 881F              Inicializa_Punteros_de_nivel
  50+ 881F
  51+ 881F 21 CA 87     	ld hl,Indice_de_niveles
  52+ 8822 22 57 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8825 CD 30 8D     	call Extrae_address
  54+ 8828 7E           	ld a,(hl)
  55+ 8829 32 23 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 882C 23           	inc hl
  57+ 882D 22 59 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8830 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8831
  60+ 8831              ;---------------------------------------------------------------------------------------------------------------
  61+ 8831              ;
  62+ 8831              ;   13/5/23
  63+ 8831              ;
  64+ 8831              ;	Destruye A,BC,HL,DE
  65+ 8831
  66+ 8831              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8831              ;	_del juego.
  68+ 8831
  69+ 8831              Prepara_cajas
  70+ 8831
  71+ 8831              ; Preparamos los punteros de las cajas.
  72+ 8831
  73+ 8831 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8834 CD 30 8D     	call Extrae_address
  75+ 8837 CD 74 88     	call Avanza_caja
  76+ 883A
  77+ 883A CD B8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 883D
  79+ 883D 2A 59 89     	ld hl,(Datos_de_nivel)
  80+ 8840
  81+ 8840              ; HL está en los datos del nivel correspondiente.
  82+ 8840              ; B actuará como contador de cajas.
  83+ 8840
  84+ 8840 C5           1 push bc
  85+ 8841
  86+ 8841 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8842 CD 65 88     	call PreparaBC
  88+ 8845
  89+ 8845 21 A6 87     	ld hl,Indice_de_entidades
  90+ 8848 CD 6D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 884B 22 29 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 884E
  93+ 884E CD 7E 88     	call Datos_de_entidad_a_caja
  94+ 8851
  95+ 8851 2A 21 89     	ld hl,(Indice_restore_caja)
  96+ 8854 CD 30 8D     	call Extrae_address
  97+ 8857 CD 74 88     	call Avanza_caja
  98+ 885A
  99+ 885A 2A 59 89     	ld hl,(Datos_de_nivel)
 100+ 885D 23           	inc hl
 101+ 885E 22 59 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8861
 103+ 8861 C1           	pop bc
 104+ 8862 10 DC        	djnz 1B
 105+ 8864 C9           	ret
 106+ 8865
 107+ 8865 CB 27        PreparaBC sla a
 108+ 8867 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8869 4F           	ld c,a
 110+ 886A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 886C C9           	ret
 112+ 886D
 113+ 886D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 886E ED 4A        	adc hl,bc
 115+ 8870 CD 30 8D     	call Extrae_address
 116+ 8873 C9           	ret
 117+ 8874
 118+ 8874 22 1D 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8877 13           	inc de
 120+ 8878 13           	inc de
 121+ 8879 EB           	ex de,hl
 122+ 887A 22 21 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 887D C9           	ret
 124+ 887E
 125+ 887E              Datos_de_entidad_a_caja
 126+ 887E
 127+ 887E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 887E
 129+ 887E
 130+ 887E ED 5B 1D 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8882
 132+ 8882 01 02 00     	ld bc,2
 133+ 8885 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8887
 135+ 8887 01 07 00     	ld bc,7
 136+ 888A CD B2 88     	call Situa_DE
 137+ 888D
 138+ 888D 01 05 00     	ld bc,5
 139+ 8890 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8892
 141+ 8892 01 04 00     	ld bc,4
 142+ 8895 CD B2 88     	call Situa_DE
 143+ 8898
 144+ 8898 01 07 00     	ld bc,7
 145+ 889B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 889D
 147+ 889D 01 18 00     	ld bc,24
 148+ 88A0 CD B2 88     	call Situa_DE
 149+ 88A3
 150+ 88A3 01 02 00     	ld bc,2
 151+ 88A6 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88A8
 153+ 88A8              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 88A8              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 88A8
 156+ 88A8 01 0F 00     	ld bc,15									; *****
 157+ 88AB CD B2 88     	call Situa_DE
 158+ 88AE
 159+ 88AE 3E 03        	ld a,3
 160+ 88B0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88B1
 162+ 88B1 C9           	ret
 163+ 88B2
 164+ 88B2 EB           Situa_DE ex de,hl
 165+ 88B3 A7           	and a
 166+ 88B4 ED 4A        	adc hl,bc
 167+ 88B6 EB           	ex de,hl
 168+ 88B7 C9           	ret
 169+ 88B8
 170+ 88B8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88B8              ;
 172+ 88B8              ;	21/5/23
 173+ 88B8              ;
 174+ 88B8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88B8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88B8              ;
 177+ 88B8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88B8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88B8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88B8              ;
 181+ 88B8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88B8              ;	MODIFICA: A y B.
 183+ 88B8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88B8
 185+ 88B8              Admin_num_entidades
 186+ 88B8
 187+ 88B8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88B8
 189+ 88B8 3A 23 89     	ld a,(Numero_de_entidades)
 190+ 88BB A7           	and a
 191+ 88BC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88BC              ;	jr z,$
 193+ 88BC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88BC
 195+ 88BC 20 03        	jr nz,3F
 196+ 88BE
 197+ 88BE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88BE
 199+ 88BE CD 1F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88C1
 201+ 88C1 3A 23 89     3 ld a,(Numero_de_entidades)
 202+ 88C4 FE 07        	cp 7
 203+ 88C6 38 08        	jr c,1F
 204+ 88C8
 205+ 88C8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88C8              ; Actualizamos variables.
 207+ 88C8
 208+ 88C8 3E 07        	ld a,7
 209+ 88CA 32 24 89     	ld (Numero_parcial_de_entidades),a
 210+ 88CD 47           	ld b,a
 211+ 88CE 18 04        	jr 2F
 212+ 88D0
 213+ 88D0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88D0              ; (Numero_de_entidades)="0".
 215+ 88D0
 216+ 88D0 32 24 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88D3 47           	ld b,a
 218+ 88D4 C9           2 ret
# file closed: Niveles.asm
 112  88D5
 113  88D5              ; ******************************************************************************************************************************************************************************************
 114  88D5              ; Constantes.
 115  88D5              ; ******************************************************************************************************************************************************************************************
 116  88D5              ;
 117  88D5              ; 25/12/23
 118  88D5
 119  88D5              ;
 120  88D5              ; Constantes.
 121  88D5              ;
 122  88D5
 123  88D5              Sprite_vacio equ $f000
 124  88D5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 125  88D5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 126  88D5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 127  88D5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 128  88D5
 129  88D5              Almacen_de_movimientos_masticados_Entidad_1 equ $5cd0	; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 130  88D5              ;														;! $6f8f es donde se guarda el último movimiento masticado de BADSAT.
 131  88D5              ;														; 4799 bytes, 4,8Kb.
 132  88D5              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 133  88D5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 134  88D5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 135  88D5              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 136  88D5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 137  88D5
 138  88D5              ;														; 55 Bytes.
 139  88D5
 140  88D5              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 141  88D5              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 142  88D5
 143  88D5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 144  88D5
 145  88D5              ; ******************************************************************************************************************************************************************************************
 146  88D5              ; Variables.
 147  88D5              ; ******************************************************************************************************************************************************************************************
 148  88D5              ;
 149  88D5              ; 25/12//23
 150  88D5              ;
 151  88D5              ; Variables de DRAW. (Motor principal).
 152  88D5              ;
 153  88D5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 154  88D5
 155  88D5 00           Filas db 0												; Filas. [DRAW]
 156  88D6 00           Columns db 0  											; Nº de columnas. [DRAW]
 157  88D7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 158  88D9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 159  88DB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 160  88DC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 161  88DD
 162  88DD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 163  88DD
 164  88DD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 165  88DE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 166  88DE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 167  88DE 00           Attr db 0												; Atributos de la entidad:
 168  88DF
 169  88DF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 170  88DF              ;
 171  88DF              ;	COLORES: 0 ..... NEGRO
 172  88DF              ;    		 1 ..... AZUL
 173  88DF              ; 			 2 ..... ROJO
 174  88DF              ;			 3 ..... MAGENTA
 175  88DF              ; 			 4 ..... VERDE
 176  88DF              ; 			 5 ..... CIAN
 177  88DF              ;			 6 ..... AMARILLO
 178  88DF              ; 			 7 ..... BLANCO
 179  88DF
 180  88DF 00 00        Indice_Sprite_der defw 0
 181  88E1 00 00        Indice_Sprite_izq defw 0
 182  88E3 00 00        Puntero_DESPLZ_der defw 0
 183  88E5 00 00        Puntero_DESPLZ_izq defw 0
 184  88E7
 185  88E7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 186  88E9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 187  88EA
 188  88EA              ; Variables de objeto. (Características).
 189  88EA
 190  88EA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 191  88EB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 192  88EC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 193  88ED 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 194  88EE
 195  88EE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 196  88EF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 197  88EF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 198  88EF 00 00 00...  Variables_de_borrado ds 6
 199  88F5
 200  88F5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 201  88F7 00 00        	defw 0
 202  88F9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 203  88FB 00 00 00 00  	db 0,0,0,0
 204  88FF
 205  88FF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 206  8901              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 207  8901
 208  8901 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
 209  8903
 210  8903              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 211  8903              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 212  8903
 213  8903 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 214  8905              ;														; _palabras que componen el "movimiento_masticado".
 215  8905
 216  8905              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 217  8905
 218  8905 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 219  8906              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 220  8906              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 221  8906              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 222  8906              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 223  8906              ;
 224  8906              ; 														DESCRIPCIÖN:
 225  8906              ;
 226  8906              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 227  8906              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 228  8906              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 229  8906              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 230  8906              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 231  8906              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 232  8906              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 233  8906              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 234  8906              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 235  8906              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 236  8906              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 237  8906              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 238  8906              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 239  8906              ;
 240  8906              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 241  8906              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 242  8906              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 243  8906
 244  8906              ; Movimiento. ------------------------------------------------------------------------------------------------------
 245  8906
 246  8906 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 247  8908 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 248  890A 00 00        Puntero_indice_mov_bucle defw 0							;
 249  890C              ;
 250  890C              ;
 251  890C 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 252  890D              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 253  890D              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 254  890D 00           Incrementa_puntero_backup db 0
 255  890E 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 256  890F              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 257  890F 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 258  8910 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 259  8911 00           Cola_de_desplazamiento db 0								; Este byte indica:
 260  8912              ;
 261  8912              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 262  8912              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 263  8912              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 264  8912              ;
 265  8912              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 266  8912              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 267  8912              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 268  8912              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 269  8912              ;
 270  8912              ;														;	"$ff" ..... Bucle infinito de repetición.
 271  8912              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 272  8912              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 273  8912
 274  8912
 275  8912              ; Variables de funcionamiento. [DRAW].
 276  8912
 277  8912 00           Columnas db 0
 278  8913 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 279  8915              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8915 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 281  8916
 282  8916              ; variables de control general.
 283  8916
 284  8916 00           Ctrl_2 db 0
 285  8917              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 286  8917              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 287  8917              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 288  8917              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 289  8917              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 290  8917              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 291  8917              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 292  8917              ;
 293  8917              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 294  8917              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 295  8917              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 296  8917              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 297  8917              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 298  8917              ;														BIT 4, ???
 299  8917              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 300  8917
 301  8917 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 302  8918
 303  8918              ;! 67 Bytes por entidad.
 304  8918
 305  8918              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 306  8918              ;					         		---------;      ;---------
 307  8918
 308  8918
 309  8918              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 310  8918
 311  8918 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 312  891A
 313  891A 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 314  891B
 315  891B              ;														DESCRIPCIÓN:
 316  891B              ;
 317  891B              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 318  891B              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 319  891B              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 320  891B              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 321  891B              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 322  891B              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 323  891B
 324  891B              ;														BIT 3, Recarga de nueva oleada.
 325  891B              ;														BIT 4, Recarga de nueva oleada.
 326  891B              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 327  891B              ;														BIT 6, **** Frame completo.
 328  891B              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 329  891B
 330  891B 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 331  891D              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 332  891D              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 333  891D              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 334  891D
 335  891D              ; Gestión de ENTIDADES y CAJAS.
 336  891D
 337  891D 00 00        Puntero_store_caja defw 0
 338  891F 00 00        Puntero_restore_caja defw 0
 339  8921 00 00        Indice_restore_caja defw 0
 340  8923 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 341  8924 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 342  8925 00           Entidades_en_curso db 0									; ..... ..... .....
 343  8926 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 344  8927              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 345  8927              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 346  8927              ;														; _ (Numero_de_malotes)="0".
 347  8927 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 348  8929 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 349  892B              ;														; _ puntero (Indice_entidades).
 350  892B
 351  892B              ;---------------------------------------------------------------------------------------------------------------
 352  892B              ;
 353  892B              ;	18/11/23
 354  892B              ;
 355  892B              ;	Álbumes.
 356  892B
 357  892B 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 358  892D              ;														; _variable para almacenar lo posición del puntero_
 359  892D              ; 														; _de pila, SP.
 360  892D 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 361  892F              ;														; La utiliza la rutina [Extrae_foto_registros].
 362  892F 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 363  8931 00 70        Stack_snapshot defw Album_de_fotos
 364  8933 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 365  8935
 366  8935              ;End_Snapshot defw Album_de_fotos
 367  8935              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 368  8935 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 369  8937              ;														; _el snapshot de los registros del siguiente disparo.
 370  8937              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 371  8937 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 372  8939
 373  8939 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 374  893A              ;
 375  893A              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 376  893A              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 377  893A              ;															BIT 2, "1" Indica que el {Almacen_de_movimientos_masticados_Entidad_1} está completo. Cuando esto ocurre_
 378  893A              ;																_ no se inicia una nueva "Entidad_guía".
 379  893A              ; Gestión de Disparos.
 380  893A
 381  893A 00           Numero_de_disparotes db 0
 382  893B 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 383  893D 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 384  893F 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 385  8940              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 386  8940              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 387  8940 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 388  8942              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 389  8942              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 390  8942              ;														; _produzca colisión.
 391  8942 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 392  8944              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 393  8944 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 394  8947              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 395  8947 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 396  894A              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 397  894A 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 398  894B
 399  894B              ;---------------------------------------------------------------------------------------------------------------
 400  894B
 401  894B              ; Relojes y temporizaciones.
 402  894B
 403  894B 00           Contador_de_frames db 0
 404  894C 00           Contador_de_frames_2 db 0
 405  894D
 406  894D 04           Clock_explosion db 4
 407  894E 1E           Clock_Entidades_en_curso db 30
 408  894F 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 409  8950              ;														; Repite la oleada de entidades.
 410  8950 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 411  8951 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 412  8952 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 413  8953
 414  8953 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 415  8954 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 416  8955 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 417  8956
 418  8956              ;---------------------------------------------------------------------------------------------------------------
 419  8956
 420  8956              ; Gestión de NIVELES.
 421  8956
 422  8956 00           Nivel db 0												; Nivel actual del juego.
 423  8957 00 00        Puntero_indice_NIVELES defw 0
 424  8959 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 425  895B              ; 														; _ que definen el NIVEL.
 426  895B              ; Y todo comienza aquí .....
 427  895B              ;
 428  895B              ; Rutina principal *************************************************************************************************************************************************************************
 429  895B              ;
 430  895B              ;	16/11/22
 431  895B
 432  895B              START
 433  895B
 434  895B 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 435  895E 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 436  8960 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 437  8962 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 438  8964 F3           	DI
 439  8965
 440  8965 3E 07        	ld a,%00000111
 441  8967 CD B5 99     	call Cls
 442  896A
 443  896A CD 09 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 444  896D
 445  896D              ; INICIALIZACIÓN.
 446  896D
 447  896D CD 1F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 448  8970 CD 31 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 449  8973 CD 98 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 450  8976              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 451  8976
 452  8976 CD B9 8D     	call Restore_entidad								 ; Vuelca en DRAW los parámetros de la 1º entidad, (Caja_1).
 453  8979
 454  8979 21 24 89     	ld hl,Numero_parcial_de_entidades
 455  897C 46           	ld b,(hl)
 456  897D 04           	inc b
 457  897E 05           	dec b
 458  897F 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 459  8981
 460  8981              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 461  8981              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 462  8981              ;	Pintamos el resto de entidades:
 463  8981
 464  8981              ;	INICIA ENTIDADES !!!!!
 465  8981
 466  8981 C5           1 push bc  												; Guardo el contador de entidades.
 467  8982 CD 8C 8B     	call Inicia_entidad
 468  8985 C1           	pop bc
 469  8986 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 470  8988
 471  8988              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 472  8988              ; (Esto se dá cuando se inicia una nueva oleada).
 473  8988
 474  8988 3A 1A 89     	ld a,(Ctrl_1)
 475  898B CB 5F        	bit 3,a
 476  898D 20 1B        	jr nz,5F											; Loop
 477  898F
 478  898F              ; 	INICIA AMADEUS !!!!!
 479  898F
 480  898F CD E0 8D     3 call Restore_Amadeus
 481  8992 CD 36 8D     	call Inicia_Puntero_objeto
 482  8995 CD A8 93     	call Draw
 483  8998 CD 16 71     	call Guarda_foto_registros
 484  899B CD 5D 8E     	call Guarda_datos_de_borrado_Amadeus
 485  899E
 486  899E 11 7E 85     	ld de,Amadeus_db
 487  89A1 CD F2 8D     	call Store_Amadeus
 488  89A4
 489  89A4              ; 	INICIA DISPAROS !!!!!
 490  89A4
 491  89A4 CD AE 8C     	call Inicia_Puntero_Disparo_Entidades
 492  89A7 CD B5 8C     	call Inicia_Puntero_Disparo_Amadeus
 493  89AA
 494  89AA              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 495  89AA
 496  89AA CD 98 8C     5 call Inicia_punteros_de_cajas
 497  89AD CD B9 8D     	call Restore_entidad
 498  89B0
 499  89B0 3A 1A 89     	ld a,(Ctrl_1)
 500  89B3 CB 5F        	bit 3,a
 501  89B5 28 07        	jr z,6F
 502  89B7
 503  89B7              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 504  89B7
 505  89B7 21 1A 89     	ld hl,Ctrl_1
 506  89BA CB 9E        	res 3,(hl)
 507  89BC 18 07        	jr Main
 508  89BE
 509  89BE              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 510  89BE
 511  89BE 21 39 89     6 ld hl,Ctrl_3
 512  89C1 CB C6        	set 0,(hl)											; Frame completo.
 513  89C3 FB           	ei
 514  89C4 76           	halt
 515  89C5
 516  89C5              ; ------------------------------------
 517  89C5
 518  89C5              Main
 519  89C5              ;
 520  89C5              ;	11/12/23
 521  89C5
 522  89C5              ; Aparece nueva entidad ???
 523  89C5
 524  89C5              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 525  89C5              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 526  89C5              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 527  89C5              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 528  89C5              ;														; _un 2º bloque.
 529  89C5
 530  89C5 3E 01        	ld a,1
 531  89C7 D3 FE        	out ($fe),a
 532  89C9
 533  89C9 3A 4E 89     	ld a,(Clock_Entidades_en_curso)
 534  89CC 47           	ld b,a
 535  89CD 3A 4B 89     	ld a,(Contador_de_frames)
 536  89D0 B8           	cp b
 537  89D1 20 18        	jr nz,13F
 538  89D3
 539  89D3              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 540  89D3              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 541  89D3              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 542  89D3              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 543  89D3
 544  89D3              ;	inc a
 545  89D3              ;	cp b
 546  89D3              ;	jr nz,13F
 547  89D3
 548  89D3
 549  89D3              ;23 ld (Contador_de_frames),a
 550  89D3
 551  89D3              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 552  89D3              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 553  89D3
 554  89D3 3A 24 89     21 ld a,(Numero_parcial_de_entidades)
 555  89D6 47           	ld b,a
 556  89D7 3A 25 89     	ld a,(Entidades_en_curso)
 557  89DA B8           	cp b
 558  89DB 28 0E        	jr z,13F
 559  89DD 30 0C        	jr nc,13F
 560  89DF
 561  89DF              ; --- --- --- --- ---
 562  89DF
 563  89DF 3C           	inc a
 564  89E0 32 25 89     	ld (Entidades_en_curso),a
 565  89E3
 566  89E3              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 567  89E3
 568  89E3 3A 4E 89     	ld a,(Clock_Entidades_en_curso)
 569  89E6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 570  89E6              ;! _ IMPREDECIBLE !!!!
 571  89E6 C6 64        	add 100
 572  89E8 32 4E 89     	ld (Clock_Entidades_en_curso),a
 573  89EB
 574  89EB              ; -------------------------------------------------------------------------------------------------------------
 575  89EB
 576  89EB              ; Habilita disparos.
 577  89EB
 578  89EB 21 50 89     13 ld hl,Disparo_Amadeus
 579  89EE 11 52 89     	ld de,CLOCK_repone_disparo_Amadeus
 580  89F1 CD 87 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 581  89F4
 582  89F4 21 53 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 583  89F7 11 55 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 584  89FA CD 87 9D     	call Habilita_disparos
 585  89FD
 586  89FD              ; COLISIONES.
 587  89FD
 588  89FD CD A8 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 589  8A00
 590  8A00              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 591  8A00              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 592  8A00              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 593  8A00
 594  8A00 AF           	xor a
 595  8A01 32 3F 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 596  8A04
 597  8A04 CD 98 8C     	call Inicia_punteros_de_cajas
 598  8A07 CD B9 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 599  8A0A              ; 														; _ en DRAW.
 600  8A0A 3A D5 88     	ld a,(Filas)
 601  8A0D A7           	and a
 602  8A0E 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 603  8A10 CD CB 8D     	call Incrementa_punteros_de_cajas
 604  8A13 18 F2        	jr 12B
 605  8A15
 606  8A15              ; ---------------------------------------------------------------------------------------
 607  8A15
 608  8A15 3A 24 89     10 ld a,(Numero_parcial_de_entidades)
 609  8A18 47               ld b,a
 610  8A19 A7           	and a
 611  8A1A 20 14        	jr nz,11F
 612  8A1C
 613  8A1C 21 1A 89     	ld hl,Ctrl_1
 614  8A1F CB 66        	bit 4,(hl)
 615  8A21 C2 B1 8A     	jp nz,16F
 616  8A24
 617  8A24              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 618  8A24
 619  8A24 21 1A 89     	ld hl,Ctrl_1
 620  8A27 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 621  8A29
 622  8A29 3A 4B 89     	ld a,(Contador_de_frames)
 623  8A2C 3C           	inc a
 624  8A2D 32 4F 89     	ld (Activa_recarga_cajas),a
 625  8A30
 626  8A30              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 627  8A30
 628  8A30 3A 25 89     11 ld a,(Entidades_en_curso)
 629  8A33 A7           	and a
 630  8A34 CA B1 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 631  8A37 47           	ld b,a												; No hay entidades que gestionar.
 632  8A38
 633  8A38              ; ( Código que ejecutamos con cada entidad: ).
 634  8A38
 635  8A38              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 636  8A38
 637  8A38 C5           15 push bc 												; Nº de entidades en curso.
 638  8A39
 639  8A39              ; Existe "Entidad_guía" ???.
 640  8A39              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 641  8A39
 642  8A39              ;	ld a,(Ctrl_3)
 643  8A39              ;	bit 1,a
 644  8A39              ;	jr nz,22F
 645  8A39
 646  8A39              ; Almacén de "Movimientos_masticados" lleno ???
 647  8A39              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 648  8A39              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 649  8A39
 650  8A39              ;	ld a,(Ctrl_3)
 651  8A39              ;	bit 3,a
 652  8A39              ;	jr nz,22F
 653  8A39
 654  8A39              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 655  8A39
 656  8A39              ;	ld hl,Ctrl_2
 657  8A39              ;	set 5,(hl)
 658  8A39              ;	ld hl,Ctrl_3
 659  8A39              ;	set 1,(hl)
 660  8A39
 661  8A39              ; Impacto ???
 662  8A39
 663  8A39 3A EE 88     22 ld a,(Impacto)
 664  8A3C A7           	and a
 665  8A3D 28 31        	jr z,8F
 666  8A3F
 667  8A3F              ; Hay Impacto en esta entidad.
 668  8A3F
 669  8A3F 21 4D 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 670  8A42 35           	dec (hl)
 671  8A43 C2 A4 8A     	jp nz,17F
 672  8A46
 673  8A46              ;! Velocidad de la animación de la explosión.
 674  8A46
 675  8A46 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 676  8A48              ;														; _,(velocidad de la explosión).
 677  8A48              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 678  8A48
 679  8A48 CD 7D 8E     	call Repone_datos_de_borrado
 680  8A4B CD D6 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 681  8A4E
 682  8A4E              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 683  8A4E
 684  8A4E 3A 16 89     	ld a,(Ctrl_2)
 685  8A51 CB 4F        	bit 1,a
 686  8A53 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 687  8A55
 688  8A55              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 689  8A55
 690  8A55 3A DD 88     	ld a,(CTRL_DESPLZ)
 691  8A58 A7           	and a
 692  8A59 20 08        	jr nz,18F
 693  8A5B
 694  8A5B 21 84 84     	ld hl,Indice_Explosion_2x2-2
 695  8A5E 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 696  8A61 18 06        	jr 19F
 697  8A63
 698  8A63 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 699  8A66 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 700  8A69
 701  8A69 21 16 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 702  8A6C CB CE        	set 1,(hl)
 703  8A6E 18 22        	jr 7F
 704  8A70
 705  8A70              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 706  8A70              ; _con las coordenadas de la entidad almacenada en DRAW.
 707  8A70
 708  8A70 3A 1A 89     8 ld a,(Ctrl_1)
 709  8A73 CB 57        	bit 2,a
 710  8A75 28 1B        	jr z,7F
 711  8A77
 712  8A77 2A 42 89     	ld hl,(Coordenadas_disparo_certero)
 713  8A7A EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 714  8A7B              ;														; E contiene la coordenada_X del disparo.
 715  8A7B 2A DB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 716  8A7E              ;														; H FILA, (Coordenada_y de la entidad).
 717  8A7E A7           	and a
 718  8A7F ED 52        	sbc hl,de
 719  8A81
 720  8A81 CD C1 92     	call Determina_resultado_comparativa
 721  8A84
 722  8A84 78           	ld a,b
 723  8A85 A7           	and a
 724  8A86 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 725  8A88
 726  8A88              ; ----- ----- -----
 727  8A88
 728  8A88 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 729  8A8A 32 EE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 730  8A8D
 731  8A8D 21 1A 89     	ld hl,Ctrl_1
 732  8A90 CB 96        	res 2,(hl)
 733  8A92
 734  8A92 CD 02 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 735  8A95
 736  8A95 3A 05 89     	ld a,(Ctrl_0)
 737  8A98 CB 67        	bit 4,a
 738  8A9A 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 739  8A9C
 740  8A9C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 741  8A9C              ; [[[
 742  8A9C              ;	call Detecta_disparo_entidad
 743  8A9C              ; ]]]
 744  8A9C
 745  8A9C CD F8 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 746  8A9F
 747  8A9F 21 05 89     	ld hl,Ctrl_0
 748  8AA2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 749  8AA4
 750  8AA4 CD 7E 8D     17 call Store_Restore_cajas
 751  8AA7
 752  8AA7 C1           	pop bc
 753  8AA8
 754  8AA8 05           	dec b
 755  8AA9 C2 38 8A     	jp nz,15B
 756  8AAC
 757  8AAC              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 758  8AAC              ; Hemos gestionado todas las unidades.
 759  8AAC              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 760  8AAC
 761  8AAC 21 1A 89     	ld hl,Ctrl_1
 762  8AAF CB 96        	res 2,(hl)
 763  8AB1
 764  8AB1 21 39 89     16 ld hl,Ctrl_3
 765  8AB4 CB C6        	set 0,(hl)											; Frame completo.
 766  8AB6 AF           	xor a
 767  8AB7 D3 FE        	out ($fe),a
 768  8AB9 FB           	ei
 769  8ABA 76           	halt
 770  8ABB
 771  8ABB              ; ----------------------------------------
 772  8ABB
 773  8ABB 3A 1A 89     	ld a,(Ctrl_1) 										; Existe Loop?
 774  8ABE CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 775  8AC0 CA C5 89     	jp z,Main
 776  8AC3
 777  8AC3              ; RECARGA DE NUEVA OLEADA.
 778  8AC3
 779  8AC3 3A 4B 89     	ld a,(Contador_de_frames)
 780  8AC6 47           	ld b,a
 781  8AC7 3A 4F 89     	ld a,(Activa_recarga_cajas)
 782  8ACA B8           	cp b
 783  8ACB 28 08        	jr z,20F
 784  8ACD
 785  8ACD 21 1A 89     	ld hl,Ctrl_1
 786  8AD0 CB E6        	set 4,(hl)
 787  8AD2 C3 C5 89     	jp Main
 788  8AD5
 789  8AD5 21 1A 89     20 ld hl,Ctrl_1
 790  8AD8 CB A6        	res 4,(hl)
 791  8ADA
 792  8ADA 3A 4B 89     	ld a,(Contador_de_frames)
 793  8ADD
 794  8ADD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 795  8ADD              ;! _ IMPREDECIBLE !!!!
 796  8ADD
 797  8ADD C6 0A        	add 10
 798  8ADF 32 4E 89     	ld (Clock_Entidades_en_curso),a
 799  8AE2
 800  8AE2 C3 70 89     	jp 4B
 801  8AE5
 802  8AE5 C9           	ret
 803  8AE6
 804  8AE6              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 805  8AE6              ;
 806  8AE6              ;	16/11/23
 807  8AE6
 808  8AE6              Gestiona_Amadeus
 809  8AE6
 810  8AE6              ;! Activa/desactiva impacto con Amadeus.
 811  8AE6
 812  8AE6              ;	ld a,(Impacto)
 813  8AE6              ;	and a
 814  8AE6              ;	jr nz,2F
 815  8AE6
 816  8AE6 CD 79 8B     	call Mov_Amadeus
 817  8AE9
 818  8AE9 3A 05 89     2 ld a,(Ctrl_0)
 819  8AEC CB 67        	bit 4,a
 820  8AEE 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 821  8AF0
 822  8AF0 CD F8 8B     	call Guarda_foto_entidad_a_pintar
 823  8AF3 CD 5D 8E     	call Guarda_datos_de_borrado_Amadeus
 824  8AF6
 825  8AF6 21 05 89     1 ld hl,Ctrl_0
 826  8AF9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 827  8AFB
 828  8AFB CD 4C 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 829  8AFE
 830  8AFE              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 831  8AFE
 832  8AFE CD 18 8D     	call Calcula_numero_de_disparotes
 833  8B01
 834  8B01 C9           	ret
 835  8B02
 836  8B02              ; --------------------------------------------------------------------------------------------------------------
 837  8B02              ;
 838  8B02              ;	15/12/23
 839  8B02
 840  8B02              Mov_obj
 841  8B02
 842  8B02 3A 16 89     	ld a,(Ctrl_2)
 843  8B05 CB 4F        	bit 1,a
 844  8B07 28 3C        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 845  8B09
 846  8B09              ; Explosión:
 847  8B09
 848  8B09 3A 17 89     	ld a,(Frames_explosion)
 849  8B0C A7           	and a
 850  8B0D 20 1D        	jr nz,4F
 851  8B0F
 852  8B0F              ; Una alimaña menos!!!!!!!!!1
 853  8B0F
 854  8B0F              ; Se trataba de una Entidad_guía ???
 855  8B0F
 856  8B0F 3A 16 89     	ld a,(Ctrl_2)
 857  8B12 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 858  8B14 28 05        	jr z,5F
 859  8B16
 860  8B16 21 39 89     	ld hl,Ctrl_3
 861  8B19 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 862  8B1B
 863  8B1B CD FB 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 864  8B1E 21 24 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 865  8B21 35           	dec (hl)
 866  8B22 21 25 89     	ld hl,Entidades_en_curso
 867  8B25 35           	dec (hl)
 868  8B26 21 23 89     	ld hl,Numero_de_entidades
 869  8B29 35           	dec (hl)
 870  8B2A 18 4C        	jr 3F
 871  8B2C
 872  8B2C              ; -----
 873  8B2C
 874  8B2C              ;	`Movemos´ la explosión.
 875  8B2C
 876  8B2C 2A E3 88     4 ld hl,(Puntero_DESPLZ_der)
 877  8B2F 23           	inc hl
 878  8B30 23           	inc hl
 879  8B31 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 880  8B34 CD 30 8D     	call Extrae_address
 881  8B37 22 D9 88     	ld (Puntero_objeto),hl
 882  8B3A
 883  8B3A 21 17 89     	ld hl,Frames_explosion
 884  8B3D 35           	dec (hl)
 885  8B3E
 886  8B3E 21 05 89     	ld hl,Ctrl_0
 887  8B41 CB E6        	set 4,(hl)
 888  8B43
 889  8B43 18 33        	jr 3F
 890  8B45
 891  8B45              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 892  8B45
 893  8B45 AF           2 xor a
 894  8B46 32 05 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 895  8B49
 896  8B49              ; Movemos Entidades malignas.
 897  8B49              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 898  8B49
 899  8B49 3A 16 89     	ld a,(Ctrl_2)
 900  8B4C CB 6F        	bit 5,a
 901  8B4E 20 07        	jr nz,8F
 902  8B50
 903  8B50 21 05 89     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 904  8B53 CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 905  8B55 18 09        	jr 7F
 906  8B57
 907  8B57 CD 32 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 908  8B5A
 909  8B5A 3A 05 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 910  8B5D CB 67        	bit 4,a
 911  8B5F C8           	ret z
 912  8B60
 913  8B60              ; Ha habido desplazamiento de la entidad maligna.
 914  8B60              ; Ha llegado a zona de AMADEUS ???
 915  8B60
 916  8B60 3A DC 88     7 ld a,(Coordenada_y)
 917  8B63 FE 14        	cp $14
 918  8B65 38 08        	jr c,1F
 919  8B67
 920  8B67              ; ---------
 921  8B67
 922  8B67              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 923  8B67              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 924  8B67
 925  8B67 F3           	di
 926  8B68 CD 71 90     	call Genera_coordenadas_X
 927  8B6B CD AD 90     	call Compara_coordenadas_X
 928  8B6E FB           	ei
 929  8B6F
 930  8B6F              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 931  8B6F
 932  8B6F              ; ---------
 933  8B6F
 934  8B6F CD 80 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 935  8B72 CD 7D 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 936  8B75 CD D6 8C     	call Limpia_Variables_de_borrado
 937  8B78
 938  8B78 C9           3 ret
 939  8B79
 940  8B79              ; --------------------------------------------------------------------------------------------------------------
 941  8B79              ;
 942  8B79              ;	29/1/23
 943  8B79
 944  8B79              Mov_Amadeus
 945  8B79
 946  8B79 CD 1D 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 947  8B7C
 948  8B7C 3A 05 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 949  8B7F CB 67        	bit 4,a
 950  8B81 C8           	ret z
 951  8B82
 952  8B82              ; ---------
 953  8B82
 954  8B82 CD 80 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 955  8B85 CD 6D 8E     	call Repone_datos_de_borrado_Amadeus
 956  8B88 CD D6 8C     	call Limpia_Variables_de_borrado
 957  8B8B
 958  8B8B C9           	ret
 959  8B8C
 960  8B8C              ; -----------------------------------------------------------------------------------
 961  8B8C              ;
 962  8B8C              ;	12/12/23
 963  8B8C              ;
 964  8B8C              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 965  8B8C
 966  8B8C              Inicia_entidad
 967  8B8C
 968  8B8C CD CA 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 969  8B8F CD 36 8D     	call Inicia_Puntero_objeto
 970  8B92 CD C9 99     	call Recompone_posicion_inicio
 971  8B95 CD A8 93     	call Draw
 972  8B98 CD A3 8B     	call Guarda_movimiento_masticado
 973  8B9B CD 16 71     	call Guarda_foto_registros
 974  8B9E F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 975  8B9F              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 976  8B9F              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 977  8B9F CD 7E 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 978  8BA2 C9           	ret
 979  8BA3
 980  8BA3
 981  8BA3              ; -----------------------------------------------------------------------------------
 982  8BA3              ;
 983  8BA3              ;	28/12/23
 984  8BA3              ;
 985  8BA3              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados_Entidad_1} si se trata de una "entidad_guía".
 986  8BA3              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
 987  8BA3
 988  8BA3 3A 16 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 989  8BA6 CB 6F        	bit 5,a
 990  8BA8 C8           	ret z 													; Salimos si NO se trata de una entidad guía.
 991  8BA9
 992  8BA9 ED 73 2B 89  	ld (Stack),sp
 993  8BAD ED 7B 01 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
 994  8BB1
 995  8BB1 E5           	push hl
 996  8BB2 DD E5            push ix
 997  8BB4 FD E5            push iy
 998  8BB6
 999  8BB6 ED 7B 2B 89      ld sp,(Stack)
1000  8BBA
1001  8BBA E5               push hl
1002  8BBB
1003  8BBB 2A 03 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1004  8BBE 23           	inc hl
1005  8BBF 22 03 89     	ld (Contador_de_mov_masticados),hl
1006  8BC2
1007  8BC2 22 18 89     	ld (Contador_general_de_mov_masticados_Entidad_1),hl	; Cuando la entidad pase de guía a fantasma, el "contador general" indicará el nº máximo de movimientos masticados creados.
1008  8BC5
1009  8BC5 E1           	pop hl
1010  8BC6
1011  8BC6 CD E1 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1012  8BC9              ;															; _ el (Contador_de_mov_masticados).
1013  8BC9 C9               ret
1014  8BCA
1015  8BCA              ; --------------------------------------------------------------------------------------------------------------
1016  8BCA              ;
1017  8BCA              ;	12/12/23
1018  8BCA              ;
1019  8BCA
1020  8BCA              Inicia_entidad_guia
1021  8BCA
1022  8BCA              ; Existe "Entidad_guía" ???
1023  8BCA
1024  8BCA 3A 39 89     	ld a,(Ctrl_3)
1025  8BCD CB 4F        	bit 1,a
1026  8BCF C0           	ret nz
1027  8BD0
1028  8BD0              ; Inicia Entidad_guía:
1029  8BD0
1030  8BD0 21 16 89     	ld hl,Ctrl_2
1031  8BD3 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1032  8BD5 21 39 89     	ld hl,Ctrl_3
1033  8BD8 CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1034  8BDA
1035  8BDA 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1+6
1036  8BDD 22 01 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1037  8BE0
1038  8BE0 C9           	ret
1039  8BE1
1040  8BE1              ; --------------------------------------------------------------------------------------------------------------
1041  8BE1              ;
1042  8BE1              ;	21/12/23
1043  8BE1              ;
1044  8BE1
1045  8BE1              Actualiza_Puntero_de_almacen_de_mov_masticados
1046  8BE1
1047  8BE1              ;	Entidad_guía ???
1048  8BE1
1049  8BE1 3A 16 89     	ld a,(Ctrl_2)
1050  8BE4 CB 6F        	bit 5,a
1051  8BE6 C8           	ret z												; Salimos si NO se trata de una entidad guía.
1052  8BE7
1053  8BE7 E5           	push hl
1054  8BE8 C5           	push bc
1055  8BE9
1056  8BE9 2A 01 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1057  8BEC 01 06 00     	ld bc,6
1058  8BEF A7           	and a
1059  8BF0 ED 4A        	adc hl,bc
1060  8BF2 22 01 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1061  8BF5
1062  8BF5 C1           	pop bc
1063  8BF6 E1           	pop hl
1064  8BF7
1065  8BF7 C9           	ret
1066  8BF8
1067  8BF8              ; --------------------------------------------------------------------------------------------------------------
1068  8BF8              ;
1069  8BF8              ;	28/12/23
1070  8BF8              ;
1071  8BF8              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1072  8BF8              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1073  8BF8
1074  8BF8              Guarda_foto_entidad_a_pintar
1075  8BF8
1076  8BF8 3A 05 89     	ld a,(Ctrl_0)
1077  8BFB CB 77        	bit 6,a
1078  8BFD 28 07        	jr z,5F
1079  8BFF
1080  8BFF              ; Guarda la foto de Amadeus.
1081  8BFF
1082  8BFF CD A8 93     	call Draw
1083  8C02 CD 16 71     	call Guarda_foto_registros
1084  8C05
1085  8C05 C9           	ret
1086  8C06
1087  8C06              ; ENTIDADES!
1088  8C06              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1089  8C06
1090  8C06 3A 39 89     5 ld a,(Ctrl_3)
1091  8C09 CB 5F        	bit 3,a
1092  8C0B 28 04        	jr z,1F
1093  8C0D
1094  8C0D              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1095  8C0D
1096  8C0D CD 54 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1097  8C10 C9           	ret
1098  8C11
1099  8C11              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1100  8C11
1101  8C11 3A 39 89     1 ld a,(Ctrl_3)
1102  8C14 CB 57        	bit 2,a
1103  8C16 20 10        	jr nz,6F
1104  8C18
1105  8C18              ; Entidad guía o fantasma ???
1106  8C18
1107  8C18 3A 16 89     	ld a,(Ctrl_2)
1108  8C1B CB 6F        	bit 5,a
1109  8C1D 20 10        	jr nz,3F
1110  8C1F
1111  8C1F              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1112  8C1F
1113  8C1F 18 EC        	jr 4B
1114  8C21
1115  8C21              ; ENTIDAD_GUÍA:
1116  8C21              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1117  8C21              ; _guardando "movimientos_masticados".
1118  8C21
1119  8C21 3A 39 89     2 ld a,(Ctrl_3)
1120  8C24 CB 57        	bit 2,a
1121  8C26 28 07        	jr z,3F
1122  8C28
1123  8C28              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1124  8C28              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1125  8C28
1126  8C28 CB 97        6 res 2,a
1127  8C2A CB DF        	set 3,a
1128  8C2C 32 39 89     	ld (Ctrl_3),a
1129  8C2F
1130  8C2F CD A8 93     3 call Draw
1131  8C32 CD A3 8B     	call Guarda_movimiento_masticado
1132  8C35 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1133  8C38
1134  8C38              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1135  8C38              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1136  8C38
1137  8C38 CD 3C 8C     	call Convierte_guia_en_fantasma
1138  8C3B C9           	ret
1139  8C3C
1140  8C3C              ; --------------------------------------------------------------------------------------------------------------
1141  8C3C              ;
1142  8C3C              ;	28/12/23
1143  8C3C              ;
1144  8C3C
1145  8C3C 3A 39 89     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1146  8C3F CB 5F        	bit 3,a
1147  8C41 C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1148  8C42
1149  8C42              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1150  8C42
1151  8C42 21 16 89     	ld hl,Ctrl_2
1152  8C45 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1153  8C47
1154  8C47              ;	Reinicializamos el (Puntero_de_almacen_de_mov_masticados).
1155  8C47
1156  8C47 21 D0 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
1157  8C4A 22 01 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1158  8C4D
1159  8C4D              ;	Reinicializamos el (Contador_de_mov_masticados).
1160  8C4D
1161  8C4D 21 00 00     	ld hl,0
1162  8C50 22 03 89     	ld (Contador_de_mov_masticados),hl
1163  8C53
1164  8C53 C9           	ret
1165  8C54
1166  8C54              ; --------------------------------------------------------------------------------------------------------------
1167  8C54              ;
1168  8C54              ;	21/12/23
1169  8C54              ;
1170  8C54              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1171  8C54              ;
1172  8C54              ;		IY contiene (Puntero_objeto).
1173  8C54              ;		IX contiene el puntero de impresión.
1174  8C54              ;		HL contiene la dirección de la rutina de impresión.
1175  8C54              ;
1176  8C54              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1177  8C54              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1178  8C54              ;	Decrementa el (Contador_de_mov_masticados)
1179  8C54              ;
1180  8C54              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1181  8C54              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1182  8C54              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1183  8C54
1184  8C54
1185  8C54 ED 73 2B 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1186  8C58 ED 7B 01 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1187  8C5C
1188  8C5C FD E1        	pop iy
1189  8C5E DD E1        	pop ix
1190  8C60 E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1191  8C61
1192  8C61 ED 73 01 89  	ld (Puntero_de_almacen_de_mov_masticados),sp
1193  8C65 ED 7B 2B 89  	ld sp,(Stack)
1194  8C69
1195  8C69 CD 16 71     	call Guarda_foto_registros
1196  8C6C
1197  8C6C E5           	push hl
1198  8C6D
1199  8C6D 2A 03 89     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1200  8C70 23           	inc hl
1201  8C71 22 03 89     	ld (Contador_de_mov_masticados),hl
1202  8C74
1203  8C74              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1204  8C74
1205  8C74 ED 4B 18 89  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1206  8C78 A7           	and a
1207  8C79 ED 42        	sbc hl,bc
1208  8C7B CC 3C 8C     	call z,Convierte_guia_en_fantasma
1209  8C7E
1210  8C7E E1           	pop hl
1211  8C7F
1212  8C7F C9           	ret
1213  8C80
1214  8C80              ; --------------------------------------------------------------------------------------------------------------
1215  8C80              ;
1216  8C80              ;	19/9/23
1217  8C80
1218  8C80 21 D5 88     Prepara_var_pintado ld hl,Filas
1219  8C83 11 F5 88     	ld de,Variables_de_pintado
1220  8C86 01 08 00     	ld bc,8
1221  8C89 ED B0        	ldir
1222  8C8B C9           	ret
1223  8C8C
1224  8C8C              ; --------------------------------------------------------------------------------------------------------------
1225  8C8C
1226  8C8C 21 F5 88     Repone_pintar ld hl,Variables_de_pintado
1227  8C8F 11 D5 88     	ld de,Filas
1228  8C92 01 08 00     	ld bc,8
1229  8C95 ED B0        	ldir
1230  8C97 C9           	ret
1231  8C98
1232  8C98              ; *************************************************************************************************************************************************************
1233  8C98              ;
1234  8C98              ; 8/1/23
1235  8C98              ;
1236  8C98              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1237  8C98              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1238  8C98              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1239  8C98
1240  8C98              ; Destruye HL y DE !!!!!
1241  8C98
1242  8C98              Inicia_punteros_de_cajas
1243  8C98
1244  8C98 21 6C 85     	ld hl,Indice_de_cajas
1245  8C9B CD 30 8D         call Extrae_address
1246  8C9E 22 1D 89         ld (Puntero_store_caja),hl
1247  8CA1 21 6E 85     	ld hl,Indice_de_cajas+2
1248  8CA4 22 21 89     	ld (Indice_restore_caja),hl
1249  8CA7 CD 30 8D     	call Extrae_address
1250  8CAA 22 1F 89     	ld (Puntero_restore_caja),hl
1251  8CAD C9               ret
1252  8CAE
1253  8CAE              ; *************************************************************************************************************************************************************
1254  8CAE              ;
1255  8CAE              ; 8/1/23
1256  8CAE              ;
1257  8CAE              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1258  8CAE
1259  8CAE 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1260  8CB1 22 3B 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1261  8CB4 C9           	ret
1262  8CB5 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1263  8CB8 22 3D 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1264  8CBB C9           	ret
1265  8CBC
1266  8CBC              ; -------------------------------------------------------------------------------------------------------------
1267  8CBC              ;
1268  8CBC              ; 21/9/23
1269  8CBC              ;
1270  8CBC
1271  8CBC              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1272  8CBC
1273  8CBC              Limpia_album_Amadeus
1274  8CBC
1275  8CBC 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1276  8CBF 7E           	ld a,(hl)
1277  8CC0 A7           	and a
1278  8CC1 C8           	ret z
1279  8CC2
1280  8CC2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1281  8CC5 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1282  8CC8 01 0B 00     	ld bc,11
1283  8CCB AF           	xor a
1284  8CCC 77           	ld (hl),a
1285  8CCD ED B0        	ldir
1286  8CCF
1287  8CCF 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1288  8CD2 22 37 89     	ld (End_Snapshot_Amadeus),hl
1289  8CD5
1290  8CD5 C9           	ret
1291  8CD6
1292  8CD6 21 EF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1293  8CD9 11 F0 88     	ld de,Variables_de_borrado+1
1294  8CDC 01 05 00     	ld bc,5
1295  8CDF AF           	xor a
1296  8CE0 77           	ld (hl),a
1297  8CE1 ED B0        	ldir
1298  8CE3 C9           	ret
1299  8CE4
1300  8CE4              ; -------------------------------------------------------------------------------------------------------------
1301  8CE4              ;
1302  8CE4              ; 8/9/23
1303  8CE4              ;
1304  8CE4
1305  8CE4              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1306  8CE4              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1307  8CE4
1308  8CE4              Calcula_numero_de_malotes
1309  8CE4
1310  8CE4 21 00 70     	ld hl,Album_de_fotos
1311  8CE7 EB           	ex de,hl
1312  8CE8 2A 31 89     	ld hl,(Stack_snapshot)
1313  8CEB
1314  8CEB 06 00        	ld b,0
1315  8CED 7D           	ld a,l
1316  8CEE 93           	sub e
1317  8CEF 28 07        	jr z,1F
1318  8CF1
1319  8CF1              ; Nº de malotes no es "0".
1320  8CF1
1321  8CF1 D6 06        2 sub 6
1322  8CF3 04           	inc b
1323  8CF4 A7           	and a
1324  8CF5 20 FA        	jr nz,2B
1325  8CF7 78           	ld a,b
1326  8CF8
1327  8CF8 32 26 89     1 ld (Numero_de_malotes),a
1328  8CFB C9           	ret
1329  8CFC
1330  8CFC              ; -------------------------------------------------------------------------------------------------------------
1331  8CFC              ;
1332  8CFC              ; 8/9/23
1333  8CFC              ;
1334  8CFC
1335  8CFC              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1336  8CFC              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1337  8CFC
1338  8CFC              Calcula_malotes_Amadeus
1339  8CFC
1340  8CFC 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1341  8CFF EB           	ex de,hl
1342  8D00 2A 37 89     	ld hl,(End_Snapshot_Amadeus)
1343  8D03
1344  8D03 7C           	ld a,h
1345  8D04 A7           	and a
1346  8D05 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1347  8D07
1348  8D07 06 00        	ld b,0
1349  8D09 7D           	ld a,l
1350  8D0A 93           	sub e
1351  8D0B 28 07        	jr z,1F
1352  8D0D
1353  8D0D              ; Nº de malotes no es "0".
1354  8D0D
1355  8D0D D6 06        2 sub 6
1356  8D0F 04           	inc b
1357  8D10 A7           	and a
1358  8D11 20 FA        	jr nz,2B
1359  8D13 78           	ld a,b
1360  8D14
1361  8D14 32 26 89     1 ld (Numero_de_malotes),a
1362  8D17 C9           	ret
1363  8D18
1364  8D18              ; -------------------------------------------------------------------------------------------------------------
1365  8D18              ;
1366  8D18              ; 28/2/23
1367  8D18              ;
1368  8D18
1369  8D18              Calcula_numero_de_disparotes
1370  8D18
1371  8D18 21 56 70     	ld hl,Album_de_fotos_disparos
1372  8D1B EB           	ex de,hl
1373  8D1C 2A 35 89     	ld hl,(End_Snapshot_disparos)
1374  8D1F
1375  8D1F 06 00        	ld b,0
1376  8D21 7D           	ld a,l
1377  8D22 93           	sub e
1378  8D23 28 07        	jr z,1F
1379  8D25
1380  8D25              ; Nº de malotes no es "0".
1381  8D25
1382  8D25 D6 06        2 sub 6
1383  8D27 04           	inc b
1384  8D28 A7           	and a
1385  8D29 20 FA        	jr nz,2B
1386  8D2B 78           	ld a,b
1387  8D2C
1388  8D2C 32 3A 89     1 ld (Numero_de_disparotes),a
1389  8D2F C9           	ret
1390  8D30
1391  8D30              ; *************************************************************************************************************************************************************
1392  8D30              ;
1393  8D30              ; 20/10/22
1394  8D30              ;
1395  8D30              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1396  8D30              ;
1397  8D30              ; Destruye el puntero y DE !!!!!
1398  8D30
1399  8D30 5E           Extrae_address ld e,(hl)
1400  8D31 23           	inc hl
1401  8D32 56           	ld d,(hl)
1402  8D33 2B           	dec hl
1403  8D34 EB           	ex de,hl
1404  8D35 C9           	ret
1405  8D36
1406  8D36              ; *************************************************************************************************************************************************************
1407  8D36              ;
1408  8D36              ;	7/2/23
1409  8D36              ;
1410  8D36              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1411  8D36              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1412  8D36              ;
1413  8D36              ;   Destruye HL y BC !!!!!,
1414  8D36              ;
1415  8D36              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1416  8D36              ;					"0" ..... Izquierda.
1417  8D36
1418  8D36              Inicia_Puntero_objeto
1419  8D36
1420  8D36 3A E9 88     	ld a,(Cuad_objeto)
1421  8D39 E6 01        	and 1
1422  8D3B F5           	push af
1423  8D3C CC 5A 8D     	call z,Inicia_puntero_objeto_izq
1424  8D3F F1           	pop af
1425  8D40 28 2B        	jr z,1F
1426  8D42 CD 47 8D     	call Inicia_puntero_objeto_der
1427  8D45 18 26        	jr 1F
1428  8D47
1429  8D47              ; Arrancamos desde la parte izquierda de la pantalla.
1430  8D47              ; Iniciamos (Indice_Sprite_der).
1431  8D47
1432  8D47 2A DF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1433  8D4A 22 E3 88     	ld (Puntero_DESPLZ_der),hl
1434  8D4D CD 30 8D     	call Extrae_address
1435  8D50 22 D9 88     	ld (Puntero_objeto),hl
1436  8D53
1437  8D53 2A E1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1438  8D56 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
1439  8D59 C9           	ret
1440  8D5A
1441  8D5A              ; Arrancamos desde la parte derecha de la pantalla.
1442  8D5A              ; Iniciamos (Indice_Sprite_izq).
1443  8D5A
1444  8D5A 2A E1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1445  8D5D 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
1446  8D60 CD 30 8D     	call Extrae_address
1447  8D63 22 D9 88     	ld (Puntero_objeto),hl
1448  8D66
1449  8D66 2A DF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1450  8D69 22 E3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1451  8D6C C9           	ret
1452  8D6D
1453  8D6D              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1454  8D6D
1455  8D6D 21 40 83     1 ld hl,Amadeus
1456  8D70 ED 4B D9 88  	ld bc,(Puntero_objeto)
1457  8D74 B7 ED 42     	sub hl,bc
1458  8D77 C0           	ret nz
1459  8D78 21 05 89     	ld hl,Ctrl_0
1460  8D7B CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1461  8D7D C9           	ret 												; _de nuestra nave en los extremos.
1462  8D7E
1463  8D7E              ; *************************************************************************************************************************************************************
1464  8D7E              ;
1465  8D7E              ;	21/12/23
1466  8D7E              ;
1467  8D7E              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1468  8D7E              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1469  8D7E
1470  8D7E              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1471  8D7E              ;	_de la 2ª y 3ª entidad respectivamente.
1472  8D7E
1473  8D7E              Store_Restore_cajas
1474  8D7E
1475  8D7E E5           	push hl
1476  8D7F D5           	push de
1477  8D80 C5            	push bc
1478  8D81
1479  8D81              ;	STORE !!!!!
1480  8D81              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1481  8D81
1482  8D81 21 D5 88     	ld hl,Filas
1483  8D84 ED 5B 1D 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1484  8D88 01 43 00     	ld bc,67
1485  8D8B ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1486  8D8D
1487  8D8D              ; 	Entidad_sospechosa. 20/4/23
1488  8D8D
1489  8D8D 3A EE 88     	ld a,(Impacto)
1490  8D90 A7           	and a
1491  8D91 28 0C        	jr z,1F
1492  8D93
1493  8D93 2A 1D 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1494  8D96 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1495  8D99 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1496  8D9A ED 4A        	adc hl,bc 											; _ "0" más adelante.
1497  8D9C 22 40 89     	ld (Entidad_sospechosa_de_colision),hl
1498  8D9F
1499  8D9F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1500  8D9F
1501  8D9F 2A 1F 89     1 ld hl,(Puntero_restore_caja)
1502  8DA2 7E           	ld a,(hl)
1503  8DA3 A7           	and a
1504  8DA4 F5           	push af
1505  8DA5 28 08        	jr z,2F
1506  8DA7
1507  8DA7 11 D5 88     	ld de,Filas
1508  8DAA 01 43 00     	ld bc,67
1509  8DAD ED B0        	ldir
1510  8DAF
1511  8DAF CD CB 8D     2 call Incrementa_punteros_de_cajas
1512  8DB2
1513  8DB2 F1           	pop af
1514  8DB3 28 EA        	jr z,1B
1515  8DB5
1516  8DB5 C1           	pop bc
1517  8DB6 D1           	pop de
1518  8DB7 E1           	pop hl
1519  8DB8
1520  8DB8 C9           	ret
1521  8DB9
1522  8DB9              ; **************************************************************************************************
1523  8DB9              ;
1524  8DB9              ;	21/12/23
1525  8DB9              ;
1526  8DB9              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1527  8DB9
1528  8DB9 E5           Restore_entidad push hl
1529  8DBA D5           	push de
1530  8DBB C5            	push bc
1531  8DBC
1532  8DBC 2A 1D 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1533  8DBF 11 D5 88     	ld de,Filas
1534  8DC2 01 43 00     	ld bc,67
1535  8DC5 ED B0        	ldir
1536  8DC7
1537  8DC7 C1           	pop bc
1538  8DC8 D1           	pop de
1539  8DC9 E1           	pop hl
1540  8DCA C9           	ret
1541  8DCB
1542  8DCB              ; **************************************************************************************************
1543  8DCB              ;
1544  8DCB              ;	08/05/23
1545  8DCB              ;
1546  8DCB              ;	Incrementamos los dos punteros de entidades. (+1).
1547  8DCB
1548  8DCB              Incrementa_punteros_de_cajas
1549  8DCB
1550  8DCB 2A 1F 89     	ld hl,(Puntero_restore_caja)
1551  8DCE 22 1D 89     	ld (Puntero_store_caja),hl
1552  8DD1 2A 21 89     	ld hl,(Indice_restore_caja)
1553  8DD4 23           	inc hl
1554  8DD5 23           	inc hl
1555  8DD6 22 21 89     	ld (Indice_restore_caja),hl
1556  8DD9 CD 30 8D         call Extrae_address
1557  8DDC 22 1F 89         ld (Puntero_restore_caja),hl
1558  8DDF C9               ret
1559  8DE0
1560  8DE0              ; **************************************************************************************************
1561  8DE0              ;
1562  8DE0              ;	21/12/23
1563  8DE0              ;
1564  8DE0              ;	Restore_Amadeus
1565  8DE0              ;
1566  8DE0              ;	Cargamos en DRAW los parámetros de Amadeus.
1567  8DE0              ;
1568  8DE0
1569  8DE0 E5           Restore_Amadeus	push hl
1570  8DE1 D5           	push de
1571  8DE2 C5            	push bc
1572  8DE3 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1573  8DE6 11 D5 88     	ld de,Filas
1574  8DE9 01 43 00     	ld bc,67
1575  8DEC ED B0        	ldir
1576  8DEE C1           	pop bc
1577  8DEF D1           	pop de
1578  8DF0 E1           	pop hl
1579  8DF1 C9           	ret
1580  8DF2
1581  8DF2              ; *************************************************************************************************************************************************************
1582  8DF2              ;
1583  8DF2              ;	21/12/23
1584  8DF2              ;
1585  8DF2              ;	Store_Amadeus
1586  8DF2              ;
1587  8DF2              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1588  8DF2              ;
1589  8DF2              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1590  8DF2              ;
1591  8DF2              ;	DESTRUYE: HL y BC y DE.
1592  8DF2
1593  8DF2 21 D5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1594  8DF5 01 43 00     	ld bc,67
1595  8DF8 ED B0        	ldir
1596  8DFA C9           	ret
1597  8DFB
1598  8DFB              ; -----------------------------------------------------------
1599  8DFB              ;
1600  8DFB              ;	21/12/23
1601  8DFB              ;
1602  8DFB              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1603  8DFB              ;
1604  8DFB              ;	Destruye: HL,BC,DE,A
1605  8DFB
1606  8DFB 21 D5 88     Borra_datos_entidad ld hl,Filas
1607  8DFE 01 42 00     	ld bc,66
1608  8E01 AF           	xor a
1609  8E02 77           	ld (hl),a
1610  8E03 11 D6 88     	ld de,Filas+1
1611  8E06 ED B0        	ldir
1612  8E08 C9           	ret
1613  8E09
1614  8E09              ; -----------------------------------------------------------
1615  8E09
1616  8E09              ; Teclado.
1617  8E09
1618  8E09 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1619  8E0B DB FE        	in a,($fe)
1620  8E0D E6 01        	and $01
1621  8E0F 28 02        	jr z,1f
1622  8E11 18 F6        	jr Pulsa_ENTER
1623  8E13 C9           1 ret
1624  8E14
1625  8E14              ; **************************************************************************************************
1626  8E14              ;
1627  8E14              ; Temporización.
1628  8E14
1629  8E14              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1630  8E14              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1631  8E14              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1632  8E14              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1633  8E14
1634  8E14              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1635  8E14              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1636  8E14              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1637  8E14
1638  8E14              ; A partir de $4f61 no hace falta DELAY.
1639  8E14
1640  8E14              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1641  8E14
1642  8E14 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1643  8E17 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1644  8E18 78           	LD A,B
1645  8E19 A7           	AND A
1646  8E1A 20 FB        	JR NZ,wait
1647  8E1C C9           	RET
1648  8E1D
1649  8E1D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1650  8E1D              ;
1651  8E1D              ;	5/3/23
1652  8E1D              ;
1653  8E1D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1654  8E1D
1655  8E1D              Movimiento_Amadeus
1656  8E1D
1657  8E1D              ; Disparo.
1658  8E1D
1659  8E1D 3A 50 89     	ld a,(Disparo_Amadeus)
1660  8E20 A7           	and a
1661  8E21 20 02        	jr nz,1F
1662  8E23 18 15        	jr 2F
1663  8E25
1664  8E25 3E F7        1 ld a,$f7													; "5" para disparar.
1665  8E27 DB FE        	in a,($fe)
1666  8E29 E6 10        	and $10
1667  8E2B
1668  8E2B F5           	push af
1669  8E2C CC D4 8E     	call z,Genera_disparo
1670  8E2F F1           	pop af
1671  8E30 20 08        	jr nz,2F
1672  8E32
1673  8E32 3A 50 89     	ld a,(Disparo_Amadeus)
1674  8E35 EE 01        	xor 1
1675  8E37 32 50 89     	ld (Disparo_Amadeus),a
1676  8E3A 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1677  8E3C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1678  8E3E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1679  8E40 CC 91 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1680  8E43
1681  8E43 3E F7        	ld a,$f7
1682  8E45 DB FE        	in a,($fe)
1683  8E47 E6 01        	and $01
1684  8E49 C8           	ret z
1685  8E4A
1686  8E4A 3E F7        	ld a,$f7
1687  8E4C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1688  8E4E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1689  8E50 CC 73 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1690  8E53 C9           	ret
1691  8E54
1692  8E54              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1693  8E54              ;
1694  8E54              ;	Rutina provisional para que los malotes cagen balas.
1695  8E54
1696  8E54              Detecta_disparo_entidad
1697  8E54
1698  8E54 3A 53 89     	ld a,(Disparo_entidad)
1699  8E57 A7           	and a
1700  8E58 C8           	ret z
1701  8E59
1702  8E59              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1703  8E59
1704  8E59              ;	ld a,$7f				; Detecta SPACE.
1705  8E59              ;	in a,($fe)
1706  8E59              ;	and 1
1707  8E59              ;	ret nz
1708  8E59
1709  8E59 CD D4 8E     	call Genera_disparo
1710  8E5C C9           	ret
1711  8E5D
1712  8E5D              ; ----------------------------------------------------------------------
1713  8E5D              ;
1714  8E5D              ;	8/9/23
1715  8E5D
1716  8E5D 2A 37 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1717  8E60 2B            	dec hl
1718  8E61 7E           	ld a,(hl)
1719  8E62 A7           	and a
1720  8E63 C8           	ret z										; Salimos si es álbum está vacío.
1721  8E64
1722  8E64 11 F4 88     	ld de,Variables_de_borrado+5
1723  8E67 01 06 00     	ld bc,6
1724  8E6A ED B8        	lddr
1725  8E6C C9           	ret
1726  8E6D
1727  8E6D              ; ----------------------------------------------------------------------
1728  8E6D              ;
1729  8E6D              ;	9/9/23
1730  8E6D
1731  8E6D              Repone_datos_de_borrado_Amadeus
1732  8E6D
1733  8E6D 21 EF 88     	ld hl,Variables_de_borrado
1734  8E70 11 AC 70     	ld de,Album_de_fotos_Amadeus
1735  8E73 01 06 00     	ld bc,6
1736  8E76 ED B0        	ldir
1737  8E78
1738  8E78 EB           	ex de,hl
1739  8E79 22 37 89     	ld (End_Snapshot_Amadeus),hl
1740  8E7C
1741  8E7C C9           	ret
1742  8E7D
1743  8E7D              ; ----------------------------------------------------------------------
1744  8E7D              ;
1745  8E7D              ;	27/10/23
1746  8E7D              ;
1747  8E7D
1748  8E7D              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1749  8E7D              ;	_ Album_de_fotos correspondiente.
1750  8E7D
1751  8E7D              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1752  8E7D              ;	_ durante el proceso de escritura.
1753  8E7D
1754  8E7D              Repone_datos_de_borrado
1755  8E7D
1756  8E7D F3           	di
1757  8E7E ED 5B 31 89  	ld de,(Stack_snapshot)
1758  8E82 21 EF 88     	ld hl,Variables_de_borrado
1759  8E85 01 06 00     	ld bc,6
1760  8E88 ED B0        	ldir
1761  8E8A FB           	ei
1762  8E8B
1763  8E8B EB           	ex de,hl
1764  8E8C 22 31 89     	ld (Stack_snapshot),hl
1765  8E8F
1766  8E8F C9           	ret
1767  8E90
1768  8E90              ; --------------------------------------------------------------------------------------
1769  8E90
1770  8E90              Pinta_Amadeus
1771  8E90
1772  8E90 CD FC 8C        	call Calcula_malotes_Amadeus
1773  8E93 CD 38 97     	call Extrae_foto_Amadeus
1774  8E96 CD BC 8C     	call Limpia_album_Amadeus
1775  8E99
1776  8E99 C9           	ret
1777  8E9A
1778  8E9A              Pinta_entidades
1779  8E9A
1780  8E9A              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1781  8E9A
1782  8E9A 3A 39 89     	ld a,(Ctrl_3)
1783  8E9D CB 47        	bit 0,a
1784  8E9F C8           	ret z
1785  8EA0
1786  8EA0 CD E4 8C     	call Calcula_numero_de_malotes
1787  8EA3 CD B6 96     	call Extrae_foto_entidades
1788  8EA6 CD 77 71     	call Limpia_y_reinicia_Stack_Snapshot
1789  8EA9
1790  8EA9 C9           	ret
1791  8EAA
1792  8EAA              ; -----------------------------------------------------------------------------------
1793  8EAA              ;
1794  8EAA              ;	10/12/23
1795  8EAA              ;
1796  8EAA              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1797  8EAA
1798  8EAA              Actualiza_relojes
1799  8EAA
1800  8EAA 3A 39 89     	ld a,(Ctrl_3)
1801  8EAD CB 47        	bit 0,a
1802  8EAF C8           	ret z 						;	Salimos si no hemos pintado unidades.
1803  8EB0
1804  8EB0 21 4B 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1805  8EB3 34           	inc (hl)
1806  8EB4
1807  8EB4 34           	inc (hl)
1808  8EB5 35           	dec (hl)
1809  8EB6 C0           	ret nz
1810  8EB7
1811  8EB7 21 4C 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1812  8EBA 34           	inc (hl)
1813  8EBB C9           	ret
1814  8EBC
1815  8EBC              ; ---------------------------------------------------------------
1816  8EBC              ;
1817  8EBC              ;	21/12/23
1818  8EBC
1819  8EBC              Guarda_parametros_DRAW
1820  8EBC
1821  8EBC 21 D5 88     	ld hl,Filas
1822  8EBF 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1823  8EC2 01 43 00     	ld bc,67
1824  8EC5 ED B0        	ldir
1825  8EC7 C9           	ret
1826  8EC8
1827  8EC8              Recupera_parametros_DRAW
1828  8EC8
1829  8EC8 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1830  8ECB 11 D5 88     	ld de,Filas
1831  8ECE 01 43 00     	ld bc,67
1832  8ED1 ED B0        	ldir
1833  8ED3 C9           	ret
1834  8ED4
1835  8ED4              ; ---------------------------------------------------------------
1836  8ED4
1837  8ED4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8ED4              ; ******************************************************************************************************************************************************************************************
   2+ 8ED4              ;
   3+ 8ED4              ;   21/07/23
   4+ 8ED4              ;
   5+ 8ED4              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8ED4              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8ED4              ;
   8+ 8ED4              ;
   9+ 8ED4              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8ED4              ;
  11+ 8ED4              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8ED4              ;               _ hacen las entidades hacia abajo.
  13+ 8ED4              ;
  14+ 8ED4              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8ED4              ;
  16+ 8ED4              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8ED4              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8ED4              ;
  19+ 8ED4              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8ED4              ;           _ la bala.
  21+ 8ED4              ;
  22+ 8ED4              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8ED4              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8ED4              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8ED4              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8ED4              ;           _ en el momento de generarse la bala)).
  27+ 8ED4
  28+ 8ED4              Genera_disparo
  29+ 8ED4
  30+ 8ED4              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8ED4              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8ED4              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8ED4              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8ED4              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8ED4              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8ED4              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8ED4
  38+ 8ED4              ; Exclusiones:
  39+ 8ED4
  40+ 8ED4 3A ED 88         ld a,(Vel_down)
  41+ 8ED7 47               ld b,a
  42+ 8ED8 3A 4A 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EDB B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EDC D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EDD 3A 12 89         ld a,(Columnas)
  46+ 8EE0 47               ld b,a
  47+ 8EE1 3A D6 88         ld a,(Columns)
  48+ 8EE4 B8               cp b
  49+ 8EE5 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EE6
  51+ 8EE6              ; ----- ----- -----
  52+ 8EE6
  53+ 8EE6 3A 05 89         ld a,(Ctrl_0)
  54+ 8EE9 CB 77            bit 6,a
  55+ 8EEB 20 06            jr nz,14F
  56+ 8EED
  57+ 8EED 3A DC 88         ld a,(Coordenada_y)
  58+ 8EF0 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EF2 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EF3
  61+ 8EF3 21 00 80     14 ld hl,Indice_disparo
  62+ 8EF6 3A DD 88         ld a,(CTRL_DESPLZ)
  63+ 8EF9 4F               ld c,a
  64+ 8EFA 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EFC              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EFC              ;                                            ""        ""       "f9", B="1"
  67+ 8EFC              ;                                            ""        ""       "fb", B="2"
  68+ 8EFC              ;                                            ""        ""       "fb", B="3"
  69+ 8EFC A7               and a
  70+ 8EFD 28 10            jr z,1F
  71+ 8EFF E6 01            and 1
  72+ 8F01 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F02
  74+ 8F02 79               ld a,c
  75+ 8F03 16 F9            ld d,$f9
  76+ 8F05 23           2 inc hl
  77+ 8F06 23               inc hl
  78+ 8F07 04               inc b
  79+ 8F08 BA               cp d
  80+ 8F09 28 04            jr z,1F
  81+ 8F0B 14               inc d
  82+ 8F0C 14               inc d
  83+ 8F0D 18 F6            jr 2B
  84+ 8F0F
  85+ 8F0F CD 30 8D     1 call Extrae_address
  86+ 8F12 E5               push hl
  87+ 8F13 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F15 DD 21 7E 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F19
  90+ 8F19              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F19              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F19
  93+ 8F19 3A 05 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F1C CB 77            bit 6,a
  95+ 8F1E 20 04            jr nz,19F
  96+ 8F20
  97+ 8F20 AF               xor a
  98+ 8F21 32 53 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F24
 100+ 8F24 3A E9 88     19 ld a,(Cuad_objeto)
 101+ 8F27 FE 02            cp 2
 102+ 8F29 38 66            jr c,3F
 103+ 8F2B 28 64            jr z,3F
 104+ 8F2D
 105+ 8F2D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F2D
 107+ 8F2D E6 01            and 1
 108+ 8F2F 28 30            jr z,4F
 109+ 8F31
 110+ 8F31              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F31              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F31              ;
 113+ 8F31              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F31              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F31              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F31
 117+ 8F31 2A D7 88     	ld hl,(Posicion_actual)
 118+ 8F34
 119+ 8F34              ;   Amadeus o entidad ???.
 120+ 8F34
 121+ 8F34 3A 05 89         ld a,(Ctrl_0)
 122+ 8F37 CB 77            bit 6,a
 123+ 8F39 28 0A            jr z,8F
 124+ 8F3B
 125+ 8F3B              ; 	Dispara Amadeus.
 126+ 8F3B
 127+ 8F3B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F3D CD A7 96         call PreviousScan
 129+ 8F40 CD A7 96         call PreviousScan
 130+ 8F43
 131+ 8F43              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F43              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F43              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F43              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F43
 136+ 8F43 18 11            jr 10F
 137+ 8F45
 138+ 8F45              ; 	Dispara Entidad.
 139+ 8F45
 140+ 8F45 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F48              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F48
 143+ 8F48              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F48              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F48
 146+ 8F48 C5               push bc
 147+ 8F49 06 10            ld b,16
 148+ 8F4B CD 98 96     9 call NextScan
 149+ 8F4E 10 FB            djnz 9B
 150+ 8F50 C1               pop bc
 151+ 8F51 CD BB 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F54 18 06            jr 17F
 153+ 8F56
 154+ 8F56              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F56              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F56              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F56              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F56
 159+ 8F56 CD BB 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F59 CD 30 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F5C              ;                                                      ; _al generar el disparo.
 162+ 8F5C
 163+ 8F5C              ; 	LLegados a este punto tendremos:
 164+ 8F5C              ;
 165+ 8F5C              ;       Puntero_objeto_disparo en IY.
 166+ 8F5C              ;       Rutinas_de_impresion en IX.
 167+ 8F5C              ;       Puntero_de_impresion en HL.
 168+ 8F5C              ;       Impacto/Dirección en BC.
 169+ 8F5C
 170+ 8F5C CD C3 8F     17 call Almacena_disparo
 171+ 8F5F 18 52            jr 6F                                             ; RET.
 172+ 8F61
 173+ 8F61              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F61              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F61              ;
 176+ 8F61              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F61              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F61              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F61
 180+ 8F61 2A D7 88     4 ld hl,(Posicion_actual)
 181+ 8F64
 182+ 8F64              ;   Amadeus o entidad ???.
 183+ 8F64
 184+ 8F64 3A 05 89         ld a,(Ctrl_0)
 185+ 8F67 CB 77            bit 6,a
 186+ 8F69 28 0A            jr z,11F
 187+ 8F6B
 188+ 8F6B              ; 	Dispara Amadeus.
 189+ 8F6B
 190+ 8F6B 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F6D CD A7 96         call PreviousScan
 192+ 8F70 CD A7 96         call PreviousScan
 193+ 8F73
 194+ 8F73              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F73              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F73              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F73              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F73
 199+ 8F73 18 11            jr 13F
 200+ 8F75
 201+ 8F75              ; 	Dispara Entidad.
 202+ 8F75
 203+ 8F75 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F78              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F78
 206+ 8F78              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F78              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F78
 209+ 8F78 C5               push bc
 210+ 8F79 06 10            ld b,16
 211+ 8F7B CD 98 96     12 call NextScan
 212+ 8F7E 10 FB            djnz 12B
 213+ 8F80 C1               pop bc
 214+ 8F81
 215+ 8F81 CD B4 8F         call Ajusta_disparo_parte_derecha
 216+ 8F84 18 06            jr 18F
 217+ 8F86
 218+ 8F86              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F86              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F86              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F86              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F86
 223+ 8F86 CD B4 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F89 CD 30 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F8C              ;                                                       ; _al generar el disparo.
 226+ 8F8C
 227+ 8F8C              ; LLegados a este punto tendremos:
 228+ 8F8C              ;
 229+ 8F8C              ;       Puntero_objeto_disparo en IY.
 230+ 8F8C              ;       Rutinas_de_impresion en IX.
 231+ 8F8C              ;       Puntero_de_impresion en HL.
 232+ 8F8C              ;       Impacto/Dirección en BC.
 233+ 8F8C
 234+ 8F8C CD C3 8F     18 call Almacena_disparo
 235+ 8F8F 18 22            jr 6F                                               ; RET.
 236+ 8F91
 237+ 8F91              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F91
 239+ 8F91 28 11        3 jr z,5F
 240+ 8F93
 241+ 8F93              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F93              ;
 243+ 8F93              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F93              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F93              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F93              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F93
 248+ 8F93              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F93              ;	   ""        ""       "f9", B="1"
 250+ 8F93              ;	   ""        ""       "fb", B="2"
 251+ 8F93              ; 	   ""        ""       "fb", B="3"
 252+ 8F93
 253+ 8F93 2A D7 88     	ld hl,(Posicion_actual)
 254+ 8F96 CD 98 96     	call NextScan
 255+ 8F99
 256+ 8F99              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F99              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F99              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F99              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F99
 261+ 8F99 CD BB 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F9C
 263+ 8F9C              ; 	No se produce impacto. B="$80"
 264+ 8F9C              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F9C
 266+ 8F9C 01 80 80         ld bc,$8080
 267+ 8F9F
 268+ 8F9F              ; 	LLegados a este punto tendremos:
 269+ 8F9F              ;
 270+ 8F9F              ;       Puntero_objeto_disparo en IY.
 271+ 8F9F              ;       Rutinas_de_impresion en IX.
 272+ 8F9F              ;       Puntero_de_impresion en HL.
 273+ 8F9F              ;       Impacto/Dirección en BC.
 274+ 8F9F
 275+ 8F9F CD C3 8F         call Almacena_disparo
 276+ 8FA2 18 0F            jr 6F                                           ; RET.
 277+ 8FA4
 278+ 8FA4              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FA4              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FA4              ;
 281+ 8FA4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FA4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FA4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FA4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FA4
 286+ 8FA4 2A D7 88     5 ld hl,(Posicion_actual)
 287+ 8FA7 CD 98 96     	call NextScan
 288+ 8FAA
 289+ 8FAA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FAA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FAA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FAA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FAA
 294+ 8FAA CD B4 8F         call Ajusta_disparo_parte_derecha
 295+ 8FAD
 296+ 8FAD              ; 	No se produce impacto. B="$80"
 297+ 8FAD              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FAD
 299+ 8FAD 01 80 80     15 ld bc,$8080
 300+ 8FB0
 301+ 8FB0              ; 	LLegados a este punto tendremos:
 302+ 8FB0              ;
 303+ 8FB0              ;       Puntero_objeto_disparo en IY.
 304+ 8FB0              ;       Rutinas_de_impresion en IX.
 305+ 8FB0              ;       Puntero_de_impresion en HL.
 306+ 8FB0              ;       Impacto/Dirección en BC.
 307+ 8FB0
 308+ 8FB0 CD C3 8F         call Almacena_disparo
 309+ 8FB3
 310+ 8FB3 C9           6 ret
 311+ 8FB4
 312+ 8FB4              ; ----------------------------------------------------------------
 313+ 8FB4              ;
 314+ 8FB4              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FB4              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FB4              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FB4
 318+ 8FB4 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FB5 FE 02            cp 2
 320+ 8FB7 38 01            jr c,1F
 321+ 8FB9 23               inc hl
 322+ 8FBA C9           1 ret
 323+ 8FBB
 324+ 8FBB 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FBC FE 01        	cp 1
 326+ 8FBE 20 01        	jr nz,1F
 327+ 8FC0 2B           	dec hl
 328+ 8FC1 2B           1 dec hl
 329+ 8FC2 C9               ret
 330+ 8FC3
 331+ 8FC3              ; ----------------------------------------------------------------
 332+ 8FC3              ;
 333+ 8FC3              ;   25/02/23
 334+ 8FC3              ;
 335+ 8FC3              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FC3              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FC3              ;
 338+ 8FC3              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FC3              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FC3
 341+ 8FC3              Almacena_disparo
 342+ 8FC3
 343+ 8FC3 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FC4 F1               pop af
 345+ 8FC5 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FC6
 347+ 8FC6 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FC7 E6 01            and 1
 349+ 8FC9 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FCB              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FCB              ; 	Dispara AMADEUS.
 352+ 8FCB
 353+ 8FCB              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FCB              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FCB              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FCB              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FCB
 358+ 8FCB C5               push bc
 359+ 8FCC 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FCF 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FD2 A7               and a
 362+ 8FD3 ED 42            sbc hl,bc
 363+ 8FD5 CC B5 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FD8 C1               pop bc
 365+ 8FD9 28 54            jr z,4F
 366+ 8FDB
 367+ 8FDB 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FDE 23               inc hl
 369+ 8FDF 23               inc hl
 370+ 8FE0 22 3D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FE3              ;                                                   ; _ Disparo_(+1).
 372+ 8FE3 18 18            jr 2F
 373+ 8FE5
 374+ 8FE5              ; Dispara una entidad.
 375+ 8FE5
 376+ 8FE5 C5           1 push bc
 377+ 8FE6 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FE9 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FEC A7               and a
 380+ 8FED ED 42            sbc hl,bc
 381+ 8FEF CC AE 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FF2 C1               pop bc
 383+ 8FF3 28 3A            jr z,4F
 384+ 8FF5
 385+ 8FF5 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FF8 23               inc hl
 387+ 8FF9 23               inc hl
 388+ 8FFA 22 3B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FFD              ;                                                   ; _ Disparo_(+1).
 390+ 8FFD CD 30 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9000              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9000              ;
 393+ 9000              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9000              ;                                                     Rutinas_de_impresion en IX.
 395+ 9000              ;                                                     Puntero_de_impresion en HL.
 396+ 9000              ;                                                     Impacto/Dirección en BC.
 397+ 9000
 398+ 9000 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9001 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9002 23               inc hl                                          ; _ al siguiente.
 401+ 9003 A7               and a
 402+ 9004 20 C0            jr nz,3B
 403+ 9006
 404+ 9006 08               ex af,af
 405+ 9007 ED 73 2B 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 900B F9               ld sp,hl
 407+ 900C
 408+ 900C DD E5            push ix                                         ; Rutina de impresión.
 409+ 900E F5               push af                                         ; Puntero de impresión.
 410+ 900F FD E5            push iy                                         ; Puntero objeto.
 411+ 9011 C5               push bc                                         ; Control.
 412+ 9012
 413+ 9012 ED 7B 2B 89      ld sp,(Stack)
 414+ 9016
 415+ 9016              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9016
 417+ 9016 21 1A 89     	ld hl,Ctrl_1
 418+ 9019 CB C6        	set 0,(hl)
 419+ 901B
 420+ 901B DD E5        	push ix
 421+ 901D E1               pop hl
 422+ 901E F5               push af
 423+ 901F DD E1            pop ix
 424+ 9021
 425+ 9021 CD 16 71     	call Guarda_foto_registros
 426+ 9024
 427+ 9024 21 1A 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9027 CB 86        	res 0,(hl)
 429+ 9029
 430+ 9029              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9029              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9029
 433+ 9029 CD B5 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 902C CD AE 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 902F
 436+ 902F C9           4 ret
 437+ 9030
 438+ 9030              ; ----------------------------------------------------------------
 439+ 9030              ;
 440+ 9030              ;   4/3/23
 441+ 9030              ;
 442+ 9030              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9030              ;   _ al generarse el disparo.
 444+ 9030              ;
 445+ 9030              ;       "$80" ..... No se produce colisión.
 446+ 9030              ;       "$81" ..... Se produce colisión.
 447+ 9030              ;
 448+ 9030              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9030              ;         _ que forman el disparo.
 450+ 9030
 451+ 9030
 452+ 9030              Comprueba_Colision
 453+ 9030
 454+ 9030              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9030
 456+ 9030 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9032 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9033
 459+ 9033 CD 69 90         call Modifica_H_Velocidad_disparo
 460+ 9036
 461+ 9036 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9037 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9039 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 903B
 465+ 903B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 903D CD 59 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9040
 468+ 9040 7B               ld a,e
 469+ 9041 E6 01            and 1
 470+ 9043 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9045              ;                                                  ; _ para activar IMPACTO.
 472+ 9045 E1               pop hl
 473+ 9046 E5               push hl
 474+ 9047 CD 98 96         call NextScan
 475+ 904A
 476+ 904A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 904B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 904D 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 904F              ;                                                  ; _ 2º scanline si esto es así.
 480+ 904F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9051 CD 59 90         call Bucle_2
 482+ 9054
 483+ 9054 43           1 ld b,e
 484+ 9055 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9056 FD E1            pop iy
 486+ 9058 C9               ret
 487+ 9059
 488+ 9059              ; ---------- ----------
 489+ 9059
 490+ 9059 06 02        Bucle_2 ld b,2
 491+ 905B FD 7E 00     2 ld a,(iy)
 492+ 905E A6               and (hl)
 493+ 905F 28 02            jr z,1F
 494+ 9061 1E 81            ld e,$81
 495+ 9063 23           1 inc hl
 496+ 9064 FD 23            inc iy
 497+ 9066 10 F3            djnz 2B
 498+ 9068 C9               ret
 499+ 9069
 500+ 9069              ; ---------- ----------
 501+ 9069              ;
 502+ 9069              ;   21/7/23
 503+ 9069
 504+ 9069              Modifica_H_Velocidad_disparo
 505+ 9069
 506+ 9069 3A 4A 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 906C FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 906E D0               ret nc                                         ; _ incrementamos H.
 509+ 906F 24               inc h
 510+ 9070
 511+ 9070 C9               ret
 512+ 9071
 513+ 9071              ; -------------------------------------------------------------------------------------------------------------
 514+ 9071              ;
 515+ 9071              ;   04/12/23
 516+ 9071              ;
 517+ 9071              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9071              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9071              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9071              ;
 521+ 9071              ;   MODIFICA: HL,DE,B y A.
 522+ 9071
 523+ 9071              Genera_coordenadas_X
 524+ 9071
 525+ 9071              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9071              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9071
 528+ 9071              ;   Limpiamos almacenes.
 529+ 9071
 530+ 9071 CD A2 90         call Limpia_Coordenadas_X
 531+ 9074
 532+ 9074              ;   Almacenamos coordenadas X.
 533+ 9074
 534+ 9074              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9074
 536+ 9074 2A FF 88         ld hl,(Puntero_de_impresion)
 537+ 9077 11 47 89         ld de,Coordenadas_X_Entidad
 538+ 907A 06 02            ld b,2
 539+ 907C
 540+ 907C 3A DD 88         ld a,(CTRL_DESPLZ)
 541+ 907F A7               and a
 542+ 9080 28 01            jr z,1F
 543+ 9082 04               inc b
 544+ 9083
 545+ 9083 CD 99 90     1 call Guarda_coordenadas_X
 546+ 9086
 547+ 9086              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9086
 549+ 9086 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 9089 11 44 89         ld de,Coordenadas_X_Amadeus
 551+ 908C 06 02            ld b,2
 552+ 908E
 553+ 908E 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 9091 A7               and a
 555+ 9092 28 01            jr z,2F
 556+ 9094 04               inc b
 557+ 9095
 558+ 9095 CD 99 90     2 call Guarda_coordenadas_X
 559+ 9098
 560+ 9098              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9098
 562+ 9098 C9               ret
 563+ 9099
 564+ 9099              ; ----- ----- ----- ----- -----
 565+ 9099
 566+ 9099 7D           Guarda_coordenadas_X  ld a,l
 567+ 909A E6 1F            and $1f
 568+ 909C 12           1 ld (de),a
 569+ 909D 3C               inc a
 570+ 909E 13               inc de
 571+ 909F 10 FB            djnz 1B
 572+ 90A1 C9               ret
 573+ 90A2
 574+ 90A2 AF           Limpia_Coordenadas_X xor a
 575+ 90A3 06 06            ld b,6
 576+ 90A5 21 44 89         ld hl,Coordenadas_X_Amadeus
 577+ 90A8 77           1 ld (hl),a
 578+ 90A9 23               inc hl
 579+ 90AA 10 FC            djnz 1B
 580+ 90AC C9               ret
 581+ 90AD
 582+ 90AD              ; ----- ----- ----- ----- -----
 583+ 90AD
 584+ 90AD              Compara_coordenadas_X
 585+ 90AD
 586+ 90AD 06 03            ld b,3
 587+ 90AF 11 49 89         ld de,Coordenadas_X_Entidad+2
 588+ 90B2
 589+ 90B2 1A               ld a,(de)
 590+ 90B3 A7               and a
 591+ 90B4 20 01            jr nz,2F
 592+ 90B6 05               dec b
 593+ 90B7
 594+ 90B7 1B           2 dec de
 595+ 90B8 1B               dec de
 596+ 90B9 21 44 89         ld hl,Coordenadas_X_Amadeus
 597+ 90BC
 598+ 90BC D5           1 push de
 599+ 90BD E5               push hl
 600+ 90BE C5               push bc
 601+ 90BF
 602+ 90BF CD C9 90         call Comparando
 603+ 90C2
 604+ 90C2 C1               pop bc
 605+ 90C3 E1               pop hl
 606+ 90C4 D1               pop de
 607+ 90C5
 608+ 90C5 13               inc de
 609+ 90C6 10 F4            djnz 1B
 610+ 90C8
 611+ 90C8 C9               ret
 612+ 90C9
 613+ 90C9              ; ----- ----- ----- ----- -----
 614+ 90C9              ;
 615+ 90C9              ;   4/12/23
 616+ 90C9              ;
 617+ 90C9              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 90C9
 619+ 90C9 06 03        Comparando ld b,3
 620+ 90CB 1A               ld a,(de)
 621+ 90CC 4E           2 ld c,(hl)
 622+ 90CD B9               cp c
 623+ 90CE 28 04            jr z,1F
 624+ 90D0 23               inc hl
 625+ 90D1 10 F9            djnz 2B
 626+ 90D3 C9               ret
 627+ 90D4
 628+ 90D4 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 90D6 32 EE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 90D9 21 3F 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 90DC CB D6            set 2,(hl)
 632+ 90DE C9               ret
 633+ 90DF
 634+ 90DF              ; -----------------------------------------------------------------------
 635+ 90DF              ;
 636+ 90DF              ;   7/12/23
 637+ 90DF              ;
 638+ 90DF
 639+ 90DF              Detecta_colision_nave_entidad
 640+ 90DF
 641+ 90DF              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 90DF
 643+ 90DF FD 2A D9 88      ld iy,(Puntero_objeto)
 644+ 90E3 2A FF 88         ld hl,(Puntero_de_impresion)
 645+ 90E6
 646+ 90E6 E5               push hl
 647+ 90E7
 648+ 90E7              ; ----- ----- -----
 649+ 90E7 1E 00            ld e,0                                         ; Indica impacto.
 650+ 90E9 06 0A            ld b,10
 651+ 90EB CD 1B 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 90EE 7B               ld a,e
 653+ 90EF FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 90F1 38 0E            jr c,3F
 655+ 90F3
 656+ 90F3              ; LLegados a este punto:
 657+ 90F3              ;
 658+ 90F3              ;   HAY COLISIÓN !!!!!.
 659+ 90F3              ;
 660+ 90F3              ;   .db (Impacto) de Amadeus a "1".
 661+ 90F3              ;   SET el bit3 de (Impacto2).
 662+ 90F3              ;
 663+ 90F3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90F3
 665+ 90F3 21 EE 88         ld hl,Impacto
 666+ 90F6 36 01            ld (hl),1
 667+ 90F8 21 3F 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 90FB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 90FD CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 90FF
 671+ 90FF 18 18            jr 1F
 672+ 9101
 673+ 9101              ; -----
 674+ 9101
 675+ 9101 E1           3 pop hl
 676+ 9102 CD 98 96         call NextScan
 677+ 9105 E5               push hl
 678+ 9106 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9107 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9109 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 910B 30 0C            jr nc,1F
 682+ 910D              ;                                                  ; _ 2º scanline si esto es así.
 683+ 910D 10 DC            djnz 2B
 684+ 910F
 685+ 910F              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 910F
 687+ 910F              ; LLegados a este punto:
 688+ 910F              ;
 689+ 910F              ;   NO HAY COLISIÓN !!!!!.
 690+ 910F              ;
 691+ 910F              ;   .db (Impacto) de Amadeus a "0".
 692+ 910F              ;   RES el bit2 de (Impacto2).
 693+ 910F              ;
 694+ 910F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 910F              ;   Lo colocamos a "0".
 696+ 910F
 697+ 910F 21 3F 89         ld hl,Impacto2
 698+ 9112 CB 96            res 2,(hl)
 699+ 9114 2A 40 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9117 36 00            ld (hl),0
 701+ 9119
 702+ 9119 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 911A C9               ret
 704+ 911B
 705+ 911B               ; ---------- ----------
 706+ 911B
 707+ 911B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 911C 3A D6 88         ld a,(Columns)
 709+ 911F 47               ld b,a
 710+ 9120 FD 7E 00     2 ld a,(iy)
 711+ 9123 BE               cp (hl)
 712+ 9124 28 01            jr z,1F
 713+ 9126
 714+ 9126 1C               inc e
 715+ 9127
 716+ 9127 23           1 inc hl
 717+ 9128 FD 23            inc iy
 718+ 912A 10 F4            djnz 2B
 719+ 912C C1               pop bc
 720+ 912D C9               ret
 721+ 912E
 722+ 912E              ; -------------------------------------------------------------------------------------------------------------
 723+ 912E              ;
 724+ 912E              ;   13/03/23
 725+ 912E              ;
 726+ 912E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 912E              ;
 728+ 912E              ;   DESTRUYE: HL,BC,DE y A.
 729+ 912E
 730+ 912E 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9131 7E               ld a,(hl)
 732+ 9132 A7               and a
 733+ 9133 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9134
 735+ 9134 44               ld b,h
 736+ 9135 4D               ld c,l
 737+ 9136 2A 33 89         ld hl,(Stack_snapshot_disparos)
 738+ 9139 E5               push hl
 739+ 913A A7               and a
 740+ 913B ED 42            sbc hl,bc
 741+ 913D E5               push hl
 742+ 913E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 913F
 744+ 913F E1               pop hl
 745+ 9140 54               ld d,h
 746+ 9141 5D               ld e,l
 747+ 9142 1B               dec de
 748+ 9143 ED B8            lddr                                                ; Limpiamos.
 749+ 9145
 750+ 9145 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 9148 22 33 89         ld (Stack_snapshot_disparos),hl
 752+ 914B
 753+ 914B C9               ret
 754+ 914C
 755+ 914C              ; -------------------------------------------------------------------------------------------------------------
 756+ 914C              ;
 757+ 914C              ;   18/07/23
 758+ 914C              ;
 759+ 914C
 760+ 914C              Motor_de_disparos
 761+ 914C
 762+ 914C              ; Gestiona DISPAROS DE AMADEUS.
 763+ 914C
 764+ 914C 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 914F 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9152
 767+ 9152 CD 30 8D     2 call Extrae_address
 768+ 9155 7E               ld a,(hl)
 769+ 9156 A7               and a
 770+ 9157 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9159
 772+ 9159              ; ----- ----- ----- ----- ----- -----
 773+ 9159
 774+ 9159 C5               push bc
 775+ 915A CD 1E 92         call foto_disparo_a_borrar
 776+ 915D
 777+ 915D              ; Existe colisión con este disparo???
 778+ 915D
 779+ 915D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 915E 7E               ld a,(hl)
 781+ 915F 2B               dec hl
 782+ 9160 E6 01            and 1
 783+ 9162 28 1D            jr z,9F
 784+ 9164
 785+ 9164              ;   En este punto:
 786+ 9164              ;
 787+ 9164              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9164              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9164              ;   _con la entidad).
 790+ 9164              ;
 791+ 9164              ;   Disparo_2A defw 0                                ; Control.
 792+ 9164              ;    defw 0                                          ; Puntero objeto.
 793+ 9164              ;    defw 0                                          ; Puntero de impresión.
 794+ 9164              ;    defw 0                                          ; Rutina de impresión.
 795+ 9164
 796+ 9164 E5               push hl
 797+ 9165
 798+ 9165 06 04            ld b,4
 799+ 9167 23           19 inc hl
 800+ 9168 10 FD            djnz 19B
 801+ 916A
 802+ 916A CD 30 8D         call Extrae_address
 803+ 916D CD 6F 9D         call Genera_coordenadas_disparo
 804+ 9170
 805+ 9170              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9170
 807+ 9170 21 42 89         ld hl,Coordenadas_disparo_certero
 808+ 9173 72               ld (hl),d
 809+ 9174 23               inc hl
 810+ 9175 73               ld (hl),e
 811+ 9176
 812+ 9176              ; Elimino el disparo de la base de datos.
 813+ 9176
 814+ 9176 E1               pop hl
 815+ 9177 CD 9D 92         call Elimina_disparo_de_base_de_datos
 816+ 917A 21 3F 89         ld hl,Impacto2
 817+ 917D CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 917F
 819+ 917F 18 06            jr 11F
 820+ 9181
 821+ 9181 CD 47 92     9 call Mueve_disparo
 822+ 9184 CD 1E 92         call foto_disparo_a_borrar
 823+ 9187
 824+ 9187 C1           11 pop bc
 825+ 9188 18 04            jr 7F
 826+ 918A
 827+ 918A              ; ----- ----- ----- ----- ----- -----
 828+ 918A
 829+ 918A ED 42        1 sbc hl,bc
 830+ 918C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 918E
 832+ 918E 2A 3D 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9191 23               inc hl
 834+ 9192 23               inc hl
 835+ 9193 22 3D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9196 18 BA            jr 2B
 837+ 9198
 838+ 9198 CD B5 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 919B              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 919B
 841+ 919B              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 919B
 843+ 919B 01 6A 85         ld bc,Disparo_11
 844+ 919E 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 91A1
 846+ 91A1 CD 30 8D     5 call Extrae_address
 847+ 91A4 7E               ld a,(hl)
 848+ 91A5 A7               and a
 849+ 91A6 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 91A8
 851+ 91A8              ; ----- ----- ----- ----- ----- -----
 852+ 91A8
 853+ 91A8 C5               push bc
 854+ 91A9 CD 1E 92         call foto_disparo_a_borrar
 855+ 91AC
 856+ 91AC              ; Existe colisión con este disparo???
 857+ 91AC
 858+ 91AC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 91AD 7E               ld a,(hl)
 860+ 91AE 2B               dec hl
 861+ 91AF E6 01            and 1
 862+ 91B1 28 4D            jr z,10F
 863+ 91B3
 864+ 91B3              ;! La colisión se produce con Amadeus???
 865+ 91B3              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 91B3
 867+ 91B3 E5               push hl
 868+ 91B4
 869+ 91B4 06 04            ld b,4
 870+ 91B6 23           16 inc hl
 871+ 91B7 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 91B9
 873+ 91B9 CD 30 8D         call Extrae_address
 874+ 91BC CD 6F 9D         call Genera_coordenadas_disparo
 875+ 91BF
 876+ 91BF 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 91C0 FE 16            cp $16
 878+ 91C2 38 2A            jr c,15F
 879+ 91C4
 880+ 91C4
 881+ 91C4              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 91C4
 883+ 91C4 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 91C5
 885+ 91C5              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 91C5
 887+ 91C5 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 91C8
 889+ 91C8              ; Coordenada X de Amadeus en D.
 890+ 91C8
 891+ 91C8 7D               ld a,l
 892+ 91C9 E6 1F            and $1F
 893+ 91CB 57               ld d,a
 894+ 91CC
 895+ 91CC 21 86 85         ld hl,Amadeus_db+8
 896+ 91CF 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 91D0
 898+ 91D0 21 44 89         ld hl,Coordenadas_X_Amadeus
 899+ 91D3 CD 99 90         call Guarda_coordenadas_X
 900+ 91D6
 901+ 91D6 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 91D7
 903+ 91D7              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 91D7
 905+ 91D7 06 02            ld b,2
 906+ 91D9 C5           20 push bc
 907+ 91DA
 908+ 91DA 06 03            ld b,3
 909+ 91DC 21 44 89         ld hl,Coordenadas_X_Amadeus
 910+ 91DF 7E           18 ld a,(hl)
 911+ 91E0 BA               cp d
 912+ 91E1 20 04            jr nz,17F
 913+ 91E3
 914+ 91E3              ;! Colisión Amadeus !!!!!!!!!!
 915+ 91E3
 916+ 91E3 C1               pop bc
 917+ 91E4 E1               pop hl
 918+ 91E5 18 0D            jr 14F
 919+ 91E7
 920+ 91E7 23           17 inc hl
 921+ 91E8 10 F5            djnz 18B
 922+ 91EA
 923+ 91EA 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 91EB
 925+ 91EB C1               pop bc
 926+ 91EC 10 EB            djnz 20B
 927+ 91EE
 928+ 91EE
 929+ 91EE              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 91EE              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 91EE
 932+ 91EE E1           15 pop hl
 933+ 91EF 23               inc hl
 934+ 91F0 35               dec (hl)
 935+ 91F1 2B               dec hl
 936+ 91F2 18 0C            jr 10F
 937+ 91F4
 938+ 91F4              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 91F4              ; _ almacén de coordenadas_X de Amadeus.
 940+ 91F4
 941+ 91F4 E5           14 push hl
 942+ 91F5 CD 9D 92         call Elimina_disparo_de_base_de_datos
 943+ 91F8 21 3F 89         ld hl,Impacto2
 944+ 91FB CB CE            set 1,(hl)
 945+ 91FD E1               pop hl
 946+ 91FE 18 06            jr 12F
 947+ 9200
 948+ 9200              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9200
 950+ 9200 CD 47 92     10 call Mueve_disparo
 951+ 9203 CD 1E 92         call foto_disparo_a_borrar
 952+ 9206 C1           12 pop bc
 953+ 9207
 954+ 9207 18 04            jr 8F
 955+ 9209
 956+ 9209              ; ----- ----- ----- ----- ----- -----
 957+ 9209
 958+ 9209 ED 42        4 sbc hl,bc
 959+ 920B 28 0A            jr z,6F
 960+ 920D
 961+ 920D 2A 3B 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9210 23               inc hl
 963+ 9211 23               inc hl
 964+ 9212 22 3B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9215 18 8A            jr 5B
 966+ 9217
 967+ 9217 CD AE 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 921A CD A2 90         call Limpia_Coordenadas_X
 969+ 921D C9               ret
 970+ 921E
 971+ 921E              ; ------------------------------------------------------------------
 972+ 921E
 973+ 921E              foto_disparo_a_borrar
 974+ 921E
 975+ 921E 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 921F A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9220 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9221
 979+ 9221 E5               push hl
 980+ 9222 23               inc hl
 981+ 9223 23               inc hl
 982+ 9224 ED 73 2B 89      ld (Stack),sp
 983+ 9228 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9229 FD E1            pop iy
 985+ 922B DD E1            pop ix
 986+ 922D E1               pop hl
 987+ 922E ED 7B 2B 89      ld sp,(Stack)
 988+ 9232 3A 1A 89         ld a,(Ctrl_1)
 989+ 9235 CB C7            set 0,a
 990+ 9237 32 1A 89         ld (Ctrl_1),a
 991+ 923A CD 16 71         call Guarda_foto_registros
 992+ 923D 3A 1A 89         ld a,(Ctrl_1)
 993+ 9240 CB 87            res 0,a
 994+ 9242 32 1A 89         ld (Ctrl_1),a
 995+ 9245 E1               pop hl
 996+ 9246 C9               ret
 997+ 9247
 998+ 9247              ;---------------------------------------------------
 999+ 9247              ;
1000+ 9247              ;   18/07/23
1001+ 9247              ;
1002+ 9247
1003+ 9247              Mueve_disparo
1004+ 9247
1005+ 9247              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9247              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9247              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9247
1009+ 9247 E5               push hl
1010+ 9248
1011+ 9248 7E               ld a,(hl)
1012+ 9249
1013+ 9249 06 04            ld b,4
1014+ 924B 23           1 inc hl
1015+ 924C 10 FD            djnz 1B
1016+ 924E
1017+ 924E              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 924E
1019+ 924E CD 30 8D         call Extrae_address
1020+ 9251
1021+ 9251 E6 01            and 1
1022+ 9253 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9255
1024+ 9255              ; Disparo hacia arriba, (Amadeus).
1025+ 9255
1026+ 9255              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9255              ; _ de la dificultad.
1028+ 9255
1029+ 9255 CD A7 96         call PreviousScan
1030+ 9258 CD A7 96         call PreviousScan
1031+ 925B CD A7 96         call PreviousScan
1032+ 925E CD A7 96         call PreviousScan
1033+ 9261
1034+ 9261              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9261
1036+ 9261 7C               ld a,h
1037+ 9262 FE 40            cp $40
1038+ 9264 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9266
1040+ 9266              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9266
1042+ 9266 EB               ex de,hl
1043+ 9267 06 04            ld b,4
1044+ 9269 2B           6 dec hl
1045+ 926A 10 FD            djnz 6B
1046+ 926C
1047+ 926C CD 9D 92         call Elimina_disparo_de_base_de_datos
1048+ 926F E1               pop hl
1049+ 9270 18 10            jr 7F
1050+ 9272
1051+ 9272              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9272              ; HL contiene el puntero de impresión del disparo.
1053+ 9272              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9272
1055+ 9272 D5           3 push de
1056+ 9273 C5               push bc
1057+ 9274
1058+ 9274 CD 30 90         call Comprueba_Colision
1059+ 9277
1060+ 9277              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9277
1062+ 9277 78               ld a,b
1063+ 9278
1064+ 9278 C1               pop bc
1065+ 9279 D1               pop de
1066+ 927A
1067+ 927A EB               ex de,hl
1068+ 927B
1069+ 927B 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 927C 23               inc hl                                      ; _ movimiento.
1071+ 927D 72               ld (hl),d
1072+ 927E
1073+ 927E E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 927F
1075+ 927F 23               inc hl                                      ; _ en curso.
1076+ 9280 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9281 2B               dec hl
1078+ 9282
1079+ 9282 C9           7 ret
1080+ 9283
1081+ 9283              ; Disparo hacia abajo, (Entidad).
1082+ 9283
1083+ 9283 3A 4A 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9286 47               ld b,a
1085+ 9287
1086+ 9287 CD 98 96     4 call NextScan
1087+ 928A 10 FB            djnz 4B
1088+ 928C
1089+ 928C              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 928C
1091+ 928C 7C               ld a,h
1092+ 928D FE 58            cp $58
1093+ 928F 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9291
1095+ 9291 EB               ex de,hl
1096+ 9292 06 04            ld b,4
1097+ 9294 2B           5 dec hl
1098+ 9295 10 FD            djnz 5B
1099+ 9297
1100+ 9297 CD 9D 92         call Elimina_disparo_de_base_de_datos
1101+ 929A E1               pop hl
1102+ 929B 18 E5            jr 7B
1103+ 929D
1104+ 929D              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 929D
1106+ 929D 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 92A0 AF               xor a
1108+ 92A1 77               ld (hl),a
1109+ 92A2 54               ld d,h
1110+ 92A3 5D               ld e,l
1111+ 92A4 13               inc de
1112+ 92A5 ED B0            ldir
1113+ 92A7 C9               ret
1114+ 92A8
1115+ 92A8              ; -----------------------------------------------------------------
1116+ 92A8              ;
1117+ 92A8              ;   7/12/23
1118+ 92A8              ;
1119+ 92A8
1120+ 92A8 3A 3F 89     Selector_de_impactos ld a,(Impacto2)
1121+ 92AB A7               and a
1122+ 92AC C8               ret z
1123+ 92AD
1124+ 92AD              ; Analizamos si hay impacto por disparos.
1125+ 92AD
1126+ 92AD              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 92AD
1128+ 92AD CB 4F            bit 1,a
1129+ 92AF 28 07            jr z,1F
1130+ 92B1
1131+ 92B1 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 92B4 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 92B6 18 08            jr 2F
1134+ 92B8
1135+ 92B8 CB 47        1 bit 0,a
1136+ 92BA C8               ret z
1137+ 92BB
1138+ 92BB              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 92BB
1140+ 92BB 21 1A 89         ld hl,Ctrl_1
1141+ 92BE CB D6            set 2,(hl)
1142+ 92C0
1143+ 92C0 C9           2 ret
1144+ 92C1
1145+ 92C1              ; -----------------------------------------------------------------
1146+ 92C1              ;
1147+ 92C1              ;   25/04/23
1148+ 92C1              ;
1149+ 92C1
1150+ 92C1              Determina_resultado_comparativa
1151+ 92C1
1152+ 92C1              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 92C1              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 92C1              ;
1155+ 92C1              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 92C1              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 92C1              ;
1158+ 92C1              ;   SBC HL,DE
1159+ 92C1
1160+ 92C1              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 92C1              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 92C1
1163+ 92C1              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 92C1              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 92C1
1166+ 92C1
1167+ 92C1 3A E9 88         ld a,(Cuad_objeto)
1168+ 92C4 FE 02            cp 2
1169+ 92C6 28 26            jr z,2F
1170+ 92C8 38 24            jr c,2F
1171+ 92CA
1172+ 92CA              ; Cuadrantes 3º y 4º
1173+ 92CA
1174+ 92CA E6 01            and 1
1175+ 92CC 28 10            jr z,4F
1176+ 92CE
1177+ 92CE              ; Cuadrante 3º
1178+ 92CE
1179+ 92CE 7C               ld a,h
1180+ 92CF 06 00            ld b,0
1181+ 92D1
1182+ 92D1 CD 5C 93         call Compara_cositas_H3
1183+ 92D4
1184+ 92D4 04               inc b
1185+ 92D5 05               dec b
1186+ 92D6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 92D7
1188+ 92D7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 92D8 06 00            ld b,0
1190+ 92DA
1191+ 92DA CD 6E 93         call Compara_cositas_L3
1192+ 92DD C9               ret
1193+ 92DE
1194+ 92DE              ; Cuadrante 4º
1195+ 92DE
1196+ 92DE 7C           4 ld a,h
1197+ 92DF 06 00            ld b,0
1198+ 92E1
1199+ 92E1 CD 80 93         call Compara_cositas_H4
1200+ 92E4
1201+ 92E4 04               inc b
1202+ 92E5 05               dec b
1203+ 92E6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 92E7
1205+ 92E7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 92E8 06 00            ld b,0
1207+ 92EA
1208+ 92EA CD 96 93         call Compara_cositas_L4
1209+ 92ED C9               ret
1210+ 92EE
1211+ 92EE              ; Cuadrantes 1º y 2º.
1212+ 92EE
1213+ 92EE 28 10        2 jr z,3F
1214+ 92F0
1215+ 92F0              ; 1er Cuadrante
1216+ 92F0
1217+ 92F0 7C               ld a,h
1218+ 92F1 06 00            ld b,0
1219+ 92F3
1220+ 92F3 CD 34 93         call Compara_cositas_H1
1221+ 92F6
1222+ 92F6 04               inc b
1223+ 92F7 05               dec b
1224+ 92F8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 92F9
1226+ 92F9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 92FA 06 00            ld b,0
1228+ 92FC
1229+ 92FC CD 4A 93         call Compara_cositas_L1
1230+ 92FF C9               ret
1231+ 9300
1232+ 9300
1233+ 9300              ; 2º Cuadrante
1234+ 9300
1235+ 9300 7C           3 ld a,h
1236+ 9301 06 00            ld b,0
1237+ 9303
1238+ 9303 CD 10 93         call Compara_cositas_H2
1239+ 9306
1240+ 9306 04               inc b
1241+ 9307 05               dec b
1242+ 9308 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9309
1244+ 9309 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 930A 06 00            ld b,0
1246+ 930C
1247+ 930C CD 22 93         call Compara_cositas_L2
1248+ 930F C9               ret
1249+ 9310
1250+ 9310 A7           Compara_cositas_H2 and a
1251+ 9311 28 0D            jr z,1F
1252+ 9313              ;    cp $fd
1253+ 9313              ;    jr z,1F
1254+ 9313              ;    cp $fe
1255+ 9313              ;    jr z,1F
1256+ 9313 FE FF            cp $ff
1257+ 9315 28 09            jr z,1F
1258+ 9317 FE 01            cp $01
1259+ 9319 28 05            jr z,1F
1260+ 931B FE 02            cp $02
1261+ 931D 28 01            jr z,1F
1262+ 931F C0               ret nz
1263+ 9320 04           1 inc b
1264+ 9321 C9               ret
1265+ 9322
1266+ 9322 A7           Compara_cositas_L2 and a
1267+ 9323 28 0D            jr z,1F
1268+ 9325              ;    cp $fd
1269+ 9325              ;    jr z,1F
1270+ 9325 FE FE            cp $fe
1271+ 9327 28 09            jr z,1F
1272+ 9329 FE FF            cp $ff
1273+ 932B 28 05            jr z,1F
1274+ 932D FE 01            cp $01
1275+ 932F 28 01            jr z,1F
1276+ 9331              ;    cp $02
1277+ 9331              ;    jr z,1F
1278+ 9331 C0               ret nz
1279+ 9332 04           1 inc b
1280+ 9333 C9               ret
1281+ 9334
1282+ 9334 A7           Compara_cositas_H1 and a
1283+ 9335 28 11            jr z,1F
1284+ 9337              ;    cp $fd
1285+ 9337              ;    jr z,1F
1286+ 9337              ;    cp $fe
1287+ 9337              ;    jr z,1F
1288+ 9337 FE FF            cp $ff
1289+ 9339 28 0D            jr z,1F
1290+ 933B FE 01            cp $01
1291+ 933D 28 09            jr z,1F
1292+ 933F FE 02            cp $02
1293+ 9341 28 05            jr z,1F
1294+ 9343 FE 03            cp $03
1295+ 9345 28 01            jr z,1F
1296+ 9347 C0               ret nz
1297+ 9348 04           1 inc b
1298+ 9349 C9               ret
1299+ 934A
1300+ 934A A7           Compara_cositas_L1 and a
1301+ 934B 28 0D            jr z,1F
1302+ 934D              ;    cp $fd
1303+ 934D              ;    jr z,1F
1304+ 934D              ;    cp $fe
1305+ 934D              ;    jr z,1F
1306+ 934D              ;    cp $ff
1307+ 934D              ;    jr z,1F
1308+ 934D FE 01            cp $01
1309+ 934F 28 09            jr z,1F
1310+ 9351 FE 02            cp $02
1311+ 9353 28 05            jr z,1F
1312+ 9355 FE 03            cp $03
1313+ 9357 28 01            jr z,1F
1314+ 9359 C0               ret nz
1315+ 935A 04           1 inc b
1316+ 935B C9               ret
1317+ 935C
1318+ 935C A7           Compara_cositas_H3 and a
1319+ 935D 28 0D            jr z,1F
1320+ 935F              ;    cp $fd
1321+ 935F              ;    jr z,1F
1322+ 935F FE FE            cp $fe
1323+ 9361 28 09            jr z,1F
1324+ 9363 FE FF            cp $ff
1325+ 9365 28 05            jr z,1F
1326+ 9367 FE 01            cp $01
1327+ 9369 28 01            jr z,1F
1328+ 936B              ;    cp $02
1329+ 936B              ;    jr z,1F
1330+ 936B              ;    cp $03
1331+ 936B              ;    jr z,1F
1332+ 936B C0               ret nz
1333+ 936C 04           1 inc b
1334+ 936D C9               ret
1335+ 936E
1336+ 936E A7           Compara_cositas_L3 and a
1337+ 936F 28 0D            jr z,1F
1338+ 9371              ;    cp $fd
1339+ 9371              ;    jr z,1F
1340+ 9371              ;    cp $fe
1341+ 9371              ;    jr z,1F
1342+ 9371              ;    cp $ff
1343+ 9371              ;    jr z,1F
1344+ 9371 FE 01            cp $01
1345+ 9373 28 09            jr z,1F
1346+ 9375 FE 02            cp $02
1347+ 9377 28 05            jr z,1F
1348+ 9379 FE 03            cp $03
1349+ 937B 28 01            jr z,1F
1350+ 937D C0               ret nz
1351+ 937E 04           1 inc b
1352+ 937F C9               ret
1353+ 9380
1354+ 9380 A7           Compara_cositas_H4 and a
1355+ 9381 28 11            jr z,1F
1356+ 9383 FE FD            cp $fd
1357+ 9385 28 0D            jr z,1F
1358+ 9387 FE FE            cp $fe
1359+ 9389 28 09            jr z,1F
1360+ 938B FE FF            cp $ff
1361+ 938D 28 05            jr z,1F
1362+ 938F FE 01            cp $01
1363+ 9391 28 01            jr z,1F
1364+ 9393              ;    cp $02
1365+ 9393              ;    jr z,1F
1366+ 9393              ;    cp $03
1367+ 9393              ;    jr z,1F
1368+ 9393 C0               ret nz
1369+ 9394 04           1 inc b
1370+ 9395 C9               ret
1371+ 9396
1372+ 9396 A7           Compara_cositas_L4 and a
1373+ 9397 28 0D            jr z,1F
1374+ 9399              ;    cp $fd
1375+ 9399              ;    jr z,1F
1376+ 9399 FE FE            cp $fe
1377+ 939B 28 09            jr z,1F
1378+ 939D FE FF            cp $ff
1379+ 939F 28 05            jr z,1F
1380+ 93A1 FE 01            cp $01
1381+ 93A3 28 01            jr z,1F
1382+ 93A5              ;    cp $02
1383+ 93A5              ;    jr z,1F
1384+ 93A5              ;    cp $03
1385+ 93A5              ;    jr z,1F
1386+ 93A5 C0               ret nz
1387+ 93A6 04           1 inc b
1388+ 93A7 C9               ret
# file closed: Disparo.asm
1838  93A8              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93A8              ; ******************************************************************************************************************************************************************************************
   2+ 93A8              ;
   3+ 93A8              ; 26/06/23
   4+ 93A8              ;
   5+ 93A8              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93A8
   7+ 93A8              Draw
   8+ 93A8
   9+ 93A8 CD 8C 96     	call Prepara_draw
  10+ 93AB 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 93AC A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 93AD 28 05        	jr z,2F
  13+ 93AF
  14+ 93AF 3A E9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 93B2 18 0C        	jr 1F
  16+ 93B4
  17+ 93B4 2A E7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 93B7 22 D7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 93BA CD 49 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 93BD              ;													; _la esquina superior izquierda de la pantalla.
  21+ 93BD CD 00 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 93C0
  23+ 93C0 3A 05 89     1 ld a,(Ctrl_0)
  24+ 93C3 CB 6F        	bit 5,a
  25+ 93C5 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 93C7
  27+ 93C7 CD DF 93     	call Comprueba_limite_horizontal
  28+ 93CA CD 6F 94     	call Comprueba_limite_vertical
  29+ 93CD
  30+ 93CD              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 93CD              ; -----------------------
  32+ 93CD              ; -----------------------
  33+ 93CD              ; -----------------------
  34+ 93CD
  35+ 93CD CD BC 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 93D0 CD F3 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 93D3 CD 52 96     	call Define_rutina_de_impresion
  38+ 93D6
  39+ 93D6 3A 05 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 93D9 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 93DB 32 05 89     	ld (Ctrl_0),a
  42+ 93DE
  43+ 93DE C9           	ret
  44+ 93DF
  45+ 93DF              ; *******************************************************************************************************************************************************************************************
  46+ 93DF              ;	21/01/23
  47+ 93DF              ;
  48+ 93DF              ; 	Comprueba_limite_horizontal.
  49+ 93DF              ;
  50+ 93DF              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 93DF              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 93DF              ;
  53+ 93DF              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 93DF              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 93DF              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 93DF              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 93DF
  58+ 93DF
  59+ 93DF
  60+ 93DF 3A 05 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 93E2 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 93E4 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 93E6 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 93E8 32 05 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 93EB 18 09            jr 6F
  66+ 93ED CB 5F        1 bit 3,a
  67+ 93EF 28 0A            jr z,2F
  68+ 93F1 E6 F7            and $f7
  69+ 93F3 32 05 89         ld (Ctrl_0),a
  70+ 93F6 CD 49 95     6 call Inicializacion
  71+ 93F9 18 5B            jr 5F
  72+ 93FB E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 93FC
  74+ 93FC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 93FC              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 93FC
  77+ 93FC EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 93FD 2A 13 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9400 CD AB 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9403 67           	ld h,a
  81+ 9404 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9405 CD AB 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9408 67           	ld h,a
  84+ 9409 A7           	and a
  85+ 940A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 940C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 940D 3A E9 88     	ld a,(Cuad_objeto)
  88+ 9410 FE 02        	cp 2
  89+ 9412 38 1E        	jr c,3F
  90+ 9414 28 1C        	jr z,3F
  91+ 9416 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9417 28 23            jr z,7F
  93+ 9419 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 941B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 941D E1           	pop hl
  96+ 941E
  97+ 941E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 941E              ; _para indicar con E="2" en caso necesario.
  99+ 941E
 100+ 941E E5               push hl
 101+ 941F C5               push bc
 102+ 9420 CD AB 99     	call calcula_tercio
 103+ 9423 FE 01        	cp 1
 104+ 9425 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9427 CD 57 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 942A 28 26            jr z,9F
 107+ 942C 38 24            jr c,9F
 108+ 942E 1E 00        11 ld e,0
 109+ 9430 18 22            jr 8F
 110+ 9432 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9433 28 07        	jr z, 7F
 112+ 9435 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9437 1E 00         	ld e,0
 114+ 9439 E1           	pop hl
 115+ 943A 18 04        	jr 4F
 116+ 943C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 943E 18 15            jr 10F
 118+ 9440
 119+ 9440              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9440              ; _para indicar con E="2" en caso necesario.
 121+ 9440
 122+ 9440 E5           4 push hl
 123+ 9441 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9442 CD AB 99     	call calcula_tercio
 125+ 9445 FE 01        	cp 1
 126+ 9447 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9449 CD 57 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 944C 28 04            jr z,9F
 129+ 944E 30 02            jr nc,9F
 130+ 9450 18 02        	jr 8F
 131+ 9452 1E 02        9 ld e,2
 132+ 9454 C1           8 pop bc
 133+ 9455 E1           10 pop hl
 134+ 9456 C9           5 ret
 135+ 9457
 136+ 9457              ; --------------------
 137+ 9457              ;
 138+ 9457              ; 25/08/22
 139+ 9457
 140+ 9457 CD AB 99     Comprueba_centro call calcula_tercio
 141+ 945A 67               ld h,a
 142+ 945B 08           	ex af,af
 143+ 945C FE 02        	cp 2
 144+ 945E 38 07        	jr c,1F
 145+ 9460 28 05        	jr z,1F
 146+ 9462 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9465 18 03        	jr 2F
 148+ 9467 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 946A 08           2 ex af,af
 150+ 946B A7               and a
 151+ 946C ED 42            sbc hl,bc
 152+ 946E C9               ret
 153+ 946F
 154+ 946F              ; *********************************************************************************************************************************************************************************************
 155+ 946F              ;
 156+ 946F              ;   16/8/22
 157+ 946F              ;
 158+ 946F              ;	Comprueba_limite_vertical
 159+ 946F              ;
 160+ 946F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 946F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 946F              ;
 163+ 946F
 164+ 946F 2A D7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9472 7D           	ld a,l
 166+ 9473 E6 1F        	and $1F
 167+ 9475 57           	ld d,a
 168+ 9476 3A 15 89     	ld a,(Limite_vertical)
 169+ 9479 BA           	cp d 											; Límite - Posición.
 170+ 947A 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 947B 3A E9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 947E CB 47        	bit 0,a
 173+ 9480 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9482
 175+ 9482              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9482
 177+ 9482 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9483 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9485
 180+ 9485              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9485              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9485
 183+ 9485 3A DB 88         ld a,(Coordenada_X)
 184+ 9488 16 0F            ld d,Centro_izquierda
 185+ 948A A7               and a
 186+ 948B 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 948C 28 1E            jr z,3F
 188+ 948E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9490              ;                                                    ; _salimos sin modificar nada.
 190+ 9490 18 0E            jr 2F
 191+ 9492 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9493 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9495
 194+ 9495              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9495              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9495
 197+ 9495 3A DB 88         ld a,(Coordenada_X)
 198+ 9498 16 10            ld d,Centro_derecha
 199+ 949A A7               and a
 200+ 949B 92               sub d
 201+ 949C 28 0E            jr z,3F
 202+ 949E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 94A0              ;                                                    ; _salimos sin modificar nada.
 204+ 94A0 CB 43        2 bit 0,e
 205+ 94A2 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 94A4 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 94A5 CD 39 95         call Modificaccionne
 208+ 94A8 C1           	pop bc
 209+ 94A9 CD 49 95         call Inicializacion
 210+ 94AC C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 94AD
 212+ 94AD              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 94AD
 214+ 94AD C5           4 push bc
 215+ 94AE 01 D6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 94B1 0A           	ld a,(bc)
 217+ 94B2 3D           	dec a
 218+ 94B3 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 94B4 7D           	ld a,l
 220+ 94B5 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 94B6 CB 47        	bit 0,a
 222+ 94B8 28 03        	jr z,5F
 223+ 94BA 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 94BB 18 2E        	jr 7F
 225+ 94BD
 226+ 94BD              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 94BD
 228+ 94BD 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 94BE F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 94BF 3A 05 89     	ld a,(Ctrl_0)
 231+ 94C2 CB 4F        	bit 1,a
 232+ 94C4 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 94C6 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 94C7
 235+ 94C7              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 94C7
 237+ 94C7 1C               inc e
 238+ 94C8 1D               dec e
 239+ 94C9 20 07            jr nz,12F
 240+ 94CB 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 94CC 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 94CD 22 D7 88     	ld (Posicion_actual),hl
 243+ 94D0 18 44        13 jr 9F
 244+ 94D2 CB 43        12 bit 0,e
 245+ 94D4 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 94D6              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 94D6 C1           	pop bc
 248+ 94D7 18 D3        	jr 3B
 249+ 94D9 80           14 add b
 250+ 94DA 6F               ld l,a
 251+ 94DB 22 D7 88     	ld (Posicion_actual),hl
 252+ 94DE CD 39 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 94E1 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 94E3 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 94E5 32 05 89         ld (Ctrl_0),a
 256+ 94E8 F1           	pop af
 257+ 94E9 18 2B        	jr 9F
 258+ 94EB
 259+ 94EB              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 94EB
 261+ 94EB F5           7 push af
 262+ 94EC 3A 05 89     	ld a,(Ctrl_0)
 263+ 94EF CB 47        	bit 0,a
 264+ 94F1 20 1D        	jr nz,8F
 265+ 94F3 F1           	pop af
 266+ 94F4
 267+ 94F4              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 94F4
 269+ 94F4 1C           	inc e
 270+ 94F5 1D               dec e
 271+ 94F6 20 07            jr nz,10F
 272+ 94F8 90           	sub b
 273+ 94F9 6F               ld l,a
 274+ 94FA 22 D7 88     	ld (Posicion_actual),hl
 275+ 94FD 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 94FF              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 94FF CB 43        10 bit 0,e
 278+ 9501 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9503              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9503 C1           	pop bc
 281+ 9504 18 A6        	jr 3B
 282+ 9506 90           16 sub b
 283+ 9507 6F               ld l,a
 284+ 9508 22 D7 88     	ld (Posicion_actual),hl
 285+ 950B CD 39 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 950E 18 06            jr 9F
 287+ 9510 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9512 32 05 89         ld (Ctrl_0),a
 289+ 9515 F1           	pop af
 290+ 9516 C1           9 pop bc
 291+ 9517 1E 00        	ld e,0
 292+ 9519 CD 49 95         call Inicializacion
 293+ 951C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 951D 08           	ex af,af
 295+ 951E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 951F 18 8B            jr 3B
 297+ 9521
 298+ 9521              ; --------------------
 299+ 9521
 300+ 9521 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9523 CD A7 96     1 call PreviousScan
 302+ 9526 10 FB            djnz 1B
 303+ 9528 22 D7 88     	ld (Posicion_actual),hl
 304+ 952B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 952C C9           	ret
 306+ 952D
 307+ 952D              ; --------------------
 308+ 952D
 309+ 952D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 952F CD 98 96     1 call NextScan
 311+ 9532 10 FB            djnz 1B
 312+ 9534 22 D7 88     	ld (Posicion_actual),hl
 313+ 9537 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9538 C9           	ret
 315+ 9539
 316+ 9539              ; --------------------
 317+ 9539              ;
 318+ 9539              ;	22/01/23
 319+ 9539              ;
 320+ 9539              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9539              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9539              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9539
 324+ 9539
 325+ 9539              Modificaccionne
 326+ 9539
 327+ 9539 3A E9 88     	ld a,(Cuad_objeto)
 328+ 953C FE 02        	cp 2
 329+ 953E CC 21 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9541 DC 21 95         call c,Modifica_Pos_actual
 331+ 9544 C8           	ret z
 332+ 9545 CD 2D 95         call Modifica_Pos_actual2
 333+ 9548 C9               ret
 334+ 9549
 335+ 9549              ; *************************************************************************************************************************************************************************************************
 336+ 9549              ;
 337+ 9549              ;	13/8/22
 338+ 9549              ;
 339+ 9549              ;	Inicializacion
 340+ 9549              ;
 341+ 9549              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9549              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9549              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9549              ;
 345+ 9549              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9549              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9549              ;	_ desaparece/aparece.
 348+ 9549
 349+ 9549              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9549              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9549              ;
 352+ 9549              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9549              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9549              ; 		   [E] ="0"
 355+ 9549
 356+ 9549              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9549
 358+ 9549 CD AB 99     Inicializacion call calcula_tercio
 359+ 954C 28 36        	jr z,primit
 360+ 954E E6 02        	and 2
 361+ 9550 20 07        	jr nz,segmit
 362+ 9552 7D           	ld a,l
 363+ 9553 FE 7F        	cp $7f
 364+ 9555 38 2D        	jr c,primit
 365+ 9557 28 2B        	jr z,primit
 366+ 9559 CD B6 95     segmit call column
 367+ 955C 38 13        	jr c,tercuad
 368+ 955E 3E 04        cuarcuad ld a,4
 369+ 9560 32 E9 88     	ld (Cuad_objeto),a
 370+ 9563 21 20 48     	ld hl,$4820
 371+ 9566 22 13 89     	ld (Limite_horizontal),hl
 372+ 9569 21 15 89     	ld hl,Limite_vertical
 373+ 956C 36 0D        	ld (hl),$0d
 374+ 956E 08           	ex af,af
 375+ 956F 18 3C        	jr 1F
 376+ 9571              tercuad
 377+ 9571 3E 03        	ld a,3
 378+ 9573 32 E9 88     	ld (Cuad_objeto),a
 379+ 9576 21 20 48     	ld hl,$4820
 380+ 9579 22 13 89     	ld (Limite_horizontal),hl
 381+ 957C 21 15 89     	ld hl,Limite_vertical
 382+ 957F 36 12        	ld (hl),$12
 383+ 9581 08           	ex af,af
 384+ 9582 18 29        	jr 1F
 385+ 9584 CD B6 95     primit call column
 386+ 9587 38 13        	jr c, primcuad
 387+ 9589              segcuad
 388+ 9589 3E 02        	ld a,2
 389+ 958B 32 E9 88     	ld (Cuad_objeto),a
 390+ 958E 21 C0 4F     	ld hl,$4fc0
 391+ 9591 22 13 89     	ld (Limite_horizontal),hl
 392+ 9594 21 15 89     	ld hl,Limite_vertical
 393+ 9597 36 0D        	ld (hl),$0d
 394+ 9599 08           	ex af,af
 395+ 959A 18 11        	jr 1F
 396+ 959C              primcuad
 397+ 959C 3E 01        	ld a,1
 398+ 959E 32 E9 88     	ld (Cuad_objeto),a
 399+ 95A1 21 C0 4F     	ld hl,$4fc0
 400+ 95A4 22 13 89     	ld (Limite_horizontal),hl
 401+ 95A7 21 15 89     	ld hl,Limite_vertical
 402+ 95AA 36 12        	ld (hl),$12
 403+ 95AC 08           	ex af,af
 404+ 95AD CD 44 9D     1 call Genera_coordenadas
 405+ 95B0 21 05 89     	ld hl,Ctrl_0
 406+ 95B3 CB EE        	set 5,(hl)
 407+ 95B5 C9           	ret
 408+ 95B6
 409+ 95B6              ; ------------------------------------------------------------------------------------------------------------------
 410+ 95B6
 411+ 95B6              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 95B6              ;
 413+ 95B6              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 95B6
 415+ 95B6 7D           column ld a,l
 416+ 95B7 E6 1F        	and $1f
 417+ 95B9 FE 10         	cp $10
 418+ 95BB C9            	ret
 419+ 95BC
 420+ 95BC              ; --------------------------------------------------------------------------------------------------------------------
 421+ 95BC              ;
 422+ 95BC              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 95BC              ;
 424+ 95BC              ; 14/12/22
 425+ 95BC              ;
 426+ 95BC              ;	Modifica: A y BC.
 427+ 95BC
 428+ 95BC 3A E9 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 95BF E6 01        	and 1
 430+ 95C1 28 17        	jr z,1F
 431+ 95C3
 432+ 95C3              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 95C3
 434+ 95C3 3A DB 88     	ld a,(Coordenada_X)
 435+ 95C6 47           	ld b,a
 436+ 95C7 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 95C8 79           	ld a,c
 438+ 95C9 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 95CA 38 08        	jr c,2F
 440+ 95CC 47           	ld b,a
 441+ 95CD 79           	ld a,c
 442+ 95CE 90           	sub b
 443+ 95CF 32 12 89     	ld (Columnas),a
 444+ 95D2 18 1B        	jr 4F
 445+ 95D4 79           2 ld a,c
 446+ 95D5 32 12 89     	ld (Columnas),a
 447+ 95D8 18 15        	jr 4F
 448+ 95DA
 449+ 95DA              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 95DA
 451+ 95DA 3A DB 88     1 ld a,(Coordenada_X)
 452+ 95DD 81           	add c
 453+ 95DE 3D           	dec a
 454+ 95DF D6 1F        	sub $1f
 455+ 95E1 38 08        	jr c,3F
 456+ 95E3 47           	ld b,a
 457+ 95E4 79           	ld a,c
 458+ 95E5 90           	sub b
 459+ 95E6 32 12 89     	ld (Columnas),a
 460+ 95E9 18 04        	jr 4F
 461+ 95EB 79           3 ld a,c
 462+ 95EC 32 12 89     	ld (Columnas),a
 463+ 95EF D9           4 exx
 464+ 95F0 4F           	ld c,a
 465+ 95F1 D9           	exx
 466+ 95F2 C9            ret
 467+ 95F3
 468+ 95F3              ; --------------------------------------------------------------------------------------------------------------------
 469+ 95F3              ;
 470+ 95F3              ;   19/7/23
 471+ 95F3              ;
 472+ 95F3              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 95F3              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 95F3              ;
 475+ 95F3              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 95F3              ;			HL e IY Contienen (Puntero_objeto).
 477+ 95F3              ;
 478+ 95F3              ;	DESTRUYE: HL,B Y A.
 479+ 95F3
 480+ 95F3 3A E9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 95F6 FE 02        	cp 2
 482+ 95F8 38 18        	jr c,1F
 483+ 95FA 28 16        	jr z,1F
 484+ 95FC E6 01        	and 1
 485+ 95FE 28 0D        	jr z,3F
 486+ 9600
 487+ 9600              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 9600
 489+ 9600 CD 46 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 9603
 491+ 9603 7D           9 ld a,l
 492+ 9604 E6 1F        	and $1f
 493+ 9606 28 2A        	jr z,7F
 494+ 9608 2B           	dec hl
 495+ 9609 10 F8        	djnz 9B
 496+ 960B 18 25        	jr 7F
 497+ 960D
 498+ 960D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 960D
 500+ 960D 2A D7 88     3 ld hl,(Posicion_actual)
 501+ 9610 18 20        	jr 7F
 502+ 9612
 503+ 9612 28 14        1 jr z,2F
 504+ 9614
 505+ 9614              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9614
 507+ 9614 CD 46 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 9617
 509+ 9617 7D           4 ld a,l
 510+ 9618 E6 1F        	and $1f
 511+ 961A 28 03        	jr z,6F
 512+ 961C 2B           	dec hl
 513+ 961D 10 F8        	djnz 4B
 514+ 961F 06 0F        6 ld b,15
 515+ 9621 CD A7 96     5 call PreviousScan
 516+ 9624 10 FB        	djnz 5B
 517+ 9626 18 0A        	jr 7F
 518+ 9628
 519+ 9628              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 9628
 521+ 9628 CD 46 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 962B 06 0F        	ld b,15
 523+ 962D CD A7 96     8 call PreviousScan
 524+ 9630 10 FB        	djnz 8B
 525+ 9632
 526+ 9632 E5           7 push hl
 527+ 9633 DD E1        	pop ix
 528+ 9635
 529+ 9635 2A D9 88     	ld hl,(Puntero_objeto)
 530+ 9638 E5           	push hl
 531+ 9639 FD E1        	pop iy
 532+ 963B
 533+ 963B              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 963B
 535+ 963B 3A 05 89     	ld a,(Ctrl_0)
 536+ 963E CB 77        	bit 6,a
 537+ 9640 C8           	ret z
 538+ 9641
 539+ 9641              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 9641              ; _ entidad / Amadeus´.
 541+ 9641
 542+ 9641 DD 22 A8 85  	ld (p.imp.amadeus),ix
 543+ 9645
 544+ 9645 C9           	ret
 545+ 9646
 546+ 9646              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9646              ;
 548+ 9646              ;	2/1/23
 549+ 9646              ;
 550+ 9646              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9646              ;
 552+ 9646              ;	Tras esta rutina tenemos:
 553+ 9646              ;
 554+ 9646              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9646              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9646              ;
 557+ 9646              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9646
 559+ 9646 2A D7 88     Operandos ld hl,(Posicion_actual)
 560+ 9649 3A 12 89     	ld a,(Columnas)
 561+ 964C 3D           	dec a
 562+ 964D 20 01        	jr nz,1F
 563+ 964F 3C           	inc a
 564+ 9650 47           1 ld b,a
 565+ 9651 C9           	ret
 566+ 9652
 567+ 9652              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9652              ;
 569+ 9652              ;	3/1/23
 570+ 9652              ;
 571+ 9652              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9652              ;
 573+ 9652              ;	Destruye: A,B,HL y DE.
 574+ 9652
 575+ 9652              Define_rutina_de_impresion
 576+ 9652
 577+ 9652 3A D6 88     	ld a,(Columns)
 578+ 9655 47           	ld b,a
 579+ 9656 3A 12 89     	ld a,(Columnas)
 580+ 9659 B8           	cp b
 581+ 965A 20 0D        	jr nz,2f
 582+ 965C
 583+ 965C              ;	La entidad se imprime entera.
 584+ 965C
 585+ 965C 21 7B 97     	ld hl, Indice_entidades_completas
 586+ 965F E6 01        	and 1
 587+ 9661 28 02        	jr z,1F
 588+ 9663
 589+ 9663 23           	inc hl
 590+ 9664 23           	inc hl
 591+ 9665
 592+ 9665 CD 30 8D     1 call Extrae_address
 593+ 9668 C9           	ret		;	ret
 594+ 9669
 595+ 9669              ;	La entidad no se imprime entera en pantalla.
 596+ 9669
 597+ 9669 3A E9 88     2 ld a,(Cuad_objeto)
 598+ 966C E6 01        	and 1
 599+ 966E 28 17        	jr z,3F
 600+ 9670
 601+ 9670              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 9670
 603+ 9670 21 7F 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9673 3A D6 88     4 ld a,(Columns)
 605+ 9676 E6 01        	and 1
 606+ 9678 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 967A
 608+ 967A 23           	inc hl
 609+ 967B 23           	inc hl
 610+ 967C
 611+ 967C 3A 12 89     	ld a,(Columnas)
 612+ 967F E6 01        	and 1
 613+ 9681 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 9683
 615+ 9683 23           	inc hl
 616+ 9684 23           	inc hl
 617+ 9685
 618+ 9685 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 9687
 620+ 9687 21 85 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 968A 18 E7        	jr 4B
 622+ 968C
 623+ 968C              ; --------------------------------------------------------------------------------------------------------------------
 624+ 968C              ;
 625+ 968C              ;	Prepara_draw
 626+ 968C              ;
 627+ 968C              ;	Es una rutina de carga.
 628+ 968C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 968C              ;
 630+ 968C              ;	FUNCIONAMIENTO:
 631+ 968C              ;
 632+ 968C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 968C              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 968C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 968C              ;
 636+ 968C              ;	DESTRUYE:
 637+ 968C              ;
 638+ 968C              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 968C
 640+ 968C 21 D5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 968F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 9690 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 9691 4E           	ld c,(hl)
 644+ 9692 2A D7 88     	ld hl,(Posicion_actual)
 645+ 9695 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 9697 C9           	ret
 647+ 9698
 648+ 9698              ;----------------------------------------------------------------------------------------------------------------
 649+ 9698              ;
 650+ 9698              ;	5/08/22
 651+ 9698              ;
 652+ 9698              ;   NextScan.
 653+ 9698              ;
 654+ 9698              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 9698              ;
 656+ 9698              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 9698              ;
 658+ 9698              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 9698              ;
 660+ 9698              ;       DESTRUIDOS: AF y HL !!!
 661+ 9698              ;
 662+ 9698              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 9698              ;
 664+ 9698
 665+ 9698 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 9699 7C               ld a,h
 667+ 969A E6 07            and 7
 668+ 969C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 969D
 670+ 969D 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 969E C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 96A0 6F               ld l,a
 673+ 96A1 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 96A2
 675+ 96A2 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 96A3 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 96A5 67               ld h,a
 678+ 96A6 C9               ret
 679+ 96A7
 680+ 96A7              ;----------------------------------------------------------------------------------------------------------------
 681+ 96A7              ;
 682+ 96A7              ;	5/08/22
 683+ 96A7              ;
 684+ 96A7              ;   PreviousScan.
 685+ 96A7              ;
 686+ 96A7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 96A7              ;
 688+ 96A7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 96A7              ;
 690+ 96A7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 96A7              ;
 692+ 96A7              ;       DESTRUIDOS: AF y HL !!!
 693+ 96A7              ;
 694+ 96A7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 96A7              ;
 696+ 96A7
 697+ 96A7 7C           PreviousScan ld a,h
 698+ 96A8 25               dec h               ; Dec H.
 699+ 96A9 E6 07            and 7
 700+ 96AB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 96AC
 702+ 96AC 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 96AD D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 96AF 6F               ld l,a
 705+ 96B0 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 96B1
 707+ 96B1 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 96B2 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 96B4 67               ld h,a
 710+ 96B5 C9               ret
 711+ 96B6
 712+ 96B6              ; -----------------------------------------------------------------------------------
 713+ 96B6              ;
 714+ 96B6              ;	31/7/23
 715+ 96B6              ;
 716+ 96B6              ;	Rutina principal de pintado de entidades.
 717+ 96B6              ;	Extrae la foto del frame, (entidades).
 718+ 96B6
 719+ 96B6              Extrae_foto_entidades
 720+ 96B6
 721+ 96B6 21 01 70     	ld hl,Album_de_fotos+1
 722+ 96B9 7E           	ld a,(hl)
 723+ 96BA A7           	and a
 724+ 96BB C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 96BC
 726+ 96BC              ;	No hay datos, (entidades para pintar en este frame).
 727+ 96BC
 728+ 96BC 3A 26 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96BF A7           	and a
 730+ 96C0 C8           	ret z
 731+ 96C1
 732+ 96C1              ; -----------------------------------
 733+ 96C1
 734+ 96C1 ED 73 2B 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96C5 31 00 70     	ld sp,Album_de_fotos
 736+ 96C8
 737+ 96C8 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 96CA E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 96CB D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96CC
 741+ 96CC ED 73 2D 89  	ld (Stack_2),sp
 742+ 96D0 ED 7B 2B 89  	ld sp,(Stack)
 743+ 96D4
 744+ 96D4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 96D4
 746+ 96D4 3E CD        	ld a,$cd
 747+ 96D6 32 DE 96     	ld (Imprime),a
 748+ 96D9 EB           	ex de,hl
 749+ 96DA 22 DF 96     	ld (Imprime+1),hl
 750+ 96DD EB           	ex de,hl
 751+ 96DE
 752+ 96DE              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 96DE
 754+ 96DE 00 00 00     Imprime db 0,0,0
 755+ 96E1
 756+ 96E1 ED 73 2B 89  	ld (Stack),sp
 757+ 96E5
 758+ 96E5 3A 26 89     	ld a,(Numero_de_malotes)
 759+ 96E8 3D           	dec a
 760+ 96E9 28 09        	jr z,1F
 761+ 96EB 32 26 89      	ld (Numero_de_malotes),a
 762+ 96EE
 763+ 96EE ED 7B 2D 89  	ld sp,(Stack_2)
 764+ 96F2 18 D4        	jr 2B
 765+ 96F4
 766+ 96F4 AF           1 xor a
 767+ 96F5 32 2D 89     	ld (Stack_2),a
 768+ 96F8
 769+ 96F8 C9           	ret
 770+ 96F9
 771+ 96F9              ; -----------------------------------------------------------------------------------
 772+ 96F9              ;
 773+ 96F9              ;	28/2/23
 774+ 96F9              ;
 775+ 96F9              ;	Pinta los disparos generados.
 776+ 96F9
 777+ 96F9              Extrae_foto_disparos
 778+ 96F9
 779+ 96F9 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 96FC 7E               ld a,(hl)
 781+ 96FD A7               and a
 782+ 96FE C8               ret z
 783+ 96FF
 784+ 96FF 3A 3A 89     	ld a,(Numero_de_disparotes)
 785+ 9702 A7           	and a
 786+ 9703 C8           	ret z
 787+ 9704 ED 73 2B 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9708 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 970B
 790+ 970B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 970D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 970E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 970F
 794+ 970F ED 73 2D 89  	ld (Stack_2),sp
 795+ 9713 ED 7B 2B 89  	ld sp,(Stack)
 796+ 9717
 797+ 9717              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9717
 799+ 9717 3E CD        	ld a,$cd
 800+ 9719 32 21 97     	ld (Imprime2),a
 801+ 971C EB           	ex de,hl
 802+ 971D 22 22 97     	ld (Imprime2+1),hl
 803+ 9720 EB           	ex de,hl
 804+ 9721
 805+ 9721              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9721
 807+ 9721 00 00 00     Imprime2 db 0,0,0
 808+ 9724
 809+ 9724 3A 3A 89     	ld a,(Numero_de_disparotes)
 810+ 9727 3D           	dec a
 811+ 9728 28 09        	jr z,1F
 812+ 972A 32 3A 89      	ld (Numero_de_disparotes),a
 813+ 972D
 814+ 972D ED 7B 2D 89  	ld sp,(Stack_2)
 815+ 9731 18 D8        	jr 2B
 816+ 9733
 817+ 9733 AF           1 xor a
 818+ 9734 32 2D 89     	ld (Stack_2),a
 819+ 9737 C9           	ret
 820+ 9738
 821+ 9738              ; -----------------------------------------------------------------------------------
 822+ 9738              ;
 823+ 9738              ;	4/9/23
 824+ 9738              ;
 825+ 9738              ;	Rutina principal de pintado de Amadeus.
 826+ 9738              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 9738
 828+ 9738 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 973B 7E           	ld a,(hl)
 830+ 973C A7           	and a
 831+ 973D C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 973E
 833+ 973E 3A 26 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9741 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9742 C8           	ret z
 836+ 9743
 837+ 9743              ; -----------------------------------
 838+ 9743
 839+ 9743 ED 73 2B 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9747 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 974A
 842+ 974A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 974C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 974D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 974E
 846+ 974E ED 73 2D 89  	ld (Stack_2),sp
 847+ 9752 ED 7B 2B 89  	ld sp,(Stack)
 848+ 9756
 849+ 9756              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9756
 851+ 9756 3E CD        	ld a,$cd
 852+ 9758 32 60 97     	ld (Imprime_Amadeus),a
 853+ 975B EB           	ex de,hl
 854+ 975C 22 61 97     	ld (Imprime_Amadeus+1),hl
 855+ 975F EB           	ex de,hl
 856+ 9760
 857+ 9760              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 9760
 859+ 9760 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9763
 861+ 9763 ED 73 2B 89  	ld (Stack),sp
 862+ 9767
 863+ 9767 3A 26 89     	ld a,(Numero_de_malotes)
 864+ 976A 3D           	dec a
 865+ 976B 28 09        	jr z,1F
 866+ 976D 32 26 89      	ld (Numero_de_malotes),a
 867+ 9770
 868+ 9770 ED 7B 2D 89  	ld sp,(Stack_2)
 869+ 9774 18 D4        	jr 2B
 870+ 9776
 871+ 9776 AF           1 xor a
 872+ 9777 32 2D 89     	ld (Stack_2),a
 873+ 977A
 874+ 977A C9           	ret
# file closed: Draw_XOR.asm
1839  977B              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 977B              ;   índices de Rutinas de impresión.
   2+ 977B
   3+ 977B 8B 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 977D B8 97            defw Pinta_Amadeus_3x2
   5+ 977F
   6+ 977F 0E 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9781 AE 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9783 62 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9785
  10+ 9785 38 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9787 3C 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9789 F0 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 978B
  14+ 978B
  15+ 978B              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 978B              ;
  17+ 978B              ;   12/12/22
  18+ 978B              ;
  19+ 978B              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 978B              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 978B              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 978B              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 978B              ;
  24+ 978B              ;   Modifica: DE y HL.
  25+ 978B
  26+ 978B ED 73 2B 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 978F FD F9        	ld sp,iy
  28+ 9791 06 10            ld b,16
  29+ 9793 D1           1 pop de
  30+ 9794 7B               ld a,e
  31+ 9795 AE               xor (hl)
  32+ 9796 77           	ld (hl),a
  33+ 9797 23           	inc hl
  34+ 9798 7A               ld a,d
  35+ 9799 AE               xor (hl)
  36+ 979A 77           	ld (hl),a
  37+ 979B 2B           	dec hl
  38+ 979C 24           	inc h
  39+ 979D 7C               ld a,h
  40+ 979E E6 07            and 7
  41+ 97A0 20 0A            jr nz,2F
  42+ 97A2 7D               ld a,l
  43+ 97A3 C6 20            add a,$20
  44+ 97A5 6F               ld l,a
  45+ 97A6 38 04            jr c,2F
  46+ 97A8 7C               ld a,h
  47+ 97A9 D6 08            sub 8
  48+ 97AB 67               ld h,a
  49+ 97AC 7C           2 ld a,h
  50+ 97AD FE 58            cp $58
  51+ 97AF 28 02            jr z,3F
  52+ 97B1 10 E0            djnz 1B
  53+ 97B3 ED 7B 2B 89  3 ld sp,(Stack)
  54+ 97B7 C9           	ret
  55+ 97B8
  56+ 97B8 ED 73 2B 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97BC FD F9        	ld sp,iy
  58+ 97BE 06 08            ld b,8
  59+ 97C0 D1           1 pop de
  60+ 97C1 7B               ld a,e
  61+ 97C2 AE               xor (hl)
  62+ 97C3 77           	ld (hl),a
  63+ 97C4 23           	inc hl
  64+ 97C5 7A               ld a,d
  65+ 97C6 AE               xor (hl)
  66+ 97C7 77           	ld (hl),a
  67+ 97C8 23           	inc hl
  68+ 97C9 D1           	pop de
  69+ 97CA 7B               ld a,e
  70+ 97CB AE               xor (hl)
  71+ 97CC 77           	ld (hl),a
  72+ 97CD 2B           	dec hl
  73+ 97CE 2B           	dec hl
  74+ 97CF 24           	inc h
  75+ 97D0 7C               ld a,h
  76+ 97D1 E6 07            and 7
  77+ 97D3 20 0A            jr nz,2F
  78+ 97D5 7D               ld a,l
  79+ 97D6 C6 20            add a,$20
  80+ 97D8 6F               ld l,a
  81+ 97D9 38 04            jr c,2F
  82+ 97DB 7C               ld a,h
  83+ 97DC D6 08            sub 8
  84+ 97DE 67               ld h,a
  85+ 97DF 7C           2 ld a,h
  86+ 97E0 FE 58            cp $58
  87+ 97E2 28 25            jr z,4F
  88+ 97E4 7A               ld a,d
  89+ 97E5 AE               xor (hl)
  90+ 97E6 77               ld (hl),a
  91+ 97E7 D1           	pop de
  92+ 97E8 23           	inc hl
  93+ 97E9 7B               ld a,e
  94+ 97EA AE               xor (hl)
  95+ 97EB 77           	ld (hl),a
  96+ 97EC 23           	inc hl
  97+ 97ED 7A               ld a,d
  98+ 97EE AE               xor (hl)
  99+ 97EF 77           	ld (hl),a
 100+ 97F0 2B           	dec hl
 101+ 97F1 2B           	dec hl
 102+ 97F2 24           	inc h
 103+ 97F3 7C               ld a,h
 104+ 97F4 E6 07            and 7
 105+ 97F6 20 0A            jr nz,3F
 106+ 97F8 7D               ld a,l
 107+ 97F9 C6 20            add a,$20
 108+ 97FB 6F               ld l,a
 109+ 97FC 38 04            jr c,3F
 110+ 97FE 7C               ld a,h
 111+ 97FF D6 08            sub 8
 112+ 9801 67               ld h,a
 113+ 9802 7C           3 ld a,h
 114+ 9803 FE 58            cp $58
 115+ 9805 28 02            jr z,4F
 116+ 9807 10 B7            djnz 1B
 117+ 9809 ED 7B 2B 89  4 ld sp,(Stack)
 118+ 980D C9           	ret
 119+ 980E
 120+ 980E              ; ---------------------------------------------------
 121+ 980E
 122+ 980E ED 73 2B 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9812 FD F9        	ld sp,iy
 124+ 9814
 125+ 9814              ; >>>
 126+ 9814
 127+ 9814 06 10            ld b,16
 128+ 9816 D1           1 pop de
 129+ 9817 7A           	ld a,d
 130+ 9818 AE           	xor (hl)
 131+ 9819 77           	ld (hl),a
 132+ 981A 24           	inc h
 133+ 981B 7C               ld a,h
 134+ 981C E6 07            and 7
 135+ 981E 20 0C            jr nz,2F
 136+ 9820 7D               ld a,l
 137+ 9821 C6 20            add a,$20
 138+ 9823 6F               ld l,a
 139+ 9824 38 06            jr c,2F
 140+ 9826 7C               ld a,h
 141+ 9827 D6 08            sub 8
 142+ 9829 67               ld h,a
 143+ 982A 18 00            jr 2F
 144+ 982C 7C           2 ld a,h
 145+ 982D FE 58            cp $58
 146+ 982F 28 02            jr z,3F
 147+ 9831 10 E3            djnz 1B
 148+ 9833 ED 7B 2B 89  3 ld sp,(Stack)
 149+ 9837 C9           	ret
 150+ 9838
 151+ 9838 ED 73 2B 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 983C FD F9        	ld sp,iy
 153+ 983E
 154+ 983E              ; >>>
 155+ 983E
 156+ 983E 06 10            ld b,16
 157+ 9840 D1           1 pop de
 158+ 9841 7B           	ld a,e
 159+ 9842 AE           	xor (hl)
 160+ 9843 77           	ld (hl),a
 161+ 9844 24           	inc h
 162+ 9845 7C               ld a,h
 163+ 9846 E6 07            and 7
 164+ 9848 20 0C            jr nz,2F
 165+ 984A 7D               ld a,l
 166+ 984B C6 20            add a,$20
 167+ 984D 6F               ld l,a
 168+ 984E 38 06            jr c,2F
 169+ 9850 7C               ld a,h
 170+ 9851 D6 08            sub 8
 171+ 9853 67               ld h,a
 172+ 9854 18 00            jr 2F
 173+ 9856 7C           2 ld a,h
 174+ 9857 FE 58            cp $58
 175+ 9859 28 02            jr z,3F
 176+ 985B 10 E3            djnz 1B
 177+ 985D ED 7B 2B 89  3 ld sp,(Stack)
 178+ 9861 C9           	ret
 179+ 9862
 180+ 9862              ; ---------------------------------------------------
 181+ 9862
 182+ 9862 ED 73 2B 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9866 FD F9        	ld sp,iy
 184+ 9868 06 08            ld b,8
 185+ 986A D1           1 pop de
 186+ 986B 7A           	ld a,d
 187+ 986C AE           	xor (hl)
 188+ 986D 77           	ld (hl),a
 189+ 986E 23           	inc hl
 190+ 986F D1           	pop de
 191+ 9870 7B           	ld a,e
 192+ 9871 AE           	xor (hl)
 193+ 9872 77           	ld (hl),a
 194+ 9873 2B           	dec hl
 195+ 9874 24            	inc h
 196+ 9875 7C               ld a,h
 197+ 9876 E6 07            and 7
 198+ 9878 20 0A            jr nz,2F
 199+ 987A 7D               ld a,l
 200+ 987B C6 20            add a,$20
 201+ 987D 6F               ld l,a
 202+ 987E 38 04            jr c,2F
 203+ 9880 7C               ld a,h
 204+ 9881 D6 08            sub 8
 205+ 9883 67               ld h,a
 206+ 9884 7C           2 ld a,h
 207+ 9885 FE 58            cp $58
 208+ 9887 28 20            jr z,4F
 209+ 9889 D1               pop de
 210+ 988A 7B           	ld a,e
 211+ 988B AE           	xor (hl)
 212+ 988C 77           	ld (hl),a
 213+ 988D 23           	inc hl
 214+ 988E 7A           	ld a,d
 215+ 988F AE           	xor (hl)
 216+ 9890 77           	ld (hl),a
 217+ 9891 2B           	dec hl
 218+ 9892 24           	inc h
 219+ 9893 7C               ld a,h
 220+ 9894 E6 07            and 7
 221+ 9896 20 0A            jr nz,3F
 222+ 9898 7D               ld a,l
 223+ 9899 C6 20            add a,$20
 224+ 989B 6F               ld l,a
 225+ 989C 38 04            jr c,3F
 226+ 989E 7C               ld a,h
 227+ 989F D6 08            sub 8
 228+ 98A1 67               ld h,a
 229+ 98A2 7C           3 ld a,h
 230+ 98A3 FE 58            cp $58
 231+ 98A5 28 02            jr z,4F
 232+ 98A7 10 C1            djnz 1B
 233+ 98A9 ED 7B 2B 89  4 ld sp,(Stack)
 234+ 98AD C9           	ret
 235+ 98AE
 236+ 98AE ED 73 2B 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98B2 FD F9        	ld sp,iy
 238+ 98B4 06 08            ld b,8
 239+ 98B6 D1           1 pop de
 240+ 98B7 D1           	pop de
 241+ 98B8 7B           	ld a,e
 242+ 98B9 AE           	xor (hl)
 243+ 98BA 77           	ld (hl),a
 244+ 98BB 24            	inc h
 245+ 98BC 7C               ld a,h
 246+ 98BD E6 07            and 7
 247+ 98BF 20 0A            jr nz,2F
 248+ 98C1 7D               ld a,l
 249+ 98C2 C6 20            add a,$20
 250+ 98C4 6F               ld l,a
 251+ 98C5 38 04            jr c,2F
 252+ 98C7 7C               ld a,h
 253+ 98C8 D6 08            sub 8
 254+ 98CA 67               ld h,a
 255+ 98CB 7C           2 ld a,h
 256+ 98CC FE 58            cp $58
 257+ 98CE 28 1B            jr z,4F
 258+ 98D0 D1               pop de
 259+ 98D1 7A           	ld a,d
 260+ 98D2 AE           	xor (hl)
 261+ 98D3 77           	ld (hl),a
 262+ 98D4 24           	inc h
 263+ 98D5 7C               ld a,h
 264+ 98D6 E6 07            and 7
 265+ 98D8 20 0A            jr nz,3F
 266+ 98DA 7D               ld a,l
 267+ 98DB C6 20            add a,$20
 268+ 98DD 6F               ld l,a
 269+ 98DE 38 04            jr c,3F
 270+ 98E0 7C               ld a,h
 271+ 98E1 D6 08            sub 8
 272+ 98E3 67               ld h,a
 273+ 98E4 7C           3 ld a,h
 274+ 98E5 FE 58            cp $58
 275+ 98E7 28 02            jr z,4F
 276+ 98E9 10 CB            djnz 1B
 277+ 98EB ED 7B 2B 89  4 ld sp,(Stack)
 278+ 98EF C9           	ret
 279+ 98F0
 280+ 98F0 ED 73 2B 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98F4 FD F9        	ld sp,iy
 282+ 98F6 06 08            ld b,8
 283+ 98F8 D1           1 pop de
 284+ 98F9 7B           	ld a,e
 285+ 98FA AE           	xor (hl)
 286+ 98FB 77           	ld (hl),a
 287+ 98FC 23           	inc hl
 288+ 98FD 7A           	ld a,d
 289+ 98FE AE           	xor (hl)
 290+ 98FF 77           	ld (hl),a
 291+ 9900 2B           	dec hl
 292+ 9901 24             	inc h
 293+ 9902 7C               ld a,h
 294+ 9903 E6 07            and 7
 295+ 9905 20 0A            jr nz,2F
 296+ 9907 7D               ld a,l
 297+ 9908 C6 20            add a,$20
 298+ 990A 6F               ld l,a
 299+ 990B 38 04            jr c,2F
 300+ 990D 7C               ld a,h
 301+ 990E D6 08            sub 8
 302+ 9910 67               ld h,a
 303+ 9911 7C           2 ld a,h
 304+ 9912 FE 58            cp $58
 305+ 9914 28 21            jr z,4F
 306+ 9916 D1               pop de
 307+ 9917 7A           	ld a,d
 308+ 9918 AE           	xor (hl)
 309+ 9919 77           	ld (hl),a
 310+ 991A 23           	inc hl
 311+ 991B D1               pop de
 312+ 991C 7B           	ld a,e
 313+ 991D AE           	xor (hl)
 314+ 991E 77           	ld (hl),a
 315+ 991F 2B           	dec hl
 316+ 9920 24           	inc h
 317+ 9921 7C               ld a,h
 318+ 9922 E6 07            and 7
 319+ 9924 20 0A            jr nz,3F
 320+ 9926 7D               ld a,l
 321+ 9927 C6 20            add a,$20
 322+ 9929 6F               ld l,a
 323+ 992A 38 04            jr c,3F
 324+ 992C 7C               ld a,h
 325+ 992D D6 08            sub 8
 326+ 992F 67               ld h,a
 327+ 9930 7C           3 ld a,h
 328+ 9931 FE 58            cp $58
 329+ 9933 28 02            jr z,4F
 330+ 9935 10 C1            djnz 1B
 331+ 9937 ED 7B 2B 89  4 ld sp,(Stack)
 332+ 993B C9           	ret
 333+ 993C
 334+ 993C ED 73 2B 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9940 FD F9        	ld sp,iy
 336+ 9942 06 08            ld b,8
 337+ 9944 D1           1 pop de
 338+ 9945 7B           	ld a,e
 339+ 9946 AE           	xor (hl)
 340+ 9947 77           	ld (hl),a
 341+ 9948 24            	inc h
 342+ 9949 7C               ld a,h
 343+ 994A E6 07            and 7
 344+ 994C 20 0A            jr nz,2F
 345+ 994E 7D               ld a,l
 346+ 994F C6 20            add a,$20
 347+ 9951 6F               ld l,a
 348+ 9952 38 04            jr c,2F
 349+ 9954 7C               ld a,h
 350+ 9955 D6 08            sub 8
 351+ 9957 67               ld h,a
 352+ 9958 7C           2 ld a,h
 353+ 9959 FE 58            cp $58
 354+ 995B 28 1C            jr z,4F
 355+ 995D D1               pop de
 356+ 995E 7A           	ld a,d
 357+ 995F AE           	xor (hl)
 358+ 9960 77           	ld (hl),a
 359+ 9961 24           	inc h
 360+ 9962 7C               ld a,h
 361+ 9963 E6 07            and 7
 362+ 9965 20 0A            jr nz,3F
 363+ 9967 7D               ld a,l
 364+ 9968 C6 20            add a,$20
 365+ 996A 6F               ld l,a
 366+ 996B 38 04            jr c,3F
 367+ 996D 7C               ld a,h
 368+ 996E D6 08            sub 8
 369+ 9970 67               ld h,a
 370+ 9971 7C           3 ld a,h
 371+ 9972 FE 58            cp $58
 372+ 9974 28 03            jr z,4F
 373+ 9976 D1               pop de
 374+ 9977 10 CB            djnz 1B
 375+ 9979 ED 7B 2B 89  4 ld sp,(Stack)
 376+ 997D C9           	ret
 377+ 997E
 378+ 997E              ; ---------------------------------------------------
 379+ 997E              ;
 380+ 997E              ;   27/02/23
 381+ 997E              ;
 382+ 997E              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 997E              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 997E              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 997E
 386+ 997E ED 73 2B 89  Pinta_Disparo ld (Stack),sp
 387+ 9982 FD F9            ld sp,iy
 388+ 9984 06 03            ld b,3
 389+ 9986 D1           1 pop de
 390+ 9987 7B               ld a,e
 391+ 9988 AE               xor (hl)
 392+ 9989 77               ld (hl),a
 393+ 998A 23               inc hl
 394+ 998B 7A               ld a,d
 395+ 998C AE               xor (hl)
 396+ 998D 77               ld (hl),a
 397+ 998E 2B               dec hl
 398+ 998F
 399+ 998F 24               inc h
 400+ 9990 7C               ld a,h
 401+ 9991 E6 07            and 7
 402+ 9993 20 0A            jr nz,2F
 403+ 9995 7D               ld a,l
 404+ 9996 C6 20            add a,$20
 405+ 9998 6F               ld l,a
 406+ 9999 38 04            jr c,2F
 407+ 999B 7C               ld a,h
 408+ 999C D6 08            sub 8
 409+ 999E 67               ld h,a
 410+ 999F 7C           2 ld a,h
 411+ 99A0 FE 58            cp $58
 412+ 99A2 28 02            jr z,3F
 413+ 99A4
 414+ 99A4 10 E0            djnz 1B
 415+ 99A6 ED 7B 2B 89  3 ld sp,(Stack)
 416+ 99AA C9               ret
 417+ 99AB
# file closed: Rutinas_de_impresion_sprites.asm
1840  99AB              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99AB              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99AB              ;
   3+ 99AB              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99AB              ;
   5+ 99AB              ; *****************************************************************************************************************************************************************************************
   6+ 99AB              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99AB
   8+ 99AB 7C           calcula_tercio ld a,h
   9+ 99AC E6 18        	and $18
  10+ 99AE CB 2F        	sra a
  11+ 99B0 CB 2F        	sra a
  12+ 99B2 CB 2F        	sra a
  13+ 99B4 C9           	ret
  14+ 99B5
# file closed: calcula_tercio.asm
1841  99B5              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99B5              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99B5              ;
   3+ 99B5              ;
   4+ 99B5              ;	CLS.
   5+ 99B5              ;
   6+ 99B5              ;	Limpia la pantalla y define sus atributos.
   7+ 99B5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99B5              ;
   9+ 99B5              ;	COLORES: 0 ..... NEGRO
  10+ 99B5              ;    		 1 ..... AZUL
  11+ 99B5              ; 			 2 ..... ROJO
  12+ 99B5              ;			 3 ..... MAGENTA
  13+ 99B5              ; 			 4 ..... VERDE
  14+ 99B5              ; 			 5 ..... CIAN
  15+ 99B5              ;			 6 ..... AMARILLO
  16+ 99B5              ; 			 7 ..... BLANCO
  17+ 99B5              ;
  18+ 99B5              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99B5              ;
  20+ 99B5              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99B5
  22+ 99B5
  23+ 99B5 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99B8 11 01 40     	LD DE,$4001
  25+ 99BB 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99BE 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99C0 ED B0        	LDIR
  28+ 99C2 01 FF 02     	LD BC,767
  29+ 99C5 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99C6 ED B0        	LDIR
  31+ 99C8 C9           	ret
  32+ 99C9
# file closed: Cls.asm
1842  99C9              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99C9              ; ******************************************************************************************************************************************************************************************
   2+ 99C9              ;
   3+ 99C9              ;   20/05/23
   4+ 99C9              ;
   5+ 99C9              ;	Recompone_posicion_inicio
   6+ 99C9              ;
   7+ 99C9              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99C9              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99C9              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99C9              ;	_ a una u otra rutina.
  11+ 99C9
  12+ 99C9              Recompone_posicion_inicio
  13+ 99C9
  14+ 99C9 2A E7 88     	ld hl,(Posicion_inicio)
  15+ 99CC 7D           	ld a,l
  16+ 99CD E6 1F        	and $1f
  17+ 99CF 28 16        	jr z,1F
  18+ 99D1
  19+ 99D1 FE 1F        	cp $1f
  20+ 99D3 28 0D        	jr z,3F
  21+ 99D5
  22+ 99D5 21 16 89     	ld hl,Ctrl_2
  23+ 99D8 CB C6        	set 0,(hl)
  24+ 99DA 2A D9 88     	ld hl,(Puntero_objeto)
  25+ 99DD 22 1B 89     	ld (Repone_puntero_objeto),hl
  26+ 99E0 18 08        	jr 2F
  27+ 99E2
  28+ 99E2 CD 91 9B     3 call Mov_left
  29+ 99E5 18 03        	jr 2F
  30+ 99E7
  31+ 99E7 CD 73 9A     1 call Mov_right
  32+ 99EA 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99ED 22 D9 88     	ld (Puntero_objeto),hl
  34+ 99F0 C9           	ret
  35+ 99F1
  36+ 99F1              ; ******************************************************************************************************************************************************************************************
  37+ 99F1              ;
  38+ 99F1              ;   27/05/23
  39+ 99F1              ;
  40+ 99F1              ;	Mov_down
  41+ 99F1              ;
  42+ 99F1              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99F1              ;
  44+ 99F1              ;
  45+ 99F1              Mov_down
  46+ 99F1
  47+ 99F1 CD 61 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99F4              ;																	; _ repone (Puntero_objeto).
  49+ 99F4 21 05 89     	ld hl,Ctrl_0
  50+ 99F7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99F9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99F9              ; 																	; _ en el caso de que no lo haya.
  53+ 99F9 3A ED 88     	ld a,(Vel_down)
  54+ 99FC 47           	ld b,a
  55+ 99FD 2A D7 88         ld hl,(Posicion_actual)
  56+ 9A00 CD AB 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A03 E6 02        	and 2
  58+ 9A05 28 1D        	jr z,1F
  59+ 9A07
  60+ 9A07              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A07              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A07
  63+ 9A07 7C           	ld a,h
  64+ 9A08 FE 57        	cp $57
  65+ 9A0A 20 18        	jr nz,1F
  66+ 9A0C
  67+ 9A0C 7D           	ld a,l
  68+ 9A0D C6 20        	add $20
  69+ 9A0F 30 13        	jr nc,1F
  70+ 9A11
  71+ 9A11              ; ------------------------------
  72+ 9A11              ;
  73+ 9A11              ;	28/12/15
  74+ 9A11
  75+ 9A11              ;	call Reaparece_arriba
  76+ 9A11 CD 1E 9D     	call Reinicio
  77+ 9A14
  78+ 9A14              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  79+ 9A14              ;	Recordamos que ´solo las "Entidades_guía" ejecutan las rutinas de movimiento.
  80+ 9A14
  81+ 9A14 3A 39 89     	ld a,(Ctrl_3)
  82+ 9A17 CB 5F        	bit 3,a
  83+ 9A19 20 11        	jr nz,3F
  84+ 9A1B
  85+ 9A1B CB 8F        	res 1,a
  86+ 9A1D CB D7        	set 2,a												; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  87+ 9A1F
  88+ 9A1F 32 39 89     	ld (Ctrl_3),a
  89+ 9A22
  90+ 9A22 18 08        	jr 3F
  91+ 9A24              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  92+ 9A24              ;															; _a la siguiente entidad como "Entidad_guía".
  93+ 9A24              ; ------------------------------
  94+ 9A24
  95+ 9A24 CD 98 96     1 call NextScan
  96+ 9A27 22 D7 88     	ld (Posicion_actual),hl
  97+ 9A2A 10 D4            djnz 2B
  98+ 9A2C CD 44 9D     3 call Genera_coordenadas
  99+ 9A2F C9           	ret
 100+ 9A30
 101+ 9A30              ; ******************************************************************************************************************************************************************************************
 102+ 9A30              ;
 103+ 9A30              ;   27/05/23
 104+ 9A30              ;
 105+ 9A30              ;	Mov_up
 106+ 9A30              ;
 107+ 9A30              ; 	Mueve el Sprite hacia arriba.
 108+ 9A30              ;
 109+ 9A30              ;
 110+ 9A30              Mov_up
 111+ 9A30
 112+ 9A30 CD 61 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 113+ 9A33              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 114+ 9A33 21 05 89     	ld hl,Ctrl_0
 115+ 9A36 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 116+ 9A38              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 117+ 9A38              ; 																		; _ en el caso de que no lo haya.
 118+ 9A38 3A EC 88     	ld a,(Vel_up)
 119+ 9A3B 47           	ld b,a
 120+ 9A3C 2A D7 88     	ld hl,(Posicion_actual)
 121+ 9A3F CD AB 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 122+ 9A42 A7           	and a
 123+ 9A43 20 10        	jr nz,1F
 124+ 9A45
 125+ 9A45              ; Nos encontramos en el 1er tercio de pantalla.
 126+ 9A45              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 127+ 9A45
 128+ 9A45 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 129+ 9A46 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 130+ 9A48 20 0B            jr nz,1F
 131+ 9A4A 7D               ld a,l
 132+ 9A4B D6 20            sub $20
 133+ 9A4D 30 06            jr nc,1F
 134+ 9A4F 25               dec h
 135+ 9A50
 136+ 9A50              ; -----------------------------
 137+ 9A50 CD FF 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 138+ 9A53              ;	call Reinicio
 139+ 9A53              ; -----------------------------
 140+ 9A53
 141+ 9A53 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 142+ 9A55 CD A7 96     1 call PreviousScan
 143+ 9A58 22 D7 88     	ld (Posicion_actual),hl
 144+ 9A5B 10 E2            djnz 3B
 145+ 9A5D CD 44 9D     2 call Genera_coordenadas
 146+ 9A60 C9           	ret
 147+ 9A61
 148+ 9A61              ; -----------------------------
 149+ 9A61              ;
 150+ 9A61              ;	27/5/23
 151+ 9A61              ;
 152+ 9A61              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 153+ 9A61              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 154+ 9A61              ;
 155+ 9A61              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 156+ 9A61              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 157+ 9A61              ;
 158+ 9A61              ;	Modifica: A y (Puntero_objeto).
 159+ 9A61
 160+ 9A61 3A 16 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 161+ 9A64 CB 47        	bit 0,a
 162+ 9A66 C8           	ret z
 163+ 9A67 CB 87        	res 0,a
 164+ 9A69 32 16 89     	ld (Ctrl_2),a
 165+ 9A6C 2A 1B 89     	ld hl,(Repone_puntero_objeto)
 166+ 9A6F 22 D9 88     	ld (Puntero_objeto),hl
 167+ 9A72 C9           	ret
 168+ 9A73
 169+ 9A73              ; ******************************************************************************************************************************************************************************************
 170+ 9A73              ;
 171+ 9A73              ;	19/10/22
 172+ 9A73              ;
 173+ 9A73              ;	Mov_right.
 174+ 9A73              ;
 175+ 9A73              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 176+ 9A73              ;
 177+ 9A73
 178+ 9A73 21 05 89     Mov_right ld hl,Ctrl_0
 179+ 9A76 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 180+ 9A78              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 181+ 9A78              ; 																	; _ en el caso de que no lo haya.
 182+ 9A78 3A 05 89     	ld a,(Ctrl_0)
 183+ 9A7B CB 77        	bit 6,a
 184+ 9A7D 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 185+ 9A7F
 186+ 9A7F CD AD 9C     	call Stop_Amadeus_right
 187+ 9A82 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 188+ 9A83 18 4D        	jr 8F
 189+ 9A85
 190+ 9A85 3A DB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 191+ 9A88 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 192+ 9A8A 20 46        	jr nz,8F
 193+ 9A8C
 194+ 9A8C 3A DD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 195+ 9A8F A7           	and a 															; _[3] para continuar con el DESPLZ.
 196+ 9A90 28 40        	jr z,8F
 197+ 9A92
 198+ 9A92              ; ---------- ---------- ----------
 199+ 9A92              ;
 200+ 9A92              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 201+ 9A92
 202+ 9A92 3A EB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 203+ 9A95 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 204+ 9A97 28 11        	jr z,1F
 205+ 9A99 38 06        	jr c,6F
 206+ 9A9B FE 04        	cp 4
 207+ 9A9D 28 14        	jr z,7F
 208+ 9A9F 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 209+ 9AA1
 210+ 9AA1              ; ---------- ---------- ----------
 211+ 9AA1              ;
 212+ 9AA1              ; Perfiles de velocidad
 213+ 9AA1              ;
 214+ 9AA1
 215+ 9AA1 3A DD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 216+ 9AA4 FE FE        	cp $fe
 217+ 9AA6 20 2A        	jr nz,8F
 218+ 9AA8 18 10        	jr 3F
 219+ 9AAA 3A DD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 220+ 9AAD FE FD        	cp $fd
 221+ 9AAF 20 21        	jr nz,8F
 222+ 9AB1 18 07        	jr 3F
 223+ 9AB3 3A DD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 224+ 9AB6 FE FB        	cp $fb
 225+ 9AB8 20 18        	jr nz,8F
 226+ 9ABA
 227+ 9ABA              ; ---------- ---------- ----------
 228+ 9ABA
 229+ 9ABA              3
 230+ 9ABA CD ED 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 231+ 9ABD              ;	call Reinicio
 232+ 9ABD
 233+ 9ABD              ; ---------- ---------- ----------
 234+ 9ABD              ;
 235+ 9ABD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 236+ 9ABD
 237+ 9ABD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 238+ 9ABF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 239+ 9AC0 CD D9 9A     	call DESPLZ_DER
 240+ 9AC3 C1           	pop bc
 241+ 9AC4 10 F9        	djnz 5B
 242+ 9AC6 2A D7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 243+ 9AC9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 244+ 9ACA 22 D7 88     	ld (Posicion_actual),hl
 245+ 9ACD CD 44 9D     	call Genera_coordenadas
 246+ 9AD0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 247+ 9AD2
 248+ 9AD2              ; ---------- ---------- ----------
 249+ 9AD2
 250+ 9AD2 2A D7 88     8 ld hl,(Posicion_actual)
 251+ 9AD5 CD D9 9A     	call DESPLZ_DER
 252+ 9AD8 C9           2 ret
 253+ 9AD9
 254+ 9AD9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 255+ 9AD9              ;
 256+ 9AD9              ;	22/9/22
 257+ 9AD9              ;
 258+ 9AD9
 259+ 9AD9 CD E8 9A     DESPLZ_DER call Desplaza_derecha
 260+ 9ADC CD 34 9B         call modifica_parametros_1er_DESPLZ_2
 261+ 9ADF CD 5D 9B         call Ciclo_completo
 262+ 9AE2 21 05 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 263+ 9AE5 CB FE        	set 7,(hl)
 264+ 9AE7 C9           	ret
 265+ 9AE8
 266+ 9AE8              ; ******************************************************************************************************************************************************************************************
 267+ 9AE8              ;	15/02/23
 268+ 9AE8              ;
 269+ 9AE8
 270+ 9AE8 3A EB 88     Desplaza_derecha ld a,(Vel_right)
 271+ 9AEB 47           	ld b,a
 272+ 9AEC 2A E3 88     	ld hl,(Puntero_DESPLZ_der)
 273+ 9AEF 23           1 inc hl
 274+ 9AF0 23           	inc hl
 275+ 9AF1 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 276+ 9AF3 22 E3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 277+ 9AF6 CD 30 8D     	call Extrae_address
 278+ 9AF9 22 D9 88     	ld (Puntero_objeto),hl
 279+ 9AFC
 280+ 9AFC              ; Modifica (Puntero_DESPLZ_izq).
 281+ 9AFC
 282+ 9AFC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 283+ 9AFC              ; Cuántos movimientos hemos hecho ??
 284+ 9AFC              ; DE contiene (Puntero_DESPLZ_der).
 285+ 9AFC
 286+ 9AFC 2A DF 88     7 ld hl,(Indice_Sprite_der)
 287+ 9AFF EB           	ex de,hl
 288+ 9B00 A7           	and a
 289+ 9B01 ED 52        	sbc hl,de
 290+ 9B03 CB 3D        	srl l
 291+ 9B05 3E 08        6 ld a,8
 292+ 9B07 95           	sub l
 293+ 9B08 30 1E        	jr nc,3F
 294+ 9B0A
 295+ 9B0A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 296+ 9B0A              ; B="0".
 297+ 9B0A
 298+ 9B0A 04           4 inc b
 299+ 9B0B 3C           	inc a
 300+ 9B0C 20 FC        	jr nz,4B
 301+ 9B0E 78           	ld a,b
 302+ 9B0F 08           	ex af,af
 303+ 9B10 2A DF 88     	ld hl,(Indice_Sprite_der)
 304+ 9B13 23           5 inc hl
 305+ 9B14 23           	inc hl
 306+ 9B15 10 FC        	djnz 5B
 307+ 9B17 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 308+ 9B1A CD 30 8D     	call Extrae_address
 309+ 9B1D 22 D9 88     	ld (Puntero_objeto),hl
 310+ 9B20
 311+ 9B20              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 312+ 9B20              ; _(Posicion_actual).
 313+ 9B20
 314+ 9B20 21 D7 88     	ld hl,Posicion_actual
 315+ 9B23 34           	inc (hl)
 316+ 9B24 08               ex af,af
 317+ 9B25 6F           	ld l,a
 318+ 9B26 18 DD        	jr 6B
 319+ 9B28
 320+ 9B28              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 321+ 9B28
 322+ 9B28 47           3 ld b,a
 323+ 9B29 2A E1 88     	ld hl,(Indice_Sprite_izq)
 324+ 9B2C 23           2 inc hl
 325+ 9B2D 23           	inc hl
 326+ 9B2E 10 FC        	djnz 2B
 327+ 9B30 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
 328+ 9B33 C9           8 ret
 329+ 9B34
 330+ 9B34              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 331+ 9B34              ;
 332+ 9B34              ;	24/7/22
 333+ 9B34              ;
 334+ 9B34              ;	modifica_parametros_1er_DESPLZ_2
 335+ 9B34              ;
 336+ 9B34              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 337+ 9B34              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 338+ 9B34              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 339+ 9B34
 340+ 9B34 3A DD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 341+ 9B37 A7           	and a
 342+ 9B38 20 1F        	jr nz,1F
 343+ 9B3A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 344+ 9B3C 32 DD 88         ld (CTRL_DESPLZ),a
 345+ 9B3F
 346+ 9B3F 21 D6 88     	ld hl,Columns
 347+ 9B42 34           	inc (hl)
 348+ 9B43 3A E9 88     	ld a,(Cuad_objeto)
 349+ 9B46 E6 01        	and 1
 350+ 9B48 28 0F        	jr z,1F
 351+ 9B4A 2A D7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 352+ 9B4D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 353+ 9B4E 22 D7 88     	ld (Posicion_actual),hl
 354+ 9B51 CD 44 9D     	call Genera_coordenadas
 355+ 9B54 CD B9 9C     	call Inc_CTRL_DESPLZ
 356+ 9B57 18 03        	jr 2F
 357+ 9B59 CD B9 9C     1 call Inc_CTRL_DESPLZ
 358+ 9B5C C9           2 ret
 359+ 9B5D
 360+ 9B5D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 361+ 9B5D              ;
 362+ 9B5D              ;	24/7/22
 363+ 9B5D              ;
 364+ 9B5D              ;	Ciclo_completo.
 365+ 9B5D              ;
 366+ 9B5D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 367+ 9B5D              ;
 368+ 9B5D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 369+ 9B5D              ; 	Decrementamos (Columns).
 370+ 9B5D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 371+ 9B5D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 372+ 9B5D
 373+ 9B5D
 374+ 9B5D 3A DD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 375+ 9B60 FE FF        	cp $ff
 376+ 9B62 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 377+ 9B64 E6 F0        	and $f0
 378+ 9B66 20 28        	jr nz,3F
 379+ 9B68
 380+ 9B68              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 381+ 9B68
 382+ 9B68 3A DD 88     	ld a,(CTRL_DESPLZ)
 383+ 9B6B 47           	ld b,a
 384+ 9B6C 3E F8        	ld a,$f8
 385+ 9B6E 80           	add b
 386+ 9B6F 32 DD 88     	ld (CTRL_DESPLZ),a
 387+ 9B72 18 1C        	jr 3F
 388+ 9B74 21 D6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 389+ 9B77 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 390+ 9B78 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 391+ 9B79 32 DD 88     	ld (CTRL_DESPLZ),a
 392+ 9B7C 3A E9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 393+ 9B7F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 394+ 9B81 20 0A        	jr nz,2F
 395+ 9B83 2A D7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 396+ 9B86 23           	inc hl
 397+ 9B87 22 D7 88     	ld (Posicion_actual),hl
 398+ 9B8A CD 44 9D     	call Genera_coordenadas
 399+ 9B8D
 400+ 9B8D              ; Inicia el puntero de Sprite.
 401+ 9B8D
 402+ 9B8D CD 47 8D     2 call Inicia_puntero_objeto_der
 403+ 9B90 C9           3 ret
 404+ 9B91
 405+ 9B91              ; ******************************************************************************************************************************************************************************************
 406+ 9B91              ;
 407+ 9B91              ;	15/02/23
 408+ 9B91              ;
 409+ 9B91              ;	Mov_left.
 410+ 9B91              ;
 411+ 9B91              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 412+ 9B91              ;
 413+ 9B91              Mov_left
 414+ 9B91
 415+ 9B91 21 05 89     	ld hl,Ctrl_0
 416+ 9B94 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 417+ 9B96              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 418+ 9B96              ; 																	; _ en el caso de que no lo haya.
 419+ 9B96 3A 05 89     	ld a,(Ctrl_0)
 420+ 9B99 CB 77        	bit 6,a
 421+ 9B9B 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 422+ 9B9D
 423+ 9B9D CD B3 9C     	call Stop_Amadeus_left
 424+ 9BA0 C8           	ret z
 425+ 9BA1 20 4A        	jr nz,8F
 426+ 9BA3
 427+ 9BA3 3A DB 88     11 ld a,(Coordenada_X)
 428+ 9BA6 A7           	and a
 429+ 9BA7 20 44        	jr nz,8F
 430+ 9BA9
 431+ 9BA9 3A DD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 432+ 9BAC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 433+ 9BAD 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 434+ 9BAF
 435+ 9BAF              ; ---------- ---------- ----------
 436+ 9BAF
 437+ 9BAF 3A EA 88     	ld a,(Vel_left)
 438+ 9BB2 FE 02        	cp 2
 439+ 9BB4 28 0F        	jr z,1F
 440+ 9BB6 38 04        	jr c,6F
 441+ 9BB8 FE 04        	cp 4
 442+ 9BBA 28 12        	jr z,7F
 443+ 9BBC
 444+ 9BBC              ; ---------- ---------- ----------
 445+ 9BBC
 446+ 9BBC 3A DD 88     6 ld a,(CTRL_DESPLZ)
 447+ 9BBF FE F8        	cp $f8
 448+ 9BC1 20 2A        	jr nz,8F
 449+ 9BC3 18 10        	jr 4F
 450+ 9BC5 3A DD 88     1 ld a,(CTRL_DESPLZ)
 451+ 9BC8 FE F9        	cp $f9
 452+ 9BCA 20 21        	jr nz,8F
 453+ 9BCC 18 07        	jr 4F
 454+ 9BCE 3A DD 88     7 ld a,(CTRL_DESPLZ)
 455+ 9BD1 FE FB        	cp $fb
 456+ 9BD3 20 18        	jr nz,8F
 457+ 9BD5
 458+ 9BD5              ; ---------- ---------- ----------
 459+ 9BD5
 460+ 9BD5              4
 461+ 9BD5 CD DB 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 462+ 9BD8              ;	call Reinicio
 463+ 9BD8
 464+ 9BD8              ; ---------- ---------- ----------
 465+ 9BD8
 466+ 9BD8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 467+ 9BDA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 468+ 9BDB
 469+ 9BDB              ;	ld hl,(Indice_Sprite_izq)
 470+ 9BDB              ;	ld (Puntero_DESPLZ_izq),hl
 471+ 9BDB
 472+ 9BDB CD F4 9B     	call DESPLZ_IZQ
 473+ 9BDE C1           	pop bc
 474+ 9BDF 10 F9        	djnz 5B
 475+ 9BE1 2A D7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 476+ 9BE4 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 477+ 9BE5 22 D7 88     	ld (Posicion_actual),hl
 478+ 9BE8 CD 44 9D     	call Genera_coordenadas
 479+ 9BEB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 480+ 9BED
 481+ 9BED              ; ---------- ---------- ----------
 482+ 9BED
 483+ 9BED              ; Movemos, no hay recolocación.
 484+ 9BED
 485+ 9BED 2A D7 88     8 ld hl,(Posicion_actual)
 486+ 9BF0 CD F4 9B     	call DESPLZ_IZQ
 487+ 9BF3 C9           2 ret
 488+ 9BF4
 489+ 9BF4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 490+ 9BF4              ;
 491+ 9BF4              ;	22/9/22
 492+ 9BF4
 493+ 9BF4              DESPLZ_IZQ
 494+ 9BF4
 495+ 9BF4 CD 03 9C     	call Desplaza_izquierda
 496+ 9BF7 CD 4F 9C         call modifica_parametros_1er_DESPLZ
 497+ 9BFA CD 77 9C     	call Ciclo_completo_2
 498+ 9BFD 21 05 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 499+ 9C00 CB BE        	res 7,(hl)
 500+ 9C02 C9           	ret
 501+ 9C03
 502+ 9C03              Desplaza_izquierda
 503+ 9C03
 504+ 9C03 3A EA 88     	ld a,(Vel_left)
 505+ 9C06 47           	ld b,a
 506+ 9C07 2A E5 88     	ld hl,(Puntero_DESPLZ_izq)
 507+ 9C0A 23           1 inc hl
 508+ 9C0B 23           	inc hl
 509+ 9C0C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 510+ 9C0E 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
 511+ 9C11 CD 30 8D     	call Extrae_address
 512+ 9C14 22 D9 88     	ld (Puntero_objeto),hl
 513+ 9C17
 514+ 9C17              ; Modifica (Puntero_DESPLZ_der).
 515+ 9C17
 516+ 9C17              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 517+ 9C17              ; Cuántos movimientos hemos hecho ??
 518+ 9C17              ; DE contiene (Puntero_DESPLZ_izq).
 519+ 9C17
 520+ 9C17 2A E1 88     7 ld hl,(Indice_Sprite_izq)
 521+ 9C1A EB           	ex de,hl
 522+ 9C1B A7           	and a
 523+ 9C1C ED 52        	sbc hl,de
 524+ 9C1E CB 3D        	srl l
 525+ 9C20 3E 08        6 ld a,8
 526+ 9C22 95           	sub l
 527+ 9C23 30 1E        	jr nc,3F
 528+ 9C25
 529+ 9C25              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 530+ 9C25              ; B="0".
 531+ 9C25
 532+ 9C25 04           4 inc b
 533+ 9C26 3C           	inc a
 534+ 9C27 20 FC        	jr nz,4B
 535+ 9C29 78           	ld a,b
 536+ 9C2A 08           	ex af,af
 537+ 9C2B 2A E1 88     	ld hl,(Indice_Sprite_izq)
 538+ 9C2E 23           5 inc hl
 539+ 9C2F 23           	inc hl
 540+ 9C30 10 FC        	djnz 5B
 541+ 9C32 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
 542+ 9C35 CD 30 8D     	call Extrae_address
 543+ 9C38 22 D9 88     	ld (Puntero_objeto),hl
 544+ 9C3B
 545+ 9C3B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 546+ 9C3B              ; _(Posicion_actual).
 547+ 9C3B
 548+ 9C3B 21 D7 88     	ld hl,Posicion_actual
 549+ 9C3E 35           	dec (hl)
 550+ 9C3F 08           	ex af,af
 551+ 9C40 6F           	ld l,a
 552+ 9C41 18 DD        	jr 6B
 553+ 9C43
 554+ 9C43              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 555+ 9C43
 556+ 9C43 47           3 ld b,a
 557+ 9C44 2A DF 88     	ld hl,(Indice_Sprite_der)
 558+ 9C47 23           2 inc hl
 559+ 9C48 23           	inc hl
 560+ 9C49 10 FC        	djnz 2B
 561+ 9C4B 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 562+ 9C4E C9           8 ret
 563+ 9C4F
 564+ 9C4F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 565+ 9C4F              ;
 566+ 9C4F              ;	modifica_parametros_1er_DESPLZ
 567+ 9C4F              ;
 568+ 9C4F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 569+ 9C4F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 570+ 9C4F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 571+ 9C4F
 572+ 9C4F 3A DD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 573+ 9C52 A7           	and a
 574+ 9C53 20 1E        	jr nz,1F
 575+ 9C55 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 576+ 9C56 32 DD 88         ld (CTRL_DESPLZ),a
 577+ 9C59 21 D6 88     	ld hl,Columns
 578+ 9C5C 34           	inc (hl)
 579+ 9C5D 3A E9 88     	ld a,(Cuad_objeto)
 580+ 9C60 E6 01        	and 1
 581+ 9C62 20 0F        	jr nz,1F
 582+ 9C64 2A D7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 583+ 9C67 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 584+ 9C68 22 D7 88     	ld (Posicion_actual),hl
 585+ 9C6B CD 44 9D     	call Genera_coordenadas
 586+ 9C6E CD CA 9C     	call Dec_CTRL_DESPLZ
 587+ 9C71 18 03        	jr 2F
 588+ 9C73 CD CA 9C     1 call Dec_CTRL_DESPLZ
 589+ 9C76 C9           2 ret
 590+ 9C77
 591+ 9C77              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 592+ 9C77
 593+ 9C77 3A DD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 594+ 9C7A FE F7        	cp $f7
 595+ 9C7C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 596+ 9C7E 30 2C        	jr nc,3F
 597+ 9C80
 598+ 9C80              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 599+ 9C80
 600+ 9C80 06 00        	ld b,0
 601+ 9C82 04           4 inc b
 602+ 9C83 3C           	inc a
 603+ 9C84 FE F7        	cp $f7
 604+ 9C86 20 FA        	jr nz,4B
 605+ 9C88 3E FF        	ld a,$ff
 606+ 9C8A 90           	sub b
 607+ 9C8B 32 DD 88     	ld (CTRL_DESPLZ),a
 608+ 9C8E 18 1C        	jr 3F
 609+ 9C90
 610+ 9C90              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 611+ 9C90
 612+ 9C90 21 D6 88     1 ld hl,Columns
 613+ 9C93 35           	dec (hl)
 614+ 9C94 AF           	xor a
 615+ 9C95 32 DD 88     	ld (CTRL_DESPLZ),a
 616+ 9C98 3A E9 88     	ld a,(Cuad_objeto)
 617+ 9C9B E6 01        	and 1
 618+ 9C9D 28 0A        	jr z,2F
 619+ 9C9F 2A D7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 620+ 9CA2 2B           	dec hl
 621+ 9CA3 22 D7 88     	ld (Posicion_actual),hl
 622+ 9CA6 CD 44 9D     	call Genera_coordenadas
 623+ 9CA9
 624+ 9CA9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 625+ 9CA9
 626+ 9CA9 CD 5A 8D     2 call Inicia_puntero_objeto_izq
 627+ 9CAC C9           3 ret
 628+ 9CAD
 629+ 9CAD              ; ---------- ---------- ---------- ---------- ---------- ----------
 630+ 9CAD              ;
 631+ 9CAD              ;	19/10/22
 632+ 9CAD              ;
 633+ 9CAD              ;	(cp 29) para un Amadeus de 3 Columns.
 634+ 9CAD              ;	(cp 30)   ""  ""    ""     2 Columns.
 635+ 9CAD
 636+ 9CAD 3A DB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 637+ 9CB0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 638+ 9CB2 C9           	ret
 639+ 9CB3
 640+ 9CB3              ; ---------- ---------- ---------- ---------- ---------- ----------
 641+ 9CB3              ;
 642+ 9CB3              ;	19/10/22
 643+ 9CB3              ;
 644+ 9CB3              ;	(cp 2) para un Amadeus de 3 Columns.
 645+ 9CB3              ;	(cp 1)   ""  ""    ""     2 Columns.
 646+ 9CB3
 647+ 9CB3 3A DB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 648+ 9CB6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 649+ 9CB8 C9           	ret
 650+ 9CB9
 651+ 9CB9              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CB9              ;
 653+ 9CB9              ;	24/7/22
 654+ 9CB9              ;
 655+ 9CB9              ;	Inc_CTRL_DESPLZ
 656+ 9CB9              ;
 657+ 9CB9              ;
 658+ 9CB9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CB9
 660+ 9CB9 21 DD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CBC 3A EB 88     	ld a,(Vel_right)
 662+ 9CBF A7           	and a
 663+ 9CC0 28 06        	jr z,1F
 664+ 9CC2 47           	ld b,a
 665+ 9CC3 34           3 inc (hl)
 666+ 9CC4 10 FD        	djnz 3B
 667+ 9CC6 18 01        	jr 2F
 668+ 9CC8 34           1 inc (hl)
 669+ 9CC9 C9           2 ret
 670+ 9CCA
 671+ 9CCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CCA              ;
 673+ 9CCA              ;	5/2/23
 674+ 9CCA              ;
 675+ 9CCA              ;	Dec_CTRL_DESPLZ
 676+ 9CCA              ;
 677+ 9CCA              ;
 678+ 9CCA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 679+ 9CCA
 680+ 9CCA 21 DD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 681+ 9CCD 3A EA 88     	ld a,(Vel_left)
 682+ 9CD0 A7           	and a
 683+ 9CD1 28 06        	jr z,1F
 684+ 9CD3 47           	ld b,a
 685+ 9CD4 35           3 dec (hl)
 686+ 9CD5 10 FD        	djnz 3B
 687+ 9CD7 18 01        	jr 2F
 688+ 9CD9 35           1 dec (hl)
 689+ 9CDA C9           2 ret
 690+ 9CDB
 691+ 9CDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 692+ 9CDB
 693+ 9CDB 2A D7 88     Reaparece_derecha ld hl,(Posicion_actual)
 694+ 9CDE 01 1F 00     	ld bc,31
 695+ 9CE1 A7           	and a
 696+ 9CE2 ED 4A        	adc hl,bc
 697+ 9CE4 22 D7 88     	ld (Posicion_actual),hl
 698+ 9CE7 21 05 89     	ld hl,Ctrl_0														; $xxx1
 699+ 9CEA CB C6        	set 0,(hl)
 700+ 9CEC C9           	ret
 701+ 9CED
 702+ 9CED              ; ---------- ---------- ---------- ---------- ---------- ----------
 703+ 9CED
 704+ 9CED 2A D7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 705+ 9CF0 01 1F 00     	ld bc,31
 706+ 9CF3 A7           	and a
 707+ 9CF4 ED 42        	sbc hl,bc
 708+ 9CF6 22 D7 88     	ld (Posicion_actual),hl 											; $xx1x
 709+ 9CF9 21 05 89     	ld hl,Ctrl_0
 710+ 9CFC CB CE        	set 1,(hl)
 711+ 9CFE C9           	ret
 712+ 9CFF
 713+ 9CFF              ; ---------- ---------- ---------- ---------- ---------- ----------
 714+ 9CFF
 715+ 9CFF 24           Reaparece_abajo inc h
 716+ 9D00 01 E0 17     	ld bc,$17e0
 717+ 9D03 A7           	and a
 718+ 9D04 ED 4A        	adc hl,bc
 719+ 9D06 22 D7 88     	ld (Posicion_actual),hl
 720+ 9D09 21 05 89     	ld hl,Ctrl_0
 721+ 9D0C CB D6        	set 2,(hl)
 722+ 9D0E C9           	ret
 723+ 9D0F
 724+ 9D0F              ; ---------- ---------- ---------- ---------- ---------- ----------
 725+ 9D0F
 726+ 9D0F 01 E0 17     Reaparece_arriba ld bc,$17e0
 727+ 9D12 A7           	and a
 728+ 9D13 ED 42        	sbc hl,bc
 729+ 9D15 22 D7 88     	ld (Posicion_actual),hl
 730+ 9D18 21 05 89     	ld hl,Ctrl_0
 731+ 9D1B CB DE        	set 3,(hl)
 732+ 9D1D C9           	ret
 733+ 9D1E
 734+ 9D1E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 735+ 9D1E              ;
 736+ 9D1E              ;	15/07/23
 737+ 9D1E
 738+ 9D1E              Reinicio
 739+ 9D1E
 740+ 9D1E              ; Vamos a reiniciar los punteros y variables de movimiento.
 741+ 9D1E
 742+ 9D1E AF           	xor a
 743+ 9D1F 21 0A 89     	ld hl,Puntero_indice_mov_bucle
 744+ 9D22 CD 40 9D     	call Limpia_contenido_hl
 745+ 9D25
 746+ 9D25 21 D7 88     	ld hl,Posicion_actual
 747+ 9D28 CD 40 9D     	call Limpia_contenido_hl
 748+ 9D2B
 749+ 9D2B CD 7C A0     	call Inicializa_Puntero_indice_mov
 750+ 9D2E CD 00 A0     	call Inicia_Puntero_mov
 751+ 9D31
 752+ 9D31 21 0C 89     	ld hl,Incrementa_puntero
 753+ 9D34 06 05        	ld b,5
 754+ 9D36 77           1 ld (hl),a
 755+ 9D37 23           	inc hl
 756+ 9D38 10 FC        	djnz 1B
 757+ 9D3A
 758+ 9D3A 21 16 89     	ld hl,Ctrl_2
 759+ 9D3D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 760+ 9D3F
 761+ 9D3F C9           	ret
 762+ 9D40
 763+ 9D40 77           Limpia_contenido_hl	ld (hl),a
 764+ 9D41 23           	inc hl
 765+ 9D42 77           	ld (hl),a
 766+ 9D43 C9           	ret
 767+ 9D44
 768+ 9D44
# file closed: Direcciones.asm
1843  9D44              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D44              ; ------------------------------------------------------------------------
   2+ 9D44              ;
   3+ 9D44              ;	02/04/23
   4+ 9D44              ;
   5+ 9D44              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D44              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D44              ;
   8+ 9D44              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D44              ;
  10+ 9D44              ;	Modifica: A,BC y DE.
  11+ 9D44
  12+ 9D44 C5           Genera_coordenadas push bc
  13+ 9D45 E5           	push hl
  14+ 9D46 D5           	push de
  15+ 9D47
  16+ 9D47 2A D7 88     	ld hl,(Posicion_actual)
  17+ 9D4A
  18+ 9D4A 7D           	ld a,l
  19+ 9D4B E6 1F        	and $1f
  20+ 9D4D 32 DB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D50
  22+ 9D50 CD AB 99     	call calcula_tercio
  23+ 9D53 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D54
  25+ 9D54 1E 00        	ld e,0
  26+ 9D56 7D           	ld a,l
  27+ 9D57 E6 E0        	and $e0
  28+ 9D59 28 01        	jr z,1F
  29+ 9D5B 04           	inc b
  30+ 9D5C
  31+ 9D5C 04           1 inc b
  32+ 9D5D 05           	dec b
  33+ 9D5E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D60              ;														; _ , salimos.
  35+ 9D60 1C           3 inc e
  36+ 9D61 D6 20        	sub 32
  37+ 9D63 20 FB        	jr nz,3B
  38+ 9D65 10 F5        	djnz 1B
  39+ 9D67
  40+ 9D67 7B           2 ld a,e
  41+ 9D68 32 DC 88     	ld (Coordenada_y),a
  42+ 9D6B
  43+ 9D6B D1           	pop de
  44+ 9D6C E1           	pop hl
  45+ 9D6D C1           	pop bc
  46+ 9D6E
  47+ 9D6E C9           	ret
  48+ 9D6F
  49+ 9D6F              ; ------------------------------------------------------------------------
  50+ 9D6F              ;	28/05/23
  51+ 9D6F              ;
  52+ 9D6F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D6F              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D6F              ;
  55+ 9D6F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D6F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D6F              ;
  58+ 9D6F              ;		DE="$120d"
  59+ 9D6F              ;
  60+ 9D6F              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D6F              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D6F              ;
  63+ 9D6F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D6F
  65+ 9D6F              ;	Modifica: A,BC y DE.
  66+ 9D6F
  67+ 9D6F
  68+ 9D6F              Genera_coordenadas_disparo
  69+ 9D6F
  70+ 9D6F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D6F
  72+ 9D6F 7D           	ld a,l
  73+ 9D70 E6 1F        	and $1f
  74+ 9D72 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D73 CD AB 99     	call calcula_tercio
  76+ 9D76 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D77 1E 00        	ld e,0
  78+ 9D79 7D           	ld a,l
  79+ 9D7A E6 E0        	and $e0
  80+ 9D7C 28 01        	jr z,1F
  81+ 9D7E 04           	inc b
  82+ 9D7F 1C           1 inc e
  83+ 9D80 D6 20        	sub 32
  84+ 9D82 20 FB        	jr nz,1B
  85+ 9D84 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D86 C9           	ret
  87+ 9D87
# file closed: Genera_coordenadas.asm
1844  9D87              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D87              ; Relojes y temporizaciones.
   2+ 9D87
   3+ 9D87              ; ------------------------------------------------------
   4+ 9D87              ;
   5+ 9D87              ;	16/7/23
   6+ 9D87              ;
   7+ 9D87              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D87              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D87              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D87              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D87              ;
  12+ 9D87              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D87              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D87
  15+ 9D87              ; Disparo_entidad db 1
  16+ 9D87              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D87              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D87
  19+ 9D87              Habilita_disparos
  20+ 9D87
  21+ 9D87 7E           	ld a,(hl)
  22+ 9D88 A7           	and a
  23+ 9D89 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D8A
  25+ 9D8A EB           	ex de,hl
  26+ 9D8B
  27+ 9D8B 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D8C C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D8D
  30+ 9D8D              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D8D
  32+ 9D8D 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D8E 7E           	ld a,(hl)
  34+ 9D8F 23           	inc hl
  35+ 9D90 77           	ld (hl),a
  36+ 9D91
  37+ 9D91 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D92 3E 01        	ld a,1
  39+ 9D94 77           	ld (hl),a
  40+ 9D95 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1845  9D96              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D96
   2+ 9D96
   3+ 9D96              ;   07/07/23
   4+ 9D96              ;
   5+ 9D96              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D96              ;
   7+ 9D96              ;   Codificación:
   8+ 9D96              ;
   9+ 9D96              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D96              ;
  11+ 9D96              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D96              ;
  13+ 9D96              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D96              ;
  15+ 9D96              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D96              ;
  17+ 9D96              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D96              ;                               ..... %01000010 Vel_up 4
  19+ 9D96              ;                                               Vel_down 2
  20+ 9D96              ;                               ..... $42
  21+ 9D96              ;
  22+ 9D96              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D96              ;
  24+ 9D96              ;                               ..... %01000010 Vel_left 4
  25+ 9D96              ;                                               Vel_right 2
  26+ 9D96              ;                               ..... $42
  27+ 9D96              ;
  28+ 9D96              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D96              ;
  30+ 9D96              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D96              ;
  32+ 9D96              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D96              ;
  34+ 9D96              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D96              ;                                     $53
  36+ 9D96              ;
  37+ 9D96              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D96              ;
  39+ 9D96              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D96              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D96              ;
  42+ 9D96              ;                       Arriba ..... $81
  43+ 9D96              ;                       Arriba - izquierda ..... $a1
  44+ 9D96              ;                       Arriba - derecha ..... $91
  45+ 9D96              ;
  46+ 9D96              ;                       Abajo ..... $41
  47+ 9D96              ;                       Abajo - izquierda ..... $61
  48+ 9D96              ;                       Abajo - derecha ..... $51
  49+ 9D96              ;
  50+ 9D96              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D96              ;
  52+ 9D96              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D96              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D96              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D96              ;
  56+ 9D96              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D96              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D96              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D96              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D96              ;
  61+ 9D96              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D96              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D96              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D96              ;
  65+ 9D96              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D96              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D96              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D96              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D96
  70+ 9D96              ; ----- ----- ----- ----- -----
  71+ 9D96
  72+ 9D96 C2 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D98 CA 9D            defw F_1
  74+ 9D9A D4 9D            defw F_2
  75+ 9D9C DE 9D            defw Codo_abajo_derecha
  76+ 9D9E 12 9E            defw Derecha_y_subiendo
  77+ 9DA0 1C 9E            defw Derecha_y_subiendo_1
  78+ 9DA2 26 9E            defw F_3
  79+ 9DA4 30 9E            defw F_4
  80+ 9DA6 3A 9E            defw Derecha_y_bajando
  81+ 9DA8 44 9E            defw Derecha_y_bajando_1
  82+ 9DAA 4E 9E            defw Derecha_y_bajando_2
  83+ 9DAC 58 9E            defw Codo_derecha_abajo
  84+ 9DAE 88 9E            defw Codo_abajo_izq.
  85+ 9DB0 BC 9E            defw Izquierda_y_subiendo
  86+ 9DB2 C6 9E            defw Izquierda_y_subiendo_1
  87+ 9DB4 D0 9E            defw F_5
  88+ 9DB6 DA 9E            defw F_6
  89+ 9DB8 E4 9E            defw Izquierda_y_bajando
  90+ 9DBA EE 9E            defw Izquierda_y_bajando_1
  91+ 9DBC F8 9E            defw Izquierda_y_bajando_2
  92+ 9DBE 02 9F            defw Codo_izquierda_abajo
  93+ 9DC0 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DC2
  95+ 9DC2 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DC6 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DCA
  98+ 9DCA 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DCE 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DD2 08 00
 100+ 9DD4 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DD8 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DDC 0F FE
 102+ 9DDE
 103+ 9DDE 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DE2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DE6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DEA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DEE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DF2 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DF6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DFA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DFE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E02 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E06 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E0A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E0E 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E12
 117+ 9E12 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E16 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E1A 06 00
 119+ 9E1C
 120+ 9E1C 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E20 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E24 02 00
 122+ 9E26
 123+ 9E26 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E2A 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E2E 04 00
 125+ 9E30 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E34 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E38 08 00
 127+ 9E3A
 128+ 9E3A 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E3E 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E42 02 00
 130+ 9E44
 131+ 9E44 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E48 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E4C 06 00
 133+ 9E4E
 134+ 9E4E 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E52 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E56 06 00
 136+ 9E58
 137+ 9E58              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E58
 139+ 9E58 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E64 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E68 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E6C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E70 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E74 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E78 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E7C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E80 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E84 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E88
 152+ 9E88 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E8C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E90 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E94 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E98 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E9C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EA0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EA4 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EA8 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EAC 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EB0 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EB4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EB8 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EBC
 166+ 9EBC 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EC0 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EC4 06 00
 168+ 9EC6
 169+ 9EC6 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9ECA 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9ECE 02 00
 171+ 9ED0
 172+ 9ED0 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9ED4 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9ED8 04 00
 174+ 9EDA 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EDE 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EE2 08 00
 176+ 9EE4
 177+ 9EE4 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EE8 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EEC 02 00
 179+ 9EEE
 180+ 9EEE 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EF2 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EF6 06 00
 182+ 9EF8
 183+ 9EF8 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EFC 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F00 06 00
 185+ 9F02
 186+ 9F02 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F06 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F0A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F0E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F12 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F16 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F1A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F1E 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F22 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F26 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F2A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F2E 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F32
 199+ 9F32              ; ----- ----- ----- ----- -----
 200+ 9F32              ;
 201+ 9F32              ;   28/12/23
 202+ 9F32
 203+ 9F32              Movimiento
 204+ 9F32
 205+ 9F32              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F32
 207+ 9F32              ;    ld hl,(Posicion_actual)
 208+ 9F32
 209+ 9F32 3A 16 89         ld a,(Ctrl_2)
 210+ 9F35 CB 57            bit 2,a
 211+ 9F37 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F39
 213+ 9F39 2A 08 89         ld hl,(Puntero_mov)
 214+ 9F3C 7E               ld a,(hl)
 215+ 9F3D
 216+ 9F3D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F3D
 218+ 9F3D              Inicia_desplazamiento.
 219+ 9F3D
 220+ 9F3D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F3D
 222+ 9F3D CD 3D A0         call Ajusta_velocidad_desplazamiento
 223+ 9F40
 224+ 9F40              ; Iniciamos (Repetimos_mov).
 225+ 9F40
 226+ 9F40 7E               ld a,(hl)
 227+ 9F41 E6 0F            and $0f
 228+ 9F43 32 0E 89         ld (Repetimos_desplazamiento),a
 229+ 9F46 32 0F 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F49
 231+ 9F49              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F49
 233+ 9F49 23               inc hl
 234+ 9F4A 7E               ld a,(hl)
 235+ 9F4B 32 11 89         ld (Cola_de_desplazamiento),a
 236+ 9F4E 2B               dec hl
 237+ 9F4F
 238+ 9F4F 21 16 89         ld hl,Ctrl_2
 239+ 9F52 CB D6            set 2,(hl)
 240+ 9F54
 241+ 9F54              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F54              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F54
 244+ 9F54              Desplazamiento_iniciado
 245+ 9F54
 246+ 9F54 CD 0B A0         call Aplica_desplazamiento
 247+ 9F57
 248+ 9F57              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 249+ 9F57
 250+ 9F57 3A 39 89         ld a,(Ctrl_3)
 251+ 9F5A CB 57            bit 2,a
 252+ 9F5C C0               ret nz
 253+ 9F5D
 254+ 9F5D 3A 16 89         ld a,(Ctrl_2)
 255+ 9F60 CB 67            bit 4,a
 256+ 9F62 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 257+ 9F63
 258+ 9F63 21 0E 89     3 ld hl,Repetimos_desplazamiento
 259+ 9F66 35               dec (hl)
 260+ 9F67 C0               ret nz
 261+ 9F68
 262+ 9F68              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 263+ 9F68              ; Hay que volver a ejecutar este desplazamiento ???.
 264+ 9F68              ; Analiza (Cola_de_desplazamiento).
 265+ 9F68
 266+ 9F68 3A 11 89     Cola ld a,(Cola_de_desplazamiento)
 267+ 9F6B A7               and a
 268+ 9F6C CC 66 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 269+ 9F6F 28 30            jr z,Reinicia_el_movimiento
 270+ 9F71
 271+ 9F71 FE FF            cp $ff
 272+ 9F73 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 273+ 9F75
 274+ 9F75 FE FE            cp $fe
 275+ 9F77 CC E4 9F         call z,Fijamos_bucle
 276+ 9F7A 28 25            jr z,Reinicia_el_movimiento
 277+ 9F7C
 278+ 9F7C FE FD            cp $fd
 279+ 9F7E 20 11            jr nz,1F
 280+ 9F80
 281+ 9F80              ; ---
 282+ 9F80              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 283+ 9F80
 284+ 9F80 3A 16 89         ld a,(Ctrl_2)
 285+ 9F83 CB 5F            bit 3,a
 286+ 9F85 20 1A            jr nz,Reinicia_el_movimiento
 287+ 9F87
 288+ 9F87              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 289+ 9F87
 290+ 9F87 21 16 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 291+ 9F8A CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 292+ 9F8C
 293+ 9F8C CD F5 9F         call Inicia_Repetimos_movimiento
 294+ 9F8F 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 295+ 9F91              ; ---
 296+ 9F91
 297+ 9F91 FE 01        1 cp 1
 298+ 9F93 CA CE 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 299+ 9F96
 300+ 9F96 3D               dec a
 301+ 9F97 32 11 89         ld (Cola_de_desplazamiento),a
 302+ 9F9A
 303+ 9F9A 3A 0F 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 304+ 9F9D 32 0E 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 305+ 9FA0              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 306+ 9FA0 C9               ret
 307+ 9FA1
 308+ 9FA1              Reinicia_el_movimiento
 309+ 9FA1
 310+ 9FA1 3A 16 89         ld a,(Ctrl_2)
 311+ 9FA4 CB 5F            bit 3,a
 312+ 9FA6 28 1B            jr z,2F
 313+ 9FA8
 314+ 9FA8              ; (Cola_de_desplazamiento)="254".
 315+ 9FA8
 316+ 9FA8 21 10 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 317+ 9FAB 35               dec (hl)
 318+ 9FAC 20 15            jr nz,2F
 319+ 9FAE
 320+ 9FAE              ; Fin de las repeticiones del último movimiento.
 321+ 9FAE
 322+ 9FAE 21 16 89         ld hl,Ctrl_2
 323+ 9FB1 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 324+ 9FB3
 325+ 9FB3 2A 08 89         ld hl,(Puntero_mov)
 326+ 9FB6 23               inc hl
 327+ 9FB7 23               inc hl
 328+ 9FB8 23               inc hl
 329+ 9FB9 22 08 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 330+ 9FBC              ;                                                               ; _ para ejecutar su mandato. :)
 331+ 9FBC 7E               ld a,(hl)
 332+ 9FBD 32 11 89         ld (Cola_de_desplazamiento),a
 333+ 9FC0
 334+ 9FC0 C3 68 9F         jp Cola
 335+ 9FC3
 336+ 9FC3 CD 00 A0     2 call Inicia_Puntero_mov
 337+ 9FC6
 338+ 9FC6 21 16 89         ld hl,Ctrl_2
 339+ 9FC9 CB 96            res 2,(hl)
 340+ 9FCB
 341+ 9FCB C3 32 9F         jp Movimiento
 342+ 9FCE
 343+ 9FCE              Siguiente_desplazamiento
 344+ 9FCE
 345+ 9FCE              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 346+ 9FCE              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 347+ 9FCE
 348+ 9FCE 21 16 89         ld hl,Ctrl_2
 349+ 9FD1 CB 96            res 2,(hl)
 350+ 9FD3
 351+ 9FD3 2A 08 89         ld hl,(Puntero_mov)
 352+ 9FD6 23               inc hl
 353+ 9FD7 23               inc hl
 354+ 9FD8 22 08 89         ld (Puntero_mov),hl
 355+ 9FDB
 356+ 9FDB 7E               ld a,(hl)
 357+ 9FDC A7               and a
 358+ 9FDD CC 66 A0         call z,Incrementa_Puntero_indice_mov
 359+ 9FE0 CA A1 9F         jp z,Reinicia_el_movimiento
 360+ 9FE3
 361+ 9FE3 C9               ret
 362+ 9FE4
 363+ 9FE4              ; Subrutinas -----------------------------------------
 364+ 9FE4              ; ---------- --------- --------- ---------- ----------
 365+ 9FE4              ;
 366+ 9FE4              ;   24/07/23
 367+ 9FE4              ;
 368+ 9FE4              ;   Fijamos_bucle
 369+ 9FE4              ;
 370+ 9FE4              ;
 371+ 9FE4
 372+ 9FE4              Fijamos_bucle
 373+ 9FE4
 374+ 9FE4 3A 0C 89         ld a,(Incrementa_puntero)
 375+ 9FE7 3C               inc a
 376+ 9FE8 32 0D 89         ld (Incrementa_puntero_backup),a
 377+ 9FEB
 378+ 9FEB CD 66 A0         call Incrementa_Puntero_indice_mov
 379+ 9FEE 2A 06 89         ld hl,(Puntero_indice_mov)
 380+ 9FF1 22 0A 89         ld (Puntero_indice_mov_bucle),hl
 381+ 9FF4 C9               ret
 382+ 9FF5
 383+ 9FF5              ; ---------- --------- --------- ---------- ----------
 384+ 9FF5              ;
 385+ 9FF5              ;   07/7/23
 386+ 9FF5              ;
 387+ 9FF5              ;   Inicia_Repetimos_movimiento
 388+ 9FF5              ;
 389+ 9FF5              ;
 390+ 9FF5
 391+ 9FF5              Inicia_Repetimos_movimiento
 392+ 9FF5
 393+ 9FF5              ; Iniciamos (Repetimos_movimiento).
 394+ 9FF5
 395+ 9FF5 DD 2A 08 89      ld ix,(Puntero_mov)
 396+ 9FF9 DD 7E 02         ld a,(ix+2)
 397+ 9FFC 32 10 89         ld (Repetimos_movimiento),a
 398+ 9FFF
 399+ 9FFF C9               ret
 400+ A000
 401+ A000              ; ---------- --------- --------- ---------- ----------
 402+ A000              ;
 403+ A000              ;   26/6/23
 404+ A000              ;
 405+ A000              ;   Inicia_Puntero_mov
 406+ A000              ;
 407+ A000              ;
 408+ A000
 409+ A000 2A 06 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 410+ A003 5E               ld e,(hl)
 411+ A004 23               inc hl
 412+ A005 56               ld d,(hl)
 413+ A006 EB               ex de,hl
 414+ A007 22 08 89         ld (Puntero_mov),hl
 415+ A00A C9               ret
 416+ A00B
 417+ A00B              ; ---------- --------- --------- ---------- ----------
 418+ A00B              ;
 419+ A00B              ;   27/06/23
 420+ A00B              ;
 421+ A00B              ;   Aplica_movimiento.
 422+ A00B
 423+ A00B              Aplica_desplazamiento
 424+ A00B
 425+ A00B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 426+ A00B
 427+ A00B 2A 08 89         ld hl, (Puntero_mov)
 428+ A00E
 429+ A00E 7E               ld a,(hl)
 430+ A00F E6 F0            and $f0
 431+ A011 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 432+ A012
 433+ A012 CB 7E            bit 7,(hl)
 434+ A014 28 03            jr z,1F
 435+ A016 CD 30 9A         call Mov_up
 436+ A019 2A 08 89     1 ld hl, (Puntero_mov)
 437+ A01C CB 76            bit 6,(hl)
 438+ A01E 28 09            jr z,2F
 439+ A020 CD F1 99         call Mov_down
 440+ A023
 441+ A023              ; Se ha aplicado reinicio ???
 442+ A023              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 443+ A023
 444+ A023 3A 39 89         ld a,(Ctrl_3)
 445+ A026 CB 57            bit 2,a
 446+ A028 C0               ret nz
 447+ A029
 448+ A029 2A 08 89     2 ld hl, (Puntero_mov)
 449+ A02C CB 6E            bit 5,(hl)
 450+ A02E 28 03            jr z,3F
 451+ A030 CD 91 9B         call Mov_left
 452+ A033 2A 08 89     3 ld hl, (Puntero_mov)
 453+ A036 CB 66            bit 4,(hl)
 454+ A038 C8               ret z
 455+ A039 CD 73 9A         call Mov_right
 456+ A03C C9               ret
 457+ A03D
 458+ A03D              ; ---------- --------- --------- ---------- ----------
 459+ A03D              ;
 460+ A03D              ;   26/06/23
 461+ A03D              ;
 462+ A03D              ;   Ajusta_velocidad_desplazamiento.
 463+ A03D
 464+ A03D              Ajusta_velocidad_desplazamiento
 465+ A03D
 466+ A03D              ; 1er byte de la cadena de movimiento.
 467+ A03D              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 468+ A03D
 469+ A03D CD 5B A0         call Extrae_nibble_alto
 470+ A040
 471+ A040 32 EC 88         ld (Vel_up),a
 472+ A043 79               ld a,c
 473+ A044 E6 0F            and $0f
 474+ A046 32 ED 88         ld (Vel_down),a
 475+ A049
 476+ A049              ; Saltamos al 2º byte de la cadena de movimiento.
 477+ A049              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 478+ A049
 479+ A049 23               inc hl
 480+ A04A CD 5B A0         call Extrae_nibble_alto
 481+ A04D
 482+ A04D 32 EA 88         ld (Vel_left),a
 483+ A050 79               ld a,c
 484+ A051 E6 0F            and $0f
 485+ A053 32 EB 88         ld (Vel_right),a
 486+ A056
 487+ A056              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 488+ A056
 489+ A056 23               inc hl
 490+ A057 22 08 89         ld (Puntero_mov),hl
 491+ A05A C9               ret
 492+ A05B
 493+ A05B 06 04        Extrae_nibble_alto ld b,4
 494+ A05D 7E               ld a,(hl)
 495+ A05E 4F               ld c,a
 496+ A05F E6 F0            and $f0
 497+ A061 CB 3F        1 srl a
 498+ A063 10 FC            djnz 1B
 499+ A065 C9               ret
 500+ A066
 501+ A066              ; ---------- --------- --------- ---------- ----------
 502+ A066              ;
 503+ A066              ;   5/7/23
 504+ A066              ;
 505+ A066              ;   Incrementa_Puntero_indice_mov
 506+ A066
 507+ A066              Incrementa_Puntero_indice_mov
 508+ A066
 509+ A066 21 0C 89         ld hl,Incrementa_puntero
 510+ A069 34               inc (hl)
 511+ A06A
 512+ A06A 2A 06 89         ld hl,(Puntero_indice_mov)
 513+ A06D 01 02 00         ld bc,2
 514+ A070 A7               and a
 515+ A071 09               add hl,bc
 516+ A072 22 06 89         ld (Puntero_indice_mov),hl
 517+ A075
 518+ A075 7E               ld a,(hl)
 519+ A076 A7               and a
 520+ A077
 521+ A077              ;! STOP. Fin del patrón de movimiento de la entidad.
 522+ A077
 523+ A077              ;    jr z,$
 524+ A077
 525+ A077              ;! Reinicia el Patrón de movimiento.
 526+ A077
 527+ A077 CC 7C A0         call z,Inicializa_Puntero_indice_mov
 528+ A07A
 529+ A07A AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 530+ A07B
 531+ A07B C9               ret
 532+ A07C
 533+ A07C
 534+ A07C              ; ---------- --------- --------- ---------- ----------
 535+ A07C              ;
 536+ A07C              ;   24/07/23
 537+ A07C              ;
 538+ A07C              ;   Inicializa_Puntero_indice_mov
 539+ A07C
 540+ A07C              Inicializa_Puntero_indice_mov
 541+ A07C
 542+ A07C              ; Existe etiqueta de bucle principal???
 543+ A07C
 544+ A07C 2A 0A 89         ld hl,(Puntero_indice_mov_bucle)
 545+ A07F 24               inc h
 546+ A080 25               dec h
 547+ A081 28 05            jr z,2F
 548+ A083
 549+ A083 22 06 89         ld (Puntero_indice_mov),hl
 550+ A086 18 14            jr 3F
 551+ A088
 552+ A088              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 553+ A088
 554+ A088 3A 0C 89     2 ld a,(Incrementa_puntero)
 555+ A08B 47               ld b,a
 556+ A08C
 557+ A08C 2A 06 89         ld hl,(Puntero_indice_mov)
 558+ A08F 2B           1 dec hl
 559+ A090 2B               dec hl
 560+ A091 10 FC            djnz 1B
 561+ A093 22 06 89         ld (Puntero_indice_mov),hl
 562+ A096
 563+ A096 AF               xor a
 564+ A097 32 0C 89         ld (Incrementa_puntero),a
 565+ A09A 18 06            jr 4F
 566+ A09C
 567+ A09C 3A 0D 89     3 ld a,(Incrementa_puntero_backup)
 568+ A09F 32 0C 89         ld (Incrementa_puntero),a
 569+ A0A2 C9           4 ret
 570+ A0A3
 571+ A0A3
 572+ A0A3
# file closed: Patrones_de_mov.asm
1846  A0A3              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0A3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0A3              ;
   3+ A0A3              ;	12/12/23
   4+ A0A3              ;
   5+ A0A3              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0A3
   7+ A0A3              ;	ADC HL,SP	LD (addr),SP
   8+ A0A3              ;	ADD HL,SP	LD SP,(addr)
   9+ A0A3              ;	ADD IX,SP	LD SP,nn
  10+ A0A3              ; 	ADD IY,SP	LD SP,HL
  11+ A0A3              ;				LD SP,IX
  12+ A0A3              ;	DEC SP		LD SP,IY
  13+ A0A3
  14+ A0A3              ;	EX (SP),HL
  15+ A0A3              ;	EX (SP),IX
  16+ A0A3              ;	EX (SP),IY
  17+ A0A3
  18+ A0A3              ;	INC SP
  19+ A0A3
  20+ A0A3                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 ED 73 2B 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 711A
  36+ 711A              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 711A
  38+ 711A 31 F5 88         ld sp,Variables_de_borrado+6
  39+ 711D
  40+ 711D E5               push hl
  41+ 711E DD E5            push ix
  42+ 7120 FD E5            push iy
  43+ 7122
  44+ 7122 31 01 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 7125 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 7127              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 7127
  48+ 7127 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 712A
  50+ 712A E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 712B DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 712D FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 712F
  54+ 712F              ; Disparo o entidad?
  55+ 712F
  56+ 712F 3A 1A 89         ld a,(Ctrl_1)
  57+ 7132 CB 47            bit 0,a
  58+ 7134 28 05            jr z,2F
  59+ 7136
  60+ 7136 2A 33 89         ld hl,(Stack_snapshot_disparos)
  61+ 7139 18 0F            jr 4F
  62+ 713B
  63+ 713B              ; No es disparo. Entidad/Amadeus ????
  64+ 713B
  65+ 713B 3A 05 89     2 ld a,(Ctrl_0)
  66+ 713E CB 77            bit 6,a
  67+ 7140 28 05            jr z,7F
  68+ 7142
  69+ 7142              ; Guardamos foto de Amadeus.
  70+ 7142
  71+ 7142 2A 37 89         ld hl,(End_Snapshot_Amadeus)
  72+ 7145 18 03            jr 4F
  73+ 7147
  74+ 7147 2A 31 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 714A
  76+ 714A 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 714C
  78+ 714C D1           1 pop de
  79+ 714D 73               ld (hl),e
  80+ 714E 23               inc hl
  81+ 714F 72               ld (hl),d
  82+ 7150 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 7151 10 F9            djnz 1B
  84+ 7153
  85+ 7153              ; Disparo o entidad ?
  86+ 7153
  87+ 7153 3A 1A 89         ld a,(Ctrl_1)
  88+ 7156 CB 47            bit 0,a
  89+ 7158 28 05            jr z,5F
  90+ 715A
  91+ 715A 22 33 89         ld (Stack_snapshot_disparos),hl
  92+ 715D 18 13            jr 6F
  93+ 715F
  94+ 715F              ; Entidad o Amadeus ?
  95+ 715F
  96+ 715F 3A 05 89     5 ld a,(Ctrl_0)
  97+ 7162 CB 77            bit 6,a
  98+ 7164 28 09            jr z,8F
  99+ 7166
 100+ 7166 22 37 89         ld (End_Snapshot_Amadeus),hl
 101+ 7169 ED 7B 2B 89      ld sp,(Stack)
 102+ 716D FB               ei
 103+ 716E C9               ret
 104+ 716F
 105+ 716F 22 31 89     8 ld (Stack_snapshot),hl
 106+ 7172 ED 7B 2B 89  6 ld sp,(Stack)
 107+ 7176
 108+ 7176 C9               ret
 109+ 7177
 110+ 7177              ; -----------------------------------------------------------------------------
 111+ 7177              ;
 112+ 7177              ;   21/11/23
 113+ 7177
 114+ 7177              Limpia_y_reinicia_Stack_Snapshot
 115+ 7177
 116+ 7177              ;   Limpia Album_de_fotos.
 117+ 7177
 118+ 7177 2A 31 89         ld hl,(Stack_snapshot)
 119+ 717A 7D               ld a,l
 120+ 717B A7               and a
 121+ 717C C8               ret z   ;   Salimos si el álbum está vacío.
 122+ 717D
 123+ 717D 47               ld b,a
 124+ 717E 04               inc b
 125+ 717F
 126+ 717F 36 00        1 ld (hl),0
 127+ 7181 2D               dec l
 128+ 7182 10 FB            djnz 1B
 129+ 7184
 130+ 7184              ;   Reinicializa (Stack_snapshot).
 131+ 7184
 132+ 7184 AF               xor a
 133+ 7185 32 31 89         ld (Stack_snapshot),a
 134+ 7188
 135+ 7188 C9               ret
# file closed: Guarda_foto_registros.asm
1847  7189
1848  7189              	SAVESNA "Pruebas.sna", START
1849  7189
1850  7189
1851  7189
1852  7189
# file closed: Banco_de_pruebas.asm
