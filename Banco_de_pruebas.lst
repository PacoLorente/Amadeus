# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											 ; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 52 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 18 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 00 00  Disparo_fb DEFW $18,$00,$18,$00
 21+  8014 18 00 00 00
 22+  8018              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8018 06 00 00 00  Disparo_fd DEFW $06,$00,$06,$00
 23+  801C 06 00 00 00
 24+  8020
 25+  8020              ; ----------------------------------------------------------------------------------------
 26+  8020
 27+  8020              ; Badsat_izq. 2x2.
 28+  8020
 29+  8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  8022 70 81        	defw Badsat_izq_fe
 31+  8024 40 81        	defw Badsat_izq_fd
 32+  8026 10 81        	defw Badsat_izq_fc
 33+  8028 E0 80        	defw Badsat_izq_fb
 34+  802A B0 80        	defw Badsat_izq_fa
 35+  802C 80 80        	defw Badsat_izq_f9
 36+  802E 50 80        	defw Badsat_izq_f8
 37+  8030
 38+  8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  8034 02 2A 02 55
 39+  8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  803C 7F E8 03 60
 40+  8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  8044 2B E8 54 40
 41+  8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  804C 28 00 10 00
 42+  8050
 43+  8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  8054 0A 00 01 15
 44+  8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  805C 01 55 00 01
 45+  8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  8064 00 01 B0 00
 46+  8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  806C FC 00 15 F4
 47+  8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  8074 55 30 00 2A
 48+  8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  807C 00 08 00 00
 49+  8080
 50+  8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  8084 85 00 00 8A
 51+  8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  808C 00 AA 80 00
 52+  8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  8094 00 00 D8 00
 53+  8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  809C FE 00 0A FA
 54+  80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  80A4 2A 98 00 15
 55+  80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80AC 00 04 00 00
 56+  80B0
 57+  80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80B4 42 80 00 45
 58+  80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80BC 00 55 40 00
 59+  80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80C4 00 00 6C 00
 60+  80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80CC FF 00 05 7D
 61+  80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80D4 15 4C 00 0A
 62+  80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80DC 00 02 00 00
 63+  80E0
 64+  80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80E4 21 40 00 22
 65+  80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80EC 00 2A A0 00
 66+  80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80F4 80 00 36 00
 67+  80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80FC 7F 80 02 BE
 68+  8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  8104 0A A6 00 05
 69+  8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  810C 00 01 00 00
 70+  8110
 71+  8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  8114 10 A0 00 11
 72+  8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  811C 00 15 50 00
 73+  8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  8124 40 00 1B 00
 74+  8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  812C BF C0 01 5F
 75+  8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  8134 05 53 00 02
 76+  8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  813C 00 00 80 00
 77+  8140
 78+  8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  8144 08 50 00 08
 79+  8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  814C 00 0A A8 00
 80+  8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  8154 A0 00 0D 80
 81+  8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  815C 5F F8 00 AF
 82+  8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  8164 02 A9 00 01
 83+  8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  816C 00 00 40 00
 84+  8170
 85+  8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  8174 04 28 00 04
 86+  8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  817C 00 05 54 00
 87+  8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  8184 D0 00 06 C0
 88+  8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  818C 2F FC 00 57
 89+  8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  8194 01 54 80 00
 90+  8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  819C 00 00 20 00
 91+  81A0
 92+  81A0
 93+  81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
 94+  81A2 D0 81        	defw Badsat_der_f8
 95+  81A4 00 82        	defw Badsat_der_f9
 96+  81A6 30 82        	defw Badsat_der_fa
 97+  81A8 60 82        	defw Badsat_der_fb
 98+  81AA 90 82        	defw Badsat_der_fc
 99+  81AC C0 82        	defw Badsat_der_fd
100+  81AE F0 82        	defw Badsat_der_fe
101+  81B0
102+  81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81B4 54 40 AA 40
103+  81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81BC 17 FE 06 C0
104+  81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81C4 17 D4 02 2A
105+  81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81CC 00 14 00 08
106+  81D0
107+  81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81D4 20 00 2A 20
108+  81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81DC 2A A0 00 15
109+  81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81E4 00 03 60 00
110+  81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81EC F4 00 0B EA
111+  81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81F4 03 2A 80 00
112+  81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81FC 00 00 04 00
113+  8200
114+  8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  8204 10 00 15 10
115+  8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  820C 15 50 00 0A
116+  8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  8214 80 01 B0 00
117+  8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  821C FA 00 05 F5
118+  8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  8224 01 95 40 00
119+  8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  822C 00 00 02 00
120+  8230
121+  8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  8234 08 00 0A 88
122+  8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  823C 0A A8 00 05
123+  8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  8244 C0 00 D8 00
124+  8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  824C FD 00 02 FA
125+  8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  8254 00 CA A0 00
126+  8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  825C 80 00 01 00
127+  8260
128+  8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  8264 84 00 05 44
129+  8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  826C 05 54 00 02
130+  8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  8274 E0 00 6C 00
131+  8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  827C FE 80 01 7D
132+  8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  8284 00 65 50 00
133+  8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  828C 40 00 00 80
134+  8290
135+  8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  8294 42 00 02 A2
136+  8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  829C 02 AA 00 01
137+  82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  82A4 F0 00 36 00
138+  82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82AC FF 40 00 BE
139+  82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82B4 00 32 A8 00
140+  82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82BC A0 00 00 40
141+  82C0
142+  82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82C4 A1 00 01 51
143+  82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82CC 01 55 00 00
144+  82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82D4 F8 00 1B 00
145+  82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82DC FF A0 00 1F
146+  82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82E4 00 09 54 00
147+  82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82EC 50 00 00 20
148+  82F0
149+  82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82F4 50 80 00 A8
150+  82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82FC 00 AA 80 00
151+  8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  8304 FC 00 0D 80
152+  8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  830C FF D0 00 0F
153+  8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  8314 00 04 AA 00
154+  8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  831C 28 00 00 10
155+  8320
156+  8320              ; ----------------------------------------------------------------------------------------
157+  8320
158+  8320              ; Amadeus. 2x2.
159+  8320
160+  8320 40 83        Indice_Amadeus_der defw Amadeus
161+  8322 00 00        	defw 0
162+  8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  8326 00 00        	defw 0
164+  8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  832A 00 00        	defw 0
166+  832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  832E 00 00        	defw 0	 								; (Fín de índice).
168+  8330
169+  8330 40 83        Indice_Amadeus_izq defw Amadeus
170+  8332 00 00        	defw 0
171+  8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  8336 00 00        	defw 0
173+  8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  833A 00 00        	defw 0
175+  833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  833E 00 00        	defw 0	 								; (Fín de índice).
177+  8340
178+  8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  8344 26 64 24 24
179+  8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  834C 6F F6 67 E6
180+  8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  8354 F7 EF FF FF
181+  8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  835C 8B D1 71 8E
182+  8360
183+  8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  8364 F1 00 09 99
184+  8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  836C 0B 0D 00 1B
185+  8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  8374 80 19 F9 80
186+  8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  837C F3 C0 3D FB
187+  8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  8384 3E F7 C0 3E
188+  8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  838C 40 1C 63 80
189+  8390
190+  8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  8394 3C 40 02 66
191+  8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  839C 02 C3 40 06
192+  83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  83A4 60 06 7E 60
193+  83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83AC 3C F0 0F 7E
194+  83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83B4 0F BD F0 0F
195+  83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83BC 10 07 18 E0
196+  83C0
197+  83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83C4 8F 10 00 99
198+  83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83CC 00 B0 D0 01
199+  83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83D4 D8 01 9F 98
200+  83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83DC CF 3C 03 DF
201+  83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83E4 03 EF 7C 03
202+  83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83EC 44 01 C6 38
203+  83F0
204+  83F0              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83F0              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83F0
  2+  83F0              ; Base de datos de entidades e Índice.
  3+  83F0              ;
  4+  83F0              ; 17/02/23
  5+  83F0
  6+  83F0              ; Control. %00000001 00000001
  7+  83F0              ;
  8+  83F0              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83F0              ;                  _ hacen las entidades hacia abajo.
 10+  83F0              ;
 11+  83F0              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83F0
 13+  83F0 F6 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83F2 FE 83        	defw Disparo_2A
 15+  83F4 06 84        	defw Disparo_3A
 16+  83F6
 17+  83F6 00 00        Disparo_1A defw 0									; Control.
 18+  83F8 00 00        	defw 0											; Puntero objeto.
 19+  83FA 00 00        	defw 0											; Puntero de impresión.
 20+  83FC 00 00        	defw 0											; Rutina de impresión.
 21+  83FE
 22+  83FE 00 00        Disparo_2A defw 0									; Control.
 23+  8400 00 00        	defw 0											; Puntero objeto.
 24+  8402 00 00        	defw 0											; Puntero de impresión.
 25+  8404 00 00        	defw 0											; Rutina de impresión.
 26+  8406
 27+  8406 00 00        Disparo_3A defw 0
 28+  8408
 29+  8408 1E 84        Indice_de_disparos_entidades defw Disparo_1
 30+  840A 26 84        	defw Disparo_2
 31+  840C 2E 84        	defw Disparo_3
 32+  840E 36 84        	defw Disparo_4
 33+  8410 3E 84        	defw Disparo_5
 34+  8412 46 84        	defw Disparo_6
 35+  8414 4E 84        	defw Disparo_7
 36+  8416 56 84        	defw Disparo_8
 37+  8418 5E 84        	defw Disparo_9
 38+  841A 66 84        	defw Disparo_10
 39+  841C 6E 84        	defw Disparo_11
 40+  841E
 41+  841E 00 00        Disparo_1 defw 0									; Control.
 42+  8420 00 00        	defw 0											; Puntero objeto.
 43+  8422 00 00        	defw 0											; Puntero de impresión.
 44+  8424 00 00        	defw 0											; Rutina de impresión.
 45+  8426
 46+  8426 00 00        Disparo_2 defw 0									; Control.
 47+  8428 00 00        	defw 0											; Puntero objeto.
 48+  842A 00 00        	defw 0											; Puntero de impresión.
 49+  842C 00 00        	defw 0											; Rutina de impresión.
 50+  842E
 51+  842E 00 00        Disparo_3 defw 0									; Control.
 52+  8430 00 00        	defw 0											; Puntero objeto.
 53+  8432 00 00        	defw 0											; Puntero de impresión.
 54+  8434 00 00        	defw 0											; Rutina de impresión.
 55+  8436
 56+  8436 00 00        Disparo_4 defw 0									; Control.
 57+  8438 00 00        	defw 0											; Puntero objeto.
 58+  843A 00 00        	defw 0											; Puntero de impresión.
 59+  843C 00 00        	defw 0											; Rutina de impresión.
 60+  843E
 61+  843E 00 00        Disparo_5 defw 0									; Control.
 62+  8440 00 00        	defw 0											; Puntero objeto.
 63+  8442 00 00        	defw 0											; Puntero de impresión.
 64+  8444 00 00        	defw 0
 65+  8446
 66+  8446 00 00        Disparo_6 defw 0									; Control.
 67+  8448 00 00        	defw 0											; Puntero objeto.
 68+  844A 00 00        	defw 0											; Puntero de impresión.
 69+  844C 00 00        	defw 0											; Rutina de impresión.
 70+  844E
 71+  844E 00 00        Disparo_7 defw 0									; Control.
 72+  8450 00 00        	defw 0											; Puntero objeto.
 73+  8452 00 00        	defw 0											; Puntero de impresión.
 74+  8454 00 00        	defw 0											; Rutina de impresión.
 75+  8456
 76+  8456 00 00        Disparo_8 defw 0									; Control.
 77+  8458 00 00        	defw 0											; Puntero objeto.
 78+  845A 00 00        	defw 0											; Puntero de impresión.
 79+  845C 00 00        	defw 0											; Rutina de impresión.
 80+  845E
 81+  845E 00 00        Disparo_9 defw 0									; Control.
 82+  8460 00 00        	defw 0											; Puntero objeto.
 83+  8462 00 00        	defw 0											; Puntero de impresión.
 84+  8464 00 00        	defw 0											; Rutina de impresión.
 85+  8466
 86+  8466 00 00        Disparo_10 defw 0									; Control.
 87+  8468 00 00        	defw 0											; Puntero objeto.
 88+  846A 00 00        	defw 0											; Puntero de impresión.
 89+  846C 00 00        	defw 0											; Rutina de impresión.
 90+  846E
 91+  846E 00 00        Disparo_11 defw 0
 92+  8470
 93+  8470              ; -------------------------------------------------------------------------------------
 94+  8470
 95+  8470              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8470
 97+  8470 B6 84        	defw Entidad_1
 98+  8472 F0 84        	defw Entidad_2
 99+  8474 2A 85        	defw Entidad_3
100+  8476 64 85        	defw Entidad_4
101+  8478              ;	...
102+  8478              ;	...
103+  8478              ;	+ entidades ...
104+  8478
105+  8478 00 00        	defw 0
106+  847A 00 00        	defw 0
107+  847C
108+  847C              ; ---------- ---------- ---------- ---------- ----------
109+  847C
110+  847C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  847E 00 00        	defw 0		 									; (Posicion_actual).
112+  8480 00 00        	defw 0	 										; (Puntero_objeto).
113+  8482 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  8485
115+  8485 05           	db %00000101									; (Attr).
116+  8486
117+  8486 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8488 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  848A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  848C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  848E
122+  848E D0 50        	defw $50d0										; (Posicion_inicio).
123+  8490 04           	db 4 											; (Cuad_objeto).
124+  8491
125+  8491 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  8495
127+  8495 00 00        	db 0,0											; Variables_de_borrado
128+  8497 00 00        	defw 0											;	" " " " " " "
129+  8499 00 00        	defw 0											;	" " " " " " "
130+  849B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  849F
132+  849F 00 00        	db 0,0											; Variables_de_pintado
133+  84A1 00 00        	defw 0											;	" " " " " " "
134+  84A3 00 00        	defw 0											;	" " " " " " "
135+  84A5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A9
137+  84A9 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
138+  84AB
139+  84AB 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84AF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84B2
142+  84B2 00           	db 0 											; (Columnas).
143+  84B3 00 00        	defw 0											; (Limite_horizontal).
144+  84B5 00           	db 0											; (Limite_vertical).
145+  84B6
146+  84B6              ; ---------- ---------- ---------- ---------- ----------
147+  84B6
148+  84B6 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B8 00 00        	defw 0											; (Posicion_actual).
150+  84BA 00 00        	defw 0 											; (Puntero_objeto).
151+  84BC 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84BF
153+  84BF 00           	db %00000000 									; (Attr).
154+  84C0
155+  84C0 00 00        	defw 0											; (Indice_Sprite_der).
156+  84C2 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84C4 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84C6 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C8
160+  84C8 00 00        	defw 0											; (Posicion_inicio).
161+  84CA 00           	db 0											; (Cuad_objeto).
162+  84CB
163+  84CB 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84CF
165+  84CF 00 00        	db 0,0										    ; Variables_de_borrado
166+  84D1 00 00        	defw 0											;	" " " " " " "
167+  84D3 00 00        	defw 0											;	" " " " " " "
168+  84D5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D9
170+  84D9 00 00        	db 0,0											; Variables_de_pintado
171+  84DB 00 00        	defw 0											;	" " " " " " "
172+  84DD 00 00        	defw 0											;	" " " " " " "
173+  84DF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84E3
175+  84E3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84E5
177+  84E5 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84EC
180+  84EC 00           	db 0 											; (Columnas).
181+  84ED 00 00        	defw 0											; (Limite_horizontal).
182+  84EF 00           	db 0											; (Limite_vertical).
183+  84F0
184+  84F0              ; ---------- ---------- ---------- ---------- ----------
185+  84F0
186+  84F0 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84F2 00 00        	defw 0                                          ; (Posicion_actual).
188+  84F4 00 00        	defw 0											; (Puntero_objeto).
189+  84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F9
191+  84F9 02           	db %00000010									; (Attr).
192+  84FA
193+  84FA A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84FC 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  8502
198+  8502 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  8504 02           	db 2											; (Cuad_objeto).
200+  8505
201+  8505 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8509
203+  8509 00 00        	db 0,0											; Variables_de_borrado
204+  850B 00 00        	defw 0										 	;	" " " " " " "
205+  850D 00 00        	defw 0											;	" " " " " " "
206+  850F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  8513
208+  8513 00 00        	db 0,0											; Variables_de_pintado
209+  8515 00 00        	defw 0											;	" " " " " " "
210+  8517 00 00        	defw 0											;	" " " " " " "
211+  8519 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  851D
213+  851D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  851F
215+  851F 7B 93 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  8523 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  8526
218+  8526 00           	db 0 											; (Columnas).
219+  8527 00 00        	defw 0											; (Limite_horizontal).
220+  8529 00           	db 0											; (Limite_vertical).
221+  852A
222+  852A              ; ---------- ---------- ---------- ---------- ----------
223+  852A
224+  852A 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  852C 00 00        	defw 0                                          ; (Posicion_actual).
226+  852E 00 00        	defw 0											; (Puntero_objeto).
227+  8530 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  8533
229+  8533 04           	db %00000100									; (Attr).
230+  8534
231+  8534 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  8536 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8538
234+  8538 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  853A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  853C
237+  853C A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  853E 01           	db 1											; (Cuad_objeto).
239+  853F
240+  853F 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  8543
242+  8543 00 00        	db 0,0											; Variables_de_borrado
243+  8545 00 00        	defw 0										 	;	" " " " " " "
244+  8547 00 00        	defw 0											;	" " " " " " "
245+  8549 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  854D
247+  854D 00 00        	db 0,0											; Variables_de_pintado
248+  854F 00 00        	defw 0											;	" " " " " " "
249+  8551 00 00        	defw 0											;	" " " " " " "
250+  8553 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  8557
252+  8557 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8559
254+  8559 7D 93 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  855D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8560
257+  8560 00           	db 0 											; (Columnas).
258+  8561 00 00        	defw 0											; (Limite_horizontal).
259+  8563 00           	db 0											; (Limite_vertical).
260+  8564
261+  8564              ; ---------- ---------- ---------- ---------- ----------
262+  8564
263+  8564 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  8566 00 00        	defw 0                                          ; (Posicion_actual).
265+  8568 00 00        	defw 0 											; (Puntero_objeto).
266+  856A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  856D
268+  856D 01           	db %00000001									; (Attr).
269+  856E
270+  856E A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8570 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  8572
273+  8572 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  8574 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  8576
276+  8576 BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8578 00           	db 0											; (Cuad_objeto).
278+  8579
279+  8579 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  857D
281+  857D 00 00        	db 0,0											; Variables_de_borrado
282+  857F 00 00        	defw 0										 	;	" " " " " " "
283+  8581 00 00        	defw 0											;	" " " " " " "
284+  8583 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  8587
286+  8587 00 00        	db 0,0											; Variables_de_pintado
287+  8589 00 00        	defw 0											;	" " " " " " "
288+  858B 00 00        	defw 0											;	" " " " " " "
289+  858D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8591
291+  8591 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  8593
293+  8593 6D 93 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  8597 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  859A
296+  859A 00           	db 0 											; (Columnas).
297+  859B 00 00        	defw 0											; (Limite_horizontal).
298+  859D 00           	db 0											; (Limite_vertical).
299+  859E
# file closed: Entidades_y_disparos.asm
 21   859E
 22   859E              ; ******************************************************************************************************************************************************************************************
 23   859E              ; Constantes.
 24   859E              ; ******************************************************************************************************************************************************************************************
 25   859E              ;
 26   859E              ; 8/11/22
 27   859E              ;
 28   859E              ; Constantes generales.
 29   859E              ;
 30   859E
 31   859E              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   859E              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   859E              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   859E              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   859E
 36   859E              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   859E              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   859E              ;                               				        ; De momento situamos este almacén en $7000.
 39   859E              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   859E              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   859E              ;                               				        ; De momento situamos este almacén en $7060.
 42   859E
 43   859E              ; ******************************************************************************************************************************************************************************************
 44   859E              ; Variables.
 45   859E              ; ******************************************************************************************************************************************************************************************
 46   859E              ;
 47   859E              ; 10/11/22
 48   859E              ;
 49   859E              ; Variables de DRAW. (Motor principal).
 50   859E              ;
 51   859E              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   859E
 53   859E 02           Filas db 2												; Filas. [DRAW]
 54   859F 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   85A0 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   85A2 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   85A4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   85A5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   85A6
 60   85A6              ; ---------- ---------- ---------- ---------;      ;---------
 61   85A6
 62   85A6 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   85A7              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   85A7              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   85A7 04           Attr db %00000100										; Atributos de la entidad:
 66   85A8
 67   85A8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A8              ;
 69   85A8              ;	COLORES: 0 ..... NEGRO
 70   85A8              ;    		 1 ..... AZUL
 71   85A8              ; 			 2 ..... ROJO
 72   85A8              ;			 3 ..... MAGENTA
 73   85A8              ; 			 4 ..... VERDE
 74   85A8              ; 			 5 ..... CIAN
 75   85A8              ;			 6 ..... AMARILLO
 76   85A8              ; 			 7 ..... BLANCO
 77   85A8
 78   85A8 A0 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85AA 20 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85AC 00 00        Puntero_DESPLZ_der defw 0
 81   85AE 00 00        Puntero_DESPLZ_izq defw 0
 82   85B0
 83   85B0 23 47        Posicion_inicio defw $4723								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85B2 01           Cuad_objeto db 1			 							; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85B3
 86   85B3              ; Variables de objeto. (Características).
 87   85B3
 88   85B3 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85B4 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85B5 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85B6 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85B7
 93   85B7 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85BB 00 00        	defw 0
 96   85BD 00 00 00 00  	db 0,0,0,0
 97   85C1
 98   85C1 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85C3 00 00        	defw 0
100   85C5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85C7 00 00 00 00  	db 0,0,0,0
102   85CB
103   85CB              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85CB
105   85CB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85CC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85CC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85CC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85CC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85CC              ;
111   85CC              ; 														DESCRIPCIÖN:
112   85CC              ;
113   85CC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85CC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85CC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85CC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85CC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85CC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85CC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85CC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85CC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85CC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85CC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85CC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85CC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85CC              ;
127   85CC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85CC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85CC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85CC
131   85CC 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85CD
133   85CD              ; Movimiento.
134   85CD
135   85CD 69 93        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   85CF 00 00        Puntero_mov defw 0
137   85D1 00           Contador_db_mov db 0
138   85D2 00           Incrementa_puntero db 0
139   85D3 00           Repetimos_db db 0
140   85D4
141   85D4              ; Variables de funcionamiento. [DRAW].
142   85D4
143   85D4 00           Columnas db 0
144   85D5 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85D7              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85D7 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D8
148   85D8              ; 59 Bytes por entidad.
149   85D8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D8              ;					         		---------;      ;---------
151   85D8
152   85D8
153   85D8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D8
155   85D8 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D9
157   85D9              ;														DESCRIPCIÓN:
158   85D9              ;
159   85D9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D9              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D9              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D9              ; Gestión de ENTIDADES.
163   85D9
164   85D9 00 00        Puntero_store_entidades defw 0
165   85DB 00 00        Puntero_restore_entidades defw 0
166   85DD 00 00        Indice_restore defw 0
167   85DF 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
168   85E0 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
169   85E1              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
170   85E1              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
171   85E1              ;														; _ (Numero_de_malotes)="0".
172   85E1 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
173   85E3              ;														; _variable para almacenar lo posición del puntero_
174   85E3              ; 														; _de pila, SP.
175   85E3 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
176   85E5              ;														; La utiliza la rutina [Extrae_foto_registros].
177   85E5 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
178   85E7              ;														; _el snapshot de los registros de la siguiente entidad.
179   85E7              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
180   85E7 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
181   85E9              ;														; _el snapshot de los registros del siguiente disparo.
182   85E9              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
183   85E9
184   85E9              ; Gestión de Disparos.
185   85E9
186   85E9 00           Numero_de_disparotes db 0
187   85EA 08 84        Stack_guns defw Indice_de_disparos_entidades			; Este puntero se irá desplazando por el índice de disparos_
188   85EC              ;														; _a medida que estos se van creando. Se sitúa en el siguiente_
189   85EC              ;														; _campo "vacio" del índice para alojar un nuevo disparo.
190   85EC 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
191   85EE 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
192   85F0
193   85F0
194   85F0
195   85F0              ; Gestión de FRAMES.
196   85F0
197   85F0 00           Switch db 0
198   85F1
199   85F1              ; Variables de Raster y localización en pantalla.
200   85F1
201   85F1 00 FF        Temp_Raster defw $ff00
202   85F3
203   85F3              ; Rutina principal *************************************************************************************************************************************************************************
204   85F3              ;
205   85F3              ;	14/11/22
206   85F3
207   85F3 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
208   85F6
209   85F6 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
210   85F8 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
211   85FA ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
212   85FC F3           	DI
213   85FD
214   85FD 3E 01        	ld a,1
215   85FF D3 FE        	out ($fe),a
216   8601
217   8601 3E 07        	ld a,%00000111
218   8603 CD A2 8F     	call Cls
219   8606
220   8606              ;	call Pinta_FILAS
221   8606
222   8606 CD 51 88     	call Pulsa_ENTER
223   8609
224   8609 21 DF 85     	ld hl,Numero_de_entidades
225   860C 46           	ld b,(hl)
226   860D 04           	inc b
227   860E 05           	dec b
228   860F 28 1C        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
229   8611
230   8611              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
231   8611              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
232   8611              ;	Pintamos el resto de entidades:
233   8611
234   8611 CD 4A 87     	call Inicia_punteros_de_entidades
235   8614
236   8614              ;	INICIA ENTIDADES!!!!!
237   8614
238   8614 C5           1 push bc  												; Guardo el contador de entidades.
239   8615 CD A4 87      	call Inicia_Puntero_objeto
240   8618 CD F2 89     	call Draw
241   861B
242   861B              ; ---- Debug 1/3/23
243   861B              ;	call Mov_left
244   861B              ;	call Mov_left
245   861B              ;	call Mov_left
246   861B              ;	call Mov_left
247   861B              ;	call Mov_left
248   861B              ;	call Mov_left
249   861B CD 30 91     	call Mov_left
250   861E CD 30 91     	call Mov_left
251   8621
252   8621              ;	call Mov_right
253   8621              ;	call Mov_right
254   8621              ;	call Mov_right
255   8621              ;	call Mov_right
256   8621              ;	call Mov_right
257   8621              ;	call Mov_right
258   8621              ;	call Mov_right
259   8621              ;	call Mov_right
260   8621
261   8621 CD F2 89     	call Draw
262   8624              ; ----
263   8624
264   8624 CD A0 7F     	call Guarda_foto_registros
265   8627 CD EC 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
266   862A C1           	pop bc
267   862B 10 E7        	djnz 1B  											; Decremento el contador de entidades.
268   862D
269   862D              ; 	INICIA AMADEUS!!!!!
270   862D
271   862D CD 2D 88     3 call Restore_Amadeus
272   8630 CD A4 87     	call Inicia_Puntero_objeto
273   8633 CD F2 89     	call Draw
274   8636 CD A0 7F     	call Guarda_foto_registros
275   8639 CD 3F 88     	call Store_Amadeus
276   863C
277   863C              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
278   863C
279   863C CD 60 87     	call Inicia_Puntero_Disparo_Entidades
280   863F CD 67 87     	call Inicia_Puntero_Disparo_Amadeus
281   8642
282   8642
283   8642              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
284   8642
285   8642 CD 4A 87     	call Inicia_punteros_de_entidades
286   8645 CD 1B 88     	call Restore_Primera_entidad
287   8648
288   8648 3A DF 85     	ld a,(Numero_de_entidades)
289   864B 3C           	inc a
290   864C 32 E0 85     	ld (Numero_de_malotes),a
291   864F
292   864F FB           2 ei
293   8650 18 FD        	jr 2B
294   8652
295   8652              ; -----------------------------------------------------------------------------------
296   8652
297   8652              Frame
298   8652
299   8652              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
300   8652              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
301   8652
302   8652 3E 02            ld a,2
303   8654 D3 FE            out ($fe),a
304   8656 CD F6 8C     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
305   8659 CD 2F 8D     	call Extrae_foto_registros_disparos
306   865C 3E 01            ld a,1
307   865E D3 FE            out ($fe),a
308   8660
309   8660 CD 87 88     	call Detecta_disparo_entidad
310   8663 CD 86 87     	call Calcula_numero_de_disparotes
311   8666
312   8666 C9           	ret
313   8667
314   8667
315   8667 18 FE            jr $
316   8669
317   8669              ; ----------------------------------------------------------------------
318   8669
319   8669 21 00 70     	ld hl,Album_de_fotos
320   866C 22 E5 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
321   866F              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
322   866F 3A DF 85         ld a,(Numero_de_entidades)
323   8672 47               ld b,a
324   8673 A7           	and a
325   8674 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
326   8676
327   8676 C5           2 push bc
328   8677 CD C3 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
329   867A 3A CB 85     	ld a,(Ctrl_0)
330   867D CB 67        	bit 4,a
331   867F 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
332   8681
333   8681              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
334   8681              ; Las entidades sólo generan disparo cuando se mueven.
335   8681              ; 16/02/23.
336   8681              ; [[[
337   8681 CD 87 88     	call Detecta_disparo_entidad
338   8684              ; ]]]
339   8684
340   8684 CD 11 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
341   8687
342   8687 21 CB 85     1 ld hl,Ctrl_0
343   868A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
344   868C AF           	xor a
345   868D 32 CC 85     	ld (Obj_dibujado),a
346   8690 CD EC 87     	call Store_Restore_entidades
347   8693 C1           	pop bc
348   8694 10 E0        	djnz 2B
349   8696
350   8696              ; Tras la gestión de las entidades, ... AMADEUS.
351   8696
352   8696 CD 2D 88     4 call Restore_Amadeus
353   8699 CD E2 86     	call Mov_Amadeus
354   869C 3A CB 85     	ld a,(Ctrl_0)
355   869F CB 67        	bit 4,a
356   86A1 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
357   86A3 CD 11 87     	call Guarda_foto_entidad_a_pintar
358   86A6
359   86A6 21 CB 85     3 ld hl,Ctrl_0
360   86A9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
361   86AB AF           	xor a
362   86AC 32 CC 85     	ld (Obj_dibujado),a
363   86AF CD 3F 88     	call Store_Amadeus
364   86B2
365   86B2              ; -----
366   86B2
367   86B2 CD 4A 87     	call Inicia_punteros_de_entidades
368   86B5 CD 1B 88     	call Restore_Primera_entidad
369   86B8
370   86B8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
371   86B8
372   86B8 CD 6E 87     	call Calcula_numero_de_malotes
373   86BB CD 86 87     	call Calcula_numero_de_disparotes
374   86BE
375   86BE 3E 04        	ld a,4
376   86C0 D3 FE        	out ($fe),a
377   86C2 C9           	ret
378   86C3
379   86C3              ; --------------------------------------------------------------------------------------------------------------
380   86C3              ;
381   86C3              ;	29/1/23
382   86C3
383   86C3              Mov_obj
384   86C3
385   86C3              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
386   86C3
387   86C3 AF           	xor a
388   86C4 32 CC 85     	ld (Obj_dibujado),a
389   86C7 CD 1B 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
390   86CA              ;														; Obj_dibujado="0".
391   86CA              ; Movemos Entidades malignas.
392   86CA
393   86CA CD 7F 93     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
394   86CD 3A CB 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
395   86D0 CB 67        	bit 4,a
396   86D2 C8           	ret z
397   86D3
398   86D3              ; ---------
399   86D3
400   86D3 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
401   86D5 32 CC 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
402   86D8 CD 1B 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
403   86DB CD 32 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
404   86DE CD 01 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
405   86E1 C9           	ret													; _de la misma.
406   86E2
407   86E2              ; --------------------------------------------------------------------------------------------------------------
408   86E2              ;
409   86E2              ;	29/1/23
410   86E2
411   86E2              Mov_Amadeus
412   86E2
413   86E2 AF           	xor a
414   86E3 32 CC 85     	ld (Obj_dibujado),a
415   86E6 CD 1B 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
416   86E9              ;														; Obj_dibujado="0".
417   86E9              ; Movemos Amadeus.
418   86E9
419   86E9 CD 65 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
420   86EC 3A CB 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
421   86EF CB 67        	bit 4,a
422   86F1 C8           	ret z
423   86F2
424   86F2              ; ---------
425   86F2
426   86F2 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
427   86F4 32 CC 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
428   86F7 CD 1B 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
429   86FA CD 32 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
430   86FD CD 01 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
431   8700 C9           	ret													; _de la nave.
432   8701
433   8701              ; --------------------------------------------------------------------------------------------------------------
434   8701              ;
435   8701              ;	31/01/23
436   8701              ;
437   8701              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
438   8701
439   8701              Guarda_foto_entidad_a_borrar
440   8701
441   8701 CD CC 8C     	call Prepara_draw
442   8704 CD 06 8C     	call calcula_CColumnass
443   8707 CD 3D 8C     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
444   870A CD 92 8C     	call Define_rutina_de_impresion
445   870D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
446   8710 C9           	ret
447   8711
448   8711              ; --------------------------------------------------------------------------------------------------------------
449   8711              ;
450   8711              ;	31/01/23
451   8711              ;
452   8711              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
453   8711              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
454   8711
455   8711              Guarda_foto_entidad_a_pintar
456   8711
457   8711 CD 3E 87     	call Repone_pintar
458   8714 CD F2 89     	call Draw
459   8717 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
460   871A C9           	ret
461   871B
462   871B              ; --------------------------------------------------------------------------------------------------------------
463   871B              ;
464   871B              ;
465   871B
466   871B 21 9E 85     Prepara_var_pintado_borrado	ld hl,Filas
467   871E 3A CC 85     	ld a,(Obj_dibujado)
468   8721 A7           	and a
469   8722 28 05        	jr z,1F
470   8724 11 C1 85     	ld de,Variables_de_pintado
471   8727 18 03        	jr 2F
472   8729 11 B7 85     1 ld de,Variables_de_borrado
473   872C 01 08 00     2 ld bc,8
474   872F ED B0        	ldir
475   8731 C9           	ret
476   8732
477   8732              ; --------------------------------------------------------------------------------------------------------------
478   8732
479   8732 21 B7 85     Repone_borrar ld hl,Variables_de_borrado
480   8735 11 9E 85     	ld de,Filas
481   8738 01 08 00     	ld bc,8
482   873B ED B0        	ldir
483   873D C9           	ret
484   873E
485   873E 21 C1 85     Repone_pintar ld hl,Variables_de_pintado
486   8741 11 9E 85     	ld de,Filas
487   8744 01 08 00     	ld bc,8
488   8747 ED B0        	ldir
489   8749 C9           	ret
490   874A
491   874A              ; *************************************************************************************************************************************************************
492   874A              ;
493   874A              ; 8/1/23
494   874A              ;
495   874A              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
496   874A              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
497   874A              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
498   874A
499   874A              ; Destruye HL y DE !!!!!
500   874A
501   874A              Inicia_punteros_de_entidades
502   874A
503   874A 21 70 84     	ld hl,Indice_de_entidades
504   874D CD 9E 87         call Extrae_address
505   8750 22 D9 85         ld (Puntero_store_entidades),hl
506   8753 21 72 84     	ld hl,Indice_de_entidades+2
507   8756 22 DD 85     	ld (Indice_restore),hl
508   8759 CD 9E 87     	call Extrae_address
509   875C 22 DB 85     	ld (Puntero_restore_entidades),hl
510   875F C9               ret
511   8760
512   8760              ; *************************************************************************************************************************************************************
513   8760              ;
514   8760              ; 8/1/23
515   8760              ;
516   8760              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
517   8760
518   8760 21 08 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
519   8763 22 EC 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
520   8766 C9           	ret
521   8767 21 F0 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
522   876A 22 EE 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
523   876D C9           	ret
524   876E
525   876E              ; -------------------------------------------------------------------------------------------------------------
526   876E              ;
527   876E              ; 28/2/23
528   876E              ;
529   876E
530   876E              Calcula_numero_de_malotes
531   876E
532   876E 21 00 70     	ld hl,Album_de_fotos
533   8771 EB           	ex de,hl
534   8772 2A E5 85     	ld hl,(Stack_snapshot)
535   8775
536   8775 06 00        	ld b,0
537   8777 7D           	ld a,l
538   8778 93           	sub e
539   8779 28 07        	jr z,1F
540   877B
541   877B              ; Nº de malotes no es "0".
542   877B
543   877B D6 06        2 sub 6
544   877D 04           	inc b
545   877E A7           	and a
546   877F 20 FA        	jr nz,2B
547   8781 78           	ld a,b
548   8782
549   8782 32 E0 85     1 ld (Numero_de_malotes),a
550   8785 C9           	ret
551   8786
552   8786              ; -------------------------------------------------------------------------------------------------------------
553   8786              ;
554   8786              ; 28/2/23
555   8786              ;
556   8786
557   8786              Calcula_numero_de_disparotes
558   8786
559   8786 21 60 70     	ld hl,Album_de_fotos_disparos
560   8789 EB           	ex de,hl
561   878A 2A E7 85     	ld hl,(Stack_snapshot_disparos)
562   878D
563   878D 06 00        	ld b,0
564   878F 7D           	ld a,l
565   8790 93           	sub e
566   8791 28 07        	jr z,1F
567   8793
568   8793              ; Nº de malotes no es "0".
569   8793
570   8793 D6 06        2 sub 6
571   8795 04           	inc b
572   8796 A7           	and a
573   8797 20 FA        	jr nz,2B
574   8799 78           	ld a,b
575   879A
576   879A 32 E9 85     1 ld (Numero_de_disparotes),a
577   879D C9           	ret
578   879E              ; *************************************************************************************************************************************************************
579   879E              ;
580   879E              ; 20/10/22
581   879E              ;
582   879E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
583   879E              ;
584   879E              ; Destruye el puntero y DE !!!!!
585   879E
586   879E 5E           Extrae_address ld e,(hl)
587   879F 23           	inc hl
588   87A0 56           	ld d,(hl)
589   87A1 2B           	dec hl
590   87A2 EB           	ex de,hl
591   87A3 C9           	ret
592   87A4
593   87A4              ; *************************************************************************************************************************************************************
594   87A4              ;
595   87A4              ;	7/2/23
596   87A4              ;
597   87A4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
598   87A4              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
599   87A4              ;
600   87A4              ;   Destruye HL y BC !!!!!,
601   87A4              ;
602   87A4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
603   87A4              ;					"0" ..... Izquierda.
604   87A4
605   87A4              Inicia_Puntero_objeto
606   87A4
607   87A4 3A B2 85     	ld a,(Cuad_objeto)
608   87A7 E6 01        	and 1
609   87A9 F5           	push af
610   87AA CC C8 87     	call z,Inicia_puntero_objeto_izq
611   87AD F1           	pop af
612   87AE 28 2B        	jr z,1F
613   87B0 CD B5 87     	call Inicia_puntero_objeto_der
614   87B3 18 26        	jr 1F
615   87B5
616   87B5              ; Arrancamos desde la parte izquierda de la pantalla.
617   87B5              ; Iniciamos (Indice_Sprite_der).
618   87B5
619   87B5 2A A8 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
620   87B8 22 AC 85     	ld (Puntero_DESPLZ_der),hl
621   87BB CD 9E 87     	call Extrae_address
622   87BE 22 A2 85     	ld (Puntero_objeto),hl
623   87C1
624   87C1 2A AA 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
625   87C4              ;	call Extrae_address
626   87C4 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
627   87C7 C9           	ret
628   87C8
629   87C8              ; Arrancamos desde la parte derecha de la pantalla.
630   87C8              ; Iniciamos (Indice_Sprite_izq).
631   87C8
632   87C8 2A AA 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
633   87CB 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
634   87CE CD 9E 87     	call Extrae_address
635   87D1 22 A2 85     	ld (Puntero_objeto),hl
636   87D4
637   87D4 2A A8 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
638   87D7              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
639   87D7 22 AC 85     	ld (Puntero_DESPLZ_der),hl
640   87DA C9           	ret
641   87DB
642   87DB              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
643   87DB
644   87DB 21 40 83     1 ld hl,Amadeus
645   87DE ED 4B A2 85  	ld bc,(Puntero_objeto)
646   87E2 B7 ED 42     	sub hl,bc
647   87E5 C0           	ret nz
648   87E6 21 CB 85     	ld hl,Ctrl_0
649   87E9 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
650   87EB C9           	ret 												; _de nuestra nave en los extremos.
651   87EC
652   87EC              ; *************************************************************************************************************************************************************
653   87EC              ;
654   87EC              ;	8/1/23
655   87EC              ;
656   87EC              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
657   87EC              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
658   87EC
659   87EC              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
660   87EC              ;	_de la 2ª y 3ª entidad respectivamente.
661   87EC
662   87EC              Store_Restore_entidades
663   87EC
664   87EC E5           	push hl
665   87ED D5           	push de
666   87EE C5            	push bc
667   87EF
668   87EF              ;	STORE !!!!!
669   87EF              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
670   87EF
671   87EF 21 9E 85     	ld hl,Filas
672   87F2 ED 5B D9 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
673   87F6 01 3A 00     	ld bc,58
674   87F9 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
675   87FB
676   87FB              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
677   87FB
678   87FB 2A DB 85     	ld hl,(Puntero_restore_entidades)
679   87FE 22 D9 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
680   8801 11 9E 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
681   8804 01 3A 00     	ld bc,58
682   8807 ED B0        	ldir
683   8809
684   8809              ;	Incrementa RESTORE !!!!!
685   8809
686   8809 2A DD 85         ld hl,(Indice_restore)
687   880C 23           	inc hl
688   880D 23           	inc hl
689   880E 22 DD 85     	ld (Indice_restore),hl
690   8811 CD 9E 87         call Extrae_address
691   8814 22 DB 85         ld (Puntero_restore_entidades),hl
692   8817 C1           	pop bc
693   8818 D1           	pop de
694   8819 E1           	pop hl
695   881A C9           	ret
696   881B
697   881B              ; **************************************************************************************************
698   881B              ;
699   881B              ;	29/10/22
700   881B              ;
701   881B              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
702   881B
703   881B E5           Restore_Primera_entidad push hl
704   881C D5           	push de
705   881D C5            	push bc
706   881E 2A D9 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
707   8821 11 9E 85     	ld de,Filas
708   8824 01 3A 00     	ld bc,58
709   8827 ED B0        	ldir
710   8829 C1           	pop bc
711   882A D1           	pop de
712   882B E1           	pop hl
713   882C C9           	ret
714   882D
715   882D              ; **************************************************************************************************
716   882D              ;
717   882D              ;	25/01/23
718   882D              ;
719   882D              ;	Restore_Amadeus
720   882D              ;
721   882D              ;	Cargamos en DRAW los parámetros de Amadeus.
722   882D              ;
723   882D
724   882D E5           Restore_Amadeus	push hl
725   882E D5           	push de
726   882F C5            	push bc
727   8830 21 7C 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
728   8833 11 9E 85     	ld de,Filas
729   8836 01 3A 00     	ld bc,58
730   8839 ED B0        	ldir
731   883B C1           	pop bc
732   883C D1           	pop de
733   883D E1           	pop hl
734   883E C9           	ret
735   883F
736   883F              ; *************************************************************************************************************************************************************
737   883F              ;
738   883F              ;	29/01/23
739   883F              ;
740   883F              ;	Store_Amadeus
741   883F              ;
742   883F              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
743   883F              ;
744   883F
745   883F E5           Store_Amadeus push hl
746   8840 D5           	push de
747   8841 C5            	push bc
748   8842 21 9E 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
749   8845 11 7C 84     	ld de,Amadeus_db
750   8848 01 3A 00     	ld bc,58
751   884B ED B0        	ldir
752   884D C1           	pop bc
753   884E D1           	pop de
754   884F E1           	pop hl
755   8850 C9           	ret
756   8851
757   8851              ; **************************************************************************************************
758   8851
759   8851              ; Teclado.
760   8851
761   8851 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
762   8853 DB FE        	in a,($fe)
763   8855 E6 01        	and $01
764   8857 28 02        	jr z,1f
765   8859 18 F6        	jr Pulsa_ENTER
766   885B C9           1 ret
767   885C
768   885C              ; **************************************************************************************************
769   885C              ;
770   885C              ; Temporización.
771   885C
772   885C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
773   885C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
774   885C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
775   885C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
776   885C
777   885C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
778   885C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
779   885C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
780   885C
781   885C              ; A partir de $4f61 no hace falta DELAY.
782   885C
783   885C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
784   885C
785   885C 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
786   885F 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
787   8860 78           	LD A,B
788   8861 A7           	AND A
789   8862 20 FB        	JR NZ,wait
790   8864 C9           	RET
791   8865
792   8865              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
793   8865              ;
794   8865              ;	16/02/23
795   8865
796   8865              Movimiento_Amadeus
797   8865
798   8865              ; Disparo.
799   8865
800   8865 3E F7        	ld a,$f7												; "5" para disparar.
801   8867 DB FE        	in a,($fe)
802   8869 E6 10        	and $10
803   886B CC BB 88     	call z,Genera_disparo
804   886E
805   886E 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
806   8870 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
807   8872 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
808   8874 CC 30 91         call z,Mov_left											;			"			"			"			"			"			"			"			"
809   8877 3E F7        	ld a,$f7
810   8879 DB FE        	in a,($fe)
811   887B E6 01        	and $01
812   887D C8           	ret z
813   887E
814   887E 3E F7        	ld a,$f7
815   8880 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
816   8882 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
817   8884 CC 12 90     	call z,Mov_right										;			"			"			"			"			"			"			"			"
818   8887
819   8887              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
820   8887              ;
821   8887              ;	Rutina provisional para que los malotes cagen balas.
822   8887
823   8887 3E 7F        Detecta_disparo_entidad	ld a,$7f
824   8889 DB FE        	in a,($fe)
825   888B E6 01        	and 1
826   888D C0           	ret nz
827   888E CD BB 88     	call Genera_disparo
828   8891 C9           	ret
829   8892
830   8892              ; Pinta indicadores de FILAS. ------------------------------------------------------
831   8892
832   8892 21 10 40     Pinta_FILAS ld hl,$4010
833   8895              ;	ld b,9
834   8895              ;2 push hl
835   8895              ;	push bc
836   8895 06 BF        	ld b,$bf
837   8897 36 80        1 ld (hl),%10000000
838   8899 CD D8 8C     	call NextScan
839   889C 10 F9        	djnz 1B
840   889E              ;	pop bc
841   889E              ;	pop hl
842   889E              ;	inc l
843   889E              ;	djnz 2B
844   889E 06 03        	ld b,3
845   88A0 21 00 47         ld hl,$4700
846   88A3 CD A9 88     3 call Bucle_1
847   88A6 10 FB            djnz 3B
848   88A8 C9               ret
849   88A9
850   88A9 C5           Bucle_1 push bc
851   88AA E5                   push hl
852   88AB D1                   pop de
853   88AC 13                   inc de
854   88AD 01 FF 00             ld bc,255
855   88B0 36 FF                ld (hl),255
856   88B2 ED B0                ldir
857   88B4 23                   inc hl
858   88B5 3E 07                ld a,7
859   88B7 84                   add a,h
860   88B8 67                   ld h,a
861   88B9 C1                   pop bc
862   88BA C9                   ret
863   88BB
864   88BB              ; ---------------------------------------------------------------
865   88BB
866   88BB              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88BB              ; ******************************************************************************************************************************************************************************************
  2+  88BB              ;
  3+  88BB              ;   19/02/23
  4+  88BB              ;
  5+  88BB              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88BB              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88BB              ;
  8+  88BB              ;
  9+  88BB              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88BB              ;
 11+  88BB              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88BB              ;               _ hacen las entidades hacia abajo.
 13+  88BB              ;
 14+  88BB              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88BB              ;
 16+  88BB              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88BB              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88BB              ;
 19+  88BB              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88BB              ;           _ la bala.
 21+  88BB              ;
 22+  88BB              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88BB              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88BB              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88BB              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88BB              ;           _ en el momento de generarse la bala)).
 27+  88BB
 28+  88BB              Genera_disparo
 29+  88BB
 30+  88BB              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88BB              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88BB              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88BB              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88BB              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88BB              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga dichos valores.
 36+  88BB              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88BB
 38+  88BB 3A D4 85         ld a,(Columnas)
 39+  88BE 47               ld b,a
 40+  88BF 3A 9F 85         ld a,(Columns)
 41+  88C2 B8               cp b
 42+  88C3 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 43+  88C4
 44+  88C4              ; ----- ----- -----
 45+  88C4
 46+  88C4 21 00 80         ld hl,Indice_disparo
 47+  88C7 3A A6 85         ld a,(CTRL_DESPLZ)
 48+  88CA 4F               ld c,a
 49+  88CB 06 00            ld b,0	; counter.
 50+  88CD A7               and a
 51+  88CE 28 10            jr z,1F
 52+  88D0
 53+  88D0 E6 01            and 1
 54+  88D2 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 55+  88D3
 56+  88D3 79               ld a,c
 57+  88D4 16 F9            ld d,$f9
 58+  88D6 23           2 inc hl
 59+  88D7 23               inc hl
 60+  88D8 04               inc b 	; inc counter.
 61+  88D9 BA               cp d
 62+  88DA 28 04            jr z,1F
 63+  88DC 14               inc d
 64+  88DD 14               inc d
 65+  88DE 18 F6            jr 2B
 66+  88E0
 67+  88E0              ; Cuando (CTRL_DESPLZ)="0", B="0"
 68+  88E0              ;   ""        ""       "f9", B="1"
 69+  88E0              ;   ""        ""       "fb", B="2"
 70+  88E0              ;   ""        ""       "fb", B="3"
 71+  88E0
 72+  88E0 CD 9E 87     1 call Extrae_address
 73+  88E3 E5               push hl
 74+  88E4 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 75+  88E6 DD 21 6B 8F  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 76+  88EA
 77+  88EA              ; --------------- ---------------- ----------------- -------------
 78+  88EA              ;
 79+  88EA              ;   Genera disparo.
 80+  88EA              ;
 81+  88EA              ;   Generamos variables de disparo. Varían en función del cuadrante en el que nos encontramos.
 82+  88EA
 83+  88EA 3A B2 85     	ld a,(Cuad_objeto)
 84+  88ED FE 02            cp 2
 85+  88EF 38 52            jr c,3F
 86+  88F1 28 50            jr z,3F
 87+  88F3
 88+  88F3              ; Estamos en mitad inferior de pantalla, (cuadrantes 3 y 4).
 89+  88F3
 90+  88F3 E6 01            and 1
 91+  88F5 28 27            jr z,4F
 92+  88F7
 93+  88F7              ; Estamos en el 3er cuadrante de pantalla.
 94+  88F7              ; 3er CUAD. ----- ----- ----- ----- -----
 95+  88F7              ;
 96+  88F7              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 97+  88F7              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 98+  88F7              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 99+  88F7
100+  88F7 2A A0 85     	ld hl,(Posicion_actual)
101+  88FA
102+  88FA              ;   Compruebo si el disparo lo efectúa Amadeus o una entidad para poder calcular el puntero de impresión.
103+  88FA
104+  88FA 3A CB 85         ld a,(Ctrl_0)
105+  88FD CB 77            bit 6,a
106+  88FF 28 0B            jr z,8F
107+  8901
108+  8901              ; Dispara Amadeus.
109+  8901
110+  8901 0E 01            ld c,1	                                        ; Dirección "1", hacia arriba.
111+  8903 CD E7 8C         call PreviousScan
112+  8906 CD E7 8C         call PreviousScan
113+  8909 2B               dec hl                                          ; Puntero de impresión en HL.
114+  890A 18 0A            jr 10F
115+  890C
116+  890C              ; Dispara Entidad.
117+  890C
118+  890C 0E 00        8 ld c,0	                                        ; Dirección "0", hacia abajo.
119+  890E 06 10            ld b,16
120+  8910 CD D8 8C     9 call NextScan
121+  8913 10 FB            djnz 9B
122+  8915
123+  8915              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
124+  8915
125+  8915 2B               dec hl                                          ; Puntero de impresión en HL.
126+  8916 CD CD 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
127+  8919              ;                                                   ; _al generar el disparo.
128+  8919
129+  8919              ; LLegados a este punto tendremos:
130+  8919              ;
131+  8919              ;       Puntero_objeto_disparo en IY.
132+  8919              ;       Rutinas_de_impresion en IX.
133+  8919              ;       Puntero_de_impresion en HL.
134+  8919              ;       Impacto/Dirección en BC.
135+  8919
136+  8919 CD 67 89         call Almacena_disparo
137+  891C 18 48            jr 6F                                           ; RET.
138+  891E
139+  891E
140+  891E              ; Estamos en el 4º cuadrante de pantalla.
141+  891E              ; 4º CUAD. ----- ----- ----- ----- -----
142+  891E              ;
143+  891E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
144+  891E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
145+  891E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
146+  891E
147+  891E 2A A0 85     4 ld hl,(Posicion_actual)
148+  8921
149+  8921              ;   Compruebo si el disparo lo efectúa Amadeus o una entidad para poder calcular el puntero de impresión.
150+  8921
151+  8921 3A CB 85         ld a,(Ctrl_0)
152+  8924 CB 77            bit 6,a
153+  8926 28 0A            jr z,11F
154+  8928
155+  8928              ; Dispara Amadeus.
156+  8928
157+  8928 0E 01            ld c,1                                            ; Dirección "1", hacia arriba.
158+  892A              ;    inc hl
159+  892A CD E7 8C         call PreviousScan
160+  892D CD E7 8C         call PreviousScan
161+  8930 18 09            jr 13F
162+  8932
163+  8932              ; Dispara Entidad.
164+  8932
165+  8932 0E 00        11 ld c,0                                        	  ; Dirección "0", hacia abajo.
166+  8934 06 10            ld b,16
167+  8936              ;    inc hl
168+  8936 CD D8 8C     12 call NextScan
169+  8939 10 FB            djnz 12B
170+  893B
171+  893B              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
172+  893B
173+  893B CD CD 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
174+  893E              ;                                                     ; _al generar el disparo.
175+  893E
176+  893E              ; LLegados a este punto tendremos:
177+  893E              ;
178+  893E              ;       Puntero_objeto_disparo en IY.
179+  893E              ;       Rutinas_de_impresion en IX.
180+  893E              ;       Puntero_de_impresion en HL.
181+  893E              ;       Impacto/Dirección en BC.
182+  893E
183+  893E CD 67 89         call Almacena_disparo
184+  8941 18 23            jr 6F                                           ; RET.
185+  8943
186+  8943              ; Estamos en la mitad superior de pantalla, (cuadrantes 1 y 2).
187+  8943
188+  8943 28 15        3 jr z,5F
189+  8945
190+  8945              ; 1er CUAD. ----- ----- ----- ----- -----
191+  8945              ;
192+  8945              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
193+  8945              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
194+  8945              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
195+  8945              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
196+  8945
197+  8945              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
198+  8945              ;	   ""        ""       "f9", B="1"
199+  8945              ;	   ""        ""       "fb", B="2"
200+  8945              ; 	   ""        ""       "fb", B="3"
201+  8945
202+  8945
203+  8945 2A A0 85     	ld hl,(Posicion_actual)
204+  8948 CD D8 8C     	call NextScan
205+  894B
206+  894B              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
207+  894B              ; En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
208+  894B              ; En CUAD_1, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2. El resto de combinaciones,_
209+  894B              ; _ B="0","2" y "3" ..... DEC HL.
210+  894B              ; ----- ----- -----
211+  894B 78           	ld a,b
212+  894C FE 01        	cp 1
213+  894E 20 01        	jr nz,14F
214+  8950 2B           	dec hl                                          ; Puntero de impresión en HL.
215+  8951 2B           14 dec hl
216+  8952              ; ----- ----- -----
217+  8952
218+  8952              ; No se produce impacto. B="0"
219+  8952              ; Dirección del proyectil hacia abajo. C="0"
220+  8952
221+  8952 01 00 00         ld bc,0
222+  8955
223+  8955              ; LLegados a este punto tendremos:
224+  8955              ;
225+  8955              ;       Puntero_objeto_disparo en IY.
226+  8955              ;       Rutinas_de_impresion en IX.
227+  8955              ;       Puntero_de_impresion en HL.
228+  8955              ;       Impacto/Dirección en BC.
229+  8955
230+  8955 CD 67 89         call Almacena_disparo
231+  8958 18 0C            jr 6F                                           ; RET.
232+  895A
233+  895A              ; Estamos en el 2º cuadrante de pantalla.
234+  895A              ; 2º CUAD. ----- ----- ----- ----- -----
235+  895A              ;
236+  895A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
237+  895A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
238+  895A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
239+  895A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
240+  895A
241+  895A 2A A0 85     5 ld hl,(Posicion_actual)
242+  895D
243+  895D              ;	inc hl
244+  895D
245+  895D CD D8 8C     	call NextScan
246+  8960
247+  8960              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
248+  8960
249+  8960              ; No se produce impacto. B="$80"
250+  8960              ; Dirección del proyectil hacia abajo. C="80"
251+  8960
252+  8960 01 00 00         ld bc,0
253+  8963
254+  8963              ; LLegados a este punto tendremos:
255+  8963              ;
256+  8963              ;       Puntero_objeto_disparo en IY.
257+  8963              ;       Rutinas_de_impresion en IX.
258+  8963              ;       Puntero_de_impresion en HL.
259+  8963              ;       Impacto/Dirección en BC.
260+  8963
261+  8963 CD 67 89         call Almacena_disparo
262+  8966
263+  8966              ; Preparamos registros para llamar a [Guarda_foto_registros].
264+  8966              ; Antes de llamar a [Guarda_foto_registros] indicamos que se trata de un disparo.
265+  8966
266+  8966 C9           6 ret
267+  8967
268+  8967              ; ----------------------------------------------------------------
269+  8967              ;
270+  8967              ;   25/02/23
271+  8967              ;
272+  8967              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
273+  8967              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
274+  8967
275+  8967
276+  8967              Almacena_disparo
277+  8967
278+  8967 E5               push hl
279+  8968 F1               pop af
280+  8969 08               ex af,af                                        ; Puntero_de_impresion en AF'.
281+  896A
282+  896A 0C           3 inc c
283+  896B 0D               dec c
284+  896C 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
285+  896E              ;                                                   ; _ es Amadeus o una entidad la que dispara.
286+  896E
287+  896E              ; Dispara AMADEUS.
288+  896E
289+  896E C5               push bc
290+  896F 01 F4 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A
291+  8972 2A EE 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
292+  8975 A7               and a
293+  8976 ED 42            sbc hl,bc
294+  8978 CC 67 87         call z,Inicia_Puntero_Disparo_Amadeus
295+  897B C1               pop bc
296+  897C 28 4E            jr z,4F
297+  897E
298+  897E 2A EE 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
299+  8981 23               inc hl
300+  8982 23               inc hl
301+  8983 22 EE 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
302+  8986              ;                                                   ; _ Disparo_(+1).
303+  8986 18 18            jr 2F
304+  8988
305+  8988              ; Dispara una entidad.
306+  8988
307+  8988 C5           1 push bc
308+  8989 01 1C 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
309+  898C 2A EC 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
310+  898F A7               and a
311+  8990 ED 42            sbc hl,bc
312+  8992 CC 60 87         call z,Inicia_Puntero_Disparo_Entidades
313+  8995 C1               pop bc
314+  8996 28 34            jr z,4F
315+  8998
316+  8998 2A EC 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
317+  899B 23               inc hl
318+  899C 23               inc hl
319+  899D 22 EC 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
320+  89A0              ;                                                   ; _ Disparo_(+1).
321+  89A0 CD 9E 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
322+  89A3              ;                                                   ; _ los 8 bytes que definen el disparo:
323+  89A3              ;
324+  89A3              ;                                                     Puntero_objeto_disparo en IY.
325+  89A3              ;                                                     Rutinas_de_impresion en IX.
326+  89A3              ;                                                     Puntero_de_impresion en HL.
327+  89A3              ;                                                     Impacto/Dirección en BC.
328+  89A3
329+  89A3 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
330+  89A4 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
331+  89A5 23               inc hl                                          ; _ al siguiente.
332+  89A6 A7               and a
333+  89A7 20 C1            jr nz,3B
334+  89A9
335+  89A9 08               ex af,af
336+  89AA ED 73 E1 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
337+  89AE F9               ld sp,hl
338+  89AF
339+  89AF DD E5            push ix                                         ; Rutina de impresión.
340+  89B1 F5               push af                                         ; Puntero de impresión.
341+  89B2 FD E5            push iy                                         ; Puntero objeto.
342+  89B4 C5               push bc                                         ; Control.
343+  89B5
344+  89B5 ED 7B E1 85      ld sp,(Stack)
345+  89B9
346+  89B9              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
347+  89B9
348+  89B9 21 D8 85     	ld hl,Ctrl_1
349+  89BC CB C6        	set 0,(hl)
350+  89BE
351+  89BE DD E5        	push ix
352+  89C0 E1               pop hl
353+  89C1 F5               push af
354+  89C2 DD E1            pop ix
355+  89C4
356+  89C4 CD A0 7F     	call Guarda_foto_registros
357+  89C7
358+  89C7 21 D8 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
359+  89CA CB 86        	res 0,(hl)
360+  89CC
361+  89CC C9           4 ret
362+  89CD
363+  89CD              ; ----------------------------------------------------------------
364+  89CD              ;
365+  89CD              ;   20/02/23
366+  89CD
367+  89CD E5           Comprueba_Colision push hl
368+  89CE 1E 00            ld e,0                                         ; E,(Impacto)="0".
369+  89D0 CD E4 89         call Bucle_2                                   ; Comprobamos el 1er scanline.
370+  89D3 1C               inc e
371+  89D4 1D               dec e
372+  89D5 28 03            jr z,1F                                        ; Si no se produce impacto comprobamos el 2º scanline.
373+  89D7              ; Hay impacto.
374+  89D7 43           2 ld b,e
375+  89D8 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
376+  89D9 C9           3 ret
377+  89DA E1           1 pop hl
378+  89DB E5               push hl
379+  89DC CD D8 8C         call NextScan
380+  89DF CD E4 89         call Bucle_2
381+  89E2 18 F3            jr 2B
382+  89E4
383+  89E4              ; ---------- ----------
384+  89E4
385+  89E4 06 02        Bucle_2 ld b,2
386+  89E6 7E           2 ld a,(hl)
387+  89E7 A7               and a
388+  89E8 20 04            jr nz,1F
389+  89EA 23               inc hl
390+  89EB 10 F9            djnz 2B
391+  89ED C9           3 ret
392+  89EE 1E 01        1 ld e,1
393+  89F0 18 FB            jr 3B
394+  89F2
395+  89F2              ; -------------------------------------------------------------------------------------------------------------
396+  89F2
397+  89F2
398+  89F2
399+  89F2
400+  89F2
# file closed: Disparo.asm
867   89F2              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  89F2              ; ******************************************************************************************************************************************************************************************
  2+  89F2              ;
  3+  89F2              ; 01/23
  4+  89F2              ;
  5+  89F2              ; DRAW. ************************************************************************************************************************************************************************************
  6+  89F2
  7+  89F2 CD CC 8C     Draw call Prepara_draw
  8+  89F5 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  89F6 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  89F7 28 05        	jr z,2F
 11+  89F9
 12+  89F9 3A B2 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  89FC 18 0C        	jr 1F
 14+  89FE 2A B0 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8A01 22 A0 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8A04 CD 93 8B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8A07              ;													; _la esquina superior izquierda de la pantalla.
 18+  8A07 CD 01 94     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8A0A 3A CB 85     1 ld a,(Ctrl_0)
 20+  8A0D CB 6F        	bit 5,a
 21+  8A0F 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8A11
 23+  8A11 CD 29 8A     	call Comprueba_limite_horizontal
 24+  8A14 CD B9 8A     	call Comprueba_limite_vertical
 25+  8A17
 26+  8A17              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8A17
 28+  8A17 CD 06 8C     3 call calcula_CColumnass
 29+  8A1A CD 3D 8C     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8A1D CD 92 8C     	call Define_rutina_de_impresion
 31+  8A20
 32+  8A20 3A CB 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8A23 CB AF        	res 5,a											; _a ser de utilidad.
 34+  8A25 32 CB 85     	ld (Ctrl_0),a
 35+  8A28
 36+  8A28 C9           	ret
 37+  8A29
 38+  8A29              ; *******************************************************************************************************************************************************************************************
 39+  8A29              ;	21/01/23
 40+  8A29              ;
 41+  8A29              ; 	Comprueba_limite_horizontal.
 42+  8A29              ;
 43+  8A29              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8A29              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8A29              ;
 46+  8A29              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8A29              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8A29              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8A29              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8A29
 51+  8A29
 52+  8A29
 53+  8A29 3A CB 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8A2C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8A2E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8A30 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8A32 32 CB 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8A35 18 09            jr 6F
 59+  8A37 CB 5F        1 bit 3,a
 60+  8A39 28 0A            jr z,2F
 61+  8A3B E6 F7            and $f7
 62+  8A3D 32 CB 85         ld (Ctrl_0),a
 63+  8A40 CD 93 8B     6 call Inicializacion
 64+  8A43 18 5B            jr 5F
 65+  8A45 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8A46
 67+  8A46              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8A46              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8A46
 70+  8A46 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8A47 2A D5 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8A4A CD 98 8F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8A4D 67           	ld h,a
 74+  8A4E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8A4F CD 98 8F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8A52 67           	ld h,a
 77+  8A53 A7           	and a
 78+  8A54 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8A56 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8A57 3A B2 85     	ld a,(Cuad_objeto)
 81+  8A5A FE 02        	cp 2
 82+  8A5C 38 1E        	jr c,3F
 83+  8A5E 28 1C        	jr z,3F
 84+  8A60 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8A61 28 23            jr z,7F
 86+  8A63 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8A65 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8A67 E1           	pop hl
 89+  8A68
 90+  8A68              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8A68              ; _para indicar con E="2" en caso necesario.
 92+  8A68
 93+  8A68 E5               push hl
 94+  8A69 C5               push bc
 95+  8A6A CD 98 8F     	call calcula_tercio
 96+  8A6D FE 01        	cp 1
 97+  8A6F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8A71 CD A1 8A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8A74 28 26            jr z,9F
100+  8A76 38 24            jr c,9F
101+  8A78 1E 00        11 ld e,0
102+  8A7A 18 22            jr 8F
103+  8A7C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8A7D 28 07        	jr z, 7F
105+  8A7F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8A81 1E 00         	ld e,0
107+  8A83 E1           	pop hl
108+  8A84 18 04        	jr 4F
109+  8A86 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8A88 18 15            jr 10F
111+  8A8A
112+  8A8A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8A8A              ; _para indicar con E="2" en caso necesario.
114+  8A8A
115+  8A8A E5           4 push hl
116+  8A8B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8A8C CD 98 8F     	call calcula_tercio
118+  8A8F FE 01        	cp 1
119+  8A91 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8A93 CD A1 8A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8A96 28 04            jr z,9F
122+  8A98 30 02            jr nc,9F
123+  8A9A 18 02        	jr 8F
124+  8A9C 1E 02        9 ld e,2
125+  8A9E C1           8 pop bc
126+  8A9F E1           10 pop hl
127+  8AA0 C9           5 ret
128+  8AA1
129+  8AA1              ; --------------------
130+  8AA1              ;
131+  8AA1              ; 25/08/22
132+  8AA1
133+  8AA1 CD 98 8F     Comprueba_centro call calcula_tercio
134+  8AA4 67               ld h,a
135+  8AA5 08           	ex af,af
136+  8AA6 FE 02        	cp 2
137+  8AA8 38 07        	jr c,1F
138+  8AAA 28 05        	jr z,1F
139+  8AAC 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8AAF 18 03        	jr 2F
141+  8AB1 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8AB4 08           2 ex af,af
143+  8AB5 A7               and a
144+  8AB6 ED 42            sbc hl,bc
145+  8AB8 C9               ret
146+  8AB9
147+  8AB9              ; *********************************************************************************************************************************************************************************************
148+  8AB9              ;
149+  8AB9              ;   16/8/22
150+  8AB9              ;
151+  8AB9              ;	Comprueba_limite_vertical
152+  8AB9              ;
153+  8AB9              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8AB9              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8AB9              ;
156+  8AB9
157+  8AB9 2A A0 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8ABC 7D           	ld a,l
159+  8ABD E6 1F        	and $1F
160+  8ABF 57           	ld d,a
161+  8AC0 3A D7 85     	ld a,(Limite_vertical)
162+  8AC3 BA           	cp d 											; Límite - Posición.
163+  8AC4 08           	ex af,af 										; Resultado de CP d en F'.
164+  8AC5 3A B2 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8AC8 CB 47        	bit 0,a
166+  8ACA 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8ACC
168+  8ACC              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8ACC
170+  8ACC 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8ACD 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8ACF
173+  8ACF              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8ACF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8ACF
176+  8ACF 3A A4 85         ld a,(Coordenada_X)
177+  8AD2 16 0F            ld d,Centro_izquierda
178+  8AD4 A7               and a
179+  8AD5 92               sub d 											 ; Posición - Centro_izquierda.
180+  8AD6 28 1E            jr z,3F
181+  8AD8 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8ADA              ;                                                    ; _salimos sin modificar nada.
183+  8ADA 18 0E            jr 2F
184+  8ADC 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8ADD 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8ADF
187+  8ADF              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8ADF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8ADF
190+  8ADF 3A A4 85         ld a,(Coordenada_X)
191+  8AE2 16 10            ld d,Centro_derecha
192+  8AE4 A7               and a
193+  8AE5 92               sub d
194+  8AE6 28 0E            jr z,3F
195+  8AE8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8AEA              ;                                                    ; _salimos sin modificar nada.
197+  8AEA CB 43        2 bit 0,e
198+  8AEC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8AEE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8AEF CD 83 8B         call Modificaccionne
201+  8AF2 C1           	pop bc
202+  8AF3 CD 93 8B         call Inicializacion
203+  8AF6 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8AF7
205+  8AF7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8AF7
207+  8AF7 C5           4 push bc
208+  8AF8 01 9F 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8AFB 0A           	ld a,(bc)
210+  8AFC 3D           	dec a
211+  8AFD 47           	ld b,a 											 ; Columnas-1 en B.
212+  8AFE 7D           	ld a,l
213+  8AFF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8B00 CB 47        	bit 0,a
215+  8B02 28 03        	jr z,5F
216+  8B04 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8B05 18 2E        	jr 7F
218+  8B07
219+  8B07              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8B07
221+  8B07 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8B08 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8B09 3A CB 85     	ld a,(Ctrl_0)
224+  8B0C CB 4F        	bit 1,a
225+  8B0E 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8B10 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8B11
228+  8B11              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8B11
230+  8B11 1C               inc e
231+  8B12 1D               dec e
232+  8B13 20 07            jr nz,12F
233+  8B15 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8B16 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8B17 22 A0 85     	ld (Posicion_actual),hl
236+  8B1A 18 44        13 jr 9F
237+  8B1C CB 43        12 bit 0,e
238+  8B1E 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8B20              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8B20 C1           	pop bc
241+  8B21 18 D3        	jr 3B
242+  8B23 80           14 add b
243+  8B24 6F               ld l,a
244+  8B25 22 A0 85     	ld (Posicion_actual),hl
245+  8B28 CD 83 8B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8B2B 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8B2D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8B2F 32 CB 85         ld (Ctrl_0),a
249+  8B32 F1           	pop af
250+  8B33 18 2B        	jr 9F
251+  8B35
252+  8B35              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8B35
254+  8B35 F5           7 push af
255+  8B36 3A CB 85     	ld a,(Ctrl_0)
256+  8B39 CB 47        	bit 0,a
257+  8B3B 20 1D        	jr nz,8F
258+  8B3D F1           	pop af
259+  8B3E
260+  8B3E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8B3E
262+  8B3E 1C           	inc e
263+  8B3F 1D               dec e
264+  8B40 20 07            jr nz,10F
265+  8B42 90           	sub b
266+  8B43 6F               ld l,a
267+  8B44 22 A0 85     	ld (Posicion_actual),hl
268+  8B47 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8B49              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8B49 CB 43        10 bit 0,e
271+  8B4B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8B4D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8B4D C1           	pop bc
274+  8B4E 18 A6        	jr 3B
275+  8B50 90           16 sub b
276+  8B51 6F               ld l,a
277+  8B52 22 A0 85     	ld (Posicion_actual),hl
278+  8B55 CD 83 8B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8B58 18 06            jr 9F
280+  8B5A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8B5C 32 CB 85         ld (Ctrl_0),a
282+  8B5F F1           	pop af
283+  8B60 C1           9 pop bc
284+  8B61 1E 00        	ld e,0
285+  8B63 CD 93 8B         call Inicializacion
286+  8B66 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8B67 08           	ex af,af
288+  8B68 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8B69 18 8B            jr 3B
290+  8B6B
291+  8B6B              ; --------------------
292+  8B6B
293+  8B6B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8B6D CD E7 8C     1 call PreviousScan
295+  8B70 10 FB            djnz 1B
296+  8B72 22 A0 85     	ld (Posicion_actual),hl
297+  8B75 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8B76 C9           	ret
299+  8B77
300+  8B77              ; --------------------
301+  8B77
302+  8B77 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8B79 CD D8 8C     1 call NextScan
304+  8B7C 10 FB            djnz 1B
305+  8B7E 22 A0 85     	ld (Posicion_actual),hl
306+  8B81 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8B82 C9           	ret
308+  8B83
309+  8B83              ; --------------------
310+  8B83              ;
311+  8B83              ;	22/01/23
312+  8B83              ;
313+  8B83              ;	E="1". Hemos cambiado de cuadrante.
314+  8B83              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8B83              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8B83
317+  8B83
318+  8B83              Modificaccionne
319+  8B83
320+  8B83 3A B2 85     	ld a,(Cuad_objeto)
321+  8B86 FE 02        	cp 2
322+  8B88 CC 6B 8B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8B8B DC 6B 8B         call c,Modifica_Pos_actual
324+  8B8E C8           	ret z
325+  8B8F CD 77 8B         call Modifica_Pos_actual2
326+  8B92 C9               ret
327+  8B93
328+  8B93              ; *************************************************************************************************************************************************************************************************
329+  8B93              ;
330+  8B93              ;	13/8/22
331+  8B93              ;
332+  8B93              ;	Inicializacion
333+  8B93              ;
334+  8B93              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8B93              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8B93              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8B93              ;
338+  8B93              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8B93              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8B93              ;	_ desaparece/aparece.
341+  8B93
342+  8B93              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8B93              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8B93              ;
345+  8B93              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8B93              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8B93              ; 		   [E] ="0"
348+  8B93
349+  8B93              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8B93
351+  8B93 CD 98 8F     Inicializacion call calcula_tercio
352+  8B96 28 36        	jr z,primit
353+  8B98 E6 02        	and 2
354+  8B9A 20 07        	jr nz,segmit
355+  8B9C 7D           	ld a,l
356+  8B9D FE 7F        	cp $7f
357+  8B9F 38 2D        	jr c,primit
358+  8BA1 28 2B        	jr z,primit
359+  8BA3 CD 00 8C     segmit call column
360+  8BA6 38 13        	jr c,tercuad
361+  8BA8 3E 04        cuarcuad ld a,4
362+  8BAA 32 B2 85     	ld (Cuad_objeto),a
363+  8BAD 21 20 48     	ld hl,$4820
364+  8BB0 22 D5 85     	ld (Limite_horizontal),hl
365+  8BB3 21 D7 85     	ld hl,Limite_vertical
366+  8BB6 36 0D        	ld (hl),$0d
367+  8BB8 08           	ex af,af
368+  8BB9 18 3C        	jr 1F
369+  8BBB              tercuad
370+  8BBB 3E 03        	ld a,3
371+  8BBD 32 B2 85     	ld (Cuad_objeto),a
372+  8BC0 21 20 48     	ld hl,$4820
373+  8BC3 22 D5 85     	ld (Limite_horizontal),hl
374+  8BC6 21 D7 85     	ld hl,Limite_vertical
375+  8BC9 36 12        	ld (hl),$12
376+  8BCB 08           	ex af,af
377+  8BCC 18 29        	jr 1F
378+  8BCE CD 00 8C     primit call column
379+  8BD1 38 13        	jr c, primcuad
380+  8BD3              segcuad
381+  8BD3 3E 02        	ld a,2
382+  8BD5 32 B2 85     	ld (Cuad_objeto),a
383+  8BD8 21 C0 4F     	ld hl,$4fc0
384+  8BDB 22 D5 85     	ld (Limite_horizontal),hl
385+  8BDE 21 D7 85     	ld hl,Limite_vertical
386+  8BE1 36 0D        	ld (hl),$0d
387+  8BE3 08           	ex af,af
388+  8BE4 18 11        	jr 1F
389+  8BE6              primcuad
390+  8BE6 3E 01        	ld a,1
391+  8BE8 32 B2 85     	ld (Cuad_objeto),a
392+  8BEB 21 C0 4F     	ld hl,$4fc0
393+  8BEE 22 D5 85     	ld (Limite_horizontal),hl
394+  8BF1 21 D7 85     	ld hl,Limite_vertical
395+  8BF4 36 12        	ld (hl),$12
396+  8BF6 08           	ex af,af
397+  8BF7 CD CA 92     1 call Genera_coordenadas
398+  8BFA 21 CB 85     	ld hl,Ctrl_0
399+  8BFD CB EE        	set 5,(hl)
400+  8BFF C9           	ret
401+  8C00
402+  8C00              ; ------------------------------------------------------------------------------------------------------------------
403+  8C00
404+  8C00              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8C00              ;
406+  8C00              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8C00
408+  8C00 7D           column ld a,l
409+  8C01 E6 1F        	and $1f
410+  8C03 FE 10         	cp $10
411+  8C05 C9            	ret
412+  8C06
413+  8C06              ; --------------------------------------------------------------------------------------------------------------------
414+  8C06              ;
415+  8C06              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8C06              ;
417+  8C06              ; 14/12/22
418+  8C06              ;
419+  8C06              ;	Modifica: A y BC.
420+  8C06
421+  8C06 3A B2 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8C09 E6 01        	and 1
423+  8C0B 28 17        	jr z,1F
424+  8C0D
425+  8C0D              ; Nos encontramos en la parte izquierda de la pantalla
426+  8C0D
427+  8C0D 3A A4 85     	ld a,(Coordenada_X)
428+  8C10 47           	ld b,a
429+  8C11 04           	inc b											; (Coordenada_X)+1 en B.
430+  8C12 79           	ld a,c
431+  8C13 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8C14 38 08        	jr c,2F
433+  8C16 47           	ld b,a
434+  8C17 79           	ld a,c
435+  8C18 90           	sub b
436+  8C19 32 D4 85     	ld (Columnas),a
437+  8C1C 18 1B        	jr 4F
438+  8C1E 79           2 ld a,c
439+  8C1F 32 D4 85     	ld (Columnas),a
440+  8C22 18 15        	jr 4F
441+  8C24
442+  8C24              ; Nos encontramos en la parte derecha de la pantalla.
443+  8C24
444+  8C24 3A A4 85     1 ld a,(Coordenada_X)
445+  8C27 81           	add c
446+  8C28 3D           	dec a
447+  8C29 D6 1F        	sub $1f
448+  8C2B 38 08        	jr c,3F
449+  8C2D 47           	ld b,a
450+  8C2E 79           	ld a,c
451+  8C2F 90           	sub b
452+  8C30 32 D4 85     	ld (Columnas),a
453+  8C33 18 04        	jr 4F
454+  8C35 79           3 ld a,c
455+  8C36 32 D4 85     	ld (Columnas),a
456+  8C39 D9           4 exx
457+  8C3A 4F           	ld c,a
458+  8C3B D9           	exx
459+  8C3C C9            ret
460+  8C3D
461+  8C3D              ; --------------------------------------------------------------------------------------------------------------------
462+  8C3D              ;
463+  8C3D              ; 7/1/23
464+  8C3D              ;
465+  8C3D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8C3D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8C3D              ;
468+  8C3D              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8C3D              ;	DESTRUYE: HL,B Y A.
470+  8C3D
471+  8C3D 3A B2 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8C40 FE 02        	cp 2
473+  8C42 38 18        	jr c,1F
474+  8C44 28 16        	jr z,1F
475+  8C46 E6 01        	and 1
476+  8C48 28 0D        	jr z,3F
477+  8C4A
478+  8C4A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8C4A
480+  8C4A CD 86 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8C4D
482+  8C4D 7D           9 ld a,l
483+  8C4E E6 1F        	and $1f
484+  8C50 28 2A        	jr z,7F
485+  8C52 2B           	dec hl
486+  8C53 10 F8        	djnz 9B
487+  8C55 18 25        	jr 7F
488+  8C57
489+  8C57              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8C57
491+  8C57 2A A0 85     3 ld hl,(Posicion_actual)
492+  8C5A 18 20        	jr 7F
493+  8C5C
494+  8C5C 28 14        1 jr z,2F
495+  8C5E
496+  8C5E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8C5E
498+  8C5E CD 86 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8C61 7D           4 ld a,l
500+  8C62 E6 1F        	and $1f
501+  8C64 28 03        	jr z,6F
502+  8C66 2B           	dec hl
503+  8C67 10 F8        	djnz 4B
504+  8C69 06 0F        6 ld b,15
505+  8C6B CD E7 8C     5 call PreviousScan
506+  8C6E 10 FB        	djnz 5B
507+  8C70 18 0A        	jr 7F
508+  8C72
509+  8C72              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8C72
511+  8C72 CD 86 8C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8C75 06 0F        	ld b,15
513+  8C77 CD E7 8C     8 call PreviousScan
514+  8C7A 10 FB        	djnz 8B
515+  8C7C
516+  8C7C E5           7 push hl
517+  8C7D DD E1        	pop ix
518+  8C7F
519+  8C7F 2A A2 85     	ld hl,(Puntero_objeto)
520+  8C82 E5           	push hl
521+  8C83 FD E1        	pop iy
522+  8C85
523+  8C85 C9           	ret
524+  8C86
525+  8C86              ; --------------------------------------------------------------------------------------------------------------------
526+  8C86              ;
527+  8C86              ;	2/1/23
528+  8C86              ;
529+  8C86              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8C86              ;
531+  8C86              ;	Tras esta rutina tenemos:
532+  8C86              ;
533+  8C86              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8C86              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8C86              ;
536+  8C86              ;	DESTRUYE!!!!! HL,B y A.
537+  8C86
538+  8C86 2A A0 85     Operandos ld hl,(Posicion_actual)
539+  8C89 3A D4 85     	ld a,(Columnas)
540+  8C8C 3D           	dec a
541+  8C8D 20 01        	jr nz,1F
542+  8C8F 3C           	inc a
543+  8C90 47           1 ld b,a
544+  8C91 C9           	ret
545+  8C92
546+  8C92              ; --------------------------------------------------------------------------------------------------------------------
547+  8C92              ;
548+  8C92              ;	3/1/23
549+  8C92              ;
550+  8C92              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8C92              ;
552+  8C92              ;	Destruye: A,B,HL y DE.
553+  8C92
554+  8C92              Define_rutina_de_impresion
555+  8C92
556+  8C92 3A 9F 85     	ld a,(Columns)
557+  8C95 47           	ld b,a
558+  8C96 3A D4 85     	ld a,(Columnas)
559+  8C99 B8           	cp b
560+  8C9A 20 0D        	jr nz,2f
561+  8C9C
562+  8C9C              ;	La entidad se imprime entera.
563+  8C9C
564+  8C9C 21 68 8D     	ld hl, Indice_entidades_completas
565+  8C9F E6 01        	and 1
566+  8CA1 28 02        	jr z,1F
567+  8CA3
568+  8CA3 23           	inc hl
569+  8CA4 23           	inc hl
570+  8CA5
571+  8CA5 CD 9E 87     1 call Extrae_address
572+  8CA8 C9           	ret		;	ret
573+  8CA9
574+  8CA9              ;	La entidad no se imprime entera en pantalla.
575+  8CA9
576+  8CA9 3A B2 85     2 ld a,(Cuad_objeto)
577+  8CAC E6 01        	and 1
578+  8CAE 28 17        	jr z,3F
579+  8CB0
580+  8CB0              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8CB0
582+  8CB0 21 6C 8D     	ld hl, Indice_entidades_incompletas_izquierda
583+  8CB3 3A 9F 85     4 ld a,(Columns)
584+  8CB6 E6 01        	and 1
585+  8CB8 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8CBA
587+  8CBA 23           	inc hl
588+  8CBB 23           	inc hl
589+  8CBC
590+  8CBC 3A D4 85     	ld a,(Columnas)
591+  8CBF E6 01        	and 1
592+  8CC1 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8CC3
594+  8CC3 23           	inc hl
595+  8CC4 23           	inc hl
596+  8CC5
597+  8CC5 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8CC7
599+  8CC7 21 72 8D     3 ld hl, Indice_entidades_incompletas_derecha
600+  8CCA 18 E7        	jr 4B
601+  8CCC
602+  8CCC              ; --------------------------------------------------------------------------------------------------------------------
603+  8CCC              ;
604+  8CCC              ;	Prepara_draw
605+  8CCC              ;
606+  8CCC              ;	Es una rutina de carga.
607+  8CCC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8CCC              ;
609+  8CCC              ;	FUNCIONAMIENTO:
610+  8CCC              ;
611+  8CCC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8CCC              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8CCC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8CCC              ;
615+  8CCC              ;	DESTRUYE:
616+  8CCC              ;
617+  8CCC              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8CCC
619+  8CCC 21 9E 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8CCF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8CD0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8CD1 4E           	ld c,(hl)
623+  8CD2 2A A0 85     	ld hl,(Posicion_actual)
624+  8CD5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8CD7 C9           	ret
626+  8CD8
627+  8CD8              ;----------------------------------------------------------------------------------------------------------------
628+  8CD8              ;
629+  8CD8              ;	5/08/22
630+  8CD8              ;
631+  8CD8              ;   NextScan.
632+  8CD8              ;
633+  8CD8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8CD8              ;
635+  8CD8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8CD8              ;
637+  8CD8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8CD8              ;
639+  8CD8              ;       DESTRUIDOS: AF y HL !!!
640+  8CD8              ;
641+  8CD8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8CD8              ;
643+  8CD8
644+  8CD8 24           NextScan inc h          ; Incrementamos el scanline.
645+  8CD9 7C               ld a,h
646+  8CDA E6 07            and 7
647+  8CDC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8CDD
649+  8CDD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8CDE C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8CE0 6F               ld l,a
652+  8CE1 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8CE2
654+  8CE2 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8CE3 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8CE5 67               ld h,a
657+  8CE6 C9               ret
658+  8CE7
659+  8CE7              ;----------------------------------------------------------------------------------------------------------------
660+  8CE7              ;
661+  8CE7              ;	5/08/22
662+  8CE7              ;
663+  8CE7              ;   PreviousScan.
664+  8CE7              ;
665+  8CE7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8CE7              ;
667+  8CE7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8CE7              ;
669+  8CE7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8CE7              ;
671+  8CE7              ;       DESTRUIDOS: AF y HL !!!
672+  8CE7              ;
673+  8CE7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8CE7              ;
675+  8CE7
676+  8CE7 7C           PreviousScan ld a,h
677+  8CE8 25               dec h               ; Dec H.
678+  8CE9 E6 07            and 7
679+  8CEB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8CEC
681+  8CEC 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8CED D6 20            sub $20             ; Vamos a comprobarlo...
683+  8CEF 6F               ld l,a
684+  8CF0 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8CF1
686+  8CF1 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8CF2 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8CF4 67               ld h,a
689+  8CF5 C9               ret
690+  8CF6
691+  8CF6              ; -----------------------------------------------------------------------------------
692+  8CF6              ;
693+  8CF6              ;	28/2/23
694+  8CF6              ;
695+  8CF6              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8CF6              ;	Extrae fotos de Album_de_fotos.
697+  8CF6
698+  8CF6 3A E0 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8CF9 A7           	and a
700+  8CFA C8           	ret z
701+  8CFB ED 73 E1 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8CFF 31 00 70     	ld sp,Album_de_fotos
703+  8D02
704+  8D02 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8D04 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8D05 D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8D06
708+  8D06 ED 73 E3 85  	ld (Stack_2),sp
709+  8D0A ED 7B E1 85  	ld sp,(Stack)
710+  8D0E
711+  8D0E              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8D0E
713+  8D0E 3E CD        	ld a,$cd
714+  8D10 32 18 8D     	ld (Imprime),a
715+  8D13 EB           	ex de,hl
716+  8D14 22 19 8D     	ld (Imprime+1),hl
717+  8D17 EB           	ex de,hl
718+  8D18
719+  8D18              ; Ejecuta la llamada:	CALL $xx,xx
720+  8D18
721+  8D18 00 00 00     Imprime db 0,0,0
722+  8D1B
723+  8D1B 3A E0 85     	ld a,(Numero_de_malotes)
724+  8D1E 3D           	dec a
725+  8D1F 28 09        	jr z,1F
726+  8D21 32 E0 85      	ld (Numero_de_malotes),a
727+  8D24
728+  8D24 ED 7B E3 85   	ld sp,(Stack_2)
729+  8D28 18 D8        	jr 2B
730+  8D2A
731+  8D2A AF           1 xor a
732+  8D2B 32 E3 85     	ld (Stack_2),a
733+  8D2E C9           	ret
734+  8D2F
735+  8D2F              ; -----------------------------------------------------------------------------------
736+  8D2F              ;
737+  8D2F              ;	28/2/23
738+  8D2F              ;
739+  8D2F              ;	Rutina principal de pintado de disparos.
740+  8D2F
741+  8D2F              Extrae_foto_registros_disparos
742+  8D2F
743+  8D2F 3A E9 85     	ld a,(Numero_de_disparotes)
744+  8D32 A7           	and a
745+  8D33 C8           	ret z
746+  8D34 ED 73 E1 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8D38 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8D3B
749+  8D3B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8D3D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8D3E D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8D3F
753+  8D3F ED 73 E3 85  	ld (Stack_2),sp
754+  8D43 ED 7B E1 85  	ld sp,(Stack)
755+  8D47
756+  8D47              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8D47
758+  8D47 3E CD        	ld a,$cd
759+  8D49 32 51 8D     	ld (Imprime2),a
760+  8D4C EB           	ex de,hl
761+  8D4D 22 52 8D     	ld (Imprime2+1),hl
762+  8D50 EB           	ex de,hl
763+  8D51
764+  8D51              ; Ejecuta la llamada:	CALL $xx,xx
765+  8D51
766+  8D51 00 00 00     Imprime2 db 0,0,0
767+  8D54
768+  8D54 3A E9 85     	ld a,(Numero_de_disparotes)
769+  8D57 3D           	dec a
770+  8D58 28 09        	jr z,1F
771+  8D5A 32 E9 85      	ld (Numero_de_disparotes),a
772+  8D5D
773+  8D5D ED 7B E3 85  	ld sp,(Stack_2)
774+  8D61 18 D8        	jr 2B
775+  8D63
776+  8D63 AF           1 xor a
777+  8D64 32 E3 85     	ld (Stack_2),a
778+  8D67 C9           	ret
779+  8D68
# file closed: Draw_XOR.asm
868   8D68              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8D68              ;   índices de Rutinas de impresión.
  2+  8D68
  3+  8D68 78 8D        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8D6A A5 8D            defw Pinta_Amadeus_3x2
  5+  8D6C
  6+  8D6C FB 8D        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8D6E 9B 8E            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8D70 4F 8E            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8D72
 10+  8D72 25 8E        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8D74 29 8F            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8D76 DD 8E            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8D78
 14+  8D78
 15+  8D78              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8D78              ;
 17+  8D78              ;   12/12/22
 18+  8D78              ;
 19+  8D78              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8D78              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8D78              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8D78              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8D78              ;
 24+  8D78              ;   Modifica: DE y HL.
 25+  8D78
 26+  8D78 ED 73 E1 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8D7C FD F9        	ld sp,iy
 28+  8D7E 06 10            ld b,16
 29+  8D80 D1           1 pop de
 30+  8D81 7B               ld a,e
 31+  8D82 AE               xor (hl)
 32+  8D83 77           	ld (hl),a
 33+  8D84 23           	inc hl
 34+  8D85 7A               ld a,d
 35+  8D86 AE               xor (hl)
 36+  8D87 77           	ld (hl),a
 37+  8D88 2B           	dec hl
 38+  8D89 24           	inc h
 39+  8D8A 7C               ld a,h
 40+  8D8B E6 07            and 7
 41+  8D8D 20 0A            jr nz,2F
 42+  8D8F 7D               ld a,l
 43+  8D90 C6 20            add a,$20
 44+  8D92 6F               ld l,a
 45+  8D93 38 04            jr c,2F
 46+  8D95 7C               ld a,h
 47+  8D96 D6 08            sub 8
 48+  8D98 67               ld h,a
 49+  8D99 7C           2 ld a,h
 50+  8D9A FE 58            cp $58
 51+  8D9C 28 02            jr z,3F
 52+  8D9E 10 E0            djnz 1B
 53+  8DA0 ED 7B E1 85  3 ld sp,(Stack)
 54+  8DA4 C9           	ret
 55+  8DA5
 56+  8DA5 ED 73 E1 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8DA9 FD F9        	ld sp,iy
 58+  8DAB 06 08            ld b,8
 59+  8DAD D1           1 pop de
 60+  8DAE 7B               ld a,e
 61+  8DAF AE               xor (hl)
 62+  8DB0 77           	ld (hl),a
 63+  8DB1 23           	inc hl
 64+  8DB2 7A               ld a,d
 65+  8DB3 AE               xor (hl)
 66+  8DB4 77           	ld (hl),a
 67+  8DB5 23           	inc hl
 68+  8DB6 D1           	pop de
 69+  8DB7 7B               ld a,e
 70+  8DB8 AE               xor (hl)
 71+  8DB9 77           	ld (hl),a
 72+  8DBA 2B           	dec hl
 73+  8DBB 2B           	dec hl
 74+  8DBC 24           	inc h
 75+  8DBD 7C               ld a,h
 76+  8DBE E6 07            and 7
 77+  8DC0 20 0A            jr nz,2F
 78+  8DC2 7D               ld a,l
 79+  8DC3 C6 20            add a,$20
 80+  8DC5 6F               ld l,a
 81+  8DC6 38 04            jr c,2F
 82+  8DC8 7C               ld a,h
 83+  8DC9 D6 08            sub 8
 84+  8DCB 67               ld h,a
 85+  8DCC 7C           2 ld a,h
 86+  8DCD FE 58            cp $58
 87+  8DCF 28 25            jr z,4F
 88+  8DD1 7A               ld a,d
 89+  8DD2 AE               xor (hl)
 90+  8DD3 77               ld (hl),a
 91+  8DD4 D1           	pop de
 92+  8DD5 23           	inc hl
 93+  8DD6 7B               ld a,e
 94+  8DD7 AE               xor (hl)
 95+  8DD8 77           	ld (hl),a
 96+  8DD9 23           	inc hl
 97+  8DDA 7A               ld a,d
 98+  8DDB AE               xor (hl)
 99+  8DDC 77           	ld (hl),a
100+  8DDD 2B           	dec hl
101+  8DDE 2B           	dec hl
102+  8DDF 24           	inc h
103+  8DE0 7C               ld a,h
104+  8DE1 E6 07            and 7
105+  8DE3 20 0A            jr nz,3F
106+  8DE5 7D               ld a,l
107+  8DE6 C6 20            add a,$20
108+  8DE8 6F               ld l,a
109+  8DE9 38 04            jr c,3F
110+  8DEB 7C               ld a,h
111+  8DEC D6 08            sub 8
112+  8DEE 67               ld h,a
113+  8DEF 7C           3 ld a,h
114+  8DF0 FE 58            cp $58
115+  8DF2 28 02            jr z,4F
116+  8DF4 10 B7            djnz 1B
117+  8DF6 ED 7B E1 85  4 ld sp,(Stack)
118+  8DFA C9           	ret
119+  8DFB
120+  8DFB              ; ---------------------------------------------------
121+  8DFB
122+  8DFB ED 73 E1 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8DFF FD F9        	ld sp,iy
124+  8E01
125+  8E01              ; >>>
126+  8E01
127+  8E01 06 10            ld b,16
128+  8E03 D1           1 pop de
129+  8E04 7A           	ld a,d
130+  8E05 AE           	xor (hl)
131+  8E06 77           	ld (hl),a
132+  8E07 24           	inc h
133+  8E08 7C               ld a,h
134+  8E09 E6 07            and 7
135+  8E0B 20 0C            jr nz,2F
136+  8E0D 7D               ld a,l
137+  8E0E C6 20            add a,$20
138+  8E10 6F               ld l,a
139+  8E11 38 06            jr c,2F
140+  8E13 7C               ld a,h
141+  8E14 D6 08            sub 8
142+  8E16 67               ld h,a
143+  8E17 18 00            jr 2F
144+  8E19 7C           2 ld a,h
145+  8E1A FE 58            cp $58
146+  8E1C 28 02            jr z,3F
147+  8E1E 10 E3            djnz 1B
148+  8E20 ED 7B E1 85  3 ld sp,(Stack)
149+  8E24 C9           	ret
150+  8E25
151+  8E25 ED 73 E1 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8E29 FD F9        	ld sp,iy
153+  8E2B
154+  8E2B              ; >>>
155+  8E2B
156+  8E2B 06 10            ld b,16
157+  8E2D D1           1 pop de
158+  8E2E 7B           	ld a,e
159+  8E2F AE           	xor (hl)
160+  8E30 77           	ld (hl),a
161+  8E31 24           	inc h
162+  8E32 7C               ld a,h
163+  8E33 E6 07            and 7
164+  8E35 20 0C            jr nz,2F
165+  8E37 7D               ld a,l
166+  8E38 C6 20            add a,$20
167+  8E3A 6F               ld l,a
168+  8E3B 38 06            jr c,2F
169+  8E3D 7C               ld a,h
170+  8E3E D6 08            sub 8
171+  8E40 67               ld h,a
172+  8E41 18 00            jr 2F
173+  8E43 7C           2 ld a,h
174+  8E44 FE 58            cp $58
175+  8E46 28 02            jr z,3F
176+  8E48 10 E3            djnz 1B
177+  8E4A ED 7B E1 85  3 ld sp,(Stack)
178+  8E4E C9           	ret
179+  8E4F
180+  8E4F              ; ---------------------------------------------------
181+  8E4F
182+  8E4F ED 73 E1 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8E53 FD F9        	ld sp,iy
184+  8E55 06 08            ld b,8
185+  8E57 D1           1 pop de
186+  8E58 7A           	ld a,d
187+  8E59 AE           	xor (hl)
188+  8E5A 77           	ld (hl),a
189+  8E5B 23           	inc hl
190+  8E5C D1           	pop de
191+  8E5D 7B           	ld a,e
192+  8E5E AE           	xor (hl)
193+  8E5F 77           	ld (hl),a
194+  8E60 2B           	dec hl
195+  8E61 24            	inc h
196+  8E62 7C               ld a,h
197+  8E63 E6 07            and 7
198+  8E65 20 0A            jr nz,2F
199+  8E67 7D               ld a,l
200+  8E68 C6 20            add a,$20
201+  8E6A 6F               ld l,a
202+  8E6B 38 04            jr c,2F
203+  8E6D 7C               ld a,h
204+  8E6E D6 08            sub 8
205+  8E70 67               ld h,a
206+  8E71 7C           2 ld a,h
207+  8E72 FE 58            cp $58
208+  8E74 28 20            jr z,4F
209+  8E76 D1               pop de
210+  8E77 7B           	ld a,e
211+  8E78 AE           	xor (hl)
212+  8E79 77           	ld (hl),a
213+  8E7A 23           	inc hl
214+  8E7B 7A           	ld a,d
215+  8E7C AE           	xor (hl)
216+  8E7D 77           	ld (hl),a
217+  8E7E 2B           	dec hl
218+  8E7F 24           	inc h
219+  8E80 7C               ld a,h
220+  8E81 E6 07            and 7
221+  8E83 20 0A            jr nz,3F
222+  8E85 7D               ld a,l
223+  8E86 C6 20            add a,$20
224+  8E88 6F               ld l,a
225+  8E89 38 04            jr c,3F
226+  8E8B 7C               ld a,h
227+  8E8C D6 08            sub 8
228+  8E8E 67               ld h,a
229+  8E8F 7C           3 ld a,h
230+  8E90 FE 58            cp $58
231+  8E92 28 02            jr z,4F
232+  8E94 10 C1            djnz 1B
233+  8E96 ED 7B E1 85  4 ld sp,(Stack)
234+  8E9A C9           	ret
235+  8E9B
236+  8E9B ED 73 E1 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8E9F FD F9        	ld sp,iy
238+  8EA1 06 08            ld b,8
239+  8EA3 D1           1 pop de
240+  8EA4 D1           	pop de
241+  8EA5 7B           	ld a,e
242+  8EA6 AE           	xor (hl)
243+  8EA7 77           	ld (hl),a
244+  8EA8 24            	inc h
245+  8EA9 7C               ld a,h
246+  8EAA E6 07            and 7
247+  8EAC 20 0A            jr nz,2F
248+  8EAE 7D               ld a,l
249+  8EAF C6 20            add a,$20
250+  8EB1 6F               ld l,a
251+  8EB2 38 04            jr c,2F
252+  8EB4 7C               ld a,h
253+  8EB5 D6 08            sub 8
254+  8EB7 67               ld h,a
255+  8EB8 7C           2 ld a,h
256+  8EB9 FE 58            cp $58
257+  8EBB 28 1B            jr z,4F
258+  8EBD D1               pop de
259+  8EBE 7A           	ld a,d
260+  8EBF AE           	xor (hl)
261+  8EC0 77           	ld (hl),a
262+  8EC1 24           	inc h
263+  8EC2 7C               ld a,h
264+  8EC3 E6 07            and 7
265+  8EC5 20 0A            jr nz,3F
266+  8EC7 7D               ld a,l
267+  8EC8 C6 20            add a,$20
268+  8ECA 6F               ld l,a
269+  8ECB 38 04            jr c,3F
270+  8ECD 7C               ld a,h
271+  8ECE D6 08            sub 8
272+  8ED0 67               ld h,a
273+  8ED1 7C           3 ld a,h
274+  8ED2 FE 58            cp $58
275+  8ED4 28 02            jr z,4F
276+  8ED6 10 CB            djnz 1B
277+  8ED8 ED 7B E1 85  4 ld sp,(Stack)
278+  8EDC C9           	ret
279+  8EDD
280+  8EDD ED 73 E1 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  8EE1 FD F9        	ld sp,iy
282+  8EE3 06 08            ld b,8
283+  8EE5 D1           1 pop de
284+  8EE6 7B           	ld a,e
285+  8EE7 AE           	xor (hl)
286+  8EE8 77           	ld (hl),a
287+  8EE9 23           	inc hl
288+  8EEA 7A           	ld a,d
289+  8EEB AE           	xor (hl)
290+  8EEC 77           	ld (hl),a
291+  8EED 2B           	dec hl
292+  8EEE 24             	inc h
293+  8EEF 7C               ld a,h
294+  8EF0 E6 07            and 7
295+  8EF2 20 0A            jr nz,2F
296+  8EF4 7D               ld a,l
297+  8EF5 C6 20            add a,$20
298+  8EF7 6F               ld l,a
299+  8EF8 38 04            jr c,2F
300+  8EFA 7C               ld a,h
301+  8EFB D6 08            sub 8
302+  8EFD 67               ld h,a
303+  8EFE 7C           2 ld a,h
304+  8EFF FE 58            cp $58
305+  8F01 28 21            jr z,4F
306+  8F03 D1               pop de
307+  8F04 7A           	ld a,d
308+  8F05 AE           	xor (hl)
309+  8F06 77           	ld (hl),a
310+  8F07 23           	inc hl
311+  8F08 D1               pop de
312+  8F09 7B           	ld a,e
313+  8F0A AE           	xor (hl)
314+  8F0B 77           	ld (hl),a
315+  8F0C 2B           	dec hl
316+  8F0D 24           	inc h
317+  8F0E 7C               ld a,h
318+  8F0F E6 07            and 7
319+  8F11 20 0A            jr nz,3F
320+  8F13 7D               ld a,l
321+  8F14 C6 20            add a,$20
322+  8F16 6F               ld l,a
323+  8F17 38 04            jr c,3F
324+  8F19 7C               ld a,h
325+  8F1A D6 08            sub 8
326+  8F1C 67               ld h,a
327+  8F1D 7C           3 ld a,h
328+  8F1E FE 58            cp $58
329+  8F20 28 02            jr z,4F
330+  8F22 10 C1            djnz 1B
331+  8F24 ED 7B E1 85  4 ld sp,(Stack)
332+  8F28 C9           	ret
333+  8F29
334+  8F29 ED 73 E1 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  8F2D FD F9        	ld sp,iy
336+  8F2F 06 08            ld b,8
337+  8F31 D1           1 pop de
338+  8F32 7B           	ld a,e
339+  8F33 AE           	xor (hl)
340+  8F34 77           	ld (hl),a
341+  8F35 24            	inc h
342+  8F36 7C               ld a,h
343+  8F37 E6 07            and 7
344+  8F39 20 0A            jr nz,2F
345+  8F3B 7D               ld a,l
346+  8F3C C6 20            add a,$20
347+  8F3E 6F               ld l,a
348+  8F3F 38 04            jr c,2F
349+  8F41 7C               ld a,h
350+  8F42 D6 08            sub 8
351+  8F44 67               ld h,a
352+  8F45 7C           2 ld a,h
353+  8F46 FE 58            cp $58
354+  8F48 28 1C            jr z,4F
355+  8F4A D1               pop de
356+  8F4B 7A           	ld a,d
357+  8F4C AE           	xor (hl)
358+  8F4D 77           	ld (hl),a
359+  8F4E 24           	inc h
360+  8F4F 7C               ld a,h
361+  8F50 E6 07            and 7
362+  8F52 20 0A            jr nz,3F
363+  8F54 7D               ld a,l
364+  8F55 C6 20            add a,$20
365+  8F57 6F               ld l,a
366+  8F58 38 04            jr c,3F
367+  8F5A 7C               ld a,h
368+  8F5B D6 08            sub 8
369+  8F5D 67               ld h,a
370+  8F5E 7C           3 ld a,h
371+  8F5F FE 58            cp $58
372+  8F61 28 03            jr z,4F
373+  8F63 D1               pop de
374+  8F64 10 CB            djnz 1B
375+  8F66 ED 7B E1 85  4 ld sp,(Stack)
376+  8F6A C9           	ret
377+  8F6B
378+  8F6B              ; ---------------------------------------------------
379+  8F6B              ;
380+  8F6B              ;   27/02/23
381+  8F6B              ;
382+  8F6B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  8F6B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  8F6B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  8F6B
386+  8F6B ED 73 E1 85  Pinta_Disparo ld (Stack),sp
387+  8F6F FD F9            ld sp,iy
388+  8F71 06 02            ld b,2
389+  8F73 D1           1 pop de
390+  8F74 7B               ld a,e
391+  8F75 AE               xor (hl)
392+  8F76 77               ld (hl),a
393+  8F77 23               inc hl
394+  8F78 7A               ld a,d
395+  8F79 AE               xor (hl)
396+  8F7A 77               ld (hl),a
397+  8F7B 2B               dec hl
398+  8F7C 24               inc h
399+  8F7D 7C               ld a,h
400+  8F7E E6 07            and 7
401+  8F80 20 0A            jr nz,2F
402+  8F82 7D               ld a,l
403+  8F83 C6 20            add a,$20
404+  8F85 6F               ld l,a
405+  8F86 38 04            jr c,2F
406+  8F88 7C               ld a,h
407+  8F89 D6 08            sub 8
408+  8F8B 67               ld h,a
409+  8F8C 7C           2 ld a,h
410+  8F8D FE 58            cp $58
411+  8F8F 28 02            jr z,3F
412+  8F91 10 E0            djnz 1B
413+  8F93 ED 7B E1 85  3 ld sp,(Stack)
414+  8F97 C9               ret
415+  8F98
# file closed: Rutinas_de_impresion_sprites.asm
869   8F98              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  8F98              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  8F98              ;
  3+  8F98              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  8F98              ;
  5+  8F98              ; *****************************************************************************************************************************************************************************************
  6+  8F98              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  8F98
  8+  8F98 7C           calcula_tercio ld a,h
  9+  8F99 E6 18        	and $18
 10+  8F9B CB 2F        	sra a
 11+  8F9D CB 2F        	sra a
 12+  8F9F CB 2F        	sra a
 13+  8FA1 C9           	ret
 14+  8FA2
# file closed: calcula_tercio.asm
870   8FA2              	include "Cls.asm"
# file opened: Cls.asm
  1+  8FA2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  8FA2              ;
  3+  8FA2              ;
  4+  8FA2              ;	CLS.
  5+  8FA2              ;
  6+  8FA2              ;	Limpia la pantalla y define sus atributos.
  7+  8FA2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  8FA2              ;
  9+  8FA2              ;	COLORES: 0 ..... NEGRO
 10+  8FA2              ;    		 1 ..... AZUL
 11+  8FA2              ; 			 2 ..... ROJO
 12+  8FA2              ;			 3 ..... MAGENTA
 13+  8FA2              ; 			 4 ..... VERDE
 14+  8FA2              ; 			 5 ..... CIAN
 15+  8FA2              ;			 6 ..... AMARILLO
 16+  8FA2              ; 			 7 ..... BLANCO
 17+  8FA2              ;
 18+  8FA2              ;	INPUT: A contiene los atributos de pantalla.
 19+  8FA2              ;
 20+  8FA2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  8FA2
 22+  8FA2
 23+  8FA2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  8FA5 11 01 40     	LD DE,$4001
 25+  8FA8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  8FAB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  8FAD ED B0        	LDIR
 28+  8FAF 01 FF 02     	LD BC,767
 29+  8FB2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  8FB3 ED B0        	LDIR
 31+  8FB5 C9           	ret
 32+  8FB6
# file closed: Cls.asm
871   8FB6              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  8FB6              ; ******************************************************************************************************************************************************************************************
  2+  8FB6              ;
  3+  8FB6              ;   22/01/23
  4+  8FB6              ;
  5+  8FB6              ;	Mov_down
  6+  8FB6              ;
  7+  8FB6              ; 	Mueve el Sprite X px hacia abajo.
  8+  8FB6              ;
  9+  8FB6              ;
 10+  8FB6 21 CB 85     Mov_down ld hl,Ctrl_0
 11+  8FB9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  8FBB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  8FBB              ; 																	; _ en el caso de que no lo haya.
 14+  8FBB 3A B6 85     	ld a,(Vel_down)
 15+  8FBE 47           	ld b,a
 16+  8FBF 2A A0 85         ld hl,(Posicion_actual)
 17+  8FC2 CD 98 8F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  8FC5 E6 02        	and 2
 19+  8FC7 28 0F        	jr z,1F
 20+  8FC9
 21+  8FC9              ; Nos encontramos en el último tercio de pantalla.
 22+  8FC9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  8FC9
 24+  8FC9 7C           	ld a,h
 25+  8FCA FE 57        	cp $57
 26+  8FCC 20 0A        	jr nz,1F
 27+  8FCE 7D           	ld a,l
 28+  8FCF C6 20        	add $20
 29+  8FD1 30 05        	jr nc,1F
 30+  8FD3
 31+  8FD3              ; ------------------------------
 32+  8FD3 CD B4 92     	call Reaparece_arriba
 33+  8FD6              ;	call Reinicio
 34+  8FD6              ; ------------------------------
 35+  8FD6 18 08        	jr 3F
 36+  8FD8 CD D8 8C     1 call NextScan
 37+  8FDB 22 A0 85     	ld (Posicion_actual),hl
 38+  8FDE 10 E2            djnz 2B
 39+  8FE0 CD CA 92     3 call Genera_coordenadas
 40+  8FE3 C9           	ret
 41+  8FE4
 42+  8FE4
 43+  8FE4              ; ******************************************************************************************************************************************************************************************
 44+  8FE4              ;
 45+  8FE4              ;   22/01/23
 46+  8FE4              ;
 47+  8FE4              ;	Mov_up
 48+  8FE4              ;
 49+  8FE4              ; 	Mueve el Sprite hacia arriba.
 50+  8FE4              ;
 51+  8FE4              ;
 52+  8FE4 21 CB 85     Mov_up ld hl,Ctrl_0
 53+  8FE7 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  8FE9              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  8FE9              ; 																		; _ en el caso de que no lo haya.
 56+  8FE9 3A B5 85     	ld a,(Vel_up)
 57+  8FEC 47           	ld b,a
 58+  8FED 2A A0 85     	ld hl,(Posicion_actual)
 59+  8FF0 CD 98 8F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  8FF3 A7           	and a
 61+  8FF4 20 10        	jr nz,1F
 62+  8FF6
 63+  8FF6              ; Nos encontramos en el 1er tercio de pantalla.
 64+  8FF6              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  8FF6
 66+  8FF6 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  8FF7 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  8FF9 20 0B            jr nz,1F
 69+  8FFB 7D               ld a,l
 70+  8FFC D6 20            sub $20
 71+  8FFE 30 06            jr nc,1F
 72+  9000 25               dec h
 73+  9001
 74+  9001              ; -----------------------------
 75+  9001 CD A4 92         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  9004              ;	call Reinicio
 77+  9004              ; -----------------------------
 78+  9004
 79+  9004 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  9006 CD E7 8C     1 call PreviousScan
 81+  9009 22 A0 85     	ld (Posicion_actual),hl
 82+  900C 10 E2            djnz 3B
 83+  900E CD CA 92     2 call Genera_coordenadas
 84+  9011 C9           	ret
 85+  9012
 86+  9012              ; ******************************************************************************************************************************************************************************************
 87+  9012              ;
 88+  9012              ;	19/10/22
 89+  9012              ;
 90+  9012              ;	Mov_right.
 91+  9012              ;
 92+  9012              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  9012              ;
 94+  9012
 95+  9012 21 CB 85     Mov_right ld hl,Ctrl_0
 96+  9015 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  9017              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  9017              ; 																	; _ en el caso de que no lo haya.
 99+  9017 3A CB 85     	ld a,(Ctrl_0)
100+  901A CB 77        	bit 6,a
101+  901C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  901E
103+  901E CD 52 92     	call Stop_Amadeus_right
104+  9021 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  9022 18 4D        	jr 8F
106+  9024
107+  9024 3A A4 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  9027 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  9029 20 46        	jr nz,8F
110+  902B
111+  902B 3A A6 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  902E A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  902F 28 40        	jr z,8F
114+  9031
115+  9031              ; ---------- ---------- ----------
116+  9031              ;
117+  9031              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  9031
119+  9031 3A B4 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  9034 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  9036 28 11        	jr z,1F
122+  9038 38 06        	jr c,6F
123+  903A FE 04        	cp 4
124+  903C 28 14        	jr z,7F
125+  903E 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9040
127+  9040              ; ---------- ---------- ----------
128+  9040              ;
129+  9040              ; Perfiles de velocidad
130+  9040              ;
131+  9040
132+  9040 3A A6 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  9043 FE FE        	cp $fe
134+  9045 20 2A        	jr nz,8F
135+  9047 18 10        	jr 3F
136+  9049 3A A6 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  904C FE FD        	cp $fd
138+  904E 20 21        	jr nz,8F
139+  9050 18 07        	jr 3F
140+  9052 3A A6 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  9055 FE FB        	cp $fb
142+  9057 20 18        	jr nz,8F
143+  9059
144+  9059              ; ---------- ---------- ----------
145+  9059
146+  9059              3
147+  9059 CD 92 92     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  905C              ;	call Reinicio
149+  905C
150+  905C              ; ---------- ---------- ----------
151+  905C              ;
152+  905C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  905C
154+  905C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  905E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  905F CD 78 90     	call DESPLZ_DER
157+  9062 C1           	pop bc
158+  9063 10 F9        	djnz 5B
159+  9065 2A A0 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  9068 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  9069 22 A0 85     	ld (Posicion_actual),hl
162+  906C CD CA 92     	call Genera_coordenadas
163+  906F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  9071
165+  9071              ; ---------- ---------- ----------
166+  9071
167+  9071 2A A0 85     8 ld hl,(Posicion_actual)
168+  9074 CD 78 90     	call DESPLZ_DER
169+  9077 C9           2 ret
170+  9078
171+  9078              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  9078              ;
173+  9078              ;	22/9/22
174+  9078              ;
175+  9078
176+  9078 CD 87 90     DESPLZ_DER call Desplaza_derecha
177+  907B CD D3 90         call modifica_parametros_1er_DESPLZ_2
178+  907E CD FC 90         call Ciclo_completo
179+  9081 21 CB 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  9084 CB FE        	set 7,(hl)
181+  9086 C9           	ret
182+  9087
183+  9087              ; ******************************************************************************************************************************************************************************************
184+  9087              ;	15/02/23
185+  9087              ;
186+  9087
187+  9087 3A B4 85     Desplaza_derecha ld a,(Vel_right)
188+  908A 47           	ld b,a
189+  908B 2A AC 85     	ld hl,(Puntero_DESPLZ_der)
190+  908E 23           1 inc hl
191+  908F 23           	inc hl
192+  9090 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  9092 22 AC 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  9095 CD 9E 87     	call Extrae_address
195+  9098 22 A2 85     	ld (Puntero_objeto),hl
196+  909B
197+  909B              ; Modifica (Puntero_DESPLZ_izq).
198+  909B
199+  909B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  909B              ; Cuántos movimientos hemos hecho ??
201+  909B              ; DE contiene (Puntero_DESPLZ_der).
202+  909B
203+  909B 2A A8 85     7 ld hl,(Indice_Sprite_der)
204+  909E EB           	ex de,hl
205+  909F A7           	and a
206+  90A0 ED 52        	sbc hl,de
207+  90A2 CB 3D        	srl l
208+  90A4 3E 08        6 ld a,8
209+  90A6 95           	sub l
210+  90A7 30 1E        	jr nc,3F
211+  90A9
212+  90A9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  90A9              ; B="0".
214+  90A9
215+  90A9 04           4 inc b
216+  90AA 3C           	inc a
217+  90AB 20 FC        	jr nz,4B
218+  90AD 78           	ld a,b
219+  90AE 08           	ex af,af
220+  90AF 2A A8 85     	ld hl,(Indice_Sprite_der)
221+  90B2 23           5 inc hl
222+  90B3 23           	inc hl
223+  90B4 10 FC        	djnz 5B
224+  90B6 22 AC 85     	ld (Puntero_DESPLZ_der),hl
225+  90B9 CD 9E 87     	call Extrae_address
226+  90BC 22 A2 85     	ld (Puntero_objeto),hl
227+  90BF
228+  90BF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  90BF              ; _(Posicion_actual).
230+  90BF
231+  90BF 21 A0 85     	ld hl,Posicion_actual
232+  90C2 34           	inc (hl)
233+  90C3 08               ex af,af
234+  90C4 6F           	ld l,a
235+  90C5 18 DD        	jr 6B
236+  90C7
237+  90C7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  90C7
239+  90C7 47           3 ld b,a
240+  90C8 2A AA 85     	ld hl,(Indice_Sprite_izq)
241+  90CB 23           2 inc hl
242+  90CC 23           	inc hl
243+  90CD 10 FC        	djnz 2B
244+  90CF 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
245+  90D2 C9           8 ret
246+  90D3
247+  90D3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  90D3              ;
249+  90D3              ;	24/7/22
250+  90D3              ;
251+  90D3              ;	modifica_parametros_1er_DESPLZ_2
252+  90D3              ;
253+  90D3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  90D3              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  90D3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  90D3
257+  90D3 3A A6 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  90D6 A7           	and a
259+  90D7 20 1F        	jr nz,1F
260+  90D9 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  90DB 32 A6 85         ld (CTRL_DESPLZ),a
262+  90DE
263+  90DE 21 9F 85     	ld hl,Columns
264+  90E1 34           	inc (hl)
265+  90E2 3A B2 85     	ld a,(Cuad_objeto)
266+  90E5 E6 01        	and 1
267+  90E7 28 0F        	jr z,1F
268+  90E9 2A A0 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  90EC 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  90ED 22 A0 85     	ld (Posicion_actual),hl
271+  90F0 CD CA 92     	call Genera_coordenadas
272+  90F3 CD 5E 92     	call Inc_CTRL_DESPLZ
273+  90F6 18 03        	jr 2F
274+  90F8 CD 5E 92     1 call Inc_CTRL_DESPLZ
275+  90FB C9           2 ret
276+  90FC
277+  90FC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  90FC              ;
279+  90FC              ;	24/7/22
280+  90FC              ;
281+  90FC              ;	Ciclo_completo.
282+  90FC              ;
283+  90FC              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  90FC              ;
285+  90FC              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  90FC              ; 	Decrementamos (Columns).
287+  90FC              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  90FC              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  90FC
290+  90FC
291+  90FC 3A A6 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  90FF FE FF        	cp $ff
293+  9101 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  9103 E6 F0        	and $f0
295+  9105 20 28        	jr nz,3F
296+  9107
297+  9107              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  9107
299+  9107 3A A6 85     	ld a,(CTRL_DESPLZ)
300+  910A 47           	ld b,a
301+  910B 3E F8        	ld a,$f8
302+  910D 80           	add b
303+  910E 32 A6 85     	ld (CTRL_DESPLZ),a
304+  9111 18 1C        	jr 3F
305+  9113 21 9F 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  9116 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  9117 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  9118 32 A6 85     	ld (CTRL_DESPLZ),a
309+  911B 3A B2 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  911E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9120 20 0A        	jr nz,2F
312+  9122 2A A0 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  9125 23           	inc hl
314+  9126 22 A0 85     	ld (Posicion_actual),hl
315+  9129 CD CA 92     	call Genera_coordenadas
316+  912C
317+  912C              ; Inicia el puntero de Sprite.
318+  912C
319+  912C CD B5 87     2 call Inicia_puntero_objeto_der
320+  912F C9           3 ret
321+  9130
322+  9130              ; ******************************************************************************************************************************************************************************************
323+  9130              ;
324+  9130              ;	15/02/23
325+  9130              ;
326+  9130              ;	Mov_left.
327+  9130              ;
328+  9130              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9130              ;
330+  9130              Mov_left
331+  9130
332+  9130 21 CB 85     	ld hl,Ctrl_0
333+  9133 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  9135              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  9135              ; 																	; _ en el caso de que no lo haya.
336+  9135 3A CB 85     	ld a,(Ctrl_0)
337+  9138 CB 77        	bit 6,a
338+  913A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  913C
340+  913C CD 58 92     	call Stop_Amadeus_left
341+  913F C8           	ret z
342+  9140 20 50        	jr nz,8F
343+  9142
344+  9142 3A A4 85     11 ld a,(Coordenada_X)
345+  9145 A7           	and a
346+  9146 20 4A        	jr nz,8F
347+  9148
348+  9148 3A A6 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  914B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  914C 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  914E
352+  914E              ; ---------- ---------- ----------
353+  914E
354+  914E 3A B3 85     	ld a,(Vel_left)
355+  9151 FE 02        	cp 2
356+  9153 28 0F        	jr z,1F
357+  9155 38 04        	jr c,6F
358+  9157 FE 04        	cp 4
359+  9159 28 12        	jr z,7F
360+  915B
361+  915B              ; ---------- ---------- ----------
362+  915B
363+  915B 3A A6 85     6 ld a,(CTRL_DESPLZ)
364+  915E FE F9        	cp $f9
365+  9160 20 30        	jr nz,8F
366+  9162 18 10        	jr 4F
367+  9164 3A A6 85     1 ld a,(CTRL_DESPLZ)
368+  9167 FE FA        	cp $fa
369+  9169 20 27        	jr nz,8F
370+  916B 18 07        	jr 4F
371+  916D 3A A6 85     7 ld a,(CTRL_DESPLZ)
372+  9170 FE FC        	cp $fc
373+  9172 20 1E        	jr nz,8F
374+  9174
375+  9174              ; ---------- ---------- ----------
376+  9174
377+  9174              4
378+  9174 CD 80 92     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  9177              ;	call Reinicio
380+  9177
381+  9177              ; ---------- ---------- ----------
382+  9177
383+  9177 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  9179 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  917A
386+  917A 2A AA 85     	ld hl,(Indice_Sprite_izq)
387+  917D 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
388+  9180
389+  9180 CD 99 91     	call DESPLZ_IZQ
390+  9183 C1           	pop bc
391+  9184 10 F3        	djnz 5B
392+  9186 2A A0 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  9189 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  918A 22 A0 85     	ld (Posicion_actual),hl
395+  918D CD CA 92     	call Genera_coordenadas
396+  9190 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  9192
398+  9192              ; ---------- ---------- ----------
399+  9192              ; Movemos, no hay recolocación.
400+  9192
401+  9192 2A A0 85     8 ld hl,(Posicion_actual)
402+  9195 CD 99 91     	call DESPLZ_IZQ
403+  9198 C9           2 ret
404+  9199
405+  9199              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  9199              ;
407+  9199              ;	22/9/22
408+  9199
409+  9199              DESPLZ_IZQ
410+  9199
411+  9199 CD A8 91     	call Desplaza_izquierda
412+  919C CD F4 91         call modifica_parametros_1er_DESPLZ
413+  919F CD 1C 92     	call Ciclo_completo_2
414+  91A2 21 CB 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  91A5 CB BE        	res 7,(hl)
416+  91A7 C9           	ret
417+  91A8
418+  91A8              Desplaza_izquierda
419+  91A8
420+  91A8 3A B3 85     	ld a,(Vel_left)
421+  91AB 47           	ld b,a
422+  91AC 2A AE 85     	ld hl,(Puntero_DESPLZ_izq)
423+  91AF 23           1 inc hl
424+  91B0 23           	inc hl
425+  91B1 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  91B3 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
427+  91B6 CD 9E 87     	call Extrae_address
428+  91B9 22 A2 85     	ld (Puntero_objeto),hl
429+  91BC
430+  91BC              ; Modifica (Puntero_DESPLZ_der).
431+  91BC
432+  91BC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  91BC              ; Cuántos movimientos hemos hecho ??
434+  91BC              ; DE contiene (Puntero_DESPLZ_izq).
435+  91BC
436+  91BC 2A AA 85     7 ld hl,(Indice_Sprite_izq)
437+  91BF EB           	ex de,hl
438+  91C0 A7           	and a
439+  91C1 ED 52        	sbc hl,de
440+  91C3 CB 3D        	srl l
441+  91C5 3E 08        6 ld a,8
442+  91C7 95           	sub l
443+  91C8 30 1E        	jr nc,3F
444+  91CA
445+  91CA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  91CA              ; B="0".
447+  91CA
448+  91CA 04           4 inc b
449+  91CB 3C           	inc a
450+  91CC 20 FC        	jr nz,4B
451+  91CE 78           	ld a,b
452+  91CF 08           	ex af,af
453+  91D0 2A AA 85     	ld hl,(Indice_Sprite_izq)
454+  91D3 23           5 inc hl
455+  91D4 23           	inc hl
456+  91D5 10 FC        	djnz 5B
457+  91D7 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
458+  91DA CD 9E 87     	call Extrae_address
459+  91DD 22 A2 85     	ld (Puntero_objeto),hl
460+  91E0
461+  91E0              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  91E0              ; _(Posicion_actual).
463+  91E0
464+  91E0 21 A0 85     	ld hl,Posicion_actual
465+  91E3 35           	dec (hl)
466+  91E4 08           	ex af,af
467+  91E5 6F           	ld l,a
468+  91E6 18 DD        	jr 6B
469+  91E8
470+  91E8              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  91E8
472+  91E8 47           3 ld b,a
473+  91E9 2A A8 85     	ld hl,(Indice_Sprite_der)
474+  91EC 23           2 inc hl
475+  91ED 23           	inc hl
476+  91EE 10 FC        	djnz 2B
477+  91F0 22 AC 85     	ld (Puntero_DESPLZ_der),hl
478+  91F3 C9           8 ret
479+  91F4
480+  91F4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  91F4              ;
482+  91F4              ;	modifica_parametros_1er_DESPLZ
483+  91F4              ;
484+  91F4              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  91F4              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  91F4              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  91F4
488+  91F4 3A A6 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  91F7 A7           	and a
490+  91F8 20 1E        	jr nz,1F
491+  91FA 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  91FB 32 A6 85         ld (CTRL_DESPLZ),a
493+  91FE 21 9F 85     	ld hl,Columns
494+  9201 34           	inc (hl)
495+  9202 3A B2 85     	ld a,(Cuad_objeto)
496+  9205 E6 01        	and 1
497+  9207 20 0F        	jr nz,1F
498+  9209 2A A0 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  920C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  920D 22 A0 85     	ld (Posicion_actual),hl
501+  9210 CD CA 92     	call Genera_coordenadas
502+  9213 CD 6F 92     	call Dec_CTRL_DESPLZ
503+  9216 18 03        	jr 2F
504+  9218 CD 6F 92     1 call Dec_CTRL_DESPLZ
505+  921B C9           2 ret
506+  921C
507+  921C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  921C
509+  921C 3A A6 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  921F FE F7        	cp $f7
511+  9221 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  9223 30 2C        	jr nc,3F
513+  9225
514+  9225              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  9225
516+  9225 06 00        	ld b,0
517+  9227 04           4 inc b
518+  9228 3C           	inc a
519+  9229 FE F7        	cp $f7
520+  922B 20 FA        	jr nz,4B
521+  922D 3E FF        	ld a,$ff
522+  922F 90           	sub b
523+  9230 32 A6 85     	ld (CTRL_DESPLZ),a
524+  9233 18 1C        	jr 3F
525+  9235
526+  9235              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  9235
528+  9235 21 9F 85     1 ld hl,Columns
529+  9238 35           	dec (hl)
530+  9239 AF           	xor a
531+  923A 32 A6 85     	ld (CTRL_DESPLZ),a
532+  923D 3A B2 85     	ld a,(Cuad_objeto)
533+  9240 E6 01        	and 1
534+  9242 28 0A        	jr z,2F
535+  9244 2A A0 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  9247 2B           	dec hl
537+  9248 22 A0 85     	ld (Posicion_actual),hl
538+  924B CD CA 92     	call Genera_coordenadas
539+  924E
540+  924E              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  924E
542+  924E CD C8 87     2 call Inicia_puntero_objeto_izq
543+  9251 C9           3 ret
544+  9252
545+  9252              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  9252              ;
547+  9252              ;	19/10/22
548+  9252              ;
549+  9252              ;	(cp 29) para un Amadeus de 3 Columns.
550+  9252              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  9252
552+  9252 3A A4 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  9255 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  9257 C9           	ret
555+  9258
556+  9258              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  9258              ;
558+  9258              ;	19/10/22
559+  9258              ;
560+  9258              ;	(cp 2) para un Amadeus de 3 Columns.
561+  9258              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  9258
563+  9258 3A A4 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  925B FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  925D C9           	ret
566+  925E
567+  925E              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  925E              ;
569+  925E              ;	24/7/22
570+  925E              ;
571+  925E              ;	Inc_CTRL_DESPLZ
572+  925E              ;
573+  925E              ;
574+  925E              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  925E
576+  925E 21 A6 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  9261 3A B4 85     	ld a,(Vel_right)
578+  9264 A7           	and a
579+  9265 28 06        	jr z,1F
580+  9267 47           	ld b,a
581+  9268 34           3 inc (hl)
582+  9269 10 FD        	djnz 3B
583+  926B 18 01        	jr 2F
584+  926D 34           1 inc (hl)
585+  926E C9           2 ret
586+  926F
587+  926F              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  926F              ;
589+  926F              ;	5/2/23
590+  926F              ;
591+  926F              ;	Dec_CTRL_DESPLZ
592+  926F              ;
593+  926F              ;
594+  926F              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  926F
596+  926F 21 A6 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  9272 3A B3 85     	ld a,(Vel_left)
598+  9275 A7           	and a
599+  9276 28 06        	jr z,1F
600+  9278 47           	ld b,a
601+  9279 35           3 dec (hl)
602+  927A 10 FD        	djnz 3B
603+  927C 18 01        	jr 2F
604+  927E 35           1 dec (hl)
605+  927F C9           2 ret
606+  9280
607+  9280              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  9280
609+  9280 2A A0 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  9283 01 1F 00     	ld bc,31
611+  9286 A7           	and a
612+  9287 ED 4A        	adc hl,bc
613+  9289 22 A0 85     	ld (Posicion_actual),hl
614+  928C 21 CB 85     	ld hl,Ctrl_0														; $xxx1
615+  928F CB C6        	set 0,(hl)
616+  9291 C9           	ret
617+  9292
618+  9292              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  9292
620+  9292 2A A0 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  9295 01 1F 00     	ld bc,31
622+  9298 A7           	and a
623+  9299 ED 42        	sbc hl,bc
624+  929B 22 A0 85     	ld (Posicion_actual),hl 											; $xx1x
625+  929E 21 CB 85     	ld hl,Ctrl_0
626+  92A1 CB CE        	set 1,(hl)
627+  92A3 C9           	ret
628+  92A4
629+  92A4              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  92A4
631+  92A4 24           Reaparece_abajo inc h
632+  92A5 01 E0 17     	ld bc,$17e0
633+  92A8 A7           	and a
634+  92A9 ED 4A        	adc hl,bc
635+  92AB 22 A0 85     	ld (Posicion_actual),hl
636+  92AE 21 CB 85     	ld hl,Ctrl_0
637+  92B1 CB D6        	set 2,(hl)
638+  92B3 C9           	ret
639+  92B4
640+  92B4              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  92B4
642+  92B4 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  92B7 A7           	and a
644+  92B8 ED 42        	sbc hl,bc
645+  92BA 22 A0 85     	ld (Posicion_actual),hl
646+  92BD 21 CB 85     	ld hl,Ctrl_0
647+  92C0 CB DE        	set 3,(hl)
648+  92C2 C9           	ret
649+  92C3
650+  92C3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  92C3
652+  92C3 2A B0 85     Reinicio ld hl,(Posicion_inicio)
653+  92C6 22 A0 85     	ld (Posicion_actual),hl
654+  92C9 C9           	ret
# file closed: Direcciones.asm
872   92CA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  92CA              ;	12/12/22
  2+  92CA              ;
  3+  92CA              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  92CA              ;	Fila superior "0", Columna izquierda "0".
  5+  92CA              ;
  6+  92CA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  92CA              ;
  8+  92CA              ;	Modifica: A
  9+  92CA
 10+  92CA C5           Genera_coordenadas push bc
 11+  92CB E5           	push hl
 12+  92CC 2A A0 85     	ld hl,(Posicion_actual)
 13+  92CF 7D           	ld a,l
 14+  92D0 E6 1F        	and $1f
 15+  92D2 32 A4 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  92D5 CD 98 8F     	call calcula_tercio
 17+  92D8 47           	ld b,a
 18+  92D9 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  92DA 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  92DC 7D           	ld a,l
 21+  92DD E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  92DF 28 05        	jr z,2F
 23+  92E1 0C           1 inc c
 24+  92E2 D6 20        	sub 32
 25+  92E4 20 FB        	jr nz,1B
 26+  92E6 0C           2 inc c
 27+  92E7 04           	inc b
 28+  92E8 05           	dec b
 29+  92E9 28 04        	jr z,3F
 30+  92EB 3E E0        	ld a,$e0
 31+  92ED 10 F2        	djnz 1B
 32+  92EF 79           3 ld a,c
 33+  92F0 3D           	dec a
 34+  92F1 32 A5 85     	ld (Coordenada_y),a
 35+  92F4 E1           	pop hl
 36+  92F5 C1           	pop bc
 37+  92F6 C9           	ret
# file closed: Genera_coordenadas.asm
873   92F7              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  92F7
  2+  92F7
  3+  92F7              ;   11/8/22
  4+  92F7              ;
  5+  92F7              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  92F7              ;
  7+  92F7              ;   Mov_obj.asm
  8+  92F7              ;
  9+  92F7              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  92F7              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  92F7              ;
 12+  92F7              ;   Codificación:
 13+  92F7              ;
 14+  92F7              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  92F7
 16+  92F7              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  92F7
 18+  92F7 02 40 00     Arriba db 2,%01000000,0
 19+  92FA 02 80 00     Abajo db 2,%10000000,0
 20+  92FD 02 20 00     Derecha db 2,%00100000,0
 21+  9300 02 10 00     Izquierda db 2,%00010000,0
 22+  9303 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  9307 60 42 60 40
 22+  930B 63
 23+  930C 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9310 22 A3 80 A0
 24+  9314 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  9318 84 A0 83 A0
 25+  931C 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9320 80 A3 22 A0
 26+  9324 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  9328 40 60 42 60
 27+  932C 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9330 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  9334 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  9338 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  933C 84
 31+  933D 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  9341 84 00
 32+  9343 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  9347 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  934B 1F 1F 1F 1F
 34+  934F 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  9353 1F 1F 1F 1F
 34+  9357 1F
 35+  9358 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  935C 2F 2F 2F 2F
 35+  9360 2F 2F
 36+  9362 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  9366 2F 2F 00
 37+  9369
 38+  9369
 39+  9369              ; ----- ----- ----- ----- -----
 40+  9369
 41+  9369 47 93        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  936B 43 93        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  936D 00 93        Indice_mov_Izquierda defw Izquierda
 44+  936F FD 92        Indice_mov_Derecha defw Derecha
 45+  9371 FA 92        Indice_mov_Abajo defw Abajo
 46+  9373 F7 92        Indice_mov_Arriba defw Arriba
 47+  9375 34 93        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  9377 38 93        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  9379 30 93        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  937B 3D 93        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  937D 03 93        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  937F              ; ----- ----- ----- ----- -----
 53+  937F
 54+  937F 3A D1 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  9382 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  9383 28 02            jr z,1F
 57+  9385 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  9387 3A D2 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  938A C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  938C 32 D2 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  938F              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  938F 2A CF 85         ld hl,(Puntero_mov)
 63+  9392 7E               ld a,(hl)
 64+  9393 32 D1 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  9396 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  9397 22 CF 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  939A
 68+  939A 3A D3 85     Decoder ld a,(Repetimos_db)
 69+  939D A7               and a
 70+  939E 20 0C            jr nz,12F
 71+  93A0 2A CF 85         ld hl,(Puntero_mov)
 72+  93A3 7E               ld a,(hl)
 73+  93A4 A7               and a
 74+  93A5 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  93A7 E6 0F            and $0f
 76+  93A9 32 D3 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  93AC              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  93AC 2A CF 85     12 ld hl,(Puntero_mov)
 79+  93AF CB 7E            bit 7,(hl)
 80+  93B1 28 03            jr z,2F
 81+  93B3 CD B6 8F         call Mov_down
 82+  93B6 2A CF 85     2 ld hl, (Puntero_mov)
 83+  93B9 CB 76            bit 6,(hl)
 84+  93BB 28 03            jr z,3F
 85+  93BD CD E4 8F         call Mov_up
 86+  93C0 2A CF 85     3 ld hl, (Puntero_mov)
 87+  93C3 CB 6E            bit 5,(hl)
 88+  93C5 28 03            jr z,4F
 89+  93C7 CD 12 90         call Mov_right
 90+  93CA 2A CF 85     4 ld hl, (Puntero_mov)
 91+  93CD CB 66            bit 4,(hl)
 92+  93CF 28 03            jr z,5F
 93+  93D1 CD 30 91         call Mov_left
 94+  93D4
 95+  93D4              ; ---------- --------- --------- ---------- ----------
 96+  93D4
 97+  93D4 3A D3 85     5 ld a,(Repetimos_db)
 98+  93D7 A7               and a
 99+  93D8 28 07            jr z,6F
100+  93DA 3D               dec a
101+  93DB 32 D3 85         ld (Repetimos_db),a
102+  93DE 28 01            jr z,6f
103+  93E0 C9           11 ret
104+  93E1 21 D1 85     6 ld hl,Contador_db_mov
105+  93E4 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  93E5 2A CF 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  93E8 23               inc hl
108+  93E9 22 CF 85         ld (Puntero_mov),hl
109+  93EC 18 F2            jr 11B
110+  93EE 2A CD 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  93F1 3A D2 85         ld a,(Incrementa_puntero)
112+  93F4 47               ld b,a
113+  93F5 23           8 inc hl
114+  93F6 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  93F8 5E               ld e,(hl)
116+  93F9 23               inc hl
117+  93FA 56               ld d,(hl)
118+  93FB EB               ex de,hl
119+  93FC 22 CF 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  93FF 18 DF            jr 11B
121+  9401
122+  9401              ; ---------- --------- --------- ---------- ----------
123+  9401              ;
124+  9401              ;   11/8/22
125+  9401              ;
126+  9401              ;   Prepara_Puntero_mov
127+  9401
128+  9401 E5           Prepara_Puntero_mov push hl
129+  9402 D5               push de
130+  9403 2A CD 85         ld hl,(Puntero_indice_mov)
131+  9406 5E               ld e,(hl)
132+  9407 23               inc hl
133+  9408 56               ld d,(hl)
134+  9409 EB               ex de,hl
135+  940A 22 CF 85         ld (Puntero_mov),hl
136+  940D D1               pop de
137+  940E E1               pop hl
138+  940F C9               ret
139+  9410
140+  9410              ; ---------- --------- --------- ---------- ----------
141+  9410              ;
142+  9410              ;   11/8/22
143+  9410              ;
144+  9410              ;   Reinicia_el_movimiento
145+  9410
146+  9410 CD 01 94     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  9413 AF               xor a
148+  9414 32 D1 85         ld (Contador_db_mov),a
149+  9417 32 D2 85         ld (Incrementa_puntero),a
150+  941A
151+  941A              ;    jr $
152+  941A
153+  941A C3 7F 93         jp Movimiento
154+  941D C9               ret
155+  941E              ; ---------- --------- --------- ---------- ----------
156+  941E
157+  941E
158+  941E
159+  941E
160+  941E
161+  941E
162+  941E
163+  941E
164+  941E
165+  941E
166+  941E
167+  941E
168+  941E
169+  941E
170+  941E
171+  941E
172+  941E
173+  941E
# file closed: Patrones_de_mov.asm
874   941E              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  941E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  941E              ;
  3+  941E              ;	3/1/23
  4+  941E              ;
  5+  941E              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  941E
  7+  941E              ;	ADC HL,SP	LD (addr),SP
  8+  941E              ;	ADD HL,SP	LD SP,(addr)
  9+  941E              ;	ADD IX,SP	LD SP,nn
 10+  941E              ; 	ADD IY,SP	LD SP,HL
 11+  941E              ;				LD SP,IX
 12+  941E              ;	DEC SP		LD SP,IY
 13+  941E
 14+  941E              ;	EX (SP),HL
 15+  941E              ;	EX (SP),IX
 16+  941E              ;	EX (SP),IY
 17+  941E
 18+  941E              ;	INC SP
 19+  941E
 20+  941E
 21+  941E                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 E1 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D8 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A E7 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6 18 03            jr 4F
 43+  7FB8
 44+  7FB8 2A E5 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 45+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 46+  7FBD
 47+  7FBD D1           1 pop de
 48+  7FBE 73               ld (hl),e
 49+  7FBF 23               inc hl
 50+  7FC0 72               ld (hl),d
 51+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 52+  7FC2 10 F9            djnz 1B
 53+  7FC4
 54+  7FC4 A7               and a
 55+  7FC5 28 05            jr z,5F
 56+  7FC7
 57+  7FC7 22 E7 85         ld (Stack_snapshot_disparos),hl
 58+  7FCA 18 03            jr 6F
 59+  7FCC
 60+  7FCC 22 E5 85     5 ld (Stack_snapshot),hl
 61+  7FCF ED 7B E1 85  6 ld sp,(Stack)
 62+  7FD3
 63+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 64+  7FD4
 65+  7FD4
# file closed: Guarda_foto_registros.asm
875   7FD4
876   7FD4              	SAVESNA "Pruebas.sna", START
877   7FD4
878   7FD4
879   7FD4
# file closed: Banco_de_pruebas.asm
